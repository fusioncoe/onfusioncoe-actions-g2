name: "process-service-repo-dispatch"
description: "Process OnFusionCoe service repo dispatch operation"

on:
  workflow_call:
    inputs:
      cicd_app_id:
        description: "The application id to authenticate with."
        required: false

      cicd_tenant_id:
        description: "Tenant id if using app-id & client secret to authenticate."
        required: false

      cicd_cloud:
        description: 'Cloud instance to authenticate with. Default: Public. See "pac auth create help" for valid cloud instance names'
        required: false

      # secrets:

      cicd_sp_client_secret:
        description: "The client secret to authenticate with. Required if authenticating with app-id."
        required: false

runs:
  using: "composite"
  steps:
    - name: authentication
      shell: pwsh
      run: |
        echo "Handling dispatch operation ${{github.event.action}}"
        # get-content ${{ github.event_path }} 

        $TenantId = "${{ inputs.cicd_tenant_id }}"
        $AppClientId="${{ inputs.cicd_app_id }}"        
        $ClientSecret ="${{ inputs.cicd_sp_client_secret }}"
        $InvokeUrl = "https://login.microsoftonline.com/$TenantId/oauth2/v2.0/token"
          
        $RequestBody = @{client_id=$AppClientId;client_secret=$ClientSecret;grant_type="client_credentials";scope="https://graph.microsoft.com/.default";}

        echo $InvokeUrl
        echo $RequestBody

        $OAuthResponse = Invoke-RestMethod -Method Post -Uri $InvokeUrl -Body $RequestBody
        $AccessToken = $OAuthResponse.access_token

        $AuthorizationHeader = "bearer $AccessToken"

        echo $AuthorizationHeader

        # echo "SPN_BEARER=$AuthorizationHeader" >> $GITHUB_ENV
        # echo "SPN_BEARER=$AuthorizationHeader" >> $GITHUB_OUTPUT

    - name: Checking Credentials
      shell: pwsh
      run: |
        echo "V1 Checking for bearer token: ${{env.SPN_BEARER}}"
        echo "V2 Checking for bearer token: $SPN_BEARER"

    - name: Checking Credentials v2
      shell: pwsh
      run: |
        echo "V2 Checking for bearer token: $env:SPN_BEARER"
