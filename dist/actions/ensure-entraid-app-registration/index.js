var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name3 in all)
    __defProp(target, name3, { get: all[name3], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// node_modules/@actions/core/lib/utils.js
var require_utils = __commonJS({
  "node_modules/@actions/core/lib/utils.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.toCommandProperties = exports2.toCommandValue = void 0;
    function toCommandValue(input) {
      if (input === null || input === void 0) {
        return "";
      } else if (typeof input === "string" || input instanceof String) {
        return input;
      }
      return JSON.stringify(input);
    }
    exports2.toCommandValue = toCommandValue;
    function toCommandProperties(annotationProperties) {
      if (!Object.keys(annotationProperties).length) {
        return {};
      }
      return {
        title: annotationProperties.title,
        file: annotationProperties.file,
        line: annotationProperties.startLine,
        endLine: annotationProperties.endLine,
        col: annotationProperties.startColumn,
        endColumn: annotationProperties.endColumn
      };
    }
    exports2.toCommandProperties = toCommandProperties;
  }
});

// node_modules/@actions/core/lib/command.js
var require_command = __commonJS({
  "node_modules/@actions/core/lib/command.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? (function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    }));
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? (function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.issue = exports2.issueCommand = void 0;
    var os = __importStar(require("os"));
    var utils_1 = require_utils();
    function issueCommand(command, properties, message) {
      const cmd = new Command(command, properties, message);
      process.stdout.write(cmd.toString() + os.EOL);
    }
    exports2.issueCommand = issueCommand;
    function issue(name3, message = "") {
      issueCommand(name3, {}, message);
    }
    exports2.issue = issue;
    var CMD_STRING = "::";
    var Command = class {
      constructor(command, properties, message) {
        if (!command) {
          command = "missing.command";
        }
        this.command = command;
        this.properties = properties;
        this.message = message;
      }
      toString() {
        let cmdStr = CMD_STRING + this.command;
        if (this.properties && Object.keys(this.properties).length > 0) {
          cmdStr += " ";
          let first = true;
          for (const key in this.properties) {
            if (this.properties.hasOwnProperty(key)) {
              const val = this.properties[key];
              if (val) {
                if (first) {
                  first = false;
                } else {
                  cmdStr += ",";
                }
                cmdStr += `${key}=${escapeProperty(val)}`;
              }
            }
          }
        }
        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;
        return cmdStr;
      }
    };
    function escapeData(s) {
      return (0, utils_1.toCommandValue)(s).replace(/%/g, "%25").replace(/\r/g, "%0D").replace(/\n/g, "%0A");
    }
    function escapeProperty(s) {
      return (0, utils_1.toCommandValue)(s).replace(/%/g, "%25").replace(/\r/g, "%0D").replace(/\n/g, "%0A").replace(/:/g, "%3A").replace(/,/g, "%2C");
    }
  }
});

// node_modules/@actions/core/lib/file-command.js
var require_file_command = __commonJS({
  "node_modules/@actions/core/lib/file-command.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? (function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    }));
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? (function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.prepareKeyValueMessage = exports2.issueFileCommand = void 0;
    var crypto5 = __importStar(require("crypto"));
    var fs2 = __importStar(require("fs"));
    var os = __importStar(require("os"));
    var utils_1 = require_utils();
    function issueFileCommand(command, message) {
      const filePath = process.env[`GITHUB_${command}`];
      if (!filePath) {
        throw new Error(`Unable to find environment variable for file command ${command}`);
      }
      if (!fs2.existsSync(filePath)) {
        throw new Error(`Missing file at path: ${filePath}`);
      }
      fs2.appendFileSync(filePath, `${(0, utils_1.toCommandValue)(message)}${os.EOL}`, {
        encoding: "utf8"
      });
    }
    exports2.issueFileCommand = issueFileCommand;
    function prepareKeyValueMessage(key, value) {
      const delimiter = `ghadelimiter_${crypto5.randomUUID()}`;
      const convertedValue = (0, utils_1.toCommandValue)(value);
      if (key.includes(delimiter)) {
        throw new Error(`Unexpected input: name should not contain the delimiter "${delimiter}"`);
      }
      if (convertedValue.includes(delimiter)) {
        throw new Error(`Unexpected input: value should not contain the delimiter "${delimiter}"`);
      }
      return `${key}<<${delimiter}${os.EOL}${convertedValue}${os.EOL}${delimiter}`;
    }
    exports2.prepareKeyValueMessage = prepareKeyValueMessage;
  }
});

// node_modules/@actions/http-client/lib/proxy.js
var require_proxy = __commonJS({
  "node_modules/@actions/http-client/lib/proxy.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.checkBypass = exports2.getProxyUrl = void 0;
    function getProxyUrl(reqUrl) {
      const usingSsl = reqUrl.protocol === "https:";
      if (checkBypass(reqUrl)) {
        return void 0;
      }
      const proxyVar = (() => {
        if (usingSsl) {
          return process.env["https_proxy"] || process.env["HTTPS_PROXY"];
        } else {
          return process.env["http_proxy"] || process.env["HTTP_PROXY"];
        }
      })();
      if (proxyVar) {
        try {
          return new DecodedURL(proxyVar);
        } catch (_a) {
          if (!proxyVar.startsWith("http://") && !proxyVar.startsWith("https://"))
            return new DecodedURL(`http://${proxyVar}`);
        }
      } else {
        return void 0;
      }
    }
    exports2.getProxyUrl = getProxyUrl;
    function checkBypass(reqUrl) {
      if (!reqUrl.hostname) {
        return false;
      }
      const reqHost = reqUrl.hostname;
      if (isLoopbackAddress(reqHost)) {
        return true;
      }
      const noProxy = process.env["no_proxy"] || process.env["NO_PROXY"] || "";
      if (!noProxy) {
        return false;
      }
      let reqPort;
      if (reqUrl.port) {
        reqPort = Number(reqUrl.port);
      } else if (reqUrl.protocol === "http:") {
        reqPort = 80;
      } else if (reqUrl.protocol === "https:") {
        reqPort = 443;
      }
      const upperReqHosts = [reqUrl.hostname.toUpperCase()];
      if (typeof reqPort === "number") {
        upperReqHosts.push(`${upperReqHosts[0]}:${reqPort}`);
      }
      for (const upperNoProxyItem of noProxy.split(",").map((x) => x.trim().toUpperCase()).filter((x) => x)) {
        if (upperNoProxyItem === "*" || upperReqHosts.some((x) => x === upperNoProxyItem || x.endsWith(`.${upperNoProxyItem}`) || upperNoProxyItem.startsWith(".") && x.endsWith(`${upperNoProxyItem}`))) {
          return true;
        }
      }
      return false;
    }
    exports2.checkBypass = checkBypass;
    function isLoopbackAddress(host) {
      const hostLower = host.toLowerCase();
      return hostLower === "localhost" || hostLower.startsWith("127.") || hostLower.startsWith("[::1]") || hostLower.startsWith("[0:0:0:0:0:0:0:1]");
    }
    var DecodedURL = class extends URL {
      constructor(url, base) {
        super(url, base);
        this._decodedUsername = decodeURIComponent(super.username);
        this._decodedPassword = decodeURIComponent(super.password);
      }
      get username() {
        return this._decodedUsername;
      }
      get password() {
        return this._decodedPassword;
      }
    };
  }
});

// node_modules/tunnel/lib/tunnel.js
var require_tunnel = __commonJS({
  "node_modules/tunnel/lib/tunnel.js"(exports2) {
    "use strict";
    var net = require("net");
    var tls = require("tls");
    var http2 = require("http");
    var https2 = require("https");
    var events = require("events");
    var assert = require("assert");
    var util = require("util");
    exports2.httpOverHttp = httpOverHttp;
    exports2.httpsOverHttp = httpsOverHttp;
    exports2.httpOverHttps = httpOverHttps;
    exports2.httpsOverHttps = httpsOverHttps;
    function httpOverHttp(options) {
      var agent = new TunnelingAgent(options);
      agent.request = http2.request;
      return agent;
    }
    function httpsOverHttp(options) {
      var agent = new TunnelingAgent(options);
      agent.request = http2.request;
      agent.createSocket = createSecureSocket;
      agent.defaultPort = 443;
      return agent;
    }
    function httpOverHttps(options) {
      var agent = new TunnelingAgent(options);
      agent.request = https2.request;
      return agent;
    }
    function httpsOverHttps(options) {
      var agent = new TunnelingAgent(options);
      agent.request = https2.request;
      agent.createSocket = createSecureSocket;
      agent.defaultPort = 443;
      return agent;
    }
    function TunnelingAgent(options) {
      var self2 = this;
      self2.options = options || {};
      self2.proxyOptions = self2.options.proxy || {};
      self2.maxSockets = self2.options.maxSockets || http2.Agent.defaultMaxSockets;
      self2.requests = [];
      self2.sockets = [];
      self2.on("free", function onFree(socket, host, port, localAddress) {
        var options2 = toOptions(host, port, localAddress);
        for (var i = 0, len = self2.requests.length; i < len; ++i) {
          var pending = self2.requests[i];
          if (pending.host === options2.host && pending.port === options2.port) {
            self2.requests.splice(i, 1);
            pending.request.onSocket(socket);
            return;
          }
        }
        socket.destroy();
        self2.removeSocket(socket);
      });
    }
    util.inherits(TunnelingAgent, events.EventEmitter);
    TunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {
      var self2 = this;
      var options = mergeOptions({ request: req }, self2.options, toOptions(host, port, localAddress));
      if (self2.sockets.length >= this.maxSockets) {
        self2.requests.push(options);
        return;
      }
      self2.createSocket(options, function(socket) {
        socket.on("free", onFree);
        socket.on("close", onCloseOrRemove);
        socket.on("agentRemove", onCloseOrRemove);
        req.onSocket(socket);
        function onFree() {
          self2.emit("free", socket, options);
        }
        function onCloseOrRemove(err) {
          self2.removeSocket(socket);
          socket.removeListener("free", onFree);
          socket.removeListener("close", onCloseOrRemove);
          socket.removeListener("agentRemove", onCloseOrRemove);
        }
      });
    };
    TunnelingAgent.prototype.createSocket = function createSocket(options, cb) {
      var self2 = this;
      var placeholder = {};
      self2.sockets.push(placeholder);
      var connectOptions = mergeOptions({}, self2.proxyOptions, {
        method: "CONNECT",
        path: options.host + ":" + options.port,
        agent: false,
        headers: {
          host: options.host + ":" + options.port
        }
      });
      if (options.localAddress) {
        connectOptions.localAddress = options.localAddress;
      }
      if (connectOptions.proxyAuth) {
        connectOptions.headers = connectOptions.headers || {};
        connectOptions.headers["Proxy-Authorization"] = "Basic " + new Buffer(connectOptions.proxyAuth).toString("base64");
      }
      debug("making CONNECT request");
      var connectReq = self2.request(connectOptions);
      connectReq.useChunkedEncodingByDefault = false;
      connectReq.once("response", onResponse);
      connectReq.once("upgrade", onUpgrade);
      connectReq.once("connect", onConnect);
      connectReq.once("error", onError);
      connectReq.end();
      function onResponse(res) {
        res.upgrade = true;
      }
      function onUpgrade(res, socket, head) {
        process.nextTick(function() {
          onConnect(res, socket, head);
        });
      }
      function onConnect(res, socket, head) {
        connectReq.removeAllListeners();
        socket.removeAllListeners();
        if (res.statusCode !== 200) {
          debug(
            "tunneling socket could not be established, statusCode=%d",
            res.statusCode
          );
          socket.destroy();
          var error = new Error("tunneling socket could not be established, statusCode=" + res.statusCode);
          error.code = "ECONNRESET";
          options.request.emit("error", error);
          self2.removeSocket(placeholder);
          return;
        }
        if (head.length > 0) {
          debug("got illegal response body from proxy");
          socket.destroy();
          var error = new Error("got illegal response body from proxy");
          error.code = "ECONNRESET";
          options.request.emit("error", error);
          self2.removeSocket(placeholder);
          return;
        }
        debug("tunneling connection has established");
        self2.sockets[self2.sockets.indexOf(placeholder)] = socket;
        return cb(socket);
      }
      function onError(cause) {
        connectReq.removeAllListeners();
        debug(
          "tunneling socket could not be established, cause=%s\n",
          cause.message,
          cause.stack
        );
        var error = new Error("tunneling socket could not be established, cause=" + cause.message);
        error.code = "ECONNRESET";
        options.request.emit("error", error);
        self2.removeSocket(placeholder);
      }
    };
    TunnelingAgent.prototype.removeSocket = function removeSocket(socket) {
      var pos = this.sockets.indexOf(socket);
      if (pos === -1) {
        return;
      }
      this.sockets.splice(pos, 1);
      var pending = this.requests.shift();
      if (pending) {
        this.createSocket(pending, function(socket2) {
          pending.request.onSocket(socket2);
        });
      }
    };
    function createSecureSocket(options, cb) {
      var self2 = this;
      TunnelingAgent.prototype.createSocket.call(self2, options, function(socket) {
        var hostHeader = options.request.getHeader("host");
        var tlsOptions = mergeOptions({}, self2.options, {
          socket,
          servername: hostHeader ? hostHeader.replace(/:.*$/, "") : options.host
        });
        var secureSocket = tls.connect(0, tlsOptions);
        self2.sockets[self2.sockets.indexOf(socket)] = secureSocket;
        cb(secureSocket);
      });
    }
    function toOptions(host, port, localAddress) {
      if (typeof host === "string") {
        return {
          host,
          port,
          localAddress
        };
      }
      return host;
    }
    function mergeOptions(target) {
      for (var i = 1, len = arguments.length; i < len; ++i) {
        var overrides = arguments[i];
        if (typeof overrides === "object") {
          var keys = Object.keys(overrides);
          for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {
            var k = keys[j];
            if (overrides[k] !== void 0) {
              target[k] = overrides[k];
            }
          }
        }
      }
      return target;
    }
    var debug;
    if (process.env.NODE_DEBUG && /\btunnel\b/.test(process.env.NODE_DEBUG)) {
      debug = function() {
        var args = Array.prototype.slice.call(arguments);
        if (typeof args[0] === "string") {
          args[0] = "TUNNEL: " + args[0];
        } else {
          args.unshift("TUNNEL:");
        }
        console.error.apply(console, args);
      };
    } else {
      debug = function() {
      };
    }
    exports2.debug = debug;
  }
});

// node_modules/tunnel/index.js
var require_tunnel2 = __commonJS({
  "node_modules/tunnel/index.js"(exports2, module2) {
    module2.exports = require_tunnel();
  }
});

// node_modules/undici/lib/core/symbols.js
var require_symbols = __commonJS({
  "node_modules/undici/lib/core/symbols.js"(exports2, module2) {
    module2.exports = {
      kClose: Symbol("close"),
      kDestroy: Symbol("destroy"),
      kDispatch: Symbol("dispatch"),
      kUrl: Symbol("url"),
      kWriting: Symbol("writing"),
      kResuming: Symbol("resuming"),
      kQueue: Symbol("queue"),
      kConnect: Symbol("connect"),
      kConnecting: Symbol("connecting"),
      kHeadersList: Symbol("headers list"),
      kKeepAliveDefaultTimeout: Symbol("default keep alive timeout"),
      kKeepAliveMaxTimeout: Symbol("max keep alive timeout"),
      kKeepAliveTimeoutThreshold: Symbol("keep alive timeout threshold"),
      kKeepAliveTimeoutValue: Symbol("keep alive timeout"),
      kKeepAlive: Symbol("keep alive"),
      kHeadersTimeout: Symbol("headers timeout"),
      kBodyTimeout: Symbol("body timeout"),
      kServerName: Symbol("server name"),
      kLocalAddress: Symbol("local address"),
      kHost: Symbol("host"),
      kNoRef: Symbol("no ref"),
      kBodyUsed: Symbol("used"),
      kRunning: Symbol("running"),
      kBlocking: Symbol("blocking"),
      kPending: Symbol("pending"),
      kSize: Symbol("size"),
      kBusy: Symbol("busy"),
      kQueued: Symbol("queued"),
      kFree: Symbol("free"),
      kConnected: Symbol("connected"),
      kClosed: Symbol("closed"),
      kNeedDrain: Symbol("need drain"),
      kReset: Symbol("reset"),
      kDestroyed: Symbol.for("nodejs.stream.destroyed"),
      kMaxHeadersSize: Symbol("max headers size"),
      kRunningIdx: Symbol("running index"),
      kPendingIdx: Symbol("pending index"),
      kError: Symbol("error"),
      kClients: Symbol("clients"),
      kClient: Symbol("client"),
      kParser: Symbol("parser"),
      kOnDestroyed: Symbol("destroy callbacks"),
      kPipelining: Symbol("pipelining"),
      kSocket: Symbol("socket"),
      kHostHeader: Symbol("host header"),
      kConnector: Symbol("connector"),
      kStrictContentLength: Symbol("strict content length"),
      kMaxRedirections: Symbol("maxRedirections"),
      kMaxRequests: Symbol("maxRequestsPerClient"),
      kProxy: Symbol("proxy agent options"),
      kCounter: Symbol("socket request counter"),
      kInterceptors: Symbol("dispatch interceptors"),
      kMaxResponseSize: Symbol("max response size"),
      kHTTP2Session: Symbol("http2Session"),
      kHTTP2SessionState: Symbol("http2Session state"),
      kHTTP2BuildRequest: Symbol("http2 build request"),
      kHTTP1BuildRequest: Symbol("http1 build request"),
      kHTTP2CopyHeaders: Symbol("http2 copy headers"),
      kHTTPConnVersion: Symbol("http connection version"),
      kRetryHandlerDefaultRetry: Symbol("retry agent default retry"),
      kConstruct: Symbol("constructable")
    };
  }
});

// node_modules/undici/lib/core/errors.js
var require_errors = __commonJS({
  "node_modules/undici/lib/core/errors.js"(exports2, module2) {
    "use strict";
    var UndiciError = class extends Error {
      constructor(message) {
        super(message);
        this.name = "UndiciError";
        this.code = "UND_ERR";
      }
    };
    var ConnectTimeoutError = class _ConnectTimeoutError extends UndiciError {
      constructor(message) {
        super(message);
        Error.captureStackTrace(this, _ConnectTimeoutError);
        this.name = "ConnectTimeoutError";
        this.message = message || "Connect Timeout Error";
        this.code = "UND_ERR_CONNECT_TIMEOUT";
      }
    };
    var HeadersTimeoutError = class _HeadersTimeoutError extends UndiciError {
      constructor(message) {
        super(message);
        Error.captureStackTrace(this, _HeadersTimeoutError);
        this.name = "HeadersTimeoutError";
        this.message = message || "Headers Timeout Error";
        this.code = "UND_ERR_HEADERS_TIMEOUT";
      }
    };
    var HeadersOverflowError = class _HeadersOverflowError extends UndiciError {
      constructor(message) {
        super(message);
        Error.captureStackTrace(this, _HeadersOverflowError);
        this.name = "HeadersOverflowError";
        this.message = message || "Headers Overflow Error";
        this.code = "UND_ERR_HEADERS_OVERFLOW";
      }
    };
    var BodyTimeoutError = class _BodyTimeoutError extends UndiciError {
      constructor(message) {
        super(message);
        Error.captureStackTrace(this, _BodyTimeoutError);
        this.name = "BodyTimeoutError";
        this.message = message || "Body Timeout Error";
        this.code = "UND_ERR_BODY_TIMEOUT";
      }
    };
    var ResponseStatusCodeError = class _ResponseStatusCodeError extends UndiciError {
      constructor(message, statusCode, headers, body) {
        super(message);
        Error.captureStackTrace(this, _ResponseStatusCodeError);
        this.name = "ResponseStatusCodeError";
        this.message = message || "Response Status Code Error";
        this.code = "UND_ERR_RESPONSE_STATUS_CODE";
        this.body = body;
        this.status = statusCode;
        this.statusCode = statusCode;
        this.headers = headers;
      }
    };
    var InvalidArgumentError = class _InvalidArgumentError extends UndiciError {
      constructor(message) {
        super(message);
        Error.captureStackTrace(this, _InvalidArgumentError);
        this.name = "InvalidArgumentError";
        this.message = message || "Invalid Argument Error";
        this.code = "UND_ERR_INVALID_ARG";
      }
    };
    var InvalidReturnValueError = class _InvalidReturnValueError extends UndiciError {
      constructor(message) {
        super(message);
        Error.captureStackTrace(this, _InvalidReturnValueError);
        this.name = "InvalidReturnValueError";
        this.message = message || "Invalid Return Value Error";
        this.code = "UND_ERR_INVALID_RETURN_VALUE";
      }
    };
    var RequestAbortedError = class _RequestAbortedError extends UndiciError {
      constructor(message) {
        super(message);
        Error.captureStackTrace(this, _RequestAbortedError);
        this.name = "AbortError";
        this.message = message || "Request aborted";
        this.code = "UND_ERR_ABORTED";
      }
    };
    var InformationalError = class _InformationalError extends UndiciError {
      constructor(message) {
        super(message);
        Error.captureStackTrace(this, _InformationalError);
        this.name = "InformationalError";
        this.message = message || "Request information";
        this.code = "UND_ERR_INFO";
      }
    };
    var RequestContentLengthMismatchError = class _RequestContentLengthMismatchError extends UndiciError {
      constructor(message) {
        super(message);
        Error.captureStackTrace(this, _RequestContentLengthMismatchError);
        this.name = "RequestContentLengthMismatchError";
        this.message = message || "Request body length does not match content-length header";
        this.code = "UND_ERR_REQ_CONTENT_LENGTH_MISMATCH";
      }
    };
    var ResponseContentLengthMismatchError = class _ResponseContentLengthMismatchError extends UndiciError {
      constructor(message) {
        super(message);
        Error.captureStackTrace(this, _ResponseContentLengthMismatchError);
        this.name = "ResponseContentLengthMismatchError";
        this.message = message || "Response body length does not match content-length header";
        this.code = "UND_ERR_RES_CONTENT_LENGTH_MISMATCH";
      }
    };
    var ClientDestroyedError = class _ClientDestroyedError extends UndiciError {
      constructor(message) {
        super(message);
        Error.captureStackTrace(this, _ClientDestroyedError);
        this.name = "ClientDestroyedError";
        this.message = message || "The client is destroyed";
        this.code = "UND_ERR_DESTROYED";
      }
    };
    var ClientClosedError = class _ClientClosedError extends UndiciError {
      constructor(message) {
        super(message);
        Error.captureStackTrace(this, _ClientClosedError);
        this.name = "ClientClosedError";
        this.message = message || "The client is closed";
        this.code = "UND_ERR_CLOSED";
      }
    };
    var SocketError = class _SocketError extends UndiciError {
      constructor(message, socket) {
        super(message);
        Error.captureStackTrace(this, _SocketError);
        this.name = "SocketError";
        this.message = message || "Socket error";
        this.code = "UND_ERR_SOCKET";
        this.socket = socket;
      }
    };
    var NotSupportedError = class _NotSupportedError extends UndiciError {
      constructor(message) {
        super(message);
        Error.captureStackTrace(this, _NotSupportedError);
        this.name = "NotSupportedError";
        this.message = message || "Not supported error";
        this.code = "UND_ERR_NOT_SUPPORTED";
      }
    };
    var BalancedPoolMissingUpstreamError = class extends UndiciError {
      constructor(message) {
        super(message);
        Error.captureStackTrace(this, NotSupportedError);
        this.name = "MissingUpstreamError";
        this.message = message || "No upstream has been added to the BalancedPool";
        this.code = "UND_ERR_BPL_MISSING_UPSTREAM";
      }
    };
    var HTTPParserError = class _HTTPParserError extends Error {
      constructor(message, code, data) {
        super(message);
        Error.captureStackTrace(this, _HTTPParserError);
        this.name = "HTTPParserError";
        this.code = code ? `HPE_${code}` : void 0;
        this.data = data ? data.toString() : void 0;
      }
    };
    var ResponseExceededMaxSizeError = class _ResponseExceededMaxSizeError extends UndiciError {
      constructor(message) {
        super(message);
        Error.captureStackTrace(this, _ResponseExceededMaxSizeError);
        this.name = "ResponseExceededMaxSizeError";
        this.message = message || "Response content exceeded max size";
        this.code = "UND_ERR_RES_EXCEEDED_MAX_SIZE";
      }
    };
    var RequestRetryError = class _RequestRetryError extends UndiciError {
      constructor(message, code, { headers, data }) {
        super(message);
        Error.captureStackTrace(this, _RequestRetryError);
        this.name = "RequestRetryError";
        this.message = message || "Request retry error";
        this.code = "UND_ERR_REQ_RETRY";
        this.statusCode = code;
        this.data = data;
        this.headers = headers;
      }
    };
    module2.exports = {
      HTTPParserError,
      UndiciError,
      HeadersTimeoutError,
      HeadersOverflowError,
      BodyTimeoutError,
      RequestContentLengthMismatchError,
      ConnectTimeoutError,
      ResponseStatusCodeError,
      InvalidArgumentError,
      InvalidReturnValueError,
      RequestAbortedError,
      ClientDestroyedError,
      ClientClosedError,
      InformationalError,
      SocketError,
      NotSupportedError,
      ResponseContentLengthMismatchError,
      BalancedPoolMissingUpstreamError,
      ResponseExceededMaxSizeError,
      RequestRetryError
    };
  }
});

// node_modules/undici/lib/core/constants.js
var require_constants = __commonJS({
  "node_modules/undici/lib/core/constants.js"(exports2, module2) {
    "use strict";
    var headerNameLowerCasedRecord = {};
    var wellknownHeaderNames = [
      "Accept",
      "Accept-Encoding",
      "Accept-Language",
      "Accept-Ranges",
      "Access-Control-Allow-Credentials",
      "Access-Control-Allow-Headers",
      "Access-Control-Allow-Methods",
      "Access-Control-Allow-Origin",
      "Access-Control-Expose-Headers",
      "Access-Control-Max-Age",
      "Access-Control-Request-Headers",
      "Access-Control-Request-Method",
      "Age",
      "Allow",
      "Alt-Svc",
      "Alt-Used",
      "Authorization",
      "Cache-Control",
      "Clear-Site-Data",
      "Connection",
      "Content-Disposition",
      "Content-Encoding",
      "Content-Language",
      "Content-Length",
      "Content-Location",
      "Content-Range",
      "Content-Security-Policy",
      "Content-Security-Policy-Report-Only",
      "Content-Type",
      "Cookie",
      "Cross-Origin-Embedder-Policy",
      "Cross-Origin-Opener-Policy",
      "Cross-Origin-Resource-Policy",
      "Date",
      "Device-Memory",
      "Downlink",
      "ECT",
      "ETag",
      "Expect",
      "Expect-CT",
      "Expires",
      "Forwarded",
      "From",
      "Host",
      "If-Match",
      "If-Modified-Since",
      "If-None-Match",
      "If-Range",
      "If-Unmodified-Since",
      "Keep-Alive",
      "Last-Modified",
      "Link",
      "Location",
      "Max-Forwards",
      "Origin",
      "Permissions-Policy",
      "Pragma",
      "Proxy-Authenticate",
      "Proxy-Authorization",
      "RTT",
      "Range",
      "Referer",
      "Referrer-Policy",
      "Refresh",
      "Retry-After",
      "Sec-WebSocket-Accept",
      "Sec-WebSocket-Extensions",
      "Sec-WebSocket-Key",
      "Sec-WebSocket-Protocol",
      "Sec-WebSocket-Version",
      "Server",
      "Server-Timing",
      "Service-Worker-Allowed",
      "Service-Worker-Navigation-Preload",
      "Set-Cookie",
      "SourceMap",
      "Strict-Transport-Security",
      "Supports-Loading-Mode",
      "TE",
      "Timing-Allow-Origin",
      "Trailer",
      "Transfer-Encoding",
      "Upgrade",
      "Upgrade-Insecure-Requests",
      "User-Agent",
      "Vary",
      "Via",
      "WWW-Authenticate",
      "X-Content-Type-Options",
      "X-DNS-Prefetch-Control",
      "X-Frame-Options",
      "X-Permitted-Cross-Domain-Policies",
      "X-Powered-By",
      "X-Requested-With",
      "X-XSS-Protection"
    ];
    for (let i = 0; i < wellknownHeaderNames.length; ++i) {
      const key = wellknownHeaderNames[i];
      const lowerCasedKey = key.toLowerCase();
      headerNameLowerCasedRecord[key] = headerNameLowerCasedRecord[lowerCasedKey] = lowerCasedKey;
    }
    Object.setPrototypeOf(headerNameLowerCasedRecord, null);
    module2.exports = {
      wellknownHeaderNames,
      headerNameLowerCasedRecord
    };
  }
});

// node_modules/undici/lib/core/util.js
var require_util = __commonJS({
  "node_modules/undici/lib/core/util.js"(exports2, module2) {
    "use strict";
    var assert = require("assert");
    var { kDestroyed, kBodyUsed } = require_symbols();
    var { IncomingMessage } = require("http");
    var stream = require("stream");
    var net = require("net");
    var { InvalidArgumentError } = require_errors();
    var { Blob: Blob2 } = require("buffer");
    var nodeUtil = require("util");
    var { stringify: stringify2 } = require("querystring");
    var { headerNameLowerCasedRecord } = require_constants();
    var [nodeMajor, nodeMinor] = process.versions.node.split(".").map((v) => Number(v));
    function nop() {
    }
    function isStream(obj) {
      return obj && typeof obj === "object" && typeof obj.pipe === "function" && typeof obj.on === "function";
    }
    function isBlobLike(object) {
      return Blob2 && object instanceof Blob2 || object && typeof object === "object" && (typeof object.stream === "function" || typeof object.arrayBuffer === "function") && /^(Blob|File)$/.test(object[Symbol.toStringTag]);
    }
    function buildURL(url, queryParams) {
      if (url.includes("?") || url.includes("#")) {
        throw new Error('Query params cannot be passed when url already contains "?" or "#".');
      }
      const stringified = stringify2(queryParams);
      if (stringified) {
        url += "?" + stringified;
      }
      return url;
    }
    function parseURL(url) {
      if (typeof url === "string") {
        url = new URL(url);
        if (!/^https?:/.test(url.origin || url.protocol)) {
          throw new InvalidArgumentError("Invalid URL protocol: the URL must start with `http:` or `https:`.");
        }
        return url;
      }
      if (!url || typeof url !== "object") {
        throw new InvalidArgumentError("Invalid URL: The URL argument must be a non-null object.");
      }
      if (!/^https?:/.test(url.origin || url.protocol)) {
        throw new InvalidArgumentError("Invalid URL protocol: the URL must start with `http:` or `https:`.");
      }
      if (!(url instanceof URL)) {
        if (url.port != null && url.port !== "" && !Number.isFinite(parseInt(url.port))) {
          throw new InvalidArgumentError("Invalid URL: port must be a valid integer or a string representation of an integer.");
        }
        if (url.path != null && typeof url.path !== "string") {
          throw new InvalidArgumentError("Invalid URL path: the path must be a string or null/undefined.");
        }
        if (url.pathname != null && typeof url.pathname !== "string") {
          throw new InvalidArgumentError("Invalid URL pathname: the pathname must be a string or null/undefined.");
        }
        if (url.hostname != null && typeof url.hostname !== "string") {
          throw new InvalidArgumentError("Invalid URL hostname: the hostname must be a string or null/undefined.");
        }
        if (url.origin != null && typeof url.origin !== "string") {
          throw new InvalidArgumentError("Invalid URL origin: the origin must be a string or null/undefined.");
        }
        const port = url.port != null ? url.port : url.protocol === "https:" ? 443 : 80;
        let origin = url.origin != null ? url.origin : `${url.protocol}//${url.hostname}:${port}`;
        let path = url.path != null ? url.path : `${url.pathname || ""}${url.search || ""}`;
        if (origin.endsWith("/")) {
          origin = origin.substring(0, origin.length - 1);
        }
        if (path && !path.startsWith("/")) {
          path = `/${path}`;
        }
        url = new URL(origin + path);
      }
      return url;
    }
    function parseOrigin(url) {
      url = parseURL(url);
      if (url.pathname !== "/" || url.search || url.hash) {
        throw new InvalidArgumentError("invalid url");
      }
      return url;
    }
    function getHostname(host) {
      if (host[0] === "[") {
        const idx2 = host.indexOf("]");
        assert(idx2 !== -1);
        return host.substring(1, idx2);
      }
      const idx = host.indexOf(":");
      if (idx === -1) return host;
      return host.substring(0, idx);
    }
    function getServerName(host) {
      if (!host) {
        return null;
      }
      assert.strictEqual(typeof host, "string");
      const servername = getHostname(host);
      if (net.isIP(servername)) {
        return "";
      }
      return servername;
    }
    function deepClone(obj) {
      return JSON.parse(JSON.stringify(obj));
    }
    function isAsyncIterable(obj) {
      return !!(obj != null && typeof obj[Symbol.asyncIterator] === "function");
    }
    function isIterable(obj) {
      return !!(obj != null && (typeof obj[Symbol.iterator] === "function" || typeof obj[Symbol.asyncIterator] === "function"));
    }
    function bodyLength(body) {
      if (body == null) {
        return 0;
      } else if (isStream(body)) {
        const state = body._readableState;
        return state && state.objectMode === false && state.ended === true && Number.isFinite(state.length) ? state.length : null;
      } else if (isBlobLike(body)) {
        return body.size != null ? body.size : null;
      } else if (isBuffer(body)) {
        return body.byteLength;
      }
      return null;
    }
    function isDestroyed(stream2) {
      return !stream2 || !!(stream2.destroyed || stream2[kDestroyed]);
    }
    function isReadableAborted(stream2) {
      const state = stream2 && stream2._readableState;
      return isDestroyed(stream2) && state && !state.endEmitted;
    }
    function destroy(stream2, err) {
      if (stream2 == null || !isStream(stream2) || isDestroyed(stream2)) {
        return;
      }
      if (typeof stream2.destroy === "function") {
        if (Object.getPrototypeOf(stream2).constructor === IncomingMessage) {
          stream2.socket = null;
        }
        stream2.destroy(err);
      } else if (err) {
        process.nextTick((stream3, err2) => {
          stream3.emit("error", err2);
        }, stream2, err);
      }
      if (stream2.destroyed !== true) {
        stream2[kDestroyed] = true;
      }
    }
    var KEEPALIVE_TIMEOUT_EXPR = /timeout=(\d+)/;
    function parseKeepAliveTimeout(val) {
      const m = val.toString().match(KEEPALIVE_TIMEOUT_EXPR);
      return m ? parseInt(m[1], 10) * 1e3 : null;
    }
    function headerNameToString(value) {
      return headerNameLowerCasedRecord[value] || value.toLowerCase();
    }
    function parseHeaders(headers, obj = {}) {
      if (!Array.isArray(headers)) return headers;
      for (let i = 0; i < headers.length; i += 2) {
        const key = headers[i].toString().toLowerCase();
        let val = obj[key];
        if (!val) {
          if (Array.isArray(headers[i + 1])) {
            obj[key] = headers[i + 1].map((x) => x.toString("utf8"));
          } else {
            obj[key] = headers[i + 1].toString("utf8");
          }
        } else {
          if (!Array.isArray(val)) {
            val = [val];
            obj[key] = val;
          }
          val.push(headers[i + 1].toString("utf8"));
        }
      }
      if ("content-length" in obj && "content-disposition" in obj) {
        obj["content-disposition"] = Buffer.from(obj["content-disposition"]).toString("latin1");
      }
      return obj;
    }
    function parseRawHeaders(headers) {
      const ret = [];
      let hasContentLength = false;
      let contentDispositionIdx = -1;
      for (let n = 0; n < headers.length; n += 2) {
        const key = headers[n + 0].toString();
        const val = headers[n + 1].toString("utf8");
        if (key.length === 14 && (key === "content-length" || key.toLowerCase() === "content-length")) {
          ret.push(key, val);
          hasContentLength = true;
        } else if (key.length === 19 && (key === "content-disposition" || key.toLowerCase() === "content-disposition")) {
          contentDispositionIdx = ret.push(key, val) - 1;
        } else {
          ret.push(key, val);
        }
      }
      if (hasContentLength && contentDispositionIdx !== -1) {
        ret[contentDispositionIdx] = Buffer.from(ret[contentDispositionIdx]).toString("latin1");
      }
      return ret;
    }
    function isBuffer(buffer) {
      return buffer instanceof Uint8Array || Buffer.isBuffer(buffer);
    }
    function validateHandler(handler2, method, upgrade) {
      if (!handler2 || typeof handler2 !== "object") {
        throw new InvalidArgumentError("handler must be an object");
      }
      if (typeof handler2.onConnect !== "function") {
        throw new InvalidArgumentError("invalid onConnect method");
      }
      if (typeof handler2.onError !== "function") {
        throw new InvalidArgumentError("invalid onError method");
      }
      if (typeof handler2.onBodySent !== "function" && handler2.onBodySent !== void 0) {
        throw new InvalidArgumentError("invalid onBodySent method");
      }
      if (upgrade || method === "CONNECT") {
        if (typeof handler2.onUpgrade !== "function") {
          throw new InvalidArgumentError("invalid onUpgrade method");
        }
      } else {
        if (typeof handler2.onHeaders !== "function") {
          throw new InvalidArgumentError("invalid onHeaders method");
        }
        if (typeof handler2.onData !== "function") {
          throw new InvalidArgumentError("invalid onData method");
        }
        if (typeof handler2.onComplete !== "function") {
          throw new InvalidArgumentError("invalid onComplete method");
        }
      }
    }
    function isDisturbed(body) {
      return !!(body && (stream.isDisturbed ? stream.isDisturbed(body) || body[kBodyUsed] : body[kBodyUsed] || body.readableDidRead || body._readableState && body._readableState.dataEmitted || isReadableAborted(body)));
    }
    function isErrored(body) {
      return !!(body && (stream.isErrored ? stream.isErrored(body) : /state: 'errored'/.test(
        nodeUtil.inspect(body)
      )));
    }
    function isReadable(body) {
      return !!(body && (stream.isReadable ? stream.isReadable(body) : /state: 'readable'/.test(
        nodeUtil.inspect(body)
      )));
    }
    function getSocketInfo(socket) {
      return {
        localAddress: socket.localAddress,
        localPort: socket.localPort,
        remoteAddress: socket.remoteAddress,
        remotePort: socket.remotePort,
        remoteFamily: socket.remoteFamily,
        timeout: socket.timeout,
        bytesWritten: socket.bytesWritten,
        bytesRead: socket.bytesRead
      };
    }
    async function* convertIterableToBuffer(iterable) {
      for await (const chunk of iterable) {
        yield Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk);
      }
    }
    var ReadableStream;
    function ReadableStreamFrom(iterable) {
      if (!ReadableStream) {
        ReadableStream = require("stream/web").ReadableStream;
      }
      if (ReadableStream.from) {
        return ReadableStream.from(convertIterableToBuffer(iterable));
      }
      let iterator2;
      return new ReadableStream(
        {
          async start() {
            iterator2 = iterable[Symbol.asyncIterator]();
          },
          async pull(controller) {
            const { done, value } = await iterator2.next();
            if (done) {
              queueMicrotask(() => {
                controller.close();
              });
            } else {
              const buf = Buffer.isBuffer(value) ? value : Buffer.from(value);
              controller.enqueue(new Uint8Array(buf));
            }
            return controller.desiredSize > 0;
          },
          async cancel(reason) {
            await iterator2.return();
          }
        },
        0
      );
    }
    function isFormDataLike(object) {
      return object && typeof object === "object" && typeof object.append === "function" && typeof object.delete === "function" && typeof object.get === "function" && typeof object.getAll === "function" && typeof object.has === "function" && typeof object.set === "function" && object[Symbol.toStringTag] === "FormData";
    }
    function throwIfAborted(signal) {
      if (!signal) {
        return;
      }
      if (typeof signal.throwIfAborted === "function") {
        signal.throwIfAborted();
      } else {
        if (signal.aborted) {
          const err = new Error("The operation was aborted");
          err.name = "AbortError";
          throw err;
        }
      }
    }
    function addAbortListener(signal, listener) {
      if ("addEventListener" in signal) {
        signal.addEventListener("abort", listener, { once: true });
        return () => signal.removeEventListener("abort", listener);
      }
      signal.addListener("abort", listener);
      return () => signal.removeListener("abort", listener);
    }
    var hasToWellFormed = !!String.prototype.toWellFormed;
    function toUSVString(val) {
      if (hasToWellFormed) {
        return `${val}`.toWellFormed();
      } else if (nodeUtil.toUSVString) {
        return nodeUtil.toUSVString(val);
      }
      return `${val}`;
    }
    function parseRangeHeader(range) {
      if (range == null || range === "") return { start: 0, end: null, size: null };
      const m = range ? range.match(/^bytes (\d+)-(\d+)\/(\d+)?$/) : null;
      return m ? {
        start: parseInt(m[1]),
        end: m[2] ? parseInt(m[2]) : null,
        size: m[3] ? parseInt(m[3]) : null
      } : null;
    }
    var kEnumerableProperty = /* @__PURE__ */ Object.create(null);
    kEnumerableProperty.enumerable = true;
    module2.exports = {
      kEnumerableProperty,
      nop,
      isDisturbed,
      isErrored,
      isReadable,
      toUSVString,
      isReadableAborted,
      isBlobLike,
      parseOrigin,
      parseURL,
      getServerName,
      isStream,
      isIterable,
      isAsyncIterable,
      isDestroyed,
      headerNameToString,
      parseRawHeaders,
      parseHeaders,
      parseKeepAliveTimeout,
      destroy,
      bodyLength,
      deepClone,
      ReadableStreamFrom,
      isBuffer,
      validateHandler,
      getSocketInfo,
      isFormDataLike,
      buildURL,
      throwIfAborted,
      addAbortListener,
      parseRangeHeader,
      nodeMajor,
      nodeMinor,
      nodeHasAutoSelectFamily: nodeMajor > 18 || nodeMajor === 18 && nodeMinor >= 13,
      safeHTTPMethods: ["GET", "HEAD", "OPTIONS", "TRACE"]
    };
  }
});

// node_modules/undici/lib/timers.js
var require_timers = __commonJS({
  "node_modules/undici/lib/timers.js"(exports2, module2) {
    "use strict";
    var fastNow = Date.now();
    var fastNowTimeout;
    var fastTimers = [];
    function onTimeout() {
      fastNow = Date.now();
      let len = fastTimers.length;
      let idx = 0;
      while (idx < len) {
        const timer = fastTimers[idx];
        if (timer.state === 0) {
          timer.state = fastNow + timer.delay;
        } else if (timer.state > 0 && fastNow >= timer.state) {
          timer.state = -1;
          timer.callback(timer.opaque);
        }
        if (timer.state === -1) {
          timer.state = -2;
          if (idx !== len - 1) {
            fastTimers[idx] = fastTimers.pop();
          } else {
            fastTimers.pop();
          }
          len -= 1;
        } else {
          idx += 1;
        }
      }
      if (fastTimers.length > 0) {
        refreshTimeout();
      }
    }
    function refreshTimeout() {
      if (fastNowTimeout && fastNowTimeout.refresh) {
        fastNowTimeout.refresh();
      } else {
        clearTimeout(fastNowTimeout);
        fastNowTimeout = setTimeout(onTimeout, 1e3);
        if (fastNowTimeout.unref) {
          fastNowTimeout.unref();
        }
      }
    }
    var Timeout = class {
      constructor(callback, delay2, opaque) {
        this.callback = callback;
        this.delay = delay2;
        this.opaque = opaque;
        this.state = -2;
        this.refresh();
      }
      refresh() {
        if (this.state === -2) {
          fastTimers.push(this);
          if (!fastNowTimeout || fastTimers.length === 1) {
            refreshTimeout();
          }
        }
        this.state = 0;
      }
      clear() {
        this.state = -1;
      }
    };
    module2.exports = {
      setTimeout(callback, delay2, opaque) {
        return delay2 < 1e3 ? setTimeout(callback, delay2, opaque) : new Timeout(callback, delay2, opaque);
      },
      clearTimeout(timeout) {
        if (timeout instanceof Timeout) {
          timeout.clear();
        } else {
          clearTimeout(timeout);
        }
      }
    };
  }
});

// node_modules/@fastify/busboy/deps/streamsearch/sbmh.js
var require_sbmh = __commonJS({
  "node_modules/@fastify/busboy/deps/streamsearch/sbmh.js"(exports2, module2) {
    "use strict";
    var EventEmitter = require("node:events").EventEmitter;
    var inherits = require("node:util").inherits;
    function SBMH(needle) {
      if (typeof needle === "string") {
        needle = Buffer.from(needle);
      }
      if (!Buffer.isBuffer(needle)) {
        throw new TypeError("The needle has to be a String or a Buffer.");
      }
      const needleLength = needle.length;
      if (needleLength === 0) {
        throw new Error("The needle cannot be an empty String/Buffer.");
      }
      if (needleLength > 256) {
        throw new Error("The needle cannot have a length bigger than 256.");
      }
      this.maxMatches = Infinity;
      this.matches = 0;
      this._occ = new Array(256).fill(needleLength);
      this._lookbehind_size = 0;
      this._needle = needle;
      this._bufpos = 0;
      this._lookbehind = Buffer.alloc(needleLength);
      for (var i = 0; i < needleLength - 1; ++i) {
        this._occ[needle[i]] = needleLength - 1 - i;
      }
    }
    inherits(SBMH, EventEmitter);
    SBMH.prototype.reset = function() {
      this._lookbehind_size = 0;
      this.matches = 0;
      this._bufpos = 0;
    };
    SBMH.prototype.push = function(chunk, pos) {
      if (!Buffer.isBuffer(chunk)) {
        chunk = Buffer.from(chunk, "binary");
      }
      const chlen = chunk.length;
      this._bufpos = pos || 0;
      let r;
      while (r !== chlen && this.matches < this.maxMatches) {
        r = this._sbmh_feed(chunk);
      }
      return r;
    };
    SBMH.prototype._sbmh_feed = function(data) {
      const len = data.length;
      const needle = this._needle;
      const needleLength = needle.length;
      const lastNeedleChar = needle[needleLength - 1];
      let pos = -this._lookbehind_size;
      let ch;
      if (pos < 0) {
        while (pos < 0 && pos <= len - needleLength) {
          ch = this._sbmh_lookup_char(data, pos + needleLength - 1);
          if (ch === lastNeedleChar && this._sbmh_memcmp(data, pos, needleLength - 1)) {
            this._lookbehind_size = 0;
            ++this.matches;
            this.emit("info", true);
            return this._bufpos = pos + needleLength;
          }
          pos += this._occ[ch];
        }
        if (pos < 0) {
          while (pos < 0 && !this._sbmh_memcmp(data, pos, len - pos)) {
            ++pos;
          }
        }
        if (pos >= 0) {
          this.emit("info", false, this._lookbehind, 0, this._lookbehind_size);
          this._lookbehind_size = 0;
        } else {
          const bytesToCutOff = this._lookbehind_size + pos;
          if (bytesToCutOff > 0) {
            this.emit("info", false, this._lookbehind, 0, bytesToCutOff);
          }
          this._lookbehind.copy(
            this._lookbehind,
            0,
            bytesToCutOff,
            this._lookbehind_size - bytesToCutOff
          );
          this._lookbehind_size -= bytesToCutOff;
          data.copy(this._lookbehind, this._lookbehind_size);
          this._lookbehind_size += len;
          this._bufpos = len;
          return len;
        }
      }
      pos += (pos >= 0) * this._bufpos;
      if (data.indexOf(needle, pos) !== -1) {
        pos = data.indexOf(needle, pos);
        ++this.matches;
        if (pos > 0) {
          this.emit("info", true, data, this._bufpos, pos);
        } else {
          this.emit("info", true);
        }
        return this._bufpos = pos + needleLength;
      } else {
        pos = len - needleLength;
      }
      while (pos < len && (data[pos] !== needle[0] || Buffer.compare(
        data.subarray(pos, pos + len - pos),
        needle.subarray(0, len - pos)
      ) !== 0)) {
        ++pos;
      }
      if (pos < len) {
        data.copy(this._lookbehind, 0, pos, pos + (len - pos));
        this._lookbehind_size = len - pos;
      }
      if (pos > 0) {
        this.emit("info", false, data, this._bufpos, pos < len ? pos : len);
      }
      this._bufpos = len;
      return len;
    };
    SBMH.prototype._sbmh_lookup_char = function(data, pos) {
      return pos < 0 ? this._lookbehind[this._lookbehind_size + pos] : data[pos];
    };
    SBMH.prototype._sbmh_memcmp = function(data, pos, len) {
      for (var i = 0; i < len; ++i) {
        if (this._sbmh_lookup_char(data, pos + i) !== this._needle[i]) {
          return false;
        }
      }
      return true;
    };
    module2.exports = SBMH;
  }
});

// node_modules/@fastify/busboy/deps/dicer/lib/PartStream.js
var require_PartStream = __commonJS({
  "node_modules/@fastify/busboy/deps/dicer/lib/PartStream.js"(exports2, module2) {
    "use strict";
    var inherits = require("node:util").inherits;
    var ReadableStream = require("node:stream").Readable;
    function PartStream(opts) {
      ReadableStream.call(this, opts);
    }
    inherits(PartStream, ReadableStream);
    PartStream.prototype._read = function(n) {
    };
    module2.exports = PartStream;
  }
});

// node_modules/@fastify/busboy/lib/utils/getLimit.js
var require_getLimit = __commonJS({
  "node_modules/@fastify/busboy/lib/utils/getLimit.js"(exports2, module2) {
    "use strict";
    module2.exports = function getLimit(limits, name3, defaultLimit) {
      if (!limits || limits[name3] === void 0 || limits[name3] === null) {
        return defaultLimit;
      }
      if (typeof limits[name3] !== "number" || isNaN(limits[name3])) {
        throw new TypeError("Limit " + name3 + " is not a valid number");
      }
      return limits[name3];
    };
  }
});

// node_modules/@fastify/busboy/deps/dicer/lib/HeaderParser.js
var require_HeaderParser = __commonJS({
  "node_modules/@fastify/busboy/deps/dicer/lib/HeaderParser.js"(exports2, module2) {
    "use strict";
    var EventEmitter = require("node:events").EventEmitter;
    var inherits = require("node:util").inherits;
    var getLimit = require_getLimit();
    var StreamSearch = require_sbmh();
    var B_DCRLF = Buffer.from("\r\n\r\n");
    var RE_CRLF = /\r\n/g;
    var RE_HDR = /^([^:]+):[ \t]?([\x00-\xFF]+)?$/;
    function HeaderParser(cfg) {
      EventEmitter.call(this);
      cfg = cfg || {};
      const self2 = this;
      this.nread = 0;
      this.maxed = false;
      this.npairs = 0;
      this.maxHeaderPairs = getLimit(cfg, "maxHeaderPairs", 2e3);
      this.maxHeaderSize = getLimit(cfg, "maxHeaderSize", 80 * 1024);
      this.buffer = "";
      this.header = {};
      this.finished = false;
      this.ss = new StreamSearch(B_DCRLF);
      this.ss.on("info", function(isMatch, data, start, end) {
        if (data && !self2.maxed) {
          if (self2.nread + end - start >= self2.maxHeaderSize) {
            end = self2.maxHeaderSize - self2.nread + start;
            self2.nread = self2.maxHeaderSize;
            self2.maxed = true;
          } else {
            self2.nread += end - start;
          }
          self2.buffer += data.toString("binary", start, end);
        }
        if (isMatch) {
          self2._finish();
        }
      });
    }
    inherits(HeaderParser, EventEmitter);
    HeaderParser.prototype.push = function(data) {
      const r = this.ss.push(data);
      if (this.finished) {
        return r;
      }
    };
    HeaderParser.prototype.reset = function() {
      this.finished = false;
      this.buffer = "";
      this.header = {};
      this.ss.reset();
    };
    HeaderParser.prototype._finish = function() {
      if (this.buffer) {
        this._parseHeader();
      }
      this.ss.matches = this.ss.maxMatches;
      const header = this.header;
      this.header = {};
      this.buffer = "";
      this.finished = true;
      this.nread = this.npairs = 0;
      this.maxed = false;
      this.emit("header", header);
    };
    HeaderParser.prototype._parseHeader = function() {
      if (this.npairs === this.maxHeaderPairs) {
        return;
      }
      const lines = this.buffer.split(RE_CRLF);
      const len = lines.length;
      let m, h;
      for (var i = 0; i < len; ++i) {
        if (lines[i].length === 0) {
          continue;
        }
        if (lines[i][0] === "	" || lines[i][0] === " ") {
          if (h) {
            this.header[h][this.header[h].length - 1] += lines[i];
            continue;
          }
        }
        const posColon = lines[i].indexOf(":");
        if (posColon === -1 || posColon === 0) {
          return;
        }
        m = RE_HDR.exec(lines[i]);
        h = m[1].toLowerCase();
        this.header[h] = this.header[h] || [];
        this.header[h].push(m[2] || "");
        if (++this.npairs === this.maxHeaderPairs) {
          break;
        }
      }
    };
    module2.exports = HeaderParser;
  }
});

// node_modules/@fastify/busboy/deps/dicer/lib/Dicer.js
var require_Dicer = __commonJS({
  "node_modules/@fastify/busboy/deps/dicer/lib/Dicer.js"(exports2, module2) {
    "use strict";
    var WritableStream = require("node:stream").Writable;
    var inherits = require("node:util").inherits;
    var StreamSearch = require_sbmh();
    var PartStream = require_PartStream();
    var HeaderParser = require_HeaderParser();
    var DASH = 45;
    var B_ONEDASH = Buffer.from("-");
    var B_CRLF = Buffer.from("\r\n");
    var EMPTY_FN = function() {
    };
    function Dicer(cfg) {
      if (!(this instanceof Dicer)) {
        return new Dicer(cfg);
      }
      WritableStream.call(this, cfg);
      if (!cfg || !cfg.headerFirst && typeof cfg.boundary !== "string") {
        throw new TypeError("Boundary required");
      }
      if (typeof cfg.boundary === "string") {
        this.setBoundary(cfg.boundary);
      } else {
        this._bparser = void 0;
      }
      this._headerFirst = cfg.headerFirst;
      this._dashes = 0;
      this._parts = 0;
      this._finished = false;
      this._realFinish = false;
      this._isPreamble = true;
      this._justMatched = false;
      this._firstWrite = true;
      this._inHeader = true;
      this._part = void 0;
      this._cb = void 0;
      this._ignoreData = false;
      this._partOpts = { highWaterMark: cfg.partHwm };
      this._pause = false;
      const self2 = this;
      this._hparser = new HeaderParser(cfg);
      this._hparser.on("header", function(header) {
        self2._inHeader = false;
        self2._part.emit("header", header);
      });
    }
    inherits(Dicer, WritableStream);
    Dicer.prototype.emit = function(ev) {
      if (ev === "finish" && !this._realFinish) {
        if (!this._finished) {
          const self2 = this;
          process.nextTick(function() {
            self2.emit("error", new Error("Unexpected end of multipart data"));
            if (self2._part && !self2._ignoreData) {
              const type = self2._isPreamble ? "Preamble" : "Part";
              self2._part.emit("error", new Error(type + " terminated early due to unexpected end of multipart data"));
              self2._part.push(null);
              process.nextTick(function() {
                self2._realFinish = true;
                self2.emit("finish");
                self2._realFinish = false;
              });
              return;
            }
            self2._realFinish = true;
            self2.emit("finish");
            self2._realFinish = false;
          });
        }
      } else {
        WritableStream.prototype.emit.apply(this, arguments);
      }
    };
    Dicer.prototype._write = function(data, encoding, cb) {
      if (!this._hparser && !this._bparser) {
        return cb();
      }
      if (this._headerFirst && this._isPreamble) {
        if (!this._part) {
          this._part = new PartStream(this._partOpts);
          if (this.listenerCount("preamble") !== 0) {
            this.emit("preamble", this._part);
          } else {
            this._ignore();
          }
        }
        const r = this._hparser.push(data);
        if (!this._inHeader && r !== void 0 && r < data.length) {
          data = data.slice(r);
        } else {
          return cb();
        }
      }
      if (this._firstWrite) {
        this._bparser.push(B_CRLF);
        this._firstWrite = false;
      }
      this._bparser.push(data);
      if (this._pause) {
        this._cb = cb;
      } else {
        cb();
      }
    };
    Dicer.prototype.reset = function() {
      this._part = void 0;
      this._bparser = void 0;
      this._hparser = void 0;
    };
    Dicer.prototype.setBoundary = function(boundary) {
      const self2 = this;
      this._bparser = new StreamSearch("\r\n--" + boundary);
      this._bparser.on("info", function(isMatch, data, start, end) {
        self2._oninfo(isMatch, data, start, end);
      });
    };
    Dicer.prototype._ignore = function() {
      if (this._part && !this._ignoreData) {
        this._ignoreData = true;
        this._part.on("error", EMPTY_FN);
        this._part.resume();
      }
    };
    Dicer.prototype._oninfo = function(isMatch, data, start, end) {
      let buf;
      const self2 = this;
      let i = 0;
      let r;
      let shouldWriteMore = true;
      if (!this._part && this._justMatched && data) {
        while (this._dashes < 2 && start + i < end) {
          if (data[start + i] === DASH) {
            ++i;
            ++this._dashes;
          } else {
            if (this._dashes) {
              buf = B_ONEDASH;
            }
            this._dashes = 0;
            break;
          }
        }
        if (this._dashes === 2) {
          if (start + i < end && this.listenerCount("trailer") !== 0) {
            this.emit("trailer", data.slice(start + i, end));
          }
          this.reset();
          this._finished = true;
          if (self2._parts === 0) {
            self2._realFinish = true;
            self2.emit("finish");
            self2._realFinish = false;
          }
        }
        if (this._dashes) {
          return;
        }
      }
      if (this._justMatched) {
        this._justMatched = false;
      }
      if (!this._part) {
        this._part = new PartStream(this._partOpts);
        this._part._read = function(n) {
          self2._unpause();
        };
        if (this._isPreamble && this.listenerCount("preamble") !== 0) {
          this.emit("preamble", this._part);
        } else if (this._isPreamble !== true && this.listenerCount("part") !== 0) {
          this.emit("part", this._part);
        } else {
          this._ignore();
        }
        if (!this._isPreamble) {
          this._inHeader = true;
        }
      }
      if (data && start < end && !this._ignoreData) {
        if (this._isPreamble || !this._inHeader) {
          if (buf) {
            shouldWriteMore = this._part.push(buf);
          }
          shouldWriteMore = this._part.push(data.slice(start, end));
          if (!shouldWriteMore) {
            this._pause = true;
          }
        } else if (!this._isPreamble && this._inHeader) {
          if (buf) {
            this._hparser.push(buf);
          }
          r = this._hparser.push(data.slice(start, end));
          if (!this._inHeader && r !== void 0 && r < end) {
            this._oninfo(false, data, start + r, end);
          }
        }
      }
      if (isMatch) {
        this._hparser.reset();
        if (this._isPreamble) {
          this._isPreamble = false;
        } else {
          if (start !== end) {
            ++this._parts;
            this._part.on("end", function() {
              if (--self2._parts === 0) {
                if (self2._finished) {
                  self2._realFinish = true;
                  self2.emit("finish");
                  self2._realFinish = false;
                } else {
                  self2._unpause();
                }
              }
            });
          }
        }
        this._part.push(null);
        this._part = void 0;
        this._ignoreData = false;
        this._justMatched = true;
        this._dashes = 0;
      }
    };
    Dicer.prototype._unpause = function() {
      if (!this._pause) {
        return;
      }
      this._pause = false;
      if (this._cb) {
        const cb = this._cb;
        this._cb = void 0;
        cb();
      }
    };
    module2.exports = Dicer;
  }
});

// node_modules/@fastify/busboy/lib/utils/decodeText.js
var require_decodeText = __commonJS({
  "node_modules/@fastify/busboy/lib/utils/decodeText.js"(exports2, module2) {
    "use strict";
    var utf8Decoder = new TextDecoder("utf-8");
    var textDecoders = /* @__PURE__ */ new Map([
      ["utf-8", utf8Decoder],
      ["utf8", utf8Decoder]
    ]);
    function getDecoder(charset) {
      let lc;
      while (true) {
        switch (charset) {
          case "utf-8":
          case "utf8":
            return decoders.utf8;
          case "latin1":
          case "ascii":
          // TODO: Make these a separate, strict decoder?
          case "us-ascii":
          case "iso-8859-1":
          case "iso8859-1":
          case "iso88591":
          case "iso_8859-1":
          case "windows-1252":
          case "iso_8859-1:1987":
          case "cp1252":
          case "x-cp1252":
            return decoders.latin1;
          case "utf16le":
          case "utf-16le":
          case "ucs2":
          case "ucs-2":
            return decoders.utf16le;
          case "base64":
            return decoders.base64;
          default:
            if (lc === void 0) {
              lc = true;
              charset = charset.toLowerCase();
              continue;
            }
            return decoders.other.bind(charset);
        }
      }
    }
    var decoders = {
      utf8: (data, sourceEncoding) => {
        if (data.length === 0) {
          return "";
        }
        if (typeof data === "string") {
          data = Buffer.from(data, sourceEncoding);
        }
        return data.utf8Slice(0, data.length);
      },
      latin1: (data, sourceEncoding) => {
        if (data.length === 0) {
          return "";
        }
        if (typeof data === "string") {
          return data;
        }
        return data.latin1Slice(0, data.length);
      },
      utf16le: (data, sourceEncoding) => {
        if (data.length === 0) {
          return "";
        }
        if (typeof data === "string") {
          data = Buffer.from(data, sourceEncoding);
        }
        return data.ucs2Slice(0, data.length);
      },
      base64: (data, sourceEncoding) => {
        if (data.length === 0) {
          return "";
        }
        if (typeof data === "string") {
          data = Buffer.from(data, sourceEncoding);
        }
        return data.base64Slice(0, data.length);
      },
      other: (data, sourceEncoding) => {
        if (data.length === 0) {
          return "";
        }
        if (typeof data === "string") {
          data = Buffer.from(data, sourceEncoding);
        }
        if (textDecoders.has(exports2.toString())) {
          try {
            return textDecoders.get(exports2).decode(data);
          } catch {
          }
        }
        return typeof data === "string" ? data : data.toString();
      }
    };
    function decodeText(text, sourceEncoding, destEncoding) {
      if (text) {
        return getDecoder(destEncoding)(text, sourceEncoding);
      }
      return text;
    }
    module2.exports = decodeText;
  }
});

// node_modules/@fastify/busboy/lib/utils/parseParams.js
var require_parseParams = __commonJS({
  "node_modules/@fastify/busboy/lib/utils/parseParams.js"(exports2, module2) {
    "use strict";
    var decodeText = require_decodeText();
    var RE_ENCODED = /%[a-fA-F0-9][a-fA-F0-9]/g;
    var EncodedLookup = {
      "%00": "\0",
      "%01": "",
      "%02": "",
      "%03": "",
      "%04": "",
      "%05": "",
      "%06": "",
      "%07": "\x07",
      "%08": "\b",
      "%09": "	",
      "%0a": "\n",
      "%0A": "\n",
      "%0b": "\v",
      "%0B": "\v",
      "%0c": "\f",
      "%0C": "\f",
      "%0d": "\r",
      "%0D": "\r",
      "%0e": "",
      "%0E": "",
      "%0f": "",
      "%0F": "",
      "%10": "",
      "%11": "",
      "%12": "",
      "%13": "",
      "%14": "",
      "%15": "",
      "%16": "",
      "%17": "",
      "%18": "",
      "%19": "",
      "%1a": "",
      "%1A": "",
      "%1b": "\x1B",
      "%1B": "\x1B",
      "%1c": "",
      "%1C": "",
      "%1d": "",
      "%1D": "",
      "%1e": "",
      "%1E": "",
      "%1f": "",
      "%1F": "",
      "%20": " ",
      "%21": "!",
      "%22": '"',
      "%23": "#",
      "%24": "$",
      "%25": "%",
      "%26": "&",
      "%27": "'",
      "%28": "(",
      "%29": ")",
      "%2a": "*",
      "%2A": "*",
      "%2b": "+",
      "%2B": "+",
      "%2c": ",",
      "%2C": ",",
      "%2d": "-",
      "%2D": "-",
      "%2e": ".",
      "%2E": ".",
      "%2f": "/",
      "%2F": "/",
      "%30": "0",
      "%31": "1",
      "%32": "2",
      "%33": "3",
      "%34": "4",
      "%35": "5",
      "%36": "6",
      "%37": "7",
      "%38": "8",
      "%39": "9",
      "%3a": ":",
      "%3A": ":",
      "%3b": ";",
      "%3B": ";",
      "%3c": "<",
      "%3C": "<",
      "%3d": "=",
      "%3D": "=",
      "%3e": ">",
      "%3E": ">",
      "%3f": "?",
      "%3F": "?",
      "%40": "@",
      "%41": "A",
      "%42": "B",
      "%43": "C",
      "%44": "D",
      "%45": "E",
      "%46": "F",
      "%47": "G",
      "%48": "H",
      "%49": "I",
      "%4a": "J",
      "%4A": "J",
      "%4b": "K",
      "%4B": "K",
      "%4c": "L",
      "%4C": "L",
      "%4d": "M",
      "%4D": "M",
      "%4e": "N",
      "%4E": "N",
      "%4f": "O",
      "%4F": "O",
      "%50": "P",
      "%51": "Q",
      "%52": "R",
      "%53": "S",
      "%54": "T",
      "%55": "U",
      "%56": "V",
      "%57": "W",
      "%58": "X",
      "%59": "Y",
      "%5a": "Z",
      "%5A": "Z",
      "%5b": "[",
      "%5B": "[",
      "%5c": "\\",
      "%5C": "\\",
      "%5d": "]",
      "%5D": "]",
      "%5e": "^",
      "%5E": "^",
      "%5f": "_",
      "%5F": "_",
      "%60": "`",
      "%61": "a",
      "%62": "b",
      "%63": "c",
      "%64": "d",
      "%65": "e",
      "%66": "f",
      "%67": "g",
      "%68": "h",
      "%69": "i",
      "%6a": "j",
      "%6A": "j",
      "%6b": "k",
      "%6B": "k",
      "%6c": "l",
      "%6C": "l",
      "%6d": "m",
      "%6D": "m",
      "%6e": "n",
      "%6E": "n",
      "%6f": "o",
      "%6F": "o",
      "%70": "p",
      "%71": "q",
      "%72": "r",
      "%73": "s",
      "%74": "t",
      "%75": "u",
      "%76": "v",
      "%77": "w",
      "%78": "x",
      "%79": "y",
      "%7a": "z",
      "%7A": "z",
      "%7b": "{",
      "%7B": "{",
      "%7c": "|",
      "%7C": "|",
      "%7d": "}",
      "%7D": "}",
      "%7e": "~",
      "%7E": "~",
      "%7f": "\x7F",
      "%7F": "\x7F",
      "%80": "\x80",
      "%81": "\x81",
      "%82": "\x82",
      "%83": "\x83",
      "%84": "\x84",
      "%85": "\x85",
      "%86": "\x86",
      "%87": "\x87",
      "%88": "\x88",
      "%89": "\x89",
      "%8a": "\x8A",
      "%8A": "\x8A",
      "%8b": "\x8B",
      "%8B": "\x8B",
      "%8c": "\x8C",
      "%8C": "\x8C",
      "%8d": "\x8D",
      "%8D": "\x8D",
      "%8e": "\x8E",
      "%8E": "\x8E",
      "%8f": "\x8F",
      "%8F": "\x8F",
      "%90": "\x90",
      "%91": "\x91",
      "%92": "\x92",
      "%93": "\x93",
      "%94": "\x94",
      "%95": "\x95",
      "%96": "\x96",
      "%97": "\x97",
      "%98": "\x98",
      "%99": "\x99",
      "%9a": "\x9A",
      "%9A": "\x9A",
      "%9b": "\x9B",
      "%9B": "\x9B",
      "%9c": "\x9C",
      "%9C": "\x9C",
      "%9d": "\x9D",
      "%9D": "\x9D",
      "%9e": "\x9E",
      "%9E": "\x9E",
      "%9f": "\x9F",
      "%9F": "\x9F",
      "%a0": "\xA0",
      "%A0": "\xA0",
      "%a1": "\xA1",
      "%A1": "\xA1",
      "%a2": "\xA2",
      "%A2": "\xA2",
      "%a3": "\xA3",
      "%A3": "\xA3",
      "%a4": "\xA4",
      "%A4": "\xA4",
      "%a5": "\xA5",
      "%A5": "\xA5",
      "%a6": "\xA6",
      "%A6": "\xA6",
      "%a7": "\xA7",
      "%A7": "\xA7",
      "%a8": "\xA8",
      "%A8": "\xA8",
      "%a9": "\xA9",
      "%A9": "\xA9",
      "%aa": "\xAA",
      "%Aa": "\xAA",
      "%aA": "\xAA",
      "%AA": "\xAA",
      "%ab": "\xAB",
      "%Ab": "\xAB",
      "%aB": "\xAB",
      "%AB": "\xAB",
      "%ac": "\xAC",
      "%Ac": "\xAC",
      "%aC": "\xAC",
      "%AC": "\xAC",
      "%ad": "\xAD",
      "%Ad": "\xAD",
      "%aD": "\xAD",
      "%AD": "\xAD",
      "%ae": "\xAE",
      "%Ae": "\xAE",
      "%aE": "\xAE",
      "%AE": "\xAE",
      "%af": "\xAF",
      "%Af": "\xAF",
      "%aF": "\xAF",
      "%AF": "\xAF",
      "%b0": "\xB0",
      "%B0": "\xB0",
      "%b1": "\xB1",
      "%B1": "\xB1",
      "%b2": "\xB2",
      "%B2": "\xB2",
      "%b3": "\xB3",
      "%B3": "\xB3",
      "%b4": "\xB4",
      "%B4": "\xB4",
      "%b5": "\xB5",
      "%B5": "\xB5",
      "%b6": "\xB6",
      "%B6": "\xB6",
      "%b7": "\xB7",
      "%B7": "\xB7",
      "%b8": "\xB8",
      "%B8": "\xB8",
      "%b9": "\xB9",
      "%B9": "\xB9",
      "%ba": "\xBA",
      "%Ba": "\xBA",
      "%bA": "\xBA",
      "%BA": "\xBA",
      "%bb": "\xBB",
      "%Bb": "\xBB",
      "%bB": "\xBB",
      "%BB": "\xBB",
      "%bc": "\xBC",
      "%Bc": "\xBC",
      "%bC": "\xBC",
      "%BC": "\xBC",
      "%bd": "\xBD",
      "%Bd": "\xBD",
      "%bD": "\xBD",
      "%BD": "\xBD",
      "%be": "\xBE",
      "%Be": "\xBE",
      "%bE": "\xBE",
      "%BE": "\xBE",
      "%bf": "\xBF",
      "%Bf": "\xBF",
      "%bF": "\xBF",
      "%BF": "\xBF",
      "%c0": "\xC0",
      "%C0": "\xC0",
      "%c1": "\xC1",
      "%C1": "\xC1",
      "%c2": "\xC2",
      "%C2": "\xC2",
      "%c3": "\xC3",
      "%C3": "\xC3",
      "%c4": "\xC4",
      "%C4": "\xC4",
      "%c5": "\xC5",
      "%C5": "\xC5",
      "%c6": "\xC6",
      "%C6": "\xC6",
      "%c7": "\xC7",
      "%C7": "\xC7",
      "%c8": "\xC8",
      "%C8": "\xC8",
      "%c9": "\xC9",
      "%C9": "\xC9",
      "%ca": "\xCA",
      "%Ca": "\xCA",
      "%cA": "\xCA",
      "%CA": "\xCA",
      "%cb": "\xCB",
      "%Cb": "\xCB",
      "%cB": "\xCB",
      "%CB": "\xCB",
      "%cc": "\xCC",
      "%Cc": "\xCC",
      "%cC": "\xCC",
      "%CC": "\xCC",
      "%cd": "\xCD",
      "%Cd": "\xCD",
      "%cD": "\xCD",
      "%CD": "\xCD",
      "%ce": "\xCE",
      "%Ce": "\xCE",
      "%cE": "\xCE",
      "%CE": "\xCE",
      "%cf": "\xCF",
      "%Cf": "\xCF",
      "%cF": "\xCF",
      "%CF": "\xCF",
      "%d0": "\xD0",
      "%D0": "\xD0",
      "%d1": "\xD1",
      "%D1": "\xD1",
      "%d2": "\xD2",
      "%D2": "\xD2",
      "%d3": "\xD3",
      "%D3": "\xD3",
      "%d4": "\xD4",
      "%D4": "\xD4",
      "%d5": "\xD5",
      "%D5": "\xD5",
      "%d6": "\xD6",
      "%D6": "\xD6",
      "%d7": "\xD7",
      "%D7": "\xD7",
      "%d8": "\xD8",
      "%D8": "\xD8",
      "%d9": "\xD9",
      "%D9": "\xD9",
      "%da": "\xDA",
      "%Da": "\xDA",
      "%dA": "\xDA",
      "%DA": "\xDA",
      "%db": "\xDB",
      "%Db": "\xDB",
      "%dB": "\xDB",
      "%DB": "\xDB",
      "%dc": "\xDC",
      "%Dc": "\xDC",
      "%dC": "\xDC",
      "%DC": "\xDC",
      "%dd": "\xDD",
      "%Dd": "\xDD",
      "%dD": "\xDD",
      "%DD": "\xDD",
      "%de": "\xDE",
      "%De": "\xDE",
      "%dE": "\xDE",
      "%DE": "\xDE",
      "%df": "\xDF",
      "%Df": "\xDF",
      "%dF": "\xDF",
      "%DF": "\xDF",
      "%e0": "\xE0",
      "%E0": "\xE0",
      "%e1": "\xE1",
      "%E1": "\xE1",
      "%e2": "\xE2",
      "%E2": "\xE2",
      "%e3": "\xE3",
      "%E3": "\xE3",
      "%e4": "\xE4",
      "%E4": "\xE4",
      "%e5": "\xE5",
      "%E5": "\xE5",
      "%e6": "\xE6",
      "%E6": "\xE6",
      "%e7": "\xE7",
      "%E7": "\xE7",
      "%e8": "\xE8",
      "%E8": "\xE8",
      "%e9": "\xE9",
      "%E9": "\xE9",
      "%ea": "\xEA",
      "%Ea": "\xEA",
      "%eA": "\xEA",
      "%EA": "\xEA",
      "%eb": "\xEB",
      "%Eb": "\xEB",
      "%eB": "\xEB",
      "%EB": "\xEB",
      "%ec": "\xEC",
      "%Ec": "\xEC",
      "%eC": "\xEC",
      "%EC": "\xEC",
      "%ed": "\xED",
      "%Ed": "\xED",
      "%eD": "\xED",
      "%ED": "\xED",
      "%ee": "\xEE",
      "%Ee": "\xEE",
      "%eE": "\xEE",
      "%EE": "\xEE",
      "%ef": "\xEF",
      "%Ef": "\xEF",
      "%eF": "\xEF",
      "%EF": "\xEF",
      "%f0": "\xF0",
      "%F0": "\xF0",
      "%f1": "\xF1",
      "%F1": "\xF1",
      "%f2": "\xF2",
      "%F2": "\xF2",
      "%f3": "\xF3",
      "%F3": "\xF3",
      "%f4": "\xF4",
      "%F4": "\xF4",
      "%f5": "\xF5",
      "%F5": "\xF5",
      "%f6": "\xF6",
      "%F6": "\xF6",
      "%f7": "\xF7",
      "%F7": "\xF7",
      "%f8": "\xF8",
      "%F8": "\xF8",
      "%f9": "\xF9",
      "%F9": "\xF9",
      "%fa": "\xFA",
      "%Fa": "\xFA",
      "%fA": "\xFA",
      "%FA": "\xFA",
      "%fb": "\xFB",
      "%Fb": "\xFB",
      "%fB": "\xFB",
      "%FB": "\xFB",
      "%fc": "\xFC",
      "%Fc": "\xFC",
      "%fC": "\xFC",
      "%FC": "\xFC",
      "%fd": "\xFD",
      "%Fd": "\xFD",
      "%fD": "\xFD",
      "%FD": "\xFD",
      "%fe": "\xFE",
      "%Fe": "\xFE",
      "%fE": "\xFE",
      "%FE": "\xFE",
      "%ff": "\xFF",
      "%Ff": "\xFF",
      "%fF": "\xFF",
      "%FF": "\xFF"
    };
    function encodedReplacer(match) {
      return EncodedLookup[match];
    }
    var STATE_KEY = 0;
    var STATE_VALUE = 1;
    var STATE_CHARSET = 2;
    var STATE_LANG = 3;
    function parseParams(str) {
      const res = [];
      let state = STATE_KEY;
      let charset = "";
      let inquote = false;
      let escaping = false;
      let p = 0;
      let tmp = "";
      const len = str.length;
      for (var i = 0; i < len; ++i) {
        const char = str[i];
        if (char === "\\" && inquote) {
          if (escaping) {
            escaping = false;
          } else {
            escaping = true;
            continue;
          }
        } else if (char === '"') {
          if (!escaping) {
            if (inquote) {
              inquote = false;
              state = STATE_KEY;
            } else {
              inquote = true;
            }
            continue;
          } else {
            escaping = false;
          }
        } else {
          if (escaping && inquote) {
            tmp += "\\";
          }
          escaping = false;
          if ((state === STATE_CHARSET || state === STATE_LANG) && char === "'") {
            if (state === STATE_CHARSET) {
              state = STATE_LANG;
              charset = tmp.substring(1);
            } else {
              state = STATE_VALUE;
            }
            tmp = "";
            continue;
          } else if (state === STATE_KEY && (char === "*" || char === "=") && res.length) {
            state = char === "*" ? STATE_CHARSET : STATE_VALUE;
            res[p] = [tmp, void 0];
            tmp = "";
            continue;
          } else if (!inquote && char === ";") {
            state = STATE_KEY;
            if (charset) {
              if (tmp.length) {
                tmp = decodeText(
                  tmp.replace(RE_ENCODED, encodedReplacer),
                  "binary",
                  charset
                );
              }
              charset = "";
            } else if (tmp.length) {
              tmp = decodeText(tmp, "binary", "utf8");
            }
            if (res[p] === void 0) {
              res[p] = tmp;
            } else {
              res[p][1] = tmp;
            }
            tmp = "";
            ++p;
            continue;
          } else if (!inquote && (char === " " || char === "	")) {
            continue;
          }
        }
        tmp += char;
      }
      if (charset && tmp.length) {
        tmp = decodeText(
          tmp.replace(RE_ENCODED, encodedReplacer),
          "binary",
          charset
        );
      } else if (tmp) {
        tmp = decodeText(tmp, "binary", "utf8");
      }
      if (res[p] === void 0) {
        if (tmp) {
          res[p] = tmp;
        }
      } else {
        res[p][1] = tmp;
      }
      return res;
    }
    module2.exports = parseParams;
  }
});

// node_modules/@fastify/busboy/lib/utils/basename.js
var require_basename = __commonJS({
  "node_modules/@fastify/busboy/lib/utils/basename.js"(exports2, module2) {
    "use strict";
    module2.exports = function basename(path) {
      if (typeof path !== "string") {
        return "";
      }
      for (var i = path.length - 1; i >= 0; --i) {
        switch (path.charCodeAt(i)) {
          case 47:
          // '/'
          case 92:
            path = path.slice(i + 1);
            return path === ".." || path === "." ? "" : path;
        }
      }
      return path === ".." || path === "." ? "" : path;
    };
  }
});

// node_modules/@fastify/busboy/lib/types/multipart.js
var require_multipart = __commonJS({
  "node_modules/@fastify/busboy/lib/types/multipart.js"(exports2, module2) {
    "use strict";
    var { Readable } = require("node:stream");
    var { inherits } = require("node:util");
    var Dicer = require_Dicer();
    var parseParams = require_parseParams();
    var decodeText = require_decodeText();
    var basename = require_basename();
    var getLimit = require_getLimit();
    var RE_BOUNDARY = /^boundary$/i;
    var RE_FIELD = /^form-data$/i;
    var RE_CHARSET = /^charset$/i;
    var RE_FILENAME = /^filename$/i;
    var RE_NAME = /^name$/i;
    Multipart.detect = /^multipart\/form-data/i;
    function Multipart(boy, cfg) {
      let i;
      let len;
      const self2 = this;
      let boundary;
      const limits = cfg.limits;
      const isPartAFile = cfg.isPartAFile || ((fieldName, contentType, fileName) => contentType === "application/octet-stream" || fileName !== void 0);
      const parsedConType = cfg.parsedConType || [];
      const defCharset = cfg.defCharset || "utf8";
      const preservePath = cfg.preservePath;
      const fileOpts = { highWaterMark: cfg.fileHwm };
      for (i = 0, len = parsedConType.length; i < len; ++i) {
        if (Array.isArray(parsedConType[i]) && RE_BOUNDARY.test(parsedConType[i][0])) {
          boundary = parsedConType[i][1];
          break;
        }
      }
      function checkFinished() {
        if (nends === 0 && finished && !boy._done) {
          finished = false;
          self2.end();
        }
      }
      if (typeof boundary !== "string") {
        throw new Error("Multipart: Boundary not found");
      }
      const fieldSizeLimit = getLimit(limits, "fieldSize", 1 * 1024 * 1024);
      const fileSizeLimit = getLimit(limits, "fileSize", Infinity);
      const filesLimit = getLimit(limits, "files", Infinity);
      const fieldsLimit = getLimit(limits, "fields", Infinity);
      const partsLimit = getLimit(limits, "parts", Infinity);
      const headerPairsLimit = getLimit(limits, "headerPairs", 2e3);
      const headerSizeLimit = getLimit(limits, "headerSize", 80 * 1024);
      let nfiles = 0;
      let nfields = 0;
      let nends = 0;
      let curFile;
      let curField;
      let finished = false;
      this._needDrain = false;
      this._pause = false;
      this._cb = void 0;
      this._nparts = 0;
      this._boy = boy;
      const parserCfg = {
        boundary,
        maxHeaderPairs: headerPairsLimit,
        maxHeaderSize: headerSizeLimit,
        partHwm: fileOpts.highWaterMark,
        highWaterMark: cfg.highWaterMark
      };
      this.parser = new Dicer(parserCfg);
      this.parser.on("drain", function() {
        self2._needDrain = false;
        if (self2._cb && !self2._pause) {
          const cb = self2._cb;
          self2._cb = void 0;
          cb();
        }
      }).on("part", function onPart(part) {
        if (++self2._nparts > partsLimit) {
          self2.parser.removeListener("part", onPart);
          self2.parser.on("part", skipPart);
          boy.hitPartsLimit = true;
          boy.emit("partsLimit");
          return skipPart(part);
        }
        if (curField) {
          const field = curField;
          field.emit("end");
          field.removeAllListeners("end");
        }
        part.on("header", function(header) {
          let contype;
          let fieldname;
          let parsed;
          let charset;
          let encoding;
          let filename;
          let nsize = 0;
          if (header["content-type"]) {
            parsed = parseParams(header["content-type"][0]);
            if (parsed[0]) {
              contype = parsed[0].toLowerCase();
              for (i = 0, len = parsed.length; i < len; ++i) {
                if (RE_CHARSET.test(parsed[i][0])) {
                  charset = parsed[i][1].toLowerCase();
                  break;
                }
              }
            }
          }
          if (contype === void 0) {
            contype = "text/plain";
          }
          if (charset === void 0) {
            charset = defCharset;
          }
          if (header["content-disposition"]) {
            parsed = parseParams(header["content-disposition"][0]);
            if (!RE_FIELD.test(parsed[0])) {
              return skipPart(part);
            }
            for (i = 0, len = parsed.length; i < len; ++i) {
              if (RE_NAME.test(parsed[i][0])) {
                fieldname = parsed[i][1];
              } else if (RE_FILENAME.test(parsed[i][0])) {
                filename = parsed[i][1];
                if (!preservePath) {
                  filename = basename(filename);
                }
              }
            }
          } else {
            return skipPart(part);
          }
          if (header["content-transfer-encoding"]) {
            encoding = header["content-transfer-encoding"][0].toLowerCase();
          } else {
            encoding = "7bit";
          }
          let onData, onEnd;
          if (isPartAFile(fieldname, contype, filename)) {
            if (nfiles === filesLimit) {
              if (!boy.hitFilesLimit) {
                boy.hitFilesLimit = true;
                boy.emit("filesLimit");
              }
              return skipPart(part);
            }
            ++nfiles;
            if (boy.listenerCount("file") === 0) {
              self2.parser._ignore();
              return;
            }
            ++nends;
            const file = new FileStream(fileOpts);
            curFile = file;
            file.on("end", function() {
              --nends;
              self2._pause = false;
              checkFinished();
              if (self2._cb && !self2._needDrain) {
                const cb = self2._cb;
                self2._cb = void 0;
                cb();
              }
            });
            file._read = function(n) {
              if (!self2._pause) {
                return;
              }
              self2._pause = false;
              if (self2._cb && !self2._needDrain) {
                const cb = self2._cb;
                self2._cb = void 0;
                cb();
              }
            };
            boy.emit("file", fieldname, file, filename, encoding, contype);
            onData = function(data) {
              if ((nsize += data.length) > fileSizeLimit) {
                const extralen = fileSizeLimit - nsize + data.length;
                if (extralen > 0) {
                  file.push(data.slice(0, extralen));
                }
                file.truncated = true;
                file.bytesRead = fileSizeLimit;
                part.removeAllListeners("data");
                file.emit("limit");
                return;
              } else if (!file.push(data)) {
                self2._pause = true;
              }
              file.bytesRead = nsize;
            };
            onEnd = function() {
              curFile = void 0;
              file.push(null);
            };
          } else {
            if (nfields === fieldsLimit) {
              if (!boy.hitFieldsLimit) {
                boy.hitFieldsLimit = true;
                boy.emit("fieldsLimit");
              }
              return skipPart(part);
            }
            ++nfields;
            ++nends;
            let buffer = "";
            let truncated = false;
            curField = part;
            onData = function(data) {
              if ((nsize += data.length) > fieldSizeLimit) {
                const extralen = fieldSizeLimit - (nsize - data.length);
                buffer += data.toString("binary", 0, extralen);
                truncated = true;
                part.removeAllListeners("data");
              } else {
                buffer += data.toString("binary");
              }
            };
            onEnd = function() {
              curField = void 0;
              if (buffer.length) {
                buffer = decodeText(buffer, "binary", charset);
              }
              boy.emit("field", fieldname, buffer, false, truncated, encoding, contype);
              --nends;
              checkFinished();
            };
          }
          part._readableState.sync = false;
          part.on("data", onData);
          part.on("end", onEnd);
        }).on("error", function(err) {
          if (curFile) {
            curFile.emit("error", err);
          }
        });
      }).on("error", function(err) {
        boy.emit("error", err);
      }).on("finish", function() {
        finished = true;
        checkFinished();
      });
    }
    Multipart.prototype.write = function(chunk, cb) {
      const r = this.parser.write(chunk);
      if (r && !this._pause) {
        cb();
      } else {
        this._needDrain = !r;
        this._cb = cb;
      }
    };
    Multipart.prototype.end = function() {
      const self2 = this;
      if (self2.parser.writable) {
        self2.parser.end();
      } else if (!self2._boy._done) {
        process.nextTick(function() {
          self2._boy._done = true;
          self2._boy.emit("finish");
        });
      }
    };
    function skipPart(part) {
      part.resume();
    }
    function FileStream(opts) {
      Readable.call(this, opts);
      this.bytesRead = 0;
      this.truncated = false;
    }
    inherits(FileStream, Readable);
    FileStream.prototype._read = function(n) {
    };
    module2.exports = Multipart;
  }
});

// node_modules/@fastify/busboy/lib/utils/Decoder.js
var require_Decoder = __commonJS({
  "node_modules/@fastify/busboy/lib/utils/Decoder.js"(exports2, module2) {
    "use strict";
    var RE_PLUS = /\+/g;
    var HEX = [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      1,
      1,
      1,
      1,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      1,
      1,
      1,
      1,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ];
    function Decoder() {
      this.buffer = void 0;
    }
    Decoder.prototype.write = function(str) {
      str = str.replace(RE_PLUS, " ");
      let res = "";
      let i = 0;
      let p = 0;
      const len = str.length;
      for (; i < len; ++i) {
        if (this.buffer !== void 0) {
          if (!HEX[str.charCodeAt(i)]) {
            res += "%" + this.buffer;
            this.buffer = void 0;
            --i;
          } else {
            this.buffer += str[i];
            ++p;
            if (this.buffer.length === 2) {
              res += String.fromCharCode(parseInt(this.buffer, 16));
              this.buffer = void 0;
            }
          }
        } else if (str[i] === "%") {
          if (i > p) {
            res += str.substring(p, i);
            p = i;
          }
          this.buffer = "";
          ++p;
        }
      }
      if (p < len && this.buffer === void 0) {
        res += str.substring(p);
      }
      return res;
    };
    Decoder.prototype.reset = function() {
      this.buffer = void 0;
    };
    module2.exports = Decoder;
  }
});

// node_modules/@fastify/busboy/lib/types/urlencoded.js
var require_urlencoded = __commonJS({
  "node_modules/@fastify/busboy/lib/types/urlencoded.js"(exports2, module2) {
    "use strict";
    var Decoder = require_Decoder();
    var decodeText = require_decodeText();
    var getLimit = require_getLimit();
    var RE_CHARSET = /^charset$/i;
    UrlEncoded.detect = /^application\/x-www-form-urlencoded/i;
    function UrlEncoded(boy, cfg) {
      const limits = cfg.limits;
      const parsedConType = cfg.parsedConType;
      this.boy = boy;
      this.fieldSizeLimit = getLimit(limits, "fieldSize", 1 * 1024 * 1024);
      this.fieldNameSizeLimit = getLimit(limits, "fieldNameSize", 100);
      this.fieldsLimit = getLimit(limits, "fields", Infinity);
      let charset;
      for (var i = 0, len = parsedConType.length; i < len; ++i) {
        if (Array.isArray(parsedConType[i]) && RE_CHARSET.test(parsedConType[i][0])) {
          charset = parsedConType[i][1].toLowerCase();
          break;
        }
      }
      if (charset === void 0) {
        charset = cfg.defCharset || "utf8";
      }
      this.decoder = new Decoder();
      this.charset = charset;
      this._fields = 0;
      this._state = "key";
      this._checkingBytes = true;
      this._bytesKey = 0;
      this._bytesVal = 0;
      this._key = "";
      this._val = "";
      this._keyTrunc = false;
      this._valTrunc = false;
      this._hitLimit = false;
    }
    UrlEncoded.prototype.write = function(data, cb) {
      if (this._fields === this.fieldsLimit) {
        if (!this.boy.hitFieldsLimit) {
          this.boy.hitFieldsLimit = true;
          this.boy.emit("fieldsLimit");
        }
        return cb();
      }
      let idxeq;
      let idxamp;
      let i;
      let p = 0;
      const len = data.length;
      while (p < len) {
        if (this._state === "key") {
          idxeq = idxamp = void 0;
          for (i = p; i < len; ++i) {
            if (!this._checkingBytes) {
              ++p;
            }
            if (data[i] === 61) {
              idxeq = i;
              break;
            } else if (data[i] === 38) {
              idxamp = i;
              break;
            }
            if (this._checkingBytes && this._bytesKey === this.fieldNameSizeLimit) {
              this._hitLimit = true;
              break;
            } else if (this._checkingBytes) {
              ++this._bytesKey;
            }
          }
          if (idxeq !== void 0) {
            if (idxeq > p) {
              this._key += this.decoder.write(data.toString("binary", p, idxeq));
            }
            this._state = "val";
            this._hitLimit = false;
            this._checkingBytes = true;
            this._val = "";
            this._bytesVal = 0;
            this._valTrunc = false;
            this.decoder.reset();
            p = idxeq + 1;
          } else if (idxamp !== void 0) {
            ++this._fields;
            let key;
            const keyTrunc = this._keyTrunc;
            if (idxamp > p) {
              key = this._key += this.decoder.write(data.toString("binary", p, idxamp));
            } else {
              key = this._key;
            }
            this._hitLimit = false;
            this._checkingBytes = true;
            this._key = "";
            this._bytesKey = 0;
            this._keyTrunc = false;
            this.decoder.reset();
            if (key.length) {
              this.boy.emit(
                "field",
                decodeText(key, "binary", this.charset),
                "",
                keyTrunc,
                false
              );
            }
            p = idxamp + 1;
            if (this._fields === this.fieldsLimit) {
              return cb();
            }
          } else if (this._hitLimit) {
            if (i > p) {
              this._key += this.decoder.write(data.toString("binary", p, i));
            }
            p = i;
            if ((this._bytesKey = this._key.length) === this.fieldNameSizeLimit) {
              this._checkingBytes = false;
              this._keyTrunc = true;
            }
          } else {
            if (p < len) {
              this._key += this.decoder.write(data.toString("binary", p));
            }
            p = len;
          }
        } else {
          idxamp = void 0;
          for (i = p; i < len; ++i) {
            if (!this._checkingBytes) {
              ++p;
            }
            if (data[i] === 38) {
              idxamp = i;
              break;
            }
            if (this._checkingBytes && this._bytesVal === this.fieldSizeLimit) {
              this._hitLimit = true;
              break;
            } else if (this._checkingBytes) {
              ++this._bytesVal;
            }
          }
          if (idxamp !== void 0) {
            ++this._fields;
            if (idxamp > p) {
              this._val += this.decoder.write(data.toString("binary", p, idxamp));
            }
            this.boy.emit(
              "field",
              decodeText(this._key, "binary", this.charset),
              decodeText(this._val, "binary", this.charset),
              this._keyTrunc,
              this._valTrunc
            );
            this._state = "key";
            this._hitLimit = false;
            this._checkingBytes = true;
            this._key = "";
            this._bytesKey = 0;
            this._keyTrunc = false;
            this.decoder.reset();
            p = idxamp + 1;
            if (this._fields === this.fieldsLimit) {
              return cb();
            }
          } else if (this._hitLimit) {
            if (i > p) {
              this._val += this.decoder.write(data.toString("binary", p, i));
            }
            p = i;
            if (this._val === "" && this.fieldSizeLimit === 0 || (this._bytesVal = this._val.length) === this.fieldSizeLimit) {
              this._checkingBytes = false;
              this._valTrunc = true;
            }
          } else {
            if (p < len) {
              this._val += this.decoder.write(data.toString("binary", p));
            }
            p = len;
          }
        }
      }
      cb();
    };
    UrlEncoded.prototype.end = function() {
      if (this.boy._done) {
        return;
      }
      if (this._state === "key" && this._key.length > 0) {
        this.boy.emit(
          "field",
          decodeText(this._key, "binary", this.charset),
          "",
          this._keyTrunc,
          false
        );
      } else if (this._state === "val") {
        this.boy.emit(
          "field",
          decodeText(this._key, "binary", this.charset),
          decodeText(this._val, "binary", this.charset),
          this._keyTrunc,
          this._valTrunc
        );
      }
      this.boy._done = true;
      this.boy.emit("finish");
    };
    module2.exports = UrlEncoded;
  }
});

// node_modules/@fastify/busboy/lib/main.js
var require_main = __commonJS({
  "node_modules/@fastify/busboy/lib/main.js"(exports2, module2) {
    "use strict";
    var WritableStream = require("node:stream").Writable;
    var { inherits } = require("node:util");
    var Dicer = require_Dicer();
    var MultipartParser = require_multipart();
    var UrlencodedParser = require_urlencoded();
    var parseParams = require_parseParams();
    function Busboy(opts) {
      if (!(this instanceof Busboy)) {
        return new Busboy(opts);
      }
      if (typeof opts !== "object") {
        throw new TypeError("Busboy expected an options-Object.");
      }
      if (typeof opts.headers !== "object") {
        throw new TypeError("Busboy expected an options-Object with headers-attribute.");
      }
      if (typeof opts.headers["content-type"] !== "string") {
        throw new TypeError("Missing Content-Type-header.");
      }
      const {
        headers,
        ...streamOptions
      } = opts;
      this.opts = {
        autoDestroy: false,
        ...streamOptions
      };
      WritableStream.call(this, this.opts);
      this._done = false;
      this._parser = this.getParserByHeaders(headers);
      this._finished = false;
    }
    inherits(Busboy, WritableStream);
    Busboy.prototype.emit = function(ev) {
      if (ev === "finish") {
        if (!this._done) {
          this._parser?.end();
          return;
        } else if (this._finished) {
          return;
        }
        this._finished = true;
      }
      WritableStream.prototype.emit.apply(this, arguments);
    };
    Busboy.prototype.getParserByHeaders = function(headers) {
      const parsed = parseParams(headers["content-type"]);
      const cfg = {
        defCharset: this.opts.defCharset,
        fileHwm: this.opts.fileHwm,
        headers,
        highWaterMark: this.opts.highWaterMark,
        isPartAFile: this.opts.isPartAFile,
        limits: this.opts.limits,
        parsedConType: parsed,
        preservePath: this.opts.preservePath
      };
      if (MultipartParser.detect.test(parsed[0])) {
        return new MultipartParser(this, cfg);
      }
      if (UrlencodedParser.detect.test(parsed[0])) {
        return new UrlencodedParser(this, cfg);
      }
      throw new Error("Unsupported Content-Type.");
    };
    Busboy.prototype._write = function(chunk, encoding, cb) {
      this._parser.write(chunk, cb);
    };
    module2.exports = Busboy;
    module2.exports.default = Busboy;
    module2.exports.Busboy = Busboy;
    module2.exports.Dicer = Dicer;
  }
});

// node_modules/undici/lib/fetch/constants.js
var require_constants2 = __commonJS({
  "node_modules/undici/lib/fetch/constants.js"(exports2, module2) {
    "use strict";
    var { MessageChannel, receiveMessageOnPort } = require("worker_threads");
    var corsSafeListedMethods = ["GET", "HEAD", "POST"];
    var corsSafeListedMethodsSet = new Set(corsSafeListedMethods);
    var nullBodyStatus = [101, 204, 205, 304];
    var redirectStatus = [301, 302, 303, 307, 308];
    var redirectStatusSet = new Set(redirectStatus);
    var badPorts = [
      "1",
      "7",
      "9",
      "11",
      "13",
      "15",
      "17",
      "19",
      "20",
      "21",
      "22",
      "23",
      "25",
      "37",
      "42",
      "43",
      "53",
      "69",
      "77",
      "79",
      "87",
      "95",
      "101",
      "102",
      "103",
      "104",
      "109",
      "110",
      "111",
      "113",
      "115",
      "117",
      "119",
      "123",
      "135",
      "137",
      "139",
      "143",
      "161",
      "179",
      "389",
      "427",
      "465",
      "512",
      "513",
      "514",
      "515",
      "526",
      "530",
      "531",
      "532",
      "540",
      "548",
      "554",
      "556",
      "563",
      "587",
      "601",
      "636",
      "989",
      "990",
      "993",
      "995",
      "1719",
      "1720",
      "1723",
      "2049",
      "3659",
      "4045",
      "5060",
      "5061",
      "6000",
      "6566",
      "6665",
      "6666",
      "6667",
      "6668",
      "6669",
      "6697",
      "10080"
    ];
    var badPortsSet = new Set(badPorts);
    var referrerPolicy = [
      "",
      "no-referrer",
      "no-referrer-when-downgrade",
      "same-origin",
      "origin",
      "strict-origin",
      "origin-when-cross-origin",
      "strict-origin-when-cross-origin",
      "unsafe-url"
    ];
    var referrerPolicySet = new Set(referrerPolicy);
    var requestRedirect = ["follow", "manual", "error"];
    var safeMethods = ["GET", "HEAD", "OPTIONS", "TRACE"];
    var safeMethodsSet = new Set(safeMethods);
    var requestMode = ["navigate", "same-origin", "no-cors", "cors"];
    var requestCredentials = ["omit", "same-origin", "include"];
    var requestCache = [
      "default",
      "no-store",
      "reload",
      "no-cache",
      "force-cache",
      "only-if-cached"
    ];
    var requestBodyHeader = [
      "content-encoding",
      "content-language",
      "content-location",
      "content-type",
      // See https://github.com/nodejs/undici/issues/2021
      // 'Content-Length' is a forbidden header name, which is typically
      // removed in the Headers implementation. However, undici doesn't
      // filter out headers, so we add it here.
      "content-length"
    ];
    var requestDuplex = [
      "half"
    ];
    var forbiddenMethods = ["CONNECT", "TRACE", "TRACK"];
    var forbiddenMethodsSet = new Set(forbiddenMethods);
    var subresource = [
      "audio",
      "audioworklet",
      "font",
      "image",
      "manifest",
      "paintworklet",
      "script",
      "style",
      "track",
      "video",
      "xslt",
      ""
    ];
    var subresourceSet = new Set(subresource);
    var DOMException2 = globalThis.DOMException ?? (() => {
      try {
        atob("~");
      } catch (err) {
        return Object.getPrototypeOf(err).constructor;
      }
    })();
    var channel;
    var structuredClone = globalThis.structuredClone ?? // https://github.com/nodejs/node/blob/b27ae24dcc4251bad726d9d84baf678d1f707fed/lib/internal/structured_clone.js
    // structuredClone was added in v17.0.0, but fetch supports v16.8
    function structuredClone2(value, options = void 0) {
      if (arguments.length === 0) {
        throw new TypeError("missing argument");
      }
      if (!channel) {
        channel = new MessageChannel();
      }
      channel.port1.unref();
      channel.port2.unref();
      channel.port1.postMessage(value, options?.transfer);
      return receiveMessageOnPort(channel.port2).message;
    };
    module2.exports = {
      DOMException: DOMException2,
      structuredClone,
      subresource,
      forbiddenMethods,
      requestBodyHeader,
      referrerPolicy,
      requestRedirect,
      requestMode,
      requestCredentials,
      requestCache,
      redirectStatus,
      corsSafeListedMethods,
      nullBodyStatus,
      safeMethods,
      badPorts,
      requestDuplex,
      subresourceSet,
      badPortsSet,
      redirectStatusSet,
      corsSafeListedMethodsSet,
      safeMethodsSet,
      forbiddenMethodsSet,
      referrerPolicySet
    };
  }
});

// node_modules/undici/lib/fetch/global.js
var require_global = __commonJS({
  "node_modules/undici/lib/fetch/global.js"(exports2, module2) {
    "use strict";
    var globalOrigin = Symbol.for("undici.globalOrigin.1");
    function getGlobalOrigin() {
      return globalThis[globalOrigin];
    }
    function setGlobalOrigin(newOrigin) {
      if (newOrigin === void 0) {
        Object.defineProperty(globalThis, globalOrigin, {
          value: void 0,
          writable: true,
          enumerable: false,
          configurable: false
        });
        return;
      }
      const parsedURL = new URL(newOrigin);
      if (parsedURL.protocol !== "http:" && parsedURL.protocol !== "https:") {
        throw new TypeError(`Only http & https urls are allowed, received ${parsedURL.protocol}`);
      }
      Object.defineProperty(globalThis, globalOrigin, {
        value: parsedURL,
        writable: true,
        enumerable: false,
        configurable: false
      });
    }
    module2.exports = {
      getGlobalOrigin,
      setGlobalOrigin
    };
  }
});

// node_modules/undici/lib/fetch/util.js
var require_util2 = __commonJS({
  "node_modules/undici/lib/fetch/util.js"(exports2, module2) {
    "use strict";
    var { redirectStatusSet, referrerPolicySet: referrerPolicyTokens, badPortsSet } = require_constants2();
    var { getGlobalOrigin } = require_global();
    var { performance: performance2 } = require("perf_hooks");
    var { isBlobLike, toUSVString, ReadableStreamFrom } = require_util();
    var assert = require("assert");
    var { isUint8Array } = require("util/types");
    var supportedHashes = [];
    var crypto5;
    try {
      crypto5 = require("crypto");
      const possibleRelevantHashes = ["sha256", "sha384", "sha512"];
      supportedHashes = crypto5.getHashes().filter((hash) => possibleRelevantHashes.includes(hash));
    } catch {
    }
    function responseURL(response) {
      const urlList = response.urlList;
      const length = urlList.length;
      return length === 0 ? null : urlList[length - 1].toString();
    }
    function responseLocationURL(response, requestFragment) {
      if (!redirectStatusSet.has(response.status)) {
        return null;
      }
      let location = response.headersList.get("location");
      if (location !== null && isValidHeaderValue(location)) {
        location = new URL(location, responseURL(response));
      }
      if (location && !location.hash) {
        location.hash = requestFragment;
      }
      return location;
    }
    function requestCurrentURL(request2) {
      return request2.urlList[request2.urlList.length - 1];
    }
    function requestBadPort(request2) {
      const url = requestCurrentURL(request2);
      if (urlIsHttpHttpsScheme(url) && badPortsSet.has(url.port)) {
        return "blocked";
      }
      return "allowed";
    }
    function isErrorLike(object) {
      return object instanceof Error || (object?.constructor?.name === "Error" || object?.constructor?.name === "DOMException");
    }
    function isValidReasonPhrase(statusText) {
      for (let i = 0; i < statusText.length; ++i) {
        const c = statusText.charCodeAt(i);
        if (!(c === 9 || // HTAB
        c >= 32 && c <= 126 || // SP / VCHAR
        c >= 128 && c <= 255)) {
          return false;
        }
      }
      return true;
    }
    function isTokenCharCode(c) {
      switch (c) {
        case 34:
        case 40:
        case 41:
        case 44:
        case 47:
        case 58:
        case 59:
        case 60:
        case 61:
        case 62:
        case 63:
        case 64:
        case 91:
        case 92:
        case 93:
        case 123:
        case 125:
          return false;
        default:
          return c >= 33 && c <= 126;
      }
    }
    function isValidHTTPToken(characters) {
      if (characters.length === 0) {
        return false;
      }
      for (let i = 0; i < characters.length; ++i) {
        if (!isTokenCharCode(characters.charCodeAt(i))) {
          return false;
        }
      }
      return true;
    }
    function isValidHeaderName(potentialValue) {
      return isValidHTTPToken(potentialValue);
    }
    function isValidHeaderValue(potentialValue) {
      if (potentialValue.startsWith("	") || potentialValue.startsWith(" ") || potentialValue.endsWith("	") || potentialValue.endsWith(" ")) {
        return false;
      }
      if (potentialValue.includes("\0") || potentialValue.includes("\r") || potentialValue.includes("\n")) {
        return false;
      }
      return true;
    }
    function setRequestReferrerPolicyOnRedirect(request2, actualResponse) {
      const { headersList } = actualResponse;
      const policyHeader = (headersList.get("referrer-policy") ?? "").split(",");
      let policy = "";
      if (policyHeader.length > 0) {
        for (let i = policyHeader.length; i !== 0; i--) {
          const token = policyHeader[i - 1].trim();
          if (referrerPolicyTokens.has(token)) {
            policy = token;
            break;
          }
        }
      }
      if (policy !== "") {
        request2.referrerPolicy = policy;
      }
    }
    function crossOriginResourcePolicyCheck() {
      return "allowed";
    }
    function corsCheck() {
      return "success";
    }
    function TAOCheck() {
      return "success";
    }
    function appendFetchMetadata(httpRequest) {
      let header = null;
      header = httpRequest.mode;
      httpRequest.headersList.set("sec-fetch-mode", header);
    }
    function appendRequestOriginHeader(request2) {
      let serializedOrigin = request2.origin;
      if (request2.responseTainting === "cors" || request2.mode === "websocket") {
        if (serializedOrigin) {
          request2.headersList.append("origin", serializedOrigin);
        }
      } else if (request2.method !== "GET" && request2.method !== "HEAD") {
        switch (request2.referrerPolicy) {
          case "no-referrer":
            serializedOrigin = null;
            break;
          case "no-referrer-when-downgrade":
          case "strict-origin":
          case "strict-origin-when-cross-origin":
            if (request2.origin && urlHasHttpsScheme(request2.origin) && !urlHasHttpsScheme(requestCurrentURL(request2))) {
              serializedOrigin = null;
            }
            break;
          case "same-origin":
            if (!sameOrigin(request2, requestCurrentURL(request2))) {
              serializedOrigin = null;
            }
            break;
          default:
        }
        if (serializedOrigin) {
          request2.headersList.append("origin", serializedOrigin);
        }
      }
    }
    function coarsenedSharedCurrentTime(crossOriginIsolatedCapability) {
      return performance2.now();
    }
    function createOpaqueTimingInfo(timingInfo) {
      return {
        startTime: timingInfo.startTime ?? 0,
        redirectStartTime: 0,
        redirectEndTime: 0,
        postRedirectStartTime: timingInfo.startTime ?? 0,
        finalServiceWorkerStartTime: 0,
        finalNetworkResponseStartTime: 0,
        finalNetworkRequestStartTime: 0,
        endTime: 0,
        encodedBodySize: 0,
        decodedBodySize: 0,
        finalConnectionTimingInfo: null
      };
    }
    function makePolicyContainer() {
      return {
        referrerPolicy: "strict-origin-when-cross-origin"
      };
    }
    function clonePolicyContainer(policyContainer) {
      return {
        referrerPolicy: policyContainer.referrerPolicy
      };
    }
    function determineRequestsReferrer(request2) {
      const policy = request2.referrerPolicy;
      assert(policy);
      let referrerSource = null;
      if (request2.referrer === "client") {
        const globalOrigin = getGlobalOrigin();
        if (!globalOrigin || globalOrigin.origin === "null") {
          return "no-referrer";
        }
        referrerSource = new URL(globalOrigin);
      } else if (request2.referrer instanceof URL) {
        referrerSource = request2.referrer;
      }
      let referrerURL = stripURLForReferrer(referrerSource);
      const referrerOrigin = stripURLForReferrer(referrerSource, true);
      if (referrerURL.toString().length > 4096) {
        referrerURL = referrerOrigin;
      }
      const areSameOrigin = sameOrigin(request2, referrerURL);
      const isNonPotentiallyTrustWorthy = isURLPotentiallyTrustworthy(referrerURL) && !isURLPotentiallyTrustworthy(request2.url);
      switch (policy) {
        case "origin":
          return referrerOrigin != null ? referrerOrigin : stripURLForReferrer(referrerSource, true);
        case "unsafe-url":
          return referrerURL;
        case "same-origin":
          return areSameOrigin ? referrerOrigin : "no-referrer";
        case "origin-when-cross-origin":
          return areSameOrigin ? referrerURL : referrerOrigin;
        case "strict-origin-when-cross-origin": {
          const currentURL = requestCurrentURL(request2);
          if (sameOrigin(referrerURL, currentURL)) {
            return referrerURL;
          }
          if (isURLPotentiallyTrustworthy(referrerURL) && !isURLPotentiallyTrustworthy(currentURL)) {
            return "no-referrer";
          }
          return referrerOrigin;
        }
        case "strict-origin":
        // eslint-disable-line
        /**
           * 1. If referrerURL is a potentially trustworthy URL and
           * request’s current URL is not a potentially trustworthy URL,
           * then return no referrer.
           * 2. Return referrerOrigin
          */
        case "no-referrer-when-downgrade":
        // eslint-disable-line
        /**
         * 1. If referrerURL is a potentially trustworthy URL and
         * request’s current URL is not a potentially trustworthy URL,
         * then return no referrer.
         * 2. Return referrerOrigin
        */
        default:
          return isNonPotentiallyTrustWorthy ? "no-referrer" : referrerOrigin;
      }
    }
    function stripURLForReferrer(url, originOnly) {
      assert(url instanceof URL);
      if (url.protocol === "file:" || url.protocol === "about:" || url.protocol === "blank:") {
        return "no-referrer";
      }
      url.username = "";
      url.password = "";
      url.hash = "";
      if (originOnly) {
        url.pathname = "";
        url.search = "";
      }
      return url;
    }
    function isURLPotentiallyTrustworthy(url) {
      if (!(url instanceof URL)) {
        return false;
      }
      if (url.href === "about:blank" || url.href === "about:srcdoc") {
        return true;
      }
      if (url.protocol === "data:") return true;
      if (url.protocol === "file:") return true;
      return isOriginPotentiallyTrustworthy(url.origin);
      function isOriginPotentiallyTrustworthy(origin) {
        if (origin == null || origin === "null") return false;
        const originAsURL = new URL(origin);
        if (originAsURL.protocol === "https:" || originAsURL.protocol === "wss:") {
          return true;
        }
        if (/^127(?:\.[0-9]+){0,2}\.[0-9]+$|^\[(?:0*:)*?:?0*1\]$/.test(originAsURL.hostname) || (originAsURL.hostname === "localhost" || originAsURL.hostname.includes("localhost.")) || originAsURL.hostname.endsWith(".localhost")) {
          return true;
        }
        return false;
      }
    }
    function bytesMatch(bytes, metadataList) {
      if (crypto5 === void 0) {
        return true;
      }
      const parsedMetadata = parseMetadata(metadataList);
      if (parsedMetadata === "no metadata") {
        return true;
      }
      if (parsedMetadata.length === 0) {
        return true;
      }
      const strongest = getStrongestMetadata(parsedMetadata);
      const metadata = filterMetadataListByAlgorithm(parsedMetadata, strongest);
      for (const item of metadata) {
        const algorithm = item.algo;
        const expectedValue = item.hash;
        let actualValue = crypto5.createHash(algorithm).update(bytes).digest("base64");
        if (actualValue[actualValue.length - 1] === "=") {
          if (actualValue[actualValue.length - 2] === "=") {
            actualValue = actualValue.slice(0, -2);
          } else {
            actualValue = actualValue.slice(0, -1);
          }
        }
        if (compareBase64Mixed(actualValue, expectedValue)) {
          return true;
        }
      }
      return false;
    }
    var parseHashWithOptions = /(?<algo>sha256|sha384|sha512)-((?<hash>[A-Za-z0-9+/]+|[A-Za-z0-9_-]+)={0,2}(?:\s|$)( +[!-~]*)?)?/i;
    function parseMetadata(metadata) {
      const result = [];
      let empty = true;
      for (const token of metadata.split(" ")) {
        empty = false;
        const parsedToken = parseHashWithOptions.exec(token);
        if (parsedToken === null || parsedToken.groups === void 0 || parsedToken.groups.algo === void 0) {
          continue;
        }
        const algorithm = parsedToken.groups.algo.toLowerCase();
        if (supportedHashes.includes(algorithm)) {
          result.push(parsedToken.groups);
        }
      }
      if (empty === true) {
        return "no metadata";
      }
      return result;
    }
    function getStrongestMetadata(metadataList) {
      let algorithm = metadataList[0].algo;
      if (algorithm[3] === "5") {
        return algorithm;
      }
      for (let i = 1; i < metadataList.length; ++i) {
        const metadata = metadataList[i];
        if (metadata.algo[3] === "5") {
          algorithm = "sha512";
          break;
        } else if (algorithm[3] === "3") {
          continue;
        } else if (metadata.algo[3] === "3") {
          algorithm = "sha384";
        }
      }
      return algorithm;
    }
    function filterMetadataListByAlgorithm(metadataList, algorithm) {
      if (metadataList.length === 1) {
        return metadataList;
      }
      let pos = 0;
      for (let i = 0; i < metadataList.length; ++i) {
        if (metadataList[i].algo === algorithm) {
          metadataList[pos++] = metadataList[i];
        }
      }
      metadataList.length = pos;
      return metadataList;
    }
    function compareBase64Mixed(actualValue, expectedValue) {
      if (actualValue.length !== expectedValue.length) {
        return false;
      }
      for (let i = 0; i < actualValue.length; ++i) {
        if (actualValue[i] !== expectedValue[i]) {
          if (actualValue[i] === "+" && expectedValue[i] === "-" || actualValue[i] === "/" && expectedValue[i] === "_") {
            continue;
          }
          return false;
        }
      }
      return true;
    }
    function tryUpgradeRequestToAPotentiallyTrustworthyURL(request2) {
    }
    function sameOrigin(A, B) {
      if (A.origin === B.origin && A.origin === "null") {
        return true;
      }
      if (A.protocol === B.protocol && A.hostname === B.hostname && A.port === B.port) {
        return true;
      }
      return false;
    }
    function createDeferredPromise() {
      let res;
      let rej;
      const promise = new Promise((resolve, reject) => {
        res = resolve;
        rej = reject;
      });
      return { promise, resolve: res, reject: rej };
    }
    function isAborted(fetchParams) {
      return fetchParams.controller.state === "aborted";
    }
    function isCancelled(fetchParams) {
      return fetchParams.controller.state === "aborted" || fetchParams.controller.state === "terminated";
    }
    var normalizeMethodRecord = {
      delete: "DELETE",
      DELETE: "DELETE",
      get: "GET",
      GET: "GET",
      head: "HEAD",
      HEAD: "HEAD",
      options: "OPTIONS",
      OPTIONS: "OPTIONS",
      post: "POST",
      POST: "POST",
      put: "PUT",
      PUT: "PUT"
    };
    Object.setPrototypeOf(normalizeMethodRecord, null);
    function normalizeMethod(method) {
      return normalizeMethodRecord[method.toLowerCase()] ?? method;
    }
    function serializeJavascriptValueToJSONString(value) {
      const result = JSON.stringify(value);
      if (result === void 0) {
        throw new TypeError("Value is not JSON serializable");
      }
      assert(typeof result === "string");
      return result;
    }
    var esIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]()));
    function makeIterator(iterator2, name3, kind) {
      const object = {
        index: 0,
        kind,
        target: iterator2
      };
      const i = {
        next() {
          if (Object.getPrototypeOf(this) !== i) {
            throw new TypeError(
              `'next' called on an object that does not implement interface ${name3} Iterator.`
            );
          }
          const { index, kind: kind2, target } = object;
          const values = target();
          const len = values.length;
          if (index >= len) {
            return { value: void 0, done: true };
          }
          const pair = values[index];
          object.index = index + 1;
          return iteratorResult(pair, kind2);
        },
        // The class string of an iterator prototype object for a given interface is the
        // result of concatenating the identifier of the interface and the string " Iterator".
        [Symbol.toStringTag]: `${name3} Iterator`
      };
      Object.setPrototypeOf(i, esIteratorPrototype);
      return Object.setPrototypeOf({}, i);
    }
    function iteratorResult(pair, kind) {
      let result;
      switch (kind) {
        case "key": {
          result = pair[0];
          break;
        }
        case "value": {
          result = pair[1];
          break;
        }
        case "key+value": {
          result = pair;
          break;
        }
      }
      return { value: result, done: false };
    }
    async function fullyReadBody(body, processBody, processBodyError) {
      const successSteps = processBody;
      const errorSteps = processBodyError;
      let reader;
      try {
        reader = body.stream.getReader();
      } catch (e) {
        errorSteps(e);
        return;
      }
      try {
        const result = await readAllBytes(reader);
        successSteps(result);
      } catch (e) {
        errorSteps(e);
      }
    }
    var ReadableStream = globalThis.ReadableStream;
    function isReadableStreamLike(stream) {
      if (!ReadableStream) {
        ReadableStream = require("stream/web").ReadableStream;
      }
      return stream instanceof ReadableStream || stream[Symbol.toStringTag] === "ReadableStream" && typeof stream.tee === "function";
    }
    var MAXIMUM_ARGUMENT_LENGTH = 65535;
    function isomorphicDecode(input) {
      if (input.length < MAXIMUM_ARGUMENT_LENGTH) {
        return String.fromCharCode(...input);
      }
      return input.reduce((previous, current) => previous + String.fromCharCode(current), "");
    }
    function readableStreamClose(controller) {
      try {
        controller.close();
      } catch (err) {
        if (!err.message.includes("Controller is already closed")) {
          throw err;
        }
      }
    }
    function isomorphicEncode(input) {
      for (let i = 0; i < input.length; i++) {
        assert(input.charCodeAt(i) <= 255);
      }
      return input;
    }
    async function readAllBytes(reader) {
      const bytes = [];
      let byteLength = 0;
      while (true) {
        const { done, value: chunk } = await reader.read();
        if (done) {
          return Buffer.concat(bytes, byteLength);
        }
        if (!isUint8Array(chunk)) {
          throw new TypeError("Received non-Uint8Array chunk");
        }
        bytes.push(chunk);
        byteLength += chunk.length;
      }
    }
    function urlIsLocal(url) {
      assert("protocol" in url);
      const protocol = url.protocol;
      return protocol === "about:" || protocol === "blob:" || protocol === "data:";
    }
    function urlHasHttpsScheme(url) {
      if (typeof url === "string") {
        return url.startsWith("https:");
      }
      return url.protocol === "https:";
    }
    function urlIsHttpHttpsScheme(url) {
      assert("protocol" in url);
      const protocol = url.protocol;
      return protocol === "http:" || protocol === "https:";
    }
    var hasOwn = Object.hasOwn || ((dict, key) => Object.prototype.hasOwnProperty.call(dict, key));
    module2.exports = {
      isAborted,
      isCancelled,
      createDeferredPromise,
      ReadableStreamFrom,
      toUSVString,
      tryUpgradeRequestToAPotentiallyTrustworthyURL,
      coarsenedSharedCurrentTime,
      determineRequestsReferrer,
      makePolicyContainer,
      clonePolicyContainer,
      appendFetchMetadata,
      appendRequestOriginHeader,
      TAOCheck,
      corsCheck,
      crossOriginResourcePolicyCheck,
      createOpaqueTimingInfo,
      setRequestReferrerPolicyOnRedirect,
      isValidHTTPToken,
      requestBadPort,
      requestCurrentURL,
      responseURL,
      responseLocationURL,
      isBlobLike,
      isURLPotentiallyTrustworthy,
      isValidReasonPhrase,
      sameOrigin,
      normalizeMethod,
      serializeJavascriptValueToJSONString,
      makeIterator,
      isValidHeaderName,
      isValidHeaderValue,
      hasOwn,
      isErrorLike,
      fullyReadBody,
      bytesMatch,
      isReadableStreamLike,
      readableStreamClose,
      isomorphicEncode,
      isomorphicDecode,
      urlIsLocal,
      urlHasHttpsScheme,
      urlIsHttpHttpsScheme,
      readAllBytes,
      normalizeMethodRecord,
      parseMetadata
    };
  }
});

// node_modules/undici/lib/fetch/symbols.js
var require_symbols2 = __commonJS({
  "node_modules/undici/lib/fetch/symbols.js"(exports2, module2) {
    "use strict";
    module2.exports = {
      kUrl: Symbol("url"),
      kHeaders: Symbol("headers"),
      kSignal: Symbol("signal"),
      kState: Symbol("state"),
      kGuard: Symbol("guard"),
      kRealm: Symbol("realm")
    };
  }
});

// node_modules/undici/lib/fetch/webidl.js
var require_webidl = __commonJS({
  "node_modules/undici/lib/fetch/webidl.js"(exports2, module2) {
    "use strict";
    var { types } = require("util");
    var { hasOwn, toUSVString } = require_util2();
    var webidl = {};
    webidl.converters = {};
    webidl.util = {};
    webidl.errors = {};
    webidl.errors.exception = function(message) {
      return new TypeError(`${message.header}: ${message.message}`);
    };
    webidl.errors.conversionFailed = function(context) {
      const plural = context.types.length === 1 ? "" : " one of";
      const message = `${context.argument} could not be converted to${plural}: ${context.types.join(", ")}.`;
      return webidl.errors.exception({
        header: context.prefix,
        message
      });
    };
    webidl.errors.invalidArgument = function(context) {
      return webidl.errors.exception({
        header: context.prefix,
        message: `"${context.value}" is an invalid ${context.type}.`
      });
    };
    webidl.brandCheck = function(V, I, opts = void 0) {
      if (opts?.strict !== false && !(V instanceof I)) {
        throw new TypeError("Illegal invocation");
      } else {
        return V?.[Symbol.toStringTag] === I.prototype[Symbol.toStringTag];
      }
    };
    webidl.argumentLengthCheck = function({ length }, min, ctx) {
      if (length < min) {
        throw webidl.errors.exception({
          message: `${min} argument${min !== 1 ? "s" : ""} required, but${length ? " only" : ""} ${length} found.`,
          ...ctx
        });
      }
    };
    webidl.illegalConstructor = function() {
      throw webidl.errors.exception({
        header: "TypeError",
        message: "Illegal constructor"
      });
    };
    webidl.util.Type = function(V) {
      switch (typeof V) {
        case "undefined":
          return "Undefined";
        case "boolean":
          return "Boolean";
        case "string":
          return "String";
        case "symbol":
          return "Symbol";
        case "number":
          return "Number";
        case "bigint":
          return "BigInt";
        case "function":
        case "object": {
          if (V === null) {
            return "Null";
          }
          return "Object";
        }
      }
    };
    webidl.util.ConvertToInt = function(V, bitLength, signedness, opts = {}) {
      let upperBound;
      let lowerBound;
      if (bitLength === 64) {
        upperBound = Math.pow(2, 53) - 1;
        if (signedness === "unsigned") {
          lowerBound = 0;
        } else {
          lowerBound = Math.pow(-2, 53) + 1;
        }
      } else if (signedness === "unsigned") {
        lowerBound = 0;
        upperBound = Math.pow(2, bitLength) - 1;
      } else {
        lowerBound = Math.pow(-2, bitLength) - 1;
        upperBound = Math.pow(2, bitLength - 1) - 1;
      }
      let x = Number(V);
      if (x === 0) {
        x = 0;
      }
      if (opts.enforceRange === true) {
        if (Number.isNaN(x) || x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY) {
          throw webidl.errors.exception({
            header: "Integer conversion",
            message: `Could not convert ${V} to an integer.`
          });
        }
        x = webidl.util.IntegerPart(x);
        if (x < lowerBound || x > upperBound) {
          throw webidl.errors.exception({
            header: "Integer conversion",
            message: `Value must be between ${lowerBound}-${upperBound}, got ${x}.`
          });
        }
        return x;
      }
      if (!Number.isNaN(x) && opts.clamp === true) {
        x = Math.min(Math.max(x, lowerBound), upperBound);
        if (Math.floor(x) % 2 === 0) {
          x = Math.floor(x);
        } else {
          x = Math.ceil(x);
        }
        return x;
      }
      if (Number.isNaN(x) || x === 0 && Object.is(0, x) || x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY) {
        return 0;
      }
      x = webidl.util.IntegerPart(x);
      x = x % Math.pow(2, bitLength);
      if (signedness === "signed" && x >= Math.pow(2, bitLength) - 1) {
        return x - Math.pow(2, bitLength);
      }
      return x;
    };
    webidl.util.IntegerPart = function(n) {
      const r = Math.floor(Math.abs(n));
      if (n < 0) {
        return -1 * r;
      }
      return r;
    };
    webidl.sequenceConverter = function(converter) {
      return (V) => {
        if (webidl.util.Type(V) !== "Object") {
          throw webidl.errors.exception({
            header: "Sequence",
            message: `Value of type ${webidl.util.Type(V)} is not an Object.`
          });
        }
        const method = V?.[Symbol.iterator]?.();
        const seq = [];
        if (method === void 0 || typeof method.next !== "function") {
          throw webidl.errors.exception({
            header: "Sequence",
            message: "Object is not an iterator."
          });
        }
        while (true) {
          const { done, value } = method.next();
          if (done) {
            break;
          }
          seq.push(converter(value));
        }
        return seq;
      };
    };
    webidl.recordConverter = function(keyConverter, valueConverter) {
      return (O) => {
        if (webidl.util.Type(O) !== "Object") {
          throw webidl.errors.exception({
            header: "Record",
            message: `Value of type ${webidl.util.Type(O)} is not an Object.`
          });
        }
        const result = {};
        if (!types.isProxy(O)) {
          const keys2 = Object.keys(O);
          for (const key of keys2) {
            const typedKey = keyConverter(key);
            const typedValue = valueConverter(O[key]);
            result[typedKey] = typedValue;
          }
          return result;
        }
        const keys = Reflect.ownKeys(O);
        for (const key of keys) {
          const desc = Reflect.getOwnPropertyDescriptor(O, key);
          if (desc?.enumerable) {
            const typedKey = keyConverter(key);
            const typedValue = valueConverter(O[key]);
            result[typedKey] = typedValue;
          }
        }
        return result;
      };
    };
    webidl.interfaceConverter = function(i) {
      return (V, opts = {}) => {
        if (opts.strict !== false && !(V instanceof i)) {
          throw webidl.errors.exception({
            header: i.name,
            message: `Expected ${V} to be an instance of ${i.name}.`
          });
        }
        return V;
      };
    };
    webidl.dictionaryConverter = function(converters) {
      return (dictionary) => {
        const type = webidl.util.Type(dictionary);
        const dict = {};
        if (type === "Null" || type === "Undefined") {
          return dict;
        } else if (type !== "Object") {
          throw webidl.errors.exception({
            header: "Dictionary",
            message: `Expected ${dictionary} to be one of: Null, Undefined, Object.`
          });
        }
        for (const options of converters) {
          const { key, defaultValue, required, converter } = options;
          if (required === true) {
            if (!hasOwn(dictionary, key)) {
              throw webidl.errors.exception({
                header: "Dictionary",
                message: `Missing required key "${key}".`
              });
            }
          }
          let value = dictionary[key];
          const hasDefault = hasOwn(options, "defaultValue");
          if (hasDefault && value !== null) {
            value = value ?? defaultValue;
          }
          if (required || hasDefault || value !== void 0) {
            value = converter(value);
            if (options.allowedValues && !options.allowedValues.includes(value)) {
              throw webidl.errors.exception({
                header: "Dictionary",
                message: `${value} is not an accepted type. Expected one of ${options.allowedValues.join(", ")}.`
              });
            }
            dict[key] = value;
          }
        }
        return dict;
      };
    };
    webidl.nullableConverter = function(converter) {
      return (V) => {
        if (V === null) {
          return V;
        }
        return converter(V);
      };
    };
    webidl.converters.DOMString = function(V, opts = {}) {
      if (V === null && opts.legacyNullToEmptyString) {
        return "";
      }
      if (typeof V === "symbol") {
        throw new TypeError("Could not convert argument of type symbol to string.");
      }
      return String(V);
    };
    webidl.converters.ByteString = function(V) {
      const x = webidl.converters.DOMString(V);
      for (let index = 0; index < x.length; index++) {
        if (x.charCodeAt(index) > 255) {
          throw new TypeError(
            `Cannot convert argument to a ByteString because the character at index ${index} has a value of ${x.charCodeAt(index)} which is greater than 255.`
          );
        }
      }
      return x;
    };
    webidl.converters.USVString = toUSVString;
    webidl.converters.boolean = function(V) {
      const x = Boolean(V);
      return x;
    };
    webidl.converters.any = function(V) {
      return V;
    };
    webidl.converters["long long"] = function(V) {
      const x = webidl.util.ConvertToInt(V, 64, "signed");
      return x;
    };
    webidl.converters["unsigned long long"] = function(V) {
      const x = webidl.util.ConvertToInt(V, 64, "unsigned");
      return x;
    };
    webidl.converters["unsigned long"] = function(V) {
      const x = webidl.util.ConvertToInt(V, 32, "unsigned");
      return x;
    };
    webidl.converters["unsigned short"] = function(V, opts) {
      const x = webidl.util.ConvertToInt(V, 16, "unsigned", opts);
      return x;
    };
    webidl.converters.ArrayBuffer = function(V, opts = {}) {
      if (webidl.util.Type(V) !== "Object" || !types.isAnyArrayBuffer(V)) {
        throw webidl.errors.conversionFailed({
          prefix: `${V}`,
          argument: `${V}`,
          types: ["ArrayBuffer"]
        });
      }
      if (opts.allowShared === false && types.isSharedArrayBuffer(V)) {
        throw webidl.errors.exception({
          header: "ArrayBuffer",
          message: "SharedArrayBuffer is not allowed."
        });
      }
      return V;
    };
    webidl.converters.TypedArray = function(V, T, opts = {}) {
      if (webidl.util.Type(V) !== "Object" || !types.isTypedArray(V) || V.constructor.name !== T.name) {
        throw webidl.errors.conversionFailed({
          prefix: `${T.name}`,
          argument: `${V}`,
          types: [T.name]
        });
      }
      if (opts.allowShared === false && types.isSharedArrayBuffer(V.buffer)) {
        throw webidl.errors.exception({
          header: "ArrayBuffer",
          message: "SharedArrayBuffer is not allowed."
        });
      }
      return V;
    };
    webidl.converters.DataView = function(V, opts = {}) {
      if (webidl.util.Type(V) !== "Object" || !types.isDataView(V)) {
        throw webidl.errors.exception({
          header: "DataView",
          message: "Object is not a DataView."
        });
      }
      if (opts.allowShared === false && types.isSharedArrayBuffer(V.buffer)) {
        throw webidl.errors.exception({
          header: "ArrayBuffer",
          message: "SharedArrayBuffer is not allowed."
        });
      }
      return V;
    };
    webidl.converters.BufferSource = function(V, opts = {}) {
      if (types.isAnyArrayBuffer(V)) {
        return webidl.converters.ArrayBuffer(V, opts);
      }
      if (types.isTypedArray(V)) {
        return webidl.converters.TypedArray(V, V.constructor);
      }
      if (types.isDataView(V)) {
        return webidl.converters.DataView(V, opts);
      }
      throw new TypeError(`Could not convert ${V} to a BufferSource.`);
    };
    webidl.converters["sequence<ByteString>"] = webidl.sequenceConverter(
      webidl.converters.ByteString
    );
    webidl.converters["sequence<sequence<ByteString>>"] = webidl.sequenceConverter(
      webidl.converters["sequence<ByteString>"]
    );
    webidl.converters["record<ByteString, ByteString>"] = webidl.recordConverter(
      webidl.converters.ByteString,
      webidl.converters.ByteString
    );
    module2.exports = {
      webidl
    };
  }
});

// node_modules/undici/lib/fetch/dataURL.js
var require_dataURL = __commonJS({
  "node_modules/undici/lib/fetch/dataURL.js"(exports2, module2) {
    var assert = require("assert");
    var { atob: atob2 } = require("buffer");
    var { isomorphicDecode } = require_util2();
    var encoder = new TextEncoder();
    var HTTP_TOKEN_CODEPOINTS = /^[!#$%&'*+-.^_|~A-Za-z0-9]+$/;
    var HTTP_WHITESPACE_REGEX = /(\u000A|\u000D|\u0009|\u0020)/;
    var HTTP_QUOTED_STRING_TOKENS = /[\u0009|\u0020-\u007E|\u0080-\u00FF]/;
    function dataURLProcessor(dataURL) {
      assert(dataURL.protocol === "data:");
      let input = URLSerializer(dataURL, true);
      input = input.slice(5);
      const position = { position: 0 };
      let mimeType = collectASequenceOfCodePointsFast(
        ",",
        input,
        position
      );
      const mimeTypeLength = mimeType.length;
      mimeType = removeASCIIWhitespace(mimeType, true, true);
      if (position.position >= input.length) {
        return "failure";
      }
      position.position++;
      const encodedBody = input.slice(mimeTypeLength + 1);
      let body = stringPercentDecode(encodedBody);
      if (/;(\u0020){0,}base64$/i.test(mimeType)) {
        const stringBody = isomorphicDecode(body);
        body = forgivingBase64(stringBody);
        if (body === "failure") {
          return "failure";
        }
        mimeType = mimeType.slice(0, -6);
        mimeType = mimeType.replace(/(\u0020)+$/, "");
        mimeType = mimeType.slice(0, -1);
      }
      if (mimeType.startsWith(";")) {
        mimeType = "text/plain" + mimeType;
      }
      let mimeTypeRecord = parseMIMEType(mimeType);
      if (mimeTypeRecord === "failure") {
        mimeTypeRecord = parseMIMEType("text/plain;charset=US-ASCII");
      }
      return { mimeType: mimeTypeRecord, body };
    }
    function URLSerializer(url, excludeFragment = false) {
      if (!excludeFragment) {
        return url.href;
      }
      const href = url.href;
      const hashLength = url.hash.length;
      return hashLength === 0 ? href : href.substring(0, href.length - hashLength);
    }
    function collectASequenceOfCodePoints(condition, input, position) {
      let result = "";
      while (position.position < input.length && condition(input[position.position])) {
        result += input[position.position];
        position.position++;
      }
      return result;
    }
    function collectASequenceOfCodePointsFast(char, input, position) {
      const idx = input.indexOf(char, position.position);
      const start = position.position;
      if (idx === -1) {
        position.position = input.length;
        return input.slice(start);
      }
      position.position = idx;
      return input.slice(start, position.position);
    }
    function stringPercentDecode(input) {
      const bytes = encoder.encode(input);
      return percentDecode(bytes);
    }
    function percentDecode(input) {
      const output = [];
      for (let i = 0; i < input.length; i++) {
        const byte = input[i];
        if (byte !== 37) {
          output.push(byte);
        } else if (byte === 37 && !/^[0-9A-Fa-f]{2}$/i.test(String.fromCharCode(input[i + 1], input[i + 2]))) {
          output.push(37);
        } else {
          const nextTwoBytes = String.fromCharCode(input[i + 1], input[i + 2]);
          const bytePoint = Number.parseInt(nextTwoBytes, 16);
          output.push(bytePoint);
          i += 2;
        }
      }
      return Uint8Array.from(output);
    }
    function parseMIMEType(input) {
      input = removeHTTPWhitespace(input, true, true);
      const position = { position: 0 };
      const type = collectASequenceOfCodePointsFast(
        "/",
        input,
        position
      );
      if (type.length === 0 || !HTTP_TOKEN_CODEPOINTS.test(type)) {
        return "failure";
      }
      if (position.position > input.length) {
        return "failure";
      }
      position.position++;
      let subtype = collectASequenceOfCodePointsFast(
        ";",
        input,
        position
      );
      subtype = removeHTTPWhitespace(subtype, false, true);
      if (subtype.length === 0 || !HTTP_TOKEN_CODEPOINTS.test(subtype)) {
        return "failure";
      }
      const typeLowercase = type.toLowerCase();
      const subtypeLowercase = subtype.toLowerCase();
      const mimeType = {
        type: typeLowercase,
        subtype: subtypeLowercase,
        /** @type {Map<string, string>} */
        parameters: /* @__PURE__ */ new Map(),
        // https://mimesniff.spec.whatwg.org/#mime-type-essence
        essence: `${typeLowercase}/${subtypeLowercase}`
      };
      while (position.position < input.length) {
        position.position++;
        collectASequenceOfCodePoints(
          // https://fetch.spec.whatwg.org/#http-whitespace
          (char) => HTTP_WHITESPACE_REGEX.test(char),
          input,
          position
        );
        let parameterName = collectASequenceOfCodePoints(
          (char) => char !== ";" && char !== "=",
          input,
          position
        );
        parameterName = parameterName.toLowerCase();
        if (position.position < input.length) {
          if (input[position.position] === ";") {
            continue;
          }
          position.position++;
        }
        if (position.position > input.length) {
          break;
        }
        let parameterValue = null;
        if (input[position.position] === '"') {
          parameterValue = collectAnHTTPQuotedString(input, position, true);
          collectASequenceOfCodePointsFast(
            ";",
            input,
            position
          );
        } else {
          parameterValue = collectASequenceOfCodePointsFast(
            ";",
            input,
            position
          );
          parameterValue = removeHTTPWhitespace(parameterValue, false, true);
          if (parameterValue.length === 0) {
            continue;
          }
        }
        if (parameterName.length !== 0 && HTTP_TOKEN_CODEPOINTS.test(parameterName) && (parameterValue.length === 0 || HTTP_QUOTED_STRING_TOKENS.test(parameterValue)) && !mimeType.parameters.has(parameterName)) {
          mimeType.parameters.set(parameterName, parameterValue);
        }
      }
      return mimeType;
    }
    function forgivingBase64(data) {
      data = data.replace(/[\u0009\u000A\u000C\u000D\u0020]/g, "");
      if (data.length % 4 === 0) {
        data = data.replace(/=?=$/, "");
      }
      if (data.length % 4 === 1) {
        return "failure";
      }
      if (/[^+/0-9A-Za-z]/.test(data)) {
        return "failure";
      }
      const binary = atob2(data);
      const bytes = new Uint8Array(binary.length);
      for (let byte = 0; byte < binary.length; byte++) {
        bytes[byte] = binary.charCodeAt(byte);
      }
      return bytes;
    }
    function collectAnHTTPQuotedString(input, position, extractValue) {
      const positionStart = position.position;
      let value = "";
      assert(input[position.position] === '"');
      position.position++;
      while (true) {
        value += collectASequenceOfCodePoints(
          (char) => char !== '"' && char !== "\\",
          input,
          position
        );
        if (position.position >= input.length) {
          break;
        }
        const quoteOrBackslash = input[position.position];
        position.position++;
        if (quoteOrBackslash === "\\") {
          if (position.position >= input.length) {
            value += "\\";
            break;
          }
          value += input[position.position];
          position.position++;
        } else {
          assert(quoteOrBackslash === '"');
          break;
        }
      }
      if (extractValue) {
        return value;
      }
      return input.slice(positionStart, position.position);
    }
    function serializeAMimeType(mimeType) {
      assert(mimeType !== "failure");
      const { parameters, essence } = mimeType;
      let serialization = essence;
      for (let [name3, value] of parameters.entries()) {
        serialization += ";";
        serialization += name3;
        serialization += "=";
        if (!HTTP_TOKEN_CODEPOINTS.test(value)) {
          value = value.replace(/(\\|")/g, "\\$1");
          value = '"' + value;
          value += '"';
        }
        serialization += value;
      }
      return serialization;
    }
    function isHTTPWhiteSpace(char) {
      return char === "\r" || char === "\n" || char === "	" || char === " ";
    }
    function removeHTTPWhitespace(str, leading = true, trailing = true) {
      let lead = 0;
      let trail = str.length - 1;
      if (leading) {
        for (; lead < str.length && isHTTPWhiteSpace(str[lead]); lead++) ;
      }
      if (trailing) {
        for (; trail > 0 && isHTTPWhiteSpace(str[trail]); trail--) ;
      }
      return str.slice(lead, trail + 1);
    }
    function isASCIIWhitespace(char) {
      return char === "\r" || char === "\n" || char === "	" || char === "\f" || char === " ";
    }
    function removeASCIIWhitespace(str, leading = true, trailing = true) {
      let lead = 0;
      let trail = str.length - 1;
      if (leading) {
        for (; lead < str.length && isASCIIWhitespace(str[lead]); lead++) ;
      }
      if (trailing) {
        for (; trail > 0 && isASCIIWhitespace(str[trail]); trail--) ;
      }
      return str.slice(lead, trail + 1);
    }
    module2.exports = {
      dataURLProcessor,
      URLSerializer,
      collectASequenceOfCodePoints,
      collectASequenceOfCodePointsFast,
      stringPercentDecode,
      parseMIMEType,
      collectAnHTTPQuotedString,
      serializeAMimeType
    };
  }
});

// node_modules/undici/lib/fetch/file.js
var require_file = __commonJS({
  "node_modules/undici/lib/fetch/file.js"(exports2, module2) {
    "use strict";
    var { Blob: Blob2, File: NativeFile } = require("buffer");
    var { types } = require("util");
    var { kState } = require_symbols2();
    var { isBlobLike } = require_util2();
    var { webidl } = require_webidl();
    var { parseMIMEType, serializeAMimeType } = require_dataURL();
    var { kEnumerableProperty } = require_util();
    var encoder = new TextEncoder();
    var File = class _File extends Blob2 {
      constructor(fileBits, fileName, options = {}) {
        webidl.argumentLengthCheck(arguments, 2, { header: "File constructor" });
        fileBits = webidl.converters["sequence<BlobPart>"](fileBits);
        fileName = webidl.converters.USVString(fileName);
        options = webidl.converters.FilePropertyBag(options);
        const n = fileName;
        let t = options.type;
        let d;
        substep: {
          if (t) {
            t = parseMIMEType(t);
            if (t === "failure") {
              t = "";
              break substep;
            }
            t = serializeAMimeType(t).toLowerCase();
          }
          d = options.lastModified;
        }
        super(processBlobParts(fileBits, options), { type: t });
        this[kState] = {
          name: n,
          lastModified: d,
          type: t
        };
      }
      get name() {
        webidl.brandCheck(this, _File);
        return this[kState].name;
      }
      get lastModified() {
        webidl.brandCheck(this, _File);
        return this[kState].lastModified;
      }
      get type() {
        webidl.brandCheck(this, _File);
        return this[kState].type;
      }
    };
    var FileLike = class _FileLike {
      constructor(blobLike, fileName, options = {}) {
        const n = fileName;
        const t = options.type;
        const d = options.lastModified ?? Date.now();
        this[kState] = {
          blobLike,
          name: n,
          type: t,
          lastModified: d
        };
      }
      stream(...args) {
        webidl.brandCheck(this, _FileLike);
        return this[kState].blobLike.stream(...args);
      }
      arrayBuffer(...args) {
        webidl.brandCheck(this, _FileLike);
        return this[kState].blobLike.arrayBuffer(...args);
      }
      slice(...args) {
        webidl.brandCheck(this, _FileLike);
        return this[kState].blobLike.slice(...args);
      }
      text(...args) {
        webidl.brandCheck(this, _FileLike);
        return this[kState].blobLike.text(...args);
      }
      get size() {
        webidl.brandCheck(this, _FileLike);
        return this[kState].blobLike.size;
      }
      get type() {
        webidl.brandCheck(this, _FileLike);
        return this[kState].blobLike.type;
      }
      get name() {
        webidl.brandCheck(this, _FileLike);
        return this[kState].name;
      }
      get lastModified() {
        webidl.brandCheck(this, _FileLike);
        return this[kState].lastModified;
      }
      get [Symbol.toStringTag]() {
        return "File";
      }
    };
    Object.defineProperties(File.prototype, {
      [Symbol.toStringTag]: {
        value: "File",
        configurable: true
      },
      name: kEnumerableProperty,
      lastModified: kEnumerableProperty
    });
    webidl.converters.Blob = webidl.interfaceConverter(Blob2);
    webidl.converters.BlobPart = function(V, opts) {
      if (webidl.util.Type(V) === "Object") {
        if (isBlobLike(V)) {
          return webidl.converters.Blob(V, { strict: false });
        }
        if (ArrayBuffer.isView(V) || types.isAnyArrayBuffer(V)) {
          return webidl.converters.BufferSource(V, opts);
        }
      }
      return webidl.converters.USVString(V, opts);
    };
    webidl.converters["sequence<BlobPart>"] = webidl.sequenceConverter(
      webidl.converters.BlobPart
    );
    webidl.converters.FilePropertyBag = webidl.dictionaryConverter([
      {
        key: "lastModified",
        converter: webidl.converters["long long"],
        get defaultValue() {
          return Date.now();
        }
      },
      {
        key: "type",
        converter: webidl.converters.DOMString,
        defaultValue: ""
      },
      {
        key: "endings",
        converter: (value) => {
          value = webidl.converters.DOMString(value);
          value = value.toLowerCase();
          if (value !== "native") {
            value = "transparent";
          }
          return value;
        },
        defaultValue: "transparent"
      }
    ]);
    function processBlobParts(parts, options) {
      const bytes = [];
      for (const element of parts) {
        if (typeof element === "string") {
          let s = element;
          if (options.endings === "native") {
            s = convertLineEndingsNative(s);
          }
          bytes.push(encoder.encode(s));
        } else if (types.isAnyArrayBuffer(element) || types.isTypedArray(element)) {
          if (!element.buffer) {
            bytes.push(new Uint8Array(element));
          } else {
            bytes.push(
              new Uint8Array(element.buffer, element.byteOffset, element.byteLength)
            );
          }
        } else if (isBlobLike(element)) {
          bytes.push(element);
        }
      }
      return bytes;
    }
    function convertLineEndingsNative(s) {
      let nativeLineEnding = "\n";
      if (process.platform === "win32") {
        nativeLineEnding = "\r\n";
      }
      return s.replace(/\r?\n/g, nativeLineEnding);
    }
    function isFileLike(object) {
      return NativeFile && object instanceof NativeFile || object instanceof File || object && (typeof object.stream === "function" || typeof object.arrayBuffer === "function") && object[Symbol.toStringTag] === "File";
    }
    module2.exports = { File, FileLike, isFileLike };
  }
});

// node_modules/undici/lib/fetch/formdata.js
var require_formdata = __commonJS({
  "node_modules/undici/lib/fetch/formdata.js"(exports2, module2) {
    "use strict";
    var { isBlobLike, toUSVString, makeIterator } = require_util2();
    var { kState } = require_symbols2();
    var { File: UndiciFile, FileLike, isFileLike } = require_file();
    var { webidl } = require_webidl();
    var { Blob: Blob2, File: NativeFile } = require("buffer");
    var File = NativeFile ?? UndiciFile;
    var FormData = class _FormData {
      constructor(form) {
        if (form !== void 0) {
          throw webidl.errors.conversionFailed({
            prefix: "FormData constructor",
            argument: "Argument 1",
            types: ["undefined"]
          });
        }
        this[kState] = [];
      }
      append(name3, value, filename = void 0) {
        webidl.brandCheck(this, _FormData);
        webidl.argumentLengthCheck(arguments, 2, { header: "FormData.append" });
        if (arguments.length === 3 && !isBlobLike(value)) {
          throw new TypeError(
            "Failed to execute 'append' on 'FormData': parameter 2 is not of type 'Blob'"
          );
        }
        name3 = webidl.converters.USVString(name3);
        value = isBlobLike(value) ? webidl.converters.Blob(value, { strict: false }) : webidl.converters.USVString(value);
        filename = arguments.length === 3 ? webidl.converters.USVString(filename) : void 0;
        const entry = makeEntry(name3, value, filename);
        this[kState].push(entry);
      }
      delete(name3) {
        webidl.brandCheck(this, _FormData);
        webidl.argumentLengthCheck(arguments, 1, { header: "FormData.delete" });
        name3 = webidl.converters.USVString(name3);
        this[kState] = this[kState].filter((entry) => entry.name !== name3);
      }
      get(name3) {
        webidl.brandCheck(this, _FormData);
        webidl.argumentLengthCheck(arguments, 1, { header: "FormData.get" });
        name3 = webidl.converters.USVString(name3);
        const idx = this[kState].findIndex((entry) => entry.name === name3);
        if (idx === -1) {
          return null;
        }
        return this[kState][idx].value;
      }
      getAll(name3) {
        webidl.brandCheck(this, _FormData);
        webidl.argumentLengthCheck(arguments, 1, { header: "FormData.getAll" });
        name3 = webidl.converters.USVString(name3);
        return this[kState].filter((entry) => entry.name === name3).map((entry) => entry.value);
      }
      has(name3) {
        webidl.brandCheck(this, _FormData);
        webidl.argumentLengthCheck(arguments, 1, { header: "FormData.has" });
        name3 = webidl.converters.USVString(name3);
        return this[kState].findIndex((entry) => entry.name === name3) !== -1;
      }
      set(name3, value, filename = void 0) {
        webidl.brandCheck(this, _FormData);
        webidl.argumentLengthCheck(arguments, 2, { header: "FormData.set" });
        if (arguments.length === 3 && !isBlobLike(value)) {
          throw new TypeError(
            "Failed to execute 'set' on 'FormData': parameter 2 is not of type 'Blob'"
          );
        }
        name3 = webidl.converters.USVString(name3);
        value = isBlobLike(value) ? webidl.converters.Blob(value, { strict: false }) : webidl.converters.USVString(value);
        filename = arguments.length === 3 ? toUSVString(filename) : void 0;
        const entry = makeEntry(name3, value, filename);
        const idx = this[kState].findIndex((entry2) => entry2.name === name3);
        if (idx !== -1) {
          this[kState] = [
            ...this[kState].slice(0, idx),
            entry,
            ...this[kState].slice(idx + 1).filter((entry2) => entry2.name !== name3)
          ];
        } else {
          this[kState].push(entry);
        }
      }
      entries() {
        webidl.brandCheck(this, _FormData);
        return makeIterator(
          () => this[kState].map((pair) => [pair.name, pair.value]),
          "FormData",
          "key+value"
        );
      }
      keys() {
        webidl.brandCheck(this, _FormData);
        return makeIterator(
          () => this[kState].map((pair) => [pair.name, pair.value]),
          "FormData",
          "key"
        );
      }
      values() {
        webidl.brandCheck(this, _FormData);
        return makeIterator(
          () => this[kState].map((pair) => [pair.name, pair.value]),
          "FormData",
          "value"
        );
      }
      /**
       * @param {(value: string, key: string, self: FormData) => void} callbackFn
       * @param {unknown} thisArg
       */
      forEach(callbackFn, thisArg = globalThis) {
        webidl.brandCheck(this, _FormData);
        webidl.argumentLengthCheck(arguments, 1, { header: "FormData.forEach" });
        if (typeof callbackFn !== "function") {
          throw new TypeError(
            "Failed to execute 'forEach' on 'FormData': parameter 1 is not of type 'Function'."
          );
        }
        for (const [key, value] of this) {
          callbackFn.apply(thisArg, [value, key, this]);
        }
      }
    };
    FormData.prototype[Symbol.iterator] = FormData.prototype.entries;
    Object.defineProperties(FormData.prototype, {
      [Symbol.toStringTag]: {
        value: "FormData",
        configurable: true
      }
    });
    function makeEntry(name3, value, filename) {
      name3 = Buffer.from(name3).toString("utf8");
      if (typeof value === "string") {
        value = Buffer.from(value).toString("utf8");
      } else {
        if (!isFileLike(value)) {
          value = value instanceof Blob2 ? new File([value], "blob", { type: value.type }) : new FileLike(value, "blob", { type: value.type });
        }
        if (filename !== void 0) {
          const options = {
            type: value.type,
            lastModified: value.lastModified
          };
          value = NativeFile && value instanceof NativeFile || value instanceof UndiciFile ? new File([value], filename, options) : new FileLike(value, filename, options);
        }
      }
      return { name: name3, value };
    }
    module2.exports = { FormData };
  }
});

// node_modules/undici/lib/fetch/body.js
var require_body = __commonJS({
  "node_modules/undici/lib/fetch/body.js"(exports2, module2) {
    "use strict";
    var Busboy = require_main();
    var util = require_util();
    var {
      ReadableStreamFrom,
      isBlobLike,
      isReadableStreamLike,
      readableStreamClose,
      createDeferredPromise,
      fullyReadBody
    } = require_util2();
    var { FormData } = require_formdata();
    var { kState } = require_symbols2();
    var { webidl } = require_webidl();
    var { DOMException: DOMException2, structuredClone } = require_constants2();
    var { Blob: Blob2, File: NativeFile } = require("buffer");
    var { kBodyUsed } = require_symbols();
    var assert = require("assert");
    var { isErrored } = require_util();
    var { isUint8Array, isArrayBuffer } = require("util/types");
    var { File: UndiciFile } = require_file();
    var { parseMIMEType, serializeAMimeType } = require_dataURL();
    var random;
    try {
      const crypto5 = require("node:crypto");
      random = (max) => crypto5.randomInt(0, max);
    } catch {
      random = (max) => Math.floor(Math.random(max));
    }
    var ReadableStream = globalThis.ReadableStream;
    var File = NativeFile ?? UndiciFile;
    var textEncoder = new TextEncoder();
    var textDecoder = new TextDecoder();
    function extractBody(object, keepalive = false) {
      if (!ReadableStream) {
        ReadableStream = require("stream/web").ReadableStream;
      }
      let stream = null;
      if (object instanceof ReadableStream) {
        stream = object;
      } else if (isBlobLike(object)) {
        stream = object.stream();
      } else {
        stream = new ReadableStream({
          async pull(controller) {
            controller.enqueue(
              typeof source === "string" ? textEncoder.encode(source) : source
            );
            queueMicrotask(() => readableStreamClose(controller));
          },
          start() {
          },
          type: void 0
        });
      }
      assert(isReadableStreamLike(stream));
      let action = null;
      let source = null;
      let length = null;
      let type = null;
      if (typeof object === "string") {
        source = object;
        type = "text/plain;charset=UTF-8";
      } else if (object instanceof URLSearchParams) {
        source = object.toString();
        type = "application/x-www-form-urlencoded;charset=UTF-8";
      } else if (isArrayBuffer(object)) {
        source = new Uint8Array(object.slice());
      } else if (ArrayBuffer.isView(object)) {
        source = new Uint8Array(object.buffer.slice(object.byteOffset, object.byteOffset + object.byteLength));
      } else if (util.isFormDataLike(object)) {
        const boundary = `----formdata-undici-0${`${random(1e11)}`.padStart(11, "0")}`;
        const prefix = `--${boundary}\r
Content-Disposition: form-data`;
        const escape2 = (str) => str.replace(/\n/g, "%0A").replace(/\r/g, "%0D").replace(/"/g, "%22");
        const normalizeLinefeeds = (value) => value.replace(/\r?\n|\r/g, "\r\n");
        const blobParts = [];
        const rn = new Uint8Array([13, 10]);
        length = 0;
        let hasUnknownSizeValue = false;
        for (const [name3, value] of object) {
          if (typeof value === "string") {
            const chunk2 = textEncoder.encode(prefix + `; name="${escape2(normalizeLinefeeds(name3))}"\r
\r
${normalizeLinefeeds(value)}\r
`);
            blobParts.push(chunk2);
            length += chunk2.byteLength;
          } else {
            const chunk2 = textEncoder.encode(`${prefix}; name="${escape2(normalizeLinefeeds(name3))}"` + (value.name ? `; filename="${escape2(value.name)}"` : "") + `\r
Content-Type: ${value.type || "application/octet-stream"}\r
\r
`);
            blobParts.push(chunk2, value, rn);
            if (typeof value.size === "number") {
              length += chunk2.byteLength + value.size + rn.byteLength;
            } else {
              hasUnknownSizeValue = true;
            }
          }
        }
        const chunk = textEncoder.encode(`--${boundary}--`);
        blobParts.push(chunk);
        length += chunk.byteLength;
        if (hasUnknownSizeValue) {
          length = null;
        }
        source = object;
        action = async function* () {
          for (const part of blobParts) {
            if (part.stream) {
              yield* part.stream();
            } else {
              yield part;
            }
          }
        };
        type = "multipart/form-data; boundary=" + boundary;
      } else if (isBlobLike(object)) {
        source = object;
        length = object.size;
        if (object.type) {
          type = object.type;
        }
      } else if (typeof object[Symbol.asyncIterator] === "function") {
        if (keepalive) {
          throw new TypeError("keepalive");
        }
        if (util.isDisturbed(object) || object.locked) {
          throw new TypeError(
            "Response body object should not be disturbed or locked"
          );
        }
        stream = object instanceof ReadableStream ? object : ReadableStreamFrom(object);
      }
      if (typeof source === "string" || util.isBuffer(source)) {
        length = Buffer.byteLength(source);
      }
      if (action != null) {
        let iterator2;
        stream = new ReadableStream({
          async start() {
            iterator2 = action(object)[Symbol.asyncIterator]();
          },
          async pull(controller) {
            const { value, done } = await iterator2.next();
            if (done) {
              queueMicrotask(() => {
                controller.close();
              });
            } else {
              if (!isErrored(stream)) {
                controller.enqueue(new Uint8Array(value));
              }
            }
            return controller.desiredSize > 0;
          },
          async cancel(reason) {
            await iterator2.return();
          },
          type: void 0
        });
      }
      const body = { stream, source, length };
      return [body, type];
    }
    function safelyExtractBody(object, keepalive = false) {
      if (!ReadableStream) {
        ReadableStream = require("stream/web").ReadableStream;
      }
      if (object instanceof ReadableStream) {
        assert(!util.isDisturbed(object), "The body has already been consumed.");
        assert(!object.locked, "The stream is locked.");
      }
      return extractBody(object, keepalive);
    }
    function cloneBody(body) {
      const [out1, out2] = body.stream.tee();
      const out2Clone = structuredClone(out2, { transfer: [out2] });
      const [, finalClone] = out2Clone.tee();
      body.stream = out1;
      return {
        stream: finalClone,
        length: body.length,
        source: body.source
      };
    }
    async function* consumeBody(body) {
      if (body) {
        if (isUint8Array(body)) {
          yield body;
        } else {
          const stream = body.stream;
          if (util.isDisturbed(stream)) {
            throw new TypeError("The body has already been consumed.");
          }
          if (stream.locked) {
            throw new TypeError("The stream is locked.");
          }
          stream[kBodyUsed] = true;
          yield* stream;
        }
      }
    }
    function throwIfAborted(state) {
      if (state.aborted) {
        throw new DOMException2("The operation was aborted.", "AbortError");
      }
    }
    function bodyMixinMethods(instance) {
      const methods = {
        blob() {
          return specConsumeBody(this, (bytes) => {
            let mimeType = bodyMimeType(this);
            if (mimeType === "failure") {
              mimeType = "";
            } else if (mimeType) {
              mimeType = serializeAMimeType(mimeType);
            }
            return new Blob2([bytes], { type: mimeType });
          }, instance);
        },
        arrayBuffer() {
          return specConsumeBody(this, (bytes) => {
            return new Uint8Array(bytes).buffer;
          }, instance);
        },
        text() {
          return specConsumeBody(this, utf8DecodeBytes, instance);
        },
        json() {
          return specConsumeBody(this, parseJSONFromBytes, instance);
        },
        async formData() {
          webidl.brandCheck(this, instance);
          throwIfAborted(this[kState]);
          const contentType = this.headers.get("Content-Type");
          if (/multipart\/form-data/.test(contentType)) {
            const headers = {};
            for (const [key, value] of this.headers) headers[key.toLowerCase()] = value;
            const responseFormData = new FormData();
            let busboy;
            try {
              busboy = new Busboy({
                headers,
                preservePath: true
              });
            } catch (err) {
              throw new DOMException2(`${err}`, "AbortError");
            }
            busboy.on("field", (name3, value) => {
              responseFormData.append(name3, value);
            });
            busboy.on("file", (name3, value, filename, encoding, mimeType) => {
              const chunks = [];
              if (encoding === "base64" || encoding.toLowerCase() === "base64") {
                let base64chunk = "";
                value.on("data", (chunk) => {
                  base64chunk += chunk.toString().replace(/[\r\n]/gm, "");
                  const end = base64chunk.length - base64chunk.length % 4;
                  chunks.push(Buffer.from(base64chunk.slice(0, end), "base64"));
                  base64chunk = base64chunk.slice(end);
                });
                value.on("end", () => {
                  chunks.push(Buffer.from(base64chunk, "base64"));
                  responseFormData.append(name3, new File(chunks, filename, { type: mimeType }));
                });
              } else {
                value.on("data", (chunk) => {
                  chunks.push(chunk);
                });
                value.on("end", () => {
                  responseFormData.append(name3, new File(chunks, filename, { type: mimeType }));
                });
              }
            });
            const busboyResolve = new Promise((resolve, reject) => {
              busboy.on("finish", resolve);
              busboy.on("error", (err) => reject(new TypeError(err)));
            });
            if (this.body !== null) for await (const chunk of consumeBody(this[kState].body)) busboy.write(chunk);
            busboy.end();
            await busboyResolve;
            return responseFormData;
          } else if (/application\/x-www-form-urlencoded/.test(contentType)) {
            let entries;
            try {
              let text = "";
              const streamingDecoder = new TextDecoder("utf-8", { ignoreBOM: true });
              for await (const chunk of consumeBody(this[kState].body)) {
                if (!isUint8Array(chunk)) {
                  throw new TypeError("Expected Uint8Array chunk");
                }
                text += streamingDecoder.decode(chunk, { stream: true });
              }
              text += streamingDecoder.decode();
              entries = new URLSearchParams(text);
            } catch (err) {
              throw Object.assign(new TypeError(), { cause: err });
            }
            const formData = new FormData();
            for (const [name3, value] of entries) {
              formData.append(name3, value);
            }
            return formData;
          } else {
            await Promise.resolve();
            throwIfAborted(this[kState]);
            throw webidl.errors.exception({
              header: `${instance.name}.formData`,
              message: "Could not parse content as FormData."
            });
          }
        }
      };
      return methods;
    }
    function mixinBody(prototype) {
      Object.assign(prototype.prototype, bodyMixinMethods(prototype));
    }
    async function specConsumeBody(object, convertBytesToJSValue, instance) {
      webidl.brandCheck(object, instance);
      throwIfAborted(object[kState]);
      if (bodyUnusable(object[kState].body)) {
        throw new TypeError("Body is unusable");
      }
      const promise = createDeferredPromise();
      const errorSteps = (error) => promise.reject(error);
      const successSteps = (data) => {
        try {
          promise.resolve(convertBytesToJSValue(data));
        } catch (e) {
          errorSteps(e);
        }
      };
      if (object[kState].body == null) {
        successSteps(new Uint8Array());
        return promise.promise;
      }
      await fullyReadBody(object[kState].body, successSteps, errorSteps);
      return promise.promise;
    }
    function bodyUnusable(body) {
      return body != null && (body.stream.locked || util.isDisturbed(body.stream));
    }
    function utf8DecodeBytes(buffer) {
      if (buffer.length === 0) {
        return "";
      }
      if (buffer[0] === 239 && buffer[1] === 187 && buffer[2] === 191) {
        buffer = buffer.subarray(3);
      }
      const output = textDecoder.decode(buffer);
      return output;
    }
    function parseJSONFromBytes(bytes) {
      return JSON.parse(utf8DecodeBytes(bytes));
    }
    function bodyMimeType(object) {
      const { headersList } = object[kState];
      const contentType = headersList.get("content-type");
      if (contentType === null) {
        return "failure";
      }
      return parseMIMEType(contentType);
    }
    module2.exports = {
      extractBody,
      safelyExtractBody,
      cloneBody,
      mixinBody
    };
  }
});

// node_modules/undici/lib/core/request.js
var require_request = __commonJS({
  "node_modules/undici/lib/core/request.js"(exports2, module2) {
    "use strict";
    var {
      InvalidArgumentError,
      NotSupportedError
    } = require_errors();
    var assert = require("assert");
    var { kHTTP2BuildRequest, kHTTP2CopyHeaders, kHTTP1BuildRequest } = require_symbols();
    var util = require_util();
    var tokenRegExp = /^[\^_`a-zA-Z\-0-9!#$%&'*+.|~]+$/;
    var headerCharRegex = /[^\t\x20-\x7e\x80-\xff]/;
    var invalidPathRegex = /[^\u0021-\u00ff]/;
    var kHandler = Symbol("handler");
    var channels = {};
    var extractBody;
    try {
      const diagnosticsChannel = require("diagnostics_channel");
      channels.create = diagnosticsChannel.channel("undici:request:create");
      channels.bodySent = diagnosticsChannel.channel("undici:request:bodySent");
      channels.headers = diagnosticsChannel.channel("undici:request:headers");
      channels.trailers = diagnosticsChannel.channel("undici:request:trailers");
      channels.error = diagnosticsChannel.channel("undici:request:error");
    } catch {
      channels.create = { hasSubscribers: false };
      channels.bodySent = { hasSubscribers: false };
      channels.headers = { hasSubscribers: false };
      channels.trailers = { hasSubscribers: false };
      channels.error = { hasSubscribers: false };
    }
    var Request = class _Request {
      constructor(origin, {
        path,
        method,
        body,
        headers,
        query,
        idempotent,
        blocking,
        upgrade,
        headersTimeout,
        bodyTimeout,
        reset,
        throwOnError,
        expectContinue
      }, handler2) {
        if (typeof path !== "string") {
          throw new InvalidArgumentError("path must be a string");
        } else if (path[0] !== "/" && !(path.startsWith("http://") || path.startsWith("https://")) && method !== "CONNECT") {
          throw new InvalidArgumentError("path must be an absolute URL or start with a slash");
        } else if (invalidPathRegex.exec(path) !== null) {
          throw new InvalidArgumentError("invalid request path");
        }
        if (typeof method !== "string") {
          throw new InvalidArgumentError("method must be a string");
        } else if (tokenRegExp.exec(method) === null) {
          throw new InvalidArgumentError("invalid request method");
        }
        if (upgrade && typeof upgrade !== "string") {
          throw new InvalidArgumentError("upgrade must be a string");
        }
        if (headersTimeout != null && (!Number.isFinite(headersTimeout) || headersTimeout < 0)) {
          throw new InvalidArgumentError("invalid headersTimeout");
        }
        if (bodyTimeout != null && (!Number.isFinite(bodyTimeout) || bodyTimeout < 0)) {
          throw new InvalidArgumentError("invalid bodyTimeout");
        }
        if (reset != null && typeof reset !== "boolean") {
          throw new InvalidArgumentError("invalid reset");
        }
        if (expectContinue != null && typeof expectContinue !== "boolean") {
          throw new InvalidArgumentError("invalid expectContinue");
        }
        this.headersTimeout = headersTimeout;
        this.bodyTimeout = bodyTimeout;
        this.throwOnError = throwOnError === true;
        this.method = method;
        this.abort = null;
        if (body == null) {
          this.body = null;
        } else if (util.isStream(body)) {
          this.body = body;
          const rState = this.body._readableState;
          if (!rState || !rState.autoDestroy) {
            this.endHandler = function autoDestroy() {
              util.destroy(this);
            };
            this.body.on("end", this.endHandler);
          }
          this.errorHandler = (err) => {
            if (this.abort) {
              this.abort(err);
            } else {
              this.error = err;
            }
          };
          this.body.on("error", this.errorHandler);
        } else if (util.isBuffer(body)) {
          this.body = body.byteLength ? body : null;
        } else if (ArrayBuffer.isView(body)) {
          this.body = body.buffer.byteLength ? Buffer.from(body.buffer, body.byteOffset, body.byteLength) : null;
        } else if (body instanceof ArrayBuffer) {
          this.body = body.byteLength ? Buffer.from(body) : null;
        } else if (typeof body === "string") {
          this.body = body.length ? Buffer.from(body) : null;
        } else if (util.isFormDataLike(body) || util.isIterable(body) || util.isBlobLike(body)) {
          this.body = body;
        } else {
          throw new InvalidArgumentError("body must be a string, a Buffer, a Readable stream, an iterable, or an async iterable");
        }
        this.completed = false;
        this.aborted = false;
        this.upgrade = upgrade || null;
        this.path = query ? util.buildURL(path, query) : path;
        this.origin = origin;
        this.idempotent = idempotent == null ? method === "HEAD" || method === "GET" : idempotent;
        this.blocking = blocking == null ? false : blocking;
        this.reset = reset == null ? null : reset;
        this.host = null;
        this.contentLength = null;
        this.contentType = null;
        this.headers = "";
        this.expectContinue = expectContinue != null ? expectContinue : false;
        if (Array.isArray(headers)) {
          if (headers.length % 2 !== 0) {
            throw new InvalidArgumentError("headers array must be even");
          }
          for (let i = 0; i < headers.length; i += 2) {
            processHeader(this, headers[i], headers[i + 1]);
          }
        } else if (headers && typeof headers === "object") {
          const keys = Object.keys(headers);
          for (let i = 0; i < keys.length; i++) {
            const key = keys[i];
            processHeader(this, key, headers[key]);
          }
        } else if (headers != null) {
          throw new InvalidArgumentError("headers must be an object or an array");
        }
        if (util.isFormDataLike(this.body)) {
          if (util.nodeMajor < 16 || util.nodeMajor === 16 && util.nodeMinor < 8) {
            throw new InvalidArgumentError("Form-Data bodies are only supported in node v16.8 and newer.");
          }
          if (!extractBody) {
            extractBody = require_body().extractBody;
          }
          const [bodyStream, contentType] = extractBody(body);
          if (this.contentType == null) {
            this.contentType = contentType;
            this.headers += `content-type: ${contentType}\r
`;
          }
          this.body = bodyStream.stream;
          this.contentLength = bodyStream.length;
        } else if (util.isBlobLike(body) && this.contentType == null && body.type) {
          this.contentType = body.type;
          this.headers += `content-type: ${body.type}\r
`;
        }
        util.validateHandler(handler2, method, upgrade);
        this.servername = util.getServerName(this.host);
        this[kHandler] = handler2;
        if (channels.create.hasSubscribers) {
          channels.create.publish({ request: this });
        }
      }
      onBodySent(chunk) {
        if (this[kHandler].onBodySent) {
          try {
            return this[kHandler].onBodySent(chunk);
          } catch (err) {
            this.abort(err);
          }
        }
      }
      onRequestSent() {
        if (channels.bodySent.hasSubscribers) {
          channels.bodySent.publish({ request: this });
        }
        if (this[kHandler].onRequestSent) {
          try {
            return this[kHandler].onRequestSent();
          } catch (err) {
            this.abort(err);
          }
        }
      }
      onConnect(abort) {
        assert(!this.aborted);
        assert(!this.completed);
        if (this.error) {
          abort(this.error);
        } else {
          this.abort = abort;
          return this[kHandler].onConnect(abort);
        }
      }
      onHeaders(statusCode, headers, resume, statusText) {
        assert(!this.aborted);
        assert(!this.completed);
        if (channels.headers.hasSubscribers) {
          channels.headers.publish({ request: this, response: { statusCode, headers, statusText } });
        }
        try {
          return this[kHandler].onHeaders(statusCode, headers, resume, statusText);
        } catch (err) {
          this.abort(err);
        }
      }
      onData(chunk) {
        assert(!this.aborted);
        assert(!this.completed);
        try {
          return this[kHandler].onData(chunk);
        } catch (err) {
          this.abort(err);
          return false;
        }
      }
      onUpgrade(statusCode, headers, socket) {
        assert(!this.aborted);
        assert(!this.completed);
        return this[kHandler].onUpgrade(statusCode, headers, socket);
      }
      onComplete(trailers) {
        this.onFinally();
        assert(!this.aborted);
        this.completed = true;
        if (channels.trailers.hasSubscribers) {
          channels.trailers.publish({ request: this, trailers });
        }
        try {
          return this[kHandler].onComplete(trailers);
        } catch (err) {
          this.onError(err);
        }
      }
      onError(error) {
        this.onFinally();
        if (channels.error.hasSubscribers) {
          channels.error.publish({ request: this, error });
        }
        if (this.aborted) {
          return;
        }
        this.aborted = true;
        return this[kHandler].onError(error);
      }
      onFinally() {
        if (this.errorHandler) {
          this.body.off("error", this.errorHandler);
          this.errorHandler = null;
        }
        if (this.endHandler) {
          this.body.off("end", this.endHandler);
          this.endHandler = null;
        }
      }
      // TODO: adjust to support H2
      addHeader(key, value) {
        processHeader(this, key, value);
        return this;
      }
      static [kHTTP1BuildRequest](origin, opts, handler2) {
        return new _Request(origin, opts, handler2);
      }
      static [kHTTP2BuildRequest](origin, opts, handler2) {
        const headers = opts.headers;
        opts = { ...opts, headers: null };
        const request2 = new _Request(origin, opts, handler2);
        request2.headers = {};
        if (Array.isArray(headers)) {
          if (headers.length % 2 !== 0) {
            throw new InvalidArgumentError("headers array must be even");
          }
          for (let i = 0; i < headers.length; i += 2) {
            processHeader(request2, headers[i], headers[i + 1], true);
          }
        } else if (headers && typeof headers === "object") {
          const keys = Object.keys(headers);
          for (let i = 0; i < keys.length; i++) {
            const key = keys[i];
            processHeader(request2, key, headers[key], true);
          }
        } else if (headers != null) {
          throw new InvalidArgumentError("headers must be an object or an array");
        }
        return request2;
      }
      static [kHTTP2CopyHeaders](raw) {
        const rawHeaders = raw.split("\r\n");
        const headers = {};
        for (const header of rawHeaders) {
          const [key, value] = header.split(": ");
          if (value == null || value.length === 0) continue;
          if (headers[key]) headers[key] += `,${value}`;
          else headers[key] = value;
        }
        return headers;
      }
    };
    function processHeaderValue(key, val, skipAppend) {
      if (val && typeof val === "object") {
        throw new InvalidArgumentError(`invalid ${key} header`);
      }
      val = val != null ? `${val}` : "";
      if (headerCharRegex.exec(val) !== null) {
        throw new InvalidArgumentError(`invalid ${key} header`);
      }
      return skipAppend ? val : `${key}: ${val}\r
`;
    }
    function processHeader(request2, key, val, skipAppend = false) {
      if (val && (typeof val === "object" && !Array.isArray(val))) {
        throw new InvalidArgumentError(`invalid ${key} header`);
      } else if (val === void 0) {
        return;
      }
      if (request2.host === null && key.length === 4 && key.toLowerCase() === "host") {
        if (headerCharRegex.exec(val) !== null) {
          throw new InvalidArgumentError(`invalid ${key} header`);
        }
        request2.host = val;
      } else if (request2.contentLength === null && key.length === 14 && key.toLowerCase() === "content-length") {
        request2.contentLength = parseInt(val, 10);
        if (!Number.isFinite(request2.contentLength)) {
          throw new InvalidArgumentError("invalid content-length header");
        }
      } else if (request2.contentType === null && key.length === 12 && key.toLowerCase() === "content-type") {
        request2.contentType = val;
        if (skipAppend) request2.headers[key] = processHeaderValue(key, val, skipAppend);
        else request2.headers += processHeaderValue(key, val);
      } else if (key.length === 17 && key.toLowerCase() === "transfer-encoding") {
        throw new InvalidArgumentError("invalid transfer-encoding header");
      } else if (key.length === 10 && key.toLowerCase() === "connection") {
        const value = typeof val === "string" ? val.toLowerCase() : null;
        if (value !== "close" && value !== "keep-alive") {
          throw new InvalidArgumentError("invalid connection header");
        } else if (value === "close") {
          request2.reset = true;
        }
      } else if (key.length === 10 && key.toLowerCase() === "keep-alive") {
        throw new InvalidArgumentError("invalid keep-alive header");
      } else if (key.length === 7 && key.toLowerCase() === "upgrade") {
        throw new InvalidArgumentError("invalid upgrade header");
      } else if (key.length === 6 && key.toLowerCase() === "expect") {
        throw new NotSupportedError("expect header not supported");
      } else if (tokenRegExp.exec(key) === null) {
        throw new InvalidArgumentError("invalid header key");
      } else {
        if (Array.isArray(val)) {
          for (let i = 0; i < val.length; i++) {
            if (skipAppend) {
              if (request2.headers[key]) request2.headers[key] += `,${processHeaderValue(key, val[i], skipAppend)}`;
              else request2.headers[key] = processHeaderValue(key, val[i], skipAppend);
            } else {
              request2.headers += processHeaderValue(key, val[i]);
            }
          }
        } else {
          if (skipAppend) request2.headers[key] = processHeaderValue(key, val, skipAppend);
          else request2.headers += processHeaderValue(key, val);
        }
      }
    }
    module2.exports = Request;
  }
});

// node_modules/undici/lib/dispatcher.js
var require_dispatcher = __commonJS({
  "node_modules/undici/lib/dispatcher.js"(exports2, module2) {
    "use strict";
    var EventEmitter = require("events");
    var Dispatcher = class extends EventEmitter {
      dispatch() {
        throw new Error("not implemented");
      }
      close() {
        throw new Error("not implemented");
      }
      destroy() {
        throw new Error("not implemented");
      }
    };
    module2.exports = Dispatcher;
  }
});

// node_modules/undici/lib/dispatcher-base.js
var require_dispatcher_base = __commonJS({
  "node_modules/undici/lib/dispatcher-base.js"(exports2, module2) {
    "use strict";
    var Dispatcher = require_dispatcher();
    var {
      ClientDestroyedError,
      ClientClosedError,
      InvalidArgumentError
    } = require_errors();
    var { kDestroy, kClose, kDispatch, kInterceptors } = require_symbols();
    var kDestroyed = Symbol("destroyed");
    var kClosed = Symbol("closed");
    var kOnDestroyed = Symbol("onDestroyed");
    var kOnClosed = Symbol("onClosed");
    var kInterceptedDispatch = Symbol("Intercepted Dispatch");
    var DispatcherBase = class extends Dispatcher {
      constructor() {
        super();
        this[kDestroyed] = false;
        this[kOnDestroyed] = null;
        this[kClosed] = false;
        this[kOnClosed] = [];
      }
      get destroyed() {
        return this[kDestroyed];
      }
      get closed() {
        return this[kClosed];
      }
      get interceptors() {
        return this[kInterceptors];
      }
      set interceptors(newInterceptors) {
        if (newInterceptors) {
          for (let i = newInterceptors.length - 1; i >= 0; i--) {
            const interceptor = this[kInterceptors][i];
            if (typeof interceptor !== "function") {
              throw new InvalidArgumentError("interceptor must be an function");
            }
          }
        }
        this[kInterceptors] = newInterceptors;
      }
      close(callback) {
        if (callback === void 0) {
          return new Promise((resolve, reject) => {
            this.close((err, data) => {
              return err ? reject(err) : resolve(data);
            });
          });
        }
        if (typeof callback !== "function") {
          throw new InvalidArgumentError("invalid callback");
        }
        if (this[kDestroyed]) {
          queueMicrotask(() => callback(new ClientDestroyedError(), null));
          return;
        }
        if (this[kClosed]) {
          if (this[kOnClosed]) {
            this[kOnClosed].push(callback);
          } else {
            queueMicrotask(() => callback(null, null));
          }
          return;
        }
        this[kClosed] = true;
        this[kOnClosed].push(callback);
        const onClosed = () => {
          const callbacks = this[kOnClosed];
          this[kOnClosed] = null;
          for (let i = 0; i < callbacks.length; i++) {
            callbacks[i](null, null);
          }
        };
        this[kClose]().then(() => this.destroy()).then(() => {
          queueMicrotask(onClosed);
        });
      }
      destroy(err, callback) {
        if (typeof err === "function") {
          callback = err;
          err = null;
        }
        if (callback === void 0) {
          return new Promise((resolve, reject) => {
            this.destroy(err, (err2, data) => {
              return err2 ? (
                /* istanbul ignore next: should never error */
                reject(err2)
              ) : resolve(data);
            });
          });
        }
        if (typeof callback !== "function") {
          throw new InvalidArgumentError("invalid callback");
        }
        if (this[kDestroyed]) {
          if (this[kOnDestroyed]) {
            this[kOnDestroyed].push(callback);
          } else {
            queueMicrotask(() => callback(null, null));
          }
          return;
        }
        if (!err) {
          err = new ClientDestroyedError();
        }
        this[kDestroyed] = true;
        this[kOnDestroyed] = this[kOnDestroyed] || [];
        this[kOnDestroyed].push(callback);
        const onDestroyed = () => {
          const callbacks = this[kOnDestroyed];
          this[kOnDestroyed] = null;
          for (let i = 0; i < callbacks.length; i++) {
            callbacks[i](null, null);
          }
        };
        this[kDestroy](err).then(() => {
          queueMicrotask(onDestroyed);
        });
      }
      [kInterceptedDispatch](opts, handler2) {
        if (!this[kInterceptors] || this[kInterceptors].length === 0) {
          this[kInterceptedDispatch] = this[kDispatch];
          return this[kDispatch](opts, handler2);
        }
        let dispatch = this[kDispatch].bind(this);
        for (let i = this[kInterceptors].length - 1; i >= 0; i--) {
          dispatch = this[kInterceptors][i](dispatch);
        }
        this[kInterceptedDispatch] = dispatch;
        return dispatch(opts, handler2);
      }
      dispatch(opts, handler2) {
        if (!handler2 || typeof handler2 !== "object") {
          throw new InvalidArgumentError("handler must be an object");
        }
        try {
          if (!opts || typeof opts !== "object") {
            throw new InvalidArgumentError("opts must be an object.");
          }
          if (this[kDestroyed] || this[kOnDestroyed]) {
            throw new ClientDestroyedError();
          }
          if (this[kClosed]) {
            throw new ClientClosedError();
          }
          return this[kInterceptedDispatch](opts, handler2);
        } catch (err) {
          if (typeof handler2.onError !== "function") {
            throw new InvalidArgumentError("invalid onError method");
          }
          handler2.onError(err);
          return false;
        }
      }
    };
    module2.exports = DispatcherBase;
  }
});

// node_modules/undici/lib/core/connect.js
var require_connect = __commonJS({
  "node_modules/undici/lib/core/connect.js"(exports2, module2) {
    "use strict";
    var net = require("net");
    var assert = require("assert");
    var util = require_util();
    var { InvalidArgumentError, ConnectTimeoutError } = require_errors();
    var tls;
    var SessionCache;
    if (global.FinalizationRegistry && !process.env.NODE_V8_COVERAGE) {
      SessionCache = class WeakSessionCache {
        constructor(maxCachedSessions) {
          this._maxCachedSessions = maxCachedSessions;
          this._sessionCache = /* @__PURE__ */ new Map();
          this._sessionRegistry = new global.FinalizationRegistry((key) => {
            if (this._sessionCache.size < this._maxCachedSessions) {
              return;
            }
            const ref = this._sessionCache.get(key);
            if (ref !== void 0 && ref.deref() === void 0) {
              this._sessionCache.delete(key);
            }
          });
        }
        get(sessionKey) {
          const ref = this._sessionCache.get(sessionKey);
          return ref ? ref.deref() : null;
        }
        set(sessionKey, session) {
          if (this._maxCachedSessions === 0) {
            return;
          }
          this._sessionCache.set(sessionKey, new WeakRef(session));
          this._sessionRegistry.register(session, sessionKey);
        }
      };
    } else {
      SessionCache = class SimpleSessionCache {
        constructor(maxCachedSessions) {
          this._maxCachedSessions = maxCachedSessions;
          this._sessionCache = /* @__PURE__ */ new Map();
        }
        get(sessionKey) {
          return this._sessionCache.get(sessionKey);
        }
        set(sessionKey, session) {
          if (this._maxCachedSessions === 0) {
            return;
          }
          if (this._sessionCache.size >= this._maxCachedSessions) {
            const { value: oldestKey } = this._sessionCache.keys().next();
            this._sessionCache.delete(oldestKey);
          }
          this._sessionCache.set(sessionKey, session);
        }
      };
    }
    function buildConnector({ allowH2, maxCachedSessions, socketPath, timeout, ...opts }) {
      if (maxCachedSessions != null && (!Number.isInteger(maxCachedSessions) || maxCachedSessions < 0)) {
        throw new InvalidArgumentError("maxCachedSessions must be a positive integer or zero");
      }
      const options = { path: socketPath, ...opts };
      const sessionCache = new SessionCache(maxCachedSessions == null ? 100 : maxCachedSessions);
      timeout = timeout == null ? 1e4 : timeout;
      allowH2 = allowH2 != null ? allowH2 : false;
      return function connect({ hostname, host, protocol, port, servername, localAddress, httpSocket }, callback) {
        let socket;
        if (protocol === "https:") {
          if (!tls) {
            tls = require("tls");
          }
          servername = servername || options.servername || util.getServerName(host) || null;
          const sessionKey = servername || hostname;
          const session = sessionCache.get(sessionKey) || null;
          assert(sessionKey);
          socket = tls.connect({
            highWaterMark: 16384,
            // TLS in node can't have bigger HWM anyway...
            ...options,
            servername,
            session,
            localAddress,
            // TODO(HTTP/2): Add support for h2c
            ALPNProtocols: allowH2 ? ["http/1.1", "h2"] : ["http/1.1"],
            socket: httpSocket,
            // upgrade socket connection
            port: port || 443,
            host: hostname
          });
          socket.on("session", function(session2) {
            sessionCache.set(sessionKey, session2);
          });
        } else {
          assert(!httpSocket, "httpSocket can only be sent on TLS update");
          socket = net.connect({
            highWaterMark: 64 * 1024,
            // Same as nodejs fs streams.
            ...options,
            localAddress,
            port: port || 80,
            host: hostname
          });
        }
        if (options.keepAlive == null || options.keepAlive) {
          const keepAliveInitialDelay = options.keepAliveInitialDelay === void 0 ? 6e4 : options.keepAliveInitialDelay;
          socket.setKeepAlive(true, keepAliveInitialDelay);
        }
        const cancelTimeout = setupTimeout(() => onConnectTimeout(socket), timeout);
        socket.setNoDelay(true).once(protocol === "https:" ? "secureConnect" : "connect", function() {
          cancelTimeout();
          if (callback) {
            const cb = callback;
            callback = null;
            cb(null, this);
          }
        }).on("error", function(err) {
          cancelTimeout();
          if (callback) {
            const cb = callback;
            callback = null;
            cb(err);
          }
        });
        return socket;
      };
    }
    function setupTimeout(onConnectTimeout2, timeout) {
      if (!timeout) {
        return () => {
        };
      }
      let s1 = null;
      let s2 = null;
      const timeoutId = setTimeout(() => {
        s1 = setImmediate(() => {
          if (process.platform === "win32") {
            s2 = setImmediate(() => onConnectTimeout2());
          } else {
            onConnectTimeout2();
          }
        });
      }, timeout);
      return () => {
        clearTimeout(timeoutId);
        clearImmediate(s1);
        clearImmediate(s2);
      };
    }
    function onConnectTimeout(socket) {
      util.destroy(socket, new ConnectTimeoutError());
    }
    module2.exports = buildConnector;
  }
});

// node_modules/undici/lib/llhttp/utils.js
var require_utils2 = __commonJS({
  "node_modules/undici/lib/llhttp/utils.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.enumToMap = void 0;
    function enumToMap(obj) {
      const res = {};
      Object.keys(obj).forEach((key) => {
        const value = obj[key];
        if (typeof value === "number") {
          res[key] = value;
        }
      });
      return res;
    }
    exports2.enumToMap = enumToMap;
  }
});

// node_modules/undici/lib/llhttp/constants.js
var require_constants3 = __commonJS({
  "node_modules/undici/lib/llhttp/constants.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.SPECIAL_HEADERS = exports2.HEADER_STATE = exports2.MINOR = exports2.MAJOR = exports2.CONNECTION_TOKEN_CHARS = exports2.HEADER_CHARS = exports2.TOKEN = exports2.STRICT_TOKEN = exports2.HEX = exports2.URL_CHAR = exports2.STRICT_URL_CHAR = exports2.USERINFO_CHARS = exports2.MARK = exports2.ALPHANUM = exports2.NUM = exports2.HEX_MAP = exports2.NUM_MAP = exports2.ALPHA = exports2.FINISH = exports2.H_METHOD_MAP = exports2.METHOD_MAP = exports2.METHODS_RTSP = exports2.METHODS_ICE = exports2.METHODS_HTTP = exports2.METHODS = exports2.LENIENT_FLAGS = exports2.FLAGS = exports2.TYPE = exports2.ERROR = void 0;
    var utils_1 = require_utils2();
    var ERROR2;
    (function(ERROR3) {
      ERROR3[ERROR3["OK"] = 0] = "OK";
      ERROR3[ERROR3["INTERNAL"] = 1] = "INTERNAL";
      ERROR3[ERROR3["STRICT"] = 2] = "STRICT";
      ERROR3[ERROR3["LF_EXPECTED"] = 3] = "LF_EXPECTED";
      ERROR3[ERROR3["UNEXPECTED_CONTENT_LENGTH"] = 4] = "UNEXPECTED_CONTENT_LENGTH";
      ERROR3[ERROR3["CLOSED_CONNECTION"] = 5] = "CLOSED_CONNECTION";
      ERROR3[ERROR3["INVALID_METHOD"] = 6] = "INVALID_METHOD";
      ERROR3[ERROR3["INVALID_URL"] = 7] = "INVALID_URL";
      ERROR3[ERROR3["INVALID_CONSTANT"] = 8] = "INVALID_CONSTANT";
      ERROR3[ERROR3["INVALID_VERSION"] = 9] = "INVALID_VERSION";
      ERROR3[ERROR3["INVALID_HEADER_TOKEN"] = 10] = "INVALID_HEADER_TOKEN";
      ERROR3[ERROR3["INVALID_CONTENT_LENGTH"] = 11] = "INVALID_CONTENT_LENGTH";
      ERROR3[ERROR3["INVALID_CHUNK_SIZE"] = 12] = "INVALID_CHUNK_SIZE";
      ERROR3[ERROR3["INVALID_STATUS"] = 13] = "INVALID_STATUS";
      ERROR3[ERROR3["INVALID_EOF_STATE"] = 14] = "INVALID_EOF_STATE";
      ERROR3[ERROR3["INVALID_TRANSFER_ENCODING"] = 15] = "INVALID_TRANSFER_ENCODING";
      ERROR3[ERROR3["CB_MESSAGE_BEGIN"] = 16] = "CB_MESSAGE_BEGIN";
      ERROR3[ERROR3["CB_HEADERS_COMPLETE"] = 17] = "CB_HEADERS_COMPLETE";
      ERROR3[ERROR3["CB_MESSAGE_COMPLETE"] = 18] = "CB_MESSAGE_COMPLETE";
      ERROR3[ERROR3["CB_CHUNK_HEADER"] = 19] = "CB_CHUNK_HEADER";
      ERROR3[ERROR3["CB_CHUNK_COMPLETE"] = 20] = "CB_CHUNK_COMPLETE";
      ERROR3[ERROR3["PAUSED"] = 21] = "PAUSED";
      ERROR3[ERROR3["PAUSED_UPGRADE"] = 22] = "PAUSED_UPGRADE";
      ERROR3[ERROR3["PAUSED_H2_UPGRADE"] = 23] = "PAUSED_H2_UPGRADE";
      ERROR3[ERROR3["USER"] = 24] = "USER";
    })(ERROR2 = exports2.ERROR || (exports2.ERROR = {}));
    var TYPE;
    (function(TYPE2) {
      TYPE2[TYPE2["BOTH"] = 0] = "BOTH";
      TYPE2[TYPE2["REQUEST"] = 1] = "REQUEST";
      TYPE2[TYPE2["RESPONSE"] = 2] = "RESPONSE";
    })(TYPE = exports2.TYPE || (exports2.TYPE = {}));
    var FLAGS;
    (function(FLAGS2) {
      FLAGS2[FLAGS2["CONNECTION_KEEP_ALIVE"] = 1] = "CONNECTION_KEEP_ALIVE";
      FLAGS2[FLAGS2["CONNECTION_CLOSE"] = 2] = "CONNECTION_CLOSE";
      FLAGS2[FLAGS2["CONNECTION_UPGRADE"] = 4] = "CONNECTION_UPGRADE";
      FLAGS2[FLAGS2["CHUNKED"] = 8] = "CHUNKED";
      FLAGS2[FLAGS2["UPGRADE"] = 16] = "UPGRADE";
      FLAGS2[FLAGS2["CONTENT_LENGTH"] = 32] = "CONTENT_LENGTH";
      FLAGS2[FLAGS2["SKIPBODY"] = 64] = "SKIPBODY";
      FLAGS2[FLAGS2["TRAILING"] = 128] = "TRAILING";
      FLAGS2[FLAGS2["TRANSFER_ENCODING"] = 512] = "TRANSFER_ENCODING";
    })(FLAGS = exports2.FLAGS || (exports2.FLAGS = {}));
    var LENIENT_FLAGS;
    (function(LENIENT_FLAGS2) {
      LENIENT_FLAGS2[LENIENT_FLAGS2["HEADERS"] = 1] = "HEADERS";
      LENIENT_FLAGS2[LENIENT_FLAGS2["CHUNKED_LENGTH"] = 2] = "CHUNKED_LENGTH";
      LENIENT_FLAGS2[LENIENT_FLAGS2["KEEP_ALIVE"] = 4] = "KEEP_ALIVE";
    })(LENIENT_FLAGS = exports2.LENIENT_FLAGS || (exports2.LENIENT_FLAGS = {}));
    var METHODS;
    (function(METHODS2) {
      METHODS2[METHODS2["DELETE"] = 0] = "DELETE";
      METHODS2[METHODS2["GET"] = 1] = "GET";
      METHODS2[METHODS2["HEAD"] = 2] = "HEAD";
      METHODS2[METHODS2["POST"] = 3] = "POST";
      METHODS2[METHODS2["PUT"] = 4] = "PUT";
      METHODS2[METHODS2["CONNECT"] = 5] = "CONNECT";
      METHODS2[METHODS2["OPTIONS"] = 6] = "OPTIONS";
      METHODS2[METHODS2["TRACE"] = 7] = "TRACE";
      METHODS2[METHODS2["COPY"] = 8] = "COPY";
      METHODS2[METHODS2["LOCK"] = 9] = "LOCK";
      METHODS2[METHODS2["MKCOL"] = 10] = "MKCOL";
      METHODS2[METHODS2["MOVE"] = 11] = "MOVE";
      METHODS2[METHODS2["PROPFIND"] = 12] = "PROPFIND";
      METHODS2[METHODS2["PROPPATCH"] = 13] = "PROPPATCH";
      METHODS2[METHODS2["SEARCH"] = 14] = "SEARCH";
      METHODS2[METHODS2["UNLOCK"] = 15] = "UNLOCK";
      METHODS2[METHODS2["BIND"] = 16] = "BIND";
      METHODS2[METHODS2["REBIND"] = 17] = "REBIND";
      METHODS2[METHODS2["UNBIND"] = 18] = "UNBIND";
      METHODS2[METHODS2["ACL"] = 19] = "ACL";
      METHODS2[METHODS2["REPORT"] = 20] = "REPORT";
      METHODS2[METHODS2["MKACTIVITY"] = 21] = "MKACTIVITY";
      METHODS2[METHODS2["CHECKOUT"] = 22] = "CHECKOUT";
      METHODS2[METHODS2["MERGE"] = 23] = "MERGE";
      METHODS2[METHODS2["M-SEARCH"] = 24] = "M-SEARCH";
      METHODS2[METHODS2["NOTIFY"] = 25] = "NOTIFY";
      METHODS2[METHODS2["SUBSCRIBE"] = 26] = "SUBSCRIBE";
      METHODS2[METHODS2["UNSUBSCRIBE"] = 27] = "UNSUBSCRIBE";
      METHODS2[METHODS2["PATCH"] = 28] = "PATCH";
      METHODS2[METHODS2["PURGE"] = 29] = "PURGE";
      METHODS2[METHODS2["MKCALENDAR"] = 30] = "MKCALENDAR";
      METHODS2[METHODS2["LINK"] = 31] = "LINK";
      METHODS2[METHODS2["UNLINK"] = 32] = "UNLINK";
      METHODS2[METHODS2["SOURCE"] = 33] = "SOURCE";
      METHODS2[METHODS2["PRI"] = 34] = "PRI";
      METHODS2[METHODS2["DESCRIBE"] = 35] = "DESCRIBE";
      METHODS2[METHODS2["ANNOUNCE"] = 36] = "ANNOUNCE";
      METHODS2[METHODS2["SETUP"] = 37] = "SETUP";
      METHODS2[METHODS2["PLAY"] = 38] = "PLAY";
      METHODS2[METHODS2["PAUSE"] = 39] = "PAUSE";
      METHODS2[METHODS2["TEARDOWN"] = 40] = "TEARDOWN";
      METHODS2[METHODS2["GET_PARAMETER"] = 41] = "GET_PARAMETER";
      METHODS2[METHODS2["SET_PARAMETER"] = 42] = "SET_PARAMETER";
      METHODS2[METHODS2["REDIRECT"] = 43] = "REDIRECT";
      METHODS2[METHODS2["RECORD"] = 44] = "RECORD";
      METHODS2[METHODS2["FLUSH"] = 45] = "FLUSH";
    })(METHODS = exports2.METHODS || (exports2.METHODS = {}));
    exports2.METHODS_HTTP = [
      METHODS.DELETE,
      METHODS.GET,
      METHODS.HEAD,
      METHODS.POST,
      METHODS.PUT,
      METHODS.CONNECT,
      METHODS.OPTIONS,
      METHODS.TRACE,
      METHODS.COPY,
      METHODS.LOCK,
      METHODS.MKCOL,
      METHODS.MOVE,
      METHODS.PROPFIND,
      METHODS.PROPPATCH,
      METHODS.SEARCH,
      METHODS.UNLOCK,
      METHODS.BIND,
      METHODS.REBIND,
      METHODS.UNBIND,
      METHODS.ACL,
      METHODS.REPORT,
      METHODS.MKACTIVITY,
      METHODS.CHECKOUT,
      METHODS.MERGE,
      METHODS["M-SEARCH"],
      METHODS.NOTIFY,
      METHODS.SUBSCRIBE,
      METHODS.UNSUBSCRIBE,
      METHODS.PATCH,
      METHODS.PURGE,
      METHODS.MKCALENDAR,
      METHODS.LINK,
      METHODS.UNLINK,
      METHODS.PRI,
      // TODO(indutny): should we allow it with HTTP?
      METHODS.SOURCE
    ];
    exports2.METHODS_ICE = [
      METHODS.SOURCE
    ];
    exports2.METHODS_RTSP = [
      METHODS.OPTIONS,
      METHODS.DESCRIBE,
      METHODS.ANNOUNCE,
      METHODS.SETUP,
      METHODS.PLAY,
      METHODS.PAUSE,
      METHODS.TEARDOWN,
      METHODS.GET_PARAMETER,
      METHODS.SET_PARAMETER,
      METHODS.REDIRECT,
      METHODS.RECORD,
      METHODS.FLUSH,
      // For AirPlay
      METHODS.GET,
      METHODS.POST
    ];
    exports2.METHOD_MAP = utils_1.enumToMap(METHODS);
    exports2.H_METHOD_MAP = {};
    Object.keys(exports2.METHOD_MAP).forEach((key) => {
      if (/^H/.test(key)) {
        exports2.H_METHOD_MAP[key] = exports2.METHOD_MAP[key];
      }
    });
    var FINISH;
    (function(FINISH2) {
      FINISH2[FINISH2["SAFE"] = 0] = "SAFE";
      FINISH2[FINISH2["SAFE_WITH_CB"] = 1] = "SAFE_WITH_CB";
      FINISH2[FINISH2["UNSAFE"] = 2] = "UNSAFE";
    })(FINISH = exports2.FINISH || (exports2.FINISH = {}));
    exports2.ALPHA = [];
    for (let i = "A".charCodeAt(0); i <= "Z".charCodeAt(0); i++) {
      exports2.ALPHA.push(String.fromCharCode(i));
      exports2.ALPHA.push(String.fromCharCode(i + 32));
    }
    exports2.NUM_MAP = {
      0: 0,
      1: 1,
      2: 2,
      3: 3,
      4: 4,
      5: 5,
      6: 6,
      7: 7,
      8: 8,
      9: 9
    };
    exports2.HEX_MAP = {
      0: 0,
      1: 1,
      2: 2,
      3: 3,
      4: 4,
      5: 5,
      6: 6,
      7: 7,
      8: 8,
      9: 9,
      A: 10,
      B: 11,
      C: 12,
      D: 13,
      E: 14,
      F: 15,
      a: 10,
      b: 11,
      c: 12,
      d: 13,
      e: 14,
      f: 15
    };
    exports2.NUM = [
      "0",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9"
    ];
    exports2.ALPHANUM = exports2.ALPHA.concat(exports2.NUM);
    exports2.MARK = ["-", "_", ".", "!", "~", "*", "'", "(", ")"];
    exports2.USERINFO_CHARS = exports2.ALPHANUM.concat(exports2.MARK).concat(["%", ";", ":", "&", "=", "+", "$", ","]);
    exports2.STRICT_URL_CHAR = [
      "!",
      '"',
      "$",
      "%",
      "&",
      "'",
      "(",
      ")",
      "*",
      "+",
      ",",
      "-",
      ".",
      "/",
      ":",
      ";",
      "<",
      "=",
      ">",
      "@",
      "[",
      "\\",
      "]",
      "^",
      "_",
      "`",
      "{",
      "|",
      "}",
      "~"
    ].concat(exports2.ALPHANUM);
    exports2.URL_CHAR = exports2.STRICT_URL_CHAR.concat(["	", "\f"]);
    for (let i = 128; i <= 255; i++) {
      exports2.URL_CHAR.push(i);
    }
    exports2.HEX = exports2.NUM.concat(["a", "b", "c", "d", "e", "f", "A", "B", "C", "D", "E", "F"]);
    exports2.STRICT_TOKEN = [
      "!",
      "#",
      "$",
      "%",
      "&",
      "'",
      "*",
      "+",
      "-",
      ".",
      "^",
      "_",
      "`",
      "|",
      "~"
    ].concat(exports2.ALPHANUM);
    exports2.TOKEN = exports2.STRICT_TOKEN.concat([" "]);
    exports2.HEADER_CHARS = ["	"];
    for (let i = 32; i <= 255; i++) {
      if (i !== 127) {
        exports2.HEADER_CHARS.push(i);
      }
    }
    exports2.CONNECTION_TOKEN_CHARS = exports2.HEADER_CHARS.filter((c) => c !== 44);
    exports2.MAJOR = exports2.NUM_MAP;
    exports2.MINOR = exports2.MAJOR;
    var HEADER_STATE;
    (function(HEADER_STATE2) {
      HEADER_STATE2[HEADER_STATE2["GENERAL"] = 0] = "GENERAL";
      HEADER_STATE2[HEADER_STATE2["CONNECTION"] = 1] = "CONNECTION";
      HEADER_STATE2[HEADER_STATE2["CONTENT_LENGTH"] = 2] = "CONTENT_LENGTH";
      HEADER_STATE2[HEADER_STATE2["TRANSFER_ENCODING"] = 3] = "TRANSFER_ENCODING";
      HEADER_STATE2[HEADER_STATE2["UPGRADE"] = 4] = "UPGRADE";
      HEADER_STATE2[HEADER_STATE2["CONNECTION_KEEP_ALIVE"] = 5] = "CONNECTION_KEEP_ALIVE";
      HEADER_STATE2[HEADER_STATE2["CONNECTION_CLOSE"] = 6] = "CONNECTION_CLOSE";
      HEADER_STATE2[HEADER_STATE2["CONNECTION_UPGRADE"] = 7] = "CONNECTION_UPGRADE";
      HEADER_STATE2[HEADER_STATE2["TRANSFER_ENCODING_CHUNKED"] = 8] = "TRANSFER_ENCODING_CHUNKED";
    })(HEADER_STATE = exports2.HEADER_STATE || (exports2.HEADER_STATE = {}));
    exports2.SPECIAL_HEADERS = {
      "connection": HEADER_STATE.CONNECTION,
      "content-length": HEADER_STATE.CONTENT_LENGTH,
      "proxy-connection": HEADER_STATE.CONNECTION,
      "transfer-encoding": HEADER_STATE.TRANSFER_ENCODING,
      "upgrade": HEADER_STATE.UPGRADE
    };
  }
});

// node_modules/undici/lib/handler/RedirectHandler.js
var require_RedirectHandler = __commonJS({
  "node_modules/undici/lib/handler/RedirectHandler.js"(exports2, module2) {
    "use strict";
    var util = require_util();
    var { kBodyUsed } = require_symbols();
    var assert = require("assert");
    var { InvalidArgumentError } = require_errors();
    var EE = require("events");
    var redirectableStatusCodes = [300, 301, 302, 303, 307, 308];
    var kBody = Symbol("body");
    var BodyAsyncIterable = class {
      constructor(body) {
        this[kBody] = body;
        this[kBodyUsed] = false;
      }
      async *[Symbol.asyncIterator]() {
        assert(!this[kBodyUsed], "disturbed");
        this[kBodyUsed] = true;
        yield* this[kBody];
      }
    };
    var RedirectHandler = class {
      constructor(dispatch, maxRedirections, opts, handler2) {
        if (maxRedirections != null && (!Number.isInteger(maxRedirections) || maxRedirections < 0)) {
          throw new InvalidArgumentError("maxRedirections must be a positive number");
        }
        util.validateHandler(handler2, opts.method, opts.upgrade);
        this.dispatch = dispatch;
        this.location = null;
        this.abort = null;
        this.opts = { ...opts, maxRedirections: 0 };
        this.maxRedirections = maxRedirections;
        this.handler = handler2;
        this.history = [];
        if (util.isStream(this.opts.body)) {
          if (util.bodyLength(this.opts.body) === 0) {
            this.opts.body.on("data", function() {
              assert(false);
            });
          }
          if (typeof this.opts.body.readableDidRead !== "boolean") {
            this.opts.body[kBodyUsed] = false;
            EE.prototype.on.call(this.opts.body, "data", function() {
              this[kBodyUsed] = true;
            });
          }
        } else if (this.opts.body && typeof this.opts.body.pipeTo === "function") {
          this.opts.body = new BodyAsyncIterable(this.opts.body);
        } else if (this.opts.body && typeof this.opts.body !== "string" && !ArrayBuffer.isView(this.opts.body) && util.isIterable(this.opts.body)) {
          this.opts.body = new BodyAsyncIterable(this.opts.body);
        }
      }
      onConnect(abort) {
        this.abort = abort;
        this.handler.onConnect(abort, { history: this.history });
      }
      onUpgrade(statusCode, headers, socket) {
        this.handler.onUpgrade(statusCode, headers, socket);
      }
      onError(error) {
        this.handler.onError(error);
      }
      onHeaders(statusCode, headers, resume, statusText) {
        this.location = this.history.length >= this.maxRedirections || util.isDisturbed(this.opts.body) ? null : parseLocation(statusCode, headers);
        if (this.opts.origin) {
          this.history.push(new URL(this.opts.path, this.opts.origin));
        }
        if (!this.location) {
          return this.handler.onHeaders(statusCode, headers, resume, statusText);
        }
        const { origin, pathname, search } = util.parseURL(new URL(this.location, this.opts.origin && new URL(this.opts.path, this.opts.origin)));
        const path = search ? `${pathname}${search}` : pathname;
        this.opts.headers = cleanRequestHeaders(this.opts.headers, statusCode === 303, this.opts.origin !== origin);
        this.opts.path = path;
        this.opts.origin = origin;
        this.opts.maxRedirections = 0;
        this.opts.query = null;
        if (statusCode === 303 && this.opts.method !== "HEAD") {
          this.opts.method = "GET";
          this.opts.body = null;
        }
      }
      onData(chunk) {
        if (this.location) {
        } else {
          return this.handler.onData(chunk);
        }
      }
      onComplete(trailers) {
        if (this.location) {
          this.location = null;
          this.abort = null;
          this.dispatch(this.opts, this);
        } else {
          this.handler.onComplete(trailers);
        }
      }
      onBodySent(chunk) {
        if (this.handler.onBodySent) {
          this.handler.onBodySent(chunk);
        }
      }
    };
    function parseLocation(statusCode, headers) {
      if (redirectableStatusCodes.indexOf(statusCode) === -1) {
        return null;
      }
      for (let i = 0; i < headers.length; i += 2) {
        if (headers[i].toString().toLowerCase() === "location") {
          return headers[i + 1];
        }
      }
    }
    function shouldRemoveHeader(header, removeContent, unknownOrigin) {
      if (header.length === 4) {
        return util.headerNameToString(header) === "host";
      }
      if (removeContent && util.headerNameToString(header).startsWith("content-")) {
        return true;
      }
      if (unknownOrigin && (header.length === 13 || header.length === 6 || header.length === 19)) {
        const name3 = util.headerNameToString(header);
        return name3 === "authorization" || name3 === "cookie" || name3 === "proxy-authorization";
      }
      return false;
    }
    function cleanRequestHeaders(headers, removeContent, unknownOrigin) {
      const ret = [];
      if (Array.isArray(headers)) {
        for (let i = 0; i < headers.length; i += 2) {
          if (!shouldRemoveHeader(headers[i], removeContent, unknownOrigin)) {
            ret.push(headers[i], headers[i + 1]);
          }
        }
      } else if (headers && typeof headers === "object") {
        for (const key of Object.keys(headers)) {
          if (!shouldRemoveHeader(key, removeContent, unknownOrigin)) {
            ret.push(key, headers[key]);
          }
        }
      } else {
        assert(headers == null, "headers must be an object or an array");
      }
      return ret;
    }
    module2.exports = RedirectHandler;
  }
});

// node_modules/undici/lib/interceptor/redirectInterceptor.js
var require_redirectInterceptor = __commonJS({
  "node_modules/undici/lib/interceptor/redirectInterceptor.js"(exports2, module2) {
    "use strict";
    var RedirectHandler = require_RedirectHandler();
    function createRedirectInterceptor({ maxRedirections: defaultMaxRedirections }) {
      return (dispatch) => {
        return function Intercept(opts, handler2) {
          const { maxRedirections = defaultMaxRedirections } = opts;
          if (!maxRedirections) {
            return dispatch(opts, handler2);
          }
          const redirectHandler = new RedirectHandler(dispatch, maxRedirections, opts, handler2);
          opts = { ...opts, maxRedirections: 0 };
          return dispatch(opts, redirectHandler);
        };
      };
    }
    module2.exports = createRedirectInterceptor;
  }
});

// node_modules/undici/lib/llhttp/llhttp-wasm.js
var require_llhttp_wasm = __commonJS({
  "node_modules/undici/lib/llhttp/llhttp-wasm.js"(exports2, module2) {
    module2.exports = "";
  }
});

// node_modules/undici/lib/llhttp/llhttp_simd-wasm.js
var require_llhttp_simd_wasm = __commonJS({
  "node_modules/undici/lib/llhttp/llhttp_simd-wasm.js"(exports2, module2) {
    module2.exports = "";
  }
});

// node_modules/undici/lib/client.js
var require_client = __commonJS({
  "node_modules/undici/lib/client.js"(exports2, module2) {
    "use strict";
    var assert = require("assert");
    var net = require("net");
    var http2 = require("http");
    var { pipeline } = require("stream");
    var util = require_util();
    var timers = require_timers();
    var Request = require_request();
    var DispatcherBase = require_dispatcher_base();
    var {
      RequestContentLengthMismatchError,
      ResponseContentLengthMismatchError,
      InvalidArgumentError,
      RequestAbortedError,
      HeadersTimeoutError,
      HeadersOverflowError,
      SocketError,
      InformationalError,
      BodyTimeoutError,
      HTTPParserError,
      ResponseExceededMaxSizeError,
      ClientDestroyedError
    } = require_errors();
    var buildConnector = require_connect();
    var {
      kUrl,
      kReset,
      kServerName,
      kClient,
      kBusy,
      kParser,
      kConnect,
      kBlocking,
      kResuming,
      kRunning,
      kPending,
      kSize,
      kWriting,
      kQueue,
      kConnected,
      kConnecting,
      kNeedDrain,
      kNoRef,
      kKeepAliveDefaultTimeout,
      kHostHeader,
      kPendingIdx,
      kRunningIdx,
      kError,
      kPipelining,
      kSocket,
      kKeepAliveTimeoutValue,
      kMaxHeadersSize,
      kKeepAliveMaxTimeout,
      kKeepAliveTimeoutThreshold,
      kHeadersTimeout,
      kBodyTimeout,
      kStrictContentLength,
      kConnector,
      kMaxRedirections,
      kMaxRequests,
      kCounter,
      kClose,
      kDestroy,
      kDispatch,
      kInterceptors,
      kLocalAddress,
      kMaxResponseSize,
      kHTTPConnVersion,
      // HTTP2
      kHost,
      kHTTP2Session,
      kHTTP2SessionState,
      kHTTP2BuildRequest,
      kHTTP2CopyHeaders,
      kHTTP1BuildRequest
    } = require_symbols();
    var http22;
    try {
      http22 = require("http2");
    } catch {
      http22 = { constants: {} };
    }
    var {
      constants: {
        HTTP2_HEADER_AUTHORITY,
        HTTP2_HEADER_METHOD,
        HTTP2_HEADER_PATH,
        HTTP2_HEADER_SCHEME,
        HTTP2_HEADER_CONTENT_LENGTH,
        HTTP2_HEADER_EXPECT,
        HTTP2_HEADER_STATUS
      }
    } = http22;
    var h2ExperimentalWarned = false;
    var FastBuffer = Buffer[Symbol.species];
    var kClosedResolve = Symbol("kClosedResolve");
    var channels = {};
    try {
      const diagnosticsChannel = require("diagnostics_channel");
      channels.sendHeaders = diagnosticsChannel.channel("undici:client:sendHeaders");
      channels.beforeConnect = diagnosticsChannel.channel("undici:client:beforeConnect");
      channels.connectError = diagnosticsChannel.channel("undici:client:connectError");
      channels.connected = diagnosticsChannel.channel("undici:client:connected");
    } catch {
      channels.sendHeaders = { hasSubscribers: false };
      channels.beforeConnect = { hasSubscribers: false };
      channels.connectError = { hasSubscribers: false };
      channels.connected = { hasSubscribers: false };
    }
    var Client = class extends DispatcherBase {
      /**
       *
       * @param {string|URL} url
       * @param {import('../types/client').Client.Options} options
       */
      constructor(url, {
        interceptors,
        maxHeaderSize,
        headersTimeout,
        socketTimeout,
        requestTimeout,
        connectTimeout,
        bodyTimeout,
        idleTimeout,
        keepAlive,
        keepAliveTimeout,
        maxKeepAliveTimeout,
        keepAliveMaxTimeout,
        keepAliveTimeoutThreshold,
        socketPath,
        pipelining,
        tls,
        strictContentLength,
        maxCachedSessions,
        maxRedirections,
        connect: connect2,
        maxRequestsPerClient,
        localAddress,
        maxResponseSize,
        autoSelectFamily,
        autoSelectFamilyAttemptTimeout,
        // h2
        allowH2,
        maxConcurrentStreams
      } = {}) {
        super();
        if (keepAlive !== void 0) {
          throw new InvalidArgumentError("unsupported keepAlive, use pipelining=0 instead");
        }
        if (socketTimeout !== void 0) {
          throw new InvalidArgumentError("unsupported socketTimeout, use headersTimeout & bodyTimeout instead");
        }
        if (requestTimeout !== void 0) {
          throw new InvalidArgumentError("unsupported requestTimeout, use headersTimeout & bodyTimeout instead");
        }
        if (idleTimeout !== void 0) {
          throw new InvalidArgumentError("unsupported idleTimeout, use keepAliveTimeout instead");
        }
        if (maxKeepAliveTimeout !== void 0) {
          throw new InvalidArgumentError("unsupported maxKeepAliveTimeout, use keepAliveMaxTimeout instead");
        }
        if (maxHeaderSize != null && !Number.isFinite(maxHeaderSize)) {
          throw new InvalidArgumentError("invalid maxHeaderSize");
        }
        if (socketPath != null && typeof socketPath !== "string") {
          throw new InvalidArgumentError("invalid socketPath");
        }
        if (connectTimeout != null && (!Number.isFinite(connectTimeout) || connectTimeout < 0)) {
          throw new InvalidArgumentError("invalid connectTimeout");
        }
        if (keepAliveTimeout != null && (!Number.isFinite(keepAliveTimeout) || keepAliveTimeout <= 0)) {
          throw new InvalidArgumentError("invalid keepAliveTimeout");
        }
        if (keepAliveMaxTimeout != null && (!Number.isFinite(keepAliveMaxTimeout) || keepAliveMaxTimeout <= 0)) {
          throw new InvalidArgumentError("invalid keepAliveMaxTimeout");
        }
        if (keepAliveTimeoutThreshold != null && !Number.isFinite(keepAliveTimeoutThreshold)) {
          throw new InvalidArgumentError("invalid keepAliveTimeoutThreshold");
        }
        if (headersTimeout != null && (!Number.isInteger(headersTimeout) || headersTimeout < 0)) {
          throw new InvalidArgumentError("headersTimeout must be a positive integer or zero");
        }
        if (bodyTimeout != null && (!Number.isInteger(bodyTimeout) || bodyTimeout < 0)) {
          throw new InvalidArgumentError("bodyTimeout must be a positive integer or zero");
        }
        if (connect2 != null && typeof connect2 !== "function" && typeof connect2 !== "object") {
          throw new InvalidArgumentError("connect must be a function or an object");
        }
        if (maxRedirections != null && (!Number.isInteger(maxRedirections) || maxRedirections < 0)) {
          throw new InvalidArgumentError("maxRedirections must be a positive number");
        }
        if (maxRequestsPerClient != null && (!Number.isInteger(maxRequestsPerClient) || maxRequestsPerClient < 0)) {
          throw new InvalidArgumentError("maxRequestsPerClient must be a positive number");
        }
        if (localAddress != null && (typeof localAddress !== "string" || net.isIP(localAddress) === 0)) {
          throw new InvalidArgumentError("localAddress must be valid string IP address");
        }
        if (maxResponseSize != null && (!Number.isInteger(maxResponseSize) || maxResponseSize < -1)) {
          throw new InvalidArgumentError("maxResponseSize must be a positive number");
        }
        if (autoSelectFamilyAttemptTimeout != null && (!Number.isInteger(autoSelectFamilyAttemptTimeout) || autoSelectFamilyAttemptTimeout < -1)) {
          throw new InvalidArgumentError("autoSelectFamilyAttemptTimeout must be a positive number");
        }
        if (allowH2 != null && typeof allowH2 !== "boolean") {
          throw new InvalidArgumentError("allowH2 must be a valid boolean value");
        }
        if (maxConcurrentStreams != null && (typeof maxConcurrentStreams !== "number" || maxConcurrentStreams < 1)) {
          throw new InvalidArgumentError("maxConcurrentStreams must be a possitive integer, greater than 0");
        }
        if (typeof connect2 !== "function") {
          connect2 = buildConnector({
            ...tls,
            maxCachedSessions,
            allowH2,
            socketPath,
            timeout: connectTimeout,
            ...util.nodeHasAutoSelectFamily && autoSelectFamily ? { autoSelectFamily, autoSelectFamilyAttemptTimeout } : void 0,
            ...connect2
          });
        }
        this[kInterceptors] = interceptors && interceptors.Client && Array.isArray(interceptors.Client) ? interceptors.Client : [createRedirectInterceptor({ maxRedirections })];
        this[kUrl] = util.parseOrigin(url);
        this[kConnector] = connect2;
        this[kSocket] = null;
        this[kPipelining] = pipelining != null ? pipelining : 1;
        this[kMaxHeadersSize] = maxHeaderSize || http2.maxHeaderSize;
        this[kKeepAliveDefaultTimeout] = keepAliveTimeout == null ? 4e3 : keepAliveTimeout;
        this[kKeepAliveMaxTimeout] = keepAliveMaxTimeout == null ? 6e5 : keepAliveMaxTimeout;
        this[kKeepAliveTimeoutThreshold] = keepAliveTimeoutThreshold == null ? 1e3 : keepAliveTimeoutThreshold;
        this[kKeepAliveTimeoutValue] = this[kKeepAliveDefaultTimeout];
        this[kServerName] = null;
        this[kLocalAddress] = localAddress != null ? localAddress : null;
        this[kResuming] = 0;
        this[kNeedDrain] = 0;
        this[kHostHeader] = `host: ${this[kUrl].hostname}${this[kUrl].port ? `:${this[kUrl].port}` : ""}\r
`;
        this[kBodyTimeout] = bodyTimeout != null ? bodyTimeout : 3e5;
        this[kHeadersTimeout] = headersTimeout != null ? headersTimeout : 3e5;
        this[kStrictContentLength] = strictContentLength == null ? true : strictContentLength;
        this[kMaxRedirections] = maxRedirections;
        this[kMaxRequests] = maxRequestsPerClient;
        this[kClosedResolve] = null;
        this[kMaxResponseSize] = maxResponseSize > -1 ? maxResponseSize : -1;
        this[kHTTPConnVersion] = "h1";
        this[kHTTP2Session] = null;
        this[kHTTP2SessionState] = !allowH2 ? null : {
          // streams: null, // Fixed queue of streams - For future support of `push`
          openStreams: 0,
          // Keep track of them to decide wether or not unref the session
          maxConcurrentStreams: maxConcurrentStreams != null ? maxConcurrentStreams : 100
          // Max peerConcurrentStreams for a Node h2 server
        };
        this[kHost] = `${this[kUrl].hostname}${this[kUrl].port ? `:${this[kUrl].port}` : ""}`;
        this[kQueue] = [];
        this[kRunningIdx] = 0;
        this[kPendingIdx] = 0;
      }
      get pipelining() {
        return this[kPipelining];
      }
      set pipelining(value) {
        this[kPipelining] = value;
        resume(this, true);
      }
      get [kPending]() {
        return this[kQueue].length - this[kPendingIdx];
      }
      get [kRunning]() {
        return this[kPendingIdx] - this[kRunningIdx];
      }
      get [kSize]() {
        return this[kQueue].length - this[kRunningIdx];
      }
      get [kConnected]() {
        return !!this[kSocket] && !this[kConnecting] && !this[kSocket].destroyed;
      }
      get [kBusy]() {
        const socket = this[kSocket];
        return socket && (socket[kReset] || socket[kWriting] || socket[kBlocking]) || this[kSize] >= (this[kPipelining] || 1) || this[kPending] > 0;
      }
      /* istanbul ignore: only used for test */
      [kConnect](cb) {
        connect(this);
        this.once("connect", cb);
      }
      [kDispatch](opts, handler2) {
        const origin = opts.origin || this[kUrl].origin;
        const request2 = this[kHTTPConnVersion] === "h2" ? Request[kHTTP2BuildRequest](origin, opts, handler2) : Request[kHTTP1BuildRequest](origin, opts, handler2);
        this[kQueue].push(request2);
        if (this[kResuming]) {
        } else if (util.bodyLength(request2.body) == null && util.isIterable(request2.body)) {
          this[kResuming] = 1;
          process.nextTick(resume, this);
        } else {
          resume(this, true);
        }
        if (this[kResuming] && this[kNeedDrain] !== 2 && this[kBusy]) {
          this[kNeedDrain] = 2;
        }
        return this[kNeedDrain] < 2;
      }
      async [kClose]() {
        return new Promise((resolve) => {
          if (!this[kSize]) {
            resolve(null);
          } else {
            this[kClosedResolve] = resolve;
          }
        });
      }
      async [kDestroy](err) {
        return new Promise((resolve) => {
          const requests = this[kQueue].splice(this[kPendingIdx]);
          for (let i = 0; i < requests.length; i++) {
            const request2 = requests[i];
            errorRequest(this, request2, err);
          }
          const callback = () => {
            if (this[kClosedResolve]) {
              this[kClosedResolve]();
              this[kClosedResolve] = null;
            }
            resolve();
          };
          if (this[kHTTP2Session] != null) {
            util.destroy(this[kHTTP2Session], err);
            this[kHTTP2Session] = null;
            this[kHTTP2SessionState] = null;
          }
          if (!this[kSocket]) {
            queueMicrotask(callback);
          } else {
            util.destroy(this[kSocket].on("close", callback), err);
          }
          resume(this);
        });
      }
    };
    function onHttp2SessionError(err) {
      assert(err.code !== "ERR_TLS_CERT_ALTNAME_INVALID");
      this[kSocket][kError] = err;
      onError(this[kClient], err);
    }
    function onHttp2FrameError(type, code, id) {
      const err = new InformationalError(`HTTP/2: "frameError" received - type ${type}, code ${code}`);
      if (id === 0) {
        this[kSocket][kError] = err;
        onError(this[kClient], err);
      }
    }
    function onHttp2SessionEnd() {
      util.destroy(this, new SocketError("other side closed"));
      util.destroy(this[kSocket], new SocketError("other side closed"));
    }
    function onHTTP2GoAway(code) {
      const client = this[kClient];
      const err = new InformationalError(`HTTP/2: "GOAWAY" frame received with code ${code}`);
      client[kSocket] = null;
      client[kHTTP2Session] = null;
      if (client.destroyed) {
        assert(this[kPending] === 0);
        const requests = client[kQueue].splice(client[kRunningIdx]);
        for (let i = 0; i < requests.length; i++) {
          const request2 = requests[i];
          errorRequest(this, request2, err);
        }
      } else if (client[kRunning] > 0) {
        const request2 = client[kQueue][client[kRunningIdx]];
        client[kQueue][client[kRunningIdx]++] = null;
        errorRequest(client, request2, err);
      }
      client[kPendingIdx] = client[kRunningIdx];
      assert(client[kRunning] === 0);
      client.emit(
        "disconnect",
        client[kUrl],
        [client],
        err
      );
      resume(client);
    }
    var constants = require_constants3();
    var createRedirectInterceptor = require_redirectInterceptor();
    var EMPTY_BUF = Buffer.alloc(0);
    async function lazyllhttp() {
      const llhttpWasmData = process.env.JEST_WORKER_ID ? require_llhttp_wasm() : void 0;
      let mod;
      try {
        mod = await WebAssembly.compile(Buffer.from(require_llhttp_simd_wasm(), "base64"));
      } catch (e) {
        mod = await WebAssembly.compile(Buffer.from(llhttpWasmData || require_llhttp_wasm(), "base64"));
      }
      return await WebAssembly.instantiate(mod, {
        env: {
          /* eslint-disable camelcase */
          wasm_on_url: (p, at, len) => {
            return 0;
          },
          wasm_on_status: (p, at, len) => {
            assert.strictEqual(currentParser.ptr, p);
            const start = at - currentBufferPtr + currentBufferRef.byteOffset;
            return currentParser.onStatus(new FastBuffer(currentBufferRef.buffer, start, len)) || 0;
          },
          wasm_on_message_begin: (p) => {
            assert.strictEqual(currentParser.ptr, p);
            return currentParser.onMessageBegin() || 0;
          },
          wasm_on_header_field: (p, at, len) => {
            assert.strictEqual(currentParser.ptr, p);
            const start = at - currentBufferPtr + currentBufferRef.byteOffset;
            return currentParser.onHeaderField(new FastBuffer(currentBufferRef.buffer, start, len)) || 0;
          },
          wasm_on_header_value: (p, at, len) => {
            assert.strictEqual(currentParser.ptr, p);
            const start = at - currentBufferPtr + currentBufferRef.byteOffset;
            return currentParser.onHeaderValue(new FastBuffer(currentBufferRef.buffer, start, len)) || 0;
          },
          wasm_on_headers_complete: (p, statusCode, upgrade, shouldKeepAlive) => {
            assert.strictEqual(currentParser.ptr, p);
            return currentParser.onHeadersComplete(statusCode, Boolean(upgrade), Boolean(shouldKeepAlive)) || 0;
          },
          wasm_on_body: (p, at, len) => {
            assert.strictEqual(currentParser.ptr, p);
            const start = at - currentBufferPtr + currentBufferRef.byteOffset;
            return currentParser.onBody(new FastBuffer(currentBufferRef.buffer, start, len)) || 0;
          },
          wasm_on_message_complete: (p) => {
            assert.strictEqual(currentParser.ptr, p);
            return currentParser.onMessageComplete() || 0;
          }
          /* eslint-enable camelcase */
        }
      });
    }
    var llhttpInstance = null;
    var llhttpPromise = lazyllhttp();
    llhttpPromise.catch();
    var currentParser = null;
    var currentBufferRef = null;
    var currentBufferSize = 0;
    var currentBufferPtr = null;
    var TIMEOUT_HEADERS = 1;
    var TIMEOUT_BODY = 2;
    var TIMEOUT_IDLE = 3;
    var Parser = class {
      constructor(client, socket, { exports: exports3 }) {
        assert(Number.isFinite(client[kMaxHeadersSize]) && client[kMaxHeadersSize] > 0);
        this.llhttp = exports3;
        this.ptr = this.llhttp.llhttp_alloc(constants.TYPE.RESPONSE);
        this.client = client;
        this.socket = socket;
        this.timeout = null;
        this.timeoutValue = null;
        this.timeoutType = null;
        this.statusCode = null;
        this.statusText = "";
        this.upgrade = false;
        this.headers = [];
        this.headersSize = 0;
        this.headersMaxSize = client[kMaxHeadersSize];
        this.shouldKeepAlive = false;
        this.paused = false;
        this.resume = this.resume.bind(this);
        this.bytesRead = 0;
        this.keepAlive = "";
        this.contentLength = "";
        this.connection = "";
        this.maxResponseSize = client[kMaxResponseSize];
      }
      setTimeout(value, type) {
        this.timeoutType = type;
        if (value !== this.timeoutValue) {
          timers.clearTimeout(this.timeout);
          if (value) {
            this.timeout = timers.setTimeout(onParserTimeout, value, this);
            if (this.timeout.unref) {
              this.timeout.unref();
            }
          } else {
            this.timeout = null;
          }
          this.timeoutValue = value;
        } else if (this.timeout) {
          if (this.timeout.refresh) {
            this.timeout.refresh();
          }
        }
      }
      resume() {
        if (this.socket.destroyed || !this.paused) {
          return;
        }
        assert(this.ptr != null);
        assert(currentParser == null);
        this.llhttp.llhttp_resume(this.ptr);
        assert(this.timeoutType === TIMEOUT_BODY);
        if (this.timeout) {
          if (this.timeout.refresh) {
            this.timeout.refresh();
          }
        }
        this.paused = false;
        this.execute(this.socket.read() || EMPTY_BUF);
        this.readMore();
      }
      readMore() {
        while (!this.paused && this.ptr) {
          const chunk = this.socket.read();
          if (chunk === null) {
            break;
          }
          this.execute(chunk);
        }
      }
      execute(data) {
        assert(this.ptr != null);
        assert(currentParser == null);
        assert(!this.paused);
        const { socket, llhttp } = this;
        if (data.length > currentBufferSize) {
          if (currentBufferPtr) {
            llhttp.free(currentBufferPtr);
          }
          currentBufferSize = Math.ceil(data.length / 4096) * 4096;
          currentBufferPtr = llhttp.malloc(currentBufferSize);
        }
        new Uint8Array(llhttp.memory.buffer, currentBufferPtr, currentBufferSize).set(data);
        try {
          let ret;
          try {
            currentBufferRef = data;
            currentParser = this;
            ret = llhttp.llhttp_execute(this.ptr, currentBufferPtr, data.length);
          } catch (err) {
            throw err;
          } finally {
            currentParser = null;
            currentBufferRef = null;
          }
          const offset = llhttp.llhttp_get_error_pos(this.ptr) - currentBufferPtr;
          if (ret === constants.ERROR.PAUSED_UPGRADE) {
            this.onUpgrade(data.slice(offset));
          } else if (ret === constants.ERROR.PAUSED) {
            this.paused = true;
            socket.unshift(data.slice(offset));
          } else if (ret !== constants.ERROR.OK) {
            const ptr = llhttp.llhttp_get_error_reason(this.ptr);
            let message = "";
            if (ptr) {
              const len = new Uint8Array(llhttp.memory.buffer, ptr).indexOf(0);
              message = "Response does not match the HTTP/1.1 protocol (" + Buffer.from(llhttp.memory.buffer, ptr, len).toString() + ")";
            }
            throw new HTTPParserError(message, constants.ERROR[ret], data.slice(offset));
          }
        } catch (err) {
          util.destroy(socket, err);
        }
      }
      destroy() {
        assert(this.ptr != null);
        assert(currentParser == null);
        this.llhttp.llhttp_free(this.ptr);
        this.ptr = null;
        timers.clearTimeout(this.timeout);
        this.timeout = null;
        this.timeoutValue = null;
        this.timeoutType = null;
        this.paused = false;
      }
      onStatus(buf) {
        this.statusText = buf.toString();
      }
      onMessageBegin() {
        const { socket, client } = this;
        if (socket.destroyed) {
          return -1;
        }
        const request2 = client[kQueue][client[kRunningIdx]];
        if (!request2) {
          return -1;
        }
      }
      onHeaderField(buf) {
        const len = this.headers.length;
        if ((len & 1) === 0) {
          this.headers.push(buf);
        } else {
          this.headers[len - 1] = Buffer.concat([this.headers[len - 1], buf]);
        }
        this.trackHeader(buf.length);
      }
      onHeaderValue(buf) {
        let len = this.headers.length;
        if ((len & 1) === 1) {
          this.headers.push(buf);
          len += 1;
        } else {
          this.headers[len - 1] = Buffer.concat([this.headers[len - 1], buf]);
        }
        const key = this.headers[len - 2];
        if (key.length === 10 && key.toString().toLowerCase() === "keep-alive") {
          this.keepAlive += buf.toString();
        } else if (key.length === 10 && key.toString().toLowerCase() === "connection") {
          this.connection += buf.toString();
        } else if (key.length === 14 && key.toString().toLowerCase() === "content-length") {
          this.contentLength += buf.toString();
        }
        this.trackHeader(buf.length);
      }
      trackHeader(len) {
        this.headersSize += len;
        if (this.headersSize >= this.headersMaxSize) {
          util.destroy(this.socket, new HeadersOverflowError());
        }
      }
      onUpgrade(head) {
        const { upgrade, client, socket, headers, statusCode } = this;
        assert(upgrade);
        const request2 = client[kQueue][client[kRunningIdx]];
        assert(request2);
        assert(!socket.destroyed);
        assert(socket === client[kSocket]);
        assert(!this.paused);
        assert(request2.upgrade || request2.method === "CONNECT");
        this.statusCode = null;
        this.statusText = "";
        this.shouldKeepAlive = null;
        assert(this.headers.length % 2 === 0);
        this.headers = [];
        this.headersSize = 0;
        socket.unshift(head);
        socket[kParser].destroy();
        socket[kParser] = null;
        socket[kClient] = null;
        socket[kError] = null;
        socket.removeListener("error", onSocketError).removeListener("readable", onSocketReadable).removeListener("end", onSocketEnd).removeListener("close", onSocketClose);
        client[kSocket] = null;
        client[kQueue][client[kRunningIdx]++] = null;
        client.emit("disconnect", client[kUrl], [client], new InformationalError("upgrade"));
        try {
          request2.onUpgrade(statusCode, headers, socket);
        } catch (err) {
          util.destroy(socket, err);
        }
        resume(client);
      }
      onHeadersComplete(statusCode, upgrade, shouldKeepAlive) {
        const { client, socket, headers, statusText } = this;
        if (socket.destroyed) {
          return -1;
        }
        const request2 = client[kQueue][client[kRunningIdx]];
        if (!request2) {
          return -1;
        }
        assert(!this.upgrade);
        assert(this.statusCode < 200);
        if (statusCode === 100) {
          util.destroy(socket, new SocketError("bad response", util.getSocketInfo(socket)));
          return -1;
        }
        if (upgrade && !request2.upgrade) {
          util.destroy(socket, new SocketError("bad upgrade", util.getSocketInfo(socket)));
          return -1;
        }
        assert.strictEqual(this.timeoutType, TIMEOUT_HEADERS);
        this.statusCode = statusCode;
        this.shouldKeepAlive = shouldKeepAlive || // Override llhttp value which does not allow keepAlive for HEAD.
        request2.method === "HEAD" && !socket[kReset] && this.connection.toLowerCase() === "keep-alive";
        if (this.statusCode >= 200) {
          const bodyTimeout = request2.bodyTimeout != null ? request2.bodyTimeout : client[kBodyTimeout];
          this.setTimeout(bodyTimeout, TIMEOUT_BODY);
        } else if (this.timeout) {
          if (this.timeout.refresh) {
            this.timeout.refresh();
          }
        }
        if (request2.method === "CONNECT") {
          assert(client[kRunning] === 1);
          this.upgrade = true;
          return 2;
        }
        if (upgrade) {
          assert(client[kRunning] === 1);
          this.upgrade = true;
          return 2;
        }
        assert(this.headers.length % 2 === 0);
        this.headers = [];
        this.headersSize = 0;
        if (this.shouldKeepAlive && client[kPipelining]) {
          const keepAliveTimeout = this.keepAlive ? util.parseKeepAliveTimeout(this.keepAlive) : null;
          if (keepAliveTimeout != null) {
            const timeout = Math.min(
              keepAliveTimeout - client[kKeepAliveTimeoutThreshold],
              client[kKeepAliveMaxTimeout]
            );
            if (timeout <= 0) {
              socket[kReset] = true;
            } else {
              client[kKeepAliveTimeoutValue] = timeout;
            }
          } else {
            client[kKeepAliveTimeoutValue] = client[kKeepAliveDefaultTimeout];
          }
        } else {
          socket[kReset] = true;
        }
        const pause = request2.onHeaders(statusCode, headers, this.resume, statusText) === false;
        if (request2.aborted) {
          return -1;
        }
        if (request2.method === "HEAD") {
          return 1;
        }
        if (statusCode < 200) {
          return 1;
        }
        if (socket[kBlocking]) {
          socket[kBlocking] = false;
          resume(client);
        }
        return pause ? constants.ERROR.PAUSED : 0;
      }
      onBody(buf) {
        const { client, socket, statusCode, maxResponseSize } = this;
        if (socket.destroyed) {
          return -1;
        }
        const request2 = client[kQueue][client[kRunningIdx]];
        assert(request2);
        assert.strictEqual(this.timeoutType, TIMEOUT_BODY);
        if (this.timeout) {
          if (this.timeout.refresh) {
            this.timeout.refresh();
          }
        }
        assert(statusCode >= 200);
        if (maxResponseSize > -1 && this.bytesRead + buf.length > maxResponseSize) {
          util.destroy(socket, new ResponseExceededMaxSizeError());
          return -1;
        }
        this.bytesRead += buf.length;
        if (request2.onData(buf) === false) {
          return constants.ERROR.PAUSED;
        }
      }
      onMessageComplete() {
        const { client, socket, statusCode, upgrade, headers, contentLength, bytesRead, shouldKeepAlive } = this;
        if (socket.destroyed && (!statusCode || shouldKeepAlive)) {
          return -1;
        }
        if (upgrade) {
          return;
        }
        const request2 = client[kQueue][client[kRunningIdx]];
        assert(request2);
        assert(statusCode >= 100);
        this.statusCode = null;
        this.statusText = "";
        this.bytesRead = 0;
        this.contentLength = "";
        this.keepAlive = "";
        this.connection = "";
        assert(this.headers.length % 2 === 0);
        this.headers = [];
        this.headersSize = 0;
        if (statusCode < 200) {
          return;
        }
        if (request2.method !== "HEAD" && contentLength && bytesRead !== parseInt(contentLength, 10)) {
          util.destroy(socket, new ResponseContentLengthMismatchError());
          return -1;
        }
        request2.onComplete(headers);
        client[kQueue][client[kRunningIdx]++] = null;
        if (socket[kWriting]) {
          assert.strictEqual(client[kRunning], 0);
          util.destroy(socket, new InformationalError("reset"));
          return constants.ERROR.PAUSED;
        } else if (!shouldKeepAlive) {
          util.destroy(socket, new InformationalError("reset"));
          return constants.ERROR.PAUSED;
        } else if (socket[kReset] && client[kRunning] === 0) {
          util.destroy(socket, new InformationalError("reset"));
          return constants.ERROR.PAUSED;
        } else if (client[kPipelining] === 1) {
          setImmediate(resume, client);
        } else {
          resume(client);
        }
      }
    };
    function onParserTimeout(parser) {
      const { socket, timeoutType, client } = parser;
      if (timeoutType === TIMEOUT_HEADERS) {
        if (!socket[kWriting] || socket.writableNeedDrain || client[kRunning] > 1) {
          assert(!parser.paused, "cannot be paused while waiting for headers");
          util.destroy(socket, new HeadersTimeoutError());
        }
      } else if (timeoutType === TIMEOUT_BODY) {
        if (!parser.paused) {
          util.destroy(socket, new BodyTimeoutError());
        }
      } else if (timeoutType === TIMEOUT_IDLE) {
        assert(client[kRunning] === 0 && client[kKeepAliveTimeoutValue]);
        util.destroy(socket, new InformationalError("socket idle timeout"));
      }
    }
    function onSocketReadable() {
      const { [kParser]: parser } = this;
      if (parser) {
        parser.readMore();
      }
    }
    function onSocketError(err) {
      const { [kClient]: client, [kParser]: parser } = this;
      assert(err.code !== "ERR_TLS_CERT_ALTNAME_INVALID");
      if (client[kHTTPConnVersion] !== "h2") {
        if (err.code === "ECONNRESET" && parser.statusCode && !parser.shouldKeepAlive) {
          parser.onMessageComplete();
          return;
        }
      }
      this[kError] = err;
      onError(this[kClient], err);
    }
    function onError(client, err) {
      if (client[kRunning] === 0 && err.code !== "UND_ERR_INFO" && err.code !== "UND_ERR_SOCKET") {
        assert(client[kPendingIdx] === client[kRunningIdx]);
        const requests = client[kQueue].splice(client[kRunningIdx]);
        for (let i = 0; i < requests.length; i++) {
          const request2 = requests[i];
          errorRequest(client, request2, err);
        }
        assert(client[kSize] === 0);
      }
    }
    function onSocketEnd() {
      const { [kParser]: parser, [kClient]: client } = this;
      if (client[kHTTPConnVersion] !== "h2") {
        if (parser.statusCode && !parser.shouldKeepAlive) {
          parser.onMessageComplete();
          return;
        }
      }
      util.destroy(this, new SocketError("other side closed", util.getSocketInfo(this)));
    }
    function onSocketClose() {
      const { [kClient]: client, [kParser]: parser } = this;
      if (client[kHTTPConnVersion] === "h1" && parser) {
        if (!this[kError] && parser.statusCode && !parser.shouldKeepAlive) {
          parser.onMessageComplete();
        }
        this[kParser].destroy();
        this[kParser] = null;
      }
      const err = this[kError] || new SocketError("closed", util.getSocketInfo(this));
      client[kSocket] = null;
      if (client.destroyed) {
        assert(client[kPending] === 0);
        const requests = client[kQueue].splice(client[kRunningIdx]);
        for (let i = 0; i < requests.length; i++) {
          const request2 = requests[i];
          errorRequest(client, request2, err);
        }
      } else if (client[kRunning] > 0 && err.code !== "UND_ERR_INFO") {
        const request2 = client[kQueue][client[kRunningIdx]];
        client[kQueue][client[kRunningIdx]++] = null;
        errorRequest(client, request2, err);
      }
      client[kPendingIdx] = client[kRunningIdx];
      assert(client[kRunning] === 0);
      client.emit("disconnect", client[kUrl], [client], err);
      resume(client);
    }
    async function connect(client) {
      assert(!client[kConnecting]);
      assert(!client[kSocket]);
      let { host, hostname, protocol, port } = client[kUrl];
      if (hostname[0] === "[") {
        const idx = hostname.indexOf("]");
        assert(idx !== -1);
        const ip = hostname.substring(1, idx);
        assert(net.isIP(ip));
        hostname = ip;
      }
      client[kConnecting] = true;
      if (channels.beforeConnect.hasSubscribers) {
        channels.beforeConnect.publish({
          connectParams: {
            host,
            hostname,
            protocol,
            port,
            servername: client[kServerName],
            localAddress: client[kLocalAddress]
          },
          connector: client[kConnector]
        });
      }
      try {
        const socket = await new Promise((resolve, reject) => {
          client[kConnector]({
            host,
            hostname,
            protocol,
            port,
            servername: client[kServerName],
            localAddress: client[kLocalAddress]
          }, (err, socket2) => {
            if (err) {
              reject(err);
            } else {
              resolve(socket2);
            }
          });
        });
        if (client.destroyed) {
          util.destroy(socket.on("error", () => {
          }), new ClientDestroyedError());
          return;
        }
        client[kConnecting] = false;
        assert(socket);
        const isH2 = socket.alpnProtocol === "h2";
        if (isH2) {
          if (!h2ExperimentalWarned) {
            h2ExperimentalWarned = true;
            process.emitWarning("H2 support is experimental, expect them to change at any time.", {
              code: "UNDICI-H2"
            });
          }
          const session = http22.connect(client[kUrl], {
            createConnection: () => socket,
            peerMaxConcurrentStreams: client[kHTTP2SessionState].maxConcurrentStreams
          });
          client[kHTTPConnVersion] = "h2";
          session[kClient] = client;
          session[kSocket] = socket;
          session.on("error", onHttp2SessionError);
          session.on("frameError", onHttp2FrameError);
          session.on("end", onHttp2SessionEnd);
          session.on("goaway", onHTTP2GoAway);
          session.on("close", onSocketClose);
          session.unref();
          client[kHTTP2Session] = session;
          socket[kHTTP2Session] = session;
        } else {
          if (!llhttpInstance) {
            llhttpInstance = await llhttpPromise;
            llhttpPromise = null;
          }
          socket[kNoRef] = false;
          socket[kWriting] = false;
          socket[kReset] = false;
          socket[kBlocking] = false;
          socket[kParser] = new Parser(client, socket, llhttpInstance);
        }
        socket[kCounter] = 0;
        socket[kMaxRequests] = client[kMaxRequests];
        socket[kClient] = client;
        socket[kError] = null;
        socket.on("error", onSocketError).on("readable", onSocketReadable).on("end", onSocketEnd).on("close", onSocketClose);
        client[kSocket] = socket;
        if (channels.connected.hasSubscribers) {
          channels.connected.publish({
            connectParams: {
              host,
              hostname,
              protocol,
              port,
              servername: client[kServerName],
              localAddress: client[kLocalAddress]
            },
            connector: client[kConnector],
            socket
          });
        }
        client.emit("connect", client[kUrl], [client]);
      } catch (err) {
        if (client.destroyed) {
          return;
        }
        client[kConnecting] = false;
        if (channels.connectError.hasSubscribers) {
          channels.connectError.publish({
            connectParams: {
              host,
              hostname,
              protocol,
              port,
              servername: client[kServerName],
              localAddress: client[kLocalAddress]
            },
            connector: client[kConnector],
            error: err
          });
        }
        if (err.code === "ERR_TLS_CERT_ALTNAME_INVALID") {
          assert(client[kRunning] === 0);
          while (client[kPending] > 0 && client[kQueue][client[kPendingIdx]].servername === client[kServerName]) {
            const request2 = client[kQueue][client[kPendingIdx]++];
            errorRequest(client, request2, err);
          }
        } else {
          onError(client, err);
        }
        client.emit("connectionError", client[kUrl], [client], err);
      }
      resume(client);
    }
    function emitDrain(client) {
      client[kNeedDrain] = 0;
      client.emit("drain", client[kUrl], [client]);
    }
    function resume(client, sync) {
      if (client[kResuming] === 2) {
        return;
      }
      client[kResuming] = 2;
      _resume(client, sync);
      client[kResuming] = 0;
      if (client[kRunningIdx] > 256) {
        client[kQueue].splice(0, client[kRunningIdx]);
        client[kPendingIdx] -= client[kRunningIdx];
        client[kRunningIdx] = 0;
      }
    }
    function _resume(client, sync) {
      while (true) {
        if (client.destroyed) {
          assert(client[kPending] === 0);
          return;
        }
        if (client[kClosedResolve] && !client[kSize]) {
          client[kClosedResolve]();
          client[kClosedResolve] = null;
          return;
        }
        const socket = client[kSocket];
        if (socket && !socket.destroyed && socket.alpnProtocol !== "h2") {
          if (client[kSize] === 0) {
            if (!socket[kNoRef] && socket.unref) {
              socket.unref();
              socket[kNoRef] = true;
            }
          } else if (socket[kNoRef] && socket.ref) {
            socket.ref();
            socket[kNoRef] = false;
          }
          if (client[kSize] === 0) {
            if (socket[kParser].timeoutType !== TIMEOUT_IDLE) {
              socket[kParser].setTimeout(client[kKeepAliveTimeoutValue], TIMEOUT_IDLE);
            }
          } else if (client[kRunning] > 0 && socket[kParser].statusCode < 200) {
            if (socket[kParser].timeoutType !== TIMEOUT_HEADERS) {
              const request3 = client[kQueue][client[kRunningIdx]];
              const headersTimeout = request3.headersTimeout != null ? request3.headersTimeout : client[kHeadersTimeout];
              socket[kParser].setTimeout(headersTimeout, TIMEOUT_HEADERS);
            }
          }
        }
        if (client[kBusy]) {
          client[kNeedDrain] = 2;
        } else if (client[kNeedDrain] === 2) {
          if (sync) {
            client[kNeedDrain] = 1;
            process.nextTick(emitDrain, client);
          } else {
            emitDrain(client);
          }
          continue;
        }
        if (client[kPending] === 0) {
          return;
        }
        if (client[kRunning] >= (client[kPipelining] || 1)) {
          return;
        }
        const request2 = client[kQueue][client[kPendingIdx]];
        if (client[kUrl].protocol === "https:" && client[kServerName] !== request2.servername) {
          if (client[kRunning] > 0) {
            return;
          }
          client[kServerName] = request2.servername;
          if (socket && socket.servername !== request2.servername) {
            util.destroy(socket, new InformationalError("servername changed"));
            return;
          }
        }
        if (client[kConnecting]) {
          return;
        }
        if (!socket && !client[kHTTP2Session]) {
          connect(client);
          return;
        }
        if (socket.destroyed || socket[kWriting] || socket[kReset] || socket[kBlocking]) {
          return;
        }
        if (client[kRunning] > 0 && !request2.idempotent) {
          return;
        }
        if (client[kRunning] > 0 && (request2.upgrade || request2.method === "CONNECT")) {
          return;
        }
        if (client[kRunning] > 0 && util.bodyLength(request2.body) !== 0 && (util.isStream(request2.body) || util.isAsyncIterable(request2.body))) {
          return;
        }
        if (!request2.aborted && write(client, request2)) {
          client[kPendingIdx]++;
        } else {
          client[kQueue].splice(client[kPendingIdx], 1);
        }
      }
    }
    function shouldSendContentLength(method) {
      return method !== "GET" && method !== "HEAD" && method !== "OPTIONS" && method !== "TRACE" && method !== "CONNECT";
    }
    function write(client, request2) {
      if (client[kHTTPConnVersion] === "h2") {
        writeH2(client, client[kHTTP2Session], request2);
        return;
      }
      const { body, method, path, host, upgrade, headers, blocking, reset } = request2;
      const expectsPayload = method === "PUT" || method === "POST" || method === "PATCH";
      if (body && typeof body.read === "function") {
        body.read(0);
      }
      const bodyLength = util.bodyLength(body);
      let contentLength = bodyLength;
      if (contentLength === null) {
        contentLength = request2.contentLength;
      }
      if (contentLength === 0 && !expectsPayload) {
        contentLength = null;
      }
      if (shouldSendContentLength(method) && contentLength > 0 && request2.contentLength !== null && request2.contentLength !== contentLength) {
        if (client[kStrictContentLength]) {
          errorRequest(client, request2, new RequestContentLengthMismatchError());
          return false;
        }
        process.emitWarning(new RequestContentLengthMismatchError());
      }
      const socket = client[kSocket];
      try {
        request2.onConnect((err) => {
          if (request2.aborted || request2.completed) {
            return;
          }
          errorRequest(client, request2, err || new RequestAbortedError());
          util.destroy(socket, new InformationalError("aborted"));
        });
      } catch (err) {
        errorRequest(client, request2, err);
      }
      if (request2.aborted) {
        return false;
      }
      if (method === "HEAD") {
        socket[kReset] = true;
      }
      if (upgrade || method === "CONNECT") {
        socket[kReset] = true;
      }
      if (reset != null) {
        socket[kReset] = reset;
      }
      if (client[kMaxRequests] && socket[kCounter]++ >= client[kMaxRequests]) {
        socket[kReset] = true;
      }
      if (blocking) {
        socket[kBlocking] = true;
      }
      let header = `${method} ${path} HTTP/1.1\r
`;
      if (typeof host === "string") {
        header += `host: ${host}\r
`;
      } else {
        header += client[kHostHeader];
      }
      if (upgrade) {
        header += `connection: upgrade\r
upgrade: ${upgrade}\r
`;
      } else if (client[kPipelining] && !socket[kReset]) {
        header += "connection: keep-alive\r\n";
      } else {
        header += "connection: close\r\n";
      }
      if (headers) {
        header += headers;
      }
      if (channels.sendHeaders.hasSubscribers) {
        channels.sendHeaders.publish({ request: request2, headers: header, socket });
      }
      if (!body || bodyLength === 0) {
        if (contentLength === 0) {
          socket.write(`${header}content-length: 0\r
\r
`, "latin1");
        } else {
          assert(contentLength === null, "no body must not have content length");
          socket.write(`${header}\r
`, "latin1");
        }
        request2.onRequestSent();
      } else if (util.isBuffer(body)) {
        assert(contentLength === body.byteLength, "buffer body must have content length");
        socket.cork();
        socket.write(`${header}content-length: ${contentLength}\r
\r
`, "latin1");
        socket.write(body);
        socket.uncork();
        request2.onBodySent(body);
        request2.onRequestSent();
        if (!expectsPayload) {
          socket[kReset] = true;
        }
      } else if (util.isBlobLike(body)) {
        if (typeof body.stream === "function") {
          writeIterable({ body: body.stream(), client, request: request2, socket, contentLength, header, expectsPayload });
        } else {
          writeBlob({ body, client, request: request2, socket, contentLength, header, expectsPayload });
        }
      } else if (util.isStream(body)) {
        writeStream({ body, client, request: request2, socket, contentLength, header, expectsPayload });
      } else if (util.isIterable(body)) {
        writeIterable({ body, client, request: request2, socket, contentLength, header, expectsPayload });
      } else {
        assert(false);
      }
      return true;
    }
    function writeH2(client, session, request2) {
      const { body, method, path, host, upgrade, expectContinue, signal, headers: reqHeaders } = request2;
      let headers;
      if (typeof reqHeaders === "string") headers = Request[kHTTP2CopyHeaders](reqHeaders.trim());
      else headers = reqHeaders;
      if (upgrade) {
        errorRequest(client, request2, new Error("Upgrade not supported for H2"));
        return false;
      }
      try {
        request2.onConnect((err) => {
          if (request2.aborted || request2.completed) {
            return;
          }
          errorRequest(client, request2, err || new RequestAbortedError());
        });
      } catch (err) {
        errorRequest(client, request2, err);
      }
      if (request2.aborted) {
        return false;
      }
      let stream;
      const h2State = client[kHTTP2SessionState];
      headers[HTTP2_HEADER_AUTHORITY] = host || client[kHost];
      headers[HTTP2_HEADER_METHOD] = method;
      if (method === "CONNECT") {
        session.ref();
        stream = session.request(headers, { endStream: false, signal });
        if (stream.id && !stream.pending) {
          request2.onUpgrade(null, null, stream);
          ++h2State.openStreams;
        } else {
          stream.once("ready", () => {
            request2.onUpgrade(null, null, stream);
            ++h2State.openStreams;
          });
        }
        stream.once("close", () => {
          h2State.openStreams -= 1;
          if (h2State.openStreams === 0) session.unref();
        });
        return true;
      }
      headers[HTTP2_HEADER_PATH] = path;
      headers[HTTP2_HEADER_SCHEME] = "https";
      const expectsPayload = method === "PUT" || method === "POST" || method === "PATCH";
      if (body && typeof body.read === "function") {
        body.read(0);
      }
      let contentLength = util.bodyLength(body);
      if (contentLength == null) {
        contentLength = request2.contentLength;
      }
      if (contentLength === 0 || !expectsPayload) {
        contentLength = null;
      }
      if (shouldSendContentLength(method) && contentLength > 0 && request2.contentLength != null && request2.contentLength !== contentLength) {
        if (client[kStrictContentLength]) {
          errorRequest(client, request2, new RequestContentLengthMismatchError());
          return false;
        }
        process.emitWarning(new RequestContentLengthMismatchError());
      }
      if (contentLength != null) {
        assert(body, "no body must not have content length");
        headers[HTTP2_HEADER_CONTENT_LENGTH] = `${contentLength}`;
      }
      session.ref();
      const shouldEndStream = method === "GET" || method === "HEAD";
      if (expectContinue) {
        headers[HTTP2_HEADER_EXPECT] = "100-continue";
        stream = session.request(headers, { endStream: shouldEndStream, signal });
        stream.once("continue", writeBodyH2);
      } else {
        stream = session.request(headers, {
          endStream: shouldEndStream,
          signal
        });
        writeBodyH2();
      }
      ++h2State.openStreams;
      stream.once("response", (headers2) => {
        const { [HTTP2_HEADER_STATUS]: statusCode, ...realHeaders } = headers2;
        if (request2.onHeaders(Number(statusCode), realHeaders, stream.resume.bind(stream), "") === false) {
          stream.pause();
        }
      });
      stream.once("end", () => {
        request2.onComplete([]);
      });
      stream.on("data", (chunk) => {
        if (request2.onData(chunk) === false) {
          stream.pause();
        }
      });
      stream.once("close", () => {
        h2State.openStreams -= 1;
        if (h2State.openStreams === 0) {
          session.unref();
        }
      });
      stream.once("error", function(err) {
        if (client[kHTTP2Session] && !client[kHTTP2Session].destroyed && !this.closed && !this.destroyed) {
          h2State.streams -= 1;
          util.destroy(stream, err);
        }
      });
      stream.once("frameError", (type, code) => {
        const err = new InformationalError(`HTTP/2: "frameError" received - type ${type}, code ${code}`);
        errorRequest(client, request2, err);
        if (client[kHTTP2Session] && !client[kHTTP2Session].destroyed && !this.closed && !this.destroyed) {
          h2State.streams -= 1;
          util.destroy(stream, err);
        }
      });
      return true;
      function writeBodyH2() {
        if (!body) {
          request2.onRequestSent();
        } else if (util.isBuffer(body)) {
          assert(contentLength === body.byteLength, "buffer body must have content length");
          stream.cork();
          stream.write(body);
          stream.uncork();
          stream.end();
          request2.onBodySent(body);
          request2.onRequestSent();
        } else if (util.isBlobLike(body)) {
          if (typeof body.stream === "function") {
            writeIterable({
              client,
              request: request2,
              contentLength,
              h2stream: stream,
              expectsPayload,
              body: body.stream(),
              socket: client[kSocket],
              header: ""
            });
          } else {
            writeBlob({
              body,
              client,
              request: request2,
              contentLength,
              expectsPayload,
              h2stream: stream,
              header: "",
              socket: client[kSocket]
            });
          }
        } else if (util.isStream(body)) {
          writeStream({
            body,
            client,
            request: request2,
            contentLength,
            expectsPayload,
            socket: client[kSocket],
            h2stream: stream,
            header: ""
          });
        } else if (util.isIterable(body)) {
          writeIterable({
            body,
            client,
            request: request2,
            contentLength,
            expectsPayload,
            header: "",
            h2stream: stream,
            socket: client[kSocket]
          });
        } else {
          assert(false);
        }
      }
    }
    function writeStream({ h2stream, body, client, request: request2, socket, contentLength, header, expectsPayload }) {
      assert(contentLength !== 0 || client[kRunning] === 0, "stream body cannot be pipelined");
      if (client[kHTTPConnVersion] === "h2") {
        let onPipeData = function(chunk) {
          request2.onBodySent(chunk);
        };
        const pipe = pipeline(
          body,
          h2stream,
          (err) => {
            if (err) {
              util.destroy(body, err);
              util.destroy(h2stream, err);
            } else {
              request2.onRequestSent();
            }
          }
        );
        pipe.on("data", onPipeData);
        pipe.once("end", () => {
          pipe.removeListener("data", onPipeData);
          util.destroy(pipe);
        });
        return;
      }
      let finished = false;
      const writer = new AsyncWriter({ socket, request: request2, contentLength, client, expectsPayload, header });
      const onData = function(chunk) {
        if (finished) {
          return;
        }
        try {
          if (!writer.write(chunk) && this.pause) {
            this.pause();
          }
        } catch (err) {
          util.destroy(this, err);
        }
      };
      const onDrain = function() {
        if (finished) {
          return;
        }
        if (body.resume) {
          body.resume();
        }
      };
      const onAbort = function() {
        if (finished) {
          return;
        }
        const err = new RequestAbortedError();
        queueMicrotask(() => onFinished(err));
      };
      const onFinished = function(err) {
        if (finished) {
          return;
        }
        finished = true;
        assert(socket.destroyed || socket[kWriting] && client[kRunning] <= 1);
        socket.off("drain", onDrain).off("error", onFinished);
        body.removeListener("data", onData).removeListener("end", onFinished).removeListener("error", onFinished).removeListener("close", onAbort);
        if (!err) {
          try {
            writer.end();
          } catch (er) {
            err = er;
          }
        }
        writer.destroy(err);
        if (err && (err.code !== "UND_ERR_INFO" || err.message !== "reset")) {
          util.destroy(body, err);
        } else {
          util.destroy(body);
        }
      };
      body.on("data", onData).on("end", onFinished).on("error", onFinished).on("close", onAbort);
      if (body.resume) {
        body.resume();
      }
      socket.on("drain", onDrain).on("error", onFinished);
    }
    async function writeBlob({ h2stream, body, client, request: request2, socket, contentLength, header, expectsPayload }) {
      assert(contentLength === body.size, "blob body must have content length");
      const isH2 = client[kHTTPConnVersion] === "h2";
      try {
        if (contentLength != null && contentLength !== body.size) {
          throw new RequestContentLengthMismatchError();
        }
        const buffer = Buffer.from(await body.arrayBuffer());
        if (isH2) {
          h2stream.cork();
          h2stream.write(buffer);
          h2stream.uncork();
        } else {
          socket.cork();
          socket.write(`${header}content-length: ${contentLength}\r
\r
`, "latin1");
          socket.write(buffer);
          socket.uncork();
        }
        request2.onBodySent(buffer);
        request2.onRequestSent();
        if (!expectsPayload) {
          socket[kReset] = true;
        }
        resume(client);
      } catch (err) {
        util.destroy(isH2 ? h2stream : socket, err);
      }
    }
    async function writeIterable({ h2stream, body, client, request: request2, socket, contentLength, header, expectsPayload }) {
      assert(contentLength !== 0 || client[kRunning] === 0, "iterator body cannot be pipelined");
      let callback = null;
      function onDrain() {
        if (callback) {
          const cb = callback;
          callback = null;
          cb();
        }
      }
      const waitForDrain = () => new Promise((resolve, reject) => {
        assert(callback === null);
        if (socket[kError]) {
          reject(socket[kError]);
        } else {
          callback = resolve;
        }
      });
      if (client[kHTTPConnVersion] === "h2") {
        h2stream.on("close", onDrain).on("drain", onDrain);
        try {
          for await (const chunk of body) {
            if (socket[kError]) {
              throw socket[kError];
            }
            const res = h2stream.write(chunk);
            request2.onBodySent(chunk);
            if (!res) {
              await waitForDrain();
            }
          }
        } catch (err) {
          h2stream.destroy(err);
        } finally {
          request2.onRequestSent();
          h2stream.end();
          h2stream.off("close", onDrain).off("drain", onDrain);
        }
        return;
      }
      socket.on("close", onDrain).on("drain", onDrain);
      const writer = new AsyncWriter({ socket, request: request2, contentLength, client, expectsPayload, header });
      try {
        for await (const chunk of body) {
          if (socket[kError]) {
            throw socket[kError];
          }
          if (!writer.write(chunk)) {
            await waitForDrain();
          }
        }
        writer.end();
      } catch (err) {
        writer.destroy(err);
      } finally {
        socket.off("close", onDrain).off("drain", onDrain);
      }
    }
    var AsyncWriter = class {
      constructor({ socket, request: request2, contentLength, client, expectsPayload, header }) {
        this.socket = socket;
        this.request = request2;
        this.contentLength = contentLength;
        this.client = client;
        this.bytesWritten = 0;
        this.expectsPayload = expectsPayload;
        this.header = header;
        socket[kWriting] = true;
      }
      write(chunk) {
        const { socket, request: request2, contentLength, client, bytesWritten, expectsPayload, header } = this;
        if (socket[kError]) {
          throw socket[kError];
        }
        if (socket.destroyed) {
          return false;
        }
        const len = Buffer.byteLength(chunk);
        if (!len) {
          return true;
        }
        if (contentLength !== null && bytesWritten + len > contentLength) {
          if (client[kStrictContentLength]) {
            throw new RequestContentLengthMismatchError();
          }
          process.emitWarning(new RequestContentLengthMismatchError());
        }
        socket.cork();
        if (bytesWritten === 0) {
          if (!expectsPayload) {
            socket[kReset] = true;
          }
          if (contentLength === null) {
            socket.write(`${header}transfer-encoding: chunked\r
`, "latin1");
          } else {
            socket.write(`${header}content-length: ${contentLength}\r
\r
`, "latin1");
          }
        }
        if (contentLength === null) {
          socket.write(`\r
${len.toString(16)}\r
`, "latin1");
        }
        this.bytesWritten += len;
        const ret = socket.write(chunk);
        socket.uncork();
        request2.onBodySent(chunk);
        if (!ret) {
          if (socket[kParser].timeout && socket[kParser].timeoutType === TIMEOUT_HEADERS) {
            if (socket[kParser].timeout.refresh) {
              socket[kParser].timeout.refresh();
            }
          }
        }
        return ret;
      }
      end() {
        const { socket, contentLength, client, bytesWritten, expectsPayload, header, request: request2 } = this;
        request2.onRequestSent();
        socket[kWriting] = false;
        if (socket[kError]) {
          throw socket[kError];
        }
        if (socket.destroyed) {
          return;
        }
        if (bytesWritten === 0) {
          if (expectsPayload) {
            socket.write(`${header}content-length: 0\r
\r
`, "latin1");
          } else {
            socket.write(`${header}\r
`, "latin1");
          }
        } else if (contentLength === null) {
          socket.write("\r\n0\r\n\r\n", "latin1");
        }
        if (contentLength !== null && bytesWritten !== contentLength) {
          if (client[kStrictContentLength]) {
            throw new RequestContentLengthMismatchError();
          } else {
            process.emitWarning(new RequestContentLengthMismatchError());
          }
        }
        if (socket[kParser].timeout && socket[kParser].timeoutType === TIMEOUT_HEADERS) {
          if (socket[kParser].timeout.refresh) {
            socket[kParser].timeout.refresh();
          }
        }
        resume(client);
      }
      destroy(err) {
        const { socket, client } = this;
        socket[kWriting] = false;
        if (err) {
          assert(client[kRunning] <= 1, "pipeline should only contain this request");
          util.destroy(socket, err);
        }
      }
    };
    function errorRequest(client, request2, err) {
      try {
        request2.onError(err);
        assert(request2.aborted);
      } catch (err2) {
        client.emit("error", err2);
      }
    }
    module2.exports = Client;
  }
});

// node_modules/undici/lib/node/fixed-queue.js
var require_fixed_queue = __commonJS({
  "node_modules/undici/lib/node/fixed-queue.js"(exports2, module2) {
    "use strict";
    var kSize = 2048;
    var kMask = kSize - 1;
    var FixedCircularBuffer = class {
      constructor() {
        this.bottom = 0;
        this.top = 0;
        this.list = new Array(kSize);
        this.next = null;
      }
      isEmpty() {
        return this.top === this.bottom;
      }
      isFull() {
        return (this.top + 1 & kMask) === this.bottom;
      }
      push(data) {
        this.list[this.top] = data;
        this.top = this.top + 1 & kMask;
      }
      shift() {
        const nextItem = this.list[this.bottom];
        if (nextItem === void 0)
          return null;
        this.list[this.bottom] = void 0;
        this.bottom = this.bottom + 1 & kMask;
        return nextItem;
      }
    };
    module2.exports = class FixedQueue {
      constructor() {
        this.head = this.tail = new FixedCircularBuffer();
      }
      isEmpty() {
        return this.head.isEmpty();
      }
      push(data) {
        if (this.head.isFull()) {
          this.head = this.head.next = new FixedCircularBuffer();
        }
        this.head.push(data);
      }
      shift() {
        const tail = this.tail;
        const next = tail.shift();
        if (tail.isEmpty() && tail.next !== null) {
          this.tail = tail.next;
        }
        return next;
      }
    };
  }
});

// node_modules/undici/lib/pool-stats.js
var require_pool_stats = __commonJS({
  "node_modules/undici/lib/pool-stats.js"(exports2, module2) {
    var { kFree, kConnected, kPending, kQueued, kRunning, kSize } = require_symbols();
    var kPool = Symbol("pool");
    var PoolStats = class {
      constructor(pool) {
        this[kPool] = pool;
      }
      get connected() {
        return this[kPool][kConnected];
      }
      get free() {
        return this[kPool][kFree];
      }
      get pending() {
        return this[kPool][kPending];
      }
      get queued() {
        return this[kPool][kQueued];
      }
      get running() {
        return this[kPool][kRunning];
      }
      get size() {
        return this[kPool][kSize];
      }
    };
    module2.exports = PoolStats;
  }
});

// node_modules/undici/lib/pool-base.js
var require_pool_base = __commonJS({
  "node_modules/undici/lib/pool-base.js"(exports2, module2) {
    "use strict";
    var DispatcherBase = require_dispatcher_base();
    var FixedQueue = require_fixed_queue();
    var { kConnected, kSize, kRunning, kPending, kQueued, kBusy, kFree, kUrl, kClose, kDestroy, kDispatch } = require_symbols();
    var PoolStats = require_pool_stats();
    var kClients = Symbol("clients");
    var kNeedDrain = Symbol("needDrain");
    var kQueue = Symbol("queue");
    var kClosedResolve = Symbol("closed resolve");
    var kOnDrain = Symbol("onDrain");
    var kOnConnect = Symbol("onConnect");
    var kOnDisconnect = Symbol("onDisconnect");
    var kOnConnectionError = Symbol("onConnectionError");
    var kGetDispatcher = Symbol("get dispatcher");
    var kAddClient = Symbol("add client");
    var kRemoveClient = Symbol("remove client");
    var kStats = Symbol("stats");
    var PoolBase = class extends DispatcherBase {
      constructor() {
        super();
        this[kQueue] = new FixedQueue();
        this[kClients] = [];
        this[kQueued] = 0;
        const pool = this;
        this[kOnDrain] = function onDrain(origin, targets) {
          const queue = pool[kQueue];
          let needDrain = false;
          while (!needDrain) {
            const item = queue.shift();
            if (!item) {
              break;
            }
            pool[kQueued]--;
            needDrain = !this.dispatch(item.opts, item.handler);
          }
          this[kNeedDrain] = needDrain;
          if (!this[kNeedDrain] && pool[kNeedDrain]) {
            pool[kNeedDrain] = false;
            pool.emit("drain", origin, [pool, ...targets]);
          }
          if (pool[kClosedResolve] && queue.isEmpty()) {
            Promise.all(pool[kClients].map((c) => c.close())).then(pool[kClosedResolve]);
          }
        };
        this[kOnConnect] = (origin, targets) => {
          pool.emit("connect", origin, [pool, ...targets]);
        };
        this[kOnDisconnect] = (origin, targets, err) => {
          pool.emit("disconnect", origin, [pool, ...targets], err);
        };
        this[kOnConnectionError] = (origin, targets, err) => {
          pool.emit("connectionError", origin, [pool, ...targets], err);
        };
        this[kStats] = new PoolStats(this);
      }
      get [kBusy]() {
        return this[kNeedDrain];
      }
      get [kConnected]() {
        return this[kClients].filter((client) => client[kConnected]).length;
      }
      get [kFree]() {
        return this[kClients].filter((client) => client[kConnected] && !client[kNeedDrain]).length;
      }
      get [kPending]() {
        let ret = this[kQueued];
        for (const { [kPending]: pending } of this[kClients]) {
          ret += pending;
        }
        return ret;
      }
      get [kRunning]() {
        let ret = 0;
        for (const { [kRunning]: running } of this[kClients]) {
          ret += running;
        }
        return ret;
      }
      get [kSize]() {
        let ret = this[kQueued];
        for (const { [kSize]: size } of this[kClients]) {
          ret += size;
        }
        return ret;
      }
      get stats() {
        return this[kStats];
      }
      async [kClose]() {
        if (this[kQueue].isEmpty()) {
          return Promise.all(this[kClients].map((c) => c.close()));
        } else {
          return new Promise((resolve) => {
            this[kClosedResolve] = resolve;
          });
        }
      }
      async [kDestroy](err) {
        while (true) {
          const item = this[kQueue].shift();
          if (!item) {
            break;
          }
          item.handler.onError(err);
        }
        return Promise.all(this[kClients].map((c) => c.destroy(err)));
      }
      [kDispatch](opts, handler2) {
        const dispatcher = this[kGetDispatcher]();
        if (!dispatcher) {
          this[kNeedDrain] = true;
          this[kQueue].push({ opts, handler: handler2 });
          this[kQueued]++;
        } else if (!dispatcher.dispatch(opts, handler2)) {
          dispatcher[kNeedDrain] = true;
          this[kNeedDrain] = !this[kGetDispatcher]();
        }
        return !this[kNeedDrain];
      }
      [kAddClient](client) {
        client.on("drain", this[kOnDrain]).on("connect", this[kOnConnect]).on("disconnect", this[kOnDisconnect]).on("connectionError", this[kOnConnectionError]);
        this[kClients].push(client);
        if (this[kNeedDrain]) {
          process.nextTick(() => {
            if (this[kNeedDrain]) {
              this[kOnDrain](client[kUrl], [this, client]);
            }
          });
        }
        return this;
      }
      [kRemoveClient](client) {
        client.close(() => {
          const idx = this[kClients].indexOf(client);
          if (idx !== -1) {
            this[kClients].splice(idx, 1);
          }
        });
        this[kNeedDrain] = this[kClients].some((dispatcher) => !dispatcher[kNeedDrain] && dispatcher.closed !== true && dispatcher.destroyed !== true);
      }
    };
    module2.exports = {
      PoolBase,
      kClients,
      kNeedDrain,
      kAddClient,
      kRemoveClient,
      kGetDispatcher
    };
  }
});

// node_modules/undici/lib/pool.js
var require_pool = __commonJS({
  "node_modules/undici/lib/pool.js"(exports2, module2) {
    "use strict";
    var {
      PoolBase,
      kClients,
      kNeedDrain,
      kAddClient,
      kGetDispatcher
    } = require_pool_base();
    var Client = require_client();
    var {
      InvalidArgumentError
    } = require_errors();
    var util = require_util();
    var { kUrl, kInterceptors } = require_symbols();
    var buildConnector = require_connect();
    var kOptions = Symbol("options");
    var kConnections = Symbol("connections");
    var kFactory = Symbol("factory");
    function defaultFactory(origin, opts) {
      return new Client(origin, opts);
    }
    var Pool = class extends PoolBase {
      constructor(origin, {
        connections,
        factory = defaultFactory,
        connect,
        connectTimeout,
        tls,
        maxCachedSessions,
        socketPath,
        autoSelectFamily,
        autoSelectFamilyAttemptTimeout,
        allowH2,
        ...options
      } = {}) {
        super();
        if (connections != null && (!Number.isFinite(connections) || connections < 0)) {
          throw new InvalidArgumentError("invalid connections");
        }
        if (typeof factory !== "function") {
          throw new InvalidArgumentError("factory must be a function.");
        }
        if (connect != null && typeof connect !== "function" && typeof connect !== "object") {
          throw new InvalidArgumentError("connect must be a function or an object");
        }
        if (typeof connect !== "function") {
          connect = buildConnector({
            ...tls,
            maxCachedSessions,
            allowH2,
            socketPath,
            timeout: connectTimeout,
            ...util.nodeHasAutoSelectFamily && autoSelectFamily ? { autoSelectFamily, autoSelectFamilyAttemptTimeout } : void 0,
            ...connect
          });
        }
        this[kInterceptors] = options.interceptors && options.interceptors.Pool && Array.isArray(options.interceptors.Pool) ? options.interceptors.Pool : [];
        this[kConnections] = connections || null;
        this[kUrl] = util.parseOrigin(origin);
        this[kOptions] = { ...util.deepClone(options), connect, allowH2 };
        this[kOptions].interceptors = options.interceptors ? { ...options.interceptors } : void 0;
        this[kFactory] = factory;
        this.on("connectionError", (origin2, targets, error) => {
          for (const target of targets) {
            const idx = this[kClients].indexOf(target);
            if (idx !== -1) {
              this[kClients].splice(idx, 1);
            }
          }
        });
      }
      [kGetDispatcher]() {
        let dispatcher = this[kClients].find((dispatcher2) => !dispatcher2[kNeedDrain]);
        if (dispatcher) {
          return dispatcher;
        }
        if (!this[kConnections] || this[kClients].length < this[kConnections]) {
          dispatcher = this[kFactory](this[kUrl], this[kOptions]);
          this[kAddClient](dispatcher);
        }
        return dispatcher;
      }
    };
    module2.exports = Pool;
  }
});

// node_modules/undici/lib/balanced-pool.js
var require_balanced_pool = __commonJS({
  "node_modules/undici/lib/balanced-pool.js"(exports2, module2) {
    "use strict";
    var {
      BalancedPoolMissingUpstreamError,
      InvalidArgumentError
    } = require_errors();
    var {
      PoolBase,
      kClients,
      kNeedDrain,
      kAddClient,
      kRemoveClient,
      kGetDispatcher
    } = require_pool_base();
    var Pool = require_pool();
    var { kUrl, kInterceptors } = require_symbols();
    var { parseOrigin } = require_util();
    var kFactory = Symbol("factory");
    var kOptions = Symbol("options");
    var kGreatestCommonDivisor = Symbol("kGreatestCommonDivisor");
    var kCurrentWeight = Symbol("kCurrentWeight");
    var kIndex = Symbol("kIndex");
    var kWeight = Symbol("kWeight");
    var kMaxWeightPerServer = Symbol("kMaxWeightPerServer");
    var kErrorPenalty = Symbol("kErrorPenalty");
    function getGreatestCommonDivisor(a, b) {
      if (b === 0) return a;
      return getGreatestCommonDivisor(b, a % b);
    }
    function defaultFactory(origin, opts) {
      return new Pool(origin, opts);
    }
    var BalancedPool = class extends PoolBase {
      constructor(upstreams = [], { factory = defaultFactory, ...opts } = {}) {
        super();
        this[kOptions] = opts;
        this[kIndex] = -1;
        this[kCurrentWeight] = 0;
        this[kMaxWeightPerServer] = this[kOptions].maxWeightPerServer || 100;
        this[kErrorPenalty] = this[kOptions].errorPenalty || 15;
        if (!Array.isArray(upstreams)) {
          upstreams = [upstreams];
        }
        if (typeof factory !== "function") {
          throw new InvalidArgumentError("factory must be a function.");
        }
        this[kInterceptors] = opts.interceptors && opts.interceptors.BalancedPool && Array.isArray(opts.interceptors.BalancedPool) ? opts.interceptors.BalancedPool : [];
        this[kFactory] = factory;
        for (const upstream of upstreams) {
          this.addUpstream(upstream);
        }
        this._updateBalancedPoolStats();
      }
      addUpstream(upstream) {
        const upstreamOrigin = parseOrigin(upstream).origin;
        if (this[kClients].find((pool2) => pool2[kUrl].origin === upstreamOrigin && pool2.closed !== true && pool2.destroyed !== true)) {
          return this;
        }
        const pool = this[kFactory](upstreamOrigin, Object.assign({}, this[kOptions]));
        this[kAddClient](pool);
        pool.on("connect", () => {
          pool[kWeight] = Math.min(this[kMaxWeightPerServer], pool[kWeight] + this[kErrorPenalty]);
        });
        pool.on("connectionError", () => {
          pool[kWeight] = Math.max(1, pool[kWeight] - this[kErrorPenalty]);
          this._updateBalancedPoolStats();
        });
        pool.on("disconnect", (...args) => {
          const err = args[2];
          if (err && err.code === "UND_ERR_SOCKET") {
            pool[kWeight] = Math.max(1, pool[kWeight] - this[kErrorPenalty]);
            this._updateBalancedPoolStats();
          }
        });
        for (const client of this[kClients]) {
          client[kWeight] = this[kMaxWeightPerServer];
        }
        this._updateBalancedPoolStats();
        return this;
      }
      _updateBalancedPoolStats() {
        this[kGreatestCommonDivisor] = this[kClients].map((p) => p[kWeight]).reduce(getGreatestCommonDivisor, 0);
      }
      removeUpstream(upstream) {
        const upstreamOrigin = parseOrigin(upstream).origin;
        const pool = this[kClients].find((pool2) => pool2[kUrl].origin === upstreamOrigin && pool2.closed !== true && pool2.destroyed !== true);
        if (pool) {
          this[kRemoveClient](pool);
        }
        return this;
      }
      get upstreams() {
        return this[kClients].filter((dispatcher) => dispatcher.closed !== true && dispatcher.destroyed !== true).map((p) => p[kUrl].origin);
      }
      [kGetDispatcher]() {
        if (this[kClients].length === 0) {
          throw new BalancedPoolMissingUpstreamError();
        }
        const dispatcher = this[kClients].find((dispatcher2) => !dispatcher2[kNeedDrain] && dispatcher2.closed !== true && dispatcher2.destroyed !== true);
        if (!dispatcher) {
          return;
        }
        const allClientsBusy = this[kClients].map((pool) => pool[kNeedDrain]).reduce((a, b) => a && b, true);
        if (allClientsBusy) {
          return;
        }
        let counter = 0;
        let maxWeightIndex = this[kClients].findIndex((pool) => !pool[kNeedDrain]);
        while (counter++ < this[kClients].length) {
          this[kIndex] = (this[kIndex] + 1) % this[kClients].length;
          const pool = this[kClients][this[kIndex]];
          if (pool[kWeight] > this[kClients][maxWeightIndex][kWeight] && !pool[kNeedDrain]) {
            maxWeightIndex = this[kIndex];
          }
          if (this[kIndex] === 0) {
            this[kCurrentWeight] = this[kCurrentWeight] - this[kGreatestCommonDivisor];
            if (this[kCurrentWeight] <= 0) {
              this[kCurrentWeight] = this[kMaxWeightPerServer];
            }
          }
          if (pool[kWeight] >= this[kCurrentWeight] && !pool[kNeedDrain]) {
            return pool;
          }
        }
        this[kCurrentWeight] = this[kClients][maxWeightIndex][kWeight];
        this[kIndex] = maxWeightIndex;
        return this[kClients][maxWeightIndex];
      }
    };
    module2.exports = BalancedPool;
  }
});

// node_modules/undici/lib/compat/dispatcher-weakref.js
var require_dispatcher_weakref = __commonJS({
  "node_modules/undici/lib/compat/dispatcher-weakref.js"(exports2, module2) {
    "use strict";
    var { kConnected, kSize } = require_symbols();
    var CompatWeakRef = class {
      constructor(value) {
        this.value = value;
      }
      deref() {
        return this.value[kConnected] === 0 && this.value[kSize] === 0 ? void 0 : this.value;
      }
    };
    var CompatFinalizer = class {
      constructor(finalizer) {
        this.finalizer = finalizer;
      }
      register(dispatcher, key) {
        if (dispatcher.on) {
          dispatcher.on("disconnect", () => {
            if (dispatcher[kConnected] === 0 && dispatcher[kSize] === 0) {
              this.finalizer(key);
            }
          });
        }
      }
    };
    module2.exports = function() {
      if (process.env.NODE_V8_COVERAGE) {
        return {
          WeakRef: CompatWeakRef,
          FinalizationRegistry: CompatFinalizer
        };
      }
      return {
        WeakRef: global.WeakRef || CompatWeakRef,
        FinalizationRegistry: global.FinalizationRegistry || CompatFinalizer
      };
    };
  }
});

// node_modules/undici/lib/agent.js
var require_agent = __commonJS({
  "node_modules/undici/lib/agent.js"(exports2, module2) {
    "use strict";
    var { InvalidArgumentError } = require_errors();
    var { kClients, kRunning, kClose, kDestroy, kDispatch, kInterceptors } = require_symbols();
    var DispatcherBase = require_dispatcher_base();
    var Pool = require_pool();
    var Client = require_client();
    var util = require_util();
    var createRedirectInterceptor = require_redirectInterceptor();
    var { WeakRef: WeakRef2, FinalizationRegistry } = require_dispatcher_weakref()();
    var kOnConnect = Symbol("onConnect");
    var kOnDisconnect = Symbol("onDisconnect");
    var kOnConnectionError = Symbol("onConnectionError");
    var kMaxRedirections = Symbol("maxRedirections");
    var kOnDrain = Symbol("onDrain");
    var kFactory = Symbol("factory");
    var kFinalizer = Symbol("finalizer");
    var kOptions = Symbol("options");
    function defaultFactory(origin, opts) {
      return opts && opts.connections === 1 ? new Client(origin, opts) : new Pool(origin, opts);
    }
    var Agent = class extends DispatcherBase {
      constructor({ factory = defaultFactory, maxRedirections = 0, connect, ...options } = {}) {
        super();
        if (typeof factory !== "function") {
          throw new InvalidArgumentError("factory must be a function.");
        }
        if (connect != null && typeof connect !== "function" && typeof connect !== "object") {
          throw new InvalidArgumentError("connect must be a function or an object");
        }
        if (!Number.isInteger(maxRedirections) || maxRedirections < 0) {
          throw new InvalidArgumentError("maxRedirections must be a positive number");
        }
        if (connect && typeof connect !== "function") {
          connect = { ...connect };
        }
        this[kInterceptors] = options.interceptors && options.interceptors.Agent && Array.isArray(options.interceptors.Agent) ? options.interceptors.Agent : [createRedirectInterceptor({ maxRedirections })];
        this[kOptions] = { ...util.deepClone(options), connect };
        this[kOptions].interceptors = options.interceptors ? { ...options.interceptors } : void 0;
        this[kMaxRedirections] = maxRedirections;
        this[kFactory] = factory;
        this[kClients] = /* @__PURE__ */ new Map();
        this[kFinalizer] = new FinalizationRegistry(
          /* istanbul ignore next: gc is undeterministic */
          (key) => {
            const ref = this[kClients].get(key);
            if (ref !== void 0 && ref.deref() === void 0) {
              this[kClients].delete(key);
            }
          }
        );
        const agent = this;
        this[kOnDrain] = (origin, targets) => {
          agent.emit("drain", origin, [agent, ...targets]);
        };
        this[kOnConnect] = (origin, targets) => {
          agent.emit("connect", origin, [agent, ...targets]);
        };
        this[kOnDisconnect] = (origin, targets, err) => {
          agent.emit("disconnect", origin, [agent, ...targets], err);
        };
        this[kOnConnectionError] = (origin, targets, err) => {
          agent.emit("connectionError", origin, [agent, ...targets], err);
        };
      }
      get [kRunning]() {
        let ret = 0;
        for (const ref of this[kClients].values()) {
          const client = ref.deref();
          if (client) {
            ret += client[kRunning];
          }
        }
        return ret;
      }
      [kDispatch](opts, handler2) {
        let key;
        if (opts.origin && (typeof opts.origin === "string" || opts.origin instanceof URL)) {
          key = String(opts.origin);
        } else {
          throw new InvalidArgumentError("opts.origin must be a non-empty string or URL.");
        }
        const ref = this[kClients].get(key);
        let dispatcher = ref ? ref.deref() : null;
        if (!dispatcher) {
          dispatcher = this[kFactory](opts.origin, this[kOptions]).on("drain", this[kOnDrain]).on("connect", this[kOnConnect]).on("disconnect", this[kOnDisconnect]).on("connectionError", this[kOnConnectionError]);
          this[kClients].set(key, new WeakRef2(dispatcher));
          this[kFinalizer].register(dispatcher, key);
        }
        return dispatcher.dispatch(opts, handler2);
      }
      async [kClose]() {
        const closePromises = [];
        for (const ref of this[kClients].values()) {
          const client = ref.deref();
          if (client) {
            closePromises.push(client.close());
          }
        }
        await Promise.all(closePromises);
      }
      async [kDestroy](err) {
        const destroyPromises = [];
        for (const ref of this[kClients].values()) {
          const client = ref.deref();
          if (client) {
            destroyPromises.push(client.destroy(err));
          }
        }
        await Promise.all(destroyPromises);
      }
    };
    module2.exports = Agent;
  }
});

// node_modules/undici/lib/api/readable.js
var require_readable = __commonJS({
  "node_modules/undici/lib/api/readable.js"(exports2, module2) {
    "use strict";
    var assert = require("assert");
    var { Readable } = require("stream");
    var { RequestAbortedError, NotSupportedError, InvalidArgumentError } = require_errors();
    var util = require_util();
    var { ReadableStreamFrom, toUSVString } = require_util();
    var Blob2;
    var kConsume = Symbol("kConsume");
    var kReading = Symbol("kReading");
    var kBody = Symbol("kBody");
    var kAbort = Symbol("abort");
    var kContentType = Symbol("kContentType");
    var noop2 = () => {
    };
    module2.exports = class BodyReadable extends Readable {
      constructor({
        resume,
        abort,
        contentType = "",
        highWaterMark = 64 * 1024
        // Same as nodejs fs streams.
      }) {
        super({
          autoDestroy: true,
          read: resume,
          highWaterMark
        });
        this._readableState.dataEmitted = false;
        this[kAbort] = abort;
        this[kConsume] = null;
        this[kBody] = null;
        this[kContentType] = contentType;
        this[kReading] = false;
      }
      destroy(err) {
        if (this.destroyed) {
          return this;
        }
        if (!err && !this._readableState.endEmitted) {
          err = new RequestAbortedError();
        }
        if (err) {
          this[kAbort]();
        }
        return super.destroy(err);
      }
      emit(ev, ...args) {
        if (ev === "data") {
          this._readableState.dataEmitted = true;
        } else if (ev === "error") {
          this._readableState.errorEmitted = true;
        }
        return super.emit(ev, ...args);
      }
      on(ev, ...args) {
        if (ev === "data" || ev === "readable") {
          this[kReading] = true;
        }
        return super.on(ev, ...args);
      }
      addListener(ev, ...args) {
        return this.on(ev, ...args);
      }
      off(ev, ...args) {
        const ret = super.off(ev, ...args);
        if (ev === "data" || ev === "readable") {
          this[kReading] = this.listenerCount("data") > 0 || this.listenerCount("readable") > 0;
        }
        return ret;
      }
      removeListener(ev, ...args) {
        return this.off(ev, ...args);
      }
      push(chunk) {
        if (this[kConsume] && chunk !== null && this.readableLength === 0) {
          consumePush(this[kConsume], chunk);
          return this[kReading] ? super.push(chunk) : true;
        }
        return super.push(chunk);
      }
      // https://fetch.spec.whatwg.org/#dom-body-text
      async text() {
        return consume(this, "text");
      }
      // https://fetch.spec.whatwg.org/#dom-body-json
      async json() {
        return consume(this, "json");
      }
      // https://fetch.spec.whatwg.org/#dom-body-blob
      async blob() {
        return consume(this, "blob");
      }
      // https://fetch.spec.whatwg.org/#dom-body-arraybuffer
      async arrayBuffer() {
        return consume(this, "arrayBuffer");
      }
      // https://fetch.spec.whatwg.org/#dom-body-formdata
      async formData() {
        throw new NotSupportedError();
      }
      // https://fetch.spec.whatwg.org/#dom-body-bodyused
      get bodyUsed() {
        return util.isDisturbed(this);
      }
      // https://fetch.spec.whatwg.org/#dom-body-body
      get body() {
        if (!this[kBody]) {
          this[kBody] = ReadableStreamFrom(this);
          if (this[kConsume]) {
            this[kBody].getReader();
            assert(this[kBody].locked);
          }
        }
        return this[kBody];
      }
      dump(opts) {
        let limit = opts && Number.isFinite(opts.limit) ? opts.limit : 262144;
        const signal = opts && opts.signal;
        if (signal) {
          try {
            if (typeof signal !== "object" || !("aborted" in signal)) {
              throw new InvalidArgumentError("signal must be an AbortSignal");
            }
            util.throwIfAborted(signal);
          } catch (err) {
            return Promise.reject(err);
          }
        }
        if (this.closed) {
          return Promise.resolve(null);
        }
        return new Promise((resolve, reject) => {
          const signalListenerCleanup = signal ? util.addAbortListener(signal, () => {
            this.destroy();
          }) : noop2;
          this.on("close", function() {
            signalListenerCleanup();
            if (signal && signal.aborted) {
              reject(signal.reason || Object.assign(new Error("The operation was aborted"), { name: "AbortError" }));
            } else {
              resolve(null);
            }
          }).on("error", noop2).on("data", function(chunk) {
            limit -= chunk.length;
            if (limit <= 0) {
              this.destroy();
            }
          }).resume();
        });
      }
    };
    function isLocked(self2) {
      return self2[kBody] && self2[kBody].locked === true || self2[kConsume];
    }
    function isUnusable(self2) {
      return util.isDisturbed(self2) || isLocked(self2);
    }
    async function consume(stream, type) {
      if (isUnusable(stream)) {
        throw new TypeError("unusable");
      }
      assert(!stream[kConsume]);
      return new Promise((resolve, reject) => {
        stream[kConsume] = {
          type,
          stream,
          resolve,
          reject,
          length: 0,
          body: []
        };
        stream.on("error", function(err) {
          consumeFinish(this[kConsume], err);
        }).on("close", function() {
          if (this[kConsume].body !== null) {
            consumeFinish(this[kConsume], new RequestAbortedError());
          }
        });
        process.nextTick(consumeStart, stream[kConsume]);
      });
    }
    function consumeStart(consume2) {
      if (consume2.body === null) {
        return;
      }
      const { _readableState: state } = consume2.stream;
      for (const chunk of state.buffer) {
        consumePush(consume2, chunk);
      }
      if (state.endEmitted) {
        consumeEnd(this[kConsume]);
      } else {
        consume2.stream.on("end", function() {
          consumeEnd(this[kConsume]);
        });
      }
      consume2.stream.resume();
      while (consume2.stream.read() != null) {
      }
    }
    function consumeEnd(consume2) {
      const { type, body, resolve, stream, length } = consume2;
      try {
        if (type === "text") {
          resolve(toUSVString(Buffer.concat(body)));
        } else if (type === "json") {
          resolve(JSON.parse(Buffer.concat(body)));
        } else if (type === "arrayBuffer") {
          const dst = new Uint8Array(length);
          let pos = 0;
          for (const buf of body) {
            dst.set(buf, pos);
            pos += buf.byteLength;
          }
          resolve(dst.buffer);
        } else if (type === "blob") {
          if (!Blob2) {
            Blob2 = require("buffer").Blob;
          }
          resolve(new Blob2(body, { type: stream[kContentType] }));
        }
        consumeFinish(consume2);
      } catch (err) {
        stream.destroy(err);
      }
    }
    function consumePush(consume2, chunk) {
      consume2.length += chunk.length;
      consume2.body.push(chunk);
    }
    function consumeFinish(consume2, err) {
      if (consume2.body === null) {
        return;
      }
      if (err) {
        consume2.reject(err);
      } else {
        consume2.resolve();
      }
      consume2.type = null;
      consume2.stream = null;
      consume2.resolve = null;
      consume2.reject = null;
      consume2.length = 0;
      consume2.body = null;
    }
  }
});

// node_modules/undici/lib/api/util.js
var require_util3 = __commonJS({
  "node_modules/undici/lib/api/util.js"(exports2, module2) {
    var assert = require("assert");
    var {
      ResponseStatusCodeError
    } = require_errors();
    var { toUSVString } = require_util();
    async function getResolveErrorBodyCallback({ callback, body, contentType, statusCode, statusMessage, headers }) {
      assert(body);
      let chunks = [];
      let limit = 0;
      for await (const chunk of body) {
        chunks.push(chunk);
        limit += chunk.length;
        if (limit > 128 * 1024) {
          chunks = null;
          break;
        }
      }
      if (statusCode === 204 || !contentType || !chunks) {
        process.nextTick(callback, new ResponseStatusCodeError(`Response status code ${statusCode}${statusMessage ? `: ${statusMessage}` : ""}`, statusCode, headers));
        return;
      }
      try {
        if (contentType.startsWith("application/json")) {
          const payload = JSON.parse(toUSVString(Buffer.concat(chunks)));
          process.nextTick(callback, new ResponseStatusCodeError(`Response status code ${statusCode}${statusMessage ? `: ${statusMessage}` : ""}`, statusCode, headers, payload));
          return;
        }
        if (contentType.startsWith("text/")) {
          const payload = toUSVString(Buffer.concat(chunks));
          process.nextTick(callback, new ResponseStatusCodeError(`Response status code ${statusCode}${statusMessage ? `: ${statusMessage}` : ""}`, statusCode, headers, payload));
          return;
        }
      } catch (err) {
      }
      process.nextTick(callback, new ResponseStatusCodeError(`Response status code ${statusCode}${statusMessage ? `: ${statusMessage}` : ""}`, statusCode, headers));
    }
    module2.exports = { getResolveErrorBodyCallback };
  }
});

// node_modules/undici/lib/api/abort-signal.js
var require_abort_signal = __commonJS({
  "node_modules/undici/lib/api/abort-signal.js"(exports2, module2) {
    var { addAbortListener } = require_util();
    var { RequestAbortedError } = require_errors();
    var kListener = Symbol("kListener");
    var kSignal = Symbol("kSignal");
    function abort(self2) {
      if (self2.abort) {
        self2.abort();
      } else {
        self2.onError(new RequestAbortedError());
      }
    }
    function addSignal(self2, signal) {
      self2[kSignal] = null;
      self2[kListener] = null;
      if (!signal) {
        return;
      }
      if (signal.aborted) {
        abort(self2);
        return;
      }
      self2[kSignal] = signal;
      self2[kListener] = () => {
        abort(self2);
      };
      addAbortListener(self2[kSignal], self2[kListener]);
    }
    function removeSignal(self2) {
      if (!self2[kSignal]) {
        return;
      }
      if ("removeEventListener" in self2[kSignal]) {
        self2[kSignal].removeEventListener("abort", self2[kListener]);
      } else {
        self2[kSignal].removeListener("abort", self2[kListener]);
      }
      self2[kSignal] = null;
      self2[kListener] = null;
    }
    module2.exports = {
      addSignal,
      removeSignal
    };
  }
});

// node_modules/undici/lib/api/api-request.js
var require_api_request = __commonJS({
  "node_modules/undici/lib/api/api-request.js"(exports2, module2) {
    "use strict";
    var Readable = require_readable();
    var {
      InvalidArgumentError,
      RequestAbortedError
    } = require_errors();
    var util = require_util();
    var { getResolveErrorBodyCallback } = require_util3();
    var { AsyncResource } = require("async_hooks");
    var { addSignal, removeSignal } = require_abort_signal();
    var RequestHandler = class extends AsyncResource {
      constructor(opts, callback) {
        if (!opts || typeof opts !== "object") {
          throw new InvalidArgumentError("invalid opts");
        }
        const { signal, method, opaque, body, onInfo, responseHeaders, throwOnError, highWaterMark } = opts;
        try {
          if (typeof callback !== "function") {
            throw new InvalidArgumentError("invalid callback");
          }
          if (highWaterMark && (typeof highWaterMark !== "number" || highWaterMark < 0)) {
            throw new InvalidArgumentError("invalid highWaterMark");
          }
          if (signal && typeof signal.on !== "function" && typeof signal.addEventListener !== "function") {
            throw new InvalidArgumentError("signal must be an EventEmitter or EventTarget");
          }
          if (method === "CONNECT") {
            throw new InvalidArgumentError("invalid method");
          }
          if (onInfo && typeof onInfo !== "function") {
            throw new InvalidArgumentError("invalid onInfo callback");
          }
          super("UNDICI_REQUEST");
        } catch (err) {
          if (util.isStream(body)) {
            util.destroy(body.on("error", util.nop), err);
          }
          throw err;
        }
        this.responseHeaders = responseHeaders || null;
        this.opaque = opaque || null;
        this.callback = callback;
        this.res = null;
        this.abort = null;
        this.body = body;
        this.trailers = {};
        this.context = null;
        this.onInfo = onInfo || null;
        this.throwOnError = throwOnError;
        this.highWaterMark = highWaterMark;
        if (util.isStream(body)) {
          body.on("error", (err) => {
            this.onError(err);
          });
        }
        addSignal(this, signal);
      }
      onConnect(abort, context) {
        if (!this.callback) {
          throw new RequestAbortedError();
        }
        this.abort = abort;
        this.context = context;
      }
      onHeaders(statusCode, rawHeaders, resume, statusMessage) {
        const { callback, opaque, abort, context, responseHeaders, highWaterMark } = this;
        const headers = responseHeaders === "raw" ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders);
        if (statusCode < 200) {
          if (this.onInfo) {
            this.onInfo({ statusCode, headers });
          }
          return;
        }
        const parsedHeaders = responseHeaders === "raw" ? util.parseHeaders(rawHeaders) : headers;
        const contentType = parsedHeaders["content-type"];
        const body = new Readable({ resume, abort, contentType, highWaterMark });
        this.callback = null;
        this.res = body;
        if (callback !== null) {
          if (this.throwOnError && statusCode >= 400) {
            this.runInAsyncScope(
              getResolveErrorBodyCallback,
              null,
              { callback, body, contentType, statusCode, statusMessage, headers }
            );
          } else {
            this.runInAsyncScope(callback, null, null, {
              statusCode,
              headers,
              trailers: this.trailers,
              opaque,
              body,
              context
            });
          }
        }
      }
      onData(chunk) {
        const { res } = this;
        return res.push(chunk);
      }
      onComplete(trailers) {
        const { res } = this;
        removeSignal(this);
        util.parseHeaders(trailers, this.trailers);
        res.push(null);
      }
      onError(err) {
        const { res, callback, body, opaque } = this;
        removeSignal(this);
        if (callback) {
          this.callback = null;
          queueMicrotask(() => {
            this.runInAsyncScope(callback, null, err, { opaque });
          });
        }
        if (res) {
          this.res = null;
          queueMicrotask(() => {
            util.destroy(res, err);
          });
        }
        if (body) {
          this.body = null;
          util.destroy(body, err);
        }
      }
    };
    function request2(opts, callback) {
      if (callback === void 0) {
        return new Promise((resolve, reject) => {
          request2.call(this, opts, (err, data) => {
            return err ? reject(err) : resolve(data);
          });
        });
      }
      try {
        this.dispatch(opts, new RequestHandler(opts, callback));
      } catch (err) {
        if (typeof callback !== "function") {
          throw err;
        }
        const opaque = opts && opts.opaque;
        queueMicrotask(() => callback(err, { opaque }));
      }
    }
    module2.exports = request2;
    module2.exports.RequestHandler = RequestHandler;
  }
});

// node_modules/undici/lib/api/api-stream.js
var require_api_stream = __commonJS({
  "node_modules/undici/lib/api/api-stream.js"(exports2, module2) {
    "use strict";
    var { finished, PassThrough } = require("stream");
    var {
      InvalidArgumentError,
      InvalidReturnValueError,
      RequestAbortedError
    } = require_errors();
    var util = require_util();
    var { getResolveErrorBodyCallback } = require_util3();
    var { AsyncResource } = require("async_hooks");
    var { addSignal, removeSignal } = require_abort_signal();
    var StreamHandler = class extends AsyncResource {
      constructor(opts, factory, callback) {
        if (!opts || typeof opts !== "object") {
          throw new InvalidArgumentError("invalid opts");
        }
        const { signal, method, opaque, body, onInfo, responseHeaders, throwOnError } = opts;
        try {
          if (typeof callback !== "function") {
            throw new InvalidArgumentError("invalid callback");
          }
          if (typeof factory !== "function") {
            throw new InvalidArgumentError("invalid factory");
          }
          if (signal && typeof signal.on !== "function" && typeof signal.addEventListener !== "function") {
            throw new InvalidArgumentError("signal must be an EventEmitter or EventTarget");
          }
          if (method === "CONNECT") {
            throw new InvalidArgumentError("invalid method");
          }
          if (onInfo && typeof onInfo !== "function") {
            throw new InvalidArgumentError("invalid onInfo callback");
          }
          super("UNDICI_STREAM");
        } catch (err) {
          if (util.isStream(body)) {
            util.destroy(body.on("error", util.nop), err);
          }
          throw err;
        }
        this.responseHeaders = responseHeaders || null;
        this.opaque = opaque || null;
        this.factory = factory;
        this.callback = callback;
        this.res = null;
        this.abort = null;
        this.context = null;
        this.trailers = null;
        this.body = body;
        this.onInfo = onInfo || null;
        this.throwOnError = throwOnError || false;
        if (util.isStream(body)) {
          body.on("error", (err) => {
            this.onError(err);
          });
        }
        addSignal(this, signal);
      }
      onConnect(abort, context) {
        if (!this.callback) {
          throw new RequestAbortedError();
        }
        this.abort = abort;
        this.context = context;
      }
      onHeaders(statusCode, rawHeaders, resume, statusMessage) {
        const { factory, opaque, context, callback, responseHeaders } = this;
        const headers = responseHeaders === "raw" ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders);
        if (statusCode < 200) {
          if (this.onInfo) {
            this.onInfo({ statusCode, headers });
          }
          return;
        }
        this.factory = null;
        let res;
        if (this.throwOnError && statusCode >= 400) {
          const parsedHeaders = responseHeaders === "raw" ? util.parseHeaders(rawHeaders) : headers;
          const contentType = parsedHeaders["content-type"];
          res = new PassThrough();
          this.callback = null;
          this.runInAsyncScope(
            getResolveErrorBodyCallback,
            null,
            { callback, body: res, contentType, statusCode, statusMessage, headers }
          );
        } else {
          if (factory === null) {
            return;
          }
          res = this.runInAsyncScope(factory, null, {
            statusCode,
            headers,
            opaque,
            context
          });
          if (!res || typeof res.write !== "function" || typeof res.end !== "function" || typeof res.on !== "function") {
            throw new InvalidReturnValueError("expected Writable");
          }
          finished(res, { readable: false }, (err) => {
            const { callback: callback2, res: res2, opaque: opaque2, trailers, abort } = this;
            this.res = null;
            if (err || !res2.readable) {
              util.destroy(res2, err);
            }
            this.callback = null;
            this.runInAsyncScope(callback2, null, err || null, { opaque: opaque2, trailers });
            if (err) {
              abort();
            }
          });
        }
        res.on("drain", resume);
        this.res = res;
        const needDrain = res.writableNeedDrain !== void 0 ? res.writableNeedDrain : res._writableState && res._writableState.needDrain;
        return needDrain !== true;
      }
      onData(chunk) {
        const { res } = this;
        return res ? res.write(chunk) : true;
      }
      onComplete(trailers) {
        const { res } = this;
        removeSignal(this);
        if (!res) {
          return;
        }
        this.trailers = util.parseHeaders(trailers);
        res.end();
      }
      onError(err) {
        const { res, callback, opaque, body } = this;
        removeSignal(this);
        this.factory = null;
        if (res) {
          this.res = null;
          util.destroy(res, err);
        } else if (callback) {
          this.callback = null;
          queueMicrotask(() => {
            this.runInAsyncScope(callback, null, err, { opaque });
          });
        }
        if (body) {
          this.body = null;
          util.destroy(body, err);
        }
      }
    };
    function stream(opts, factory, callback) {
      if (callback === void 0) {
        return new Promise((resolve, reject) => {
          stream.call(this, opts, factory, (err, data) => {
            return err ? reject(err) : resolve(data);
          });
        });
      }
      try {
        this.dispatch(opts, new StreamHandler(opts, factory, callback));
      } catch (err) {
        if (typeof callback !== "function") {
          throw err;
        }
        const opaque = opts && opts.opaque;
        queueMicrotask(() => callback(err, { opaque }));
      }
    }
    module2.exports = stream;
  }
});

// node_modules/undici/lib/api/api-pipeline.js
var require_api_pipeline = __commonJS({
  "node_modules/undici/lib/api/api-pipeline.js"(exports2, module2) {
    "use strict";
    var {
      Readable,
      Duplex,
      PassThrough
    } = require("stream");
    var {
      InvalidArgumentError,
      InvalidReturnValueError,
      RequestAbortedError
    } = require_errors();
    var util = require_util();
    var { AsyncResource } = require("async_hooks");
    var { addSignal, removeSignal } = require_abort_signal();
    var assert = require("assert");
    var kResume = Symbol("resume");
    var PipelineRequest = class extends Readable {
      constructor() {
        super({ autoDestroy: true });
        this[kResume] = null;
      }
      _read() {
        const { [kResume]: resume } = this;
        if (resume) {
          this[kResume] = null;
          resume();
        }
      }
      _destroy(err, callback) {
        this._read();
        callback(err);
      }
    };
    var PipelineResponse = class extends Readable {
      constructor(resume) {
        super({ autoDestroy: true });
        this[kResume] = resume;
      }
      _read() {
        this[kResume]();
      }
      _destroy(err, callback) {
        if (!err && !this._readableState.endEmitted) {
          err = new RequestAbortedError();
        }
        callback(err);
      }
    };
    var PipelineHandler = class extends AsyncResource {
      constructor(opts, handler2) {
        if (!opts || typeof opts !== "object") {
          throw new InvalidArgumentError("invalid opts");
        }
        if (typeof handler2 !== "function") {
          throw new InvalidArgumentError("invalid handler");
        }
        const { signal, method, opaque, onInfo, responseHeaders } = opts;
        if (signal && typeof signal.on !== "function" && typeof signal.addEventListener !== "function") {
          throw new InvalidArgumentError("signal must be an EventEmitter or EventTarget");
        }
        if (method === "CONNECT") {
          throw new InvalidArgumentError("invalid method");
        }
        if (onInfo && typeof onInfo !== "function") {
          throw new InvalidArgumentError("invalid onInfo callback");
        }
        super("UNDICI_PIPELINE");
        this.opaque = opaque || null;
        this.responseHeaders = responseHeaders || null;
        this.handler = handler2;
        this.abort = null;
        this.context = null;
        this.onInfo = onInfo || null;
        this.req = new PipelineRequest().on("error", util.nop);
        this.ret = new Duplex({
          readableObjectMode: opts.objectMode,
          autoDestroy: true,
          read: () => {
            const { body } = this;
            if (body && body.resume) {
              body.resume();
            }
          },
          write: (chunk, encoding, callback) => {
            const { req } = this;
            if (req.push(chunk, encoding) || req._readableState.destroyed) {
              callback();
            } else {
              req[kResume] = callback;
            }
          },
          destroy: (err, callback) => {
            const { body, req, res, ret, abort } = this;
            if (!err && !ret._readableState.endEmitted) {
              err = new RequestAbortedError();
            }
            if (abort && err) {
              abort();
            }
            util.destroy(body, err);
            util.destroy(req, err);
            util.destroy(res, err);
            removeSignal(this);
            callback(err);
          }
        }).on("prefinish", () => {
          const { req } = this;
          req.push(null);
        });
        this.res = null;
        addSignal(this, signal);
      }
      onConnect(abort, context) {
        const { ret, res } = this;
        assert(!res, "pipeline cannot be retried");
        if (ret.destroyed) {
          throw new RequestAbortedError();
        }
        this.abort = abort;
        this.context = context;
      }
      onHeaders(statusCode, rawHeaders, resume) {
        const { opaque, handler: handler2, context } = this;
        if (statusCode < 200) {
          if (this.onInfo) {
            const headers = this.responseHeaders === "raw" ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders);
            this.onInfo({ statusCode, headers });
          }
          return;
        }
        this.res = new PipelineResponse(resume);
        let body;
        try {
          this.handler = null;
          const headers = this.responseHeaders === "raw" ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders);
          body = this.runInAsyncScope(handler2, null, {
            statusCode,
            headers,
            opaque,
            body: this.res,
            context
          });
        } catch (err) {
          this.res.on("error", util.nop);
          throw err;
        }
        if (!body || typeof body.on !== "function") {
          throw new InvalidReturnValueError("expected Readable");
        }
        body.on("data", (chunk) => {
          const { ret, body: body2 } = this;
          if (!ret.push(chunk) && body2.pause) {
            body2.pause();
          }
        }).on("error", (err) => {
          const { ret } = this;
          util.destroy(ret, err);
        }).on("end", () => {
          const { ret } = this;
          ret.push(null);
        }).on("close", () => {
          const { ret } = this;
          if (!ret._readableState.ended) {
            util.destroy(ret, new RequestAbortedError());
          }
        });
        this.body = body;
      }
      onData(chunk) {
        const { res } = this;
        return res.push(chunk);
      }
      onComplete(trailers) {
        const { res } = this;
        res.push(null);
      }
      onError(err) {
        const { ret } = this;
        this.handler = null;
        util.destroy(ret, err);
      }
    };
    function pipeline(opts, handler2) {
      try {
        const pipelineHandler = new PipelineHandler(opts, handler2);
        this.dispatch({ ...opts, body: pipelineHandler.req }, pipelineHandler);
        return pipelineHandler.ret;
      } catch (err) {
        return new PassThrough().destroy(err);
      }
    }
    module2.exports = pipeline;
  }
});

// node_modules/undici/lib/api/api-upgrade.js
var require_api_upgrade = __commonJS({
  "node_modules/undici/lib/api/api-upgrade.js"(exports2, module2) {
    "use strict";
    var { InvalidArgumentError, RequestAbortedError, SocketError } = require_errors();
    var { AsyncResource } = require("async_hooks");
    var util = require_util();
    var { addSignal, removeSignal } = require_abort_signal();
    var assert = require("assert");
    var UpgradeHandler = class extends AsyncResource {
      constructor(opts, callback) {
        if (!opts || typeof opts !== "object") {
          throw new InvalidArgumentError("invalid opts");
        }
        if (typeof callback !== "function") {
          throw new InvalidArgumentError("invalid callback");
        }
        const { signal, opaque, responseHeaders } = opts;
        if (signal && typeof signal.on !== "function" && typeof signal.addEventListener !== "function") {
          throw new InvalidArgumentError("signal must be an EventEmitter or EventTarget");
        }
        super("UNDICI_UPGRADE");
        this.responseHeaders = responseHeaders || null;
        this.opaque = opaque || null;
        this.callback = callback;
        this.abort = null;
        this.context = null;
        addSignal(this, signal);
      }
      onConnect(abort, context) {
        if (!this.callback) {
          throw new RequestAbortedError();
        }
        this.abort = abort;
        this.context = null;
      }
      onHeaders() {
        throw new SocketError("bad upgrade", null);
      }
      onUpgrade(statusCode, rawHeaders, socket) {
        const { callback, opaque, context } = this;
        assert.strictEqual(statusCode, 101);
        removeSignal(this);
        this.callback = null;
        const headers = this.responseHeaders === "raw" ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders);
        this.runInAsyncScope(callback, null, null, {
          headers,
          socket,
          opaque,
          context
        });
      }
      onError(err) {
        const { callback, opaque } = this;
        removeSignal(this);
        if (callback) {
          this.callback = null;
          queueMicrotask(() => {
            this.runInAsyncScope(callback, null, err, { opaque });
          });
        }
      }
    };
    function upgrade(opts, callback) {
      if (callback === void 0) {
        return new Promise((resolve, reject) => {
          upgrade.call(this, opts, (err, data) => {
            return err ? reject(err) : resolve(data);
          });
        });
      }
      try {
        const upgradeHandler = new UpgradeHandler(opts, callback);
        this.dispatch({
          ...opts,
          method: opts.method || "GET",
          upgrade: opts.protocol || "Websocket"
        }, upgradeHandler);
      } catch (err) {
        if (typeof callback !== "function") {
          throw err;
        }
        const opaque = opts && opts.opaque;
        queueMicrotask(() => callback(err, { opaque }));
      }
    }
    module2.exports = upgrade;
  }
});

// node_modules/undici/lib/api/api-connect.js
var require_api_connect = __commonJS({
  "node_modules/undici/lib/api/api-connect.js"(exports2, module2) {
    "use strict";
    var { AsyncResource } = require("async_hooks");
    var { InvalidArgumentError, RequestAbortedError, SocketError } = require_errors();
    var util = require_util();
    var { addSignal, removeSignal } = require_abort_signal();
    var ConnectHandler = class extends AsyncResource {
      constructor(opts, callback) {
        if (!opts || typeof opts !== "object") {
          throw new InvalidArgumentError("invalid opts");
        }
        if (typeof callback !== "function") {
          throw new InvalidArgumentError("invalid callback");
        }
        const { signal, opaque, responseHeaders } = opts;
        if (signal && typeof signal.on !== "function" && typeof signal.addEventListener !== "function") {
          throw new InvalidArgumentError("signal must be an EventEmitter or EventTarget");
        }
        super("UNDICI_CONNECT");
        this.opaque = opaque || null;
        this.responseHeaders = responseHeaders || null;
        this.callback = callback;
        this.abort = null;
        addSignal(this, signal);
      }
      onConnect(abort, context) {
        if (!this.callback) {
          throw new RequestAbortedError();
        }
        this.abort = abort;
        this.context = context;
      }
      onHeaders() {
        throw new SocketError("bad connect", null);
      }
      onUpgrade(statusCode, rawHeaders, socket) {
        const { callback, opaque, context } = this;
        removeSignal(this);
        this.callback = null;
        let headers = rawHeaders;
        if (headers != null) {
          headers = this.responseHeaders === "raw" ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders);
        }
        this.runInAsyncScope(callback, null, null, {
          statusCode,
          headers,
          socket,
          opaque,
          context
        });
      }
      onError(err) {
        const { callback, opaque } = this;
        removeSignal(this);
        if (callback) {
          this.callback = null;
          queueMicrotask(() => {
            this.runInAsyncScope(callback, null, err, { opaque });
          });
        }
      }
    };
    function connect(opts, callback) {
      if (callback === void 0) {
        return new Promise((resolve, reject) => {
          connect.call(this, opts, (err, data) => {
            return err ? reject(err) : resolve(data);
          });
        });
      }
      try {
        const connectHandler = new ConnectHandler(opts, callback);
        this.dispatch({ ...opts, method: "CONNECT" }, connectHandler);
      } catch (err) {
        if (typeof callback !== "function") {
          throw err;
        }
        const opaque = opts && opts.opaque;
        queueMicrotask(() => callback(err, { opaque }));
      }
    }
    module2.exports = connect;
  }
});

// node_modules/undici/lib/api/index.js
var require_api = __commonJS({
  "node_modules/undici/lib/api/index.js"(exports2, module2) {
    "use strict";
    module2.exports.request = require_api_request();
    module2.exports.stream = require_api_stream();
    module2.exports.pipeline = require_api_pipeline();
    module2.exports.upgrade = require_api_upgrade();
    module2.exports.connect = require_api_connect();
  }
});

// node_modules/undici/lib/mock/mock-errors.js
var require_mock_errors = __commonJS({
  "node_modules/undici/lib/mock/mock-errors.js"(exports2, module2) {
    "use strict";
    var { UndiciError } = require_errors();
    var MockNotMatchedError = class _MockNotMatchedError extends UndiciError {
      constructor(message) {
        super(message);
        Error.captureStackTrace(this, _MockNotMatchedError);
        this.name = "MockNotMatchedError";
        this.message = message || "The request does not match any registered mock dispatches";
        this.code = "UND_MOCK_ERR_MOCK_NOT_MATCHED";
      }
    };
    module2.exports = {
      MockNotMatchedError
    };
  }
});

// node_modules/undici/lib/mock/mock-symbols.js
var require_mock_symbols = __commonJS({
  "node_modules/undici/lib/mock/mock-symbols.js"(exports2, module2) {
    "use strict";
    module2.exports = {
      kAgent: Symbol("agent"),
      kOptions: Symbol("options"),
      kFactory: Symbol("factory"),
      kDispatches: Symbol("dispatches"),
      kDispatchKey: Symbol("dispatch key"),
      kDefaultHeaders: Symbol("default headers"),
      kDefaultTrailers: Symbol("default trailers"),
      kContentLength: Symbol("content length"),
      kMockAgent: Symbol("mock agent"),
      kMockAgentSet: Symbol("mock agent set"),
      kMockAgentGet: Symbol("mock agent get"),
      kMockDispatch: Symbol("mock dispatch"),
      kClose: Symbol("close"),
      kOriginalClose: Symbol("original agent close"),
      kOrigin: Symbol("origin"),
      kIsMockActive: Symbol("is mock active"),
      kNetConnect: Symbol("net connect"),
      kGetNetConnect: Symbol("get net connect"),
      kConnected: Symbol("connected")
    };
  }
});

// node_modules/undici/lib/mock/mock-utils.js
var require_mock_utils = __commonJS({
  "node_modules/undici/lib/mock/mock-utils.js"(exports2, module2) {
    "use strict";
    var { MockNotMatchedError } = require_mock_errors();
    var {
      kDispatches,
      kMockAgent,
      kOriginalDispatch,
      kOrigin,
      kGetNetConnect
    } = require_mock_symbols();
    var { buildURL, nop } = require_util();
    var { STATUS_CODES } = require("http");
    var {
      types: {
        isPromise
      }
    } = require("util");
    function matchValue(match, value) {
      if (typeof match === "string") {
        return match === value;
      }
      if (match instanceof RegExp) {
        return match.test(value);
      }
      if (typeof match === "function") {
        return match(value) === true;
      }
      return false;
    }
    function lowerCaseEntries(headers) {
      return Object.fromEntries(
        Object.entries(headers).map(([headerName, headerValue]) => {
          return [headerName.toLocaleLowerCase(), headerValue];
        })
      );
    }
    function getHeaderByName(headers, key) {
      if (Array.isArray(headers)) {
        for (let i = 0; i < headers.length; i += 2) {
          if (headers[i].toLocaleLowerCase() === key.toLocaleLowerCase()) {
            return headers[i + 1];
          }
        }
        return void 0;
      } else if (typeof headers.get === "function") {
        return headers.get(key);
      } else {
        return lowerCaseEntries(headers)[key.toLocaleLowerCase()];
      }
    }
    function buildHeadersFromArray(headers) {
      const clone = headers.slice();
      const entries = [];
      for (let index = 0; index < clone.length; index += 2) {
        entries.push([clone[index], clone[index + 1]]);
      }
      return Object.fromEntries(entries);
    }
    function matchHeaders(mockDispatch2, headers) {
      if (typeof mockDispatch2.headers === "function") {
        if (Array.isArray(headers)) {
          headers = buildHeadersFromArray(headers);
        }
        return mockDispatch2.headers(headers ? lowerCaseEntries(headers) : {});
      }
      if (typeof mockDispatch2.headers === "undefined") {
        return true;
      }
      if (typeof headers !== "object" || typeof mockDispatch2.headers !== "object") {
        return false;
      }
      for (const [matchHeaderName, matchHeaderValue] of Object.entries(mockDispatch2.headers)) {
        const headerValue = getHeaderByName(headers, matchHeaderName);
        if (!matchValue(matchHeaderValue, headerValue)) {
          return false;
        }
      }
      return true;
    }
    function safeUrl(path) {
      if (typeof path !== "string") {
        return path;
      }
      const pathSegments = path.split("?");
      if (pathSegments.length !== 2) {
        return path;
      }
      const qp = new URLSearchParams(pathSegments.pop());
      qp.sort();
      return [...pathSegments, qp.toString()].join("?");
    }
    function matchKey(mockDispatch2, { path, method, body, headers }) {
      const pathMatch = matchValue(mockDispatch2.path, path);
      const methodMatch = matchValue(mockDispatch2.method, method);
      const bodyMatch = typeof mockDispatch2.body !== "undefined" ? matchValue(mockDispatch2.body, body) : true;
      const headersMatch = matchHeaders(mockDispatch2, headers);
      return pathMatch && methodMatch && bodyMatch && headersMatch;
    }
    function getResponseData2(data) {
      if (Buffer.isBuffer(data)) {
        return data;
      } else if (typeof data === "object") {
        return JSON.stringify(data);
      } else {
        return data.toString();
      }
    }
    function getMockDispatch(mockDispatches, key) {
      const basePath = key.query ? buildURL(key.path, key.query) : key.path;
      const resolvedPath = typeof basePath === "string" ? safeUrl(basePath) : basePath;
      let matchedMockDispatches = mockDispatches.filter(({ consumed }) => !consumed).filter(({ path }) => matchValue(safeUrl(path), resolvedPath));
      if (matchedMockDispatches.length === 0) {
        throw new MockNotMatchedError(`Mock dispatch not matched for path '${resolvedPath}'`);
      }
      matchedMockDispatches = matchedMockDispatches.filter(({ method }) => matchValue(method, key.method));
      if (matchedMockDispatches.length === 0) {
        throw new MockNotMatchedError(`Mock dispatch not matched for method '${key.method}'`);
      }
      matchedMockDispatches = matchedMockDispatches.filter(({ body }) => typeof body !== "undefined" ? matchValue(body, key.body) : true);
      if (matchedMockDispatches.length === 0) {
        throw new MockNotMatchedError(`Mock dispatch not matched for body '${key.body}'`);
      }
      matchedMockDispatches = matchedMockDispatches.filter((mockDispatch2) => matchHeaders(mockDispatch2, key.headers));
      if (matchedMockDispatches.length === 0) {
        throw new MockNotMatchedError(`Mock dispatch not matched for headers '${typeof key.headers === "object" ? JSON.stringify(key.headers) : key.headers}'`);
      }
      return matchedMockDispatches[0];
    }
    function addMockDispatch(mockDispatches, key, data) {
      const baseData = { timesInvoked: 0, times: 1, persist: false, consumed: false };
      const replyData = typeof data === "function" ? { callback: data } : { ...data };
      const newMockDispatch = { ...baseData, ...key, pending: true, data: { error: null, ...replyData } };
      mockDispatches.push(newMockDispatch);
      return newMockDispatch;
    }
    function deleteMockDispatch(mockDispatches, key) {
      const index = mockDispatches.findIndex((dispatch) => {
        if (!dispatch.consumed) {
          return false;
        }
        return matchKey(dispatch, key);
      });
      if (index !== -1) {
        mockDispatches.splice(index, 1);
      }
    }
    function buildKey(opts) {
      const { path, method, body, headers, query } = opts;
      return {
        path,
        method,
        body,
        headers,
        query
      };
    }
    function generateKeyValues(data) {
      return Object.entries(data).reduce((keyValuePairs, [key, value]) => [
        ...keyValuePairs,
        Buffer.from(`${key}`),
        Array.isArray(value) ? value.map((x) => Buffer.from(`${x}`)) : Buffer.from(`${value}`)
      ], []);
    }
    function getStatusText(statusCode) {
      return STATUS_CODES[statusCode] || "unknown";
    }
    async function getResponse(body) {
      const buffers = [];
      for await (const data of body) {
        buffers.push(data);
      }
      return Buffer.concat(buffers).toString("utf8");
    }
    function mockDispatch(opts, handler2) {
      const key = buildKey(opts);
      const mockDispatch2 = getMockDispatch(this[kDispatches], key);
      mockDispatch2.timesInvoked++;
      if (mockDispatch2.data.callback) {
        mockDispatch2.data = { ...mockDispatch2.data, ...mockDispatch2.data.callback(opts) };
      }
      const { data: { statusCode, data, headers, trailers, error }, delay: delay2, persist } = mockDispatch2;
      const { timesInvoked, times } = mockDispatch2;
      mockDispatch2.consumed = !persist && timesInvoked >= times;
      mockDispatch2.pending = timesInvoked < times;
      if (error !== null) {
        deleteMockDispatch(this[kDispatches], key);
        handler2.onError(error);
        return true;
      }
      if (typeof delay2 === "number" && delay2 > 0) {
        setTimeout(() => {
          handleReply(this[kDispatches]);
        }, delay2);
      } else {
        handleReply(this[kDispatches]);
      }
      function handleReply(mockDispatches, _data = data) {
        const optsHeaders = Array.isArray(opts.headers) ? buildHeadersFromArray(opts.headers) : opts.headers;
        const body = typeof _data === "function" ? _data({ ...opts, headers: optsHeaders }) : _data;
        if (isPromise(body)) {
          body.then((newData) => handleReply(mockDispatches, newData));
          return;
        }
        const responseData = getResponseData2(body);
        const responseHeaders = generateKeyValues(headers);
        const responseTrailers = generateKeyValues(trailers);
        handler2.abort = nop;
        handler2.onHeaders(statusCode, responseHeaders, resume, getStatusText(statusCode));
        handler2.onData(Buffer.from(responseData));
        handler2.onComplete(responseTrailers);
        deleteMockDispatch(mockDispatches, key);
      }
      function resume() {
      }
      return true;
    }
    function buildMockDispatch() {
      const agent = this[kMockAgent];
      const origin = this[kOrigin];
      const originalDispatch = this[kOriginalDispatch];
      return function dispatch(opts, handler2) {
        if (agent.isMockActive) {
          try {
            mockDispatch.call(this, opts, handler2);
          } catch (error) {
            if (error instanceof MockNotMatchedError) {
              const netConnect = agent[kGetNetConnect]();
              if (netConnect === false) {
                throw new MockNotMatchedError(`${error.message}: subsequent request to origin ${origin} was not allowed (net.connect disabled)`);
              }
              if (checkNetConnect(netConnect, origin)) {
                originalDispatch.call(this, opts, handler2);
              } else {
                throw new MockNotMatchedError(`${error.message}: subsequent request to origin ${origin} was not allowed (net.connect is not enabled for this origin)`);
              }
            } else {
              throw error;
            }
          }
        } else {
          originalDispatch.call(this, opts, handler2);
        }
      };
    }
    function checkNetConnect(netConnect, origin) {
      const url = new URL(origin);
      if (netConnect === true) {
        return true;
      } else if (Array.isArray(netConnect) && netConnect.some((matcher) => matchValue(matcher, url.host))) {
        return true;
      }
      return false;
    }
    function buildMockOptions(opts) {
      if (opts) {
        const { agent, ...mockOptions } = opts;
        return mockOptions;
      }
    }
    module2.exports = {
      getResponseData: getResponseData2,
      getMockDispatch,
      addMockDispatch,
      deleteMockDispatch,
      buildKey,
      generateKeyValues,
      matchValue,
      getResponse,
      getStatusText,
      mockDispatch,
      buildMockDispatch,
      checkNetConnect,
      buildMockOptions,
      getHeaderByName
    };
  }
});

// node_modules/undici/lib/mock/mock-interceptor.js
var require_mock_interceptor = __commonJS({
  "node_modules/undici/lib/mock/mock-interceptor.js"(exports2, module2) {
    "use strict";
    var { getResponseData: getResponseData2, buildKey, addMockDispatch } = require_mock_utils();
    var {
      kDispatches,
      kDispatchKey,
      kDefaultHeaders,
      kDefaultTrailers,
      kContentLength,
      kMockDispatch
    } = require_mock_symbols();
    var { InvalidArgumentError } = require_errors();
    var { buildURL } = require_util();
    var MockScope = class {
      constructor(mockDispatch) {
        this[kMockDispatch] = mockDispatch;
      }
      /**
       * Delay a reply by a set amount in ms.
       */
      delay(waitInMs) {
        if (typeof waitInMs !== "number" || !Number.isInteger(waitInMs) || waitInMs <= 0) {
          throw new InvalidArgumentError("waitInMs must be a valid integer > 0");
        }
        this[kMockDispatch].delay = waitInMs;
        return this;
      }
      /**
       * For a defined reply, never mark as consumed.
       */
      persist() {
        this[kMockDispatch].persist = true;
        return this;
      }
      /**
       * Allow one to define a reply for a set amount of matching requests.
       */
      times(repeatTimes) {
        if (typeof repeatTimes !== "number" || !Number.isInteger(repeatTimes) || repeatTimes <= 0) {
          throw new InvalidArgumentError("repeatTimes must be a valid integer > 0");
        }
        this[kMockDispatch].times = repeatTimes;
        return this;
      }
    };
    var MockInterceptor = class {
      constructor(opts, mockDispatches) {
        if (typeof opts !== "object") {
          throw new InvalidArgumentError("opts must be an object");
        }
        if (typeof opts.path === "undefined") {
          throw new InvalidArgumentError("opts.path must be defined");
        }
        if (typeof opts.method === "undefined") {
          opts.method = "GET";
        }
        if (typeof opts.path === "string") {
          if (opts.query) {
            opts.path = buildURL(opts.path, opts.query);
          } else {
            const parsedURL = new URL(opts.path, "data://");
            opts.path = parsedURL.pathname + parsedURL.search;
          }
        }
        if (typeof opts.method === "string") {
          opts.method = opts.method.toUpperCase();
        }
        this[kDispatchKey] = buildKey(opts);
        this[kDispatches] = mockDispatches;
        this[kDefaultHeaders] = {};
        this[kDefaultTrailers] = {};
        this[kContentLength] = false;
      }
      createMockScopeDispatchData(statusCode, data, responseOptions = {}) {
        const responseData = getResponseData2(data);
        const contentLength = this[kContentLength] ? { "content-length": responseData.length } : {};
        const headers = { ...this[kDefaultHeaders], ...contentLength, ...responseOptions.headers };
        const trailers = { ...this[kDefaultTrailers], ...responseOptions.trailers };
        return { statusCode, data, headers, trailers };
      }
      validateReplyParameters(statusCode, data, responseOptions) {
        if (typeof statusCode === "undefined") {
          throw new InvalidArgumentError("statusCode must be defined");
        }
        if (typeof data === "undefined") {
          throw new InvalidArgumentError("data must be defined");
        }
        if (typeof responseOptions !== "object") {
          throw new InvalidArgumentError("responseOptions must be an object");
        }
      }
      /**
       * Mock an undici request with a defined reply.
       */
      reply(replyData) {
        if (typeof replyData === "function") {
          const wrappedDefaultsCallback = (opts) => {
            const resolvedData = replyData(opts);
            if (typeof resolvedData !== "object") {
              throw new InvalidArgumentError("reply options callback must return an object");
            }
            const { statusCode: statusCode2, data: data2 = "", responseOptions: responseOptions2 = {} } = resolvedData;
            this.validateReplyParameters(statusCode2, data2, responseOptions2);
            return {
              ...this.createMockScopeDispatchData(statusCode2, data2, responseOptions2)
            };
          };
          const newMockDispatch2 = addMockDispatch(this[kDispatches], this[kDispatchKey], wrappedDefaultsCallback);
          return new MockScope(newMockDispatch2);
        }
        const [statusCode, data = "", responseOptions = {}] = [...arguments];
        this.validateReplyParameters(statusCode, data, responseOptions);
        const dispatchData = this.createMockScopeDispatchData(statusCode, data, responseOptions);
        const newMockDispatch = addMockDispatch(this[kDispatches], this[kDispatchKey], dispatchData);
        return new MockScope(newMockDispatch);
      }
      /**
       * Mock an undici request with a defined error.
       */
      replyWithError(error) {
        if (typeof error === "undefined") {
          throw new InvalidArgumentError("error must be defined");
        }
        const newMockDispatch = addMockDispatch(this[kDispatches], this[kDispatchKey], { error });
        return new MockScope(newMockDispatch);
      }
      /**
       * Set default reply headers on the interceptor for subsequent replies
       */
      defaultReplyHeaders(headers) {
        if (typeof headers === "undefined") {
          throw new InvalidArgumentError("headers must be defined");
        }
        this[kDefaultHeaders] = headers;
        return this;
      }
      /**
       * Set default reply trailers on the interceptor for subsequent replies
       */
      defaultReplyTrailers(trailers) {
        if (typeof trailers === "undefined") {
          throw new InvalidArgumentError("trailers must be defined");
        }
        this[kDefaultTrailers] = trailers;
        return this;
      }
      /**
       * Set reply content length header for replies on the interceptor
       */
      replyContentLength() {
        this[kContentLength] = true;
        return this;
      }
    };
    module2.exports.MockInterceptor = MockInterceptor;
    module2.exports.MockScope = MockScope;
  }
});

// node_modules/undici/lib/mock/mock-client.js
var require_mock_client = __commonJS({
  "node_modules/undici/lib/mock/mock-client.js"(exports2, module2) {
    "use strict";
    var { promisify } = require("util");
    var Client = require_client();
    var { buildMockDispatch } = require_mock_utils();
    var {
      kDispatches,
      kMockAgent,
      kClose,
      kOriginalClose,
      kOrigin,
      kOriginalDispatch,
      kConnected
    } = require_mock_symbols();
    var { MockInterceptor } = require_mock_interceptor();
    var Symbols = require_symbols();
    var { InvalidArgumentError } = require_errors();
    var MockClient = class extends Client {
      constructor(origin, opts) {
        super(origin, opts);
        if (!opts || !opts.agent || typeof opts.agent.dispatch !== "function") {
          throw new InvalidArgumentError("Argument opts.agent must implement Agent");
        }
        this[kMockAgent] = opts.agent;
        this[kOrigin] = origin;
        this[kDispatches] = [];
        this[kConnected] = 1;
        this[kOriginalDispatch] = this.dispatch;
        this[kOriginalClose] = this.close.bind(this);
        this.dispatch = buildMockDispatch.call(this);
        this.close = this[kClose];
      }
      get [Symbols.kConnected]() {
        return this[kConnected];
      }
      /**
       * Sets up the base interceptor for mocking replies from undici.
       */
      intercept(opts) {
        return new MockInterceptor(opts, this[kDispatches]);
      }
      async [kClose]() {
        await promisify(this[kOriginalClose])();
        this[kConnected] = 0;
        this[kMockAgent][Symbols.kClients].delete(this[kOrigin]);
      }
    };
    module2.exports = MockClient;
  }
});

// node_modules/undici/lib/mock/mock-pool.js
var require_mock_pool = __commonJS({
  "node_modules/undici/lib/mock/mock-pool.js"(exports2, module2) {
    "use strict";
    var { promisify } = require("util");
    var Pool = require_pool();
    var { buildMockDispatch } = require_mock_utils();
    var {
      kDispatches,
      kMockAgent,
      kClose,
      kOriginalClose,
      kOrigin,
      kOriginalDispatch,
      kConnected
    } = require_mock_symbols();
    var { MockInterceptor } = require_mock_interceptor();
    var Symbols = require_symbols();
    var { InvalidArgumentError } = require_errors();
    var MockPool = class extends Pool {
      constructor(origin, opts) {
        super(origin, opts);
        if (!opts || !opts.agent || typeof opts.agent.dispatch !== "function") {
          throw new InvalidArgumentError("Argument opts.agent must implement Agent");
        }
        this[kMockAgent] = opts.agent;
        this[kOrigin] = origin;
        this[kDispatches] = [];
        this[kConnected] = 1;
        this[kOriginalDispatch] = this.dispatch;
        this[kOriginalClose] = this.close.bind(this);
        this.dispatch = buildMockDispatch.call(this);
        this.close = this[kClose];
      }
      get [Symbols.kConnected]() {
        return this[kConnected];
      }
      /**
       * Sets up the base interceptor for mocking replies from undici.
       */
      intercept(opts) {
        return new MockInterceptor(opts, this[kDispatches]);
      }
      async [kClose]() {
        await promisify(this[kOriginalClose])();
        this[kConnected] = 0;
        this[kMockAgent][Symbols.kClients].delete(this[kOrigin]);
      }
    };
    module2.exports = MockPool;
  }
});

// node_modules/undici/lib/mock/pluralizer.js
var require_pluralizer = __commonJS({
  "node_modules/undici/lib/mock/pluralizer.js"(exports2, module2) {
    "use strict";
    var singulars = {
      pronoun: "it",
      is: "is",
      was: "was",
      this: "this"
    };
    var plurals = {
      pronoun: "they",
      is: "are",
      was: "were",
      this: "these"
    };
    module2.exports = class Pluralizer {
      constructor(singular, plural) {
        this.singular = singular;
        this.plural = plural;
      }
      pluralize(count) {
        const one = count === 1;
        const keys = one ? singulars : plurals;
        const noun = one ? this.singular : this.plural;
        return { ...keys, count, noun };
      }
    };
  }
});

// node_modules/undici/lib/mock/pending-interceptors-formatter.js
var require_pending_interceptors_formatter = __commonJS({
  "node_modules/undici/lib/mock/pending-interceptors-formatter.js"(exports2, module2) {
    "use strict";
    var { Transform } = require("stream");
    var { Console } = require("console");
    module2.exports = class PendingInterceptorsFormatter {
      constructor({ disableColors } = {}) {
        this.transform = new Transform({
          transform(chunk, _enc, cb) {
            cb(null, chunk);
          }
        });
        this.logger = new Console({
          stdout: this.transform,
          inspectOptions: {
            colors: !disableColors && !process.env.CI
          }
        });
      }
      format(pendingInterceptors) {
        const withPrettyHeaders = pendingInterceptors.map(
          ({ method, path, data: { statusCode }, persist, times, timesInvoked, origin }) => ({
            Method: method,
            Origin: origin,
            Path: path,
            "Status code": statusCode,
            Persistent: persist ? "\u2705" : "\u274C",
            Invocations: timesInvoked,
            Remaining: persist ? Infinity : times - timesInvoked
          })
        );
        this.logger.table(withPrettyHeaders);
        return this.transform.read().toString();
      }
    };
  }
});

// node_modules/undici/lib/mock/mock-agent.js
var require_mock_agent = __commonJS({
  "node_modules/undici/lib/mock/mock-agent.js"(exports2, module2) {
    "use strict";
    var { kClients } = require_symbols();
    var Agent = require_agent();
    var {
      kAgent,
      kMockAgentSet,
      kMockAgentGet,
      kDispatches,
      kIsMockActive,
      kNetConnect,
      kGetNetConnect,
      kOptions,
      kFactory
    } = require_mock_symbols();
    var MockClient = require_mock_client();
    var MockPool = require_mock_pool();
    var { matchValue, buildMockOptions } = require_mock_utils();
    var { InvalidArgumentError, UndiciError } = require_errors();
    var Dispatcher = require_dispatcher();
    var Pluralizer = require_pluralizer();
    var PendingInterceptorsFormatter = require_pending_interceptors_formatter();
    var FakeWeakRef = class {
      constructor(value) {
        this.value = value;
      }
      deref() {
        return this.value;
      }
    };
    var MockAgent = class extends Dispatcher {
      constructor(opts) {
        super(opts);
        this[kNetConnect] = true;
        this[kIsMockActive] = true;
        if (opts && opts.agent && typeof opts.agent.dispatch !== "function") {
          throw new InvalidArgumentError("Argument opts.agent must implement Agent");
        }
        const agent = opts && opts.agent ? opts.agent : new Agent(opts);
        this[kAgent] = agent;
        this[kClients] = agent[kClients];
        this[kOptions] = buildMockOptions(opts);
      }
      get(origin) {
        let dispatcher = this[kMockAgentGet](origin);
        if (!dispatcher) {
          dispatcher = this[kFactory](origin);
          this[kMockAgentSet](origin, dispatcher);
        }
        return dispatcher;
      }
      dispatch(opts, handler2) {
        this.get(opts.origin);
        return this[kAgent].dispatch(opts, handler2);
      }
      async close() {
        await this[kAgent].close();
        this[kClients].clear();
      }
      deactivate() {
        this[kIsMockActive] = false;
      }
      activate() {
        this[kIsMockActive] = true;
      }
      enableNetConnect(matcher) {
        if (typeof matcher === "string" || typeof matcher === "function" || matcher instanceof RegExp) {
          if (Array.isArray(this[kNetConnect])) {
            this[kNetConnect].push(matcher);
          } else {
            this[kNetConnect] = [matcher];
          }
        } else if (typeof matcher === "undefined") {
          this[kNetConnect] = true;
        } else {
          throw new InvalidArgumentError("Unsupported matcher. Must be one of String|Function|RegExp.");
        }
      }
      disableNetConnect() {
        this[kNetConnect] = false;
      }
      // This is required to bypass issues caused by using global symbols - see:
      // https://github.com/nodejs/undici/issues/1447
      get isMockActive() {
        return this[kIsMockActive];
      }
      [kMockAgentSet](origin, dispatcher) {
        this[kClients].set(origin, new FakeWeakRef(dispatcher));
      }
      [kFactory](origin) {
        const mockOptions = Object.assign({ agent: this }, this[kOptions]);
        return this[kOptions] && this[kOptions].connections === 1 ? new MockClient(origin, mockOptions) : new MockPool(origin, mockOptions);
      }
      [kMockAgentGet](origin) {
        const ref = this[kClients].get(origin);
        if (ref) {
          return ref.deref();
        }
        if (typeof origin !== "string") {
          const dispatcher = this[kFactory]("http://localhost:9999");
          this[kMockAgentSet](origin, dispatcher);
          return dispatcher;
        }
        for (const [keyMatcher, nonExplicitRef] of Array.from(this[kClients])) {
          const nonExplicitDispatcher = nonExplicitRef.deref();
          if (nonExplicitDispatcher && typeof keyMatcher !== "string" && matchValue(keyMatcher, origin)) {
            const dispatcher = this[kFactory](origin);
            this[kMockAgentSet](origin, dispatcher);
            dispatcher[kDispatches] = nonExplicitDispatcher[kDispatches];
            return dispatcher;
          }
        }
      }
      [kGetNetConnect]() {
        return this[kNetConnect];
      }
      pendingInterceptors() {
        const mockAgentClients = this[kClients];
        return Array.from(mockAgentClients.entries()).flatMap(([origin, scope]) => scope.deref()[kDispatches].map((dispatch) => ({ ...dispatch, origin }))).filter(({ pending }) => pending);
      }
      assertNoPendingInterceptors({ pendingInterceptorsFormatter = new PendingInterceptorsFormatter() } = {}) {
        const pending = this.pendingInterceptors();
        if (pending.length === 0) {
          return;
        }
        const pluralizer = new Pluralizer("interceptor", "interceptors").pluralize(pending.length);
        throw new UndiciError(`
${pluralizer.count} ${pluralizer.noun} ${pluralizer.is} pending:

${pendingInterceptorsFormatter.format(pending)}
`.trim());
      }
    };
    module2.exports = MockAgent;
  }
});

// node_modules/undici/lib/proxy-agent.js
var require_proxy_agent = __commonJS({
  "node_modules/undici/lib/proxy-agent.js"(exports2, module2) {
    "use strict";
    var { kProxy, kClose, kDestroy, kInterceptors } = require_symbols();
    var { URL: URL2 } = require("url");
    var Agent = require_agent();
    var Pool = require_pool();
    var DispatcherBase = require_dispatcher_base();
    var { InvalidArgumentError, RequestAbortedError } = require_errors();
    var buildConnector = require_connect();
    var kAgent = Symbol("proxy agent");
    var kClient = Symbol("proxy client");
    var kProxyHeaders = Symbol("proxy headers");
    var kRequestTls = Symbol("request tls settings");
    var kProxyTls = Symbol("proxy tls settings");
    var kConnectEndpoint = Symbol("connect endpoint function");
    function defaultProtocolPort(protocol) {
      return protocol === "https:" ? 443 : 80;
    }
    function buildProxyOptions(opts) {
      if (typeof opts === "string") {
        opts = { uri: opts };
      }
      if (!opts || !opts.uri) {
        throw new InvalidArgumentError("Proxy opts.uri is mandatory");
      }
      return {
        uri: opts.uri,
        protocol: opts.protocol || "https"
      };
    }
    function defaultFactory(origin, opts) {
      return new Pool(origin, opts);
    }
    var ProxyAgent = class extends DispatcherBase {
      constructor(opts) {
        super(opts);
        this[kProxy] = buildProxyOptions(opts);
        this[kAgent] = new Agent(opts);
        this[kInterceptors] = opts.interceptors && opts.interceptors.ProxyAgent && Array.isArray(opts.interceptors.ProxyAgent) ? opts.interceptors.ProxyAgent : [];
        if (typeof opts === "string") {
          opts = { uri: opts };
        }
        if (!opts || !opts.uri) {
          throw new InvalidArgumentError("Proxy opts.uri is mandatory");
        }
        const { clientFactory = defaultFactory } = opts;
        if (typeof clientFactory !== "function") {
          throw new InvalidArgumentError("Proxy opts.clientFactory must be a function.");
        }
        this[kRequestTls] = opts.requestTls;
        this[kProxyTls] = opts.proxyTls;
        this[kProxyHeaders] = opts.headers || {};
        const resolvedUrl = new URL2(opts.uri);
        const { origin, port, host, username, password } = resolvedUrl;
        if (opts.auth && opts.token) {
          throw new InvalidArgumentError("opts.auth cannot be used in combination with opts.token");
        } else if (opts.auth) {
          this[kProxyHeaders]["proxy-authorization"] = `Basic ${opts.auth}`;
        } else if (opts.token) {
          this[kProxyHeaders]["proxy-authorization"] = opts.token;
        } else if (username && password) {
          this[kProxyHeaders]["proxy-authorization"] = `Basic ${Buffer.from(`${decodeURIComponent(username)}:${decodeURIComponent(password)}`).toString("base64")}`;
        }
        const connect = buildConnector({ ...opts.proxyTls });
        this[kConnectEndpoint] = buildConnector({ ...opts.requestTls });
        this[kClient] = clientFactory(resolvedUrl, { connect });
        this[kAgent] = new Agent({
          ...opts,
          connect: async (opts2, callback) => {
            let requestedHost = opts2.host;
            if (!opts2.port) {
              requestedHost += `:${defaultProtocolPort(opts2.protocol)}`;
            }
            try {
              const { socket, statusCode } = await this[kClient].connect({
                origin,
                port,
                path: requestedHost,
                signal: opts2.signal,
                headers: {
                  ...this[kProxyHeaders],
                  host
                }
              });
              if (statusCode !== 200) {
                socket.on("error", () => {
                }).destroy();
                callback(new RequestAbortedError(`Proxy response (${statusCode}) !== 200 when HTTP Tunneling`));
              }
              if (opts2.protocol !== "https:") {
                callback(null, socket);
                return;
              }
              let servername;
              if (this[kRequestTls]) {
                servername = this[kRequestTls].servername;
              } else {
                servername = opts2.servername;
              }
              this[kConnectEndpoint]({ ...opts2, servername, httpSocket: socket }, callback);
            } catch (err) {
              callback(err);
            }
          }
        });
      }
      dispatch(opts, handler2) {
        const { host } = new URL2(opts.origin);
        const headers = buildHeaders(opts.headers);
        throwIfProxyAuthIsSent(headers);
        return this[kAgent].dispatch(
          {
            ...opts,
            headers: {
              ...headers,
              host
            }
          },
          handler2
        );
      }
      async [kClose]() {
        await this[kAgent].close();
        await this[kClient].close();
      }
      async [kDestroy]() {
        await this[kAgent].destroy();
        await this[kClient].destroy();
      }
    };
    function buildHeaders(headers) {
      if (Array.isArray(headers)) {
        const headersPair = {};
        for (let i = 0; i < headers.length; i += 2) {
          headersPair[headers[i]] = headers[i + 1];
        }
        return headersPair;
      }
      return headers;
    }
    function throwIfProxyAuthIsSent(headers) {
      const existProxyAuth = headers && Object.keys(headers).find((key) => key.toLowerCase() === "proxy-authorization");
      if (existProxyAuth) {
        throw new InvalidArgumentError("Proxy-Authorization should be sent in ProxyAgent constructor");
      }
    }
    module2.exports = ProxyAgent;
  }
});

// node_modules/undici/lib/handler/RetryHandler.js
var require_RetryHandler = __commonJS({
  "node_modules/undici/lib/handler/RetryHandler.js"(exports2, module2) {
    var assert = require("assert");
    var { kRetryHandlerDefaultRetry } = require_symbols();
    var { RequestRetryError } = require_errors();
    var { isDisturbed, parseHeaders, parseRangeHeader } = require_util();
    function calculateRetryAfterHeader(retryAfter) {
      const current = Date.now();
      const diff = new Date(retryAfter).getTime() - current;
      return diff;
    }
    var RetryHandler = class _RetryHandler {
      constructor(opts, handlers) {
        const { retryOptions, ...dispatchOpts } = opts;
        const {
          // Retry scoped
          retry: retryFn,
          maxRetries,
          maxTimeout,
          minTimeout,
          timeoutFactor,
          // Response scoped
          methods,
          errorCodes,
          retryAfter,
          statusCodes
        } = retryOptions ?? {};
        this.dispatch = handlers.dispatch;
        this.handler = handlers.handler;
        this.opts = dispatchOpts;
        this.abort = null;
        this.aborted = false;
        this.retryOpts = {
          retry: retryFn ?? _RetryHandler[kRetryHandlerDefaultRetry],
          retryAfter: retryAfter ?? true,
          maxTimeout: maxTimeout ?? 30 * 1e3,
          // 30s,
          timeout: minTimeout ?? 500,
          // .5s
          timeoutFactor: timeoutFactor ?? 2,
          maxRetries: maxRetries ?? 5,
          // What errors we should retry
          methods: methods ?? ["GET", "HEAD", "OPTIONS", "PUT", "DELETE", "TRACE"],
          // Indicates which errors to retry
          statusCodes: statusCodes ?? [500, 502, 503, 504, 429],
          // List of errors to retry
          errorCodes: errorCodes ?? [
            "ECONNRESET",
            "ECONNREFUSED",
            "ENOTFOUND",
            "ENETDOWN",
            "ENETUNREACH",
            "EHOSTDOWN",
            "EHOSTUNREACH",
            "EPIPE"
          ]
        };
        this.retryCount = 0;
        this.start = 0;
        this.end = null;
        this.etag = null;
        this.resume = null;
        this.handler.onConnect((reason) => {
          this.aborted = true;
          if (this.abort) {
            this.abort(reason);
          } else {
            this.reason = reason;
          }
        });
      }
      onRequestSent() {
        if (this.handler.onRequestSent) {
          this.handler.onRequestSent();
        }
      }
      onUpgrade(statusCode, headers, socket) {
        if (this.handler.onUpgrade) {
          this.handler.onUpgrade(statusCode, headers, socket);
        }
      }
      onConnect(abort) {
        if (this.aborted) {
          abort(this.reason);
        } else {
          this.abort = abort;
        }
      }
      onBodySent(chunk) {
        if (this.handler.onBodySent) return this.handler.onBodySent(chunk);
      }
      static [kRetryHandlerDefaultRetry](err, { state, opts }, cb) {
        const { statusCode, code, headers } = err;
        const { method, retryOptions } = opts;
        const {
          maxRetries,
          timeout,
          maxTimeout,
          timeoutFactor,
          statusCodes,
          errorCodes,
          methods
        } = retryOptions;
        let { counter, currentTimeout } = state;
        currentTimeout = currentTimeout != null && currentTimeout > 0 ? currentTimeout : timeout;
        if (code && code !== "UND_ERR_REQ_RETRY" && code !== "UND_ERR_SOCKET" && !errorCodes.includes(code)) {
          cb(err);
          return;
        }
        if (Array.isArray(methods) && !methods.includes(method)) {
          cb(err);
          return;
        }
        if (statusCode != null && Array.isArray(statusCodes) && !statusCodes.includes(statusCode)) {
          cb(err);
          return;
        }
        if (counter > maxRetries) {
          cb(err);
          return;
        }
        let retryAfterHeader = headers != null && headers["retry-after"];
        if (retryAfterHeader) {
          retryAfterHeader = Number(retryAfterHeader);
          retryAfterHeader = isNaN(retryAfterHeader) ? calculateRetryAfterHeader(retryAfterHeader) : retryAfterHeader * 1e3;
        }
        const retryTimeout = retryAfterHeader > 0 ? Math.min(retryAfterHeader, maxTimeout) : Math.min(currentTimeout * timeoutFactor ** counter, maxTimeout);
        state.currentTimeout = retryTimeout;
        setTimeout(() => cb(null), retryTimeout);
      }
      onHeaders(statusCode, rawHeaders, resume, statusMessage) {
        const headers = parseHeaders(rawHeaders);
        this.retryCount += 1;
        if (statusCode >= 300) {
          this.abort(
            new RequestRetryError("Request failed", statusCode, {
              headers,
              count: this.retryCount
            })
          );
          return false;
        }
        if (this.resume != null) {
          this.resume = null;
          if (statusCode !== 206) {
            return true;
          }
          const contentRange = parseRangeHeader(headers["content-range"]);
          if (!contentRange) {
            this.abort(
              new RequestRetryError("Content-Range mismatch", statusCode, {
                headers,
                count: this.retryCount
              })
            );
            return false;
          }
          if (this.etag != null && this.etag !== headers.etag) {
            this.abort(
              new RequestRetryError("ETag mismatch", statusCode, {
                headers,
                count: this.retryCount
              })
            );
            return false;
          }
          const { start, size, end = size } = contentRange;
          assert(this.start === start, "content-range mismatch");
          assert(this.end == null || this.end === end, "content-range mismatch");
          this.resume = resume;
          return true;
        }
        if (this.end == null) {
          if (statusCode === 206) {
            const range = parseRangeHeader(headers["content-range"]);
            if (range == null) {
              return this.handler.onHeaders(
                statusCode,
                rawHeaders,
                resume,
                statusMessage
              );
            }
            const { start, size, end = size } = range;
            assert(
              start != null && Number.isFinite(start) && this.start !== start,
              "content-range mismatch"
            );
            assert(Number.isFinite(start));
            assert(
              end != null && Number.isFinite(end) && this.end !== end,
              "invalid content-length"
            );
            this.start = start;
            this.end = end;
          }
          if (this.end == null) {
            const contentLength = headers["content-length"];
            this.end = contentLength != null ? Number(contentLength) : null;
          }
          assert(Number.isFinite(this.start));
          assert(
            this.end == null || Number.isFinite(this.end),
            "invalid content-length"
          );
          this.resume = resume;
          this.etag = headers.etag != null ? headers.etag : null;
          return this.handler.onHeaders(
            statusCode,
            rawHeaders,
            resume,
            statusMessage
          );
        }
        const err = new RequestRetryError("Request failed", statusCode, {
          headers,
          count: this.retryCount
        });
        this.abort(err);
        return false;
      }
      onData(chunk) {
        this.start += chunk.length;
        return this.handler.onData(chunk);
      }
      onComplete(rawTrailers) {
        this.retryCount = 0;
        return this.handler.onComplete(rawTrailers);
      }
      onError(err) {
        if (this.aborted || isDisturbed(this.opts.body)) {
          return this.handler.onError(err);
        }
        this.retryOpts.retry(
          err,
          {
            state: { counter: this.retryCount++, currentTimeout: this.retryAfter },
            opts: { retryOptions: this.retryOpts, ...this.opts }
          },
          onRetry.bind(this)
        );
        function onRetry(err2) {
          if (err2 != null || this.aborted || isDisturbed(this.opts.body)) {
            return this.handler.onError(err2);
          }
          if (this.start !== 0) {
            this.opts = {
              ...this.opts,
              headers: {
                ...this.opts.headers,
                range: `bytes=${this.start}-${this.end ?? ""}`
              }
            };
          }
          try {
            this.dispatch(this.opts, this);
          } catch (err3) {
            this.handler.onError(err3);
          }
        }
      }
    };
    module2.exports = RetryHandler;
  }
});

// node_modules/undici/lib/global.js
var require_global2 = __commonJS({
  "node_modules/undici/lib/global.js"(exports2, module2) {
    "use strict";
    var globalDispatcher = Symbol.for("undici.globalDispatcher.1");
    var { InvalidArgumentError } = require_errors();
    var Agent = require_agent();
    if (getGlobalDispatcher() === void 0) {
      setGlobalDispatcher(new Agent());
    }
    function setGlobalDispatcher(agent) {
      if (!agent || typeof agent.dispatch !== "function") {
        throw new InvalidArgumentError("Argument agent must implement Agent");
      }
      Object.defineProperty(globalThis, globalDispatcher, {
        value: agent,
        writable: true,
        enumerable: false,
        configurable: false
      });
    }
    function getGlobalDispatcher() {
      return globalThis[globalDispatcher];
    }
    module2.exports = {
      setGlobalDispatcher,
      getGlobalDispatcher
    };
  }
});

// node_modules/undici/lib/handler/DecoratorHandler.js
var require_DecoratorHandler = __commonJS({
  "node_modules/undici/lib/handler/DecoratorHandler.js"(exports2, module2) {
    "use strict";
    module2.exports = class DecoratorHandler {
      constructor(handler2) {
        this.handler = handler2;
      }
      onConnect(...args) {
        return this.handler.onConnect(...args);
      }
      onError(...args) {
        return this.handler.onError(...args);
      }
      onUpgrade(...args) {
        return this.handler.onUpgrade(...args);
      }
      onHeaders(...args) {
        return this.handler.onHeaders(...args);
      }
      onData(...args) {
        return this.handler.onData(...args);
      }
      onComplete(...args) {
        return this.handler.onComplete(...args);
      }
      onBodySent(...args) {
        return this.handler.onBodySent(...args);
      }
    };
  }
});

// node_modules/undici/lib/fetch/headers.js
var require_headers = __commonJS({
  "node_modules/undici/lib/fetch/headers.js"(exports2, module2) {
    "use strict";
    var { kHeadersList, kConstruct } = require_symbols();
    var { kGuard } = require_symbols2();
    var { kEnumerableProperty } = require_util();
    var {
      makeIterator,
      isValidHeaderName,
      isValidHeaderValue
    } = require_util2();
    var util = require("util");
    var { webidl } = require_webidl();
    var assert = require("assert");
    var kHeadersMap = Symbol("headers map");
    var kHeadersSortedMap = Symbol("headers map sorted");
    function isHTTPWhiteSpaceCharCode(code) {
      return code === 10 || code === 13 || code === 9 || code === 32;
    }
    function headerValueNormalize(potentialValue) {
      let i = 0;
      let j = potentialValue.length;
      while (j > i && isHTTPWhiteSpaceCharCode(potentialValue.charCodeAt(j - 1))) --j;
      while (j > i && isHTTPWhiteSpaceCharCode(potentialValue.charCodeAt(i))) ++i;
      return i === 0 && j === potentialValue.length ? potentialValue : potentialValue.substring(i, j);
    }
    function fill(headers, object) {
      if (Array.isArray(object)) {
        for (let i = 0; i < object.length; ++i) {
          const header = object[i];
          if (header.length !== 2) {
            throw webidl.errors.exception({
              header: "Headers constructor",
              message: `expected name/value pair to be length 2, found ${header.length}.`
            });
          }
          appendHeader(headers, header[0], header[1]);
        }
      } else if (typeof object === "object" && object !== null) {
        const keys = Object.keys(object);
        for (let i = 0; i < keys.length; ++i) {
          appendHeader(headers, keys[i], object[keys[i]]);
        }
      } else {
        throw webidl.errors.conversionFailed({
          prefix: "Headers constructor",
          argument: "Argument 1",
          types: ["sequence<sequence<ByteString>>", "record<ByteString, ByteString>"]
        });
      }
    }
    function appendHeader(headers, name3, value) {
      value = headerValueNormalize(value);
      if (!isValidHeaderName(name3)) {
        throw webidl.errors.invalidArgument({
          prefix: "Headers.append",
          value: name3,
          type: "header name"
        });
      } else if (!isValidHeaderValue(value)) {
        throw webidl.errors.invalidArgument({
          prefix: "Headers.append",
          value,
          type: "header value"
        });
      }
      if (headers[kGuard] === "immutable") {
        throw new TypeError("immutable");
      } else if (headers[kGuard] === "request-no-cors") {
      }
      return headers[kHeadersList].append(name3, value);
    }
    var HeadersList = class _HeadersList {
      /** @type {[string, string][]|null} */
      cookies = null;
      constructor(init) {
        if (init instanceof _HeadersList) {
          this[kHeadersMap] = new Map(init[kHeadersMap]);
          this[kHeadersSortedMap] = init[kHeadersSortedMap];
          this.cookies = init.cookies === null ? null : [...init.cookies];
        } else {
          this[kHeadersMap] = new Map(init);
          this[kHeadersSortedMap] = null;
        }
      }
      // https://fetch.spec.whatwg.org/#header-list-contains
      contains(name3) {
        name3 = name3.toLowerCase();
        return this[kHeadersMap].has(name3);
      }
      clear() {
        this[kHeadersMap].clear();
        this[kHeadersSortedMap] = null;
        this.cookies = null;
      }
      // https://fetch.spec.whatwg.org/#concept-header-list-append
      append(name3, value) {
        this[kHeadersSortedMap] = null;
        const lowercaseName = name3.toLowerCase();
        const exists = this[kHeadersMap].get(lowercaseName);
        if (exists) {
          const delimiter = lowercaseName === "cookie" ? "; " : ", ";
          this[kHeadersMap].set(lowercaseName, {
            name: exists.name,
            value: `${exists.value}${delimiter}${value}`
          });
        } else {
          this[kHeadersMap].set(lowercaseName, { name: name3, value });
        }
        if (lowercaseName === "set-cookie") {
          this.cookies ??= [];
          this.cookies.push(value);
        }
      }
      // https://fetch.spec.whatwg.org/#concept-header-list-set
      set(name3, value) {
        this[kHeadersSortedMap] = null;
        const lowercaseName = name3.toLowerCase();
        if (lowercaseName === "set-cookie") {
          this.cookies = [value];
        }
        this[kHeadersMap].set(lowercaseName, { name: name3, value });
      }
      // https://fetch.spec.whatwg.org/#concept-header-list-delete
      delete(name3) {
        this[kHeadersSortedMap] = null;
        name3 = name3.toLowerCase();
        if (name3 === "set-cookie") {
          this.cookies = null;
        }
        this[kHeadersMap].delete(name3);
      }
      // https://fetch.spec.whatwg.org/#concept-header-list-get
      get(name3) {
        const value = this[kHeadersMap].get(name3.toLowerCase());
        return value === void 0 ? null : value.value;
      }
      *[Symbol.iterator]() {
        for (const [name3, { value }] of this[kHeadersMap]) {
          yield [name3, value];
        }
      }
      get entries() {
        const headers = {};
        if (this[kHeadersMap].size) {
          for (const { name: name3, value } of this[kHeadersMap].values()) {
            headers[name3] = value;
          }
        }
        return headers;
      }
    };
    var Headers = class _Headers {
      constructor(init = void 0) {
        if (init === kConstruct) {
          return;
        }
        this[kHeadersList] = new HeadersList();
        this[kGuard] = "none";
        if (init !== void 0) {
          init = webidl.converters.HeadersInit(init);
          fill(this, init);
        }
      }
      // https://fetch.spec.whatwg.org/#dom-headers-append
      append(name3, value) {
        webidl.brandCheck(this, _Headers);
        webidl.argumentLengthCheck(arguments, 2, { header: "Headers.append" });
        name3 = webidl.converters.ByteString(name3);
        value = webidl.converters.ByteString(value);
        return appendHeader(this, name3, value);
      }
      // https://fetch.spec.whatwg.org/#dom-headers-delete
      delete(name3) {
        webidl.brandCheck(this, _Headers);
        webidl.argumentLengthCheck(arguments, 1, { header: "Headers.delete" });
        name3 = webidl.converters.ByteString(name3);
        if (!isValidHeaderName(name3)) {
          throw webidl.errors.invalidArgument({
            prefix: "Headers.delete",
            value: name3,
            type: "header name"
          });
        }
        if (this[kGuard] === "immutable") {
          throw new TypeError("immutable");
        } else if (this[kGuard] === "request-no-cors") {
        }
        if (!this[kHeadersList].contains(name3)) {
          return;
        }
        this[kHeadersList].delete(name3);
      }
      // https://fetch.spec.whatwg.org/#dom-headers-get
      get(name3) {
        webidl.brandCheck(this, _Headers);
        webidl.argumentLengthCheck(arguments, 1, { header: "Headers.get" });
        name3 = webidl.converters.ByteString(name3);
        if (!isValidHeaderName(name3)) {
          throw webidl.errors.invalidArgument({
            prefix: "Headers.get",
            value: name3,
            type: "header name"
          });
        }
        return this[kHeadersList].get(name3);
      }
      // https://fetch.spec.whatwg.org/#dom-headers-has
      has(name3) {
        webidl.brandCheck(this, _Headers);
        webidl.argumentLengthCheck(arguments, 1, { header: "Headers.has" });
        name3 = webidl.converters.ByteString(name3);
        if (!isValidHeaderName(name3)) {
          throw webidl.errors.invalidArgument({
            prefix: "Headers.has",
            value: name3,
            type: "header name"
          });
        }
        return this[kHeadersList].contains(name3);
      }
      // https://fetch.spec.whatwg.org/#dom-headers-set
      set(name3, value) {
        webidl.brandCheck(this, _Headers);
        webidl.argumentLengthCheck(arguments, 2, { header: "Headers.set" });
        name3 = webidl.converters.ByteString(name3);
        value = webidl.converters.ByteString(value);
        value = headerValueNormalize(value);
        if (!isValidHeaderName(name3)) {
          throw webidl.errors.invalidArgument({
            prefix: "Headers.set",
            value: name3,
            type: "header name"
          });
        } else if (!isValidHeaderValue(value)) {
          throw webidl.errors.invalidArgument({
            prefix: "Headers.set",
            value,
            type: "header value"
          });
        }
        if (this[kGuard] === "immutable") {
          throw new TypeError("immutable");
        } else if (this[kGuard] === "request-no-cors") {
        }
        this[kHeadersList].set(name3, value);
      }
      // https://fetch.spec.whatwg.org/#dom-headers-getsetcookie
      getSetCookie() {
        webidl.brandCheck(this, _Headers);
        const list = this[kHeadersList].cookies;
        if (list) {
          return [...list];
        }
        return [];
      }
      // https://fetch.spec.whatwg.org/#concept-header-list-sort-and-combine
      get [kHeadersSortedMap]() {
        if (this[kHeadersList][kHeadersSortedMap]) {
          return this[kHeadersList][kHeadersSortedMap];
        }
        const headers = [];
        const names = [...this[kHeadersList]].sort((a, b) => a[0] < b[0] ? -1 : 1);
        const cookies = this[kHeadersList].cookies;
        for (let i = 0; i < names.length; ++i) {
          const [name3, value] = names[i];
          if (name3 === "set-cookie") {
            for (let j = 0; j < cookies.length; ++j) {
              headers.push([name3, cookies[j]]);
            }
          } else {
            assert(value !== null);
            headers.push([name3, value]);
          }
        }
        this[kHeadersList][kHeadersSortedMap] = headers;
        return headers;
      }
      keys() {
        webidl.brandCheck(this, _Headers);
        if (this[kGuard] === "immutable") {
          const value = this[kHeadersSortedMap];
          return makeIterator(
            () => value,
            "Headers",
            "key"
          );
        }
        return makeIterator(
          () => [...this[kHeadersSortedMap].values()],
          "Headers",
          "key"
        );
      }
      values() {
        webidl.brandCheck(this, _Headers);
        if (this[kGuard] === "immutable") {
          const value = this[kHeadersSortedMap];
          return makeIterator(
            () => value,
            "Headers",
            "value"
          );
        }
        return makeIterator(
          () => [...this[kHeadersSortedMap].values()],
          "Headers",
          "value"
        );
      }
      entries() {
        webidl.brandCheck(this, _Headers);
        if (this[kGuard] === "immutable") {
          const value = this[kHeadersSortedMap];
          return makeIterator(
            () => value,
            "Headers",
            "key+value"
          );
        }
        return makeIterator(
          () => [...this[kHeadersSortedMap].values()],
          "Headers",
          "key+value"
        );
      }
      /**
       * @param {(value: string, key: string, self: Headers) => void} callbackFn
       * @param {unknown} thisArg
       */
      forEach(callbackFn, thisArg = globalThis) {
        webidl.brandCheck(this, _Headers);
        webidl.argumentLengthCheck(arguments, 1, { header: "Headers.forEach" });
        if (typeof callbackFn !== "function") {
          throw new TypeError(
            "Failed to execute 'forEach' on 'Headers': parameter 1 is not of type 'Function'."
          );
        }
        for (const [key, value] of this) {
          callbackFn.apply(thisArg, [value, key, this]);
        }
      }
      [Symbol.for("nodejs.util.inspect.custom")]() {
        webidl.brandCheck(this, _Headers);
        return this[kHeadersList];
      }
    };
    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;
    Object.defineProperties(Headers.prototype, {
      append: kEnumerableProperty,
      delete: kEnumerableProperty,
      get: kEnumerableProperty,
      has: kEnumerableProperty,
      set: kEnumerableProperty,
      getSetCookie: kEnumerableProperty,
      keys: kEnumerableProperty,
      values: kEnumerableProperty,
      entries: kEnumerableProperty,
      forEach: kEnumerableProperty,
      [Symbol.iterator]: { enumerable: false },
      [Symbol.toStringTag]: {
        value: "Headers",
        configurable: true
      },
      [util.inspect.custom]: {
        enumerable: false
      }
    });
    webidl.converters.HeadersInit = function(V) {
      if (webidl.util.Type(V) === "Object") {
        if (V[Symbol.iterator]) {
          return webidl.converters["sequence<sequence<ByteString>>"](V);
        }
        return webidl.converters["record<ByteString, ByteString>"](V);
      }
      throw webidl.errors.conversionFailed({
        prefix: "Headers constructor",
        argument: "Argument 1",
        types: ["sequence<sequence<ByteString>>", "record<ByteString, ByteString>"]
      });
    };
    module2.exports = {
      fill,
      Headers,
      HeadersList
    };
  }
});

// node_modules/undici/lib/fetch/response.js
var require_response = __commonJS({
  "node_modules/undici/lib/fetch/response.js"(exports2, module2) {
    "use strict";
    var { Headers, HeadersList, fill } = require_headers();
    var { extractBody, cloneBody, mixinBody } = require_body();
    var util = require_util();
    var { kEnumerableProperty } = util;
    var {
      isValidReasonPhrase,
      isCancelled,
      isAborted,
      isBlobLike,
      serializeJavascriptValueToJSONString,
      isErrorLike,
      isomorphicEncode
    } = require_util2();
    var {
      redirectStatusSet,
      nullBodyStatus,
      DOMException: DOMException2
    } = require_constants2();
    var { kState, kHeaders, kGuard, kRealm } = require_symbols2();
    var { webidl } = require_webidl();
    var { FormData } = require_formdata();
    var { getGlobalOrigin } = require_global();
    var { URLSerializer } = require_dataURL();
    var { kHeadersList, kConstruct } = require_symbols();
    var assert = require("assert");
    var { types } = require("util");
    var ReadableStream = globalThis.ReadableStream || require("stream/web").ReadableStream;
    var textEncoder = new TextEncoder("utf-8");
    var Response = class _Response {
      // Creates network error Response.
      static error() {
        const relevantRealm = { settingsObject: {} };
        const responseObject = new _Response();
        responseObject[kState] = makeNetworkError();
        responseObject[kRealm] = relevantRealm;
        responseObject[kHeaders][kHeadersList] = responseObject[kState].headersList;
        responseObject[kHeaders][kGuard] = "immutable";
        responseObject[kHeaders][kRealm] = relevantRealm;
        return responseObject;
      }
      // https://fetch.spec.whatwg.org/#dom-response-json
      static json(data, init = {}) {
        webidl.argumentLengthCheck(arguments, 1, { header: "Response.json" });
        if (init !== null) {
          init = webidl.converters.ResponseInit(init);
        }
        const bytes = textEncoder.encode(
          serializeJavascriptValueToJSONString(data)
        );
        const body = extractBody(bytes);
        const relevantRealm = { settingsObject: {} };
        const responseObject = new _Response();
        responseObject[kRealm] = relevantRealm;
        responseObject[kHeaders][kGuard] = "response";
        responseObject[kHeaders][kRealm] = relevantRealm;
        initializeResponse(responseObject, init, { body: body[0], type: "application/json" });
        return responseObject;
      }
      // Creates a redirect Response that redirects to url with status status.
      static redirect(url, status = 302) {
        const relevantRealm = { settingsObject: {} };
        webidl.argumentLengthCheck(arguments, 1, { header: "Response.redirect" });
        url = webidl.converters.USVString(url);
        status = webidl.converters["unsigned short"](status);
        let parsedURL;
        try {
          parsedURL = new URL(url, getGlobalOrigin());
        } catch (err) {
          throw Object.assign(new TypeError("Failed to parse URL from " + url), {
            cause: err
          });
        }
        if (!redirectStatusSet.has(status)) {
          throw new RangeError("Invalid status code " + status);
        }
        const responseObject = new _Response();
        responseObject[kRealm] = relevantRealm;
        responseObject[kHeaders][kGuard] = "immutable";
        responseObject[kHeaders][kRealm] = relevantRealm;
        responseObject[kState].status = status;
        const value = isomorphicEncode(URLSerializer(parsedURL));
        responseObject[kState].headersList.append("location", value);
        return responseObject;
      }
      // https://fetch.spec.whatwg.org/#dom-response
      constructor(body = null, init = {}) {
        if (body !== null) {
          body = webidl.converters.BodyInit(body);
        }
        init = webidl.converters.ResponseInit(init);
        this[kRealm] = { settingsObject: {} };
        this[kState] = makeResponse({});
        this[kHeaders] = new Headers(kConstruct);
        this[kHeaders][kGuard] = "response";
        this[kHeaders][kHeadersList] = this[kState].headersList;
        this[kHeaders][kRealm] = this[kRealm];
        let bodyWithType = null;
        if (body != null) {
          const [extractedBody, type] = extractBody(body);
          bodyWithType = { body: extractedBody, type };
        }
        initializeResponse(this, init, bodyWithType);
      }
      // Returns response’s type, e.g., "cors".
      get type() {
        webidl.brandCheck(this, _Response);
        return this[kState].type;
      }
      // Returns response’s URL, if it has one; otherwise the empty string.
      get url() {
        webidl.brandCheck(this, _Response);
        const urlList = this[kState].urlList;
        const url = urlList[urlList.length - 1] ?? null;
        if (url === null) {
          return "";
        }
        return URLSerializer(url, true);
      }
      // Returns whether response was obtained through a redirect.
      get redirected() {
        webidl.brandCheck(this, _Response);
        return this[kState].urlList.length > 1;
      }
      // Returns response’s status.
      get status() {
        webidl.brandCheck(this, _Response);
        return this[kState].status;
      }
      // Returns whether response’s status is an ok status.
      get ok() {
        webidl.brandCheck(this, _Response);
        return this[kState].status >= 200 && this[kState].status <= 299;
      }
      // Returns response’s status message.
      get statusText() {
        webidl.brandCheck(this, _Response);
        return this[kState].statusText;
      }
      // Returns response’s headers as Headers.
      get headers() {
        webidl.brandCheck(this, _Response);
        return this[kHeaders];
      }
      get body() {
        webidl.brandCheck(this, _Response);
        return this[kState].body ? this[kState].body.stream : null;
      }
      get bodyUsed() {
        webidl.brandCheck(this, _Response);
        return !!this[kState].body && util.isDisturbed(this[kState].body.stream);
      }
      // Returns a clone of response.
      clone() {
        webidl.brandCheck(this, _Response);
        if (this.bodyUsed || this.body && this.body.locked) {
          throw webidl.errors.exception({
            header: "Response.clone",
            message: "Body has already been consumed."
          });
        }
        const clonedResponse = cloneResponse(this[kState]);
        const clonedResponseObject = new _Response();
        clonedResponseObject[kState] = clonedResponse;
        clonedResponseObject[kRealm] = this[kRealm];
        clonedResponseObject[kHeaders][kHeadersList] = clonedResponse.headersList;
        clonedResponseObject[kHeaders][kGuard] = this[kHeaders][kGuard];
        clonedResponseObject[kHeaders][kRealm] = this[kHeaders][kRealm];
        return clonedResponseObject;
      }
    };
    mixinBody(Response);
    Object.defineProperties(Response.prototype, {
      type: kEnumerableProperty,
      url: kEnumerableProperty,
      status: kEnumerableProperty,
      ok: kEnumerableProperty,
      redirected: kEnumerableProperty,
      statusText: kEnumerableProperty,
      headers: kEnumerableProperty,
      clone: kEnumerableProperty,
      body: kEnumerableProperty,
      bodyUsed: kEnumerableProperty,
      [Symbol.toStringTag]: {
        value: "Response",
        configurable: true
      }
    });
    Object.defineProperties(Response, {
      json: kEnumerableProperty,
      redirect: kEnumerableProperty,
      error: kEnumerableProperty
    });
    function cloneResponse(response) {
      if (response.internalResponse) {
        return filterResponse(
          cloneResponse(response.internalResponse),
          response.type
        );
      }
      const newResponse = makeResponse({ ...response, body: null });
      if (response.body != null) {
        newResponse.body = cloneBody(response.body);
      }
      return newResponse;
    }
    function makeResponse(init) {
      return {
        aborted: false,
        rangeRequested: false,
        timingAllowPassed: false,
        requestIncludesCredentials: false,
        type: "default",
        status: 200,
        timingInfo: null,
        cacheState: "",
        statusText: "",
        ...init,
        headersList: init.headersList ? new HeadersList(init.headersList) : new HeadersList(),
        urlList: init.urlList ? [...init.urlList] : []
      };
    }
    function makeNetworkError(reason) {
      const isError = isErrorLike(reason);
      return makeResponse({
        type: "error",
        status: 0,
        error: isError ? reason : new Error(reason ? String(reason) : reason),
        aborted: reason && reason.name === "AbortError"
      });
    }
    function makeFilteredResponse(response, state) {
      state = {
        internalResponse: response,
        ...state
      };
      return new Proxy(response, {
        get(target, p) {
          return p in state ? state[p] : target[p];
        },
        set(target, p, value) {
          assert(!(p in state));
          target[p] = value;
          return true;
        }
      });
    }
    function filterResponse(response, type) {
      if (type === "basic") {
        return makeFilteredResponse(response, {
          type: "basic",
          headersList: response.headersList
        });
      } else if (type === "cors") {
        return makeFilteredResponse(response, {
          type: "cors",
          headersList: response.headersList
        });
      } else if (type === "opaque") {
        return makeFilteredResponse(response, {
          type: "opaque",
          urlList: Object.freeze([]),
          status: 0,
          statusText: "",
          body: null
        });
      } else if (type === "opaqueredirect") {
        return makeFilteredResponse(response, {
          type: "opaqueredirect",
          status: 0,
          statusText: "",
          headersList: [],
          body: null
        });
      } else {
        assert(false);
      }
    }
    function makeAppropriateNetworkError(fetchParams, err = null) {
      assert(isCancelled(fetchParams));
      return isAborted(fetchParams) ? makeNetworkError(Object.assign(new DOMException2("The operation was aborted.", "AbortError"), { cause: err })) : makeNetworkError(Object.assign(new DOMException2("Request was cancelled."), { cause: err }));
    }
    function initializeResponse(response, init, body) {
      if (init.status !== null && (init.status < 200 || init.status > 599)) {
        throw new RangeError('init["status"] must be in the range of 200 to 599, inclusive.');
      }
      if ("statusText" in init && init.statusText != null) {
        if (!isValidReasonPhrase(String(init.statusText))) {
          throw new TypeError("Invalid statusText");
        }
      }
      if ("status" in init && init.status != null) {
        response[kState].status = init.status;
      }
      if ("statusText" in init && init.statusText != null) {
        response[kState].statusText = init.statusText;
      }
      if ("headers" in init && init.headers != null) {
        fill(response[kHeaders], init.headers);
      }
      if (body) {
        if (nullBodyStatus.includes(response.status)) {
          throw webidl.errors.exception({
            header: "Response constructor",
            message: "Invalid response status code " + response.status
          });
        }
        response[kState].body = body.body;
        if (body.type != null && !response[kState].headersList.contains("Content-Type")) {
          response[kState].headersList.append("content-type", body.type);
        }
      }
    }
    webidl.converters.ReadableStream = webidl.interfaceConverter(
      ReadableStream
    );
    webidl.converters.FormData = webidl.interfaceConverter(
      FormData
    );
    webidl.converters.URLSearchParams = webidl.interfaceConverter(
      URLSearchParams
    );
    webidl.converters.XMLHttpRequestBodyInit = function(V) {
      if (typeof V === "string") {
        return webidl.converters.USVString(V);
      }
      if (isBlobLike(V)) {
        return webidl.converters.Blob(V, { strict: false });
      }
      if (types.isArrayBuffer(V) || types.isTypedArray(V) || types.isDataView(V)) {
        return webidl.converters.BufferSource(V);
      }
      if (util.isFormDataLike(V)) {
        return webidl.converters.FormData(V, { strict: false });
      }
      if (V instanceof URLSearchParams) {
        return webidl.converters.URLSearchParams(V);
      }
      return webidl.converters.DOMString(V);
    };
    webidl.converters.BodyInit = function(V) {
      if (V instanceof ReadableStream) {
        return webidl.converters.ReadableStream(V);
      }
      if (V?.[Symbol.asyncIterator]) {
        return V;
      }
      return webidl.converters.XMLHttpRequestBodyInit(V);
    };
    webidl.converters.ResponseInit = webidl.dictionaryConverter([
      {
        key: "status",
        converter: webidl.converters["unsigned short"],
        defaultValue: 200
      },
      {
        key: "statusText",
        converter: webidl.converters.ByteString,
        defaultValue: ""
      },
      {
        key: "headers",
        converter: webidl.converters.HeadersInit
      }
    ]);
    module2.exports = {
      makeNetworkError,
      makeResponse,
      makeAppropriateNetworkError,
      filterResponse,
      Response,
      cloneResponse
    };
  }
});

// node_modules/undici/lib/fetch/request.js
var require_request2 = __commonJS({
  "node_modules/undici/lib/fetch/request.js"(exports2, module2) {
    "use strict";
    var { extractBody, mixinBody, cloneBody } = require_body();
    var { Headers, fill: fillHeaders, HeadersList } = require_headers();
    var { FinalizationRegistry } = require_dispatcher_weakref()();
    var util = require_util();
    var {
      isValidHTTPToken,
      sameOrigin,
      normalizeMethod,
      makePolicyContainer,
      normalizeMethodRecord
    } = require_util2();
    var {
      forbiddenMethodsSet,
      corsSafeListedMethodsSet,
      referrerPolicy,
      requestRedirect,
      requestMode,
      requestCredentials,
      requestCache,
      requestDuplex
    } = require_constants2();
    var { kEnumerableProperty } = util;
    var { kHeaders, kSignal, kState, kGuard, kRealm } = require_symbols2();
    var { webidl } = require_webidl();
    var { getGlobalOrigin } = require_global();
    var { URLSerializer } = require_dataURL();
    var { kHeadersList, kConstruct } = require_symbols();
    var assert = require("assert");
    var { getMaxListeners, setMaxListeners, getEventListeners, defaultMaxListeners } = require("events");
    var TransformStream = globalThis.TransformStream;
    var kAbortController = Symbol("abortController");
    var requestFinalizer = new FinalizationRegistry(({ signal, abort }) => {
      signal.removeEventListener("abort", abort);
    });
    var Request = class _Request {
      // https://fetch.spec.whatwg.org/#dom-request
      constructor(input, init = {}) {
        if (input === kConstruct) {
          return;
        }
        webidl.argumentLengthCheck(arguments, 1, { header: "Request constructor" });
        input = webidl.converters.RequestInfo(input);
        init = webidl.converters.RequestInit(init);
        this[kRealm] = {
          settingsObject: {
            baseUrl: getGlobalOrigin(),
            get origin() {
              return this.baseUrl?.origin;
            },
            policyContainer: makePolicyContainer()
          }
        };
        let request2 = null;
        let fallbackMode = null;
        const baseUrl = this[kRealm].settingsObject.baseUrl;
        let signal = null;
        if (typeof input === "string") {
          let parsedURL;
          try {
            parsedURL = new URL(input, baseUrl);
          } catch (err) {
            throw new TypeError("Failed to parse URL from " + input, { cause: err });
          }
          if (parsedURL.username || parsedURL.password) {
            throw new TypeError(
              "Request cannot be constructed from a URL that includes credentials: " + input
            );
          }
          request2 = makeRequest({ urlList: [parsedURL] });
          fallbackMode = "cors";
        } else {
          assert(input instanceof _Request);
          request2 = input[kState];
          signal = input[kSignal];
        }
        const origin = this[kRealm].settingsObject.origin;
        let window2 = "client";
        if (request2.window?.constructor?.name === "EnvironmentSettingsObject" && sameOrigin(request2.window, origin)) {
          window2 = request2.window;
        }
        if (init.window != null) {
          throw new TypeError(`'window' option '${window2}' must be null`);
        }
        if ("window" in init) {
          window2 = "no-window";
        }
        request2 = makeRequest({
          // URL request’s URL.
          // undici implementation note: this is set as the first item in request's urlList in makeRequest
          // method request’s method.
          method: request2.method,
          // header list A copy of request’s header list.
          // undici implementation note: headersList is cloned in makeRequest
          headersList: request2.headersList,
          // unsafe-request flag Set.
          unsafeRequest: request2.unsafeRequest,
          // client This’s relevant settings object.
          client: this[kRealm].settingsObject,
          // window window.
          window: window2,
          // priority request’s priority.
          priority: request2.priority,
          // origin request’s origin. The propagation of the origin is only significant for navigation requests
          // being handled by a service worker. In this scenario a request can have an origin that is different
          // from the current client.
          origin: request2.origin,
          // referrer request’s referrer.
          referrer: request2.referrer,
          // referrer policy request’s referrer policy.
          referrerPolicy: request2.referrerPolicy,
          // mode request’s mode.
          mode: request2.mode,
          // credentials mode request’s credentials mode.
          credentials: request2.credentials,
          // cache mode request’s cache mode.
          cache: request2.cache,
          // redirect mode request’s redirect mode.
          redirect: request2.redirect,
          // integrity metadata request’s integrity metadata.
          integrity: request2.integrity,
          // keepalive request’s keepalive.
          keepalive: request2.keepalive,
          // reload-navigation flag request’s reload-navigation flag.
          reloadNavigation: request2.reloadNavigation,
          // history-navigation flag request’s history-navigation flag.
          historyNavigation: request2.historyNavigation,
          // URL list A clone of request’s URL list.
          urlList: [...request2.urlList]
        });
        const initHasKey = Object.keys(init).length !== 0;
        if (initHasKey) {
          if (request2.mode === "navigate") {
            request2.mode = "same-origin";
          }
          request2.reloadNavigation = false;
          request2.historyNavigation = false;
          request2.origin = "client";
          request2.referrer = "client";
          request2.referrerPolicy = "";
          request2.url = request2.urlList[request2.urlList.length - 1];
          request2.urlList = [request2.url];
        }
        if (init.referrer !== void 0) {
          const referrer = init.referrer;
          if (referrer === "") {
            request2.referrer = "no-referrer";
          } else {
            let parsedReferrer;
            try {
              parsedReferrer = new URL(referrer, baseUrl);
            } catch (err) {
              throw new TypeError(`Referrer "${referrer}" is not a valid URL.`, { cause: err });
            }
            if (parsedReferrer.protocol === "about:" && parsedReferrer.hostname === "client" || origin && !sameOrigin(parsedReferrer, this[kRealm].settingsObject.baseUrl)) {
              request2.referrer = "client";
            } else {
              request2.referrer = parsedReferrer;
            }
          }
        }
        if (init.referrerPolicy !== void 0) {
          request2.referrerPolicy = init.referrerPolicy;
        }
        let mode;
        if (init.mode !== void 0) {
          mode = init.mode;
        } else {
          mode = fallbackMode;
        }
        if (mode === "navigate") {
          throw webidl.errors.exception({
            header: "Request constructor",
            message: "invalid request mode navigate."
          });
        }
        if (mode != null) {
          request2.mode = mode;
        }
        if (init.credentials !== void 0) {
          request2.credentials = init.credentials;
        }
        if (init.cache !== void 0) {
          request2.cache = init.cache;
        }
        if (request2.cache === "only-if-cached" && request2.mode !== "same-origin") {
          throw new TypeError(
            "'only-if-cached' can be set only with 'same-origin' mode"
          );
        }
        if (init.redirect !== void 0) {
          request2.redirect = init.redirect;
        }
        if (init.integrity != null) {
          request2.integrity = String(init.integrity);
        }
        if (init.keepalive !== void 0) {
          request2.keepalive = Boolean(init.keepalive);
        }
        if (init.method !== void 0) {
          let method = init.method;
          if (!isValidHTTPToken(method)) {
            throw new TypeError(`'${method}' is not a valid HTTP method.`);
          }
          if (forbiddenMethodsSet.has(method.toUpperCase())) {
            throw new TypeError(`'${method}' HTTP method is unsupported.`);
          }
          method = normalizeMethodRecord[method] ?? normalizeMethod(method);
          request2.method = method;
        }
        if (init.signal !== void 0) {
          signal = init.signal;
        }
        this[kState] = request2;
        const ac = new AbortController();
        this[kSignal] = ac.signal;
        this[kSignal][kRealm] = this[kRealm];
        if (signal != null) {
          if (!signal || typeof signal.aborted !== "boolean" || typeof signal.addEventListener !== "function") {
            throw new TypeError(
              "Failed to construct 'Request': member signal is not of type AbortSignal."
            );
          }
          if (signal.aborted) {
            ac.abort(signal.reason);
          } else {
            this[kAbortController] = ac;
            const acRef = new WeakRef(ac);
            const abort = function() {
              const ac2 = acRef.deref();
              if (ac2 !== void 0) {
                ac2.abort(this.reason);
              }
            };
            try {
              if (typeof getMaxListeners === "function" && getMaxListeners(signal) === defaultMaxListeners) {
                setMaxListeners(100, signal);
              } else if (getEventListeners(signal, "abort").length >= defaultMaxListeners) {
                setMaxListeners(100, signal);
              }
            } catch {
            }
            util.addAbortListener(signal, abort);
            requestFinalizer.register(ac, { signal, abort });
          }
        }
        this[kHeaders] = new Headers(kConstruct);
        this[kHeaders][kHeadersList] = request2.headersList;
        this[kHeaders][kGuard] = "request";
        this[kHeaders][kRealm] = this[kRealm];
        if (mode === "no-cors") {
          if (!corsSafeListedMethodsSet.has(request2.method)) {
            throw new TypeError(
              `'${request2.method} is unsupported in no-cors mode.`
            );
          }
          this[kHeaders][kGuard] = "request-no-cors";
        }
        if (initHasKey) {
          const headersList = this[kHeaders][kHeadersList];
          const headers = init.headers !== void 0 ? init.headers : new HeadersList(headersList);
          headersList.clear();
          if (headers instanceof HeadersList) {
            for (const [key, val] of headers) {
              headersList.append(key, val);
            }
            headersList.cookies = headers.cookies;
          } else {
            fillHeaders(this[kHeaders], headers);
          }
        }
        const inputBody = input instanceof _Request ? input[kState].body : null;
        if ((init.body != null || inputBody != null) && (request2.method === "GET" || request2.method === "HEAD")) {
          throw new TypeError("Request with GET/HEAD method cannot have body.");
        }
        let initBody = null;
        if (init.body != null) {
          const [extractedBody, contentType] = extractBody(
            init.body,
            request2.keepalive
          );
          initBody = extractedBody;
          if (contentType && !this[kHeaders][kHeadersList].contains("content-type")) {
            this[kHeaders].append("content-type", contentType);
          }
        }
        const inputOrInitBody = initBody ?? inputBody;
        if (inputOrInitBody != null && inputOrInitBody.source == null) {
          if (initBody != null && init.duplex == null) {
            throw new TypeError("RequestInit: duplex option is required when sending a body.");
          }
          if (request2.mode !== "same-origin" && request2.mode !== "cors") {
            throw new TypeError(
              'If request is made from ReadableStream, mode should be "same-origin" or "cors"'
            );
          }
          request2.useCORSPreflightFlag = true;
        }
        let finalBody = inputOrInitBody;
        if (initBody == null && inputBody != null) {
          if (util.isDisturbed(inputBody.stream) || inputBody.stream.locked) {
            throw new TypeError(
              "Cannot construct a Request with a Request object that has already been used."
            );
          }
          if (!TransformStream) {
            TransformStream = require("stream/web").TransformStream;
          }
          const identityTransform = new TransformStream();
          inputBody.stream.pipeThrough(identityTransform);
          finalBody = {
            source: inputBody.source,
            length: inputBody.length,
            stream: identityTransform.readable
          };
        }
        this[kState].body = finalBody;
      }
      // Returns request’s HTTP method, which is "GET" by default.
      get method() {
        webidl.brandCheck(this, _Request);
        return this[kState].method;
      }
      // Returns the URL of request as a string.
      get url() {
        webidl.brandCheck(this, _Request);
        return URLSerializer(this[kState].url);
      }
      // Returns a Headers object consisting of the headers associated with request.
      // Note that headers added in the network layer by the user agent will not
      // be accounted for in this object, e.g., the "Host" header.
      get headers() {
        webidl.brandCheck(this, _Request);
        return this[kHeaders];
      }
      // Returns the kind of resource requested by request, e.g., "document"
      // or "script".
      get destination() {
        webidl.brandCheck(this, _Request);
        return this[kState].destination;
      }
      // Returns the referrer of request. Its value can be a same-origin URL if
      // explicitly set in init, the empty string to indicate no referrer, and
      // "about:client" when defaulting to the global’s default. This is used
      // during fetching to determine the value of the `Referer` header of the
      // request being made.
      get referrer() {
        webidl.brandCheck(this, _Request);
        if (this[kState].referrer === "no-referrer") {
          return "";
        }
        if (this[kState].referrer === "client") {
          return "about:client";
        }
        return this[kState].referrer.toString();
      }
      // Returns the referrer policy associated with request.
      // This is used during fetching to compute the value of the request’s
      // referrer.
      get referrerPolicy() {
        webidl.brandCheck(this, _Request);
        return this[kState].referrerPolicy;
      }
      // Returns the mode associated with request, which is a string indicating
      // whether the request will use CORS, or will be restricted to same-origin
      // URLs.
      get mode() {
        webidl.brandCheck(this, _Request);
        return this[kState].mode;
      }
      // Returns the credentials mode associated with request,
      // which is a string indicating whether credentials will be sent with the
      // request always, never, or only when sent to a same-origin URL.
      get credentials() {
        return this[kState].credentials;
      }
      // Returns the cache mode associated with request,
      // which is a string indicating how the request will
      // interact with the browser’s cache when fetching.
      get cache() {
        webidl.brandCheck(this, _Request);
        return this[kState].cache;
      }
      // Returns the redirect mode associated with request,
      // which is a string indicating how redirects for the
      // request will be handled during fetching. A request
      // will follow redirects by default.
      get redirect() {
        webidl.brandCheck(this, _Request);
        return this[kState].redirect;
      }
      // Returns request’s subresource integrity metadata, which is a
      // cryptographic hash of the resource being fetched. Its value
      // consists of multiple hashes separated by whitespace. [SRI]
      get integrity() {
        webidl.brandCheck(this, _Request);
        return this[kState].integrity;
      }
      // Returns a boolean indicating whether or not request can outlive the
      // global in which it was created.
      get keepalive() {
        webidl.brandCheck(this, _Request);
        return this[kState].keepalive;
      }
      // Returns a boolean indicating whether or not request is for a reload
      // navigation.
      get isReloadNavigation() {
        webidl.brandCheck(this, _Request);
        return this[kState].reloadNavigation;
      }
      // Returns a boolean indicating whether or not request is for a history
      // navigation (a.k.a. back-foward navigation).
      get isHistoryNavigation() {
        webidl.brandCheck(this, _Request);
        return this[kState].historyNavigation;
      }
      // Returns the signal associated with request, which is an AbortSignal
      // object indicating whether or not request has been aborted, and its
      // abort event handler.
      get signal() {
        webidl.brandCheck(this, _Request);
        return this[kSignal];
      }
      get body() {
        webidl.brandCheck(this, _Request);
        return this[kState].body ? this[kState].body.stream : null;
      }
      get bodyUsed() {
        webidl.brandCheck(this, _Request);
        return !!this[kState].body && util.isDisturbed(this[kState].body.stream);
      }
      get duplex() {
        webidl.brandCheck(this, _Request);
        return "half";
      }
      // Returns a clone of request.
      clone() {
        webidl.brandCheck(this, _Request);
        if (this.bodyUsed || this.body?.locked) {
          throw new TypeError("unusable");
        }
        const clonedRequest = cloneRequest(this[kState]);
        const clonedRequestObject = new _Request(kConstruct);
        clonedRequestObject[kState] = clonedRequest;
        clonedRequestObject[kRealm] = this[kRealm];
        clonedRequestObject[kHeaders] = new Headers(kConstruct);
        clonedRequestObject[kHeaders][kHeadersList] = clonedRequest.headersList;
        clonedRequestObject[kHeaders][kGuard] = this[kHeaders][kGuard];
        clonedRequestObject[kHeaders][kRealm] = this[kHeaders][kRealm];
        const ac = new AbortController();
        if (this.signal.aborted) {
          ac.abort(this.signal.reason);
        } else {
          util.addAbortListener(
            this.signal,
            () => {
              ac.abort(this.signal.reason);
            }
          );
        }
        clonedRequestObject[kSignal] = ac.signal;
        return clonedRequestObject;
      }
    };
    mixinBody(Request);
    function makeRequest(init) {
      const request2 = {
        method: "GET",
        localURLsOnly: false,
        unsafeRequest: false,
        body: null,
        client: null,
        reservedClient: null,
        replacesClientId: "",
        window: "client",
        keepalive: false,
        serviceWorkers: "all",
        initiator: "",
        destination: "",
        priority: null,
        origin: "client",
        policyContainer: "client",
        referrer: "client",
        referrerPolicy: "",
        mode: "no-cors",
        useCORSPreflightFlag: false,
        credentials: "same-origin",
        useCredentials: false,
        cache: "default",
        redirect: "follow",
        integrity: "",
        cryptoGraphicsNonceMetadata: "",
        parserMetadata: "",
        reloadNavigation: false,
        historyNavigation: false,
        userActivation: false,
        taintedOrigin: false,
        redirectCount: 0,
        responseTainting: "basic",
        preventNoCacheCacheControlHeaderModification: false,
        done: false,
        timingAllowFailed: false,
        ...init,
        headersList: init.headersList ? new HeadersList(init.headersList) : new HeadersList()
      };
      request2.url = request2.urlList[0];
      return request2;
    }
    function cloneRequest(request2) {
      const newRequest = makeRequest({ ...request2, body: null });
      if (request2.body != null) {
        newRequest.body = cloneBody(request2.body);
      }
      return newRequest;
    }
    Object.defineProperties(Request.prototype, {
      method: kEnumerableProperty,
      url: kEnumerableProperty,
      headers: kEnumerableProperty,
      redirect: kEnumerableProperty,
      clone: kEnumerableProperty,
      signal: kEnumerableProperty,
      duplex: kEnumerableProperty,
      destination: kEnumerableProperty,
      body: kEnumerableProperty,
      bodyUsed: kEnumerableProperty,
      isHistoryNavigation: kEnumerableProperty,
      isReloadNavigation: kEnumerableProperty,
      keepalive: kEnumerableProperty,
      integrity: kEnumerableProperty,
      cache: kEnumerableProperty,
      credentials: kEnumerableProperty,
      attribute: kEnumerableProperty,
      referrerPolicy: kEnumerableProperty,
      referrer: kEnumerableProperty,
      mode: kEnumerableProperty,
      [Symbol.toStringTag]: {
        value: "Request",
        configurable: true
      }
    });
    webidl.converters.Request = webidl.interfaceConverter(
      Request
    );
    webidl.converters.RequestInfo = function(V) {
      if (typeof V === "string") {
        return webidl.converters.USVString(V);
      }
      if (V instanceof Request) {
        return webidl.converters.Request(V);
      }
      return webidl.converters.USVString(V);
    };
    webidl.converters.AbortSignal = webidl.interfaceConverter(
      AbortSignal
    );
    webidl.converters.RequestInit = webidl.dictionaryConverter([
      {
        key: "method",
        converter: webidl.converters.ByteString
      },
      {
        key: "headers",
        converter: webidl.converters.HeadersInit
      },
      {
        key: "body",
        converter: webidl.nullableConverter(
          webidl.converters.BodyInit
        )
      },
      {
        key: "referrer",
        converter: webidl.converters.USVString
      },
      {
        key: "referrerPolicy",
        converter: webidl.converters.DOMString,
        // https://w3c.github.io/webappsec-referrer-policy/#referrer-policy
        allowedValues: referrerPolicy
      },
      {
        key: "mode",
        converter: webidl.converters.DOMString,
        // https://fetch.spec.whatwg.org/#concept-request-mode
        allowedValues: requestMode
      },
      {
        key: "credentials",
        converter: webidl.converters.DOMString,
        // https://fetch.spec.whatwg.org/#requestcredentials
        allowedValues: requestCredentials
      },
      {
        key: "cache",
        converter: webidl.converters.DOMString,
        // https://fetch.spec.whatwg.org/#requestcache
        allowedValues: requestCache
      },
      {
        key: "redirect",
        converter: webidl.converters.DOMString,
        // https://fetch.spec.whatwg.org/#requestredirect
        allowedValues: requestRedirect
      },
      {
        key: "integrity",
        converter: webidl.converters.DOMString
      },
      {
        key: "keepalive",
        converter: webidl.converters.boolean
      },
      {
        key: "signal",
        converter: webidl.nullableConverter(
          (signal) => webidl.converters.AbortSignal(
            signal,
            { strict: false }
          )
        )
      },
      {
        key: "window",
        converter: webidl.converters.any
      },
      {
        key: "duplex",
        converter: webidl.converters.DOMString,
        allowedValues: requestDuplex
      }
    ]);
    module2.exports = { Request, makeRequest };
  }
});

// node_modules/undici/lib/fetch/index.js
var require_fetch = __commonJS({
  "node_modules/undici/lib/fetch/index.js"(exports2, module2) {
    "use strict";
    var {
      Response,
      makeNetworkError,
      makeAppropriateNetworkError,
      filterResponse,
      makeResponse
    } = require_response();
    var { Headers } = require_headers();
    var { Request, makeRequest } = require_request2();
    var zlib = require("zlib");
    var {
      bytesMatch,
      makePolicyContainer,
      clonePolicyContainer,
      requestBadPort,
      TAOCheck,
      appendRequestOriginHeader,
      responseLocationURL,
      requestCurrentURL,
      setRequestReferrerPolicyOnRedirect,
      tryUpgradeRequestToAPotentiallyTrustworthyURL,
      createOpaqueTimingInfo,
      appendFetchMetadata,
      corsCheck,
      crossOriginResourcePolicyCheck,
      determineRequestsReferrer,
      coarsenedSharedCurrentTime,
      createDeferredPromise,
      isBlobLike,
      sameOrigin,
      isCancelled,
      isAborted,
      isErrorLike,
      fullyReadBody,
      readableStreamClose,
      isomorphicEncode,
      urlIsLocal,
      urlIsHttpHttpsScheme,
      urlHasHttpsScheme
    } = require_util2();
    var { kState, kHeaders, kGuard, kRealm } = require_symbols2();
    var assert = require("assert");
    var { safelyExtractBody } = require_body();
    var {
      redirectStatusSet,
      nullBodyStatus,
      safeMethodsSet,
      requestBodyHeader,
      subresourceSet,
      DOMException: DOMException2
    } = require_constants2();
    var { kHeadersList } = require_symbols();
    var EE = require("events");
    var { Readable, pipeline } = require("stream");
    var { addAbortListener, isErrored, isReadable, nodeMajor, nodeMinor } = require_util();
    var { dataURLProcessor, serializeAMimeType } = require_dataURL();
    var { TransformStream } = require("stream/web");
    var { getGlobalDispatcher } = require_global2();
    var { webidl } = require_webidl();
    var { STATUS_CODES } = require("http");
    var GET_OR_HEAD = ["GET", "HEAD"];
    var resolveObjectURL;
    var ReadableStream = globalThis.ReadableStream;
    var Fetch = class extends EE {
      constructor(dispatcher) {
        super();
        this.dispatcher = dispatcher;
        this.connection = null;
        this.dump = false;
        this.state = "ongoing";
        this.setMaxListeners(21);
      }
      terminate(reason) {
        if (this.state !== "ongoing") {
          return;
        }
        this.state = "terminated";
        this.connection?.destroy(reason);
        this.emit("terminated", reason);
      }
      // https://fetch.spec.whatwg.org/#fetch-controller-abort
      abort(error) {
        if (this.state !== "ongoing") {
          return;
        }
        this.state = "aborted";
        if (!error) {
          error = new DOMException2("The operation was aborted.", "AbortError");
        }
        this.serializedAbortReason = error;
        this.connection?.destroy(error);
        this.emit("terminated", error);
      }
    };
    function fetch2(input, init = {}) {
      webidl.argumentLengthCheck(arguments, 1, { header: "globalThis.fetch" });
      const p = createDeferredPromise();
      let requestObject;
      try {
        requestObject = new Request(input, init);
      } catch (e) {
        p.reject(e);
        return p.promise;
      }
      const request2 = requestObject[kState];
      if (requestObject.signal.aborted) {
        abortFetch(p, request2, null, requestObject.signal.reason);
        return p.promise;
      }
      const globalObject = request2.client.globalObject;
      if (globalObject?.constructor?.name === "ServiceWorkerGlobalScope") {
        request2.serviceWorkers = "none";
      }
      let responseObject = null;
      const relevantRealm = null;
      let locallyAborted = false;
      let controller = null;
      addAbortListener(
        requestObject.signal,
        () => {
          locallyAborted = true;
          assert(controller != null);
          controller.abort(requestObject.signal.reason);
          abortFetch(p, request2, responseObject, requestObject.signal.reason);
        }
      );
      const handleFetchDone = (response) => finalizeAndReportTiming(response, "fetch");
      const processResponse = (response) => {
        if (locallyAborted) {
          return Promise.resolve();
        }
        if (response.aborted) {
          abortFetch(p, request2, responseObject, controller.serializedAbortReason);
          return Promise.resolve();
        }
        if (response.type === "error") {
          p.reject(
            Object.assign(new TypeError("fetch failed"), { cause: response.error })
          );
          return Promise.resolve();
        }
        responseObject = new Response();
        responseObject[kState] = response;
        responseObject[kRealm] = relevantRealm;
        responseObject[kHeaders][kHeadersList] = response.headersList;
        responseObject[kHeaders][kGuard] = "immutable";
        responseObject[kHeaders][kRealm] = relevantRealm;
        p.resolve(responseObject);
      };
      controller = fetching({
        request: request2,
        processResponseEndOfBody: handleFetchDone,
        processResponse,
        dispatcher: init.dispatcher ?? getGlobalDispatcher()
        // undici
      });
      return p.promise;
    }
    function finalizeAndReportTiming(response, initiatorType = "other") {
      if (response.type === "error" && response.aborted) {
        return;
      }
      if (!response.urlList?.length) {
        return;
      }
      const originalURL = response.urlList[0];
      let timingInfo = response.timingInfo;
      let cacheState = response.cacheState;
      if (!urlIsHttpHttpsScheme(originalURL)) {
        return;
      }
      if (timingInfo === null) {
        return;
      }
      if (!response.timingAllowPassed) {
        timingInfo = createOpaqueTimingInfo({
          startTime: timingInfo.startTime
        });
        cacheState = "";
      }
      timingInfo.endTime = coarsenedSharedCurrentTime();
      response.timingInfo = timingInfo;
      markResourceTiming(
        timingInfo,
        originalURL,
        initiatorType,
        globalThis,
        cacheState
      );
    }
    function markResourceTiming(timingInfo, originalURL, initiatorType, globalThis2, cacheState) {
      if (nodeMajor > 18 || nodeMajor === 18 && nodeMinor >= 2) {
        performance.markResourceTiming(timingInfo, originalURL.href, initiatorType, globalThis2, cacheState);
      }
    }
    function abortFetch(p, request2, responseObject, error) {
      if (!error) {
        error = new DOMException2("The operation was aborted.", "AbortError");
      }
      p.reject(error);
      if (request2.body != null && isReadable(request2.body?.stream)) {
        request2.body.stream.cancel(error).catch((err) => {
          if (err.code === "ERR_INVALID_STATE") {
            return;
          }
          throw err;
        });
      }
      if (responseObject == null) {
        return;
      }
      const response = responseObject[kState];
      if (response.body != null && isReadable(response.body?.stream)) {
        response.body.stream.cancel(error).catch((err) => {
          if (err.code === "ERR_INVALID_STATE") {
            return;
          }
          throw err;
        });
      }
    }
    function fetching({
      request: request2,
      processRequestBodyChunkLength,
      processRequestEndOfBody,
      processResponse,
      processResponseEndOfBody,
      processResponseConsumeBody,
      useParallelQueue = false,
      dispatcher
      // undici
    }) {
      let taskDestination = null;
      let crossOriginIsolatedCapability = false;
      if (request2.client != null) {
        taskDestination = request2.client.globalObject;
        crossOriginIsolatedCapability = request2.client.crossOriginIsolatedCapability;
      }
      const currenTime = coarsenedSharedCurrentTime(crossOriginIsolatedCapability);
      const timingInfo = createOpaqueTimingInfo({
        startTime: currenTime
      });
      const fetchParams = {
        controller: new Fetch(dispatcher),
        request: request2,
        timingInfo,
        processRequestBodyChunkLength,
        processRequestEndOfBody,
        processResponse,
        processResponseConsumeBody,
        processResponseEndOfBody,
        taskDestination,
        crossOriginIsolatedCapability
      };
      assert(!request2.body || request2.body.stream);
      if (request2.window === "client") {
        request2.window = request2.client?.globalObject?.constructor?.name === "Window" ? request2.client : "no-window";
      }
      if (request2.origin === "client") {
        request2.origin = request2.client?.origin;
      }
      if (request2.policyContainer === "client") {
        if (request2.client != null) {
          request2.policyContainer = clonePolicyContainer(
            request2.client.policyContainer
          );
        } else {
          request2.policyContainer = makePolicyContainer();
        }
      }
      if (!request2.headersList.contains("accept")) {
        const value = "*/*";
        request2.headersList.append("accept", value);
      }
      if (!request2.headersList.contains("accept-language")) {
        request2.headersList.append("accept-language", "*");
      }
      if (request2.priority === null) {
      }
      if (subresourceSet.has(request2.destination)) {
      }
      mainFetch(fetchParams).catch((err) => {
        fetchParams.controller.terminate(err);
      });
      return fetchParams.controller;
    }
    async function mainFetch(fetchParams, recursive = false) {
      const request2 = fetchParams.request;
      let response = null;
      if (request2.localURLsOnly && !urlIsLocal(requestCurrentURL(request2))) {
        response = makeNetworkError("local URLs only");
      }
      tryUpgradeRequestToAPotentiallyTrustworthyURL(request2);
      if (requestBadPort(request2) === "blocked") {
        response = makeNetworkError("bad port");
      }
      if (request2.referrerPolicy === "") {
        request2.referrerPolicy = request2.policyContainer.referrerPolicy;
      }
      if (request2.referrer !== "no-referrer") {
        request2.referrer = determineRequestsReferrer(request2);
      }
      if (response === null) {
        response = await (async () => {
          const currentURL = requestCurrentURL(request2);
          if (
            // - request’s current URL’s origin is same origin with request’s origin,
            //   and request’s response tainting is "basic"
            sameOrigin(currentURL, request2.url) && request2.responseTainting === "basic" || // request’s current URL’s scheme is "data"
            currentURL.protocol === "data:" || // - request’s mode is "navigate" or "websocket"
            (request2.mode === "navigate" || request2.mode === "websocket")
          ) {
            request2.responseTainting = "basic";
            return await schemeFetch(fetchParams);
          }
          if (request2.mode === "same-origin") {
            return makeNetworkError('request mode cannot be "same-origin"');
          }
          if (request2.mode === "no-cors") {
            if (request2.redirect !== "follow") {
              return makeNetworkError(
                'redirect mode cannot be "follow" for "no-cors" request'
              );
            }
            request2.responseTainting = "opaque";
            return await schemeFetch(fetchParams);
          }
          if (!urlIsHttpHttpsScheme(requestCurrentURL(request2))) {
            return makeNetworkError("URL scheme must be a HTTP(S) scheme");
          }
          request2.responseTainting = "cors";
          return await httpFetch(fetchParams);
        })();
      }
      if (recursive) {
        return response;
      }
      if (response.status !== 0 && !response.internalResponse) {
        if (request2.responseTainting === "cors") {
        }
        if (request2.responseTainting === "basic") {
          response = filterResponse(response, "basic");
        } else if (request2.responseTainting === "cors") {
          response = filterResponse(response, "cors");
        } else if (request2.responseTainting === "opaque") {
          response = filterResponse(response, "opaque");
        } else {
          assert(false);
        }
      }
      let internalResponse = response.status === 0 ? response : response.internalResponse;
      if (internalResponse.urlList.length === 0) {
        internalResponse.urlList.push(...request2.urlList);
      }
      if (!request2.timingAllowFailed) {
        response.timingAllowPassed = true;
      }
      if (response.type === "opaque" && internalResponse.status === 206 && internalResponse.rangeRequested && !request2.headers.contains("range")) {
        response = internalResponse = makeNetworkError();
      }
      if (response.status !== 0 && (request2.method === "HEAD" || request2.method === "CONNECT" || nullBodyStatus.includes(internalResponse.status))) {
        internalResponse.body = null;
        fetchParams.controller.dump = true;
      }
      if (request2.integrity) {
        const processBodyError = (reason) => fetchFinale(fetchParams, makeNetworkError(reason));
        if (request2.responseTainting === "opaque" || response.body == null) {
          processBodyError(response.error);
          return;
        }
        const processBody = (bytes) => {
          if (!bytesMatch(bytes, request2.integrity)) {
            processBodyError("integrity mismatch");
            return;
          }
          response.body = safelyExtractBody(bytes)[0];
          fetchFinale(fetchParams, response);
        };
        await fullyReadBody(response.body, processBody, processBodyError);
      } else {
        fetchFinale(fetchParams, response);
      }
    }
    function schemeFetch(fetchParams) {
      if (isCancelled(fetchParams) && fetchParams.request.redirectCount === 0) {
        return Promise.resolve(makeAppropriateNetworkError(fetchParams));
      }
      const { request: request2 } = fetchParams;
      const { protocol: scheme } = requestCurrentURL(request2);
      switch (scheme) {
        case "about:": {
          return Promise.resolve(makeNetworkError("about scheme is not supported"));
        }
        case "blob:": {
          if (!resolveObjectURL) {
            resolveObjectURL = require("buffer").resolveObjectURL;
          }
          const blobURLEntry = requestCurrentURL(request2);
          if (blobURLEntry.search.length !== 0) {
            return Promise.resolve(makeNetworkError("NetworkError when attempting to fetch resource."));
          }
          const blobURLEntryObject = resolveObjectURL(blobURLEntry.toString());
          if (request2.method !== "GET" || !isBlobLike(blobURLEntryObject)) {
            return Promise.resolve(makeNetworkError("invalid method"));
          }
          const bodyWithType = safelyExtractBody(blobURLEntryObject);
          const body = bodyWithType[0];
          const length = isomorphicEncode(`${body.length}`);
          const type = bodyWithType[1] ?? "";
          const response = makeResponse({
            statusText: "OK",
            headersList: [
              ["content-length", { name: "Content-Length", value: length }],
              ["content-type", { name: "Content-Type", value: type }]
            ]
          });
          response.body = body;
          return Promise.resolve(response);
        }
        case "data:": {
          const currentURL = requestCurrentURL(request2);
          const dataURLStruct = dataURLProcessor(currentURL);
          if (dataURLStruct === "failure") {
            return Promise.resolve(makeNetworkError("failed to fetch the data URL"));
          }
          const mimeType = serializeAMimeType(dataURLStruct.mimeType);
          return Promise.resolve(makeResponse({
            statusText: "OK",
            headersList: [
              ["content-type", { name: "Content-Type", value: mimeType }]
            ],
            body: safelyExtractBody(dataURLStruct.body)[0]
          }));
        }
        case "file:": {
          return Promise.resolve(makeNetworkError("not implemented... yet..."));
        }
        case "http:":
        case "https:": {
          return httpFetch(fetchParams).catch((err) => makeNetworkError(err));
        }
        default: {
          return Promise.resolve(makeNetworkError("unknown scheme"));
        }
      }
    }
    function finalizeResponse(fetchParams, response) {
      fetchParams.request.done = true;
      if (fetchParams.processResponseDone != null) {
        queueMicrotask(() => fetchParams.processResponseDone(response));
      }
    }
    function fetchFinale(fetchParams, response) {
      if (response.type === "error") {
        response.urlList = [fetchParams.request.urlList[0]];
        response.timingInfo = createOpaqueTimingInfo({
          startTime: fetchParams.timingInfo.startTime
        });
      }
      const processResponseEndOfBody = () => {
        fetchParams.request.done = true;
        if (fetchParams.processResponseEndOfBody != null) {
          queueMicrotask(() => fetchParams.processResponseEndOfBody(response));
        }
      };
      if (fetchParams.processResponse != null) {
        queueMicrotask(() => fetchParams.processResponse(response));
      }
      if (response.body == null) {
        processResponseEndOfBody();
      } else {
        const identityTransformAlgorithm = (chunk, controller) => {
          controller.enqueue(chunk);
        };
        const transformStream = new TransformStream({
          start() {
          },
          transform: identityTransformAlgorithm,
          flush: processResponseEndOfBody
        }, {
          size() {
            return 1;
          }
        }, {
          size() {
            return 1;
          }
        });
        response.body = { stream: response.body.stream.pipeThrough(transformStream) };
      }
      if (fetchParams.processResponseConsumeBody != null) {
        const processBody = (nullOrBytes) => fetchParams.processResponseConsumeBody(response, nullOrBytes);
        const processBodyError = (failure) => fetchParams.processResponseConsumeBody(response, failure);
        if (response.body == null) {
          queueMicrotask(() => processBody(null));
        } else {
          return fullyReadBody(response.body, processBody, processBodyError);
        }
        return Promise.resolve();
      }
    }
    async function httpFetch(fetchParams) {
      const request2 = fetchParams.request;
      let response = null;
      let actualResponse = null;
      const timingInfo = fetchParams.timingInfo;
      if (request2.serviceWorkers === "all") {
      }
      if (response === null) {
        if (request2.redirect === "follow") {
          request2.serviceWorkers = "none";
        }
        actualResponse = response = await httpNetworkOrCacheFetch(fetchParams);
        if (request2.responseTainting === "cors" && corsCheck(request2, response) === "failure") {
          return makeNetworkError("cors failure");
        }
        if (TAOCheck(request2, response) === "failure") {
          request2.timingAllowFailed = true;
        }
      }
      if ((request2.responseTainting === "opaque" || response.type === "opaque") && crossOriginResourcePolicyCheck(
        request2.origin,
        request2.client,
        request2.destination,
        actualResponse
      ) === "blocked") {
        return makeNetworkError("blocked");
      }
      if (redirectStatusSet.has(actualResponse.status)) {
        if (request2.redirect !== "manual") {
          fetchParams.controller.connection.destroy();
        }
        if (request2.redirect === "error") {
          response = makeNetworkError("unexpected redirect");
        } else if (request2.redirect === "manual") {
          response = actualResponse;
        } else if (request2.redirect === "follow") {
          response = await httpRedirectFetch(fetchParams, response);
        } else {
          assert(false);
        }
      }
      response.timingInfo = timingInfo;
      return response;
    }
    function httpRedirectFetch(fetchParams, response) {
      const request2 = fetchParams.request;
      const actualResponse = response.internalResponse ? response.internalResponse : response;
      let locationURL;
      try {
        locationURL = responseLocationURL(
          actualResponse,
          requestCurrentURL(request2).hash
        );
        if (locationURL == null) {
          return response;
        }
      } catch (err) {
        return Promise.resolve(makeNetworkError(err));
      }
      if (!urlIsHttpHttpsScheme(locationURL)) {
        return Promise.resolve(makeNetworkError("URL scheme must be a HTTP(S) scheme"));
      }
      if (request2.redirectCount === 20) {
        return Promise.resolve(makeNetworkError("redirect count exceeded"));
      }
      request2.redirectCount += 1;
      if (request2.mode === "cors" && (locationURL.username || locationURL.password) && !sameOrigin(request2, locationURL)) {
        return Promise.resolve(makeNetworkError('cross origin not allowed for request mode "cors"'));
      }
      if (request2.responseTainting === "cors" && (locationURL.username || locationURL.password)) {
        return Promise.resolve(makeNetworkError(
          'URL cannot contain credentials for request mode "cors"'
        ));
      }
      if (actualResponse.status !== 303 && request2.body != null && request2.body.source == null) {
        return Promise.resolve(makeNetworkError());
      }
      if ([301, 302].includes(actualResponse.status) && request2.method === "POST" || actualResponse.status === 303 && !GET_OR_HEAD.includes(request2.method)) {
        request2.method = "GET";
        request2.body = null;
        for (const headerName of requestBodyHeader) {
          request2.headersList.delete(headerName);
        }
      }
      if (!sameOrigin(requestCurrentURL(request2), locationURL)) {
        request2.headersList.delete("authorization");
        request2.headersList.delete("proxy-authorization", true);
        request2.headersList.delete("cookie");
        request2.headersList.delete("host");
      }
      if (request2.body != null) {
        assert(request2.body.source != null);
        request2.body = safelyExtractBody(request2.body.source)[0];
      }
      const timingInfo = fetchParams.timingInfo;
      timingInfo.redirectEndTime = timingInfo.postRedirectStartTime = coarsenedSharedCurrentTime(fetchParams.crossOriginIsolatedCapability);
      if (timingInfo.redirectStartTime === 0) {
        timingInfo.redirectStartTime = timingInfo.startTime;
      }
      request2.urlList.push(locationURL);
      setRequestReferrerPolicyOnRedirect(request2, actualResponse);
      return mainFetch(fetchParams, true);
    }
    async function httpNetworkOrCacheFetch(fetchParams, isAuthenticationFetch = false, isNewConnectionFetch = false) {
      const request2 = fetchParams.request;
      let httpFetchParams = null;
      let httpRequest = null;
      let response = null;
      const httpCache = null;
      const revalidatingFlag = false;
      if (request2.window === "no-window" && request2.redirect === "error") {
        httpFetchParams = fetchParams;
        httpRequest = request2;
      } else {
        httpRequest = makeRequest(request2);
        httpFetchParams = { ...fetchParams };
        httpFetchParams.request = httpRequest;
      }
      const includeCredentials = request2.credentials === "include" || request2.credentials === "same-origin" && request2.responseTainting === "basic";
      const contentLength = httpRequest.body ? httpRequest.body.length : null;
      let contentLengthHeaderValue = null;
      if (httpRequest.body == null && ["POST", "PUT"].includes(httpRequest.method)) {
        contentLengthHeaderValue = "0";
      }
      if (contentLength != null) {
        contentLengthHeaderValue = isomorphicEncode(`${contentLength}`);
      }
      if (contentLengthHeaderValue != null) {
        httpRequest.headersList.append("content-length", contentLengthHeaderValue);
      }
      if (contentLength != null && httpRequest.keepalive) {
      }
      if (httpRequest.referrer instanceof URL) {
        httpRequest.headersList.append("referer", isomorphicEncode(httpRequest.referrer.href));
      }
      appendRequestOriginHeader(httpRequest);
      appendFetchMetadata(httpRequest);
      if (!httpRequest.headersList.contains("user-agent")) {
        httpRequest.headersList.append("user-agent", typeof esbuildDetection === "undefined" ? "undici" : "node");
      }
      if (httpRequest.cache === "default" && (httpRequest.headersList.contains("if-modified-since") || httpRequest.headersList.contains("if-none-match") || httpRequest.headersList.contains("if-unmodified-since") || httpRequest.headersList.contains("if-match") || httpRequest.headersList.contains("if-range"))) {
        httpRequest.cache = "no-store";
      }
      if (httpRequest.cache === "no-cache" && !httpRequest.preventNoCacheCacheControlHeaderModification && !httpRequest.headersList.contains("cache-control")) {
        httpRequest.headersList.append("cache-control", "max-age=0");
      }
      if (httpRequest.cache === "no-store" || httpRequest.cache === "reload") {
        if (!httpRequest.headersList.contains("pragma")) {
          httpRequest.headersList.append("pragma", "no-cache");
        }
        if (!httpRequest.headersList.contains("cache-control")) {
          httpRequest.headersList.append("cache-control", "no-cache");
        }
      }
      if (httpRequest.headersList.contains("range")) {
        httpRequest.headersList.append("accept-encoding", "identity");
      }
      if (!httpRequest.headersList.contains("accept-encoding")) {
        if (urlHasHttpsScheme(requestCurrentURL(httpRequest))) {
          httpRequest.headersList.append("accept-encoding", "br, gzip, deflate");
        } else {
          httpRequest.headersList.append("accept-encoding", "gzip, deflate");
        }
      }
      httpRequest.headersList.delete("host");
      if (includeCredentials) {
      }
      if (httpCache == null) {
        httpRequest.cache = "no-store";
      }
      if (httpRequest.mode !== "no-store" && httpRequest.mode !== "reload") {
      }
      if (response == null) {
        if (httpRequest.mode === "only-if-cached") {
          return makeNetworkError("only if cached");
        }
        const forwardResponse = await httpNetworkFetch(
          httpFetchParams,
          includeCredentials,
          isNewConnectionFetch
        );
        if (!safeMethodsSet.has(httpRequest.method) && forwardResponse.status >= 200 && forwardResponse.status <= 399) {
        }
        if (revalidatingFlag && forwardResponse.status === 304) {
        }
        if (response == null) {
          response = forwardResponse;
        }
      }
      response.urlList = [...httpRequest.urlList];
      if (httpRequest.headersList.contains("range")) {
        response.rangeRequested = true;
      }
      response.requestIncludesCredentials = includeCredentials;
      if (response.status === 407) {
        if (request2.window === "no-window") {
          return makeNetworkError();
        }
        if (isCancelled(fetchParams)) {
          return makeAppropriateNetworkError(fetchParams);
        }
        return makeNetworkError("proxy authentication required");
      }
      if (
        // response’s status is 421
        response.status === 421 && // isNewConnectionFetch is false
        !isNewConnectionFetch && // request’s body is null, or request’s body is non-null and request’s body’s source is non-null
        (request2.body == null || request2.body.source != null)
      ) {
        if (isCancelled(fetchParams)) {
          return makeAppropriateNetworkError(fetchParams);
        }
        fetchParams.controller.connection.destroy();
        response = await httpNetworkOrCacheFetch(
          fetchParams,
          isAuthenticationFetch,
          true
        );
      }
      if (isAuthenticationFetch) {
      }
      return response;
    }
    async function httpNetworkFetch(fetchParams, includeCredentials = false, forceNewConnection = false) {
      assert(!fetchParams.controller.connection || fetchParams.controller.connection.destroyed);
      fetchParams.controller.connection = {
        abort: null,
        destroyed: false,
        destroy(err) {
          if (!this.destroyed) {
            this.destroyed = true;
            this.abort?.(err ?? new DOMException2("The operation was aborted.", "AbortError"));
          }
        }
      };
      const request2 = fetchParams.request;
      let response = null;
      const timingInfo = fetchParams.timingInfo;
      const httpCache = null;
      if (httpCache == null) {
        request2.cache = "no-store";
      }
      const newConnection = forceNewConnection ? "yes" : "no";
      if (request2.mode === "websocket") {
      } else {
      }
      let requestBody = null;
      if (request2.body == null && fetchParams.processRequestEndOfBody) {
        queueMicrotask(() => fetchParams.processRequestEndOfBody());
      } else if (request2.body != null) {
        const processBodyChunk = async function* (bytes) {
          if (isCancelled(fetchParams)) {
            return;
          }
          yield bytes;
          fetchParams.processRequestBodyChunkLength?.(bytes.byteLength);
        };
        const processEndOfBody = () => {
          if (isCancelled(fetchParams)) {
            return;
          }
          if (fetchParams.processRequestEndOfBody) {
            fetchParams.processRequestEndOfBody();
          }
        };
        const processBodyError = (e) => {
          if (isCancelled(fetchParams)) {
            return;
          }
          if (e.name === "AbortError") {
            fetchParams.controller.abort();
          } else {
            fetchParams.controller.terminate(e);
          }
        };
        requestBody = (async function* () {
          try {
            for await (const bytes of request2.body.stream) {
              yield* processBodyChunk(bytes);
            }
            processEndOfBody();
          } catch (err) {
            processBodyError(err);
          }
        })();
      }
      try {
        const { body, status, statusText, headersList, socket } = await dispatch({ body: requestBody });
        if (socket) {
          response = makeResponse({ status, statusText, headersList, socket });
        } else {
          const iterator2 = body[Symbol.asyncIterator]();
          fetchParams.controller.next = () => iterator2.next();
          response = makeResponse({ status, statusText, headersList });
        }
      } catch (err) {
        if (err.name === "AbortError") {
          fetchParams.controller.connection.destroy();
          return makeAppropriateNetworkError(fetchParams, err);
        }
        return makeNetworkError(err);
      }
      const pullAlgorithm = () => {
        fetchParams.controller.resume();
      };
      const cancelAlgorithm = (reason) => {
        fetchParams.controller.abort(reason);
      };
      if (!ReadableStream) {
        ReadableStream = require("stream/web").ReadableStream;
      }
      const stream = new ReadableStream(
        {
          async start(controller) {
            fetchParams.controller.controller = controller;
          },
          async pull(controller) {
            await pullAlgorithm(controller);
          },
          async cancel(reason) {
            await cancelAlgorithm(reason);
          }
        },
        {
          highWaterMark: 0,
          size() {
            return 1;
          }
        }
      );
      response.body = { stream };
      fetchParams.controller.on("terminated", onAborted);
      fetchParams.controller.resume = async () => {
        while (true) {
          let bytes;
          let isFailure;
          try {
            const { done, value } = await fetchParams.controller.next();
            if (isAborted(fetchParams)) {
              break;
            }
            bytes = done ? void 0 : value;
          } catch (err) {
            if (fetchParams.controller.ended && !timingInfo.encodedBodySize) {
              bytes = void 0;
            } else {
              bytes = err;
              isFailure = true;
            }
          }
          if (bytes === void 0) {
            readableStreamClose(fetchParams.controller.controller);
            finalizeResponse(fetchParams, response);
            return;
          }
          timingInfo.decodedBodySize += bytes?.byteLength ?? 0;
          if (isFailure) {
            fetchParams.controller.terminate(bytes);
            return;
          }
          fetchParams.controller.controller.enqueue(new Uint8Array(bytes));
          if (isErrored(stream)) {
            fetchParams.controller.terminate();
            return;
          }
          if (!fetchParams.controller.controller.desiredSize) {
            return;
          }
        }
      };
      function onAborted(reason) {
        if (isAborted(fetchParams)) {
          response.aborted = true;
          if (isReadable(stream)) {
            fetchParams.controller.controller.error(
              fetchParams.controller.serializedAbortReason
            );
          }
        } else {
          if (isReadable(stream)) {
            fetchParams.controller.controller.error(new TypeError("terminated", {
              cause: isErrorLike(reason) ? reason : void 0
            }));
          }
        }
        fetchParams.controller.connection.destroy();
      }
      return response;
      async function dispatch({ body }) {
        const url = requestCurrentURL(request2);
        const agent = fetchParams.controller.dispatcher;
        return new Promise((resolve, reject) => agent.dispatch(
          {
            path: url.pathname + url.search,
            origin: url.origin,
            method: request2.method,
            body: fetchParams.controller.dispatcher.isMockActive ? request2.body && (request2.body.source || request2.body.stream) : body,
            headers: request2.headersList.entries,
            maxRedirections: 0,
            upgrade: request2.mode === "websocket" ? "websocket" : void 0
          },
          {
            body: null,
            abort: null,
            onConnect(abort) {
              const { connection } = fetchParams.controller;
              if (connection.destroyed) {
                abort(new DOMException2("The operation was aborted.", "AbortError"));
              } else {
                fetchParams.controller.on("terminated", abort);
                this.abort = connection.abort = abort;
              }
            },
            onHeaders(status, headersList, resume, statusText) {
              if (status < 200) {
                return;
              }
              let codings = [];
              let location = "";
              const headers = new Headers();
              if (Array.isArray(headersList)) {
                for (let n = 0; n < headersList.length; n += 2) {
                  const key = headersList[n + 0].toString("latin1");
                  const val = headersList[n + 1].toString("latin1");
                  if (key.toLowerCase() === "content-encoding") {
                    codings = val.toLowerCase().split(",").map((x) => x.trim());
                  } else if (key.toLowerCase() === "location") {
                    location = val;
                  }
                  headers[kHeadersList].append(key, val);
                }
              } else {
                const keys = Object.keys(headersList);
                for (const key of keys) {
                  const val = headersList[key];
                  if (key.toLowerCase() === "content-encoding") {
                    codings = val.toLowerCase().split(",").map((x) => x.trim()).reverse();
                  } else if (key.toLowerCase() === "location") {
                    location = val;
                  }
                  headers[kHeadersList].append(key, val);
                }
              }
              this.body = new Readable({ read: resume });
              const decoders = [];
              const willFollow = request2.redirect === "follow" && location && redirectStatusSet.has(status);
              if (request2.method !== "HEAD" && request2.method !== "CONNECT" && !nullBodyStatus.includes(status) && !willFollow) {
                for (const coding of codings) {
                  if (coding === "x-gzip" || coding === "gzip") {
                    decoders.push(zlib.createGunzip({
                      // Be less strict when decoding compressed responses, since sometimes
                      // servers send slightly invalid responses that are still accepted
                      // by common browsers.
                      // Always using Z_SYNC_FLUSH is what cURL does.
                      flush: zlib.constants.Z_SYNC_FLUSH,
                      finishFlush: zlib.constants.Z_SYNC_FLUSH
                    }));
                  } else if (coding === "deflate") {
                    decoders.push(zlib.createInflate());
                  } else if (coding === "br") {
                    decoders.push(zlib.createBrotliDecompress());
                  } else {
                    decoders.length = 0;
                    break;
                  }
                }
              }
              resolve({
                status,
                statusText,
                headersList: headers[kHeadersList],
                body: decoders.length ? pipeline(this.body, ...decoders, () => {
                }) : this.body.on("error", () => {
                })
              });
              return true;
            },
            onData(chunk) {
              if (fetchParams.controller.dump) {
                return;
              }
              const bytes = chunk;
              timingInfo.encodedBodySize += bytes.byteLength;
              return this.body.push(bytes);
            },
            onComplete() {
              if (this.abort) {
                fetchParams.controller.off("terminated", this.abort);
              }
              fetchParams.controller.ended = true;
              this.body.push(null);
            },
            onError(error) {
              if (this.abort) {
                fetchParams.controller.off("terminated", this.abort);
              }
              this.body?.destroy(error);
              fetchParams.controller.terminate(error);
              reject(error);
            },
            onUpgrade(status, headersList, socket) {
              if (status !== 101) {
                return;
              }
              const headers = new Headers();
              for (let n = 0; n < headersList.length; n += 2) {
                const key = headersList[n + 0].toString("latin1");
                const val = headersList[n + 1].toString("latin1");
                headers[kHeadersList].append(key, val);
              }
              resolve({
                status,
                statusText: STATUS_CODES[status],
                headersList: headers[kHeadersList],
                socket
              });
              return true;
            }
          }
        ));
      }
    }
    module2.exports = {
      fetch: fetch2,
      Fetch,
      fetching,
      finalizeAndReportTiming
    };
  }
});

// node_modules/undici/lib/fileapi/symbols.js
var require_symbols3 = __commonJS({
  "node_modules/undici/lib/fileapi/symbols.js"(exports2, module2) {
    "use strict";
    module2.exports = {
      kState: Symbol("FileReader state"),
      kResult: Symbol("FileReader result"),
      kError: Symbol("FileReader error"),
      kLastProgressEventFired: Symbol("FileReader last progress event fired timestamp"),
      kEvents: Symbol("FileReader events"),
      kAborted: Symbol("FileReader aborted")
    };
  }
});

// node_modules/undici/lib/fileapi/progressevent.js
var require_progressevent = __commonJS({
  "node_modules/undici/lib/fileapi/progressevent.js"(exports2, module2) {
    "use strict";
    var { webidl } = require_webidl();
    var kState = Symbol("ProgressEvent state");
    var ProgressEvent = class _ProgressEvent extends Event {
      constructor(type, eventInitDict = {}) {
        type = webidl.converters.DOMString(type);
        eventInitDict = webidl.converters.ProgressEventInit(eventInitDict ?? {});
        super(type, eventInitDict);
        this[kState] = {
          lengthComputable: eventInitDict.lengthComputable,
          loaded: eventInitDict.loaded,
          total: eventInitDict.total
        };
      }
      get lengthComputable() {
        webidl.brandCheck(this, _ProgressEvent);
        return this[kState].lengthComputable;
      }
      get loaded() {
        webidl.brandCheck(this, _ProgressEvent);
        return this[kState].loaded;
      }
      get total() {
        webidl.brandCheck(this, _ProgressEvent);
        return this[kState].total;
      }
    };
    webidl.converters.ProgressEventInit = webidl.dictionaryConverter([
      {
        key: "lengthComputable",
        converter: webidl.converters.boolean,
        defaultValue: false
      },
      {
        key: "loaded",
        converter: webidl.converters["unsigned long long"],
        defaultValue: 0
      },
      {
        key: "total",
        converter: webidl.converters["unsigned long long"],
        defaultValue: 0
      },
      {
        key: "bubbles",
        converter: webidl.converters.boolean,
        defaultValue: false
      },
      {
        key: "cancelable",
        converter: webidl.converters.boolean,
        defaultValue: false
      },
      {
        key: "composed",
        converter: webidl.converters.boolean,
        defaultValue: false
      }
    ]);
    module2.exports = {
      ProgressEvent
    };
  }
});

// node_modules/undici/lib/fileapi/encoding.js
var require_encoding = __commonJS({
  "node_modules/undici/lib/fileapi/encoding.js"(exports2, module2) {
    "use strict";
    function getEncoding(label) {
      if (!label) {
        return "failure";
      }
      switch (label.trim().toLowerCase()) {
        case "unicode-1-1-utf-8":
        case "unicode11utf8":
        case "unicode20utf8":
        case "utf-8":
        case "utf8":
        case "x-unicode20utf8":
          return "UTF-8";
        case "866":
        case "cp866":
        case "csibm866":
        case "ibm866":
          return "IBM866";
        case "csisolatin2":
        case "iso-8859-2":
        case "iso-ir-101":
        case "iso8859-2":
        case "iso88592":
        case "iso_8859-2":
        case "iso_8859-2:1987":
        case "l2":
        case "latin2":
          return "ISO-8859-2";
        case "csisolatin3":
        case "iso-8859-3":
        case "iso-ir-109":
        case "iso8859-3":
        case "iso88593":
        case "iso_8859-3":
        case "iso_8859-3:1988":
        case "l3":
        case "latin3":
          return "ISO-8859-3";
        case "csisolatin4":
        case "iso-8859-4":
        case "iso-ir-110":
        case "iso8859-4":
        case "iso88594":
        case "iso_8859-4":
        case "iso_8859-4:1988":
        case "l4":
        case "latin4":
          return "ISO-8859-4";
        case "csisolatincyrillic":
        case "cyrillic":
        case "iso-8859-5":
        case "iso-ir-144":
        case "iso8859-5":
        case "iso88595":
        case "iso_8859-5":
        case "iso_8859-5:1988":
          return "ISO-8859-5";
        case "arabic":
        case "asmo-708":
        case "csiso88596e":
        case "csiso88596i":
        case "csisolatinarabic":
        case "ecma-114":
        case "iso-8859-6":
        case "iso-8859-6-e":
        case "iso-8859-6-i":
        case "iso-ir-127":
        case "iso8859-6":
        case "iso88596":
        case "iso_8859-6":
        case "iso_8859-6:1987":
          return "ISO-8859-6";
        case "csisolatingreek":
        case "ecma-118":
        case "elot_928":
        case "greek":
        case "greek8":
        case "iso-8859-7":
        case "iso-ir-126":
        case "iso8859-7":
        case "iso88597":
        case "iso_8859-7":
        case "iso_8859-7:1987":
        case "sun_eu_greek":
          return "ISO-8859-7";
        case "csiso88598e":
        case "csisolatinhebrew":
        case "hebrew":
        case "iso-8859-8":
        case "iso-8859-8-e":
        case "iso-ir-138":
        case "iso8859-8":
        case "iso88598":
        case "iso_8859-8":
        case "iso_8859-8:1988":
        case "visual":
          return "ISO-8859-8";
        case "csiso88598i":
        case "iso-8859-8-i":
        case "logical":
          return "ISO-8859-8-I";
        case "csisolatin6":
        case "iso-8859-10":
        case "iso-ir-157":
        case "iso8859-10":
        case "iso885910":
        case "l6":
        case "latin6":
          return "ISO-8859-10";
        case "iso-8859-13":
        case "iso8859-13":
        case "iso885913":
          return "ISO-8859-13";
        case "iso-8859-14":
        case "iso8859-14":
        case "iso885914":
          return "ISO-8859-14";
        case "csisolatin9":
        case "iso-8859-15":
        case "iso8859-15":
        case "iso885915":
        case "iso_8859-15":
        case "l9":
          return "ISO-8859-15";
        case "iso-8859-16":
          return "ISO-8859-16";
        case "cskoi8r":
        case "koi":
        case "koi8":
        case "koi8-r":
        case "koi8_r":
          return "KOI8-R";
        case "koi8-ru":
        case "koi8-u":
          return "KOI8-U";
        case "csmacintosh":
        case "mac":
        case "macintosh":
        case "x-mac-roman":
          return "macintosh";
        case "iso-8859-11":
        case "iso8859-11":
        case "iso885911":
        case "tis-620":
        case "windows-874":
          return "windows-874";
        case "cp1250":
        case "windows-1250":
        case "x-cp1250":
          return "windows-1250";
        case "cp1251":
        case "windows-1251":
        case "x-cp1251":
          return "windows-1251";
        case "ansi_x3.4-1968":
        case "ascii":
        case "cp1252":
        case "cp819":
        case "csisolatin1":
        case "ibm819":
        case "iso-8859-1":
        case "iso-ir-100":
        case "iso8859-1":
        case "iso88591":
        case "iso_8859-1":
        case "iso_8859-1:1987":
        case "l1":
        case "latin1":
        case "us-ascii":
        case "windows-1252":
        case "x-cp1252":
          return "windows-1252";
        case "cp1253":
        case "windows-1253":
        case "x-cp1253":
          return "windows-1253";
        case "cp1254":
        case "csisolatin5":
        case "iso-8859-9":
        case "iso-ir-148":
        case "iso8859-9":
        case "iso88599":
        case "iso_8859-9":
        case "iso_8859-9:1989":
        case "l5":
        case "latin5":
        case "windows-1254":
        case "x-cp1254":
          return "windows-1254";
        case "cp1255":
        case "windows-1255":
        case "x-cp1255":
          return "windows-1255";
        case "cp1256":
        case "windows-1256":
        case "x-cp1256":
          return "windows-1256";
        case "cp1257":
        case "windows-1257":
        case "x-cp1257":
          return "windows-1257";
        case "cp1258":
        case "windows-1258":
        case "x-cp1258":
          return "windows-1258";
        case "x-mac-cyrillic":
        case "x-mac-ukrainian":
          return "x-mac-cyrillic";
        case "chinese":
        case "csgb2312":
        case "csiso58gb231280":
        case "gb2312":
        case "gb_2312":
        case "gb_2312-80":
        case "gbk":
        case "iso-ir-58":
        case "x-gbk":
          return "GBK";
        case "gb18030":
          return "gb18030";
        case "big5":
        case "big5-hkscs":
        case "cn-big5":
        case "csbig5":
        case "x-x-big5":
          return "Big5";
        case "cseucpkdfmtjapanese":
        case "euc-jp":
        case "x-euc-jp":
          return "EUC-JP";
        case "csiso2022jp":
        case "iso-2022-jp":
          return "ISO-2022-JP";
        case "csshiftjis":
        case "ms932":
        case "ms_kanji":
        case "shift-jis":
        case "shift_jis":
        case "sjis":
        case "windows-31j":
        case "x-sjis":
          return "Shift_JIS";
        case "cseuckr":
        case "csksc56011987":
        case "euc-kr":
        case "iso-ir-149":
        case "korean":
        case "ks_c_5601-1987":
        case "ks_c_5601-1989":
        case "ksc5601":
        case "ksc_5601":
        case "windows-949":
          return "EUC-KR";
        case "csiso2022kr":
        case "hz-gb-2312":
        case "iso-2022-cn":
        case "iso-2022-cn-ext":
        case "iso-2022-kr":
        case "replacement":
          return "replacement";
        case "unicodefffe":
        case "utf-16be":
          return "UTF-16BE";
        case "csunicode":
        case "iso-10646-ucs-2":
        case "ucs-2":
        case "unicode":
        case "unicodefeff":
        case "utf-16":
        case "utf-16le":
          return "UTF-16LE";
        case "x-user-defined":
          return "x-user-defined";
        default:
          return "failure";
      }
    }
    module2.exports = {
      getEncoding
    };
  }
});

// node_modules/undici/lib/fileapi/util.js
var require_util4 = __commonJS({
  "node_modules/undici/lib/fileapi/util.js"(exports2, module2) {
    "use strict";
    var {
      kState,
      kError,
      kResult,
      kAborted,
      kLastProgressEventFired
    } = require_symbols3();
    var { ProgressEvent } = require_progressevent();
    var { getEncoding } = require_encoding();
    var { DOMException: DOMException2 } = require_constants2();
    var { serializeAMimeType, parseMIMEType } = require_dataURL();
    var { types } = require("util");
    var { StringDecoder } = require("string_decoder");
    var { btoa } = require("buffer");
    var staticPropertyDescriptors = {
      enumerable: true,
      writable: false,
      configurable: false
    };
    function readOperation(fr, blob, type, encodingName) {
      if (fr[kState] === "loading") {
        throw new DOMException2("Invalid state", "InvalidStateError");
      }
      fr[kState] = "loading";
      fr[kResult] = null;
      fr[kError] = null;
      const stream = blob.stream();
      const reader = stream.getReader();
      const bytes = [];
      let chunkPromise = reader.read();
      let isFirstChunk = true;
      (async () => {
        while (!fr[kAborted]) {
          try {
            const { done, value } = await chunkPromise;
            if (isFirstChunk && !fr[kAborted]) {
              queueMicrotask(() => {
                fireAProgressEvent("loadstart", fr);
              });
            }
            isFirstChunk = false;
            if (!done && types.isUint8Array(value)) {
              bytes.push(value);
              if ((fr[kLastProgressEventFired] === void 0 || Date.now() - fr[kLastProgressEventFired] >= 50) && !fr[kAborted]) {
                fr[kLastProgressEventFired] = Date.now();
                queueMicrotask(() => {
                  fireAProgressEvent("progress", fr);
                });
              }
              chunkPromise = reader.read();
            } else if (done) {
              queueMicrotask(() => {
                fr[kState] = "done";
                try {
                  const result = packageData(bytes, type, blob.type, encodingName);
                  if (fr[kAborted]) {
                    return;
                  }
                  fr[kResult] = result;
                  fireAProgressEvent("load", fr);
                } catch (error) {
                  fr[kError] = error;
                  fireAProgressEvent("error", fr);
                }
                if (fr[kState] !== "loading") {
                  fireAProgressEvent("loadend", fr);
                }
              });
              break;
            }
          } catch (error) {
            if (fr[kAborted]) {
              return;
            }
            queueMicrotask(() => {
              fr[kState] = "done";
              fr[kError] = error;
              fireAProgressEvent("error", fr);
              if (fr[kState] !== "loading") {
                fireAProgressEvent("loadend", fr);
              }
            });
            break;
          }
        }
      })();
    }
    function fireAProgressEvent(e, reader) {
      const event = new ProgressEvent(e, {
        bubbles: false,
        cancelable: false
      });
      reader.dispatchEvent(event);
    }
    function packageData(bytes, type, mimeType, encodingName) {
      switch (type) {
        case "DataURL": {
          let dataURL = "data:";
          const parsed = parseMIMEType(mimeType || "application/octet-stream");
          if (parsed !== "failure") {
            dataURL += serializeAMimeType(parsed);
          }
          dataURL += ";base64,";
          const decoder = new StringDecoder("latin1");
          for (const chunk of bytes) {
            dataURL += btoa(decoder.write(chunk));
          }
          dataURL += btoa(decoder.end());
          return dataURL;
        }
        case "Text": {
          let encoding = "failure";
          if (encodingName) {
            encoding = getEncoding(encodingName);
          }
          if (encoding === "failure" && mimeType) {
            const type2 = parseMIMEType(mimeType);
            if (type2 !== "failure") {
              encoding = getEncoding(type2.parameters.get("charset"));
            }
          }
          if (encoding === "failure") {
            encoding = "UTF-8";
          }
          return decode(bytes, encoding);
        }
        case "ArrayBuffer": {
          const sequence = combineByteSequences(bytes);
          return sequence.buffer;
        }
        case "BinaryString": {
          let binaryString = "";
          const decoder = new StringDecoder("latin1");
          for (const chunk of bytes) {
            binaryString += decoder.write(chunk);
          }
          binaryString += decoder.end();
          return binaryString;
        }
      }
    }
    function decode(ioQueue, encoding) {
      const bytes = combineByteSequences(ioQueue);
      const BOMEncoding = BOMSniffing(bytes);
      let slice = 0;
      if (BOMEncoding !== null) {
        encoding = BOMEncoding;
        slice = BOMEncoding === "UTF-8" ? 3 : 2;
      }
      const sliced = bytes.slice(slice);
      return new TextDecoder(encoding).decode(sliced);
    }
    function BOMSniffing(ioQueue) {
      const [a, b, c] = ioQueue;
      if (a === 239 && b === 187 && c === 191) {
        return "UTF-8";
      } else if (a === 254 && b === 255) {
        return "UTF-16BE";
      } else if (a === 255 && b === 254) {
        return "UTF-16LE";
      }
      return null;
    }
    function combineByteSequences(sequences) {
      const size = sequences.reduce((a, b) => {
        return a + b.byteLength;
      }, 0);
      let offset = 0;
      return sequences.reduce((a, b) => {
        a.set(b, offset);
        offset += b.byteLength;
        return a;
      }, new Uint8Array(size));
    }
    module2.exports = {
      staticPropertyDescriptors,
      readOperation,
      fireAProgressEvent
    };
  }
});

// node_modules/undici/lib/fileapi/filereader.js
var require_filereader = __commonJS({
  "node_modules/undici/lib/fileapi/filereader.js"(exports2, module2) {
    "use strict";
    var {
      staticPropertyDescriptors,
      readOperation,
      fireAProgressEvent
    } = require_util4();
    var {
      kState,
      kError,
      kResult,
      kEvents,
      kAborted
    } = require_symbols3();
    var { webidl } = require_webidl();
    var { kEnumerableProperty } = require_util();
    var FileReader = class _FileReader extends EventTarget {
      constructor() {
        super();
        this[kState] = "empty";
        this[kResult] = null;
        this[kError] = null;
        this[kEvents] = {
          loadend: null,
          error: null,
          abort: null,
          load: null,
          progress: null,
          loadstart: null
        };
      }
      /**
       * @see https://w3c.github.io/FileAPI/#dfn-readAsArrayBuffer
       * @param {import('buffer').Blob} blob
       */
      readAsArrayBuffer(blob) {
        webidl.brandCheck(this, _FileReader);
        webidl.argumentLengthCheck(arguments, 1, { header: "FileReader.readAsArrayBuffer" });
        blob = webidl.converters.Blob(blob, { strict: false });
        readOperation(this, blob, "ArrayBuffer");
      }
      /**
       * @see https://w3c.github.io/FileAPI/#readAsBinaryString
       * @param {import('buffer').Blob} blob
       */
      readAsBinaryString(blob) {
        webidl.brandCheck(this, _FileReader);
        webidl.argumentLengthCheck(arguments, 1, { header: "FileReader.readAsBinaryString" });
        blob = webidl.converters.Blob(blob, { strict: false });
        readOperation(this, blob, "BinaryString");
      }
      /**
       * @see https://w3c.github.io/FileAPI/#readAsDataText
       * @param {import('buffer').Blob} blob
       * @param {string?} encoding
       */
      readAsText(blob, encoding = void 0) {
        webidl.brandCheck(this, _FileReader);
        webidl.argumentLengthCheck(arguments, 1, { header: "FileReader.readAsText" });
        blob = webidl.converters.Blob(blob, { strict: false });
        if (encoding !== void 0) {
          encoding = webidl.converters.DOMString(encoding);
        }
        readOperation(this, blob, "Text", encoding);
      }
      /**
       * @see https://w3c.github.io/FileAPI/#dfn-readAsDataURL
       * @param {import('buffer').Blob} blob
       */
      readAsDataURL(blob) {
        webidl.brandCheck(this, _FileReader);
        webidl.argumentLengthCheck(arguments, 1, { header: "FileReader.readAsDataURL" });
        blob = webidl.converters.Blob(blob, { strict: false });
        readOperation(this, blob, "DataURL");
      }
      /**
       * @see https://w3c.github.io/FileAPI/#dfn-abort
       */
      abort() {
        if (this[kState] === "empty" || this[kState] === "done") {
          this[kResult] = null;
          return;
        }
        if (this[kState] === "loading") {
          this[kState] = "done";
          this[kResult] = null;
        }
        this[kAborted] = true;
        fireAProgressEvent("abort", this);
        if (this[kState] !== "loading") {
          fireAProgressEvent("loadend", this);
        }
      }
      /**
       * @see https://w3c.github.io/FileAPI/#dom-filereader-readystate
       */
      get readyState() {
        webidl.brandCheck(this, _FileReader);
        switch (this[kState]) {
          case "empty":
            return this.EMPTY;
          case "loading":
            return this.LOADING;
          case "done":
            return this.DONE;
        }
      }
      /**
       * @see https://w3c.github.io/FileAPI/#dom-filereader-result
       */
      get result() {
        webidl.brandCheck(this, _FileReader);
        return this[kResult];
      }
      /**
       * @see https://w3c.github.io/FileAPI/#dom-filereader-error
       */
      get error() {
        webidl.brandCheck(this, _FileReader);
        return this[kError];
      }
      get onloadend() {
        webidl.brandCheck(this, _FileReader);
        return this[kEvents].loadend;
      }
      set onloadend(fn) {
        webidl.brandCheck(this, _FileReader);
        if (this[kEvents].loadend) {
          this.removeEventListener("loadend", this[kEvents].loadend);
        }
        if (typeof fn === "function") {
          this[kEvents].loadend = fn;
          this.addEventListener("loadend", fn);
        } else {
          this[kEvents].loadend = null;
        }
      }
      get onerror() {
        webidl.brandCheck(this, _FileReader);
        return this[kEvents].error;
      }
      set onerror(fn) {
        webidl.brandCheck(this, _FileReader);
        if (this[kEvents].error) {
          this.removeEventListener("error", this[kEvents].error);
        }
        if (typeof fn === "function") {
          this[kEvents].error = fn;
          this.addEventListener("error", fn);
        } else {
          this[kEvents].error = null;
        }
      }
      get onloadstart() {
        webidl.brandCheck(this, _FileReader);
        return this[kEvents].loadstart;
      }
      set onloadstart(fn) {
        webidl.brandCheck(this, _FileReader);
        if (this[kEvents].loadstart) {
          this.removeEventListener("loadstart", this[kEvents].loadstart);
        }
        if (typeof fn === "function") {
          this[kEvents].loadstart = fn;
          this.addEventListener("loadstart", fn);
        } else {
          this[kEvents].loadstart = null;
        }
      }
      get onprogress() {
        webidl.brandCheck(this, _FileReader);
        return this[kEvents].progress;
      }
      set onprogress(fn) {
        webidl.brandCheck(this, _FileReader);
        if (this[kEvents].progress) {
          this.removeEventListener("progress", this[kEvents].progress);
        }
        if (typeof fn === "function") {
          this[kEvents].progress = fn;
          this.addEventListener("progress", fn);
        } else {
          this[kEvents].progress = null;
        }
      }
      get onload() {
        webidl.brandCheck(this, _FileReader);
        return this[kEvents].load;
      }
      set onload(fn) {
        webidl.brandCheck(this, _FileReader);
        if (this[kEvents].load) {
          this.removeEventListener("load", this[kEvents].load);
        }
        if (typeof fn === "function") {
          this[kEvents].load = fn;
          this.addEventListener("load", fn);
        } else {
          this[kEvents].load = null;
        }
      }
      get onabort() {
        webidl.brandCheck(this, _FileReader);
        return this[kEvents].abort;
      }
      set onabort(fn) {
        webidl.brandCheck(this, _FileReader);
        if (this[kEvents].abort) {
          this.removeEventListener("abort", this[kEvents].abort);
        }
        if (typeof fn === "function") {
          this[kEvents].abort = fn;
          this.addEventListener("abort", fn);
        } else {
          this[kEvents].abort = null;
        }
      }
    };
    FileReader.EMPTY = FileReader.prototype.EMPTY = 0;
    FileReader.LOADING = FileReader.prototype.LOADING = 1;
    FileReader.DONE = FileReader.prototype.DONE = 2;
    Object.defineProperties(FileReader.prototype, {
      EMPTY: staticPropertyDescriptors,
      LOADING: staticPropertyDescriptors,
      DONE: staticPropertyDescriptors,
      readAsArrayBuffer: kEnumerableProperty,
      readAsBinaryString: kEnumerableProperty,
      readAsText: kEnumerableProperty,
      readAsDataURL: kEnumerableProperty,
      abort: kEnumerableProperty,
      readyState: kEnumerableProperty,
      result: kEnumerableProperty,
      error: kEnumerableProperty,
      onloadstart: kEnumerableProperty,
      onprogress: kEnumerableProperty,
      onload: kEnumerableProperty,
      onabort: kEnumerableProperty,
      onerror: kEnumerableProperty,
      onloadend: kEnumerableProperty,
      [Symbol.toStringTag]: {
        value: "FileReader",
        writable: false,
        enumerable: false,
        configurable: true
      }
    });
    Object.defineProperties(FileReader, {
      EMPTY: staticPropertyDescriptors,
      LOADING: staticPropertyDescriptors,
      DONE: staticPropertyDescriptors
    });
    module2.exports = {
      FileReader
    };
  }
});

// node_modules/undici/lib/cache/symbols.js
var require_symbols4 = __commonJS({
  "node_modules/undici/lib/cache/symbols.js"(exports2, module2) {
    "use strict";
    module2.exports = {
      kConstruct: require_symbols().kConstruct
    };
  }
});

// node_modules/undici/lib/cache/util.js
var require_util5 = __commonJS({
  "node_modules/undici/lib/cache/util.js"(exports2, module2) {
    "use strict";
    var assert = require("assert");
    var { URLSerializer } = require_dataURL();
    var { isValidHeaderName } = require_util2();
    function urlEquals(A, B, excludeFragment = false) {
      const serializedA = URLSerializer(A, excludeFragment);
      const serializedB = URLSerializer(B, excludeFragment);
      return serializedA === serializedB;
    }
    function fieldValues(header) {
      assert(header !== null);
      const values = [];
      for (let value of header.split(",")) {
        value = value.trim();
        if (!value.length) {
          continue;
        } else if (!isValidHeaderName(value)) {
          continue;
        }
        values.push(value);
      }
      return values;
    }
    module2.exports = {
      urlEquals,
      fieldValues
    };
  }
});

// node_modules/undici/lib/cache/cache.js
var require_cache = __commonJS({
  "node_modules/undici/lib/cache/cache.js"(exports2, module2) {
    "use strict";
    var { kConstruct } = require_symbols4();
    var { urlEquals, fieldValues: getFieldValues } = require_util5();
    var { kEnumerableProperty, isDisturbed } = require_util();
    var { kHeadersList } = require_symbols();
    var { webidl } = require_webidl();
    var { Response, cloneResponse } = require_response();
    var { Request } = require_request2();
    var { kState, kHeaders, kGuard, kRealm } = require_symbols2();
    var { fetching } = require_fetch();
    var { urlIsHttpHttpsScheme, createDeferredPromise, readAllBytes } = require_util2();
    var assert = require("assert");
    var { getGlobalDispatcher } = require_global2();
    var Cache = class _Cache {
      /**
       * @see https://w3c.github.io/ServiceWorker/#dfn-relevant-request-response-list
       * @type {requestResponseList}
       */
      #relevantRequestResponseList;
      constructor() {
        if (arguments[0] !== kConstruct) {
          webidl.illegalConstructor();
        }
        this.#relevantRequestResponseList = arguments[1];
      }
      async match(request2, options = {}) {
        webidl.brandCheck(this, _Cache);
        webidl.argumentLengthCheck(arguments, 1, { header: "Cache.match" });
        request2 = webidl.converters.RequestInfo(request2);
        options = webidl.converters.CacheQueryOptions(options);
        const p = await this.matchAll(request2, options);
        if (p.length === 0) {
          return;
        }
        return p[0];
      }
      async matchAll(request2 = void 0, options = {}) {
        webidl.brandCheck(this, _Cache);
        if (request2 !== void 0) request2 = webidl.converters.RequestInfo(request2);
        options = webidl.converters.CacheQueryOptions(options);
        let r = null;
        if (request2 !== void 0) {
          if (request2 instanceof Request) {
            r = request2[kState];
            if (r.method !== "GET" && !options.ignoreMethod) {
              return [];
            }
          } else if (typeof request2 === "string") {
            r = new Request(request2)[kState];
          }
        }
        const responses = [];
        if (request2 === void 0) {
          for (const requestResponse of this.#relevantRequestResponseList) {
            responses.push(requestResponse[1]);
          }
        } else {
          const requestResponses = this.#queryCache(r, options);
          for (const requestResponse of requestResponses) {
            responses.push(requestResponse[1]);
          }
        }
        const responseList = [];
        for (const response of responses) {
          const responseObject = new Response(response.body?.source ?? null);
          const body = responseObject[kState].body;
          responseObject[kState] = response;
          responseObject[kState].body = body;
          responseObject[kHeaders][kHeadersList] = response.headersList;
          responseObject[kHeaders][kGuard] = "immutable";
          responseList.push(responseObject);
        }
        return Object.freeze(responseList);
      }
      async add(request2) {
        webidl.brandCheck(this, _Cache);
        webidl.argumentLengthCheck(arguments, 1, { header: "Cache.add" });
        request2 = webidl.converters.RequestInfo(request2);
        const requests = [request2];
        const responseArrayPromise = this.addAll(requests);
        return await responseArrayPromise;
      }
      async addAll(requests) {
        webidl.brandCheck(this, _Cache);
        webidl.argumentLengthCheck(arguments, 1, { header: "Cache.addAll" });
        requests = webidl.converters["sequence<RequestInfo>"](requests);
        const responsePromises = [];
        const requestList = [];
        for (const request2 of requests) {
          if (typeof request2 === "string") {
            continue;
          }
          const r = request2[kState];
          if (!urlIsHttpHttpsScheme(r.url) || r.method !== "GET") {
            throw webidl.errors.exception({
              header: "Cache.addAll",
              message: "Expected http/s scheme when method is not GET."
            });
          }
        }
        const fetchControllers = [];
        for (const request2 of requests) {
          const r = new Request(request2)[kState];
          if (!urlIsHttpHttpsScheme(r.url)) {
            throw webidl.errors.exception({
              header: "Cache.addAll",
              message: "Expected http/s scheme."
            });
          }
          r.initiator = "fetch";
          r.destination = "subresource";
          requestList.push(r);
          const responsePromise = createDeferredPromise();
          fetchControllers.push(fetching({
            request: r,
            dispatcher: getGlobalDispatcher(),
            processResponse(response) {
              if (response.type === "error" || response.status === 206 || response.status < 200 || response.status > 299) {
                responsePromise.reject(webidl.errors.exception({
                  header: "Cache.addAll",
                  message: "Received an invalid status code or the request failed."
                }));
              } else if (response.headersList.contains("vary")) {
                const fieldValues = getFieldValues(response.headersList.get("vary"));
                for (const fieldValue of fieldValues) {
                  if (fieldValue === "*") {
                    responsePromise.reject(webidl.errors.exception({
                      header: "Cache.addAll",
                      message: "invalid vary field value"
                    }));
                    for (const controller of fetchControllers) {
                      controller.abort();
                    }
                    return;
                  }
                }
              }
            },
            processResponseEndOfBody(response) {
              if (response.aborted) {
                responsePromise.reject(new DOMException("aborted", "AbortError"));
                return;
              }
              responsePromise.resolve(response);
            }
          }));
          responsePromises.push(responsePromise.promise);
        }
        const p = Promise.all(responsePromises);
        const responses = await p;
        const operations = [];
        let index = 0;
        for (const response of responses) {
          const operation = {
            type: "put",
            // 7.3.2
            request: requestList[index],
            // 7.3.3
            response
            // 7.3.4
          };
          operations.push(operation);
          index++;
        }
        const cacheJobPromise = createDeferredPromise();
        let errorData = null;
        try {
          this.#batchCacheOperations(operations);
        } catch (e) {
          errorData = e;
        }
        queueMicrotask(() => {
          if (errorData === null) {
            cacheJobPromise.resolve(void 0);
          } else {
            cacheJobPromise.reject(errorData);
          }
        });
        return cacheJobPromise.promise;
      }
      async put(request2, response) {
        webidl.brandCheck(this, _Cache);
        webidl.argumentLengthCheck(arguments, 2, { header: "Cache.put" });
        request2 = webidl.converters.RequestInfo(request2);
        response = webidl.converters.Response(response);
        let innerRequest = null;
        if (request2 instanceof Request) {
          innerRequest = request2[kState];
        } else {
          innerRequest = new Request(request2)[kState];
        }
        if (!urlIsHttpHttpsScheme(innerRequest.url) || innerRequest.method !== "GET") {
          throw webidl.errors.exception({
            header: "Cache.put",
            message: "Expected an http/s scheme when method is not GET"
          });
        }
        const innerResponse = response[kState];
        if (innerResponse.status === 206) {
          throw webidl.errors.exception({
            header: "Cache.put",
            message: "Got 206 status"
          });
        }
        if (innerResponse.headersList.contains("vary")) {
          const fieldValues = getFieldValues(innerResponse.headersList.get("vary"));
          for (const fieldValue of fieldValues) {
            if (fieldValue === "*") {
              throw webidl.errors.exception({
                header: "Cache.put",
                message: "Got * vary field value"
              });
            }
          }
        }
        if (innerResponse.body && (isDisturbed(innerResponse.body.stream) || innerResponse.body.stream.locked)) {
          throw webidl.errors.exception({
            header: "Cache.put",
            message: "Response body is locked or disturbed"
          });
        }
        const clonedResponse = cloneResponse(innerResponse);
        const bodyReadPromise = createDeferredPromise();
        if (innerResponse.body != null) {
          const stream = innerResponse.body.stream;
          const reader = stream.getReader();
          readAllBytes(reader).then(bodyReadPromise.resolve, bodyReadPromise.reject);
        } else {
          bodyReadPromise.resolve(void 0);
        }
        const operations = [];
        const operation = {
          type: "put",
          // 14.
          request: innerRequest,
          // 15.
          response: clonedResponse
          // 16.
        };
        operations.push(operation);
        const bytes = await bodyReadPromise.promise;
        if (clonedResponse.body != null) {
          clonedResponse.body.source = bytes;
        }
        const cacheJobPromise = createDeferredPromise();
        let errorData = null;
        try {
          this.#batchCacheOperations(operations);
        } catch (e) {
          errorData = e;
        }
        queueMicrotask(() => {
          if (errorData === null) {
            cacheJobPromise.resolve();
          } else {
            cacheJobPromise.reject(errorData);
          }
        });
        return cacheJobPromise.promise;
      }
      async delete(request2, options = {}) {
        webidl.brandCheck(this, _Cache);
        webidl.argumentLengthCheck(arguments, 1, { header: "Cache.delete" });
        request2 = webidl.converters.RequestInfo(request2);
        options = webidl.converters.CacheQueryOptions(options);
        let r = null;
        if (request2 instanceof Request) {
          r = request2[kState];
          if (r.method !== "GET" && !options.ignoreMethod) {
            return false;
          }
        } else {
          assert(typeof request2 === "string");
          r = new Request(request2)[kState];
        }
        const operations = [];
        const operation = {
          type: "delete",
          request: r,
          options
        };
        operations.push(operation);
        const cacheJobPromise = createDeferredPromise();
        let errorData = null;
        let requestResponses;
        try {
          requestResponses = this.#batchCacheOperations(operations);
        } catch (e) {
          errorData = e;
        }
        queueMicrotask(() => {
          if (errorData === null) {
            cacheJobPromise.resolve(!!requestResponses?.length);
          } else {
            cacheJobPromise.reject(errorData);
          }
        });
        return cacheJobPromise.promise;
      }
      /**
       * @see https://w3c.github.io/ServiceWorker/#dom-cache-keys
       * @param {any} request
       * @param {import('../../types/cache').CacheQueryOptions} options
       * @returns {readonly Request[]}
       */
      async keys(request2 = void 0, options = {}) {
        webidl.brandCheck(this, _Cache);
        if (request2 !== void 0) request2 = webidl.converters.RequestInfo(request2);
        options = webidl.converters.CacheQueryOptions(options);
        let r = null;
        if (request2 !== void 0) {
          if (request2 instanceof Request) {
            r = request2[kState];
            if (r.method !== "GET" && !options.ignoreMethod) {
              return [];
            }
          } else if (typeof request2 === "string") {
            r = new Request(request2)[kState];
          }
        }
        const promise = createDeferredPromise();
        const requests = [];
        if (request2 === void 0) {
          for (const requestResponse of this.#relevantRequestResponseList) {
            requests.push(requestResponse[0]);
          }
        } else {
          const requestResponses = this.#queryCache(r, options);
          for (const requestResponse of requestResponses) {
            requests.push(requestResponse[0]);
          }
        }
        queueMicrotask(() => {
          const requestList = [];
          for (const request3 of requests) {
            const requestObject = new Request("https://a");
            requestObject[kState] = request3;
            requestObject[kHeaders][kHeadersList] = request3.headersList;
            requestObject[kHeaders][kGuard] = "immutable";
            requestObject[kRealm] = request3.client;
            requestList.push(requestObject);
          }
          promise.resolve(Object.freeze(requestList));
        });
        return promise.promise;
      }
      /**
       * @see https://w3c.github.io/ServiceWorker/#batch-cache-operations-algorithm
       * @param {CacheBatchOperation[]} operations
       * @returns {requestResponseList}
       */
      #batchCacheOperations(operations) {
        const cache = this.#relevantRequestResponseList;
        const backupCache = [...cache];
        const addedItems = [];
        const resultList = [];
        try {
          for (const operation of operations) {
            if (operation.type !== "delete" && operation.type !== "put") {
              throw webidl.errors.exception({
                header: "Cache.#batchCacheOperations",
                message: 'operation type does not match "delete" or "put"'
              });
            }
            if (operation.type === "delete" && operation.response != null) {
              throw webidl.errors.exception({
                header: "Cache.#batchCacheOperations",
                message: "delete operation should not have an associated response"
              });
            }
            if (this.#queryCache(operation.request, operation.options, addedItems).length) {
              throw new DOMException("???", "InvalidStateError");
            }
            let requestResponses;
            if (operation.type === "delete") {
              requestResponses = this.#queryCache(operation.request, operation.options);
              if (requestResponses.length === 0) {
                return [];
              }
              for (const requestResponse of requestResponses) {
                const idx = cache.indexOf(requestResponse);
                assert(idx !== -1);
                cache.splice(idx, 1);
              }
            } else if (operation.type === "put") {
              if (operation.response == null) {
                throw webidl.errors.exception({
                  header: "Cache.#batchCacheOperations",
                  message: "put operation should have an associated response"
                });
              }
              const r = operation.request;
              if (!urlIsHttpHttpsScheme(r.url)) {
                throw webidl.errors.exception({
                  header: "Cache.#batchCacheOperations",
                  message: "expected http or https scheme"
                });
              }
              if (r.method !== "GET") {
                throw webidl.errors.exception({
                  header: "Cache.#batchCacheOperations",
                  message: "not get method"
                });
              }
              if (operation.options != null) {
                throw webidl.errors.exception({
                  header: "Cache.#batchCacheOperations",
                  message: "options must not be defined"
                });
              }
              requestResponses = this.#queryCache(operation.request);
              for (const requestResponse of requestResponses) {
                const idx = cache.indexOf(requestResponse);
                assert(idx !== -1);
                cache.splice(idx, 1);
              }
              cache.push([operation.request, operation.response]);
              addedItems.push([operation.request, operation.response]);
            }
            resultList.push([operation.request, operation.response]);
          }
          return resultList;
        } catch (e) {
          this.#relevantRequestResponseList.length = 0;
          this.#relevantRequestResponseList = backupCache;
          throw e;
        }
      }
      /**
       * @see https://w3c.github.io/ServiceWorker/#query-cache
       * @param {any} requestQuery
       * @param {import('../../types/cache').CacheQueryOptions} options
       * @param {requestResponseList} targetStorage
       * @returns {requestResponseList}
       */
      #queryCache(requestQuery, options, targetStorage) {
        const resultList = [];
        const storage = targetStorage ?? this.#relevantRequestResponseList;
        for (const requestResponse of storage) {
          const [cachedRequest, cachedResponse] = requestResponse;
          if (this.#requestMatchesCachedItem(requestQuery, cachedRequest, cachedResponse, options)) {
            resultList.push(requestResponse);
          }
        }
        return resultList;
      }
      /**
       * @see https://w3c.github.io/ServiceWorker/#request-matches-cached-item-algorithm
       * @param {any} requestQuery
       * @param {any} request
       * @param {any | null} response
       * @param {import('../../types/cache').CacheQueryOptions | undefined} options
       * @returns {boolean}
       */
      #requestMatchesCachedItem(requestQuery, request2, response = null, options) {
        const queryURL = new URL(requestQuery.url);
        const cachedURL = new URL(request2.url);
        if (options?.ignoreSearch) {
          cachedURL.search = "";
          queryURL.search = "";
        }
        if (!urlEquals(queryURL, cachedURL, true)) {
          return false;
        }
        if (response == null || options?.ignoreVary || !response.headersList.contains("vary")) {
          return true;
        }
        const fieldValues = getFieldValues(response.headersList.get("vary"));
        for (const fieldValue of fieldValues) {
          if (fieldValue === "*") {
            return false;
          }
          const requestValue = request2.headersList.get(fieldValue);
          const queryValue = requestQuery.headersList.get(fieldValue);
          if (requestValue !== queryValue) {
            return false;
          }
        }
        return true;
      }
    };
    Object.defineProperties(Cache.prototype, {
      [Symbol.toStringTag]: {
        value: "Cache",
        configurable: true
      },
      match: kEnumerableProperty,
      matchAll: kEnumerableProperty,
      add: kEnumerableProperty,
      addAll: kEnumerableProperty,
      put: kEnumerableProperty,
      delete: kEnumerableProperty,
      keys: kEnumerableProperty
    });
    var cacheQueryOptionConverters = [
      {
        key: "ignoreSearch",
        converter: webidl.converters.boolean,
        defaultValue: false
      },
      {
        key: "ignoreMethod",
        converter: webidl.converters.boolean,
        defaultValue: false
      },
      {
        key: "ignoreVary",
        converter: webidl.converters.boolean,
        defaultValue: false
      }
    ];
    webidl.converters.CacheQueryOptions = webidl.dictionaryConverter(cacheQueryOptionConverters);
    webidl.converters.MultiCacheQueryOptions = webidl.dictionaryConverter([
      ...cacheQueryOptionConverters,
      {
        key: "cacheName",
        converter: webidl.converters.DOMString
      }
    ]);
    webidl.converters.Response = webidl.interfaceConverter(Response);
    webidl.converters["sequence<RequestInfo>"] = webidl.sequenceConverter(
      webidl.converters.RequestInfo
    );
    module2.exports = {
      Cache
    };
  }
});

// node_modules/undici/lib/cache/cachestorage.js
var require_cachestorage = __commonJS({
  "node_modules/undici/lib/cache/cachestorage.js"(exports2, module2) {
    "use strict";
    var { kConstruct } = require_symbols4();
    var { Cache } = require_cache();
    var { webidl } = require_webidl();
    var { kEnumerableProperty } = require_util();
    var CacheStorage = class _CacheStorage {
      /**
       * @see https://w3c.github.io/ServiceWorker/#dfn-relevant-name-to-cache-map
       * @type {Map<string, import('./cache').requestResponseList}
       */
      #caches = /* @__PURE__ */ new Map();
      constructor() {
        if (arguments[0] !== kConstruct) {
          webidl.illegalConstructor();
        }
      }
      async match(request2, options = {}) {
        webidl.brandCheck(this, _CacheStorage);
        webidl.argumentLengthCheck(arguments, 1, { header: "CacheStorage.match" });
        request2 = webidl.converters.RequestInfo(request2);
        options = webidl.converters.MultiCacheQueryOptions(options);
        if (options.cacheName != null) {
          if (this.#caches.has(options.cacheName)) {
            const cacheList = this.#caches.get(options.cacheName);
            const cache = new Cache(kConstruct, cacheList);
            return await cache.match(request2, options);
          }
        } else {
          for (const cacheList of this.#caches.values()) {
            const cache = new Cache(kConstruct, cacheList);
            const response = await cache.match(request2, options);
            if (response !== void 0) {
              return response;
            }
          }
        }
      }
      /**
       * @see https://w3c.github.io/ServiceWorker/#cache-storage-has
       * @param {string} cacheName
       * @returns {Promise<boolean>}
       */
      async has(cacheName) {
        webidl.brandCheck(this, _CacheStorage);
        webidl.argumentLengthCheck(arguments, 1, { header: "CacheStorage.has" });
        cacheName = webidl.converters.DOMString(cacheName);
        return this.#caches.has(cacheName);
      }
      /**
       * @see https://w3c.github.io/ServiceWorker/#dom-cachestorage-open
       * @param {string} cacheName
       * @returns {Promise<Cache>}
       */
      async open(cacheName) {
        webidl.brandCheck(this, _CacheStorage);
        webidl.argumentLengthCheck(arguments, 1, { header: "CacheStorage.open" });
        cacheName = webidl.converters.DOMString(cacheName);
        if (this.#caches.has(cacheName)) {
          const cache2 = this.#caches.get(cacheName);
          return new Cache(kConstruct, cache2);
        }
        const cache = [];
        this.#caches.set(cacheName, cache);
        return new Cache(kConstruct, cache);
      }
      /**
       * @see https://w3c.github.io/ServiceWorker/#cache-storage-delete
       * @param {string} cacheName
       * @returns {Promise<boolean>}
       */
      async delete(cacheName) {
        webidl.brandCheck(this, _CacheStorage);
        webidl.argumentLengthCheck(arguments, 1, { header: "CacheStorage.delete" });
        cacheName = webidl.converters.DOMString(cacheName);
        return this.#caches.delete(cacheName);
      }
      /**
       * @see https://w3c.github.io/ServiceWorker/#cache-storage-keys
       * @returns {string[]}
       */
      async keys() {
        webidl.brandCheck(this, _CacheStorage);
        const keys = this.#caches.keys();
        return [...keys];
      }
    };
    Object.defineProperties(CacheStorage.prototype, {
      [Symbol.toStringTag]: {
        value: "CacheStorage",
        configurable: true
      },
      match: kEnumerableProperty,
      has: kEnumerableProperty,
      open: kEnumerableProperty,
      delete: kEnumerableProperty,
      keys: kEnumerableProperty
    });
    module2.exports = {
      CacheStorage
    };
  }
});

// node_modules/undici/lib/cookies/constants.js
var require_constants4 = __commonJS({
  "node_modules/undici/lib/cookies/constants.js"(exports2, module2) {
    "use strict";
    var maxAttributeValueSize = 1024;
    var maxNameValuePairSize = 4096;
    module2.exports = {
      maxAttributeValueSize,
      maxNameValuePairSize
    };
  }
});

// node_modules/undici/lib/cookies/util.js
var require_util6 = __commonJS({
  "node_modules/undici/lib/cookies/util.js"(exports2, module2) {
    "use strict";
    function isCTLExcludingHtab(value) {
      if (value.length === 0) {
        return false;
      }
      for (const char of value) {
        const code = char.charCodeAt(0);
        if (code >= 0 || code <= 8 || (code >= 10 || code <= 31) || code === 127) {
          return false;
        }
      }
    }
    function validateCookieName(name3) {
      for (const char of name3) {
        const code = char.charCodeAt(0);
        if (code <= 32 || code > 127 || char === "(" || char === ")" || char === ">" || char === "<" || char === "@" || char === "," || char === ";" || char === ":" || char === "\\" || char === '"' || char === "/" || char === "[" || char === "]" || char === "?" || char === "=" || char === "{" || char === "}") {
          throw new Error("Invalid cookie name");
        }
      }
    }
    function validateCookieValue(value) {
      for (const char of value) {
        const code = char.charCodeAt(0);
        if (code < 33 || // exclude CTLs (0-31)
        code === 34 || code === 44 || code === 59 || code === 92 || code > 126) {
          throw new Error("Invalid header value");
        }
      }
    }
    function validateCookiePath(path) {
      for (const char of path) {
        const code = char.charCodeAt(0);
        if (code < 33 || char === ";") {
          throw new Error("Invalid cookie path");
        }
      }
    }
    function validateCookieDomain(domain) {
      if (domain.startsWith("-") || domain.endsWith(".") || domain.endsWith("-")) {
        throw new Error("Invalid cookie domain");
      }
    }
    function toIMFDate(date) {
      if (typeof date === "number") {
        date = new Date(date);
      }
      const days = [
        "Sun",
        "Mon",
        "Tue",
        "Wed",
        "Thu",
        "Fri",
        "Sat"
      ];
      const months = [
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec"
      ];
      const dayName = days[date.getUTCDay()];
      const day = date.getUTCDate().toString().padStart(2, "0");
      const month = months[date.getUTCMonth()];
      const year = date.getUTCFullYear();
      const hour = date.getUTCHours().toString().padStart(2, "0");
      const minute = date.getUTCMinutes().toString().padStart(2, "0");
      const second = date.getUTCSeconds().toString().padStart(2, "0");
      return `${dayName}, ${day} ${month} ${year} ${hour}:${minute}:${second} GMT`;
    }
    function validateCookieMaxAge(maxAge) {
      if (maxAge < 0) {
        throw new Error("Invalid cookie max-age");
      }
    }
    function stringify2(cookie) {
      if (cookie.name.length === 0) {
        return null;
      }
      validateCookieName(cookie.name);
      validateCookieValue(cookie.value);
      const out = [`${cookie.name}=${cookie.value}`];
      if (cookie.name.startsWith("__Secure-")) {
        cookie.secure = true;
      }
      if (cookie.name.startsWith("__Host-")) {
        cookie.secure = true;
        cookie.domain = null;
        cookie.path = "/";
      }
      if (cookie.secure) {
        out.push("Secure");
      }
      if (cookie.httpOnly) {
        out.push("HttpOnly");
      }
      if (typeof cookie.maxAge === "number") {
        validateCookieMaxAge(cookie.maxAge);
        out.push(`Max-Age=${cookie.maxAge}`);
      }
      if (cookie.domain) {
        validateCookieDomain(cookie.domain);
        out.push(`Domain=${cookie.domain}`);
      }
      if (cookie.path) {
        validateCookiePath(cookie.path);
        out.push(`Path=${cookie.path}`);
      }
      if (cookie.expires && cookie.expires.toString() !== "Invalid Date") {
        out.push(`Expires=${toIMFDate(cookie.expires)}`);
      }
      if (cookie.sameSite) {
        out.push(`SameSite=${cookie.sameSite}`);
      }
      for (const part of cookie.unparsed) {
        if (!part.includes("=")) {
          throw new Error("Invalid unparsed");
        }
        const [key, ...value] = part.split("=");
        out.push(`${key.trim()}=${value.join("=")}`);
      }
      return out.join("; ");
    }
    module2.exports = {
      isCTLExcludingHtab,
      validateCookieName,
      validateCookiePath,
      validateCookieValue,
      toIMFDate,
      stringify: stringify2
    };
  }
});

// node_modules/undici/lib/cookies/parse.js
var require_parse = __commonJS({
  "node_modules/undici/lib/cookies/parse.js"(exports2, module2) {
    "use strict";
    var { maxNameValuePairSize, maxAttributeValueSize } = require_constants4();
    var { isCTLExcludingHtab } = require_util6();
    var { collectASequenceOfCodePointsFast } = require_dataURL();
    var assert = require("assert");
    function parseSetCookie(header) {
      if (isCTLExcludingHtab(header)) {
        return null;
      }
      let nameValuePair = "";
      let unparsedAttributes = "";
      let name3 = "";
      let value = "";
      if (header.includes(";")) {
        const position = { position: 0 };
        nameValuePair = collectASequenceOfCodePointsFast(";", header, position);
        unparsedAttributes = header.slice(position.position);
      } else {
        nameValuePair = header;
      }
      if (!nameValuePair.includes("=")) {
        value = nameValuePair;
      } else {
        const position = { position: 0 };
        name3 = collectASequenceOfCodePointsFast(
          "=",
          nameValuePair,
          position
        );
        value = nameValuePair.slice(position.position + 1);
      }
      name3 = name3.trim();
      value = value.trim();
      if (name3.length + value.length > maxNameValuePairSize) {
        return null;
      }
      return {
        name: name3,
        value,
        ...parseUnparsedAttributes(unparsedAttributes)
      };
    }
    function parseUnparsedAttributes(unparsedAttributes, cookieAttributeList = {}) {
      if (unparsedAttributes.length === 0) {
        return cookieAttributeList;
      }
      assert(unparsedAttributes[0] === ";");
      unparsedAttributes = unparsedAttributes.slice(1);
      let cookieAv = "";
      if (unparsedAttributes.includes(";")) {
        cookieAv = collectASequenceOfCodePointsFast(
          ";",
          unparsedAttributes,
          { position: 0 }
        );
        unparsedAttributes = unparsedAttributes.slice(cookieAv.length);
      } else {
        cookieAv = unparsedAttributes;
        unparsedAttributes = "";
      }
      let attributeName = "";
      let attributeValue = "";
      if (cookieAv.includes("=")) {
        const position = { position: 0 };
        attributeName = collectASequenceOfCodePointsFast(
          "=",
          cookieAv,
          position
        );
        attributeValue = cookieAv.slice(position.position + 1);
      } else {
        attributeName = cookieAv;
      }
      attributeName = attributeName.trim();
      attributeValue = attributeValue.trim();
      if (attributeValue.length > maxAttributeValueSize) {
        return parseUnparsedAttributes(unparsedAttributes, cookieAttributeList);
      }
      const attributeNameLowercase = attributeName.toLowerCase();
      if (attributeNameLowercase === "expires") {
        const expiryTime = new Date(attributeValue);
        cookieAttributeList.expires = expiryTime;
      } else if (attributeNameLowercase === "max-age") {
        const charCode = attributeValue.charCodeAt(0);
        if ((charCode < 48 || charCode > 57) && attributeValue[0] !== "-") {
          return parseUnparsedAttributes(unparsedAttributes, cookieAttributeList);
        }
        if (!/^\d+$/.test(attributeValue)) {
          return parseUnparsedAttributes(unparsedAttributes, cookieAttributeList);
        }
        const deltaSeconds = Number(attributeValue);
        cookieAttributeList.maxAge = deltaSeconds;
      } else if (attributeNameLowercase === "domain") {
        let cookieDomain = attributeValue;
        if (cookieDomain[0] === ".") {
          cookieDomain = cookieDomain.slice(1);
        }
        cookieDomain = cookieDomain.toLowerCase();
        cookieAttributeList.domain = cookieDomain;
      } else if (attributeNameLowercase === "path") {
        let cookiePath = "";
        if (attributeValue.length === 0 || attributeValue[0] !== "/") {
          cookiePath = "/";
        } else {
          cookiePath = attributeValue;
        }
        cookieAttributeList.path = cookiePath;
      } else if (attributeNameLowercase === "secure") {
        cookieAttributeList.secure = true;
      } else if (attributeNameLowercase === "httponly") {
        cookieAttributeList.httpOnly = true;
      } else if (attributeNameLowercase === "samesite") {
        let enforcement = "Default";
        const attributeValueLowercase = attributeValue.toLowerCase();
        if (attributeValueLowercase.includes("none")) {
          enforcement = "None";
        }
        if (attributeValueLowercase.includes("strict")) {
          enforcement = "Strict";
        }
        if (attributeValueLowercase.includes("lax")) {
          enforcement = "Lax";
        }
        cookieAttributeList.sameSite = enforcement;
      } else {
        cookieAttributeList.unparsed ??= [];
        cookieAttributeList.unparsed.push(`${attributeName}=${attributeValue}`);
      }
      return parseUnparsedAttributes(unparsedAttributes, cookieAttributeList);
    }
    module2.exports = {
      parseSetCookie,
      parseUnparsedAttributes
    };
  }
});

// node_modules/undici/lib/cookies/index.js
var require_cookies = __commonJS({
  "node_modules/undici/lib/cookies/index.js"(exports2, module2) {
    "use strict";
    var { parseSetCookie } = require_parse();
    var { stringify: stringify2 } = require_util6();
    var { webidl } = require_webidl();
    var { Headers } = require_headers();
    function getCookies(headers) {
      webidl.argumentLengthCheck(arguments, 1, { header: "getCookies" });
      webidl.brandCheck(headers, Headers, { strict: false });
      const cookie = headers.get("cookie");
      const out = {};
      if (!cookie) {
        return out;
      }
      for (const piece of cookie.split(";")) {
        const [name3, ...value] = piece.split("=");
        out[name3.trim()] = value.join("=");
      }
      return out;
    }
    function deleteCookie(headers, name3, attributes) {
      webidl.argumentLengthCheck(arguments, 2, { header: "deleteCookie" });
      webidl.brandCheck(headers, Headers, { strict: false });
      name3 = webidl.converters.DOMString(name3);
      attributes = webidl.converters.DeleteCookieAttributes(attributes);
      setCookie(headers, {
        name: name3,
        value: "",
        expires: /* @__PURE__ */ new Date(0),
        ...attributes
      });
    }
    function getSetCookies(headers) {
      webidl.argumentLengthCheck(arguments, 1, { header: "getSetCookies" });
      webidl.brandCheck(headers, Headers, { strict: false });
      const cookies = headers.getSetCookie();
      if (!cookies) {
        return [];
      }
      return cookies.map((pair) => parseSetCookie(pair));
    }
    function setCookie(headers, cookie) {
      webidl.argumentLengthCheck(arguments, 2, { header: "setCookie" });
      webidl.brandCheck(headers, Headers, { strict: false });
      cookie = webidl.converters.Cookie(cookie);
      const str = stringify2(cookie);
      if (str) {
        headers.append("Set-Cookie", stringify2(cookie));
      }
    }
    webidl.converters.DeleteCookieAttributes = webidl.dictionaryConverter([
      {
        converter: webidl.nullableConverter(webidl.converters.DOMString),
        key: "path",
        defaultValue: null
      },
      {
        converter: webidl.nullableConverter(webidl.converters.DOMString),
        key: "domain",
        defaultValue: null
      }
    ]);
    webidl.converters.Cookie = webidl.dictionaryConverter([
      {
        converter: webidl.converters.DOMString,
        key: "name"
      },
      {
        converter: webidl.converters.DOMString,
        key: "value"
      },
      {
        converter: webidl.nullableConverter((value) => {
          if (typeof value === "number") {
            return webidl.converters["unsigned long long"](value);
          }
          return new Date(value);
        }),
        key: "expires",
        defaultValue: null
      },
      {
        converter: webidl.nullableConverter(webidl.converters["long long"]),
        key: "maxAge",
        defaultValue: null
      },
      {
        converter: webidl.nullableConverter(webidl.converters.DOMString),
        key: "domain",
        defaultValue: null
      },
      {
        converter: webidl.nullableConverter(webidl.converters.DOMString),
        key: "path",
        defaultValue: null
      },
      {
        converter: webidl.nullableConverter(webidl.converters.boolean),
        key: "secure",
        defaultValue: null
      },
      {
        converter: webidl.nullableConverter(webidl.converters.boolean),
        key: "httpOnly",
        defaultValue: null
      },
      {
        converter: webidl.converters.USVString,
        key: "sameSite",
        allowedValues: ["Strict", "Lax", "None"]
      },
      {
        converter: webidl.sequenceConverter(webidl.converters.DOMString),
        key: "unparsed",
        defaultValue: []
      }
    ]);
    module2.exports = {
      getCookies,
      deleteCookie,
      getSetCookies,
      setCookie
    };
  }
});

// node_modules/undici/lib/websocket/constants.js
var require_constants5 = __commonJS({
  "node_modules/undici/lib/websocket/constants.js"(exports2, module2) {
    "use strict";
    var uid = "258EAFA5-E914-47DA-95CA-C5AB0DC85B11";
    var staticPropertyDescriptors = {
      enumerable: true,
      writable: false,
      configurable: false
    };
    var states = {
      CONNECTING: 0,
      OPEN: 1,
      CLOSING: 2,
      CLOSED: 3
    };
    var opcodes = {
      CONTINUATION: 0,
      TEXT: 1,
      BINARY: 2,
      CLOSE: 8,
      PING: 9,
      PONG: 10
    };
    var maxUnsigned16Bit = 2 ** 16 - 1;
    var parserStates = {
      INFO: 0,
      PAYLOADLENGTH_16: 2,
      PAYLOADLENGTH_64: 3,
      READ_DATA: 4
    };
    var emptyBuffer = Buffer.allocUnsafe(0);
    module2.exports = {
      uid,
      staticPropertyDescriptors,
      states,
      opcodes,
      maxUnsigned16Bit,
      parserStates,
      emptyBuffer
    };
  }
});

// node_modules/undici/lib/websocket/symbols.js
var require_symbols5 = __commonJS({
  "node_modules/undici/lib/websocket/symbols.js"(exports2, module2) {
    "use strict";
    module2.exports = {
      kWebSocketURL: Symbol("url"),
      kReadyState: Symbol("ready state"),
      kController: Symbol("controller"),
      kResponse: Symbol("response"),
      kBinaryType: Symbol("binary type"),
      kSentClose: Symbol("sent close"),
      kReceivedClose: Symbol("received close"),
      kByteParser: Symbol("byte parser")
    };
  }
});

// node_modules/undici/lib/websocket/events.js
var require_events = __commonJS({
  "node_modules/undici/lib/websocket/events.js"(exports2, module2) {
    "use strict";
    var { webidl } = require_webidl();
    var { kEnumerableProperty } = require_util();
    var { MessagePort } = require("worker_threads");
    var MessageEvent = class _MessageEvent extends Event {
      #eventInit;
      constructor(type, eventInitDict = {}) {
        webidl.argumentLengthCheck(arguments, 1, { header: "MessageEvent constructor" });
        type = webidl.converters.DOMString(type);
        eventInitDict = webidl.converters.MessageEventInit(eventInitDict);
        super(type, eventInitDict);
        this.#eventInit = eventInitDict;
      }
      get data() {
        webidl.brandCheck(this, _MessageEvent);
        return this.#eventInit.data;
      }
      get origin() {
        webidl.brandCheck(this, _MessageEvent);
        return this.#eventInit.origin;
      }
      get lastEventId() {
        webidl.brandCheck(this, _MessageEvent);
        return this.#eventInit.lastEventId;
      }
      get source() {
        webidl.brandCheck(this, _MessageEvent);
        return this.#eventInit.source;
      }
      get ports() {
        webidl.brandCheck(this, _MessageEvent);
        if (!Object.isFrozen(this.#eventInit.ports)) {
          Object.freeze(this.#eventInit.ports);
        }
        return this.#eventInit.ports;
      }
      initMessageEvent(type, bubbles = false, cancelable = false, data = null, origin = "", lastEventId = "", source = null, ports = []) {
        webidl.brandCheck(this, _MessageEvent);
        webidl.argumentLengthCheck(arguments, 1, { header: "MessageEvent.initMessageEvent" });
        return new _MessageEvent(type, {
          bubbles,
          cancelable,
          data,
          origin,
          lastEventId,
          source,
          ports
        });
      }
    };
    var CloseEvent = class _CloseEvent extends Event {
      #eventInit;
      constructor(type, eventInitDict = {}) {
        webidl.argumentLengthCheck(arguments, 1, { header: "CloseEvent constructor" });
        type = webidl.converters.DOMString(type);
        eventInitDict = webidl.converters.CloseEventInit(eventInitDict);
        super(type, eventInitDict);
        this.#eventInit = eventInitDict;
      }
      get wasClean() {
        webidl.brandCheck(this, _CloseEvent);
        return this.#eventInit.wasClean;
      }
      get code() {
        webidl.brandCheck(this, _CloseEvent);
        return this.#eventInit.code;
      }
      get reason() {
        webidl.brandCheck(this, _CloseEvent);
        return this.#eventInit.reason;
      }
    };
    var ErrorEvent = class _ErrorEvent extends Event {
      #eventInit;
      constructor(type, eventInitDict) {
        webidl.argumentLengthCheck(arguments, 1, { header: "ErrorEvent constructor" });
        super(type, eventInitDict);
        type = webidl.converters.DOMString(type);
        eventInitDict = webidl.converters.ErrorEventInit(eventInitDict ?? {});
        this.#eventInit = eventInitDict;
      }
      get message() {
        webidl.brandCheck(this, _ErrorEvent);
        return this.#eventInit.message;
      }
      get filename() {
        webidl.brandCheck(this, _ErrorEvent);
        return this.#eventInit.filename;
      }
      get lineno() {
        webidl.brandCheck(this, _ErrorEvent);
        return this.#eventInit.lineno;
      }
      get colno() {
        webidl.brandCheck(this, _ErrorEvent);
        return this.#eventInit.colno;
      }
      get error() {
        webidl.brandCheck(this, _ErrorEvent);
        return this.#eventInit.error;
      }
    };
    Object.defineProperties(MessageEvent.prototype, {
      [Symbol.toStringTag]: {
        value: "MessageEvent",
        configurable: true
      },
      data: kEnumerableProperty,
      origin: kEnumerableProperty,
      lastEventId: kEnumerableProperty,
      source: kEnumerableProperty,
      ports: kEnumerableProperty,
      initMessageEvent: kEnumerableProperty
    });
    Object.defineProperties(CloseEvent.prototype, {
      [Symbol.toStringTag]: {
        value: "CloseEvent",
        configurable: true
      },
      reason: kEnumerableProperty,
      code: kEnumerableProperty,
      wasClean: kEnumerableProperty
    });
    Object.defineProperties(ErrorEvent.prototype, {
      [Symbol.toStringTag]: {
        value: "ErrorEvent",
        configurable: true
      },
      message: kEnumerableProperty,
      filename: kEnumerableProperty,
      lineno: kEnumerableProperty,
      colno: kEnumerableProperty,
      error: kEnumerableProperty
    });
    webidl.converters.MessagePort = webidl.interfaceConverter(MessagePort);
    webidl.converters["sequence<MessagePort>"] = webidl.sequenceConverter(
      webidl.converters.MessagePort
    );
    var eventInit = [
      {
        key: "bubbles",
        converter: webidl.converters.boolean,
        defaultValue: false
      },
      {
        key: "cancelable",
        converter: webidl.converters.boolean,
        defaultValue: false
      },
      {
        key: "composed",
        converter: webidl.converters.boolean,
        defaultValue: false
      }
    ];
    webidl.converters.MessageEventInit = webidl.dictionaryConverter([
      ...eventInit,
      {
        key: "data",
        converter: webidl.converters.any,
        defaultValue: null
      },
      {
        key: "origin",
        converter: webidl.converters.USVString,
        defaultValue: ""
      },
      {
        key: "lastEventId",
        converter: webidl.converters.DOMString,
        defaultValue: ""
      },
      {
        key: "source",
        // Node doesn't implement WindowProxy or ServiceWorker, so the only
        // valid value for source is a MessagePort.
        converter: webidl.nullableConverter(webidl.converters.MessagePort),
        defaultValue: null
      },
      {
        key: "ports",
        converter: webidl.converters["sequence<MessagePort>"],
        get defaultValue() {
          return [];
        }
      }
    ]);
    webidl.converters.CloseEventInit = webidl.dictionaryConverter([
      ...eventInit,
      {
        key: "wasClean",
        converter: webidl.converters.boolean,
        defaultValue: false
      },
      {
        key: "code",
        converter: webidl.converters["unsigned short"],
        defaultValue: 0
      },
      {
        key: "reason",
        converter: webidl.converters.USVString,
        defaultValue: ""
      }
    ]);
    webidl.converters.ErrorEventInit = webidl.dictionaryConverter([
      ...eventInit,
      {
        key: "message",
        converter: webidl.converters.DOMString,
        defaultValue: ""
      },
      {
        key: "filename",
        converter: webidl.converters.USVString,
        defaultValue: ""
      },
      {
        key: "lineno",
        converter: webidl.converters["unsigned long"],
        defaultValue: 0
      },
      {
        key: "colno",
        converter: webidl.converters["unsigned long"],
        defaultValue: 0
      },
      {
        key: "error",
        converter: webidl.converters.any
      }
    ]);
    module2.exports = {
      MessageEvent,
      CloseEvent,
      ErrorEvent
    };
  }
});

// node_modules/undici/lib/websocket/util.js
var require_util7 = __commonJS({
  "node_modules/undici/lib/websocket/util.js"(exports2, module2) {
    "use strict";
    var { kReadyState, kController, kResponse, kBinaryType, kWebSocketURL } = require_symbols5();
    var { states, opcodes } = require_constants5();
    var { MessageEvent, ErrorEvent } = require_events();
    function isEstablished(ws) {
      return ws[kReadyState] === states.OPEN;
    }
    function isClosing(ws) {
      return ws[kReadyState] === states.CLOSING;
    }
    function isClosed(ws) {
      return ws[kReadyState] === states.CLOSED;
    }
    function fireEvent(e, target, eventConstructor = Event, eventInitDict) {
      const event = new eventConstructor(e, eventInitDict);
      target.dispatchEvent(event);
    }
    function websocketMessageReceived(ws, type, data) {
      if (ws[kReadyState] !== states.OPEN) {
        return;
      }
      let dataForEvent;
      if (type === opcodes.TEXT) {
        try {
          dataForEvent = new TextDecoder("utf-8", { fatal: true }).decode(data);
        } catch {
          failWebsocketConnection(ws, "Received invalid UTF-8 in text frame.");
          return;
        }
      } else if (type === opcodes.BINARY) {
        if (ws[kBinaryType] === "blob") {
          dataForEvent = new Blob([data]);
        } else {
          dataForEvent = new Uint8Array(data).buffer;
        }
      }
      fireEvent("message", ws, MessageEvent, {
        origin: ws[kWebSocketURL].origin,
        data: dataForEvent
      });
    }
    function isValidSubprotocol(protocol) {
      if (protocol.length === 0) {
        return false;
      }
      for (const char of protocol) {
        const code = char.charCodeAt(0);
        if (code < 33 || code > 126 || char === "(" || char === ")" || char === "<" || char === ">" || char === "@" || char === "," || char === ";" || char === ":" || char === "\\" || char === '"' || char === "/" || char === "[" || char === "]" || char === "?" || char === "=" || char === "{" || char === "}" || code === 32 || // SP
        code === 9) {
          return false;
        }
      }
      return true;
    }
    function isValidStatusCode(code) {
      if (code >= 1e3 && code < 1015) {
        return code !== 1004 && // reserved
        code !== 1005 && // "MUST NOT be set as a status code"
        code !== 1006;
      }
      return code >= 3e3 && code <= 4999;
    }
    function failWebsocketConnection(ws, reason) {
      const { [kController]: controller, [kResponse]: response } = ws;
      controller.abort();
      if (response?.socket && !response.socket.destroyed) {
        response.socket.destroy();
      }
      if (reason) {
        fireEvent("error", ws, ErrorEvent, {
          error: new Error(reason)
        });
      }
    }
    module2.exports = {
      isEstablished,
      isClosing,
      isClosed,
      fireEvent,
      isValidSubprotocol,
      isValidStatusCode,
      failWebsocketConnection,
      websocketMessageReceived
    };
  }
});

// node_modules/undici/lib/websocket/connection.js
var require_connection = __commonJS({
  "node_modules/undici/lib/websocket/connection.js"(exports2, module2) {
    "use strict";
    var diagnosticsChannel = require("diagnostics_channel");
    var { uid, states } = require_constants5();
    var {
      kReadyState,
      kSentClose,
      kByteParser,
      kReceivedClose
    } = require_symbols5();
    var { fireEvent, failWebsocketConnection } = require_util7();
    var { CloseEvent } = require_events();
    var { makeRequest } = require_request2();
    var { fetching } = require_fetch();
    var { Headers } = require_headers();
    var { getGlobalDispatcher } = require_global2();
    var { kHeadersList } = require_symbols();
    var channels = {};
    channels.open = diagnosticsChannel.channel("undici:websocket:open");
    channels.close = diagnosticsChannel.channel("undici:websocket:close");
    channels.socketError = diagnosticsChannel.channel("undici:websocket:socket_error");
    var crypto5;
    try {
      crypto5 = require("crypto");
    } catch {
    }
    function establishWebSocketConnection(url, protocols, ws, onEstablish, options) {
      const requestURL = url;
      requestURL.protocol = url.protocol === "ws:" ? "http:" : "https:";
      const request2 = makeRequest({
        urlList: [requestURL],
        serviceWorkers: "none",
        referrer: "no-referrer",
        mode: "websocket",
        credentials: "include",
        cache: "no-store",
        redirect: "error"
      });
      if (options.headers) {
        const headersList = new Headers(options.headers)[kHeadersList];
        request2.headersList = headersList;
      }
      const keyValue = crypto5.randomBytes(16).toString("base64");
      request2.headersList.append("sec-websocket-key", keyValue);
      request2.headersList.append("sec-websocket-version", "13");
      for (const protocol of protocols) {
        request2.headersList.append("sec-websocket-protocol", protocol);
      }
      const permessageDeflate = "";
      const controller = fetching({
        request: request2,
        useParallelQueue: true,
        dispatcher: options.dispatcher ?? getGlobalDispatcher(),
        processResponse(response) {
          if (response.type === "error" || response.status !== 101) {
            failWebsocketConnection(ws, "Received network error or non-101 status code.");
            return;
          }
          if (protocols.length !== 0 && !response.headersList.get("Sec-WebSocket-Protocol")) {
            failWebsocketConnection(ws, "Server did not respond with sent protocols.");
            return;
          }
          if (response.headersList.get("Upgrade")?.toLowerCase() !== "websocket") {
            failWebsocketConnection(ws, 'Server did not set Upgrade header to "websocket".');
            return;
          }
          if (response.headersList.get("Connection")?.toLowerCase() !== "upgrade") {
            failWebsocketConnection(ws, 'Server did not set Connection header to "upgrade".');
            return;
          }
          const secWSAccept = response.headersList.get("Sec-WebSocket-Accept");
          const digest = crypto5.createHash("sha1").update(keyValue + uid).digest("base64");
          if (secWSAccept !== digest) {
            failWebsocketConnection(ws, "Incorrect hash received in Sec-WebSocket-Accept header.");
            return;
          }
          const secExtension = response.headersList.get("Sec-WebSocket-Extensions");
          if (secExtension !== null && secExtension !== permessageDeflate) {
            failWebsocketConnection(ws, "Received different permessage-deflate than the one set.");
            return;
          }
          const secProtocol = response.headersList.get("Sec-WebSocket-Protocol");
          if (secProtocol !== null && secProtocol !== request2.headersList.get("Sec-WebSocket-Protocol")) {
            failWebsocketConnection(ws, "Protocol was not set in the opening handshake.");
            return;
          }
          response.socket.on("data", onSocketData);
          response.socket.on("close", onSocketClose);
          response.socket.on("error", onSocketError);
          if (channels.open.hasSubscribers) {
            channels.open.publish({
              address: response.socket.address(),
              protocol: secProtocol,
              extensions: secExtension
            });
          }
          onEstablish(response);
        }
      });
      return controller;
    }
    function onSocketData(chunk) {
      if (!this.ws[kByteParser].write(chunk)) {
        this.pause();
      }
    }
    function onSocketClose() {
      const { ws } = this;
      const wasClean = ws[kSentClose] && ws[kReceivedClose];
      let code = 1005;
      let reason = "";
      const result = ws[kByteParser].closingInfo;
      if (result) {
        code = result.code ?? 1005;
        reason = result.reason;
      } else if (!ws[kSentClose]) {
        code = 1006;
      }
      ws[kReadyState] = states.CLOSED;
      fireEvent("close", ws, CloseEvent, {
        wasClean,
        code,
        reason
      });
      if (channels.close.hasSubscribers) {
        channels.close.publish({
          websocket: ws,
          code,
          reason
        });
      }
    }
    function onSocketError(error) {
      const { ws } = this;
      ws[kReadyState] = states.CLOSING;
      if (channels.socketError.hasSubscribers) {
        channels.socketError.publish(error);
      }
      this.destroy();
    }
    module2.exports = {
      establishWebSocketConnection
    };
  }
});

// node_modules/undici/lib/websocket/frame.js
var require_frame = __commonJS({
  "node_modules/undici/lib/websocket/frame.js"(exports2, module2) {
    "use strict";
    var { maxUnsigned16Bit } = require_constants5();
    var crypto5;
    try {
      crypto5 = require("crypto");
    } catch {
    }
    var WebsocketFrameSend = class {
      /**
       * @param {Buffer|undefined} data
       */
      constructor(data) {
        this.frameData = data;
        this.maskKey = crypto5.randomBytes(4);
      }
      createFrame(opcode) {
        const bodyLength = this.frameData?.byteLength ?? 0;
        let payloadLength = bodyLength;
        let offset = 6;
        if (bodyLength > maxUnsigned16Bit) {
          offset += 8;
          payloadLength = 127;
        } else if (bodyLength > 125) {
          offset += 2;
          payloadLength = 126;
        }
        const buffer = Buffer.allocUnsafe(bodyLength + offset);
        buffer[0] = buffer[1] = 0;
        buffer[0] |= 128;
        buffer[0] = (buffer[0] & 240) + opcode;
        buffer[offset - 4] = this.maskKey[0];
        buffer[offset - 3] = this.maskKey[1];
        buffer[offset - 2] = this.maskKey[2];
        buffer[offset - 1] = this.maskKey[3];
        buffer[1] = payloadLength;
        if (payloadLength === 126) {
          buffer.writeUInt16BE(bodyLength, 2);
        } else if (payloadLength === 127) {
          buffer[2] = buffer[3] = 0;
          buffer.writeUIntBE(bodyLength, 4, 6);
        }
        buffer[1] |= 128;
        for (let i = 0; i < bodyLength; i++) {
          buffer[offset + i] = this.frameData[i] ^ this.maskKey[i % 4];
        }
        return buffer;
      }
    };
    module2.exports = {
      WebsocketFrameSend
    };
  }
});

// node_modules/undici/lib/websocket/receiver.js
var require_receiver = __commonJS({
  "node_modules/undici/lib/websocket/receiver.js"(exports2, module2) {
    "use strict";
    var { Writable } = require("stream");
    var diagnosticsChannel = require("diagnostics_channel");
    var { parserStates, opcodes, states, emptyBuffer } = require_constants5();
    var { kReadyState, kSentClose, kResponse, kReceivedClose } = require_symbols5();
    var { isValidStatusCode, failWebsocketConnection, websocketMessageReceived } = require_util7();
    var { WebsocketFrameSend } = require_frame();
    var channels = {};
    channels.ping = diagnosticsChannel.channel("undici:websocket:ping");
    channels.pong = diagnosticsChannel.channel("undici:websocket:pong");
    var ByteParser = class extends Writable {
      #buffers = [];
      #byteOffset = 0;
      #state = parserStates.INFO;
      #info = {};
      #fragments = [];
      constructor(ws) {
        super();
        this.ws = ws;
      }
      /**
       * @param {Buffer} chunk
       * @param {() => void} callback
       */
      _write(chunk, _, callback) {
        this.#buffers.push(chunk);
        this.#byteOffset += chunk.length;
        this.run(callback);
      }
      /**
       * Runs whenever a new chunk is received.
       * Callback is called whenever there are no more chunks buffering,
       * or not enough bytes are buffered to parse.
       */
      run(callback) {
        while (true) {
          if (this.#state === parserStates.INFO) {
            if (this.#byteOffset < 2) {
              return callback();
            }
            const buffer = this.consume(2);
            this.#info.fin = (buffer[0] & 128) !== 0;
            this.#info.opcode = buffer[0] & 15;
            this.#info.originalOpcode ??= this.#info.opcode;
            this.#info.fragmented = !this.#info.fin && this.#info.opcode !== opcodes.CONTINUATION;
            if (this.#info.fragmented && this.#info.opcode !== opcodes.BINARY && this.#info.opcode !== opcodes.TEXT) {
              failWebsocketConnection(this.ws, "Invalid frame type was fragmented.");
              return;
            }
            const payloadLength = buffer[1] & 127;
            if (payloadLength <= 125) {
              this.#info.payloadLength = payloadLength;
              this.#state = parserStates.READ_DATA;
            } else if (payloadLength === 126) {
              this.#state = parserStates.PAYLOADLENGTH_16;
            } else if (payloadLength === 127) {
              this.#state = parserStates.PAYLOADLENGTH_64;
            }
            if (this.#info.fragmented && payloadLength > 125) {
              failWebsocketConnection(this.ws, "Fragmented frame exceeded 125 bytes.");
              return;
            } else if ((this.#info.opcode === opcodes.PING || this.#info.opcode === opcodes.PONG || this.#info.opcode === opcodes.CLOSE) && payloadLength > 125) {
              failWebsocketConnection(this.ws, "Payload length for control frame exceeded 125 bytes.");
              return;
            } else if (this.#info.opcode === opcodes.CLOSE) {
              if (payloadLength === 1) {
                failWebsocketConnection(this.ws, "Received close frame with a 1-byte body.");
                return;
              }
              const body = this.consume(payloadLength);
              this.#info.closeInfo = this.parseCloseBody(false, body);
              if (!this.ws[kSentClose]) {
                const body2 = Buffer.allocUnsafe(2);
                body2.writeUInt16BE(this.#info.closeInfo.code, 0);
                const closeFrame = new WebsocketFrameSend(body2);
                this.ws[kResponse].socket.write(
                  closeFrame.createFrame(opcodes.CLOSE),
                  (err) => {
                    if (!err) {
                      this.ws[kSentClose] = true;
                    }
                  }
                );
              }
              this.ws[kReadyState] = states.CLOSING;
              this.ws[kReceivedClose] = true;
              this.end();
              return;
            } else if (this.#info.opcode === opcodes.PING) {
              const body = this.consume(payloadLength);
              if (!this.ws[kReceivedClose]) {
                const frame = new WebsocketFrameSend(body);
                this.ws[kResponse].socket.write(frame.createFrame(opcodes.PONG));
                if (channels.ping.hasSubscribers) {
                  channels.ping.publish({
                    payload: body
                  });
                }
              }
              this.#state = parserStates.INFO;
              if (this.#byteOffset > 0) {
                continue;
              } else {
                callback();
                return;
              }
            } else if (this.#info.opcode === opcodes.PONG) {
              const body = this.consume(payloadLength);
              if (channels.pong.hasSubscribers) {
                channels.pong.publish({
                  payload: body
                });
              }
              if (this.#byteOffset > 0) {
                continue;
              } else {
                callback();
                return;
              }
            }
          } else if (this.#state === parserStates.PAYLOADLENGTH_16) {
            if (this.#byteOffset < 2) {
              return callback();
            }
            const buffer = this.consume(2);
            this.#info.payloadLength = buffer.readUInt16BE(0);
            this.#state = parserStates.READ_DATA;
          } else if (this.#state === parserStates.PAYLOADLENGTH_64) {
            if (this.#byteOffset < 8) {
              return callback();
            }
            const buffer = this.consume(8);
            const upper = buffer.readUInt32BE(0);
            if (upper > 2 ** 31 - 1) {
              failWebsocketConnection(this.ws, "Received payload length > 2^31 bytes.");
              return;
            }
            const lower = buffer.readUInt32BE(4);
            this.#info.payloadLength = (upper << 8) + lower;
            this.#state = parserStates.READ_DATA;
          } else if (this.#state === parserStates.READ_DATA) {
            if (this.#byteOffset < this.#info.payloadLength) {
              return callback();
            } else if (this.#byteOffset >= this.#info.payloadLength) {
              const body = this.consume(this.#info.payloadLength);
              this.#fragments.push(body);
              if (!this.#info.fragmented || this.#info.fin && this.#info.opcode === opcodes.CONTINUATION) {
                const fullMessage = Buffer.concat(this.#fragments);
                websocketMessageReceived(this.ws, this.#info.originalOpcode, fullMessage);
                this.#info = {};
                this.#fragments.length = 0;
              }
              this.#state = parserStates.INFO;
            }
          }
          if (this.#byteOffset > 0) {
            continue;
          } else {
            callback();
            break;
          }
        }
      }
      /**
       * Take n bytes from the buffered Buffers
       * @param {number} n
       * @returns {Buffer|null}
       */
      consume(n) {
        if (n > this.#byteOffset) {
          return null;
        } else if (n === 0) {
          return emptyBuffer;
        }
        if (this.#buffers[0].length === n) {
          this.#byteOffset -= this.#buffers[0].length;
          return this.#buffers.shift();
        }
        const buffer = Buffer.allocUnsafe(n);
        let offset = 0;
        while (offset !== n) {
          const next = this.#buffers[0];
          const { length } = next;
          if (length + offset === n) {
            buffer.set(this.#buffers.shift(), offset);
            break;
          } else if (length + offset > n) {
            buffer.set(next.subarray(0, n - offset), offset);
            this.#buffers[0] = next.subarray(n - offset);
            break;
          } else {
            buffer.set(this.#buffers.shift(), offset);
            offset += next.length;
          }
        }
        this.#byteOffset -= n;
        return buffer;
      }
      parseCloseBody(onlyCode, data) {
        let code;
        if (data.length >= 2) {
          code = data.readUInt16BE(0);
        }
        if (onlyCode) {
          if (!isValidStatusCode(code)) {
            return null;
          }
          return { code };
        }
        let reason = data.subarray(2);
        if (reason[0] === 239 && reason[1] === 187 && reason[2] === 191) {
          reason = reason.subarray(3);
        }
        if (code !== void 0 && !isValidStatusCode(code)) {
          return null;
        }
        try {
          reason = new TextDecoder("utf-8", { fatal: true }).decode(reason);
        } catch {
          return null;
        }
        return { code, reason };
      }
      get closingInfo() {
        return this.#info.closeInfo;
      }
    };
    module2.exports = {
      ByteParser
    };
  }
});

// node_modules/undici/lib/websocket/websocket.js
var require_websocket = __commonJS({
  "node_modules/undici/lib/websocket/websocket.js"(exports2, module2) {
    "use strict";
    var { webidl } = require_webidl();
    var { DOMException: DOMException2 } = require_constants2();
    var { URLSerializer } = require_dataURL();
    var { getGlobalOrigin } = require_global();
    var { staticPropertyDescriptors, states, opcodes, emptyBuffer } = require_constants5();
    var {
      kWebSocketURL,
      kReadyState,
      kController,
      kBinaryType,
      kResponse,
      kSentClose,
      kByteParser
    } = require_symbols5();
    var { isEstablished, isClosing, isValidSubprotocol, failWebsocketConnection, fireEvent } = require_util7();
    var { establishWebSocketConnection } = require_connection();
    var { WebsocketFrameSend } = require_frame();
    var { ByteParser } = require_receiver();
    var { kEnumerableProperty, isBlobLike } = require_util();
    var { getGlobalDispatcher } = require_global2();
    var { types } = require("util");
    var experimentalWarned = false;
    var WebSocket = class _WebSocket extends EventTarget {
      #events = {
        open: null,
        error: null,
        close: null,
        message: null
      };
      #bufferedAmount = 0;
      #protocol = "";
      #extensions = "";
      /**
       * @param {string} url
       * @param {string|string[]} protocols
       */
      constructor(url, protocols = []) {
        super();
        webidl.argumentLengthCheck(arguments, 1, { header: "WebSocket constructor" });
        if (!experimentalWarned) {
          experimentalWarned = true;
          process.emitWarning("WebSockets are experimental, expect them to change at any time.", {
            code: "UNDICI-WS"
          });
        }
        const options = webidl.converters["DOMString or sequence<DOMString> or WebSocketInit"](protocols);
        url = webidl.converters.USVString(url);
        protocols = options.protocols;
        const baseURL = getGlobalOrigin();
        let urlRecord;
        try {
          urlRecord = new URL(url, baseURL);
        } catch (e) {
          throw new DOMException2(e, "SyntaxError");
        }
        if (urlRecord.protocol === "http:") {
          urlRecord.protocol = "ws:";
        } else if (urlRecord.protocol === "https:") {
          urlRecord.protocol = "wss:";
        }
        if (urlRecord.protocol !== "ws:" && urlRecord.protocol !== "wss:") {
          throw new DOMException2(
            `Expected a ws: or wss: protocol, got ${urlRecord.protocol}`,
            "SyntaxError"
          );
        }
        if (urlRecord.hash || urlRecord.href.endsWith("#")) {
          throw new DOMException2("Got fragment", "SyntaxError");
        }
        if (typeof protocols === "string") {
          protocols = [protocols];
        }
        if (protocols.length !== new Set(protocols.map((p) => p.toLowerCase())).size) {
          throw new DOMException2("Invalid Sec-WebSocket-Protocol value", "SyntaxError");
        }
        if (protocols.length > 0 && !protocols.every((p) => isValidSubprotocol(p))) {
          throw new DOMException2("Invalid Sec-WebSocket-Protocol value", "SyntaxError");
        }
        this[kWebSocketURL] = new URL(urlRecord.href);
        this[kController] = establishWebSocketConnection(
          urlRecord,
          protocols,
          this,
          (response) => this.#onConnectionEstablished(response),
          options
        );
        this[kReadyState] = _WebSocket.CONNECTING;
        this[kBinaryType] = "blob";
      }
      /**
       * @see https://websockets.spec.whatwg.org/#dom-websocket-close
       * @param {number|undefined} code
       * @param {string|undefined} reason
       */
      close(code = void 0, reason = void 0) {
        webidl.brandCheck(this, _WebSocket);
        if (code !== void 0) {
          code = webidl.converters["unsigned short"](code, { clamp: true });
        }
        if (reason !== void 0) {
          reason = webidl.converters.USVString(reason);
        }
        if (code !== void 0) {
          if (code !== 1e3 && (code < 3e3 || code > 4999)) {
            throw new DOMException2("invalid code", "InvalidAccessError");
          }
        }
        let reasonByteLength = 0;
        if (reason !== void 0) {
          reasonByteLength = Buffer.byteLength(reason);
          if (reasonByteLength > 123) {
            throw new DOMException2(
              `Reason must be less than 123 bytes; received ${reasonByteLength}`,
              "SyntaxError"
            );
          }
        }
        if (this[kReadyState] === _WebSocket.CLOSING || this[kReadyState] === _WebSocket.CLOSED) {
        } else if (!isEstablished(this)) {
          failWebsocketConnection(this, "Connection was closed before it was established.");
          this[kReadyState] = _WebSocket.CLOSING;
        } else if (!isClosing(this)) {
          const frame = new WebsocketFrameSend();
          if (code !== void 0 && reason === void 0) {
            frame.frameData = Buffer.allocUnsafe(2);
            frame.frameData.writeUInt16BE(code, 0);
          } else if (code !== void 0 && reason !== void 0) {
            frame.frameData = Buffer.allocUnsafe(2 + reasonByteLength);
            frame.frameData.writeUInt16BE(code, 0);
            frame.frameData.write(reason, 2, "utf-8");
          } else {
            frame.frameData = emptyBuffer;
          }
          const socket = this[kResponse].socket;
          socket.write(frame.createFrame(opcodes.CLOSE), (err) => {
            if (!err) {
              this[kSentClose] = true;
            }
          });
          this[kReadyState] = states.CLOSING;
        } else {
          this[kReadyState] = _WebSocket.CLOSING;
        }
      }
      /**
       * @see https://websockets.spec.whatwg.org/#dom-websocket-send
       * @param {NodeJS.TypedArray|ArrayBuffer|Blob|string} data
       */
      send(data) {
        webidl.brandCheck(this, _WebSocket);
        webidl.argumentLengthCheck(arguments, 1, { header: "WebSocket.send" });
        data = webidl.converters.WebSocketSendData(data);
        if (this[kReadyState] === _WebSocket.CONNECTING) {
          throw new DOMException2("Sent before connected.", "InvalidStateError");
        }
        if (!isEstablished(this) || isClosing(this)) {
          return;
        }
        const socket = this[kResponse].socket;
        if (typeof data === "string") {
          const value = Buffer.from(data);
          const frame = new WebsocketFrameSend(value);
          const buffer = frame.createFrame(opcodes.TEXT);
          this.#bufferedAmount += value.byteLength;
          socket.write(buffer, () => {
            this.#bufferedAmount -= value.byteLength;
          });
        } else if (types.isArrayBuffer(data)) {
          const value = Buffer.from(data);
          const frame = new WebsocketFrameSend(value);
          const buffer = frame.createFrame(opcodes.BINARY);
          this.#bufferedAmount += value.byteLength;
          socket.write(buffer, () => {
            this.#bufferedAmount -= value.byteLength;
          });
        } else if (ArrayBuffer.isView(data)) {
          const ab = Buffer.from(data, data.byteOffset, data.byteLength);
          const frame = new WebsocketFrameSend(ab);
          const buffer = frame.createFrame(opcodes.BINARY);
          this.#bufferedAmount += ab.byteLength;
          socket.write(buffer, () => {
            this.#bufferedAmount -= ab.byteLength;
          });
        } else if (isBlobLike(data)) {
          const frame = new WebsocketFrameSend();
          data.arrayBuffer().then((ab) => {
            const value = Buffer.from(ab);
            frame.frameData = value;
            const buffer = frame.createFrame(opcodes.BINARY);
            this.#bufferedAmount += value.byteLength;
            socket.write(buffer, () => {
              this.#bufferedAmount -= value.byteLength;
            });
          });
        }
      }
      get readyState() {
        webidl.brandCheck(this, _WebSocket);
        return this[kReadyState];
      }
      get bufferedAmount() {
        webidl.brandCheck(this, _WebSocket);
        return this.#bufferedAmount;
      }
      get url() {
        webidl.brandCheck(this, _WebSocket);
        return URLSerializer(this[kWebSocketURL]);
      }
      get extensions() {
        webidl.brandCheck(this, _WebSocket);
        return this.#extensions;
      }
      get protocol() {
        webidl.brandCheck(this, _WebSocket);
        return this.#protocol;
      }
      get onopen() {
        webidl.brandCheck(this, _WebSocket);
        return this.#events.open;
      }
      set onopen(fn) {
        webidl.brandCheck(this, _WebSocket);
        if (this.#events.open) {
          this.removeEventListener("open", this.#events.open);
        }
        if (typeof fn === "function") {
          this.#events.open = fn;
          this.addEventListener("open", fn);
        } else {
          this.#events.open = null;
        }
      }
      get onerror() {
        webidl.brandCheck(this, _WebSocket);
        return this.#events.error;
      }
      set onerror(fn) {
        webidl.brandCheck(this, _WebSocket);
        if (this.#events.error) {
          this.removeEventListener("error", this.#events.error);
        }
        if (typeof fn === "function") {
          this.#events.error = fn;
          this.addEventListener("error", fn);
        } else {
          this.#events.error = null;
        }
      }
      get onclose() {
        webidl.brandCheck(this, _WebSocket);
        return this.#events.close;
      }
      set onclose(fn) {
        webidl.brandCheck(this, _WebSocket);
        if (this.#events.close) {
          this.removeEventListener("close", this.#events.close);
        }
        if (typeof fn === "function") {
          this.#events.close = fn;
          this.addEventListener("close", fn);
        } else {
          this.#events.close = null;
        }
      }
      get onmessage() {
        webidl.brandCheck(this, _WebSocket);
        return this.#events.message;
      }
      set onmessage(fn) {
        webidl.brandCheck(this, _WebSocket);
        if (this.#events.message) {
          this.removeEventListener("message", this.#events.message);
        }
        if (typeof fn === "function") {
          this.#events.message = fn;
          this.addEventListener("message", fn);
        } else {
          this.#events.message = null;
        }
      }
      get binaryType() {
        webidl.brandCheck(this, _WebSocket);
        return this[kBinaryType];
      }
      set binaryType(type) {
        webidl.brandCheck(this, _WebSocket);
        if (type !== "blob" && type !== "arraybuffer") {
          this[kBinaryType] = "blob";
        } else {
          this[kBinaryType] = type;
        }
      }
      /**
       * @see https://websockets.spec.whatwg.org/#feedback-from-the-protocol
       */
      #onConnectionEstablished(response) {
        this[kResponse] = response;
        const parser = new ByteParser(this);
        parser.on("drain", function onParserDrain() {
          this.ws[kResponse].socket.resume();
        });
        response.socket.ws = this;
        this[kByteParser] = parser;
        this[kReadyState] = states.OPEN;
        const extensions = response.headersList.get("sec-websocket-extensions");
        if (extensions !== null) {
          this.#extensions = extensions;
        }
        const protocol = response.headersList.get("sec-websocket-protocol");
        if (protocol !== null) {
          this.#protocol = protocol;
        }
        fireEvent("open", this);
      }
    };
    WebSocket.CONNECTING = WebSocket.prototype.CONNECTING = states.CONNECTING;
    WebSocket.OPEN = WebSocket.prototype.OPEN = states.OPEN;
    WebSocket.CLOSING = WebSocket.prototype.CLOSING = states.CLOSING;
    WebSocket.CLOSED = WebSocket.prototype.CLOSED = states.CLOSED;
    Object.defineProperties(WebSocket.prototype, {
      CONNECTING: staticPropertyDescriptors,
      OPEN: staticPropertyDescriptors,
      CLOSING: staticPropertyDescriptors,
      CLOSED: staticPropertyDescriptors,
      url: kEnumerableProperty,
      readyState: kEnumerableProperty,
      bufferedAmount: kEnumerableProperty,
      onopen: kEnumerableProperty,
      onerror: kEnumerableProperty,
      onclose: kEnumerableProperty,
      close: kEnumerableProperty,
      onmessage: kEnumerableProperty,
      binaryType: kEnumerableProperty,
      send: kEnumerableProperty,
      extensions: kEnumerableProperty,
      protocol: kEnumerableProperty,
      [Symbol.toStringTag]: {
        value: "WebSocket",
        writable: false,
        enumerable: false,
        configurable: true
      }
    });
    Object.defineProperties(WebSocket, {
      CONNECTING: staticPropertyDescriptors,
      OPEN: staticPropertyDescriptors,
      CLOSING: staticPropertyDescriptors,
      CLOSED: staticPropertyDescriptors
    });
    webidl.converters["sequence<DOMString>"] = webidl.sequenceConverter(
      webidl.converters.DOMString
    );
    webidl.converters["DOMString or sequence<DOMString>"] = function(V) {
      if (webidl.util.Type(V) === "Object" && Symbol.iterator in V) {
        return webidl.converters["sequence<DOMString>"](V);
      }
      return webidl.converters.DOMString(V);
    };
    webidl.converters.WebSocketInit = webidl.dictionaryConverter([
      {
        key: "protocols",
        converter: webidl.converters["DOMString or sequence<DOMString>"],
        get defaultValue() {
          return [];
        }
      },
      {
        key: "dispatcher",
        converter: (V) => V,
        get defaultValue() {
          return getGlobalDispatcher();
        }
      },
      {
        key: "headers",
        converter: webidl.nullableConverter(webidl.converters.HeadersInit)
      }
    ]);
    webidl.converters["DOMString or sequence<DOMString> or WebSocketInit"] = function(V) {
      if (webidl.util.Type(V) === "Object" && !(Symbol.iterator in V)) {
        return webidl.converters.WebSocketInit(V);
      }
      return { protocols: webidl.converters["DOMString or sequence<DOMString>"](V) };
    };
    webidl.converters.WebSocketSendData = function(V) {
      if (webidl.util.Type(V) === "Object") {
        if (isBlobLike(V)) {
          return webidl.converters.Blob(V, { strict: false });
        }
        if (ArrayBuffer.isView(V) || types.isAnyArrayBuffer(V)) {
          return webidl.converters.BufferSource(V);
        }
      }
      return webidl.converters.USVString(V);
    };
    module2.exports = {
      WebSocket
    };
  }
});

// node_modules/undici/index.js
var require_undici = __commonJS({
  "node_modules/undici/index.js"(exports2, module2) {
    "use strict";
    var Client = require_client();
    var Dispatcher = require_dispatcher();
    var errors = require_errors();
    var Pool = require_pool();
    var BalancedPool = require_balanced_pool();
    var Agent = require_agent();
    var util = require_util();
    var { InvalidArgumentError } = errors;
    var api = require_api();
    var buildConnector = require_connect();
    var MockClient = require_mock_client();
    var MockAgent = require_mock_agent();
    var MockPool = require_mock_pool();
    var mockErrors = require_mock_errors();
    var ProxyAgent = require_proxy_agent();
    var RetryHandler = require_RetryHandler();
    var { getGlobalDispatcher, setGlobalDispatcher } = require_global2();
    var DecoratorHandler = require_DecoratorHandler();
    var RedirectHandler = require_RedirectHandler();
    var createRedirectInterceptor = require_redirectInterceptor();
    var hasCrypto;
    try {
      require("crypto");
      hasCrypto = true;
    } catch {
      hasCrypto = false;
    }
    Object.assign(Dispatcher.prototype, api);
    module2.exports.Dispatcher = Dispatcher;
    module2.exports.Client = Client;
    module2.exports.Pool = Pool;
    module2.exports.BalancedPool = BalancedPool;
    module2.exports.Agent = Agent;
    module2.exports.ProxyAgent = ProxyAgent;
    module2.exports.RetryHandler = RetryHandler;
    module2.exports.DecoratorHandler = DecoratorHandler;
    module2.exports.RedirectHandler = RedirectHandler;
    module2.exports.createRedirectInterceptor = createRedirectInterceptor;
    module2.exports.buildConnector = buildConnector;
    module2.exports.errors = errors;
    function makeDispatcher(fn) {
      return (url, opts, handler2) => {
        if (typeof opts === "function") {
          handler2 = opts;
          opts = null;
        }
        if (!url || typeof url !== "string" && typeof url !== "object" && !(url instanceof URL)) {
          throw new InvalidArgumentError("invalid url");
        }
        if (opts != null && typeof opts !== "object") {
          throw new InvalidArgumentError("invalid opts");
        }
        if (opts && opts.path != null) {
          if (typeof opts.path !== "string") {
            throw new InvalidArgumentError("invalid opts.path");
          }
          let path = opts.path;
          if (!opts.path.startsWith("/")) {
            path = `/${path}`;
          }
          url = new URL(util.parseOrigin(url).origin + path);
        } else {
          if (!opts) {
            opts = typeof url === "object" ? url : {};
          }
          url = util.parseURL(url);
        }
        const { agent, dispatcher = getGlobalDispatcher() } = opts;
        if (agent) {
          throw new InvalidArgumentError("unsupported opts.agent. Did you mean opts.client?");
        }
        return fn.call(dispatcher, {
          ...opts,
          origin: url.origin,
          path: url.search ? `${url.pathname}${url.search}` : url.pathname,
          method: opts.method || (opts.body ? "PUT" : "GET")
        }, handler2);
      };
    }
    module2.exports.setGlobalDispatcher = setGlobalDispatcher;
    module2.exports.getGlobalDispatcher = getGlobalDispatcher;
    if (util.nodeMajor > 16 || util.nodeMajor === 16 && util.nodeMinor >= 8) {
      let fetchImpl = null;
      module2.exports.fetch = async function fetch2(resource) {
        if (!fetchImpl) {
          fetchImpl = require_fetch().fetch;
        }
        try {
          return await fetchImpl(...arguments);
        } catch (err) {
          if (typeof err === "object") {
            Error.captureStackTrace(err, this);
          }
          throw err;
        }
      };
      module2.exports.Headers = require_headers().Headers;
      module2.exports.Response = require_response().Response;
      module2.exports.Request = require_request2().Request;
      module2.exports.FormData = require_formdata().FormData;
      module2.exports.File = require_file().File;
      module2.exports.FileReader = require_filereader().FileReader;
      const { setGlobalOrigin, getGlobalOrigin } = require_global();
      module2.exports.setGlobalOrigin = setGlobalOrigin;
      module2.exports.getGlobalOrigin = getGlobalOrigin;
      const { CacheStorage } = require_cachestorage();
      const { kConstruct } = require_symbols4();
      module2.exports.caches = new CacheStorage(kConstruct);
    }
    if (util.nodeMajor >= 16) {
      const { deleteCookie, getCookies, getSetCookies, setCookie } = require_cookies();
      module2.exports.deleteCookie = deleteCookie;
      module2.exports.getCookies = getCookies;
      module2.exports.getSetCookies = getSetCookies;
      module2.exports.setCookie = setCookie;
      const { parseMIMEType, serializeAMimeType } = require_dataURL();
      module2.exports.parseMIMEType = parseMIMEType;
      module2.exports.serializeAMimeType = serializeAMimeType;
    }
    if (util.nodeMajor >= 18 && hasCrypto) {
      const { WebSocket } = require_websocket();
      module2.exports.WebSocket = WebSocket;
    }
    module2.exports.request = makeDispatcher(api.request);
    module2.exports.stream = makeDispatcher(api.stream);
    module2.exports.pipeline = makeDispatcher(api.pipeline);
    module2.exports.connect = makeDispatcher(api.connect);
    module2.exports.upgrade = makeDispatcher(api.upgrade);
    module2.exports.MockClient = MockClient;
    module2.exports.MockPool = MockPool;
    module2.exports.MockAgent = MockAgent;
    module2.exports.mockErrors = mockErrors;
  }
});

// node_modules/@actions/http-client/lib/index.js
var require_lib = __commonJS({
  "node_modules/@actions/http-client/lib/index.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? (function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    }));
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? (function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.HttpClient = exports2.isHttps = exports2.HttpClientResponse = exports2.HttpClientError = exports2.getProxyUrl = exports2.MediaTypes = exports2.Headers = exports2.HttpCodes = void 0;
    var http2 = __importStar(require("http"));
    var https2 = __importStar(require("https"));
    var pm = __importStar(require_proxy());
    var tunnel = __importStar(require_tunnel2());
    var undici_1 = require_undici();
    var HttpCodes;
    (function(HttpCodes2) {
      HttpCodes2[HttpCodes2["OK"] = 200] = "OK";
      HttpCodes2[HttpCodes2["MultipleChoices"] = 300] = "MultipleChoices";
      HttpCodes2[HttpCodes2["MovedPermanently"] = 301] = "MovedPermanently";
      HttpCodes2[HttpCodes2["ResourceMoved"] = 302] = "ResourceMoved";
      HttpCodes2[HttpCodes2["SeeOther"] = 303] = "SeeOther";
      HttpCodes2[HttpCodes2["NotModified"] = 304] = "NotModified";
      HttpCodes2[HttpCodes2["UseProxy"] = 305] = "UseProxy";
      HttpCodes2[HttpCodes2["SwitchProxy"] = 306] = "SwitchProxy";
      HttpCodes2[HttpCodes2["TemporaryRedirect"] = 307] = "TemporaryRedirect";
      HttpCodes2[HttpCodes2["PermanentRedirect"] = 308] = "PermanentRedirect";
      HttpCodes2[HttpCodes2["BadRequest"] = 400] = "BadRequest";
      HttpCodes2[HttpCodes2["Unauthorized"] = 401] = "Unauthorized";
      HttpCodes2[HttpCodes2["PaymentRequired"] = 402] = "PaymentRequired";
      HttpCodes2[HttpCodes2["Forbidden"] = 403] = "Forbidden";
      HttpCodes2[HttpCodes2["NotFound"] = 404] = "NotFound";
      HttpCodes2[HttpCodes2["MethodNotAllowed"] = 405] = "MethodNotAllowed";
      HttpCodes2[HttpCodes2["NotAcceptable"] = 406] = "NotAcceptable";
      HttpCodes2[HttpCodes2["ProxyAuthenticationRequired"] = 407] = "ProxyAuthenticationRequired";
      HttpCodes2[HttpCodes2["RequestTimeout"] = 408] = "RequestTimeout";
      HttpCodes2[HttpCodes2["Conflict"] = 409] = "Conflict";
      HttpCodes2[HttpCodes2["Gone"] = 410] = "Gone";
      HttpCodes2[HttpCodes2["TooManyRequests"] = 429] = "TooManyRequests";
      HttpCodes2[HttpCodes2["InternalServerError"] = 500] = "InternalServerError";
      HttpCodes2[HttpCodes2["NotImplemented"] = 501] = "NotImplemented";
      HttpCodes2[HttpCodes2["BadGateway"] = 502] = "BadGateway";
      HttpCodes2[HttpCodes2["ServiceUnavailable"] = 503] = "ServiceUnavailable";
      HttpCodes2[HttpCodes2["GatewayTimeout"] = 504] = "GatewayTimeout";
    })(HttpCodes || (exports2.HttpCodes = HttpCodes = {}));
    var Headers;
    (function(Headers2) {
      Headers2["Accept"] = "accept";
      Headers2["ContentType"] = "content-type";
    })(Headers || (exports2.Headers = Headers = {}));
    var MediaTypes;
    (function(MediaTypes2) {
      MediaTypes2["ApplicationJson"] = "application/json";
    })(MediaTypes || (exports2.MediaTypes = MediaTypes = {}));
    function getProxyUrl(serverUrl) {
      const proxyUrl = pm.getProxyUrl(new URL(serverUrl));
      return proxyUrl ? proxyUrl.href : "";
    }
    exports2.getProxyUrl = getProxyUrl;
    var HttpRedirectCodes = [
      HttpCodes.MovedPermanently,
      HttpCodes.ResourceMoved,
      HttpCodes.SeeOther,
      HttpCodes.TemporaryRedirect,
      HttpCodes.PermanentRedirect
    ];
    var HttpResponseRetryCodes = [
      HttpCodes.BadGateway,
      HttpCodes.ServiceUnavailable,
      HttpCodes.GatewayTimeout
    ];
    var RetryableHttpVerbs = ["OPTIONS", "GET", "DELETE", "HEAD"];
    var ExponentialBackoffCeiling = 10;
    var ExponentialBackoffTimeSlice = 5;
    var HttpClientError = class _HttpClientError extends Error {
      constructor(message, statusCode) {
        super(message);
        this.name = "HttpClientError";
        this.statusCode = statusCode;
        Object.setPrototypeOf(this, _HttpClientError.prototype);
      }
    };
    exports2.HttpClientError = HttpClientError;
    var HttpClientResponse = class {
      constructor(message) {
        this.message = message;
      }
      readBody() {
        return __awaiter(this, void 0, void 0, function* () {
          return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {
            let output = Buffer.alloc(0);
            this.message.on("data", (chunk) => {
              output = Buffer.concat([output, chunk]);
            });
            this.message.on("end", () => {
              resolve(output.toString());
            });
          }));
        });
      }
      readBodyBuffer() {
        return __awaiter(this, void 0, void 0, function* () {
          return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {
            const chunks = [];
            this.message.on("data", (chunk) => {
              chunks.push(chunk);
            });
            this.message.on("end", () => {
              resolve(Buffer.concat(chunks));
            });
          }));
        });
      }
    };
    exports2.HttpClientResponse = HttpClientResponse;
    function isHttps(requestUrl) {
      const parsedUrl = new URL(requestUrl);
      return parsedUrl.protocol === "https:";
    }
    exports2.isHttps = isHttps;
    var HttpClient2 = class {
      constructor(userAgent2, handlers, requestOptions) {
        this._ignoreSslError = false;
        this._allowRedirects = true;
        this._allowRedirectDowngrade = false;
        this._maxRedirects = 50;
        this._allowRetries = false;
        this._maxRetries = 1;
        this._keepAlive = false;
        this._disposed = false;
        this.userAgent = userAgent2;
        this.handlers = handlers || [];
        this.requestOptions = requestOptions;
        if (requestOptions) {
          if (requestOptions.ignoreSslError != null) {
            this._ignoreSslError = requestOptions.ignoreSslError;
          }
          this._socketTimeout = requestOptions.socketTimeout;
          if (requestOptions.allowRedirects != null) {
            this._allowRedirects = requestOptions.allowRedirects;
          }
          if (requestOptions.allowRedirectDowngrade != null) {
            this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;
          }
          if (requestOptions.maxRedirects != null) {
            this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);
          }
          if (requestOptions.keepAlive != null) {
            this._keepAlive = requestOptions.keepAlive;
          }
          if (requestOptions.allowRetries != null) {
            this._allowRetries = requestOptions.allowRetries;
          }
          if (requestOptions.maxRetries != null) {
            this._maxRetries = requestOptions.maxRetries;
          }
        }
      }
      options(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
          return this.request("OPTIONS", requestUrl, null, additionalHeaders || {});
        });
      }
      get(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
          return this.request("GET", requestUrl, null, additionalHeaders || {});
        });
      }
      del(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
          return this.request("DELETE", requestUrl, null, additionalHeaders || {});
        });
      }
      post(requestUrl, data, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
          return this.request("POST", requestUrl, data, additionalHeaders || {});
        });
      }
      patch(requestUrl, data, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
          return this.request("PATCH", requestUrl, data, additionalHeaders || {});
        });
      }
      put(requestUrl, data, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
          return this.request("PUT", requestUrl, data, additionalHeaders || {});
        });
      }
      head(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
          return this.request("HEAD", requestUrl, null, additionalHeaders || {});
        });
      }
      sendStream(verb, requestUrl, stream, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
          return this.request(verb, requestUrl, stream, additionalHeaders);
        });
      }
      /**
       * Gets a typed object from an endpoint
       * Be aware that not found returns a null.  Other errors (4xx, 5xx) reject the promise
       */
      getJson(requestUrl, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
          additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
          const res = yield this.get(requestUrl, additionalHeaders);
          return this._processResponse(res, this.requestOptions);
        });
      }
      postJson(requestUrl, obj, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
          const data = JSON.stringify(obj, null, 2);
          additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
          additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
          const res = yield this.post(requestUrl, data, additionalHeaders);
          return this._processResponse(res, this.requestOptions);
        });
      }
      putJson(requestUrl, obj, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
          const data = JSON.stringify(obj, null, 2);
          additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
          additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
          const res = yield this.put(requestUrl, data, additionalHeaders);
          return this._processResponse(res, this.requestOptions);
        });
      }
      patchJson(requestUrl, obj, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
          const data = JSON.stringify(obj, null, 2);
          additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
          additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
          const res = yield this.patch(requestUrl, data, additionalHeaders);
          return this._processResponse(res, this.requestOptions);
        });
      }
      /**
       * Makes a raw http request.
       * All other methods such as get, post, patch, and request ultimately call this.
       * Prefer get, del, post and patch
       */
      request(verb, requestUrl, data, headers) {
        return __awaiter(this, void 0, void 0, function* () {
          if (this._disposed) {
            throw new Error("Client has already been disposed.");
          }
          const parsedUrl = new URL(requestUrl);
          let info = this._prepareRequest(verb, parsedUrl, headers);
          const maxTries = this._allowRetries && RetryableHttpVerbs.includes(verb) ? this._maxRetries + 1 : 1;
          let numTries = 0;
          let response;
          do {
            response = yield this.requestRaw(info, data);
            if (response && response.message && response.message.statusCode === HttpCodes.Unauthorized) {
              let authenticationHandler;
              for (const handler2 of this.handlers) {
                if (handler2.canHandleAuthentication(response)) {
                  authenticationHandler = handler2;
                  break;
                }
              }
              if (authenticationHandler) {
                return authenticationHandler.handleAuthentication(this, info, data);
              } else {
                return response;
              }
            }
            let redirectsRemaining = this._maxRedirects;
            while (response.message.statusCode && HttpRedirectCodes.includes(response.message.statusCode) && this._allowRedirects && redirectsRemaining > 0) {
              const redirectUrl = response.message.headers["location"];
              if (!redirectUrl) {
                break;
              }
              const parsedRedirectUrl = new URL(redirectUrl);
              if (parsedUrl.protocol === "https:" && parsedUrl.protocol !== parsedRedirectUrl.protocol && !this._allowRedirectDowngrade) {
                throw new Error("Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.");
              }
              yield response.readBody();
              if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {
                for (const header in headers) {
                  if (header.toLowerCase() === "authorization") {
                    delete headers[header];
                  }
                }
              }
              info = this._prepareRequest(verb, parsedRedirectUrl, headers);
              response = yield this.requestRaw(info, data);
              redirectsRemaining--;
            }
            if (!response.message.statusCode || !HttpResponseRetryCodes.includes(response.message.statusCode)) {
              return response;
            }
            numTries += 1;
            if (numTries < maxTries) {
              yield response.readBody();
              yield this._performExponentialBackoff(numTries);
            }
          } while (numTries < maxTries);
          return response;
        });
      }
      /**
       * Needs to be called if keepAlive is set to true in request options.
       */
      dispose() {
        if (this._agent) {
          this._agent.destroy();
        }
        this._disposed = true;
      }
      /**
       * Raw request.
       * @param info
       * @param data
       */
      requestRaw(info, data) {
        return __awaiter(this, void 0, void 0, function* () {
          return new Promise((resolve, reject) => {
            function callbackForResult(err, res) {
              if (err) {
                reject(err);
              } else if (!res) {
                reject(new Error("Unknown error"));
              } else {
                resolve(res);
              }
            }
            this.requestRawWithCallback(info, data, callbackForResult);
          });
        });
      }
      /**
       * Raw request with callback.
       * @param info
       * @param data
       * @param onResult
       */
      requestRawWithCallback(info, data, onResult) {
        if (typeof data === "string") {
          if (!info.options.headers) {
            info.options.headers = {};
          }
          info.options.headers["Content-Length"] = Buffer.byteLength(data, "utf8");
        }
        let callbackCalled = false;
        function handleResult(err, res) {
          if (!callbackCalled) {
            callbackCalled = true;
            onResult(err, res);
          }
        }
        const req = info.httpModule.request(info.options, (msg) => {
          const res = new HttpClientResponse(msg);
          handleResult(void 0, res);
        });
        let socket;
        req.on("socket", (sock) => {
          socket = sock;
        });
        req.setTimeout(this._socketTimeout || 3 * 6e4, () => {
          if (socket) {
            socket.end();
          }
          handleResult(new Error(`Request timeout: ${info.options.path}`));
        });
        req.on("error", function(err) {
          handleResult(err);
        });
        if (data && typeof data === "string") {
          req.write(data, "utf8");
        }
        if (data && typeof data !== "string") {
          data.on("close", function() {
            req.end();
          });
          data.pipe(req);
        } else {
          req.end();
        }
      }
      /**
       * Gets an http agent. This function is useful when you need an http agent that handles
       * routing through a proxy server - depending upon the url and proxy environment variables.
       * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com
       */
      getAgent(serverUrl) {
        const parsedUrl = new URL(serverUrl);
        return this._getAgent(parsedUrl);
      }
      getAgentDispatcher(serverUrl) {
        const parsedUrl = new URL(serverUrl);
        const proxyUrl = pm.getProxyUrl(parsedUrl);
        const useProxy = proxyUrl && proxyUrl.hostname;
        if (!useProxy) {
          return;
        }
        return this._getProxyAgentDispatcher(parsedUrl, proxyUrl);
      }
      _prepareRequest(method, requestUrl, headers) {
        const info = {};
        info.parsedUrl = requestUrl;
        const usingSsl = info.parsedUrl.protocol === "https:";
        info.httpModule = usingSsl ? https2 : http2;
        const defaultPort = usingSsl ? 443 : 80;
        info.options = {};
        info.options.host = info.parsedUrl.hostname;
        info.options.port = info.parsedUrl.port ? parseInt(info.parsedUrl.port) : defaultPort;
        info.options.path = (info.parsedUrl.pathname || "") + (info.parsedUrl.search || "");
        info.options.method = method;
        info.options.headers = this._mergeHeaders(headers);
        if (this.userAgent != null) {
          info.options.headers["user-agent"] = this.userAgent;
        }
        info.options.agent = this._getAgent(info.parsedUrl);
        if (this.handlers) {
          for (const handler2 of this.handlers) {
            handler2.prepareRequest(info.options);
          }
        }
        return info;
      }
      _mergeHeaders(headers) {
        if (this.requestOptions && this.requestOptions.headers) {
          return Object.assign({}, lowercaseKeys2(this.requestOptions.headers), lowercaseKeys2(headers || {}));
        }
        return lowercaseKeys2(headers || {});
      }
      _getExistingOrDefaultHeader(additionalHeaders, header, _default) {
        let clientHeader;
        if (this.requestOptions && this.requestOptions.headers) {
          clientHeader = lowercaseKeys2(this.requestOptions.headers)[header];
        }
        return additionalHeaders[header] || clientHeader || _default;
      }
      _getAgent(parsedUrl) {
        let agent;
        const proxyUrl = pm.getProxyUrl(parsedUrl);
        const useProxy = proxyUrl && proxyUrl.hostname;
        if (this._keepAlive && useProxy) {
          agent = this._proxyAgent;
        }
        if (!useProxy) {
          agent = this._agent;
        }
        if (agent) {
          return agent;
        }
        const usingSsl = parsedUrl.protocol === "https:";
        let maxSockets = 100;
        if (this.requestOptions) {
          maxSockets = this.requestOptions.maxSockets || http2.globalAgent.maxSockets;
        }
        if (proxyUrl && proxyUrl.hostname) {
          const agentOptions = {
            maxSockets,
            keepAlive: this._keepAlive,
            proxy: Object.assign(Object.assign({}, (proxyUrl.username || proxyUrl.password) && {
              proxyAuth: `${proxyUrl.username}:${proxyUrl.password}`
            }), { host: proxyUrl.hostname, port: proxyUrl.port })
          };
          let tunnelAgent;
          const overHttps = proxyUrl.protocol === "https:";
          if (usingSsl) {
            tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;
          } else {
            tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;
          }
          agent = tunnelAgent(agentOptions);
          this._proxyAgent = agent;
        }
        if (!agent) {
          const options = { keepAlive: this._keepAlive, maxSockets };
          agent = usingSsl ? new https2.Agent(options) : new http2.Agent(options);
          this._agent = agent;
        }
        if (usingSsl && this._ignoreSslError) {
          agent.options = Object.assign(agent.options || {}, {
            rejectUnauthorized: false
          });
        }
        return agent;
      }
      _getProxyAgentDispatcher(parsedUrl, proxyUrl) {
        let proxyAgent;
        if (this._keepAlive) {
          proxyAgent = this._proxyAgentDispatcher;
        }
        if (proxyAgent) {
          return proxyAgent;
        }
        const usingSsl = parsedUrl.protocol === "https:";
        proxyAgent = new undici_1.ProxyAgent(Object.assign({ uri: proxyUrl.href, pipelining: !this._keepAlive ? 0 : 1 }, (proxyUrl.username || proxyUrl.password) && {
          token: `Basic ${Buffer.from(`${proxyUrl.username}:${proxyUrl.password}`).toString("base64")}`
        }));
        this._proxyAgentDispatcher = proxyAgent;
        if (usingSsl && this._ignoreSslError) {
          proxyAgent.options = Object.assign(proxyAgent.options.requestTls || {}, {
            rejectUnauthorized: false
          });
        }
        return proxyAgent;
      }
      _performExponentialBackoff(retryNumber) {
        return __awaiter(this, void 0, void 0, function* () {
          retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);
          const ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);
          return new Promise((resolve) => setTimeout(() => resolve(), ms));
        });
      }
      _processResponse(res, options) {
        return __awaiter(this, void 0, void 0, function* () {
          return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {
            const statusCode = res.message.statusCode || 0;
            const response = {
              statusCode,
              result: null,
              headers: {}
            };
            if (statusCode === HttpCodes.NotFound) {
              resolve(response);
            }
            function dateTimeDeserializer(key, value) {
              if (typeof value === "string") {
                const a = new Date(value);
                if (!isNaN(a.valueOf())) {
                  return a;
                }
              }
              return value;
            }
            let obj;
            let contents;
            try {
              contents = yield res.readBody();
              if (contents && contents.length > 0) {
                if (options && options.deserializeDates) {
                  obj = JSON.parse(contents, dateTimeDeserializer);
                } else {
                  obj = JSON.parse(contents);
                }
                response.result = obj;
              }
              response.headers = res.message.headers;
            } catch (err) {
            }
            if (statusCode > 299) {
              let msg;
              if (obj && obj.message) {
                msg = obj.message;
              } else if (contents && contents.length > 0) {
                msg = contents;
              } else {
                msg = `Failed request: (${statusCode})`;
              }
              const err = new HttpClientError(msg, statusCode);
              err.result = response.result;
              reject(err);
            } else {
              resolve(response);
            }
          }));
        });
      }
    };
    exports2.HttpClient = HttpClient2;
    var lowercaseKeys2 = (obj) => Object.keys(obj).reduce((c, k) => (c[k.toLowerCase()] = obj[k], c), {});
  }
});

// node_modules/@actions/http-client/lib/auth.js
var require_auth = __commonJS({
  "node_modules/@actions/http-client/lib/auth.js"(exports2) {
    "use strict";
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.PersonalAccessTokenCredentialHandler = exports2.BearerCredentialHandler = exports2.BasicCredentialHandler = void 0;
    var BasicCredentialHandler = class {
      constructor(username, password) {
        this.username = username;
        this.password = password;
      }
      prepareRequest(options) {
        if (!options.headers) {
          throw Error("The request has no headers");
        }
        options.headers["Authorization"] = `Basic ${Buffer.from(`${this.username}:${this.password}`).toString("base64")}`;
      }
      // This handler cannot handle 401
      canHandleAuthentication() {
        return false;
      }
      handleAuthentication() {
        return __awaiter(this, void 0, void 0, function* () {
          throw new Error("not implemented");
        });
      }
    };
    exports2.BasicCredentialHandler = BasicCredentialHandler;
    var BearerCredentialHandler = class {
      constructor(token) {
        this.token = token;
      }
      // currently implements pre-authorization
      // TODO: support preAuth = false where it hooks on 401
      prepareRequest(options) {
        if (!options.headers) {
          throw Error("The request has no headers");
        }
        options.headers["Authorization"] = `Bearer ${this.token}`;
      }
      // This handler cannot handle 401
      canHandleAuthentication() {
        return false;
      }
      handleAuthentication() {
        return __awaiter(this, void 0, void 0, function* () {
          throw new Error("not implemented");
        });
      }
    };
    exports2.BearerCredentialHandler = BearerCredentialHandler;
    var PersonalAccessTokenCredentialHandler = class {
      constructor(token) {
        this.token = token;
      }
      // currently implements pre-authorization
      // TODO: support preAuth = false where it hooks on 401
      prepareRequest(options) {
        if (!options.headers) {
          throw Error("The request has no headers");
        }
        options.headers["Authorization"] = `Basic ${Buffer.from(`PAT:${this.token}`).toString("base64")}`;
      }
      // This handler cannot handle 401
      canHandleAuthentication() {
        return false;
      }
      handleAuthentication() {
        return __awaiter(this, void 0, void 0, function* () {
          throw new Error("not implemented");
        });
      }
    };
    exports2.PersonalAccessTokenCredentialHandler = PersonalAccessTokenCredentialHandler;
  }
});

// node_modules/@actions/core/lib/oidc-utils.js
var require_oidc_utils = __commonJS({
  "node_modules/@actions/core/lib/oidc-utils.js"(exports2) {
    "use strict";
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.OidcClient = void 0;
    var http_client_1 = require_lib();
    var auth_1 = require_auth();
    var core_1 = require_core();
    var OidcClient = class _OidcClient {
      static createHttpClient(allowRetry = true, maxRetry = 10) {
        const requestOptions = {
          allowRetries: allowRetry,
          maxRetries: maxRetry
        };
        return new http_client_1.HttpClient("actions/oidc-client", [new auth_1.BearerCredentialHandler(_OidcClient.getRequestToken())], requestOptions);
      }
      static getRequestToken() {
        const token = process.env["ACTIONS_ID_TOKEN_REQUEST_TOKEN"];
        if (!token) {
          throw new Error("Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable");
        }
        return token;
      }
      static getIDTokenUrl() {
        const runtimeUrl = process.env["ACTIONS_ID_TOKEN_REQUEST_URL"];
        if (!runtimeUrl) {
          throw new Error("Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable");
        }
        return runtimeUrl;
      }
      static getCall(id_token_url) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
          const httpclient = _OidcClient.createHttpClient();
          const res = yield httpclient.getJson(id_token_url).catch((error) => {
            throw new Error(`Failed to get ID Token. 
 
        Error Code : ${error.statusCode}
 
        Error Message: ${error.message}`);
          });
          const id_token = (_a = res.result) === null || _a === void 0 ? void 0 : _a.value;
          if (!id_token) {
            throw new Error("Response json body do not have ID Token field");
          }
          return id_token;
        });
      }
      static getIDToken(audience) {
        return __awaiter(this, void 0, void 0, function* () {
          try {
            let id_token_url = _OidcClient.getIDTokenUrl();
            if (audience) {
              const encodedAudience = encodeURIComponent(audience);
              id_token_url = `${id_token_url}&audience=${encodedAudience}`;
            }
            (0, core_1.debug)(`ID token url is ${id_token_url}`);
            const id_token = yield _OidcClient.getCall(id_token_url);
            (0, core_1.setSecret)(id_token);
            return id_token;
          } catch (error) {
            throw new Error(`Error message: ${error.message}`);
          }
        });
      }
    };
    exports2.OidcClient = OidcClient;
  }
});

// node_modules/@actions/core/lib/summary.js
var require_summary = __commonJS({
  "node_modules/@actions/core/lib/summary.js"(exports2) {
    "use strict";
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.summary = exports2.markdownSummary = exports2.SUMMARY_DOCS_URL = exports2.SUMMARY_ENV_VAR = void 0;
    var os_1 = require("os");
    var fs_1 = require("fs");
    var { access, appendFile, writeFile } = fs_1.promises;
    exports2.SUMMARY_ENV_VAR = "GITHUB_STEP_SUMMARY";
    exports2.SUMMARY_DOCS_URL = "https://docs.github.com/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary";
    var Summary = class {
      constructor() {
        this._buffer = "";
      }
      /**
       * Finds the summary file path from the environment, rejects if env var is not found or file does not exist
       * Also checks r/w permissions.
       *
       * @returns step summary file path
       */
      filePath() {
        return __awaiter(this, void 0, void 0, function* () {
          if (this._filePath) {
            return this._filePath;
          }
          const pathFromEnv = process.env[exports2.SUMMARY_ENV_VAR];
          if (!pathFromEnv) {
            throw new Error(`Unable to find environment variable for $${exports2.SUMMARY_ENV_VAR}. Check if your runtime environment supports job summaries.`);
          }
          try {
            yield access(pathFromEnv, fs_1.constants.R_OK | fs_1.constants.W_OK);
          } catch (_a) {
            throw new Error(`Unable to access summary file: '${pathFromEnv}'. Check if the file has correct read/write permissions.`);
          }
          this._filePath = pathFromEnv;
          return this._filePath;
        });
      }
      /**
       * Wraps content in an HTML tag, adding any HTML attributes
       *
       * @param {string} tag HTML tag to wrap
       * @param {string | null} content content within the tag
       * @param {[attribute: string]: string} attrs key-value list of HTML attributes to add
       *
       * @returns {string} content wrapped in HTML element
       */
      wrap(tag, content, attrs = {}) {
        const htmlAttrs = Object.entries(attrs).map(([key, value]) => ` ${key}="${value}"`).join("");
        if (!content) {
          return `<${tag}${htmlAttrs}>`;
        }
        return `<${tag}${htmlAttrs}>${content}</${tag}>`;
      }
      /**
       * Writes text in the buffer to the summary buffer file and empties buffer. Will append by default.
       *
       * @param {SummaryWriteOptions} [options] (optional) options for write operation
       *
       * @returns {Promise<Summary>} summary instance
       */
      write(options) {
        return __awaiter(this, void 0, void 0, function* () {
          const overwrite = !!(options === null || options === void 0 ? void 0 : options.overwrite);
          const filePath = yield this.filePath();
          const writeFunc = overwrite ? writeFile : appendFile;
          yield writeFunc(filePath, this._buffer, { encoding: "utf8" });
          return this.emptyBuffer();
        });
      }
      /**
       * Clears the summary buffer and wipes the summary file
       *
       * @returns {Summary} summary instance
       */
      clear() {
        return __awaiter(this, void 0, void 0, function* () {
          return this.emptyBuffer().write({ overwrite: true });
        });
      }
      /**
       * Returns the current summary buffer as a string
       *
       * @returns {string} string of summary buffer
       */
      stringify() {
        return this._buffer;
      }
      /**
       * If the summary buffer is empty
       *
       * @returns {boolen} true if the buffer is empty
       */
      isEmptyBuffer() {
        return this._buffer.length === 0;
      }
      /**
       * Resets the summary buffer without writing to summary file
       *
       * @returns {Summary} summary instance
       */
      emptyBuffer() {
        this._buffer = "";
        return this;
      }
      /**
       * Adds raw text to the summary buffer
       *
       * @param {string} text content to add
       * @param {boolean} [addEOL=false] (optional) append an EOL to the raw text (default: false)
       *
       * @returns {Summary} summary instance
       */
      addRaw(text, addEOL = false) {
        this._buffer += text;
        return addEOL ? this.addEOL() : this;
      }
      /**
       * Adds the operating system-specific end-of-line marker to the buffer
       *
       * @returns {Summary} summary instance
       */
      addEOL() {
        return this.addRaw(os_1.EOL);
      }
      /**
       * Adds an HTML codeblock to the summary buffer
       *
       * @param {string} code content to render within fenced code block
       * @param {string} lang (optional) language to syntax highlight code
       *
       * @returns {Summary} summary instance
       */
      addCodeBlock(code, lang) {
        const attrs = Object.assign({}, lang && { lang });
        const element = this.wrap("pre", this.wrap("code", code), attrs);
        return this.addRaw(element).addEOL();
      }
      /**
       * Adds an HTML list to the summary buffer
       *
       * @param {string[]} items list of items to render
       * @param {boolean} [ordered=false] (optional) if the rendered list should be ordered or not (default: false)
       *
       * @returns {Summary} summary instance
       */
      addList(items, ordered = false) {
        const tag = ordered ? "ol" : "ul";
        const listItems = items.map((item) => this.wrap("li", item)).join("");
        const element = this.wrap(tag, listItems);
        return this.addRaw(element).addEOL();
      }
      /**
       * Adds an HTML table to the summary buffer
       *
       * @param {SummaryTableCell[]} rows table rows
       *
       * @returns {Summary} summary instance
       */
      addTable(rows) {
        const tableBody = rows.map((row) => {
          const cells = row.map((cell) => {
            if (typeof cell === "string") {
              return this.wrap("td", cell);
            }
            const { header, data, colspan, rowspan } = cell;
            const tag = header ? "th" : "td";
            const attrs = Object.assign(Object.assign({}, colspan && { colspan }), rowspan && { rowspan });
            return this.wrap(tag, data, attrs);
          }).join("");
          return this.wrap("tr", cells);
        }).join("");
        const element = this.wrap("table", tableBody);
        return this.addRaw(element).addEOL();
      }
      /**
       * Adds a collapsable HTML details element to the summary buffer
       *
       * @param {string} label text for the closed state
       * @param {string} content collapsable content
       *
       * @returns {Summary} summary instance
       */
      addDetails(label, content) {
        const element = this.wrap("details", this.wrap("summary", label) + content);
        return this.addRaw(element).addEOL();
      }
      /**
       * Adds an HTML image tag to the summary buffer
       *
       * @param {string} src path to the image you to embed
       * @param {string} alt text description of the image
       * @param {SummaryImageOptions} options (optional) addition image attributes
       *
       * @returns {Summary} summary instance
       */
      addImage(src, alt, options) {
        const { width, height } = options || {};
        const attrs = Object.assign(Object.assign({}, width && { width }), height && { height });
        const element = this.wrap("img", null, Object.assign({ src, alt }, attrs));
        return this.addRaw(element).addEOL();
      }
      /**
       * Adds an HTML section heading element
       *
       * @param {string} text heading text
       * @param {number | string} [level=1] (optional) the heading level, default: 1
       *
       * @returns {Summary} summary instance
       */
      addHeading(text, level) {
        const tag = `h${level}`;
        const allowedTag = ["h1", "h2", "h3", "h4", "h5", "h6"].includes(tag) ? tag : "h1";
        const element = this.wrap(allowedTag, text);
        return this.addRaw(element).addEOL();
      }
      /**
       * Adds an HTML thematic break (<hr>) to the summary buffer
       *
       * @returns {Summary} summary instance
       */
      addSeparator() {
        const element = this.wrap("hr", null);
        return this.addRaw(element).addEOL();
      }
      /**
       * Adds an HTML line break (<br>) to the summary buffer
       *
       * @returns {Summary} summary instance
       */
      addBreak() {
        const element = this.wrap("br", null);
        return this.addRaw(element).addEOL();
      }
      /**
       * Adds an HTML blockquote to the summary buffer
       *
       * @param {string} text quote text
       * @param {string} cite (optional) citation url
       *
       * @returns {Summary} summary instance
       */
      addQuote(text, cite) {
        const attrs = Object.assign({}, cite && { cite });
        const element = this.wrap("blockquote", text, attrs);
        return this.addRaw(element).addEOL();
      }
      /**
       * Adds an HTML anchor tag to the summary buffer
       *
       * @param {string} text link text/content
       * @param {string} href hyperlink
       *
       * @returns {Summary} summary instance
       */
      addLink(text, href) {
        const element = this.wrap("a", text, { href });
        return this.addRaw(element).addEOL();
      }
    };
    var _summary = new Summary();
    exports2.markdownSummary = _summary;
    exports2.summary = _summary;
  }
});

// node_modules/@actions/core/lib/path-utils.js
var require_path_utils = __commonJS({
  "node_modules/@actions/core/lib/path-utils.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? (function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    }));
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? (function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.toPlatformPath = exports2.toWin32Path = exports2.toPosixPath = void 0;
    var path = __importStar(require("path"));
    function toPosixPath(pth) {
      return pth.replace(/[\\]/g, "/");
    }
    exports2.toPosixPath = toPosixPath;
    function toWin32Path(pth) {
      return pth.replace(/[/]/g, "\\");
    }
    exports2.toWin32Path = toWin32Path;
    function toPlatformPath(pth) {
      return pth.replace(/[/\\]/g, path.sep);
    }
    exports2.toPlatformPath = toPlatformPath;
  }
});

// node_modules/@actions/io/lib/io-util.js
var require_io_util = __commonJS({
  "node_modules/@actions/io/lib/io-util.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? (function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      Object.defineProperty(o, k2, { enumerable: true, get: function() {
        return m[k];
      } });
    }) : (function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    }));
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? (function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var _a;
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.getCmdPath = exports2.tryGetExecutablePath = exports2.isRooted = exports2.isDirectory = exports2.exists = exports2.READONLY = exports2.UV_FS_O_EXLOCK = exports2.IS_WINDOWS = exports2.unlink = exports2.symlink = exports2.stat = exports2.rmdir = exports2.rm = exports2.rename = exports2.readlink = exports2.readdir = exports2.open = exports2.mkdir = exports2.lstat = exports2.copyFile = exports2.chmod = void 0;
    var fs2 = __importStar(require("fs"));
    var path = __importStar(require("path"));
    _a = fs2.promises, exports2.chmod = _a.chmod, exports2.copyFile = _a.copyFile, exports2.lstat = _a.lstat, exports2.mkdir = _a.mkdir, exports2.open = _a.open, exports2.readdir = _a.readdir, exports2.readlink = _a.readlink, exports2.rename = _a.rename, exports2.rm = _a.rm, exports2.rmdir = _a.rmdir, exports2.stat = _a.stat, exports2.symlink = _a.symlink, exports2.unlink = _a.unlink;
    exports2.IS_WINDOWS = process.platform === "win32";
    exports2.UV_FS_O_EXLOCK = 268435456;
    exports2.READONLY = fs2.constants.O_RDONLY;
    function exists(fsPath) {
      return __awaiter(this, void 0, void 0, function* () {
        try {
          yield exports2.stat(fsPath);
        } catch (err) {
          if (err.code === "ENOENT") {
            return false;
          }
          throw err;
        }
        return true;
      });
    }
    exports2.exists = exists;
    function isDirectory(fsPath, useStat = false) {
      return __awaiter(this, void 0, void 0, function* () {
        const stats = useStat ? yield exports2.stat(fsPath) : yield exports2.lstat(fsPath);
        return stats.isDirectory();
      });
    }
    exports2.isDirectory = isDirectory;
    function isRooted(p) {
      p = normalizeSeparators(p);
      if (!p) {
        throw new Error('isRooted() parameter "p" cannot be empty');
      }
      if (exports2.IS_WINDOWS) {
        return p.startsWith("\\") || /^[A-Z]:/i.test(p);
      }
      return p.startsWith("/");
    }
    exports2.isRooted = isRooted;
    function tryGetExecutablePath(filePath, extensions) {
      return __awaiter(this, void 0, void 0, function* () {
        let stats = void 0;
        try {
          stats = yield exports2.stat(filePath);
        } catch (err) {
          if (err.code !== "ENOENT") {
            console.log(`Unexpected error attempting to determine if executable file exists '${filePath}': ${err}`);
          }
        }
        if (stats && stats.isFile()) {
          if (exports2.IS_WINDOWS) {
            const upperExt = path.extname(filePath).toUpperCase();
            if (extensions.some((validExt) => validExt.toUpperCase() === upperExt)) {
              return filePath;
            }
          } else {
            if (isUnixExecutable(stats)) {
              return filePath;
            }
          }
        }
        const originalFilePath = filePath;
        for (const extension of extensions) {
          filePath = originalFilePath + extension;
          stats = void 0;
          try {
            stats = yield exports2.stat(filePath);
          } catch (err) {
            if (err.code !== "ENOENT") {
              console.log(`Unexpected error attempting to determine if executable file exists '${filePath}': ${err}`);
            }
          }
          if (stats && stats.isFile()) {
            if (exports2.IS_WINDOWS) {
              try {
                const directory = path.dirname(filePath);
                const upperName = path.basename(filePath).toUpperCase();
                for (const actualName of yield exports2.readdir(directory)) {
                  if (upperName === actualName.toUpperCase()) {
                    filePath = path.join(directory, actualName);
                    break;
                  }
                }
              } catch (err) {
                console.log(`Unexpected error attempting to determine the actual case of the file '${filePath}': ${err}`);
              }
              return filePath;
            } else {
              if (isUnixExecutable(stats)) {
                return filePath;
              }
            }
          }
        }
        return "";
      });
    }
    exports2.tryGetExecutablePath = tryGetExecutablePath;
    function normalizeSeparators(p) {
      p = p || "";
      if (exports2.IS_WINDOWS) {
        p = p.replace(/\//g, "\\");
        return p.replace(/\\\\+/g, "\\");
      }
      return p.replace(/\/\/+/g, "/");
    }
    function isUnixExecutable(stats) {
      return (stats.mode & 1) > 0 || (stats.mode & 8) > 0 && stats.gid === process.getgid() || (stats.mode & 64) > 0 && stats.uid === process.getuid();
    }
    function getCmdPath() {
      var _a2;
      return (_a2 = process.env["COMSPEC"]) !== null && _a2 !== void 0 ? _a2 : `cmd.exe`;
    }
    exports2.getCmdPath = getCmdPath;
  }
});

// node_modules/@actions/io/lib/io.js
var require_io = __commonJS({
  "node_modules/@actions/io/lib/io.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? (function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      Object.defineProperty(o, k2, { enumerable: true, get: function() {
        return m[k];
      } });
    }) : (function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    }));
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? (function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.findInPath = exports2.which = exports2.mkdirP = exports2.rmRF = exports2.mv = exports2.cp = void 0;
    var assert_1 = require("assert");
    var path = __importStar(require("path"));
    var ioUtil = __importStar(require_io_util());
    function cp(source, dest, options = {}) {
      return __awaiter(this, void 0, void 0, function* () {
        const { force, recursive, copySourceDirectory } = readCopyOptions(options);
        const destStat = (yield ioUtil.exists(dest)) ? yield ioUtil.stat(dest) : null;
        if (destStat && destStat.isFile() && !force) {
          return;
        }
        const newDest = destStat && destStat.isDirectory() && copySourceDirectory ? path.join(dest, path.basename(source)) : dest;
        if (!(yield ioUtil.exists(source))) {
          throw new Error(`no such file or directory: ${source}`);
        }
        const sourceStat = yield ioUtil.stat(source);
        if (sourceStat.isDirectory()) {
          if (!recursive) {
            throw new Error(`Failed to copy. ${source} is a directory, but tried to copy without recursive flag.`);
          } else {
            yield cpDirRecursive(source, newDest, 0, force);
          }
        } else {
          if (path.relative(source, newDest) === "") {
            throw new Error(`'${newDest}' and '${source}' are the same file`);
          }
          yield copyFile(source, newDest, force);
        }
      });
    }
    exports2.cp = cp;
    function mv(source, dest, options = {}) {
      return __awaiter(this, void 0, void 0, function* () {
        if (yield ioUtil.exists(dest)) {
          let destExists = true;
          if (yield ioUtil.isDirectory(dest)) {
            dest = path.join(dest, path.basename(source));
            destExists = yield ioUtil.exists(dest);
          }
          if (destExists) {
            if (options.force == null || options.force) {
              yield rmRF(dest);
            } else {
              throw new Error("Destination already exists");
            }
          }
        }
        yield mkdirP(path.dirname(dest));
        yield ioUtil.rename(source, dest);
      });
    }
    exports2.mv = mv;
    function rmRF(inputPath) {
      return __awaiter(this, void 0, void 0, function* () {
        if (ioUtil.IS_WINDOWS) {
          if (/[*"<>|]/.test(inputPath)) {
            throw new Error('File path must not contain `*`, `"`, `<`, `>` or `|` on Windows');
          }
        }
        try {
          yield ioUtil.rm(inputPath, {
            force: true,
            maxRetries: 3,
            recursive: true,
            retryDelay: 300
          });
        } catch (err) {
          throw new Error(`File was unable to be removed ${err}`);
        }
      });
    }
    exports2.rmRF = rmRF;
    function mkdirP(fsPath) {
      return __awaiter(this, void 0, void 0, function* () {
        assert_1.ok(fsPath, "a path argument must be provided");
        yield ioUtil.mkdir(fsPath, { recursive: true });
      });
    }
    exports2.mkdirP = mkdirP;
    function which(tool, check) {
      return __awaiter(this, void 0, void 0, function* () {
        if (!tool) {
          throw new Error("parameter 'tool' is required");
        }
        if (check) {
          const result = yield which(tool, false);
          if (!result) {
            if (ioUtil.IS_WINDOWS) {
              throw new Error(`Unable to locate executable file: ${tool}. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also verify the file has a valid extension for an executable file.`);
            } else {
              throw new Error(`Unable to locate executable file: ${tool}. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.`);
            }
          }
          return result;
        }
        const matches = yield findInPath(tool);
        if (matches && matches.length > 0) {
          return matches[0];
        }
        return "";
      });
    }
    exports2.which = which;
    function findInPath(tool) {
      return __awaiter(this, void 0, void 0, function* () {
        if (!tool) {
          throw new Error("parameter 'tool' is required");
        }
        const extensions = [];
        if (ioUtil.IS_WINDOWS && process.env["PATHEXT"]) {
          for (const extension of process.env["PATHEXT"].split(path.delimiter)) {
            if (extension) {
              extensions.push(extension);
            }
          }
        }
        if (ioUtil.isRooted(tool)) {
          const filePath = yield ioUtil.tryGetExecutablePath(tool, extensions);
          if (filePath) {
            return [filePath];
          }
          return [];
        }
        if (tool.includes(path.sep)) {
          return [];
        }
        const directories = [];
        if (process.env.PATH) {
          for (const p of process.env.PATH.split(path.delimiter)) {
            if (p) {
              directories.push(p);
            }
          }
        }
        const matches = [];
        for (const directory of directories) {
          const filePath = yield ioUtil.tryGetExecutablePath(path.join(directory, tool), extensions);
          if (filePath) {
            matches.push(filePath);
          }
        }
        return matches;
      });
    }
    exports2.findInPath = findInPath;
    function readCopyOptions(options) {
      const force = options.force == null ? true : options.force;
      const recursive = Boolean(options.recursive);
      const copySourceDirectory = options.copySourceDirectory == null ? true : Boolean(options.copySourceDirectory);
      return { force, recursive, copySourceDirectory };
    }
    function cpDirRecursive(sourceDir, destDir, currentDepth, force) {
      return __awaiter(this, void 0, void 0, function* () {
        if (currentDepth >= 255)
          return;
        currentDepth++;
        yield mkdirP(destDir);
        const files = yield ioUtil.readdir(sourceDir);
        for (const fileName of files) {
          const srcFile = `${sourceDir}/${fileName}`;
          const destFile = `${destDir}/${fileName}`;
          const srcFileStat = yield ioUtil.lstat(srcFile);
          if (srcFileStat.isDirectory()) {
            yield cpDirRecursive(srcFile, destFile, currentDepth, force);
          } else {
            yield copyFile(srcFile, destFile, force);
          }
        }
        yield ioUtil.chmod(destDir, (yield ioUtil.stat(sourceDir)).mode);
      });
    }
    function copyFile(srcFile, destFile, force) {
      return __awaiter(this, void 0, void 0, function* () {
        if ((yield ioUtil.lstat(srcFile)).isSymbolicLink()) {
          try {
            yield ioUtil.lstat(destFile);
            yield ioUtil.unlink(destFile);
          } catch (e) {
            if (e.code === "EPERM") {
              yield ioUtil.chmod(destFile, "0666");
              yield ioUtil.unlink(destFile);
            }
          }
          const symlinkFull = yield ioUtil.readlink(srcFile);
          yield ioUtil.symlink(symlinkFull, destFile, ioUtil.IS_WINDOWS ? "junction" : null);
        } else if (!(yield ioUtil.exists(destFile)) || force) {
          yield ioUtil.copyFile(srcFile, destFile);
        }
      });
    }
  }
});

// node_modules/@actions/exec/lib/toolrunner.js
var require_toolrunner = __commonJS({
  "node_modules/@actions/exec/lib/toolrunner.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? (function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      Object.defineProperty(o, k2, { enumerable: true, get: function() {
        return m[k];
      } });
    }) : (function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    }));
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? (function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.argStringToArray = exports2.ToolRunner = void 0;
    var os = __importStar(require("os"));
    var events = __importStar(require("events"));
    var child = __importStar(require("child_process"));
    var path = __importStar(require("path"));
    var io = __importStar(require_io());
    var ioUtil = __importStar(require_io_util());
    var timers_1 = require("timers");
    var IS_WINDOWS = process.platform === "win32";
    var ToolRunner = class extends events.EventEmitter {
      constructor(toolPath, args, options) {
        super();
        if (!toolPath) {
          throw new Error("Parameter 'toolPath' cannot be null or empty.");
        }
        this.toolPath = toolPath;
        this.args = args || [];
        this.options = options || {};
      }
      _debug(message) {
        if (this.options.listeners && this.options.listeners.debug) {
          this.options.listeners.debug(message);
        }
      }
      _getCommandString(options, noPrefix) {
        const toolPath = this._getSpawnFileName();
        const args = this._getSpawnArgs(options);
        let cmd = noPrefix ? "" : "[command]";
        if (IS_WINDOWS) {
          if (this._isCmdFile()) {
            cmd += toolPath;
            for (const a of args) {
              cmd += ` ${a}`;
            }
          } else if (options.windowsVerbatimArguments) {
            cmd += `"${toolPath}"`;
            for (const a of args) {
              cmd += ` ${a}`;
            }
          } else {
            cmd += this._windowsQuoteCmdArg(toolPath);
            for (const a of args) {
              cmd += ` ${this._windowsQuoteCmdArg(a)}`;
            }
          }
        } else {
          cmd += toolPath;
          for (const a of args) {
            cmd += ` ${a}`;
          }
        }
        return cmd;
      }
      _processLineBuffer(data, strBuffer, onLine) {
        try {
          let s = strBuffer + data.toString();
          let n = s.indexOf(os.EOL);
          while (n > -1) {
            const line = s.substring(0, n);
            onLine(line);
            s = s.substring(n + os.EOL.length);
            n = s.indexOf(os.EOL);
          }
          return s;
        } catch (err) {
          this._debug(`error processing line. Failed with error ${err}`);
          return "";
        }
      }
      _getSpawnFileName() {
        if (IS_WINDOWS) {
          if (this._isCmdFile()) {
            return process.env["COMSPEC"] || "cmd.exe";
          }
        }
        return this.toolPath;
      }
      _getSpawnArgs(options) {
        if (IS_WINDOWS) {
          if (this._isCmdFile()) {
            let argline = `/D /S /C "${this._windowsQuoteCmdArg(this.toolPath)}`;
            for (const a of this.args) {
              argline += " ";
              argline += options.windowsVerbatimArguments ? a : this._windowsQuoteCmdArg(a);
            }
            argline += '"';
            return [argline];
          }
        }
        return this.args;
      }
      _endsWith(str, end) {
        return str.endsWith(end);
      }
      _isCmdFile() {
        const upperToolPath = this.toolPath.toUpperCase();
        return this._endsWith(upperToolPath, ".CMD") || this._endsWith(upperToolPath, ".BAT");
      }
      _windowsQuoteCmdArg(arg) {
        if (!this._isCmdFile()) {
          return this._uvQuoteCmdArg(arg);
        }
        if (!arg) {
          return '""';
        }
        const cmdSpecialChars = [
          " ",
          "	",
          "&",
          "(",
          ")",
          "[",
          "]",
          "{",
          "}",
          "^",
          "=",
          ";",
          "!",
          "'",
          "+",
          ",",
          "`",
          "~",
          "|",
          "<",
          ">",
          '"'
        ];
        let needsQuotes = false;
        for (const char of arg) {
          if (cmdSpecialChars.some((x) => x === char)) {
            needsQuotes = true;
            break;
          }
        }
        if (!needsQuotes) {
          return arg;
        }
        let reverse = '"';
        let quoteHit = true;
        for (let i = arg.length; i > 0; i--) {
          reverse += arg[i - 1];
          if (quoteHit && arg[i - 1] === "\\") {
            reverse += "\\";
          } else if (arg[i - 1] === '"') {
            quoteHit = true;
            reverse += '"';
          } else {
            quoteHit = false;
          }
        }
        reverse += '"';
        return reverse.split("").reverse().join("");
      }
      _uvQuoteCmdArg(arg) {
        if (!arg) {
          return '""';
        }
        if (!arg.includes(" ") && !arg.includes("	") && !arg.includes('"')) {
          return arg;
        }
        if (!arg.includes('"') && !arg.includes("\\")) {
          return `"${arg}"`;
        }
        let reverse = '"';
        let quoteHit = true;
        for (let i = arg.length; i > 0; i--) {
          reverse += arg[i - 1];
          if (quoteHit && arg[i - 1] === "\\") {
            reverse += "\\";
          } else if (arg[i - 1] === '"') {
            quoteHit = true;
            reverse += "\\";
          } else {
            quoteHit = false;
          }
        }
        reverse += '"';
        return reverse.split("").reverse().join("");
      }
      _cloneExecOptions(options) {
        options = options || {};
        const result = {
          cwd: options.cwd || process.cwd(),
          env: options.env || process.env,
          silent: options.silent || false,
          windowsVerbatimArguments: options.windowsVerbatimArguments || false,
          failOnStdErr: options.failOnStdErr || false,
          ignoreReturnCode: options.ignoreReturnCode || false,
          delay: options.delay || 1e4
        };
        result.outStream = options.outStream || process.stdout;
        result.errStream = options.errStream || process.stderr;
        return result;
      }
      _getSpawnOptions(options, toolPath) {
        options = options || {};
        const result = {};
        result.cwd = options.cwd;
        result.env = options.env;
        result["windowsVerbatimArguments"] = options.windowsVerbatimArguments || this._isCmdFile();
        if (options.windowsVerbatimArguments) {
          result.argv0 = `"${toolPath}"`;
        }
        return result;
      }
      /**
       * Exec a tool.
       * Output will be streamed to the live console.
       * Returns promise with return code
       *
       * @param     tool     path to tool to exec
       * @param     options  optional exec options.  See ExecOptions
       * @returns   number
       */
      exec() {
        return __awaiter(this, void 0, void 0, function* () {
          if (!ioUtil.isRooted(this.toolPath) && (this.toolPath.includes("/") || IS_WINDOWS && this.toolPath.includes("\\"))) {
            this.toolPath = path.resolve(process.cwd(), this.options.cwd || process.cwd(), this.toolPath);
          }
          this.toolPath = yield io.which(this.toolPath, true);
          return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {
            this._debug(`exec tool: ${this.toolPath}`);
            this._debug("arguments:");
            for (const arg of this.args) {
              this._debug(`   ${arg}`);
            }
            const optionsNonNull = this._cloneExecOptions(this.options);
            if (!optionsNonNull.silent && optionsNonNull.outStream) {
              optionsNonNull.outStream.write(this._getCommandString(optionsNonNull) + os.EOL);
            }
            const state = new ExecState(optionsNonNull, this.toolPath);
            state.on("debug", (message) => {
              this._debug(message);
            });
            if (this.options.cwd && !(yield ioUtil.exists(this.options.cwd))) {
              return reject(new Error(`The cwd: ${this.options.cwd} does not exist!`));
            }
            const fileName = this._getSpawnFileName();
            const cp = child.spawn(fileName, this._getSpawnArgs(optionsNonNull), this._getSpawnOptions(this.options, fileName));
            let stdbuffer = "";
            if (cp.stdout) {
              cp.stdout.on("data", (data) => {
                if (this.options.listeners && this.options.listeners.stdout) {
                  this.options.listeners.stdout(data);
                }
                if (!optionsNonNull.silent && optionsNonNull.outStream) {
                  optionsNonNull.outStream.write(data);
                }
                stdbuffer = this._processLineBuffer(data, stdbuffer, (line) => {
                  if (this.options.listeners && this.options.listeners.stdline) {
                    this.options.listeners.stdline(line);
                  }
                });
              });
            }
            let errbuffer = "";
            if (cp.stderr) {
              cp.stderr.on("data", (data) => {
                state.processStderr = true;
                if (this.options.listeners && this.options.listeners.stderr) {
                  this.options.listeners.stderr(data);
                }
                if (!optionsNonNull.silent && optionsNonNull.errStream && optionsNonNull.outStream) {
                  const s = optionsNonNull.failOnStdErr ? optionsNonNull.errStream : optionsNonNull.outStream;
                  s.write(data);
                }
                errbuffer = this._processLineBuffer(data, errbuffer, (line) => {
                  if (this.options.listeners && this.options.listeners.errline) {
                    this.options.listeners.errline(line);
                  }
                });
              });
            }
            cp.on("error", (err) => {
              state.processError = err.message;
              state.processExited = true;
              state.processClosed = true;
              state.CheckComplete();
            });
            cp.on("exit", (code) => {
              state.processExitCode = code;
              state.processExited = true;
              this._debug(`Exit code ${code} received from tool '${this.toolPath}'`);
              state.CheckComplete();
            });
            cp.on("close", (code) => {
              state.processExitCode = code;
              state.processExited = true;
              state.processClosed = true;
              this._debug(`STDIO streams have closed for tool '${this.toolPath}'`);
              state.CheckComplete();
            });
            state.on("done", (error, exitCode) => {
              if (stdbuffer.length > 0) {
                this.emit("stdline", stdbuffer);
              }
              if (errbuffer.length > 0) {
                this.emit("errline", errbuffer);
              }
              cp.removeAllListeners();
              if (error) {
                reject(error);
              } else {
                resolve(exitCode);
              }
            });
            if (this.options.input) {
              if (!cp.stdin) {
                throw new Error("child process missing stdin");
              }
              cp.stdin.end(this.options.input);
            }
          }));
        });
      }
    };
    exports2.ToolRunner = ToolRunner;
    function argStringToArray(argString) {
      const args = [];
      let inQuotes = false;
      let escaped = false;
      let arg = "";
      function append(c) {
        if (escaped && c !== '"') {
          arg += "\\";
        }
        arg += c;
        escaped = false;
      }
      for (let i = 0; i < argString.length; i++) {
        const c = argString.charAt(i);
        if (c === '"') {
          if (!escaped) {
            inQuotes = !inQuotes;
          } else {
            append(c);
          }
          continue;
        }
        if (c === "\\" && escaped) {
          append(c);
          continue;
        }
        if (c === "\\" && inQuotes) {
          escaped = true;
          continue;
        }
        if (c === " " && !inQuotes) {
          if (arg.length > 0) {
            args.push(arg);
            arg = "";
          }
          continue;
        }
        append(c);
      }
      if (arg.length > 0) {
        args.push(arg.trim());
      }
      return args;
    }
    exports2.argStringToArray = argStringToArray;
    var ExecState = class _ExecState extends events.EventEmitter {
      constructor(options, toolPath) {
        super();
        this.processClosed = false;
        this.processError = "";
        this.processExitCode = 0;
        this.processExited = false;
        this.processStderr = false;
        this.delay = 1e4;
        this.done = false;
        this.timeout = null;
        if (!toolPath) {
          throw new Error("toolPath must not be empty");
        }
        this.options = options;
        this.toolPath = toolPath;
        if (options.delay) {
          this.delay = options.delay;
        }
      }
      CheckComplete() {
        if (this.done) {
          return;
        }
        if (this.processClosed) {
          this._setResult();
        } else if (this.processExited) {
          this.timeout = timers_1.setTimeout(_ExecState.HandleTimeout, this.delay, this);
        }
      }
      _debug(message) {
        this.emit("debug", message);
      }
      _setResult() {
        let error;
        if (this.processExited) {
          if (this.processError) {
            error = new Error(`There was an error when attempting to execute the process '${this.toolPath}'. This may indicate the process failed to start. Error: ${this.processError}`);
          } else if (this.processExitCode !== 0 && !this.options.ignoreReturnCode) {
            error = new Error(`The process '${this.toolPath}' failed with exit code ${this.processExitCode}`);
          } else if (this.processStderr && this.options.failOnStdErr) {
            error = new Error(`The process '${this.toolPath}' failed because one or more lines were written to the STDERR stream`);
          }
        }
        if (this.timeout) {
          clearTimeout(this.timeout);
          this.timeout = null;
        }
        this.done = true;
        this.emit("done", error, this.processExitCode);
      }
      static HandleTimeout(state) {
        if (state.done) {
          return;
        }
        if (!state.processClosed && state.processExited) {
          const message = `The STDIO streams did not close within ${state.delay / 1e3} seconds of the exit event from process '${state.toolPath}'. This may indicate a child process inherited the STDIO streams and has not yet exited.`;
          state._debug(message);
        }
        state._setResult();
      }
    };
  }
});

// node_modules/@actions/exec/lib/exec.js
var require_exec = __commonJS({
  "node_modules/@actions/exec/lib/exec.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? (function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      Object.defineProperty(o, k2, { enumerable: true, get: function() {
        return m[k];
      } });
    }) : (function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    }));
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? (function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.getExecOutput = exports2.exec = void 0;
    var string_decoder_1 = require("string_decoder");
    var tr = __importStar(require_toolrunner());
    function exec(commandLine, args, options) {
      return __awaiter(this, void 0, void 0, function* () {
        const commandArgs = tr.argStringToArray(commandLine);
        if (commandArgs.length === 0) {
          throw new Error(`Parameter 'commandLine' cannot be null or empty.`);
        }
        const toolPath = commandArgs[0];
        args = commandArgs.slice(1).concat(args || []);
        const runner = new tr.ToolRunner(toolPath, args, options);
        return runner.exec();
      });
    }
    exports2.exec = exec;
    function getExecOutput(commandLine, args, options) {
      var _a, _b;
      return __awaiter(this, void 0, void 0, function* () {
        let stdout = "";
        let stderr = "";
        const stdoutDecoder = new string_decoder_1.StringDecoder("utf8");
        const stderrDecoder = new string_decoder_1.StringDecoder("utf8");
        const originalStdoutListener = (_a = options === null || options === void 0 ? void 0 : options.listeners) === null || _a === void 0 ? void 0 : _a.stdout;
        const originalStdErrListener = (_b = options === null || options === void 0 ? void 0 : options.listeners) === null || _b === void 0 ? void 0 : _b.stderr;
        const stdErrListener = (data) => {
          stderr += stderrDecoder.write(data);
          if (originalStdErrListener) {
            originalStdErrListener(data);
          }
        };
        const stdOutListener = (data) => {
          stdout += stdoutDecoder.write(data);
          if (originalStdoutListener) {
            originalStdoutListener(data);
          }
        };
        const listeners = Object.assign(Object.assign({}, options === null || options === void 0 ? void 0 : options.listeners), { stdout: stdOutListener, stderr: stdErrListener });
        const exitCode = yield exec(commandLine, args, Object.assign(Object.assign({}, options), { listeners }));
        stdout += stdoutDecoder.end();
        stderr += stderrDecoder.end();
        return {
          exitCode,
          stdout,
          stderr
        };
      });
    }
    exports2.getExecOutput = getExecOutput;
  }
});

// node_modules/@actions/core/lib/platform.js
var require_platform = __commonJS({
  "node_modules/@actions/core/lib/platform.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? (function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    }));
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? (function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports2 && exports2.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.getDetails = exports2.isLinux = exports2.isMacOS = exports2.isWindows = exports2.arch = exports2.platform = void 0;
    var os_1 = __importDefault(require("os"));
    var exec = __importStar(require_exec());
    var getWindowsInfo = () => __awaiter(void 0, void 0, void 0, function* () {
      const { stdout: version3 } = yield exec.getExecOutput('powershell -command "(Get-CimInstance -ClassName Win32_OperatingSystem).Version"', void 0, {
        silent: true
      });
      const { stdout: name3 } = yield exec.getExecOutput('powershell -command "(Get-CimInstance -ClassName Win32_OperatingSystem).Caption"', void 0, {
        silent: true
      });
      return {
        name: name3.trim(),
        version: version3.trim()
      };
    });
    var getMacOsInfo = () => __awaiter(void 0, void 0, void 0, function* () {
      var _a, _b, _c, _d;
      const { stdout } = yield exec.getExecOutput("sw_vers", void 0, {
        silent: true
      });
      const version3 = (_b = (_a = stdout.match(/ProductVersion:\s*(.+)/)) === null || _a === void 0 ? void 0 : _a[1]) !== null && _b !== void 0 ? _b : "";
      const name3 = (_d = (_c = stdout.match(/ProductName:\s*(.+)/)) === null || _c === void 0 ? void 0 : _c[1]) !== null && _d !== void 0 ? _d : "";
      return {
        name: name3,
        version: version3
      };
    });
    var getLinuxInfo = () => __awaiter(void 0, void 0, void 0, function* () {
      const { stdout } = yield exec.getExecOutput("lsb_release", ["-i", "-r", "-s"], {
        silent: true
      });
      const [name3, version3] = stdout.trim().split("\n");
      return {
        name: name3,
        version: version3
      };
    });
    exports2.platform = os_1.default.platform();
    exports2.arch = os_1.default.arch();
    exports2.isWindows = exports2.platform === "win32";
    exports2.isMacOS = exports2.platform === "darwin";
    exports2.isLinux = exports2.platform === "linux";
    function getDetails() {
      return __awaiter(this, void 0, void 0, function* () {
        return Object.assign(Object.assign({}, yield exports2.isWindows ? getWindowsInfo() : exports2.isMacOS ? getMacOsInfo() : getLinuxInfo()), {
          platform: exports2.platform,
          arch: exports2.arch,
          isWindows: exports2.isWindows,
          isMacOS: exports2.isMacOS,
          isLinux: exports2.isLinux
        });
      });
    }
    exports2.getDetails = getDetails;
  }
});

// node_modules/@actions/core/lib/core.js
var require_core = __commonJS({
  "node_modules/@actions/core/lib/core.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? (function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    }));
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? (function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.platform = exports2.toPlatformPath = exports2.toWin32Path = exports2.toPosixPath = exports2.markdownSummary = exports2.summary = exports2.getIDToken = exports2.getState = exports2.saveState = exports2.group = exports2.endGroup = exports2.startGroup = exports2.info = exports2.notice = exports2.warning = exports2.error = exports2.debug = exports2.isDebug = exports2.setFailed = exports2.setCommandEcho = exports2.setOutput = exports2.getBooleanInput = exports2.getMultilineInput = exports2.getInput = exports2.addPath = exports2.setSecret = exports2.exportVariable = exports2.ExitCode = void 0;
    var command_1 = require_command();
    var file_command_1 = require_file_command();
    var utils_1 = require_utils();
    var os = __importStar(require("os"));
    var path = __importStar(require("path"));
    var oidc_utils_1 = require_oidc_utils();
    var ExitCode;
    (function(ExitCode2) {
      ExitCode2[ExitCode2["Success"] = 0] = "Success";
      ExitCode2[ExitCode2["Failure"] = 1] = "Failure";
    })(ExitCode || (exports2.ExitCode = ExitCode = {}));
    function exportVariable(name3, val) {
      const convertedVal = (0, utils_1.toCommandValue)(val);
      process.env[name3] = convertedVal;
      const filePath = process.env["GITHUB_ENV"] || "";
      if (filePath) {
        return (0, file_command_1.issueFileCommand)("ENV", (0, file_command_1.prepareKeyValueMessage)(name3, val));
      }
      (0, command_1.issueCommand)("set-env", { name: name3 }, convertedVal);
    }
    exports2.exportVariable = exportVariable;
    function setSecret(secret) {
      (0, command_1.issueCommand)("add-mask", {}, secret);
    }
    exports2.setSecret = setSecret;
    function addPath(inputPath) {
      const filePath = process.env["GITHUB_PATH"] || "";
      if (filePath) {
        (0, file_command_1.issueFileCommand)("PATH", inputPath);
      } else {
        (0, command_1.issueCommand)("add-path", {}, inputPath);
      }
      process.env["PATH"] = `${inputPath}${path.delimiter}${process.env["PATH"]}`;
    }
    exports2.addPath = addPath;
    function getInput(name3, options) {
      const val = process.env[`INPUT_${name3.replace(/ /g, "_").toUpperCase()}`] || "";
      if (options && options.required && !val) {
        throw new Error(`Input required and not supplied: ${name3}`);
      }
      if (options && options.trimWhitespace === false) {
        return val;
      }
      return val.trim();
    }
    exports2.getInput = getInput;
    function getMultilineInput(name3, options) {
      const inputs = getInput(name3, options).split("\n").filter((x) => x !== "");
      if (options && options.trimWhitespace === false) {
        return inputs;
      }
      return inputs.map((input) => input.trim());
    }
    exports2.getMultilineInput = getMultilineInput;
    function getBooleanInput(name3, options) {
      const trueValue = ["true", "True", "TRUE"];
      const falseValue = ["false", "False", "FALSE"];
      const val = getInput(name3, options);
      if (trueValue.includes(val))
        return true;
      if (falseValue.includes(val))
        return false;
      throw new TypeError(`Input does not meet YAML 1.2 "Core Schema" specification: ${name3}
Support boolean input list: \`true | True | TRUE | false | False | FALSE\``);
    }
    exports2.getBooleanInput = getBooleanInput;
    function setOutput(name3, value) {
      const filePath = process.env["GITHUB_OUTPUT"] || "";
      if (filePath) {
        return (0, file_command_1.issueFileCommand)("OUTPUT", (0, file_command_1.prepareKeyValueMessage)(name3, value));
      }
      process.stdout.write(os.EOL);
      (0, command_1.issueCommand)("set-output", { name: name3 }, (0, utils_1.toCommandValue)(value));
    }
    exports2.setOutput = setOutput;
    function setCommandEcho(enabled) {
      (0, command_1.issue)("echo", enabled ? "on" : "off");
    }
    exports2.setCommandEcho = setCommandEcho;
    function setFailed(message) {
      process.exitCode = ExitCode.Failure;
      error(message);
    }
    exports2.setFailed = setFailed;
    function isDebug() {
      return process.env["RUNNER_DEBUG"] === "1";
    }
    exports2.isDebug = isDebug;
    function debug(message) {
      (0, command_1.issueCommand)("debug", {}, message);
    }
    exports2.debug = debug;
    function error(message, properties = {}) {
      (0, command_1.issueCommand)("error", (0, utils_1.toCommandProperties)(properties), message instanceof Error ? message.toString() : message);
    }
    exports2.error = error;
    function warning(message, properties = {}) {
      (0, command_1.issueCommand)("warning", (0, utils_1.toCommandProperties)(properties), message instanceof Error ? message.toString() : message);
    }
    exports2.warning = warning;
    function notice(message, properties = {}) {
      (0, command_1.issueCommand)("notice", (0, utils_1.toCommandProperties)(properties), message instanceof Error ? message.toString() : message);
    }
    exports2.notice = notice;
    function info(message) {
      process.stdout.write(message + os.EOL);
    }
    exports2.info = info;
    function startGroup(name3) {
      (0, command_1.issue)("group", name3);
    }
    exports2.startGroup = startGroup;
    function endGroup() {
      (0, command_1.issue)("endgroup");
    }
    exports2.endGroup = endGroup;
    function group(name3, fn) {
      return __awaiter(this, void 0, void 0, function* () {
        startGroup(name3);
        let result;
        try {
          result = yield fn();
        } finally {
          endGroup();
        }
        return result;
      });
    }
    exports2.group = group;
    function saveState(name3, value) {
      const filePath = process.env["GITHUB_STATE"] || "";
      if (filePath) {
        return (0, file_command_1.issueFileCommand)("STATE", (0, file_command_1.prepareKeyValueMessage)(name3, value));
      }
      (0, command_1.issueCommand)("save-state", { name: name3 }, (0, utils_1.toCommandValue)(value));
    }
    exports2.saveState = saveState;
    function getState(name3) {
      return process.env[`STATE_${name3}`] || "";
    }
    exports2.getState = getState;
    function getIDToken(aud) {
      return __awaiter(this, void 0, void 0, function* () {
        return yield oidc_utils_1.OidcClient.getIDToken(aud);
      });
    }
    exports2.getIDToken = getIDToken;
    var summary_1 = require_summary();
    Object.defineProperty(exports2, "summary", { enumerable: true, get: function() {
      return summary_1.summary;
    } });
    var summary_2 = require_summary();
    Object.defineProperty(exports2, "markdownSummary", { enumerable: true, get: function() {
      return summary_2.markdownSummary;
    } });
    var path_utils_1 = require_path_utils();
    Object.defineProperty(exports2, "toPosixPath", { enumerable: true, get: function() {
      return path_utils_1.toPosixPath;
    } });
    Object.defineProperty(exports2, "toWin32Path", { enumerable: true, get: function() {
      return path_utils_1.toWin32Path;
    } });
    Object.defineProperty(exports2, "toPlatformPath", { enumerable: true, get: function() {
      return path_utils_1.toPlatformPath;
    } });
    exports2.platform = __importStar(require_platform());
  }
});

// node_modules/safe-buffer/index.js
var require_safe_buffer = __commonJS({
  "node_modules/safe-buffer/index.js"(exports2, module2) {
    var buffer = require("buffer");
    var Buffer2 = buffer.Buffer;
    function copyProps(src, dst) {
      for (var key in src) {
        dst[key] = src[key];
      }
    }
    if (Buffer2.from && Buffer2.alloc && Buffer2.allocUnsafe && Buffer2.allocUnsafeSlow) {
      module2.exports = buffer;
    } else {
      copyProps(buffer, exports2);
      exports2.Buffer = SafeBuffer;
    }
    function SafeBuffer(arg, encodingOrOffset, length) {
      return Buffer2(arg, encodingOrOffset, length);
    }
    SafeBuffer.prototype = Object.create(Buffer2.prototype);
    copyProps(Buffer2, SafeBuffer);
    SafeBuffer.from = function(arg, encodingOrOffset, length) {
      if (typeof arg === "number") {
        throw new TypeError("Argument must not be a number");
      }
      return Buffer2(arg, encodingOrOffset, length);
    };
    SafeBuffer.alloc = function(size, fill, encoding) {
      if (typeof size !== "number") {
        throw new TypeError("Argument must be a number");
      }
      var buf = Buffer2(size);
      if (fill !== void 0) {
        if (typeof encoding === "string") {
          buf.fill(fill, encoding);
        } else {
          buf.fill(fill);
        }
      } else {
        buf.fill(0);
      }
      return buf;
    };
    SafeBuffer.allocUnsafe = function(size) {
      if (typeof size !== "number") {
        throw new TypeError("Argument must be a number");
      }
      return Buffer2(size);
    };
    SafeBuffer.allocUnsafeSlow = function(size) {
      if (typeof size !== "number") {
        throw new TypeError("Argument must be a number");
      }
      return buffer.SlowBuffer(size);
    };
  }
});

// node_modules/jws/lib/data-stream.js
var require_data_stream = __commonJS({
  "node_modules/jws/lib/data-stream.js"(exports2, module2) {
    var Buffer2 = require_safe_buffer().Buffer;
    var Stream = require("stream");
    var util = require("util");
    function DataStream(data) {
      this.buffer = null;
      this.writable = true;
      this.readable = true;
      if (!data) {
        this.buffer = Buffer2.alloc(0);
        return this;
      }
      if (typeof data.pipe === "function") {
        this.buffer = Buffer2.alloc(0);
        data.pipe(this);
        return this;
      }
      if (data.length || typeof data === "object") {
        this.buffer = data;
        this.writable = false;
        process.nextTick(function() {
          this.emit("end", data);
          this.readable = false;
          this.emit("close");
        }.bind(this));
        return this;
      }
      throw new TypeError("Unexpected data type (" + typeof data + ")");
    }
    util.inherits(DataStream, Stream);
    DataStream.prototype.write = function write(data) {
      this.buffer = Buffer2.concat([this.buffer, Buffer2.from(data)]);
      this.emit("data", data);
    };
    DataStream.prototype.end = function end(data) {
      if (data)
        this.write(data);
      this.emit("end", data);
      this.emit("close");
      this.writable = false;
      this.readable = false;
    };
    module2.exports = DataStream;
  }
});

// node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js
var require_param_bytes_for_alg = __commonJS({
  "node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js"(exports2, module2) {
    "use strict";
    function getParamSize(keySize) {
      var result = (keySize / 8 | 0) + (keySize % 8 === 0 ? 0 : 1);
      return result;
    }
    var paramBytesForAlg = {
      ES256: getParamSize(256),
      ES384: getParamSize(384),
      ES512: getParamSize(521)
    };
    function getParamBytesForAlg(alg) {
      var paramBytes = paramBytesForAlg[alg];
      if (paramBytes) {
        return paramBytes;
      }
      throw new Error('Unknown algorithm "' + alg + '"');
    }
    module2.exports = getParamBytesForAlg;
  }
});

// node_modules/ecdsa-sig-formatter/src/ecdsa-sig-formatter.js
var require_ecdsa_sig_formatter = __commonJS({
  "node_modules/ecdsa-sig-formatter/src/ecdsa-sig-formatter.js"(exports2, module2) {
    "use strict";
    var Buffer2 = require_safe_buffer().Buffer;
    var getParamBytesForAlg = require_param_bytes_for_alg();
    var MAX_OCTET = 128;
    var CLASS_UNIVERSAL = 0;
    var PRIMITIVE_BIT = 32;
    var TAG_SEQ = 16;
    var TAG_INT = 2;
    var ENCODED_TAG_SEQ = TAG_SEQ | PRIMITIVE_BIT | CLASS_UNIVERSAL << 6;
    var ENCODED_TAG_INT = TAG_INT | CLASS_UNIVERSAL << 6;
    function base64Url(base64) {
      return base64.replace(/=/g, "").replace(/\+/g, "-").replace(/\//g, "_");
    }
    function signatureAsBuffer(signature) {
      if (Buffer2.isBuffer(signature)) {
        return signature;
      } else if ("string" === typeof signature) {
        return Buffer2.from(signature, "base64");
      }
      throw new TypeError("ECDSA signature must be a Base64 string or a Buffer");
    }
    function derToJose(signature, alg) {
      signature = signatureAsBuffer(signature);
      var paramBytes = getParamBytesForAlg(alg);
      var maxEncodedParamLength = paramBytes + 1;
      var inputLength = signature.length;
      var offset = 0;
      if (signature[offset++] !== ENCODED_TAG_SEQ) {
        throw new Error('Could not find expected "seq"');
      }
      var seqLength = signature[offset++];
      if (seqLength === (MAX_OCTET | 1)) {
        seqLength = signature[offset++];
      }
      if (inputLength - offset < seqLength) {
        throw new Error('"seq" specified length of "' + seqLength + '", only "' + (inputLength - offset) + '" remaining');
      }
      if (signature[offset++] !== ENCODED_TAG_INT) {
        throw new Error('Could not find expected "int" for "r"');
      }
      var rLength = signature[offset++];
      if (inputLength - offset - 2 < rLength) {
        throw new Error('"r" specified length of "' + rLength + '", only "' + (inputLength - offset - 2) + '" available');
      }
      if (maxEncodedParamLength < rLength) {
        throw new Error('"r" specified length of "' + rLength + '", max of "' + maxEncodedParamLength + '" is acceptable');
      }
      var rOffset = offset;
      offset += rLength;
      if (signature[offset++] !== ENCODED_TAG_INT) {
        throw new Error('Could not find expected "int" for "s"');
      }
      var sLength = signature[offset++];
      if (inputLength - offset !== sLength) {
        throw new Error('"s" specified length of "' + sLength + '", expected "' + (inputLength - offset) + '"');
      }
      if (maxEncodedParamLength < sLength) {
        throw new Error('"s" specified length of "' + sLength + '", max of "' + maxEncodedParamLength + '" is acceptable');
      }
      var sOffset = offset;
      offset += sLength;
      if (offset !== inputLength) {
        throw new Error('Expected to consume entire buffer, but "' + (inputLength - offset) + '" bytes remain');
      }
      var rPadding = paramBytes - rLength, sPadding = paramBytes - sLength;
      var dst = Buffer2.allocUnsafe(rPadding + rLength + sPadding + sLength);
      for (offset = 0; offset < rPadding; ++offset) {
        dst[offset] = 0;
      }
      signature.copy(dst, offset, rOffset + Math.max(-rPadding, 0), rOffset + rLength);
      offset = paramBytes;
      for (var o = offset; offset < o + sPadding; ++offset) {
        dst[offset] = 0;
      }
      signature.copy(dst, offset, sOffset + Math.max(-sPadding, 0), sOffset + sLength);
      dst = dst.toString("base64");
      dst = base64Url(dst);
      return dst;
    }
    function countPadding(buf, start, stop) {
      var padding = 0;
      while (start + padding < stop && buf[start + padding] === 0) {
        ++padding;
      }
      var needsSign = buf[start + padding] >= MAX_OCTET;
      if (needsSign) {
        --padding;
      }
      return padding;
    }
    function joseToDer(signature, alg) {
      signature = signatureAsBuffer(signature);
      var paramBytes = getParamBytesForAlg(alg);
      var signatureBytes = signature.length;
      if (signatureBytes !== paramBytes * 2) {
        throw new TypeError('"' + alg + '" signatures must be "' + paramBytes * 2 + '" bytes, saw "' + signatureBytes + '"');
      }
      var rPadding = countPadding(signature, 0, paramBytes);
      var sPadding = countPadding(signature, paramBytes, signature.length);
      var rLength = paramBytes - rPadding;
      var sLength = paramBytes - sPadding;
      var rsBytes = 1 + 1 + rLength + 1 + 1 + sLength;
      var shortLength = rsBytes < MAX_OCTET;
      var dst = Buffer2.allocUnsafe((shortLength ? 2 : 3) + rsBytes);
      var offset = 0;
      dst[offset++] = ENCODED_TAG_SEQ;
      if (shortLength) {
        dst[offset++] = rsBytes;
      } else {
        dst[offset++] = MAX_OCTET | 1;
        dst[offset++] = rsBytes & 255;
      }
      dst[offset++] = ENCODED_TAG_INT;
      dst[offset++] = rLength;
      if (rPadding < 0) {
        dst[offset++] = 0;
        offset += signature.copy(dst, offset, 0, paramBytes);
      } else {
        offset += signature.copy(dst, offset, rPadding, paramBytes);
      }
      dst[offset++] = ENCODED_TAG_INT;
      dst[offset++] = sLength;
      if (sPadding < 0) {
        dst[offset++] = 0;
        signature.copy(dst, offset, paramBytes);
      } else {
        signature.copy(dst, offset, paramBytes + sPadding);
      }
      return dst;
    }
    module2.exports = {
      derToJose,
      joseToDer
    };
  }
});

// node_modules/buffer-equal-constant-time/index.js
var require_buffer_equal_constant_time = __commonJS({
  "node_modules/buffer-equal-constant-time/index.js"(exports2, module2) {
    "use strict";
    var Buffer2 = require("buffer").Buffer;
    var SlowBuffer = require("buffer").SlowBuffer;
    module2.exports = bufferEq;
    function bufferEq(a, b) {
      if (!Buffer2.isBuffer(a) || !Buffer2.isBuffer(b)) {
        return false;
      }
      if (a.length !== b.length) {
        return false;
      }
      var c = 0;
      for (var i = 0; i < a.length; i++) {
        c |= a[i] ^ b[i];
      }
      return c === 0;
    }
    bufferEq.install = function() {
      Buffer2.prototype.equal = SlowBuffer.prototype.equal = function equal(that) {
        return bufferEq(this, that);
      };
    };
    var origBufEqual = Buffer2.prototype.equal;
    var origSlowBufEqual = SlowBuffer.prototype.equal;
    bufferEq.restore = function() {
      Buffer2.prototype.equal = origBufEqual;
      SlowBuffer.prototype.equal = origSlowBufEqual;
    };
  }
});

// node_modules/jwa/index.js
var require_jwa = __commonJS({
  "node_modules/jwa/index.js"(exports2, module2) {
    var Buffer2 = require_safe_buffer().Buffer;
    var crypto5 = require("crypto");
    var formatEcdsa = require_ecdsa_sig_formatter();
    var util = require("util");
    var MSG_INVALID_ALGORITHM = '"%s" is not a valid algorithm.\n  Supported algorithms are:\n  "HS256", "HS384", "HS512", "RS256", "RS384", "RS512", "PS256", "PS384", "PS512", "ES256", "ES384", "ES512" and "none".';
    var MSG_INVALID_SECRET = "secret must be a string or buffer";
    var MSG_INVALID_VERIFIER_KEY = "key must be a string or a buffer";
    var MSG_INVALID_SIGNER_KEY = "key must be a string, a buffer or an object";
    var supportsKeyObjects = typeof crypto5.createPublicKey === "function";
    if (supportsKeyObjects) {
      MSG_INVALID_VERIFIER_KEY += " or a KeyObject";
      MSG_INVALID_SECRET += "or a KeyObject";
    }
    function checkIsPublicKey(key) {
      if (Buffer2.isBuffer(key)) {
        return;
      }
      if (typeof key === "string") {
        return;
      }
      if (!supportsKeyObjects) {
        throw typeError(MSG_INVALID_VERIFIER_KEY);
      }
      if (typeof key !== "object") {
        throw typeError(MSG_INVALID_VERIFIER_KEY);
      }
      if (typeof key.type !== "string") {
        throw typeError(MSG_INVALID_VERIFIER_KEY);
      }
      if (typeof key.asymmetricKeyType !== "string") {
        throw typeError(MSG_INVALID_VERIFIER_KEY);
      }
      if (typeof key.export !== "function") {
        throw typeError(MSG_INVALID_VERIFIER_KEY);
      }
    }
    function checkIsPrivateKey(key) {
      if (Buffer2.isBuffer(key)) {
        return;
      }
      if (typeof key === "string") {
        return;
      }
      if (typeof key === "object") {
        return;
      }
      throw typeError(MSG_INVALID_SIGNER_KEY);
    }
    function checkIsSecretKey(key) {
      if (Buffer2.isBuffer(key)) {
        return;
      }
      if (typeof key === "string") {
        return key;
      }
      if (!supportsKeyObjects) {
        throw typeError(MSG_INVALID_SECRET);
      }
      if (typeof key !== "object") {
        throw typeError(MSG_INVALID_SECRET);
      }
      if (key.type !== "secret") {
        throw typeError(MSG_INVALID_SECRET);
      }
      if (typeof key.export !== "function") {
        throw typeError(MSG_INVALID_SECRET);
      }
    }
    function fromBase64(base64) {
      return base64.replace(/=/g, "").replace(/\+/g, "-").replace(/\//g, "_");
    }
    function toBase64(base64url) {
      base64url = base64url.toString();
      var padding = 4 - base64url.length % 4;
      if (padding !== 4) {
        for (var i = 0; i < padding; ++i) {
          base64url += "=";
        }
      }
      return base64url.replace(/\-/g, "+").replace(/_/g, "/");
    }
    function typeError(template) {
      var args = [].slice.call(arguments, 1);
      var errMsg = util.format.bind(util, template).apply(null, args);
      return new TypeError(errMsg);
    }
    function bufferOrString(obj) {
      return Buffer2.isBuffer(obj) || typeof obj === "string";
    }
    function normalizeInput(thing) {
      if (!bufferOrString(thing))
        thing = JSON.stringify(thing);
      return thing;
    }
    function createHmacSigner(bits) {
      return function sign(thing, secret) {
        checkIsSecretKey(secret);
        thing = normalizeInput(thing);
        var hmac = crypto5.createHmac("sha" + bits, secret);
        var sig = (hmac.update(thing), hmac.digest("base64"));
        return fromBase64(sig);
      };
    }
    var bufferEqual;
    var timingSafeEqual = "timingSafeEqual" in crypto5 ? function timingSafeEqual2(a, b) {
      if (a.byteLength !== b.byteLength) {
        return false;
      }
      return crypto5.timingSafeEqual(a, b);
    } : function timingSafeEqual2(a, b) {
      if (!bufferEqual) {
        bufferEqual = require_buffer_equal_constant_time();
      }
      return bufferEqual(a, b);
    };
    function createHmacVerifier(bits) {
      return function verify(thing, signature, secret) {
        var computedSig = createHmacSigner(bits)(thing, secret);
        return timingSafeEqual(Buffer2.from(signature), Buffer2.from(computedSig));
      };
    }
    function createKeySigner(bits) {
      return function sign(thing, privateKey) {
        checkIsPrivateKey(privateKey);
        thing = normalizeInput(thing);
        var signer = crypto5.createSign("RSA-SHA" + bits);
        var sig = (signer.update(thing), signer.sign(privateKey, "base64"));
        return fromBase64(sig);
      };
    }
    function createKeyVerifier(bits) {
      return function verify(thing, signature, publicKey) {
        checkIsPublicKey(publicKey);
        thing = normalizeInput(thing);
        signature = toBase64(signature);
        var verifier = crypto5.createVerify("RSA-SHA" + bits);
        verifier.update(thing);
        return verifier.verify(publicKey, signature, "base64");
      };
    }
    function createPSSKeySigner(bits) {
      return function sign(thing, privateKey) {
        checkIsPrivateKey(privateKey);
        thing = normalizeInput(thing);
        var signer = crypto5.createSign("RSA-SHA" + bits);
        var sig = (signer.update(thing), signer.sign({
          key: privateKey,
          padding: crypto5.constants.RSA_PKCS1_PSS_PADDING,
          saltLength: crypto5.constants.RSA_PSS_SALTLEN_DIGEST
        }, "base64"));
        return fromBase64(sig);
      };
    }
    function createPSSKeyVerifier(bits) {
      return function verify(thing, signature, publicKey) {
        checkIsPublicKey(publicKey);
        thing = normalizeInput(thing);
        signature = toBase64(signature);
        var verifier = crypto5.createVerify("RSA-SHA" + bits);
        verifier.update(thing);
        return verifier.verify({
          key: publicKey,
          padding: crypto5.constants.RSA_PKCS1_PSS_PADDING,
          saltLength: crypto5.constants.RSA_PSS_SALTLEN_DIGEST
        }, signature, "base64");
      };
    }
    function createECDSASigner(bits) {
      var inner = createKeySigner(bits);
      return function sign() {
        var signature = inner.apply(null, arguments);
        signature = formatEcdsa.derToJose(signature, "ES" + bits);
        return signature;
      };
    }
    function createECDSAVerifer(bits) {
      var inner = createKeyVerifier(bits);
      return function verify(thing, signature, publicKey) {
        signature = formatEcdsa.joseToDer(signature, "ES" + bits).toString("base64");
        var result = inner(thing, signature, publicKey);
        return result;
      };
    }
    function createNoneSigner() {
      return function sign() {
        return "";
      };
    }
    function createNoneVerifier() {
      return function verify(thing, signature) {
        return signature === "";
      };
    }
    module2.exports = function jwa(algorithm) {
      var signerFactories = {
        hs: createHmacSigner,
        rs: createKeySigner,
        ps: createPSSKeySigner,
        es: createECDSASigner,
        none: createNoneSigner
      };
      var verifierFactories = {
        hs: createHmacVerifier,
        rs: createKeyVerifier,
        ps: createPSSKeyVerifier,
        es: createECDSAVerifer,
        none: createNoneVerifier
      };
      var match = algorithm.match(/^(RS|PS|ES|HS)(256|384|512)$|^(none)$/i);
      if (!match)
        throw typeError(MSG_INVALID_ALGORITHM, algorithm);
      var algo = (match[1] || match[3]).toLowerCase();
      var bits = match[2];
      return {
        sign: signerFactories[algo](bits),
        verify: verifierFactories[algo](bits)
      };
    };
  }
});

// node_modules/jws/lib/tostring.js
var require_tostring = __commonJS({
  "node_modules/jws/lib/tostring.js"(exports2, module2) {
    var Buffer2 = require("buffer").Buffer;
    module2.exports = function toString(obj) {
      if (typeof obj === "string")
        return obj;
      if (typeof obj === "number" || Buffer2.isBuffer(obj))
        return obj.toString();
      return JSON.stringify(obj);
    };
  }
});

// node_modules/jws/lib/sign-stream.js
var require_sign_stream = __commonJS({
  "node_modules/jws/lib/sign-stream.js"(exports2, module2) {
    var Buffer2 = require_safe_buffer().Buffer;
    var DataStream = require_data_stream();
    var jwa = require_jwa();
    var Stream = require("stream");
    var toString = require_tostring();
    var util = require("util");
    function base64url(string, encoding) {
      return Buffer2.from(string, encoding).toString("base64").replace(/=/g, "").replace(/\+/g, "-").replace(/\//g, "_");
    }
    function jwsSecuredInput(header, payload, encoding) {
      encoding = encoding || "utf8";
      var encodedHeader = base64url(toString(header), "binary");
      var encodedPayload = base64url(toString(payload), encoding);
      return util.format("%s.%s", encodedHeader, encodedPayload);
    }
    function jwsSign(opts) {
      var header = opts.header;
      var payload = opts.payload;
      var secretOrKey = opts.secret || opts.privateKey;
      var encoding = opts.encoding;
      var algo = jwa(header.alg);
      var securedInput = jwsSecuredInput(header, payload, encoding);
      var signature = algo.sign(securedInput, secretOrKey);
      return util.format("%s.%s", securedInput, signature);
    }
    function SignStream(opts) {
      var secret = opts.secret || opts.privateKey || opts.key;
      var secretStream = new DataStream(secret);
      this.readable = true;
      this.header = opts.header;
      this.encoding = opts.encoding;
      this.secret = this.privateKey = this.key = secretStream;
      this.payload = new DataStream(opts.payload);
      this.secret.once("close", function() {
        if (!this.payload.writable && this.readable)
          this.sign();
      }.bind(this));
      this.payload.once("close", function() {
        if (!this.secret.writable && this.readable)
          this.sign();
      }.bind(this));
    }
    util.inherits(SignStream, Stream);
    SignStream.prototype.sign = function sign() {
      try {
        var signature = jwsSign({
          header: this.header,
          payload: this.payload.buffer,
          secret: this.secret.buffer,
          encoding: this.encoding
        });
        this.emit("done", signature);
        this.emit("data", signature);
        this.emit("end");
        this.readable = false;
        return signature;
      } catch (e) {
        this.readable = false;
        this.emit("error", e);
        this.emit("close");
      }
    };
    SignStream.sign = jwsSign;
    module2.exports = SignStream;
  }
});

// node_modules/jws/lib/verify-stream.js
var require_verify_stream = __commonJS({
  "node_modules/jws/lib/verify-stream.js"(exports2, module2) {
    var Buffer2 = require_safe_buffer().Buffer;
    var DataStream = require_data_stream();
    var jwa = require_jwa();
    var Stream = require("stream");
    var toString = require_tostring();
    var util = require("util");
    var JWS_REGEX = /^[a-zA-Z0-9\-_]+?\.[a-zA-Z0-9\-_]+?\.([a-zA-Z0-9\-_]+)?$/;
    function isObject(thing) {
      return Object.prototype.toString.call(thing) === "[object Object]";
    }
    function safeJsonParse(thing) {
      if (isObject(thing))
        return thing;
      try {
        return JSON.parse(thing);
      } catch (e) {
        return void 0;
      }
    }
    function headerFromJWS(jwsSig) {
      var encodedHeader = jwsSig.split(".", 1)[0];
      return safeJsonParse(Buffer2.from(encodedHeader, "base64").toString("binary"));
    }
    function securedInputFromJWS(jwsSig) {
      return jwsSig.split(".", 2).join(".");
    }
    function signatureFromJWS(jwsSig) {
      return jwsSig.split(".")[2];
    }
    function payloadFromJWS(jwsSig, encoding) {
      encoding = encoding || "utf8";
      var payload = jwsSig.split(".")[1];
      return Buffer2.from(payload, "base64").toString(encoding);
    }
    function isValidJws(string) {
      return JWS_REGEX.test(string) && !!headerFromJWS(string);
    }
    function jwsVerify(jwsSig, algorithm, secretOrKey) {
      if (!algorithm) {
        var err = new Error("Missing algorithm parameter for jws.verify");
        err.code = "MISSING_ALGORITHM";
        throw err;
      }
      jwsSig = toString(jwsSig);
      var signature = signatureFromJWS(jwsSig);
      var securedInput = securedInputFromJWS(jwsSig);
      var algo = jwa(algorithm);
      return algo.verify(securedInput, signature, secretOrKey);
    }
    function jwsDecode(jwsSig, opts) {
      opts = opts || {};
      jwsSig = toString(jwsSig);
      if (!isValidJws(jwsSig))
        return null;
      var header = headerFromJWS(jwsSig);
      if (!header)
        return null;
      var payload = payloadFromJWS(jwsSig);
      if (header.typ === "JWT" || opts.json)
        payload = JSON.parse(payload, opts.encoding);
      return {
        header,
        payload,
        signature: signatureFromJWS(jwsSig)
      };
    }
    function VerifyStream(opts) {
      opts = opts || {};
      var secretOrKey = opts.secret || opts.publicKey || opts.key;
      var secretStream = new DataStream(secretOrKey);
      this.readable = true;
      this.algorithm = opts.algorithm;
      this.encoding = opts.encoding;
      this.secret = this.publicKey = this.key = secretStream;
      this.signature = new DataStream(opts.signature);
      this.secret.once("close", function() {
        if (!this.signature.writable && this.readable)
          this.verify();
      }.bind(this));
      this.signature.once("close", function() {
        if (!this.secret.writable && this.readable)
          this.verify();
      }.bind(this));
    }
    util.inherits(VerifyStream, Stream);
    VerifyStream.prototype.verify = function verify() {
      try {
        var valid = jwsVerify(this.signature.buffer, this.algorithm, this.key.buffer);
        var obj = jwsDecode(this.signature.buffer, this.encoding);
        this.emit("done", valid, obj);
        this.emit("data", valid);
        this.emit("end");
        this.readable = false;
        return valid;
      } catch (e) {
        this.readable = false;
        this.emit("error", e);
        this.emit("close");
      }
    };
    VerifyStream.decode = jwsDecode;
    VerifyStream.isValid = isValidJws;
    VerifyStream.verify = jwsVerify;
    module2.exports = VerifyStream;
  }
});

// node_modules/jws/index.js
var require_jws = __commonJS({
  "node_modules/jws/index.js"(exports2) {
    var SignStream = require_sign_stream();
    var VerifyStream = require_verify_stream();
    var ALGORITHMS = [
      "HS256",
      "HS384",
      "HS512",
      "RS256",
      "RS384",
      "RS512",
      "PS256",
      "PS384",
      "PS512",
      "ES256",
      "ES384",
      "ES512"
    ];
    exports2.ALGORITHMS = ALGORITHMS;
    exports2.sign = SignStream.sign;
    exports2.verify = VerifyStream.verify;
    exports2.decode = VerifyStream.decode;
    exports2.isValid = VerifyStream.isValid;
    exports2.createSign = function createSign(opts) {
      return new SignStream(opts);
    };
    exports2.createVerify = function createVerify(opts) {
      return new VerifyStream(opts);
    };
  }
});

// node_modules/jsonwebtoken/decode.js
var require_decode = __commonJS({
  "node_modules/jsonwebtoken/decode.js"(exports2, module2) {
    var jws = require_jws();
    module2.exports = function(jwt2, options) {
      options = options || {};
      var decoded = jws.decode(jwt2, options);
      if (!decoded) {
        return null;
      }
      var payload = decoded.payload;
      if (typeof payload === "string") {
        try {
          var obj = JSON.parse(payload);
          if (obj !== null && typeof obj === "object") {
            payload = obj;
          }
        } catch (e) {
        }
      }
      if (options.complete === true) {
        return {
          header: decoded.header,
          payload,
          signature: decoded.signature
        };
      }
      return payload;
    };
  }
});

// node_modules/jsonwebtoken/lib/JsonWebTokenError.js
var require_JsonWebTokenError = __commonJS({
  "node_modules/jsonwebtoken/lib/JsonWebTokenError.js"(exports2, module2) {
    var JsonWebTokenError = function(message, error) {
      Error.call(this, message);
      if (Error.captureStackTrace) {
        Error.captureStackTrace(this, this.constructor);
      }
      this.name = "JsonWebTokenError";
      this.message = message;
      if (error) this.inner = error;
    };
    JsonWebTokenError.prototype = Object.create(Error.prototype);
    JsonWebTokenError.prototype.constructor = JsonWebTokenError;
    module2.exports = JsonWebTokenError;
  }
});

// node_modules/jsonwebtoken/lib/NotBeforeError.js
var require_NotBeforeError = __commonJS({
  "node_modules/jsonwebtoken/lib/NotBeforeError.js"(exports2, module2) {
    var JsonWebTokenError = require_JsonWebTokenError();
    var NotBeforeError = function(message, date) {
      JsonWebTokenError.call(this, message);
      this.name = "NotBeforeError";
      this.date = date;
    };
    NotBeforeError.prototype = Object.create(JsonWebTokenError.prototype);
    NotBeforeError.prototype.constructor = NotBeforeError;
    module2.exports = NotBeforeError;
  }
});

// node_modules/jsonwebtoken/lib/TokenExpiredError.js
var require_TokenExpiredError = __commonJS({
  "node_modules/jsonwebtoken/lib/TokenExpiredError.js"(exports2, module2) {
    var JsonWebTokenError = require_JsonWebTokenError();
    var TokenExpiredError = function(message, expiredAt) {
      JsonWebTokenError.call(this, message);
      this.name = "TokenExpiredError";
      this.expiredAt = expiredAt;
    };
    TokenExpiredError.prototype = Object.create(JsonWebTokenError.prototype);
    TokenExpiredError.prototype.constructor = TokenExpiredError;
    module2.exports = TokenExpiredError;
  }
});

// node_modules/ms/index.js
var require_ms = __commonJS({
  "node_modules/ms/index.js"(exports2, module2) {
    var s = 1e3;
    var m = s * 60;
    var h = m * 60;
    var d = h * 24;
    var w = d * 7;
    var y = d * 365.25;
    module2.exports = function(val, options) {
      options = options || {};
      var type = typeof val;
      if (type === "string" && val.length > 0) {
        return parse2(val);
      } else if (type === "number" && isFinite(val)) {
        return options.long ? fmtLong(val) : fmtShort(val);
      }
      throw new Error(
        "val is not a non-empty string or a valid number. val=" + JSON.stringify(val)
      );
    };
    function parse2(str) {
      str = String(str);
      if (str.length > 100) {
        return;
      }
      var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
        str
      );
      if (!match) {
        return;
      }
      var n = parseFloat(match[1]);
      var type = (match[2] || "ms").toLowerCase();
      switch (type) {
        case "years":
        case "year":
        case "yrs":
        case "yr":
        case "y":
          return n * y;
        case "weeks":
        case "week":
        case "w":
          return n * w;
        case "days":
        case "day":
        case "d":
          return n * d;
        case "hours":
        case "hour":
        case "hrs":
        case "hr":
        case "h":
          return n * h;
        case "minutes":
        case "minute":
        case "mins":
        case "min":
        case "m":
          return n * m;
        case "seconds":
        case "second":
        case "secs":
        case "sec":
        case "s":
          return n * s;
        case "milliseconds":
        case "millisecond":
        case "msecs":
        case "msec":
        case "ms":
          return n;
        default:
          return void 0;
      }
    }
    function fmtShort(ms) {
      var msAbs = Math.abs(ms);
      if (msAbs >= d) {
        return Math.round(ms / d) + "d";
      }
      if (msAbs >= h) {
        return Math.round(ms / h) + "h";
      }
      if (msAbs >= m) {
        return Math.round(ms / m) + "m";
      }
      if (msAbs >= s) {
        return Math.round(ms / s) + "s";
      }
      return ms + "ms";
    }
    function fmtLong(ms) {
      var msAbs = Math.abs(ms);
      if (msAbs >= d) {
        return plural(ms, msAbs, d, "day");
      }
      if (msAbs >= h) {
        return plural(ms, msAbs, h, "hour");
      }
      if (msAbs >= m) {
        return plural(ms, msAbs, m, "minute");
      }
      if (msAbs >= s) {
        return plural(ms, msAbs, s, "second");
      }
      return ms + " ms";
    }
    function plural(ms, msAbs, n, name3) {
      var isPlural = msAbs >= n * 1.5;
      return Math.round(ms / n) + " " + name3 + (isPlural ? "s" : "");
    }
  }
});

// node_modules/jsonwebtoken/lib/timespan.js
var require_timespan = __commonJS({
  "node_modules/jsonwebtoken/lib/timespan.js"(exports2, module2) {
    var ms = require_ms();
    module2.exports = function(time, iat) {
      var timestamp = iat || Math.floor(Date.now() / 1e3);
      if (typeof time === "string") {
        var milliseconds = ms(time);
        if (typeof milliseconds === "undefined") {
          return;
        }
        return Math.floor(timestamp + milliseconds / 1e3);
      } else if (typeof time === "number") {
        return timestamp + time;
      } else {
        return;
      }
    };
  }
});

// node_modules/semver/internal/constants.js
var require_constants6 = __commonJS({
  "node_modules/semver/internal/constants.js"(exports2, module2) {
    "use strict";
    var SEMVER_SPEC_VERSION = "2.0.0";
    var MAX_LENGTH = 256;
    var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || /* istanbul ignore next */
    9007199254740991;
    var MAX_SAFE_COMPONENT_LENGTH = 16;
    var MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6;
    var RELEASE_TYPES = [
      "major",
      "premajor",
      "minor",
      "preminor",
      "patch",
      "prepatch",
      "prerelease"
    ];
    module2.exports = {
      MAX_LENGTH,
      MAX_SAFE_COMPONENT_LENGTH,
      MAX_SAFE_BUILD_LENGTH,
      MAX_SAFE_INTEGER,
      RELEASE_TYPES,
      SEMVER_SPEC_VERSION,
      FLAG_INCLUDE_PRERELEASE: 1,
      FLAG_LOOSE: 2
    };
  }
});

// node_modules/semver/internal/debug.js
var require_debug = __commonJS({
  "node_modules/semver/internal/debug.js"(exports2, module2) {
    "use strict";
    var debug = typeof process === "object" && process.env && process.env.NODE_DEBUG && /\bsemver\b/i.test(process.env.NODE_DEBUG) ? (...args) => console.error("SEMVER", ...args) : () => {
    };
    module2.exports = debug;
  }
});

// node_modules/semver/internal/re.js
var require_re = __commonJS({
  "node_modules/semver/internal/re.js"(exports2, module2) {
    "use strict";
    var {
      MAX_SAFE_COMPONENT_LENGTH,
      MAX_SAFE_BUILD_LENGTH,
      MAX_LENGTH
    } = require_constants6();
    var debug = require_debug();
    exports2 = module2.exports = {};
    var re = exports2.re = [];
    var safeRe = exports2.safeRe = [];
    var src = exports2.src = [];
    var safeSrc = exports2.safeSrc = [];
    var t = exports2.t = {};
    var R = 0;
    var LETTERDASHNUMBER = "[a-zA-Z0-9-]";
    var safeRegexReplacements = [
      ["\\s", 1],
      ["\\d", MAX_LENGTH],
      [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH]
    ];
    var makeSafeRegex = (value) => {
      for (const [token, max] of safeRegexReplacements) {
        value = value.split(`${token}*`).join(`${token}{0,${max}}`).split(`${token}+`).join(`${token}{1,${max}}`);
      }
      return value;
    };
    var createToken = (name3, value, isGlobal) => {
      const safe = makeSafeRegex(value);
      const index = R++;
      debug(name3, index, value);
      t[name3] = index;
      src[index] = value;
      safeSrc[index] = safe;
      re[index] = new RegExp(value, isGlobal ? "g" : void 0);
      safeRe[index] = new RegExp(safe, isGlobal ? "g" : void 0);
    };
    createToken("NUMERICIDENTIFIER", "0|[1-9]\\d*");
    createToken("NUMERICIDENTIFIERLOOSE", "\\d+");
    createToken("NONNUMERICIDENTIFIER", `\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`);
    createToken("MAINVERSION", `(${src[t.NUMERICIDENTIFIER]})\\.(${src[t.NUMERICIDENTIFIER]})\\.(${src[t.NUMERICIDENTIFIER]})`);
    createToken("MAINVERSIONLOOSE", `(${src[t.NUMERICIDENTIFIERLOOSE]})\\.(${src[t.NUMERICIDENTIFIERLOOSE]})\\.(${src[t.NUMERICIDENTIFIERLOOSE]})`);
    createToken("PRERELEASEIDENTIFIER", `(?:${src[t.NONNUMERICIDENTIFIER]}|${src[t.NUMERICIDENTIFIER]})`);
    createToken("PRERELEASEIDENTIFIERLOOSE", `(?:${src[t.NONNUMERICIDENTIFIER]}|${src[t.NUMERICIDENTIFIERLOOSE]})`);
    createToken("PRERELEASE", `(?:-(${src[t.PRERELEASEIDENTIFIER]}(?:\\.${src[t.PRERELEASEIDENTIFIER]})*))`);
    createToken("PRERELEASELOOSE", `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`);
    createToken("BUILDIDENTIFIER", `${LETTERDASHNUMBER}+`);
    createToken("BUILD", `(?:\\+(${src[t.BUILDIDENTIFIER]}(?:\\.${src[t.BUILDIDENTIFIER]})*))`);
    createToken("FULLPLAIN", `v?${src[t.MAINVERSION]}${src[t.PRERELEASE]}?${src[t.BUILD]}?`);
    createToken("FULL", `^${src[t.FULLPLAIN]}$`);
    createToken("LOOSEPLAIN", `[v=\\s]*${src[t.MAINVERSIONLOOSE]}${src[t.PRERELEASELOOSE]}?${src[t.BUILD]}?`);
    createToken("LOOSE", `^${src[t.LOOSEPLAIN]}$`);
    createToken("GTLT", "((?:<|>)?=?)");
    createToken("XRANGEIDENTIFIERLOOSE", `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`);
    createToken("XRANGEIDENTIFIER", `${src[t.NUMERICIDENTIFIER]}|x|X|\\*`);
    createToken("XRANGEPLAIN", `[v=\\s]*(${src[t.XRANGEIDENTIFIER]})(?:\\.(${src[t.XRANGEIDENTIFIER]})(?:\\.(${src[t.XRANGEIDENTIFIER]})(?:${src[t.PRERELEASE]})?${src[t.BUILD]}?)?)?`);
    createToken("XRANGEPLAINLOOSE", `[v=\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})(?:\\.(${src[t.XRANGEIDENTIFIERLOOSE]})(?:\\.(${src[t.XRANGEIDENTIFIERLOOSE]})(?:${src[t.PRERELEASELOOSE]})?${src[t.BUILD]}?)?)?`);
    createToken("XRANGE", `^${src[t.GTLT]}\\s*${src[t.XRANGEPLAIN]}$`);
    createToken("XRANGELOOSE", `^${src[t.GTLT]}\\s*${src[t.XRANGEPLAINLOOSE]}$`);
    createToken("COERCEPLAIN", `${"(^|[^\\d])(\\d{1,"}${MAX_SAFE_COMPONENT_LENGTH}})(?:\\.(\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?(?:\\.(\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`);
    createToken("COERCE", `${src[t.COERCEPLAIN]}(?:$|[^\\d])`);
    createToken("COERCEFULL", src[t.COERCEPLAIN] + `(?:${src[t.PRERELEASE]})?(?:${src[t.BUILD]})?(?:$|[^\\d])`);
    createToken("COERCERTL", src[t.COERCE], true);
    createToken("COERCERTLFULL", src[t.COERCEFULL], true);
    createToken("LONETILDE", "(?:~>?)");
    createToken("TILDETRIM", `(\\s*)${src[t.LONETILDE]}\\s+`, true);
    exports2.tildeTrimReplace = "$1~";
    createToken("TILDE", `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`);
    createToken("TILDELOOSE", `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`);
    createToken("LONECARET", "(?:\\^)");
    createToken("CARETTRIM", `(\\s*)${src[t.LONECARET]}\\s+`, true);
    exports2.caretTrimReplace = "$1^";
    createToken("CARET", `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`);
    createToken("CARETLOOSE", `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`);
    createToken("COMPARATORLOOSE", `^${src[t.GTLT]}\\s*(${src[t.LOOSEPLAIN]})$|^$`);
    createToken("COMPARATOR", `^${src[t.GTLT]}\\s*(${src[t.FULLPLAIN]})$|^$`);
    createToken("COMPARATORTRIM", `(\\s*)${src[t.GTLT]}\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true);
    exports2.comparatorTrimReplace = "$1$2$3";
    createToken("HYPHENRANGE", `^\\s*(${src[t.XRANGEPLAIN]})\\s+-\\s+(${src[t.XRANGEPLAIN]})\\s*$`);
    createToken("HYPHENRANGELOOSE", `^\\s*(${src[t.XRANGEPLAINLOOSE]})\\s+-\\s+(${src[t.XRANGEPLAINLOOSE]})\\s*$`);
    createToken("STAR", "(<|>)?=?\\s*\\*");
    createToken("GTE0", "^\\s*>=\\s*0\\.0\\.0\\s*$");
    createToken("GTE0PRE", "^\\s*>=\\s*0\\.0\\.0-0\\s*$");
  }
});

// node_modules/semver/internal/parse-options.js
var require_parse_options = __commonJS({
  "node_modules/semver/internal/parse-options.js"(exports2, module2) {
    "use strict";
    var looseOption = Object.freeze({ loose: true });
    var emptyOpts = Object.freeze({});
    var parseOptions = (options) => {
      if (!options) {
        return emptyOpts;
      }
      if (typeof options !== "object") {
        return looseOption;
      }
      return options;
    };
    module2.exports = parseOptions;
  }
});

// node_modules/semver/internal/identifiers.js
var require_identifiers = __commonJS({
  "node_modules/semver/internal/identifiers.js"(exports2, module2) {
    "use strict";
    var numeric = /^[0-9]+$/;
    var compareIdentifiers = (a, b) => {
      const anum = numeric.test(a);
      const bnum = numeric.test(b);
      if (anum && bnum) {
        a = +a;
        b = +b;
      }
      return a === b ? 0 : anum && !bnum ? -1 : bnum && !anum ? 1 : a < b ? -1 : 1;
    };
    var rcompareIdentifiers = (a, b) => compareIdentifiers(b, a);
    module2.exports = {
      compareIdentifiers,
      rcompareIdentifiers
    };
  }
});

// node_modules/semver/classes/semver.js
var require_semver = __commonJS({
  "node_modules/semver/classes/semver.js"(exports2, module2) {
    "use strict";
    var debug = require_debug();
    var { MAX_LENGTH, MAX_SAFE_INTEGER } = require_constants6();
    var { safeRe: re, t } = require_re();
    var parseOptions = require_parse_options();
    var { compareIdentifiers } = require_identifiers();
    var SemVer = class _SemVer {
      constructor(version3, options) {
        options = parseOptions(options);
        if (version3 instanceof _SemVer) {
          if (version3.loose === !!options.loose && version3.includePrerelease === !!options.includePrerelease) {
            return version3;
          } else {
            version3 = version3.version;
          }
        } else if (typeof version3 !== "string") {
          throw new TypeError(`Invalid version. Must be a string. Got type "${typeof version3}".`);
        }
        if (version3.length > MAX_LENGTH) {
          throw new TypeError(
            `version is longer than ${MAX_LENGTH} characters`
          );
        }
        debug("SemVer", version3, options);
        this.options = options;
        this.loose = !!options.loose;
        this.includePrerelease = !!options.includePrerelease;
        const m = version3.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL]);
        if (!m) {
          throw new TypeError(`Invalid Version: ${version3}`);
        }
        this.raw = version3;
        this.major = +m[1];
        this.minor = +m[2];
        this.patch = +m[3];
        if (this.major > MAX_SAFE_INTEGER || this.major < 0) {
          throw new TypeError("Invalid major version");
        }
        if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {
          throw new TypeError("Invalid minor version");
        }
        if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {
          throw new TypeError("Invalid patch version");
        }
        if (!m[4]) {
          this.prerelease = [];
        } else {
          this.prerelease = m[4].split(".").map((id) => {
            if (/^[0-9]+$/.test(id)) {
              const num = +id;
              if (num >= 0 && num < MAX_SAFE_INTEGER) {
                return num;
              }
            }
            return id;
          });
        }
        this.build = m[5] ? m[5].split(".") : [];
        this.format();
      }
      format() {
        this.version = `${this.major}.${this.minor}.${this.patch}`;
        if (this.prerelease.length) {
          this.version += `-${this.prerelease.join(".")}`;
        }
        return this.version;
      }
      toString() {
        return this.version;
      }
      compare(other) {
        debug("SemVer.compare", this.version, this.options, other);
        if (!(other instanceof _SemVer)) {
          if (typeof other === "string" && other === this.version) {
            return 0;
          }
          other = new _SemVer(other, this.options);
        }
        if (other.version === this.version) {
          return 0;
        }
        return this.compareMain(other) || this.comparePre(other);
      }
      compareMain(other) {
        if (!(other instanceof _SemVer)) {
          other = new _SemVer(other, this.options);
        }
        return compareIdentifiers(this.major, other.major) || compareIdentifiers(this.minor, other.minor) || compareIdentifiers(this.patch, other.patch);
      }
      comparePre(other) {
        if (!(other instanceof _SemVer)) {
          other = new _SemVer(other, this.options);
        }
        if (this.prerelease.length && !other.prerelease.length) {
          return -1;
        } else if (!this.prerelease.length && other.prerelease.length) {
          return 1;
        } else if (!this.prerelease.length && !other.prerelease.length) {
          return 0;
        }
        let i = 0;
        do {
          const a = this.prerelease[i];
          const b = other.prerelease[i];
          debug("prerelease compare", i, a, b);
          if (a === void 0 && b === void 0) {
            return 0;
          } else if (b === void 0) {
            return 1;
          } else if (a === void 0) {
            return -1;
          } else if (a === b) {
            continue;
          } else {
            return compareIdentifiers(a, b);
          }
        } while (++i);
      }
      compareBuild(other) {
        if (!(other instanceof _SemVer)) {
          other = new _SemVer(other, this.options);
        }
        let i = 0;
        do {
          const a = this.build[i];
          const b = other.build[i];
          debug("build compare", i, a, b);
          if (a === void 0 && b === void 0) {
            return 0;
          } else if (b === void 0) {
            return 1;
          } else if (a === void 0) {
            return -1;
          } else if (a === b) {
            continue;
          } else {
            return compareIdentifiers(a, b);
          }
        } while (++i);
      }
      // preminor will bump the version up to the next minor release, and immediately
      // down to pre-release. premajor and prepatch work the same way.
      inc(release, identifier, identifierBase) {
        if (release.startsWith("pre")) {
          if (!identifier && identifierBase === false) {
            throw new Error("invalid increment argument: identifier is empty");
          }
          if (identifier) {
            const match = `-${identifier}`.match(this.options.loose ? re[t.PRERELEASELOOSE] : re[t.PRERELEASE]);
            if (!match || match[1] !== identifier) {
              throw new Error(`invalid identifier: ${identifier}`);
            }
          }
        }
        switch (release) {
          case "premajor":
            this.prerelease.length = 0;
            this.patch = 0;
            this.minor = 0;
            this.major++;
            this.inc("pre", identifier, identifierBase);
            break;
          case "preminor":
            this.prerelease.length = 0;
            this.patch = 0;
            this.minor++;
            this.inc("pre", identifier, identifierBase);
            break;
          case "prepatch":
            this.prerelease.length = 0;
            this.inc("patch", identifier, identifierBase);
            this.inc("pre", identifier, identifierBase);
            break;
          // If the input is a non-prerelease version, this acts the same as
          // prepatch.
          case "prerelease":
            if (this.prerelease.length === 0) {
              this.inc("patch", identifier, identifierBase);
            }
            this.inc("pre", identifier, identifierBase);
            break;
          case "release":
            if (this.prerelease.length === 0) {
              throw new Error(`version ${this.raw} is not a prerelease`);
            }
            this.prerelease.length = 0;
            break;
          case "major":
            if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) {
              this.major++;
            }
            this.minor = 0;
            this.patch = 0;
            this.prerelease = [];
            break;
          case "minor":
            if (this.patch !== 0 || this.prerelease.length === 0) {
              this.minor++;
            }
            this.patch = 0;
            this.prerelease = [];
            break;
          case "patch":
            if (this.prerelease.length === 0) {
              this.patch++;
            }
            this.prerelease = [];
            break;
          // This probably shouldn't be used publicly.
          // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.
          case "pre": {
            const base = Number(identifierBase) ? 1 : 0;
            if (this.prerelease.length === 0) {
              this.prerelease = [base];
            } else {
              let i = this.prerelease.length;
              while (--i >= 0) {
                if (typeof this.prerelease[i] === "number") {
                  this.prerelease[i]++;
                  i = -2;
                }
              }
              if (i === -1) {
                if (identifier === this.prerelease.join(".") && identifierBase === false) {
                  throw new Error("invalid increment argument: identifier already exists");
                }
                this.prerelease.push(base);
              }
            }
            if (identifier) {
              let prerelease = [identifier, base];
              if (identifierBase === false) {
                prerelease = [identifier];
              }
              if (compareIdentifiers(this.prerelease[0], identifier) === 0) {
                if (isNaN(this.prerelease[1])) {
                  this.prerelease = prerelease;
                }
              } else {
                this.prerelease = prerelease;
              }
            }
            break;
          }
          default:
            throw new Error(`invalid increment argument: ${release}`);
        }
        this.raw = this.format();
        if (this.build.length) {
          this.raw += `+${this.build.join(".")}`;
        }
        return this;
      }
    };
    module2.exports = SemVer;
  }
});

// node_modules/semver/functions/parse.js
var require_parse2 = __commonJS({
  "node_modules/semver/functions/parse.js"(exports2, module2) {
    "use strict";
    var SemVer = require_semver();
    var parse2 = (version3, options, throwErrors = false) => {
      if (version3 instanceof SemVer) {
        return version3;
      }
      try {
        return new SemVer(version3, options);
      } catch (er) {
        if (!throwErrors) {
          return null;
        }
        throw er;
      }
    };
    module2.exports = parse2;
  }
});

// node_modules/semver/functions/valid.js
var require_valid = __commonJS({
  "node_modules/semver/functions/valid.js"(exports2, module2) {
    "use strict";
    var parse2 = require_parse2();
    var valid = (version3, options) => {
      const v = parse2(version3, options);
      return v ? v.version : null;
    };
    module2.exports = valid;
  }
});

// node_modules/semver/functions/clean.js
var require_clean = __commonJS({
  "node_modules/semver/functions/clean.js"(exports2, module2) {
    "use strict";
    var parse2 = require_parse2();
    var clean = (version3, options) => {
      const s = parse2(version3.trim().replace(/^[=v]+/, ""), options);
      return s ? s.version : null;
    };
    module2.exports = clean;
  }
});

// node_modules/semver/functions/inc.js
var require_inc = __commonJS({
  "node_modules/semver/functions/inc.js"(exports2, module2) {
    "use strict";
    var SemVer = require_semver();
    var inc = (version3, release, options, identifier, identifierBase) => {
      if (typeof options === "string") {
        identifierBase = identifier;
        identifier = options;
        options = void 0;
      }
      try {
        return new SemVer(
          version3 instanceof SemVer ? version3.version : version3,
          options
        ).inc(release, identifier, identifierBase).version;
      } catch (er) {
        return null;
      }
    };
    module2.exports = inc;
  }
});

// node_modules/semver/functions/diff.js
var require_diff = __commonJS({
  "node_modules/semver/functions/diff.js"(exports2, module2) {
    "use strict";
    var parse2 = require_parse2();
    var diff = (version1, version22) => {
      const v1 = parse2(version1, null, true);
      const v2 = parse2(version22, null, true);
      const comparison = v1.compare(v2);
      if (comparison === 0) {
        return null;
      }
      const v1Higher = comparison > 0;
      const highVersion = v1Higher ? v1 : v2;
      const lowVersion = v1Higher ? v2 : v1;
      const highHasPre = !!highVersion.prerelease.length;
      const lowHasPre = !!lowVersion.prerelease.length;
      if (lowHasPre && !highHasPre) {
        if (!lowVersion.patch && !lowVersion.minor) {
          return "major";
        }
        if (lowVersion.compareMain(highVersion) === 0) {
          if (lowVersion.minor && !lowVersion.patch) {
            return "minor";
          }
          return "patch";
        }
      }
      const prefix = highHasPre ? "pre" : "";
      if (v1.major !== v2.major) {
        return prefix + "major";
      }
      if (v1.minor !== v2.minor) {
        return prefix + "minor";
      }
      if (v1.patch !== v2.patch) {
        return prefix + "patch";
      }
      return "prerelease";
    };
    module2.exports = diff;
  }
});

// node_modules/semver/functions/major.js
var require_major = __commonJS({
  "node_modules/semver/functions/major.js"(exports2, module2) {
    "use strict";
    var SemVer = require_semver();
    var major = (a, loose) => new SemVer(a, loose).major;
    module2.exports = major;
  }
});

// node_modules/semver/functions/minor.js
var require_minor = __commonJS({
  "node_modules/semver/functions/minor.js"(exports2, module2) {
    "use strict";
    var SemVer = require_semver();
    var minor = (a, loose) => new SemVer(a, loose).minor;
    module2.exports = minor;
  }
});

// node_modules/semver/functions/patch.js
var require_patch = __commonJS({
  "node_modules/semver/functions/patch.js"(exports2, module2) {
    "use strict";
    var SemVer = require_semver();
    var patch = (a, loose) => new SemVer(a, loose).patch;
    module2.exports = patch;
  }
});

// node_modules/semver/functions/prerelease.js
var require_prerelease = __commonJS({
  "node_modules/semver/functions/prerelease.js"(exports2, module2) {
    "use strict";
    var parse2 = require_parse2();
    var prerelease = (version3, options) => {
      const parsed = parse2(version3, options);
      return parsed && parsed.prerelease.length ? parsed.prerelease : null;
    };
    module2.exports = prerelease;
  }
});

// node_modules/semver/functions/compare.js
var require_compare = __commonJS({
  "node_modules/semver/functions/compare.js"(exports2, module2) {
    "use strict";
    var SemVer = require_semver();
    var compare = (a, b, loose) => new SemVer(a, loose).compare(new SemVer(b, loose));
    module2.exports = compare;
  }
});

// node_modules/semver/functions/rcompare.js
var require_rcompare = __commonJS({
  "node_modules/semver/functions/rcompare.js"(exports2, module2) {
    "use strict";
    var compare = require_compare();
    var rcompare = (a, b, loose) => compare(b, a, loose);
    module2.exports = rcompare;
  }
});

// node_modules/semver/functions/compare-loose.js
var require_compare_loose = __commonJS({
  "node_modules/semver/functions/compare-loose.js"(exports2, module2) {
    "use strict";
    var compare = require_compare();
    var compareLoose = (a, b) => compare(a, b, true);
    module2.exports = compareLoose;
  }
});

// node_modules/semver/functions/compare-build.js
var require_compare_build = __commonJS({
  "node_modules/semver/functions/compare-build.js"(exports2, module2) {
    "use strict";
    var SemVer = require_semver();
    var compareBuild = (a, b, loose) => {
      const versionA = new SemVer(a, loose);
      const versionB = new SemVer(b, loose);
      return versionA.compare(versionB) || versionA.compareBuild(versionB);
    };
    module2.exports = compareBuild;
  }
});

// node_modules/semver/functions/sort.js
var require_sort = __commonJS({
  "node_modules/semver/functions/sort.js"(exports2, module2) {
    "use strict";
    var compareBuild = require_compare_build();
    var sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose));
    module2.exports = sort;
  }
});

// node_modules/semver/functions/rsort.js
var require_rsort = __commonJS({
  "node_modules/semver/functions/rsort.js"(exports2, module2) {
    "use strict";
    var compareBuild = require_compare_build();
    var rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose));
    module2.exports = rsort;
  }
});

// node_modules/semver/functions/gt.js
var require_gt = __commonJS({
  "node_modules/semver/functions/gt.js"(exports2, module2) {
    "use strict";
    var compare = require_compare();
    var gt = (a, b, loose) => compare(a, b, loose) > 0;
    module2.exports = gt;
  }
});

// node_modules/semver/functions/lt.js
var require_lt = __commonJS({
  "node_modules/semver/functions/lt.js"(exports2, module2) {
    "use strict";
    var compare = require_compare();
    var lt = (a, b, loose) => compare(a, b, loose) < 0;
    module2.exports = lt;
  }
});

// node_modules/semver/functions/eq.js
var require_eq = __commonJS({
  "node_modules/semver/functions/eq.js"(exports2, module2) {
    "use strict";
    var compare = require_compare();
    var eq = (a, b, loose) => compare(a, b, loose) === 0;
    module2.exports = eq;
  }
});

// node_modules/semver/functions/neq.js
var require_neq = __commonJS({
  "node_modules/semver/functions/neq.js"(exports2, module2) {
    "use strict";
    var compare = require_compare();
    var neq = (a, b, loose) => compare(a, b, loose) !== 0;
    module2.exports = neq;
  }
});

// node_modules/semver/functions/gte.js
var require_gte = __commonJS({
  "node_modules/semver/functions/gte.js"(exports2, module2) {
    "use strict";
    var compare = require_compare();
    var gte = (a, b, loose) => compare(a, b, loose) >= 0;
    module2.exports = gte;
  }
});

// node_modules/semver/functions/lte.js
var require_lte = __commonJS({
  "node_modules/semver/functions/lte.js"(exports2, module2) {
    "use strict";
    var compare = require_compare();
    var lte = (a, b, loose) => compare(a, b, loose) <= 0;
    module2.exports = lte;
  }
});

// node_modules/semver/functions/cmp.js
var require_cmp = __commonJS({
  "node_modules/semver/functions/cmp.js"(exports2, module2) {
    "use strict";
    var eq = require_eq();
    var neq = require_neq();
    var gt = require_gt();
    var gte = require_gte();
    var lt = require_lt();
    var lte = require_lte();
    var cmp = (a, op, b, loose) => {
      switch (op) {
        case "===":
          if (typeof a === "object") {
            a = a.version;
          }
          if (typeof b === "object") {
            b = b.version;
          }
          return a === b;
        case "!==":
          if (typeof a === "object") {
            a = a.version;
          }
          if (typeof b === "object") {
            b = b.version;
          }
          return a !== b;
        case "":
        case "=":
        case "==":
          return eq(a, b, loose);
        case "!=":
          return neq(a, b, loose);
        case ">":
          return gt(a, b, loose);
        case ">=":
          return gte(a, b, loose);
        case "<":
          return lt(a, b, loose);
        case "<=":
          return lte(a, b, loose);
        default:
          throw new TypeError(`Invalid operator: ${op}`);
      }
    };
    module2.exports = cmp;
  }
});

// node_modules/semver/functions/coerce.js
var require_coerce = __commonJS({
  "node_modules/semver/functions/coerce.js"(exports2, module2) {
    "use strict";
    var SemVer = require_semver();
    var parse2 = require_parse2();
    var { safeRe: re, t } = require_re();
    var coerce = (version3, options) => {
      if (version3 instanceof SemVer) {
        return version3;
      }
      if (typeof version3 === "number") {
        version3 = String(version3);
      }
      if (typeof version3 !== "string") {
        return null;
      }
      options = options || {};
      let match = null;
      if (!options.rtl) {
        match = version3.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE]);
      } else {
        const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL];
        let next;
        while ((next = coerceRtlRegex.exec(version3)) && (!match || match.index + match[0].length !== version3.length)) {
          if (!match || next.index + next[0].length !== match.index + match[0].length) {
            match = next;
          }
          coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length;
        }
        coerceRtlRegex.lastIndex = -1;
      }
      if (match === null) {
        return null;
      }
      const major = match[2];
      const minor = match[3] || "0";
      const patch = match[4] || "0";
      const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : "";
      const build = options.includePrerelease && match[6] ? `+${match[6]}` : "";
      return parse2(`${major}.${minor}.${patch}${prerelease}${build}`, options);
    };
    module2.exports = coerce;
  }
});

// node_modules/semver/internal/lrucache.js
var require_lrucache = __commonJS({
  "node_modules/semver/internal/lrucache.js"(exports2, module2) {
    "use strict";
    var LRUCache = class {
      constructor() {
        this.max = 1e3;
        this.map = /* @__PURE__ */ new Map();
      }
      get(key) {
        const value = this.map.get(key);
        if (value === void 0) {
          return void 0;
        } else {
          this.map.delete(key);
          this.map.set(key, value);
          return value;
        }
      }
      delete(key) {
        return this.map.delete(key);
      }
      set(key, value) {
        const deleted = this.delete(key);
        if (!deleted && value !== void 0) {
          if (this.map.size >= this.max) {
            const firstKey = this.map.keys().next().value;
            this.delete(firstKey);
          }
          this.map.set(key, value);
        }
        return this;
      }
    };
    module2.exports = LRUCache;
  }
});

// node_modules/semver/classes/range.js
var require_range = __commonJS({
  "node_modules/semver/classes/range.js"(exports2, module2) {
    "use strict";
    var SPACE_CHARACTERS = /\s+/g;
    var Range = class _Range {
      constructor(range, options) {
        options = parseOptions(options);
        if (range instanceof _Range) {
          if (range.loose === !!options.loose && range.includePrerelease === !!options.includePrerelease) {
            return range;
          } else {
            return new _Range(range.raw, options);
          }
        }
        if (range instanceof Comparator) {
          this.raw = range.value;
          this.set = [[range]];
          this.formatted = void 0;
          return this;
        }
        this.options = options;
        this.loose = !!options.loose;
        this.includePrerelease = !!options.includePrerelease;
        this.raw = range.trim().replace(SPACE_CHARACTERS, " ");
        this.set = this.raw.split("||").map((r) => this.parseRange(r.trim())).filter((c) => c.length);
        if (!this.set.length) {
          throw new TypeError(`Invalid SemVer Range: ${this.raw}`);
        }
        if (this.set.length > 1) {
          const first = this.set[0];
          this.set = this.set.filter((c) => !isNullSet(c[0]));
          if (this.set.length === 0) {
            this.set = [first];
          } else if (this.set.length > 1) {
            for (const c of this.set) {
              if (c.length === 1 && isAny(c[0])) {
                this.set = [c];
                break;
              }
            }
          }
        }
        this.formatted = void 0;
      }
      get range() {
        if (this.formatted === void 0) {
          this.formatted = "";
          for (let i = 0; i < this.set.length; i++) {
            if (i > 0) {
              this.formatted += "||";
            }
            const comps = this.set[i];
            for (let k = 0; k < comps.length; k++) {
              if (k > 0) {
                this.formatted += " ";
              }
              this.formatted += comps[k].toString().trim();
            }
          }
        }
        return this.formatted;
      }
      format() {
        return this.range;
      }
      toString() {
        return this.range;
      }
      parseRange(range) {
        const memoOpts = (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) | (this.options.loose && FLAG_LOOSE);
        const memoKey = memoOpts + ":" + range;
        const cached = cache.get(memoKey);
        if (cached) {
          return cached;
        }
        const loose = this.options.loose;
        const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE];
        range = range.replace(hr, hyphenReplace(this.options.includePrerelease));
        debug("hyphen replace", range);
        range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace);
        debug("comparator trim", range);
        range = range.replace(re[t.TILDETRIM], tildeTrimReplace);
        debug("tilde trim", range);
        range = range.replace(re[t.CARETTRIM], caretTrimReplace);
        debug("caret trim", range);
        let rangeList = range.split(" ").map((comp) => parseComparator(comp, this.options)).join(" ").split(/\s+/).map((comp) => replaceGTE0(comp, this.options));
        if (loose) {
          rangeList = rangeList.filter((comp) => {
            debug("loose invalid filter", comp, this.options);
            return !!comp.match(re[t.COMPARATORLOOSE]);
          });
        }
        debug("range list", rangeList);
        const rangeMap = /* @__PURE__ */ new Map();
        const comparators = rangeList.map((comp) => new Comparator(comp, this.options));
        for (const comp of comparators) {
          if (isNullSet(comp)) {
            return [comp];
          }
          rangeMap.set(comp.value, comp);
        }
        if (rangeMap.size > 1 && rangeMap.has("")) {
          rangeMap.delete("");
        }
        const result = [...rangeMap.values()];
        cache.set(memoKey, result);
        return result;
      }
      intersects(range, options) {
        if (!(range instanceof _Range)) {
          throw new TypeError("a Range is required");
        }
        return this.set.some((thisComparators) => {
          return isSatisfiable(thisComparators, options) && range.set.some((rangeComparators) => {
            return isSatisfiable(rangeComparators, options) && thisComparators.every((thisComparator) => {
              return rangeComparators.every((rangeComparator) => {
                return thisComparator.intersects(rangeComparator, options);
              });
            });
          });
        });
      }
      // if ANY of the sets match ALL of its comparators, then pass
      test(version3) {
        if (!version3) {
          return false;
        }
        if (typeof version3 === "string") {
          try {
            version3 = new SemVer(version3, this.options);
          } catch (er) {
            return false;
          }
        }
        for (let i = 0; i < this.set.length; i++) {
          if (testSet(this.set[i], version3, this.options)) {
            return true;
          }
        }
        return false;
      }
    };
    module2.exports = Range;
    var LRU = require_lrucache();
    var cache = new LRU();
    var parseOptions = require_parse_options();
    var Comparator = require_comparator();
    var debug = require_debug();
    var SemVer = require_semver();
    var {
      safeRe: re,
      t,
      comparatorTrimReplace,
      tildeTrimReplace,
      caretTrimReplace
    } = require_re();
    var { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require_constants6();
    var isNullSet = (c) => c.value === "<0.0.0-0";
    var isAny = (c) => c.value === "";
    var isSatisfiable = (comparators, options) => {
      let result = true;
      const remainingComparators = comparators.slice();
      let testComparator = remainingComparators.pop();
      while (result && remainingComparators.length) {
        result = remainingComparators.every((otherComparator) => {
          return testComparator.intersects(otherComparator, options);
        });
        testComparator = remainingComparators.pop();
      }
      return result;
    };
    var parseComparator = (comp, options) => {
      debug("comp", comp, options);
      comp = replaceCarets(comp, options);
      debug("caret", comp);
      comp = replaceTildes(comp, options);
      debug("tildes", comp);
      comp = replaceXRanges(comp, options);
      debug("xrange", comp);
      comp = replaceStars(comp, options);
      debug("stars", comp);
      return comp;
    };
    var isX = (id) => !id || id.toLowerCase() === "x" || id === "*";
    var replaceTildes = (comp, options) => {
      return comp.trim().split(/\s+/).map((c) => replaceTilde(c, options)).join(" ");
    };
    var replaceTilde = (comp, options) => {
      const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE];
      return comp.replace(r, (_, M, m, p, pr) => {
        debug("tilde", comp, _, M, m, p, pr);
        let ret;
        if (isX(M)) {
          ret = "";
        } else if (isX(m)) {
          ret = `>=${M}.0.0 <${+M + 1}.0.0-0`;
        } else if (isX(p)) {
          ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`;
        } else if (pr) {
          debug("replaceTilde pr", pr);
          ret = `>=${M}.${m}.${p}-${pr} <${M}.${+m + 1}.0-0`;
        } else {
          ret = `>=${M}.${m}.${p} <${M}.${+m + 1}.0-0`;
        }
        debug("tilde return", ret);
        return ret;
      });
    };
    var replaceCarets = (comp, options) => {
      return comp.trim().split(/\s+/).map((c) => replaceCaret(c, options)).join(" ");
    };
    var replaceCaret = (comp, options) => {
      debug("caret", comp, options);
      const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET];
      const z = options.includePrerelease ? "-0" : "";
      return comp.replace(r, (_, M, m, p, pr) => {
        debug("caret", comp, _, M, m, p, pr);
        let ret;
        if (isX(M)) {
          ret = "";
        } else if (isX(m)) {
          ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`;
        } else if (isX(p)) {
          if (M === "0") {
            ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`;
          } else {
            ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`;
          }
        } else if (pr) {
          debug("replaceCaret pr", pr);
          if (M === "0") {
            if (m === "0") {
              ret = `>=${M}.${m}.${p}-${pr} <${M}.${m}.${+p + 1}-0`;
            } else {
              ret = `>=${M}.${m}.${p}-${pr} <${M}.${+m + 1}.0-0`;
            }
          } else {
            ret = `>=${M}.${m}.${p}-${pr} <${+M + 1}.0.0-0`;
          }
        } else {
          debug("no pr");
          if (M === "0") {
            if (m === "0") {
              ret = `>=${M}.${m}.${p}${z} <${M}.${m}.${+p + 1}-0`;
            } else {
              ret = `>=${M}.${m}.${p}${z} <${M}.${+m + 1}.0-0`;
            }
          } else {
            ret = `>=${M}.${m}.${p} <${+M + 1}.0.0-0`;
          }
        }
        debug("caret return", ret);
        return ret;
      });
    };
    var replaceXRanges = (comp, options) => {
      debug("replaceXRanges", comp, options);
      return comp.split(/\s+/).map((c) => replaceXRange(c, options)).join(" ");
    };
    var replaceXRange = (comp, options) => {
      comp = comp.trim();
      const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE];
      return comp.replace(r, (ret, gtlt, M, m, p, pr) => {
        debug("xRange", comp, ret, gtlt, M, m, p, pr);
        const xM = isX(M);
        const xm = xM || isX(m);
        const xp = xm || isX(p);
        const anyX = xp;
        if (gtlt === "=" && anyX) {
          gtlt = "";
        }
        pr = options.includePrerelease ? "-0" : "";
        if (xM) {
          if (gtlt === ">" || gtlt === "<") {
            ret = "<0.0.0-0";
          } else {
            ret = "*";
          }
        } else if (gtlt && anyX) {
          if (xm) {
            m = 0;
          }
          p = 0;
          if (gtlt === ">") {
            gtlt = ">=";
            if (xm) {
              M = +M + 1;
              m = 0;
              p = 0;
            } else {
              m = +m + 1;
              p = 0;
            }
          } else if (gtlt === "<=") {
            gtlt = "<";
            if (xm) {
              M = +M + 1;
            } else {
              m = +m + 1;
            }
          }
          if (gtlt === "<") {
            pr = "-0";
          }
          ret = `${gtlt + M}.${m}.${p}${pr}`;
        } else if (xm) {
          ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`;
        } else if (xp) {
          ret = `>=${M}.${m}.0${pr} <${M}.${+m + 1}.0-0`;
        }
        debug("xRange return", ret);
        return ret;
      });
    };
    var replaceStars = (comp, options) => {
      debug("replaceStars", comp, options);
      return comp.trim().replace(re[t.STAR], "");
    };
    var replaceGTE0 = (comp, options) => {
      debug("replaceGTE0", comp, options);
      return comp.trim().replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], "");
    };
    var hyphenReplace = (incPr) => ($0, from, fM, fm, fp, fpr, fb, to, tM, tm, tp, tpr) => {
      if (isX(fM)) {
        from = "";
      } else if (isX(fm)) {
        from = `>=${fM}.0.0${incPr ? "-0" : ""}`;
      } else if (isX(fp)) {
        from = `>=${fM}.${fm}.0${incPr ? "-0" : ""}`;
      } else if (fpr) {
        from = `>=${from}`;
      } else {
        from = `>=${from}${incPr ? "-0" : ""}`;
      }
      if (isX(tM)) {
        to = "";
      } else if (isX(tm)) {
        to = `<${+tM + 1}.0.0-0`;
      } else if (isX(tp)) {
        to = `<${tM}.${+tm + 1}.0-0`;
      } else if (tpr) {
        to = `<=${tM}.${tm}.${tp}-${tpr}`;
      } else if (incPr) {
        to = `<${tM}.${tm}.${+tp + 1}-0`;
      } else {
        to = `<=${to}`;
      }
      return `${from} ${to}`.trim();
    };
    var testSet = (set, version3, options) => {
      for (let i = 0; i < set.length; i++) {
        if (!set[i].test(version3)) {
          return false;
        }
      }
      if (version3.prerelease.length && !options.includePrerelease) {
        for (let i = 0; i < set.length; i++) {
          debug(set[i].semver);
          if (set[i].semver === Comparator.ANY) {
            continue;
          }
          if (set[i].semver.prerelease.length > 0) {
            const allowed = set[i].semver;
            if (allowed.major === version3.major && allowed.minor === version3.minor && allowed.patch === version3.patch) {
              return true;
            }
          }
        }
        return false;
      }
      return true;
    };
  }
});

// node_modules/semver/classes/comparator.js
var require_comparator = __commonJS({
  "node_modules/semver/classes/comparator.js"(exports2, module2) {
    "use strict";
    var ANY = Symbol("SemVer ANY");
    var Comparator = class _Comparator {
      static get ANY() {
        return ANY;
      }
      constructor(comp, options) {
        options = parseOptions(options);
        if (comp instanceof _Comparator) {
          if (comp.loose === !!options.loose) {
            return comp;
          } else {
            comp = comp.value;
          }
        }
        comp = comp.trim().split(/\s+/).join(" ");
        debug("comparator", comp, options);
        this.options = options;
        this.loose = !!options.loose;
        this.parse(comp);
        if (this.semver === ANY) {
          this.value = "";
        } else {
          this.value = this.operator + this.semver.version;
        }
        debug("comp", this);
      }
      parse(comp) {
        const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR];
        const m = comp.match(r);
        if (!m) {
          throw new TypeError(`Invalid comparator: ${comp}`);
        }
        this.operator = m[1] !== void 0 ? m[1] : "";
        if (this.operator === "=") {
          this.operator = "";
        }
        if (!m[2]) {
          this.semver = ANY;
        } else {
          this.semver = new SemVer(m[2], this.options.loose);
        }
      }
      toString() {
        return this.value;
      }
      test(version3) {
        debug("Comparator.test", version3, this.options.loose);
        if (this.semver === ANY || version3 === ANY) {
          return true;
        }
        if (typeof version3 === "string") {
          try {
            version3 = new SemVer(version3, this.options);
          } catch (er) {
            return false;
          }
        }
        return cmp(version3, this.operator, this.semver, this.options);
      }
      intersects(comp, options) {
        if (!(comp instanceof _Comparator)) {
          throw new TypeError("a Comparator is required");
        }
        if (this.operator === "") {
          if (this.value === "") {
            return true;
          }
          return new Range(comp.value, options).test(this.value);
        } else if (comp.operator === "") {
          if (comp.value === "") {
            return true;
          }
          return new Range(this.value, options).test(comp.semver);
        }
        options = parseOptions(options);
        if (options.includePrerelease && (this.value === "<0.0.0-0" || comp.value === "<0.0.0-0")) {
          return false;
        }
        if (!options.includePrerelease && (this.value.startsWith("<0.0.0") || comp.value.startsWith("<0.0.0"))) {
          return false;
        }
        if (this.operator.startsWith(">") && comp.operator.startsWith(">")) {
          return true;
        }
        if (this.operator.startsWith("<") && comp.operator.startsWith("<")) {
          return true;
        }
        if (this.semver.version === comp.semver.version && this.operator.includes("=") && comp.operator.includes("=")) {
          return true;
        }
        if (cmp(this.semver, "<", comp.semver, options) && this.operator.startsWith(">") && comp.operator.startsWith("<")) {
          return true;
        }
        if (cmp(this.semver, ">", comp.semver, options) && this.operator.startsWith("<") && comp.operator.startsWith(">")) {
          return true;
        }
        return false;
      }
    };
    module2.exports = Comparator;
    var parseOptions = require_parse_options();
    var { safeRe: re, t } = require_re();
    var cmp = require_cmp();
    var debug = require_debug();
    var SemVer = require_semver();
    var Range = require_range();
  }
});

// node_modules/semver/functions/satisfies.js
var require_satisfies = __commonJS({
  "node_modules/semver/functions/satisfies.js"(exports2, module2) {
    "use strict";
    var Range = require_range();
    var satisfies = (version3, range, options) => {
      try {
        range = new Range(range, options);
      } catch (er) {
        return false;
      }
      return range.test(version3);
    };
    module2.exports = satisfies;
  }
});

// node_modules/semver/ranges/to-comparators.js
var require_to_comparators = __commonJS({
  "node_modules/semver/ranges/to-comparators.js"(exports2, module2) {
    "use strict";
    var Range = require_range();
    var toComparators = (range, options) => new Range(range, options).set.map((comp) => comp.map((c) => c.value).join(" ").trim().split(" "));
    module2.exports = toComparators;
  }
});

// node_modules/semver/ranges/max-satisfying.js
var require_max_satisfying = __commonJS({
  "node_modules/semver/ranges/max-satisfying.js"(exports2, module2) {
    "use strict";
    var SemVer = require_semver();
    var Range = require_range();
    var maxSatisfying = (versions, range, options) => {
      let max = null;
      let maxSV = null;
      let rangeObj = null;
      try {
        rangeObj = new Range(range, options);
      } catch (er) {
        return null;
      }
      versions.forEach((v) => {
        if (rangeObj.test(v)) {
          if (!max || maxSV.compare(v) === -1) {
            max = v;
            maxSV = new SemVer(max, options);
          }
        }
      });
      return max;
    };
    module2.exports = maxSatisfying;
  }
});

// node_modules/semver/ranges/min-satisfying.js
var require_min_satisfying = __commonJS({
  "node_modules/semver/ranges/min-satisfying.js"(exports2, module2) {
    "use strict";
    var SemVer = require_semver();
    var Range = require_range();
    var minSatisfying = (versions, range, options) => {
      let min = null;
      let minSV = null;
      let rangeObj = null;
      try {
        rangeObj = new Range(range, options);
      } catch (er) {
        return null;
      }
      versions.forEach((v) => {
        if (rangeObj.test(v)) {
          if (!min || minSV.compare(v) === 1) {
            min = v;
            minSV = new SemVer(min, options);
          }
        }
      });
      return min;
    };
    module2.exports = minSatisfying;
  }
});

// node_modules/semver/ranges/min-version.js
var require_min_version = __commonJS({
  "node_modules/semver/ranges/min-version.js"(exports2, module2) {
    "use strict";
    var SemVer = require_semver();
    var Range = require_range();
    var gt = require_gt();
    var minVersion = (range, loose) => {
      range = new Range(range, loose);
      let minver = new SemVer("0.0.0");
      if (range.test(minver)) {
        return minver;
      }
      minver = new SemVer("0.0.0-0");
      if (range.test(minver)) {
        return minver;
      }
      minver = null;
      for (let i = 0; i < range.set.length; ++i) {
        const comparators = range.set[i];
        let setMin = null;
        comparators.forEach((comparator) => {
          const compver = new SemVer(comparator.semver.version);
          switch (comparator.operator) {
            case ">":
              if (compver.prerelease.length === 0) {
                compver.patch++;
              } else {
                compver.prerelease.push(0);
              }
              compver.raw = compver.format();
            /* fallthrough */
            case "":
            case ">=":
              if (!setMin || gt(compver, setMin)) {
                setMin = compver;
              }
              break;
            case "<":
            case "<=":
              break;
            /* istanbul ignore next */
            default:
              throw new Error(`Unexpected operation: ${comparator.operator}`);
          }
        });
        if (setMin && (!minver || gt(minver, setMin))) {
          minver = setMin;
        }
      }
      if (minver && range.test(minver)) {
        return minver;
      }
      return null;
    };
    module2.exports = minVersion;
  }
});

// node_modules/semver/ranges/valid.js
var require_valid2 = __commonJS({
  "node_modules/semver/ranges/valid.js"(exports2, module2) {
    "use strict";
    var Range = require_range();
    var validRange = (range, options) => {
      try {
        return new Range(range, options).range || "*";
      } catch (er) {
        return null;
      }
    };
    module2.exports = validRange;
  }
});

// node_modules/semver/ranges/outside.js
var require_outside = __commonJS({
  "node_modules/semver/ranges/outside.js"(exports2, module2) {
    "use strict";
    var SemVer = require_semver();
    var Comparator = require_comparator();
    var { ANY } = Comparator;
    var Range = require_range();
    var satisfies = require_satisfies();
    var gt = require_gt();
    var lt = require_lt();
    var lte = require_lte();
    var gte = require_gte();
    var outside = (version3, range, hilo, options) => {
      version3 = new SemVer(version3, options);
      range = new Range(range, options);
      let gtfn, ltefn, ltfn, comp, ecomp;
      switch (hilo) {
        case ">":
          gtfn = gt;
          ltefn = lte;
          ltfn = lt;
          comp = ">";
          ecomp = ">=";
          break;
        case "<":
          gtfn = lt;
          ltefn = gte;
          ltfn = gt;
          comp = "<";
          ecomp = "<=";
          break;
        default:
          throw new TypeError('Must provide a hilo val of "<" or ">"');
      }
      if (satisfies(version3, range, options)) {
        return false;
      }
      for (let i = 0; i < range.set.length; ++i) {
        const comparators = range.set[i];
        let high = null;
        let low = null;
        comparators.forEach((comparator) => {
          if (comparator.semver === ANY) {
            comparator = new Comparator(">=0.0.0");
          }
          high = high || comparator;
          low = low || comparator;
          if (gtfn(comparator.semver, high.semver, options)) {
            high = comparator;
          } else if (ltfn(comparator.semver, low.semver, options)) {
            low = comparator;
          }
        });
        if (high.operator === comp || high.operator === ecomp) {
          return false;
        }
        if ((!low.operator || low.operator === comp) && ltefn(version3, low.semver)) {
          return false;
        } else if (low.operator === ecomp && ltfn(version3, low.semver)) {
          return false;
        }
      }
      return true;
    };
    module2.exports = outside;
  }
});

// node_modules/semver/ranges/gtr.js
var require_gtr = __commonJS({
  "node_modules/semver/ranges/gtr.js"(exports2, module2) {
    "use strict";
    var outside = require_outside();
    var gtr = (version3, range, options) => outside(version3, range, ">", options);
    module2.exports = gtr;
  }
});

// node_modules/semver/ranges/ltr.js
var require_ltr = __commonJS({
  "node_modules/semver/ranges/ltr.js"(exports2, module2) {
    "use strict";
    var outside = require_outside();
    var ltr = (version3, range, options) => outside(version3, range, "<", options);
    module2.exports = ltr;
  }
});

// node_modules/semver/ranges/intersects.js
var require_intersects = __commonJS({
  "node_modules/semver/ranges/intersects.js"(exports2, module2) {
    "use strict";
    var Range = require_range();
    var intersects = (r1, r2, options) => {
      r1 = new Range(r1, options);
      r2 = new Range(r2, options);
      return r1.intersects(r2, options);
    };
    module2.exports = intersects;
  }
});

// node_modules/semver/ranges/simplify.js
var require_simplify = __commonJS({
  "node_modules/semver/ranges/simplify.js"(exports2, module2) {
    "use strict";
    var satisfies = require_satisfies();
    var compare = require_compare();
    module2.exports = (versions, range, options) => {
      const set = [];
      let first = null;
      let prev = null;
      const v = versions.sort((a, b) => compare(a, b, options));
      for (const version3 of v) {
        const included = satisfies(version3, range, options);
        if (included) {
          prev = version3;
          if (!first) {
            first = version3;
          }
        } else {
          if (prev) {
            set.push([first, prev]);
          }
          prev = null;
          first = null;
        }
      }
      if (first) {
        set.push([first, null]);
      }
      const ranges = [];
      for (const [min, max] of set) {
        if (min === max) {
          ranges.push(min);
        } else if (!max && min === v[0]) {
          ranges.push("*");
        } else if (!max) {
          ranges.push(`>=${min}`);
        } else if (min === v[0]) {
          ranges.push(`<=${max}`);
        } else {
          ranges.push(`${min} - ${max}`);
        }
      }
      const simplified = ranges.join(" || ");
      const original = typeof range.raw === "string" ? range.raw : String(range);
      return simplified.length < original.length ? simplified : range;
    };
  }
});

// node_modules/semver/ranges/subset.js
var require_subset = __commonJS({
  "node_modules/semver/ranges/subset.js"(exports2, module2) {
    "use strict";
    var Range = require_range();
    var Comparator = require_comparator();
    var { ANY } = Comparator;
    var satisfies = require_satisfies();
    var compare = require_compare();
    var subset = (sub, dom, options = {}) => {
      if (sub === dom) {
        return true;
      }
      sub = new Range(sub, options);
      dom = new Range(dom, options);
      let sawNonNull = false;
      OUTER: for (const simpleSub of sub.set) {
        for (const simpleDom of dom.set) {
          const isSub = simpleSubset(simpleSub, simpleDom, options);
          sawNonNull = sawNonNull || isSub !== null;
          if (isSub) {
            continue OUTER;
          }
        }
        if (sawNonNull) {
          return false;
        }
      }
      return true;
    };
    var minimumVersionWithPreRelease = [new Comparator(">=0.0.0-0")];
    var minimumVersion = [new Comparator(">=0.0.0")];
    var simpleSubset = (sub, dom, options) => {
      if (sub === dom) {
        return true;
      }
      if (sub.length === 1 && sub[0].semver === ANY) {
        if (dom.length === 1 && dom[0].semver === ANY) {
          return true;
        } else if (options.includePrerelease) {
          sub = minimumVersionWithPreRelease;
        } else {
          sub = minimumVersion;
        }
      }
      if (dom.length === 1 && dom[0].semver === ANY) {
        if (options.includePrerelease) {
          return true;
        } else {
          dom = minimumVersion;
        }
      }
      const eqSet = /* @__PURE__ */ new Set();
      let gt, lt;
      for (const c of sub) {
        if (c.operator === ">" || c.operator === ">=") {
          gt = higherGT(gt, c, options);
        } else if (c.operator === "<" || c.operator === "<=") {
          lt = lowerLT(lt, c, options);
        } else {
          eqSet.add(c.semver);
        }
      }
      if (eqSet.size > 1) {
        return null;
      }
      let gtltComp;
      if (gt && lt) {
        gtltComp = compare(gt.semver, lt.semver, options);
        if (gtltComp > 0) {
          return null;
        } else if (gtltComp === 0 && (gt.operator !== ">=" || lt.operator !== "<=")) {
          return null;
        }
      }
      for (const eq of eqSet) {
        if (gt && !satisfies(eq, String(gt), options)) {
          return null;
        }
        if (lt && !satisfies(eq, String(lt), options)) {
          return null;
        }
        for (const c of dom) {
          if (!satisfies(eq, String(c), options)) {
            return false;
          }
        }
        return true;
      }
      let higher, lower;
      let hasDomLT, hasDomGT;
      let needDomLTPre = lt && !options.includePrerelease && lt.semver.prerelease.length ? lt.semver : false;
      let needDomGTPre = gt && !options.includePrerelease && gt.semver.prerelease.length ? gt.semver : false;
      if (needDomLTPre && needDomLTPre.prerelease.length === 1 && lt.operator === "<" && needDomLTPre.prerelease[0] === 0) {
        needDomLTPre = false;
      }
      for (const c of dom) {
        hasDomGT = hasDomGT || c.operator === ">" || c.operator === ">=";
        hasDomLT = hasDomLT || c.operator === "<" || c.operator === "<=";
        if (gt) {
          if (needDomGTPre) {
            if (c.semver.prerelease && c.semver.prerelease.length && c.semver.major === needDomGTPre.major && c.semver.minor === needDomGTPre.minor && c.semver.patch === needDomGTPre.patch) {
              needDomGTPre = false;
            }
          }
          if (c.operator === ">" || c.operator === ">=") {
            higher = higherGT(gt, c, options);
            if (higher === c && higher !== gt) {
              return false;
            }
          } else if (gt.operator === ">=" && !satisfies(gt.semver, String(c), options)) {
            return false;
          }
        }
        if (lt) {
          if (needDomLTPre) {
            if (c.semver.prerelease && c.semver.prerelease.length && c.semver.major === needDomLTPre.major && c.semver.minor === needDomLTPre.minor && c.semver.patch === needDomLTPre.patch) {
              needDomLTPre = false;
            }
          }
          if (c.operator === "<" || c.operator === "<=") {
            lower = lowerLT(lt, c, options);
            if (lower === c && lower !== lt) {
              return false;
            }
          } else if (lt.operator === "<=" && !satisfies(lt.semver, String(c), options)) {
            return false;
          }
        }
        if (!c.operator && (lt || gt) && gtltComp !== 0) {
          return false;
        }
      }
      if (gt && hasDomLT && !lt && gtltComp !== 0) {
        return false;
      }
      if (lt && hasDomGT && !gt && gtltComp !== 0) {
        return false;
      }
      if (needDomGTPre || needDomLTPre) {
        return false;
      }
      return true;
    };
    var higherGT = (a, b, options) => {
      if (!a) {
        return b;
      }
      const comp = compare(a.semver, b.semver, options);
      return comp > 0 ? a : comp < 0 ? b : b.operator === ">" && a.operator === ">=" ? b : a;
    };
    var lowerLT = (a, b, options) => {
      if (!a) {
        return b;
      }
      const comp = compare(a.semver, b.semver, options);
      return comp < 0 ? a : comp > 0 ? b : b.operator === "<" && a.operator === "<=" ? b : a;
    };
    module2.exports = subset;
  }
});

// node_modules/semver/index.js
var require_semver2 = __commonJS({
  "node_modules/semver/index.js"(exports2, module2) {
    "use strict";
    var internalRe = require_re();
    var constants = require_constants6();
    var SemVer = require_semver();
    var identifiers = require_identifiers();
    var parse2 = require_parse2();
    var valid = require_valid();
    var clean = require_clean();
    var inc = require_inc();
    var diff = require_diff();
    var major = require_major();
    var minor = require_minor();
    var patch = require_patch();
    var prerelease = require_prerelease();
    var compare = require_compare();
    var rcompare = require_rcompare();
    var compareLoose = require_compare_loose();
    var compareBuild = require_compare_build();
    var sort = require_sort();
    var rsort = require_rsort();
    var gt = require_gt();
    var lt = require_lt();
    var eq = require_eq();
    var neq = require_neq();
    var gte = require_gte();
    var lte = require_lte();
    var cmp = require_cmp();
    var coerce = require_coerce();
    var Comparator = require_comparator();
    var Range = require_range();
    var satisfies = require_satisfies();
    var toComparators = require_to_comparators();
    var maxSatisfying = require_max_satisfying();
    var minSatisfying = require_min_satisfying();
    var minVersion = require_min_version();
    var validRange = require_valid2();
    var outside = require_outside();
    var gtr = require_gtr();
    var ltr = require_ltr();
    var intersects = require_intersects();
    var simplifyRange = require_simplify();
    var subset = require_subset();
    module2.exports = {
      parse: parse2,
      valid,
      clean,
      inc,
      diff,
      major,
      minor,
      patch,
      prerelease,
      compare,
      rcompare,
      compareLoose,
      compareBuild,
      sort,
      rsort,
      gt,
      lt,
      eq,
      neq,
      gte,
      lte,
      cmp,
      coerce,
      Comparator,
      Range,
      satisfies,
      toComparators,
      maxSatisfying,
      minSatisfying,
      minVersion,
      validRange,
      outside,
      gtr,
      ltr,
      intersects,
      simplifyRange,
      subset,
      SemVer,
      re: internalRe.re,
      src: internalRe.src,
      tokens: internalRe.t,
      SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,
      RELEASE_TYPES: constants.RELEASE_TYPES,
      compareIdentifiers: identifiers.compareIdentifiers,
      rcompareIdentifiers: identifiers.rcompareIdentifiers
    };
  }
});

// node_modules/jsonwebtoken/lib/asymmetricKeyDetailsSupported.js
var require_asymmetricKeyDetailsSupported = __commonJS({
  "node_modules/jsonwebtoken/lib/asymmetricKeyDetailsSupported.js"(exports2, module2) {
    var semver = require_semver2();
    module2.exports = semver.satisfies(process.version, ">=15.7.0");
  }
});

// node_modules/jsonwebtoken/lib/rsaPssKeyDetailsSupported.js
var require_rsaPssKeyDetailsSupported = __commonJS({
  "node_modules/jsonwebtoken/lib/rsaPssKeyDetailsSupported.js"(exports2, module2) {
    var semver = require_semver2();
    module2.exports = semver.satisfies(process.version, ">=16.9.0");
  }
});

// node_modules/jsonwebtoken/lib/validateAsymmetricKey.js
var require_validateAsymmetricKey = __commonJS({
  "node_modules/jsonwebtoken/lib/validateAsymmetricKey.js"(exports2, module2) {
    var ASYMMETRIC_KEY_DETAILS_SUPPORTED = require_asymmetricKeyDetailsSupported();
    var RSA_PSS_KEY_DETAILS_SUPPORTED = require_rsaPssKeyDetailsSupported();
    var allowedAlgorithmsForKeys = {
      "ec": ["ES256", "ES384", "ES512"],
      "rsa": ["RS256", "PS256", "RS384", "PS384", "RS512", "PS512"],
      "rsa-pss": ["PS256", "PS384", "PS512"]
    };
    var allowedCurves = {
      ES256: "prime256v1",
      ES384: "secp384r1",
      ES512: "secp521r1"
    };
    module2.exports = function(algorithm, key) {
      if (!algorithm || !key) return;
      const keyType = key.asymmetricKeyType;
      if (!keyType) return;
      const allowedAlgorithms = allowedAlgorithmsForKeys[keyType];
      if (!allowedAlgorithms) {
        throw new Error(`Unknown key type "${keyType}".`);
      }
      if (!allowedAlgorithms.includes(algorithm)) {
        throw new Error(`"alg" parameter for "${keyType}" key type must be one of: ${allowedAlgorithms.join(", ")}.`);
      }
      if (ASYMMETRIC_KEY_DETAILS_SUPPORTED) {
        switch (keyType) {
          case "ec":
            const keyCurve = key.asymmetricKeyDetails.namedCurve;
            const allowedCurve = allowedCurves[algorithm];
            if (keyCurve !== allowedCurve) {
              throw new Error(`"alg" parameter "${algorithm}" requires curve "${allowedCurve}".`);
            }
            break;
          case "rsa-pss":
            if (RSA_PSS_KEY_DETAILS_SUPPORTED) {
              const length = parseInt(algorithm.slice(-3), 10);
              const { hashAlgorithm, mgf1HashAlgorithm, saltLength } = key.asymmetricKeyDetails;
              if (hashAlgorithm !== `sha${length}` || mgf1HashAlgorithm !== hashAlgorithm) {
                throw new Error(`Invalid key for this operation, its RSA-PSS parameters do not meet the requirements of "alg" ${algorithm}.`);
              }
              if (saltLength !== void 0 && saltLength > length >> 3) {
                throw new Error(`Invalid key for this operation, its RSA-PSS parameter saltLength does not meet the requirements of "alg" ${algorithm}.`);
              }
            }
            break;
        }
      }
    };
  }
});

// node_modules/jsonwebtoken/lib/psSupported.js
var require_psSupported = __commonJS({
  "node_modules/jsonwebtoken/lib/psSupported.js"(exports2, module2) {
    var semver = require_semver2();
    module2.exports = semver.satisfies(process.version, "^6.12.0 || >=8.0.0");
  }
});

// node_modules/jsonwebtoken/verify.js
var require_verify = __commonJS({
  "node_modules/jsonwebtoken/verify.js"(exports2, module2) {
    var JsonWebTokenError = require_JsonWebTokenError();
    var NotBeforeError = require_NotBeforeError();
    var TokenExpiredError = require_TokenExpiredError();
    var decode = require_decode();
    var timespan = require_timespan();
    var validateAsymmetricKey = require_validateAsymmetricKey();
    var PS_SUPPORTED = require_psSupported();
    var jws = require_jws();
    var { KeyObject, createSecretKey, createPublicKey } = require("crypto");
    var PUB_KEY_ALGS = ["RS256", "RS384", "RS512"];
    var EC_KEY_ALGS = ["ES256", "ES384", "ES512"];
    var RSA_KEY_ALGS = ["RS256", "RS384", "RS512"];
    var HS_ALGS = ["HS256", "HS384", "HS512"];
    if (PS_SUPPORTED) {
      PUB_KEY_ALGS.splice(PUB_KEY_ALGS.length, 0, "PS256", "PS384", "PS512");
      RSA_KEY_ALGS.splice(RSA_KEY_ALGS.length, 0, "PS256", "PS384", "PS512");
    }
    module2.exports = function(jwtString, secretOrPublicKey, options, callback) {
      if (typeof options === "function" && !callback) {
        callback = options;
        options = {};
      }
      if (!options) {
        options = {};
      }
      options = Object.assign({}, options);
      let done;
      if (callback) {
        done = callback;
      } else {
        done = function(err, data) {
          if (err) throw err;
          return data;
        };
      }
      if (options.clockTimestamp && typeof options.clockTimestamp !== "number") {
        return done(new JsonWebTokenError("clockTimestamp must be a number"));
      }
      if (options.nonce !== void 0 && (typeof options.nonce !== "string" || options.nonce.trim() === "")) {
        return done(new JsonWebTokenError("nonce must be a non-empty string"));
      }
      if (options.allowInvalidAsymmetricKeyTypes !== void 0 && typeof options.allowInvalidAsymmetricKeyTypes !== "boolean") {
        return done(new JsonWebTokenError("allowInvalidAsymmetricKeyTypes must be a boolean"));
      }
      const clockTimestamp = options.clockTimestamp || Math.floor(Date.now() / 1e3);
      if (!jwtString) {
        return done(new JsonWebTokenError("jwt must be provided"));
      }
      if (typeof jwtString !== "string") {
        return done(new JsonWebTokenError("jwt must be a string"));
      }
      const parts = jwtString.split(".");
      if (parts.length !== 3) {
        return done(new JsonWebTokenError("jwt malformed"));
      }
      let decodedToken;
      try {
        decodedToken = decode(jwtString, { complete: true });
      } catch (err) {
        return done(err);
      }
      if (!decodedToken) {
        return done(new JsonWebTokenError("invalid token"));
      }
      const header = decodedToken.header;
      let getSecret;
      if (typeof secretOrPublicKey === "function") {
        if (!callback) {
          return done(new JsonWebTokenError("verify must be called asynchronous if secret or public key is provided as a callback"));
        }
        getSecret = secretOrPublicKey;
      } else {
        getSecret = function(header2, secretCallback) {
          return secretCallback(null, secretOrPublicKey);
        };
      }
      return getSecret(header, function(err, secretOrPublicKey2) {
        if (err) {
          return done(new JsonWebTokenError("error in secret or public key callback: " + err.message));
        }
        const hasSignature = parts[2].trim() !== "";
        if (!hasSignature && secretOrPublicKey2) {
          return done(new JsonWebTokenError("jwt signature is required"));
        }
        if (hasSignature && !secretOrPublicKey2) {
          return done(new JsonWebTokenError("secret or public key must be provided"));
        }
        if (!hasSignature && !options.algorithms) {
          return done(new JsonWebTokenError('please specify "none" in "algorithms" to verify unsigned tokens'));
        }
        if (secretOrPublicKey2 != null && !(secretOrPublicKey2 instanceof KeyObject)) {
          try {
            secretOrPublicKey2 = createPublicKey(secretOrPublicKey2);
          } catch (_) {
            try {
              secretOrPublicKey2 = createSecretKey(typeof secretOrPublicKey2 === "string" ? Buffer.from(secretOrPublicKey2) : secretOrPublicKey2);
            } catch (_2) {
              return done(new JsonWebTokenError("secretOrPublicKey is not valid key material"));
            }
          }
        }
        if (!options.algorithms) {
          if (secretOrPublicKey2.type === "secret") {
            options.algorithms = HS_ALGS;
          } else if (["rsa", "rsa-pss"].includes(secretOrPublicKey2.asymmetricKeyType)) {
            options.algorithms = RSA_KEY_ALGS;
          } else if (secretOrPublicKey2.asymmetricKeyType === "ec") {
            options.algorithms = EC_KEY_ALGS;
          } else {
            options.algorithms = PUB_KEY_ALGS;
          }
        }
        if (options.algorithms.indexOf(decodedToken.header.alg) === -1) {
          return done(new JsonWebTokenError("invalid algorithm"));
        }
        if (header.alg.startsWith("HS") && secretOrPublicKey2.type !== "secret") {
          return done(new JsonWebTokenError(`secretOrPublicKey must be a symmetric key when using ${header.alg}`));
        } else if (/^(?:RS|PS|ES)/.test(header.alg) && secretOrPublicKey2.type !== "public") {
          return done(new JsonWebTokenError(`secretOrPublicKey must be an asymmetric key when using ${header.alg}`));
        }
        if (!options.allowInvalidAsymmetricKeyTypes) {
          try {
            validateAsymmetricKey(header.alg, secretOrPublicKey2);
          } catch (e) {
            return done(e);
          }
        }
        let valid;
        try {
          valid = jws.verify(jwtString, decodedToken.header.alg, secretOrPublicKey2);
        } catch (e) {
          return done(e);
        }
        if (!valid) {
          return done(new JsonWebTokenError("invalid signature"));
        }
        const payload = decodedToken.payload;
        if (typeof payload.nbf !== "undefined" && !options.ignoreNotBefore) {
          if (typeof payload.nbf !== "number") {
            return done(new JsonWebTokenError("invalid nbf value"));
          }
          if (payload.nbf > clockTimestamp + (options.clockTolerance || 0)) {
            return done(new NotBeforeError("jwt not active", new Date(payload.nbf * 1e3)));
          }
        }
        if (typeof payload.exp !== "undefined" && !options.ignoreExpiration) {
          if (typeof payload.exp !== "number") {
            return done(new JsonWebTokenError("invalid exp value"));
          }
          if (clockTimestamp >= payload.exp + (options.clockTolerance || 0)) {
            return done(new TokenExpiredError("jwt expired", new Date(payload.exp * 1e3)));
          }
        }
        if (options.audience) {
          const audiences = Array.isArray(options.audience) ? options.audience : [options.audience];
          const target = Array.isArray(payload.aud) ? payload.aud : [payload.aud];
          const match = target.some(function(targetAudience) {
            return audiences.some(function(audience) {
              return audience instanceof RegExp ? audience.test(targetAudience) : audience === targetAudience;
            });
          });
          if (!match) {
            return done(new JsonWebTokenError("jwt audience invalid. expected: " + audiences.join(" or ")));
          }
        }
        if (options.issuer) {
          const invalid_issuer = typeof options.issuer === "string" && payload.iss !== options.issuer || Array.isArray(options.issuer) && options.issuer.indexOf(payload.iss) === -1;
          if (invalid_issuer) {
            return done(new JsonWebTokenError("jwt issuer invalid. expected: " + options.issuer));
          }
        }
        if (options.subject) {
          if (payload.sub !== options.subject) {
            return done(new JsonWebTokenError("jwt subject invalid. expected: " + options.subject));
          }
        }
        if (options.jwtid) {
          if (payload.jti !== options.jwtid) {
            return done(new JsonWebTokenError("jwt jwtid invalid. expected: " + options.jwtid));
          }
        }
        if (options.nonce) {
          if (payload.nonce !== options.nonce) {
            return done(new JsonWebTokenError("jwt nonce invalid. expected: " + options.nonce));
          }
        }
        if (options.maxAge) {
          if (typeof payload.iat !== "number") {
            return done(new JsonWebTokenError("iat required when maxAge is specified"));
          }
          const maxAgeTimestamp = timespan(options.maxAge, payload.iat);
          if (typeof maxAgeTimestamp === "undefined") {
            return done(new JsonWebTokenError('"maxAge" should be a number of seconds or string representing a timespan eg: "1d", "20h", 60'));
          }
          if (clockTimestamp >= maxAgeTimestamp + (options.clockTolerance || 0)) {
            return done(new TokenExpiredError("maxAge exceeded", new Date(maxAgeTimestamp * 1e3)));
          }
        }
        if (options.complete === true) {
          const signature = decodedToken.signature;
          return done(null, {
            header,
            payload,
            signature
          });
        }
        return done(null, payload);
      });
    };
  }
});

// node_modules/lodash.includes/index.js
var require_lodash = __commonJS({
  "node_modules/lodash.includes/index.js"(exports2, module2) {
    var INFINITY = 1 / 0;
    var MAX_SAFE_INTEGER = 9007199254740991;
    var MAX_INTEGER = 17976931348623157e292;
    var NAN = 0 / 0;
    var argsTag = "[object Arguments]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var reTrim = /^\s+|\s+$/g;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    var freeParseInt = parseInt;
    function arrayMap(array, iteratee) {
      var index = -1, length = array ? array.length : 0, result = Array(length);
      while (++index < length) {
        result[index] = iteratee(array[index], index, array);
      }
      return result;
    }
    function baseFindIndex(array, predicate, fromIndex, fromRight) {
      var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
      while (fromRight ? index-- : ++index < length) {
        if (predicate(array[index], index, array)) {
          return index;
        }
      }
      return -1;
    }
    function baseIndexOf(array, value, fromIndex) {
      if (value !== value) {
        return baseFindIndex(array, baseIsNaN, fromIndex);
      }
      var index = fromIndex - 1, length = array.length;
      while (++index < length) {
        if (array[index] === value) {
          return index;
        }
      }
      return -1;
    }
    function baseIsNaN(value) {
      return value !== value;
    }
    function baseTimes(n, iteratee) {
      var index = -1, result = Array(n);
      while (++index < n) {
        result[index] = iteratee(index);
      }
      return result;
    }
    function baseValues(object, props) {
      return arrayMap(props, function(key) {
        return object[key];
      });
    }
    function overArg(func, transform) {
      return function(arg) {
        return func(transform(arg));
      };
    }
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var objectToString = objectProto.toString;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var nativeKeys = overArg(Object.keys, Object);
    var nativeMax = Math.max;
    function arrayLikeKeys(value, inherited) {
      var result = isArray(value) || isArguments(value) ? baseTimes(value.length, String) : [];
      var length = result.length, skipIndexes = !!length;
      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == "length" || isIndex(key, length)))) {
          result.push(key);
        }
      }
      return result;
    }
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != "constructor") {
          result.push(key);
        }
      }
      return result;
    }
    function isIndex(value, length) {
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length && (typeof value == "number" || reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
    }
    function isPrototype(value) {
      var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
      return value === proto;
    }
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;
      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
    }
    function isArguments(value) {
      return isArrayLikeObject(value) && hasOwnProperty.call(value, "callee") && (!propertyIsEnumerable.call(value, "callee") || objectToString.call(value) == argsTag);
    }
    var isArray = Array.isArray;
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }
    function isFunction(value) {
      var tag = isObject(value) ? objectToString.call(value) : "";
      return tag == funcTag || tag == genTag;
    }
    function isLength(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    function isObject(value) {
      var type = typeof value;
      return !!value && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isString(value) {
      return typeof value == "string" || !isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag;
    }
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
    }
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = value < 0 ? -1 : 1;
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }
    function toInteger(value) {
      var result = toFinite(value), remainder = result % 1;
      return result === result ? remainder ? result - remainder : result : 0;
    }
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, "");
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }
    function values(object) {
      return object ? baseValues(object, keys(object)) : [];
    }
    module2.exports = includes;
  }
});

// node_modules/lodash.isboolean/index.js
var require_lodash2 = __commonJS({
  "node_modules/lodash.isboolean/index.js"(exports2, module2) {
    var boolTag = "[object Boolean]";
    var objectProto = Object.prototype;
    var objectToString = objectProto.toString;
    function isBoolean(value) {
      return value === true || value === false || isObjectLike(value) && objectToString.call(value) == boolTag;
    }
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    module2.exports = isBoolean;
  }
});

// node_modules/lodash.isinteger/index.js
var require_lodash3 = __commonJS({
  "node_modules/lodash.isinteger/index.js"(exports2, module2) {
    var INFINITY = 1 / 0;
    var MAX_INTEGER = 17976931348623157e292;
    var NAN = 0 / 0;
    var symbolTag = "[object Symbol]";
    var reTrim = /^\s+|\s+$/g;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var freeParseInt = parseInt;
    var objectProto = Object.prototype;
    var objectToString = objectProto.toString;
    function isInteger(value) {
      return typeof value == "number" && value == toInteger(value);
    }
    function isObject(value) {
      var type = typeof value;
      return !!value && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
    }
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = value < 0 ? -1 : 1;
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }
    function toInteger(value) {
      var result = toFinite(value), remainder = result % 1;
      return result === result ? remainder ? result - remainder : result : 0;
    }
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, "");
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    module2.exports = isInteger;
  }
});

// node_modules/lodash.isnumber/index.js
var require_lodash4 = __commonJS({
  "node_modules/lodash.isnumber/index.js"(exports2, module2) {
    var numberTag = "[object Number]";
    var objectProto = Object.prototype;
    var objectToString = objectProto.toString;
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isNumber(value) {
      return typeof value == "number" || isObjectLike(value) && objectToString.call(value) == numberTag;
    }
    module2.exports = isNumber;
  }
});

// node_modules/lodash.isplainobject/index.js
var require_lodash5 = __commonJS({
  "node_modules/lodash.isplainobject/index.js"(exports2, module2) {
    var objectTag = "[object Object]";
    function isHostObject(value) {
      var result = false;
      if (value != null && typeof value.toString != "function") {
        try {
          result = !!(value + "");
        } catch (e) {
        }
      }
      return result;
    }
    function overArg(func, transform) {
      return function(arg) {
        return func(transform(arg));
      };
    }
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var objectCtorString = funcToString.call(Object);
    var objectToString = objectProto.toString;
    var getPrototype = overArg(Object.getPrototypeOf, Object);
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isPlainObject3(value) {
      if (!isObjectLike(value) || objectToString.call(value) != objectTag || isHostObject(value)) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, "constructor") && proto.constructor;
      return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
    }
    module2.exports = isPlainObject3;
  }
});

// node_modules/lodash.isstring/index.js
var require_lodash6 = __commonJS({
  "node_modules/lodash.isstring/index.js"(exports2, module2) {
    var stringTag = "[object String]";
    var objectProto = Object.prototype;
    var objectToString = objectProto.toString;
    var isArray = Array.isArray;
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isString(value) {
      return typeof value == "string" || !isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag;
    }
    module2.exports = isString;
  }
});

// node_modules/lodash.once/index.js
var require_lodash7 = __commonJS({
  "node_modules/lodash.once/index.js"(exports2, module2) {
    var FUNC_ERROR_TEXT = "Expected a function";
    var INFINITY = 1 / 0;
    var MAX_INTEGER = 17976931348623157e292;
    var NAN = 0 / 0;
    var symbolTag = "[object Symbol]";
    var reTrim = /^\s+|\s+$/g;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var freeParseInt = parseInt;
    var objectProto = Object.prototype;
    var objectToString = objectProto.toString;
    function before(n, func) {
      var result;
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = void 0;
        }
        return result;
      };
    }
    function once(func) {
      return before(2, func);
    }
    function isObject(value) {
      var type = typeof value;
      return !!value && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
    }
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = value < 0 ? -1 : 1;
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }
    function toInteger(value) {
      var result = toFinite(value), remainder = result % 1;
      return result === result ? remainder ? result - remainder : result : 0;
    }
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, "");
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    module2.exports = once;
  }
});

// node_modules/jsonwebtoken/sign.js
var require_sign = __commonJS({
  "node_modules/jsonwebtoken/sign.js"(exports2, module2) {
    var timespan = require_timespan();
    var PS_SUPPORTED = require_psSupported();
    var validateAsymmetricKey = require_validateAsymmetricKey();
    var jws = require_jws();
    var includes = require_lodash();
    var isBoolean = require_lodash2();
    var isInteger = require_lodash3();
    var isNumber = require_lodash4();
    var isPlainObject3 = require_lodash5();
    var isString = require_lodash6();
    var once = require_lodash7();
    var { KeyObject, createSecretKey, createPrivateKey } = require("crypto");
    var SUPPORTED_ALGS = ["RS256", "RS384", "RS512", "ES256", "ES384", "ES512", "HS256", "HS384", "HS512", "none"];
    if (PS_SUPPORTED) {
      SUPPORTED_ALGS.splice(3, 0, "PS256", "PS384", "PS512");
    }
    var sign_options_schema = {
      expiresIn: { isValid: function(value) {
        return isInteger(value) || isString(value) && value;
      }, message: '"expiresIn" should be a number of seconds or string representing a timespan' },
      notBefore: { isValid: function(value) {
        return isInteger(value) || isString(value) && value;
      }, message: '"notBefore" should be a number of seconds or string representing a timespan' },
      audience: { isValid: function(value) {
        return isString(value) || Array.isArray(value);
      }, message: '"audience" must be a string or array' },
      algorithm: { isValid: includes.bind(null, SUPPORTED_ALGS), message: '"algorithm" must be a valid string enum value' },
      header: { isValid: isPlainObject3, message: '"header" must be an object' },
      encoding: { isValid: isString, message: '"encoding" must be a string' },
      issuer: { isValid: isString, message: '"issuer" must be a string' },
      subject: { isValid: isString, message: '"subject" must be a string' },
      jwtid: { isValid: isString, message: '"jwtid" must be a string' },
      noTimestamp: { isValid: isBoolean, message: '"noTimestamp" must be a boolean' },
      keyid: { isValid: isString, message: '"keyid" must be a string' },
      mutatePayload: { isValid: isBoolean, message: '"mutatePayload" must be a boolean' },
      allowInsecureKeySizes: { isValid: isBoolean, message: '"allowInsecureKeySizes" must be a boolean' },
      allowInvalidAsymmetricKeyTypes: { isValid: isBoolean, message: '"allowInvalidAsymmetricKeyTypes" must be a boolean' }
    };
    var registered_claims_schema = {
      iat: { isValid: isNumber, message: '"iat" should be a number of seconds' },
      exp: { isValid: isNumber, message: '"exp" should be a number of seconds' },
      nbf: { isValid: isNumber, message: '"nbf" should be a number of seconds' }
    };
    function validate2(schema, allowUnknown, object, parameterName) {
      if (!isPlainObject3(object)) {
        throw new Error('Expected "' + parameterName + '" to be a plain object.');
      }
      Object.keys(object).forEach(function(key) {
        const validator = schema[key];
        if (!validator) {
          if (!allowUnknown) {
            throw new Error('"' + key + '" is not allowed in "' + parameterName + '"');
          }
          return;
        }
        if (!validator.isValid(object[key])) {
          throw new Error(validator.message);
        }
      });
    }
    function validateOptions(options) {
      return validate2(sign_options_schema, false, options, "options");
    }
    function validatePayload(payload) {
      return validate2(registered_claims_schema, true, payload, "payload");
    }
    var options_to_payload = {
      "audience": "aud",
      "issuer": "iss",
      "subject": "sub",
      "jwtid": "jti"
    };
    var options_for_objects = [
      "expiresIn",
      "notBefore",
      "noTimestamp",
      "audience",
      "issuer",
      "subject",
      "jwtid"
    ];
    module2.exports = function(payload, secretOrPrivateKey, options, callback) {
      if (typeof options === "function") {
        callback = options;
        options = {};
      } else {
        options = options || {};
      }
      const isObjectPayload = typeof payload === "object" && !Buffer.isBuffer(payload);
      const header = Object.assign({
        alg: options.algorithm || "HS256",
        typ: isObjectPayload ? "JWT" : void 0,
        kid: options.keyid
      }, options.header);
      function failure(err) {
        if (callback) {
          return callback(err);
        }
        throw err;
      }
      if (!secretOrPrivateKey && options.algorithm !== "none") {
        return failure(new Error("secretOrPrivateKey must have a value"));
      }
      if (secretOrPrivateKey != null && !(secretOrPrivateKey instanceof KeyObject)) {
        try {
          secretOrPrivateKey = createPrivateKey(secretOrPrivateKey);
        } catch (_) {
          try {
            secretOrPrivateKey = createSecretKey(typeof secretOrPrivateKey === "string" ? Buffer.from(secretOrPrivateKey) : secretOrPrivateKey);
          } catch (_2) {
            return failure(new Error("secretOrPrivateKey is not valid key material"));
          }
        }
      }
      if (header.alg.startsWith("HS") && secretOrPrivateKey.type !== "secret") {
        return failure(new Error(`secretOrPrivateKey must be a symmetric key when using ${header.alg}`));
      } else if (/^(?:RS|PS|ES)/.test(header.alg)) {
        if (secretOrPrivateKey.type !== "private") {
          return failure(new Error(`secretOrPrivateKey must be an asymmetric key when using ${header.alg}`));
        }
        if (!options.allowInsecureKeySizes && !header.alg.startsWith("ES") && secretOrPrivateKey.asymmetricKeyDetails !== void 0 && //KeyObject.asymmetricKeyDetails is supported in Node 15+
        secretOrPrivateKey.asymmetricKeyDetails.modulusLength < 2048) {
          return failure(new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${header.alg}`));
        }
      }
      if (typeof payload === "undefined") {
        return failure(new Error("payload is required"));
      } else if (isObjectPayload) {
        try {
          validatePayload(payload);
        } catch (error) {
          return failure(error);
        }
        if (!options.mutatePayload) {
          payload = Object.assign({}, payload);
        }
      } else {
        const invalid_options = options_for_objects.filter(function(opt) {
          return typeof options[opt] !== "undefined";
        });
        if (invalid_options.length > 0) {
          return failure(new Error("invalid " + invalid_options.join(",") + " option for " + typeof payload + " payload"));
        }
      }
      if (typeof payload.exp !== "undefined" && typeof options.expiresIn !== "undefined") {
        return failure(new Error('Bad "options.expiresIn" option the payload already has an "exp" property.'));
      }
      if (typeof payload.nbf !== "undefined" && typeof options.notBefore !== "undefined") {
        return failure(new Error('Bad "options.notBefore" option the payload already has an "nbf" property.'));
      }
      try {
        validateOptions(options);
      } catch (error) {
        return failure(error);
      }
      if (!options.allowInvalidAsymmetricKeyTypes) {
        try {
          validateAsymmetricKey(header.alg, secretOrPrivateKey);
        } catch (error) {
          return failure(error);
        }
      }
      const timestamp = payload.iat || Math.floor(Date.now() / 1e3);
      if (options.noTimestamp) {
        delete payload.iat;
      } else if (isObjectPayload) {
        payload.iat = timestamp;
      }
      if (typeof options.notBefore !== "undefined") {
        try {
          payload.nbf = timespan(options.notBefore, timestamp);
        } catch (err) {
          return failure(err);
        }
        if (typeof payload.nbf === "undefined") {
          return failure(new Error('"notBefore" should be a number of seconds or string representing a timespan eg: "1d", "20h", 60'));
        }
      }
      if (typeof options.expiresIn !== "undefined" && typeof payload === "object") {
        try {
          payload.exp = timespan(options.expiresIn, timestamp);
        } catch (err) {
          return failure(err);
        }
        if (typeof payload.exp === "undefined") {
          return failure(new Error('"expiresIn" should be a number of seconds or string representing a timespan eg: "1d", "20h", 60'));
        }
      }
      Object.keys(options_to_payload).forEach(function(key) {
        const claim = options_to_payload[key];
        if (typeof options[key] !== "undefined") {
          if (typeof payload[claim] !== "undefined") {
            return failure(new Error('Bad "options.' + key + '" option. The payload already has an "' + claim + '" property.'));
          }
          payload[claim] = options[key];
        }
      });
      const encoding = options.encoding || "utf8";
      if (typeof callback === "function") {
        callback = callback && once(callback);
        jws.createSign({
          header,
          privateKey: secretOrPrivateKey,
          payload,
          encoding
        }).once("error", callback).once("done", function(signature) {
          if (!options.allowInsecureKeySizes && /^(?:RS|PS)/.test(header.alg) && signature.length < 256) {
            return callback(new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${header.alg}`));
          }
          callback(null, signature);
        });
      } else {
        let signature = jws.sign({ header, payload, secret: secretOrPrivateKey, encoding });
        if (!options.allowInsecureKeySizes && /^(?:RS|PS)/.test(header.alg) && signature.length < 256) {
          throw new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${header.alg}`);
        }
        return signature;
      }
    };
  }
});

// node_modules/jsonwebtoken/index.js
var require_jsonwebtoken = __commonJS({
  "node_modules/jsonwebtoken/index.js"(exports2, module2) {
    module2.exports = {
      decode: require_decode(),
      verify: require_verify(),
      sign: require_sign(),
      JsonWebTokenError: require_JsonWebTokenError(),
      NotBeforeError: require_NotBeforeError(),
      TokenExpiredError: require_TokenExpiredError()
    };
  }
});

// node_modules/fast-content-type-parse/index.js
var require_fast_content_type_parse = __commonJS({
  "node_modules/fast-content-type-parse/index.js"(exports2, module2) {
    "use strict";
    var NullObject = function NullObject2() {
    };
    NullObject.prototype = /* @__PURE__ */ Object.create(null);
    var paramRE = /; *([!#$%&'*+.^\w`|~-]+)=("(?:[\v\u0020\u0021\u0023-\u005b\u005d-\u007e\u0080-\u00ff]|\\[\v\u0020-\u00ff])*"|[!#$%&'*+.^\w`|~-]+) */gu;
    var quotedPairRE = /\\([\v\u0020-\u00ff])/gu;
    var mediaTypeRE = /^[!#$%&'*+.^\w|~-]+\/[!#$%&'*+.^\w|~-]+$/u;
    var defaultContentType = { type: "", parameters: new NullObject() };
    Object.freeze(defaultContentType.parameters);
    Object.freeze(defaultContentType);
    function parse2(header) {
      if (typeof header !== "string") {
        throw new TypeError("argument header is required and must be a string");
      }
      let index = header.indexOf(";");
      const type = index !== -1 ? header.slice(0, index).trim() : header.trim();
      if (mediaTypeRE.test(type) === false) {
        throw new TypeError("invalid media type");
      }
      const result = {
        type: type.toLowerCase(),
        parameters: new NullObject()
      };
      if (index === -1) {
        return result;
      }
      let key;
      let match;
      let value;
      paramRE.lastIndex = index;
      while (match = paramRE.exec(header)) {
        if (match.index !== index) {
          throw new TypeError("invalid parameter format");
        }
        index += match[0].length;
        key = match[1].toLowerCase();
        value = match[2];
        if (value[0] === '"') {
          value = value.slice(1, value.length - 1);
          quotedPairRE.test(value) && (value = value.replace(quotedPairRE, "$1"));
        }
        result.parameters[key] = value;
      }
      if (index !== header.length) {
        throw new TypeError("invalid parameter format");
      }
      return result;
    }
    function safeParse2(header) {
      if (typeof header !== "string") {
        return defaultContentType;
      }
      let index = header.indexOf(";");
      const type = index !== -1 ? header.slice(0, index).trim() : header.trim();
      if (mediaTypeRE.test(type) === false) {
        return defaultContentType;
      }
      const result = {
        type: type.toLowerCase(),
        parameters: new NullObject()
      };
      if (index === -1) {
        return result;
      }
      let key;
      let match;
      let value;
      paramRE.lastIndex = index;
      while (match = paramRE.exec(header)) {
        if (match.index !== index) {
          return defaultContentType;
        }
        index += match[0].length;
        key = match[1].toLowerCase();
        value = match[2];
        if (value[0] === '"') {
          value = value.slice(1, value.length - 1);
          quotedPairRE.test(value) && (value = value.replace(quotedPairRE, "$1"));
        }
        result.parameters[key] = value;
      }
      if (index !== header.length) {
        return defaultContentType;
      }
      return result;
    }
    module2.exports.default = { parse: parse2, safeParse: safeParse2 };
    module2.exports.parse = parse2;
    module2.exports.safeParse = safeParse2;
    module2.exports.defaultContentType = defaultContentType;
  }
});

// node_modules/libsodium/dist/modules/libsodium.js
var require_libsodium = __commonJS({
  "node_modules/libsodium/dist/modules/libsodium.js"(exports2, module2) {
    !(function(A) {
      function I(A2) {
        "use strict";
        var I2;
        void 0 === (I2 = A2) && (I2 = {});
        var g = I2;
        "object" != typeof g.sodium && ("object" == typeof global ? g = global : "object" == typeof window && (g = window));
        var C = I2;
        return I2.ready = new Promise((function(A3, I3) {
          (B = C).onAbort = I3, B.print = function(A4) {
          }, B.printErr = function(A4) {
          }, B.onRuntimeInitialized = function() {
            try {
              B._crypto_secretbox_keybytes(), A3();
            } catch (A4) {
              I3(A4);
            }
          }, B.useBackupModule = function() {
            return new Promise((function(A4, I4) {
              (B2 = {}).onAbort = I4, B2.onRuntimeInitialized = function() {
                Object.keys(C).forEach((function(A5) {
                  "getRandomValue" !== A5 && delete C[A5];
                })), Object.keys(B2).forEach((function(A5) {
                  C[A5] = B2[A5];
                })), A4();
              };
              var g3, B2 = void 0 !== B2 ? B2 : {}, Q2 = "object" == typeof window, E2 = "function" == typeof importScripts, i2 = "object" == typeof process && "object" == typeof process.versions && "string" == typeof process.versions.node, o2 = Object.assign({}, B2), c2 = "";
              if (i2) {
                var D2 = require("fs"), a2 = require("path");
                c2 = __dirname + "/", g3 = (A5) => (A5 = U2(A5) ? new URL(A5) : a2.normalize(A5), D2.readFileSync(A5)), !B2.thisProgram && process.argv.length > 1 && process.argv[1].replace(/\\/g, "/"), process.argv.slice(2), "undefined" != typeof module2 && (module2.exports = B2);
              } else (Q2 || E2) && (E2 ? c2 = self.location.href : "undefined" != typeof document && document.currentScript && (c2 = document.currentScript.src), c2 = c2.startsWith("blob:") ? "" : c2.substr(0, c2.replace(/[?#].*/, "").lastIndexOf("/") + 1), E2 && (g3 = (A5) => {
                var I5 = new XMLHttpRequest();
                return I5.open("GET", A5, false), I5.responseType = "arraybuffer", I5.send(null), new Uint8Array(I5.response);
              }));
              B2.print;
              var y2, f2 = B2.printErr || void 0;
              Object.assign(B2, o2), o2 = null, B2.arguments && B2.arguments, B2.thisProgram && B2.thisProgram, B2.quit && B2.quit, B2.wasmBinary && (y2 = B2.wasmBinary);
              var e2, w2 = { Memory: function(A5) {
                this.buffer = new ArrayBuffer(65536 * A5.initial);
              }, Module: function(A5) {
              }, Instance: function(A5, I5) {
                this.exports = (function(A6) {
                  for (var I6, g4 = new Uint8Array(123), C2 = 25; C2 >= 0; --C2) g4[48 + C2] = 52 + C2, g4[65 + C2] = C2, g4[97 + C2] = 26 + C2;
                  function B3(A7, I7, C3) {
                    for (var B4, Q4, E3 = 0, i3 = I7, o3 = C3.length, c3 = I7 + (3 * o3 >> 2) - ("=" == C3[o3 - 2]) - ("=" == C3[o3 - 1]); E3 < o3; E3 += 4) B4 = g4[C3.charCodeAt(E3 + 1)], Q4 = g4[C3.charCodeAt(E3 + 2)], A7[i3++] = g4[C3.charCodeAt(E3)] << 2 | B4 >> 4, i3 < c3 && (A7[i3++] = B4 << 4 | Q4 >> 2), i3 < c3 && (A7[i3++] = Q4 << 6 | g4[C3.charCodeAt(E3 + 3)]);
                  }
                  function Q3() {
                    throw new Error("abort");
                  }
                  return g4[43] = 62, g4[47] = 63, (function(A7) {
                    var g5 = new ArrayBuffer(16777216), C3 = new Int8Array(g5), E3 = (new Int16Array(g5), new Int32Array(g5)), i3 = new Uint8Array(g5), o3 = (new Uint16Array(g5), new Uint32Array(g5)), c3 = (new Float32Array(g5), new Float64Array(g5), Math.imul), D3 = (Math.fround, Math.abs, Math.clz32), a3 = (Math.min, Math.max, Math.floor, Math.ceil, Math.trunc, Math.sqrt, A7.a), y3 = a3.a, f3 = a3.b, e3 = a3.c, w3 = a3.d, r3 = 103200, t3 = 0;
                    function h3(A8, I7) {
                      var g6, B4, Q4, E4, o4, c4 = 0, D4 = 0, a4 = 0, y4 = 0, f4 = 0, e4 = 0, w4 = 0, r4 = 0, h4 = 0, k4 = 0, n4 = 0, s4 = 0, F4 = 0, S4 = 0, M4 = 0, N4 = 0, K4 = 0, _4 = 0, p4 = 0, H4 = 0, G4 = 0, J4 = 0, Y4 = 0, U4 = 0, d4 = 0, b4 = 0, P4 = 0, v5 = 0, R4 = 0, L4 = 0, x4 = 0, u4 = 0, m4 = 0, q4 = 0, l3 = 0, z2 = 0, j2 = 0, X2 = 0, O2 = 0, T2 = 0, V2 = 0, Z2 = 0, W2 = 0, $2 = 0, AA2 = 0, IA2 = 0, gA2 = 0, CA2 = 0, BA2 = 0, QA2 = 0, EA2 = 0, iA2 = 0, oA2 = 0, cA2 = 0, DA2 = 0, aA2 = 0, yA2 = 0, fA2 = 0, eA2 = 0, wA2 = 0, rA2 = 0, tA2 = 0, hA2 = 0, kA2 = 0, nA2 = 0, sA2 = 0, FA2 = 0, SA2 = 0, MA2 = 0, NA2 = 0, KA2 = 0, pA2 = 0, HA2 = 0, GA2 = 0;
                      fA2 = i3[I7 + 40 | 0] | i3[I7 + 41 | 0] << 8 | i3[I7 + 42 | 0] << 16 | i3[I7 + 43 | 0] << 24, wA2 = c4 = i3[I7 + 44 | 0] | i3[I7 + 45 | 0] << 8 | i3[I7 + 46 | 0] << 16 | i3[I7 + 47 | 0] << 24, gA2 = i3[I7 + 104 | 0] | i3[I7 + 105 | 0] << 8 | i3[I7 + 106 | 0] << 16 | i3[I7 + 107 | 0] << 24, rA2 = c4 = i3[I7 + 108 | 0] | i3[I7 + 109 | 0] << 8 | i3[I7 + 110 | 0] << 16 | i3[I7 + 111 | 0] << 24, c4 = i3[I7 + 68 | 0] | i3[I7 + 69 | 0] << 8 | i3[I7 + 70 | 0] << 16 | i3[I7 + 71 | 0] << 24, j2 = i3[I7 + 64 | 0] | i3[I7 + 65 | 0] << 8 | i3[I7 + 66 | 0] << 16 | i3[I7 + 67 | 0] << 24, BA2 = c4, KA2 = c4 = i3[I7 + 36 | 0] | i3[I7 + 37 | 0] << 8 | i3[I7 + 38 | 0] << 16 | i3[I7 + 39 | 0] << 24, K4 = c4, oA2 = i3[I7 + 120 | 0] | i3[I7 + 121 | 0] << 8 | i3[I7 + 122 | 0] << 16 | i3[I7 + 123 | 0] << 24, nA2 = c4 = i3[I7 + 124 | 0] | i3[I7 + 125 | 0] << 8 | i3[I7 + 126 | 0] << 16 | i3[I7 + 127 | 0] << 24, Q4 = c4 = i3[I7 + 92 | 0] | i3[I7 + 93 | 0] << 8 | i3[I7 + 94 | 0] << 16 | i3[I7 + 95 | 0] << 24, g6 = i3[I7 + 88 | 0] | i3[I7 + 89 | 0] << 8 | i3[I7 + 90 | 0] << 16 | i3[I7 + 91 | 0] << 24, z2 = c4, iA2 = i3[I7 + 80 | 0] | i3[I7 + 81 | 0] << 8 | i3[I7 + 82 | 0] << 16 | i3[I7 + 83 | 0] << 24, hA2 = c4 = i3[I7 + 84 | 0] | i3[I7 + 85 | 0] << 8 | i3[I7 + 86 | 0] << 16 | i3[I7 + 87 | 0] << 24, X2 = c4, QA2 = i3[A8 + 16 | 0] | i3[A8 + 17 | 0] << 8 | i3[A8 + 18 | 0] << 16 | i3[A8 + 19 | 0] << 24, c4 = (DA2 = i3[A8 + 52 | 0] | i3[A8 + 53 | 0] << 8 | i3[A8 + 54 | 0] << 16 | i3[A8 + 55 | 0] << 24) + K4 | 0, q4 = (cA2 = i3[A8 + 48 | 0] | i3[A8 + 49 | 0] << 8 | i3[A8 + 50 | 0] << 16 | i3[A8 + 51 | 0] << 24) + (aA2 = i3[I7 + 32 | 0] | i3[I7 + 33 | 0] << 8 | i3[I7 + 34 | 0] << 16 | i3[I7 + 35 | 0] << 24) | 0, c4 = (i3[A8 + 20 | 0] | i3[A8 + 21 | 0] << 8 | i3[A8 + 22 | 0] << 16 | i3[A8 + 23 | 0] << 24) + (cA2 >>> 0 > q4 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (QA2 = (D4 = q4) >>> 0 > (q4 = q4 + QA2 | 0) >>> 0 ? c4 + 1 | 0 : c4) + wA2 | 0, EA2 = eA2 = q4 + fA2 | 0, eA2 = c4 = eA2 >>> 0 < q4 >>> 0 ? c4 + 1 | 0 : c4, q4 = _A(q4 ^ (i3[A8 + 80 | 0] | i3[A8 + 81 | 0] << 8 | i3[A8 + 82 | 0] << 16 | i3[A8 + 83 | 0] << 24) ^ -79577749, QA2 ^ (i3[A8 + 84 | 0] | i3[A8 + 85 | 0] << 8 | i3[A8 + 86 | 0] << 16 | i3[A8 + 87 | 0] << 24) ^ 528734635, 32), SA2 = c4 = t3, c4 = c4 + 1013904242 | 0, QA2 = q4, V2 = c4 = (q4 = q4 - 23791573 | 0) >>> 0 < 4271175723 ? c4 + 1 | 0 : c4, DA2 = _A(q4 ^ cA2, c4 ^ DA2, 40), c4 = (c4 = eA2) + (eA2 = t3) | 0, cA2 = _A(QA2 ^ (h4 = cA2 = DA2 + EA2 | 0), SA2 ^ (k4 = h4 >>> 0 < DA2 >>> 0 ? c4 + 1 | 0 : c4), 48), c4 = V2 + (u4 = t3) | 0, S4 = c4 = (cA2 = q4 + (n4 = cA2) | 0) >>> 0 < q4 >>> 0 ? c4 + 1 | 0 : c4, cA2 = c4 = _A(DA2 ^ (F4 = cA2), eA2 ^ c4, 1), V2 = q4 = t3, eA2 = i3[I7 + 24 | 0] | i3[I7 + 25 | 0] << 8 | i3[I7 + 26 | 0] << 16 | i3[I7 + 27 | 0] << 24, SA2 = c4 = i3[I7 + 28 | 0] | i3[I7 + 29 | 0] << 8 | i3[I7 + 30 | 0] << 16 | i3[I7 + 31 | 0] << 24, yA2 = i3[A8 + 8 | 0] | i3[A8 + 9 | 0] << 8 | i3[A8 + 10 | 0] << 16 | i3[A8 + 11 | 0] << 24, q4 = (DA2 = i3[I7 + 16 | 0] | i3[I7 + 17 | 0] << 8 | i3[I7 + 18 | 0] << 16 | i3[I7 + 19 | 0] << 24) + (QA2 = i3[A8 + 40 | 0] | i3[A8 + 41 | 0] << 8 | i3[A8 + 42 | 0] << 16 | i3[A8 + 43 | 0] << 24) | 0, c4 = (pA2 = i3[I7 + 20 | 0] | i3[I7 + 21 | 0] << 8 | i3[I7 + 22 | 0] << 16 | i3[I7 + 23 | 0] << 24) + (GA2 = i3[A8 + 44 | 0] | i3[A8 + 45 | 0] << 8 | i3[A8 + 46 | 0] << 16 | i3[A8 + 47 | 0] << 24) | 0, c4 = (i3[A8 + 12 | 0] | i3[A8 + 13 | 0] << 8 | i3[A8 + 14 | 0] << 16 | i3[A8 + 15 | 0] << 24) + (q4 >>> 0 < QA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = SA2 + (EA2 = (D4 = q4) >>> 0 > (q4 = q4 + yA2 | 0) >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (yA2 = q4 + eA2 | 0) >>> 0 < q4 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(q4 ^ (i3[A8 + 72 | 0] | i3[A8 + 73 | 0] << 8 | i3[A8 + 74 | 0] << 16 | i3[A8 + 75 | 0] << 24) ^ 725511199, EA2 ^ (i3[A8 + 76 | 0] | i3[A8 + 77 | 0] << 8 | i3[A8 + 78 | 0] << 16 | i3[A8 + 79 | 0] << 24) ^ -1694144372, 32), e4 = _A(QA2 ^ (a4 = D4 - 2067093701 | 0), GA2 ^ (L4 = (d4 = q4 = t3) - ((D4 >>> 0 < 2067093701) + 1150833018 | 0) | 0), 40), c4 = (m4 = t3) + c4 | 0, c4 = (U4 = (M4 = q4 = e4 + yA2 | 0) >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4) + V2 | 0, c4 = (M4 >>> 0 > (q4 = M4 + cA2 | 0) >>> 0 ? c4 + 1 | 0 : c4) + X2 | 0, c4 = (QA2 = (y4 = q4) >>> 0 > (q4 = q4 + iA2 | 0) >>> 0 ? c4 + 1 | 0 : c4) + z2 | 0, v5 = z2 = q4 + g6 | 0, r4 = c4 = z2 >>> 0 < q4 >>> 0 ? c4 + 1 | 0 : c4, s4 = cA2, sA2 = V2, V2 = q4, EA2 = QA2, cA2 = i3[I7 + 8 | 0] | i3[I7 + 9 | 0] << 8 | i3[I7 + 10 | 0] << 16 | i3[I7 + 11 | 0] << 24, q4 = c4 = i3[I7 + 12 | 0] | i3[I7 + 13 | 0] << 8 | i3[I7 + 14 | 0] << 16 | i3[I7 + 15 | 0] << 24, GA2 = c4 = i3[0 | A8] | i3[A8 + 1 | 0] << 8 | i3[A8 + 2 | 0] << 16 | i3[A8 + 3 | 0] << 24, E4 = QA2 = i3[A8 + 4 | 0] | i3[A8 + 5 | 0] << 8 | i3[A8 + 6 | 0] << 16 | i3[A8 + 7 | 0] << 24, X2 = c4, c4 = (MA2 = i3[I7 + 4 | 0] | i3[I7 + 5 | 0] << 8 | i3[I7 + 6 | 0] << 16 | i3[I7 + 7 | 0] << 24) + (f4 = i3[A8 + 36 | 0] | i3[A8 + 37 | 0] << 8 | i3[A8 + 38 | 0] << 16 | i3[A8 + 39 | 0] << 24) | 0, c4 = E4 + ((z2 = i3[A8 + 32 | 0] | i3[A8 + 33 | 0] << 8 | i3[A8 + 34 | 0] << 16 | i3[A8 + 35 | 0] << 24) >>> 0 > (y4 = z2 + (QA2 = i3[0 | I7] | i3[I7 + 1 | 0] << 8 | i3[I7 + 2 | 0] << 16 | i3[I7 + 3 | 0] << 24) | 0) >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (yA2 = (X2 = y4 + X2 | 0) >>> 0 < y4 >>> 0 ? c4 + 1 | 0 : c4) + q4 | 0, kA2 = y4 = X2 + cA2 | 0, y4 = c4 = y4 >>> 0 < X2 >>> 0 ? c4 + 1 | 0 : c4, w4 = z2, z2 = _A(X2 ^ (i3[A8 + 64 | 0] | i3[A8 + 65 | 0] << 8 | i3[A8 + 66 | 0] << 16 | i3[A8 + 67 | 0] << 24) ^ -1377402159, yA2 ^ (i3[A8 + 68 | 0] | i3[A8 + 69 | 0] << 8 | i3[A8 + 70 | 0] << 16 | i3[A8 + 71 | 0] << 24) ^ 1359893119, 32), yA2 = c4 = t3, c4 = c4 + 1779033703 | 0, X2 = z2, G4 = c4 = (z2 = z2 - 205731576 | 0) >>> 0 < 4089235720 ? c4 + 1 | 0 : c4, f4 = _A(w4 ^ (N4 = z2), c4 ^ f4, 40), c4 = (P4 = t3) + y4 | 0, w4 = _A(X2 ^ (y4 = z2 = f4 + kA2 | 0), yA2 ^ (_4 = f4 >>> 0 > y4 >>> 0 ? c4 + 1 | 0 : c4), 48), c4 = _A(w4 ^ V2, (W2 = t3) ^ EA2, 32), T2 = z2 = t3, R4 = c4, B4 = c4 = i3[I7 + 60 | 0] | i3[I7 + 61 | 0] << 8 | i3[I7 + 62 | 0] << 16 | i3[I7 + 63 | 0] << 24, yA2 = kA2 = i3[I7 + 56 | 0] | i3[I7 + 57 | 0] << 8 | i3[I7 + 58 | 0] << 16 | i3[I7 + 59 | 0] << 24, H4 = i3[A8 + 24 | 0] | i3[A8 + 25 | 0] << 8 | i3[A8 + 26 | 0] << 16 | i3[A8 + 27 | 0] << 24, z2 = (EA2 = i3[I7 + 48 | 0] | i3[I7 + 49 | 0] << 8 | i3[I7 + 50 | 0] << 16 | i3[I7 + 51 | 0] << 24) + (X2 = i3[A8 + 56 | 0] | i3[A8 + 57 | 0] << 8 | i3[A8 + 58 | 0] << 16 | i3[A8 + 59 | 0] << 24) | 0, c4 = (NA2 = i3[I7 + 52 | 0] | i3[I7 + 53 | 0] << 8 | i3[I7 + 54 | 0] << 16 | i3[I7 + 55 | 0] << 24) + (b4 = i3[A8 + 60 | 0] | i3[A8 + 61 | 0] << 8 | i3[A8 + 62 | 0] << 16 | i3[A8 + 63 | 0] << 24) | 0, c4 = (i3[A8 + 28 | 0] | i3[A8 + 29 | 0] << 8 | i3[A8 + 30 | 0] << 16 | i3[A8 + 31 | 0] << 24) + (z2 >>> 0 < X2 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = B4 + (V2 = (p4 = z2) >>> 0 > (z2 = H4 + z2 | 0) >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (H4 = z2 + yA2 | 0) >>> 0 < z2 >>> 0 ? c4 + 1 | 0 : c4, V2 = _A(z2 ^ (i3[A8 + 88 | 0] | i3[A8 + 89 | 0] << 8 | i3[A8 + 90 | 0] << 16 | i3[A8 + 91 | 0] << 24) ^ 327033209, V2 ^ (i3[A8 + 92 | 0] | i3[A8 + 93 | 0] << 8 | i3[A8 + 94 | 0] << 16 | i3[A8 + 95 | 0] << 24) ^ 1541459225, 32), X2 = _A(X2 ^ (yA2 = V2 + 1595750129 | 0), (p4 = b4) ^ (b4 = (J4 = z2 = t3) - ((V2 >>> 0 < 2699217167) + 1521486533 | 0) | 0), 40), c4 = (IA2 = t3) + c4 | 0, z2 = _A((H4 = z2 = X2 + H4 | 0) ^ V2, J4 ^ (p4 = H4 >>> 0 < X2 >>> 0 ? c4 + 1 | 0 : c4), 48), c4 = b4 + ($2 = t3) | 0, Y4 = c4 = (z2 = yA2 + (b4 = z2) | 0) >>> 0 < yA2 >>> 0 ? c4 + 1 | 0 : c4, c4 = T2 + c4 | 0, O2 = s4 ^ (V2 = R4 + (J4 = z2) | 0), s4 = c4 = V2 >>> 0 < J4 >>> 0 ? c4 + 1 | 0 : c4, yA2 = _A(O2, c4 ^ sA2, 40), c4 = (sA2 = t3) + r4 | 0, z2 = _A(v5 = R4 ^ (r4 = z2 = yA2 + v5 | 0), T2 ^ (R4 = r4 >>> 0 < yA2 >>> 0 ? c4 + 1 | 0 : c4), 48), c4 = s4 + (CA2 = t3) | 0, T2 = c4 = (s4 = V2 + (v5 = z2) | 0) >>> 0 < V2 >>> 0 ? c4 + 1 | 0 : c4, z2 = (x4 = _A(s4 ^ yA2, sA2 ^ c4, 1)) + (V2 = i3[I7 + 72 | 0] | i3[I7 + 73 | 0] << 8 | i3[I7 + 74 | 0] << 16 | i3[I7 + 75 | 0] << 24) | 0, c4 = (tA2 = t3) + (sA2 = i3[I7 + 76 | 0] | i3[I7 + 77 | 0] << 8 | i3[I7 + 78 | 0] << 16 | i3[I7 + 79 | 0] << 24) | 0, FA2 = z2, l3 = z2 >>> 0 < V2 >>> 0 ? c4 + 1 | 0 : c4, Z2 = rA2, z2 = i3[I7 + 96 | 0] | i3[I7 + 97 | 0] << 8 | i3[I7 + 98 | 0] << 16 | i3[I7 + 99 | 0] << 24, yA2 = c4 = i3[I7 + 100 | 0] | i3[I7 + 101 | 0] << 8 | i3[I7 + 102 | 0] << 16 | i3[I7 + 103 | 0] << 24, X2 = (c4 = h4) + (h4 = _A(J4 ^ X2, Y4 ^ IA2, 1)) | 0, c4 = (J4 = t3) + k4 | 0, c4 = (h4 >>> 0 > X2 >>> 0 ? c4 + 1 | 0 : c4) + yA2 | 0, c4 = (k4 = (k4 = X2) >>> 0 > (X2 = z2 + X2 | 0) >>> 0 ? c4 + 1 | 0 : c4) + Z2 | 0, O2 = Y4 = X2 + gA2 | 0, Y4 = c4 = Y4 >>> 0 < X2 >>> 0 ? c4 + 1 | 0 : c4, M4 = _A(D4 ^ M4, U4 ^ d4, 48), U4 = c4 = _A(M4 ^ X2, (d4 = t3) ^ k4, 32), c4 = G4 + W2 | 0, c4 = (IA2 = X2 = t3) + (N4 = (X2 = w4 + N4 | 0) >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4) | 0, G4 = c4 = (k4 = X2) >>> 0 > (w4 = k4 + U4 | 0) >>> 0 ? c4 + 1 | 0 : c4, h4 = _A(w4 ^ h4, J4 ^ c4, 40), c4 = (W2 = t3) + Y4 | 0, c4 = (J4 = h4 >>> 0 > (Y4 = X2 = h4 + O2 | 0) >>> 0 ? c4 + 1 | 0 : c4) + l3 | 0, c4 = (D4 = Y4 >>> 0 > (X2 = Y4 + FA2 | 0) >>> 0 ? c4 + 1 | 0 : c4) + nA2 | 0, FA2 = l3 = X2 + oA2 | 0, l3 = c4 = l3 >>> 0 < X2 >>> 0 ? c4 + 1 | 0 : c4, O2 = X2, Z2 = D4, X2 = i3[I7 + 116 | 0] | i3[I7 + 117 | 0] << 8 | i3[I7 + 118 | 0] << 16 | i3[I7 + 119 | 0] << 24, I7 = i3[I7 + 112 | 0] | i3[I7 + 113 | 0] << 8 | i3[I7 + 114 | 0] << 16 | i3[I7 + 115 | 0] << 24, f4 = _A(f4 ^ k4, N4 ^ P4, 1), c4 = (P4 = t3) + p4 | 0, c4 = ((D4 = f4 + H4 | 0) >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4) + X2 | 0, c4 = (k4 = (N4 = D4) >>> 0 > (D4 = I7 + D4 | 0) >>> 0 ? c4 + 1 | 0 : c4) + nA2 | 0, HA2 = N4 = D4 + oA2 | 0, N4 = c4 = N4 >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4, c4 = _A(D4 ^ n4, k4 ^ u4, 32), AA2 = D4 = t3, n4 = c4, k4 = D4, c4 = d4 + L4 | 0, M4 = D4 = a4 + M4 | 0, H4 = c4 = D4 >>> 0 < a4 >>> 0 ? c4 + 1 | 0 : c4, c4 = c4 + k4 | 0, p4 = D4 = D4 + n4 | 0, u4 = c4 = M4 >>> 0 > D4 >>> 0 ? c4 + 1 | 0 : c4, k4 = _A(D4 ^ f4, P4 ^ c4, 40), c4 = (P4 = t3) + N4 | 0, n4 = _A((D4 = k4 + HA2 | 0) ^ n4, AA2 ^ (a4 = D4 >>> 0 < k4 >>> 0 ? c4 + 1 | 0 : c4), 48), c4 = _A(n4 ^ O2, (HA2 = t3) ^ Z2, 32), AA2 = f4 = t3, N4 = c4, O2 = f4, e4 = _A(e4 ^ M4, H4 ^ m4, 1), c4 = _4 + (M4 = t3) | 0, c4 = ((f4 = y4) >>> 0 > (y4 = y4 + e4 | 0) >>> 0 ? c4 + 1 | 0 : c4) + BA2 | 0, c4 = (y4 = (f4 = y4 + j2 | 0) >>> 0 < y4 >>> 0 ? c4 + 1 | 0 : c4) + sA2 | 0, Z2 = _4 = f4 + V2 | 0, _4 = c4 = _4 >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4, H4 = e4, f4 = _A(f4 ^ b4, y4 ^ $2, 32), c4 = (b4 = t3) + S4 | 0, F4 = _A(H4 ^ (y4 = e4 = f4 + F4 | 0), (S4 = f4 >>> 0 > y4 >>> 0 ? c4 + 1 | 0 : c4) ^ M4, 40), c4 = ($2 = t3) + _4 | 0, M4 = e4 = F4 + Z2 | 0, e4 = _A(f4 ^ e4, b4 ^ (_4 = e4 >>> 0 < F4 >>> 0 ? c4 + 1 | 0 : c4), 48), c4 = S4 + (o4 = t3) | 0, S4 = e4, b4 = c4 = (e4 = y4 + e4 | 0) >>> 0 < y4 >>> 0 ? c4 + 1 | 0 : c4, c4 = c4 + O2 | 0, c4 = (H4 = e4) >>> 0 > (e4 = e4 + N4 | 0) >>> 0 ? c4 + 1 | 0 : c4, O2 = e4, e4 ^= x4, x4 = c4, f4 = _A(e4, tA2 ^ c4, 40), c4 = (tA2 = t3) + l3 | 0, l3 = e4 = f4 + FA2 | 0, c4 = Q4 + (Z2 = f4 >>> 0 > e4 >>> 0 ? c4 + 1 | 0 : c4) | 0, FA2 = e4 = e4 + g6 | 0, d4 = c4 = e4 >>> 0 < g6 >>> 0 ? c4 + 1 | 0 : c4, e4 = D4, L4 = gA2, m4 = rA2, D4 = _A(U4 ^ Y4, J4 ^ IA2, 48), c4 = G4 + (IA2 = t3) | 0, U4 = D4, G4 = c4 = (y4 = w4 + D4 | 0) >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(y4 ^ h4, W2 ^ c4, 1), c4 = (w4 = t3) + m4 | 0, c4 = ((h4 = D4 + L4 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4) + a4 | 0, c4 = NA2 + (e4 = (a4 = e4 + h4 | 0) >>> 0 < h4 >>> 0 ? c4 + 1 | 0 : c4) | 0, Y4 = h4 = a4 + EA2 | 0, h4 = c4 = h4 >>> 0 < EA2 >>> 0 ? c4 + 1 | 0 : c4, a4 = _A(a4 ^ S4, e4 ^ o4, 32), c4 = T2 + (J4 = t3) | 0, S4 = a4, s4 = c4 = (a4 = s4 + a4 | 0) >>> 0 < s4 >>> 0 ? c4 + 1 | 0 : c4, e4 = _A(D4 ^ a4, c4 ^ w4, 40), c4 = (c4 = h4) + (h4 = t3) | 0, w4 = D4 = e4 + Y4 | 0, D4 = _A(D4 ^ S4, J4 ^ (Y4 = D4 >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4), 48), c4 = s4 + (W2 = t3) | 0, J4 = D4, T2 = c4 = (s4 = a4 + D4 | 0) >>> 0 < a4 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(e4 ^ s4, h4 ^ c4, 1), c4 = (h4 = t3) + d4 | 0, c4 = B4 + (e4 = (a4 = D4 + FA2 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4) | 0, FA2 = S4 = a4 + kA2 | 0, S4 = c4 = S4 >>> 0 < kA2 >>> 0 ? c4 + 1 | 0 : c4, d4 = D4, L4 = h4, c4 = u4 + HA2 | 0, c4 = (D4 = n4 + p4 | 0) >>> 0 < n4 >>> 0 ? c4 + 1 | 0 : c4, n4 = D4, p4 = c4, c4 = _A(D4 ^ k4, P4 ^ c4, 1), k4 = h4 = t3, D4 = c4, c4 = _4 + X2 | 0, c4 = ((M4 = I7 + M4 | 0) >>> 0 < I7 >>> 0 ? c4 + 1 | 0 : c4) + h4 | 0, c4 = hA2 + (M4 = (h4 = D4 + M4 | 0) >>> 0 < M4 >>> 0 ? c4 + 1 | 0 : c4) | 0, u4 = _4 = h4 + iA2 | 0, _4 = c4 = _4 >>> 0 < iA2 >>> 0 ? c4 + 1 | 0 : c4, h4 = _A(h4 ^ v5, M4 ^ CA2, 32), c4 = G4 + (v5 = t3) | 0, M4 = h4, G4 = c4 = (G4 = y4) >>> 0 > (y4 = y4 + h4 | 0) >>> 0 ? c4 + 1 | 0 : c4, h4 = _A(D4 ^ y4, c4 ^ k4, 40), c4 = (P4 = t3) + _4 | 0, k4 = D4 = h4 + u4 | 0, D4 = _A(_4 = D4 ^ M4, v5 ^ (M4 = D4 >>> 0 < h4 >>> 0 ? c4 + 1 | 0 : c4), 48), c4 = G4 + (CA2 = t3) | 0, G4 = D4, _4 = D4 = y4 + D4 | 0, v5 = c4 = D4 >>> 0 < y4 >>> 0 ? c4 + 1 | 0 : c4, u4 = a4, m4 = e4, D4 = _A(F4 ^ H4, b4 ^ $2, 1), c4 = (y4 = t3) + K4 | 0, c4 = R4 + ((a4 = D4 + aA2 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = BA2 + (e4 = (a4 = a4 + r4 | 0) >>> 0 < r4 >>> 0 ? c4 + 1 | 0 : c4) | 0, R4 = r4 = a4 + j2 | 0, r4 = c4 = r4 >>> 0 < a4 >>> 0 ? c4 + 1 | 0 : c4, F4 = D4, D4 = (a4 = _A(a4 ^ U4, e4 ^ IA2, 32)) + n4 | 0, c4 = (n4 = t3) + p4 | 0, e4 = D4, y4 = _A(D4 ^ F4, (U4 = D4 >>> 0 < a4 >>> 0 ? c4 + 1 | 0 : c4) ^ y4, 40), c4 = (IA2 = t3) + r4 | 0, r4 = D4 = y4 + R4 | 0, H4 = _A(D4 ^ a4, n4 ^ (R4 = D4 >>> 0 < y4 >>> 0 ? c4 + 1 | 0 : c4), 48), a4 = _A(H4 ^ u4, (c4 = m4) ^ (m4 = t3), 32), c4 = (u4 = t3) + v5 | 0, n4 = D4 = a4 + _4 | 0, F4 = _A(D4 ^ d4, (p4 = D4 >>> 0 < a4 >>> 0 ? c4 + 1 | 0 : c4) ^ L4, 40), c4 = (d4 = t3) + S4 | 0, S4 = D4 = F4 + FA2 | 0, D4 = _A(D4 ^ a4, u4 ^ (b4 = D4 >>> 0 < F4 >>> 0 ? c4 + 1 | 0 : c4), 48), c4 = p4 + ($2 = t3) | 0, p4 = D4, u4 = c4 = (a4 = n4) >>> 0 > (n4 = n4 + D4 | 0) >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(n4 ^ F4, d4 ^ c4, 1), c4 = nA2 + (FA2 = t3) | 0, d4 = D4, HA2 = D4 = oA2 + D4 | 0, F4 = c4 = D4 >>> 0 < oA2 >>> 0 ? c4 + 1 | 0 : c4, a4 = fA2, D4 = _A(h4 ^ _4, P4 ^ v5, 1), c4 = Y4 + (h4 = t3) | 0, c4 = ((_4 = w4) >>> 0 > (w4 = D4 + w4 | 0) >>> 0 ? c4 + 1 | 0 : c4) + wA2 | 0, c4 = (_4 = (a4 = a4 + w4 | 0) >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4) + SA2 | 0, L4 = w4 = a4 + eA2 | 0, Y4 = c4 = w4 >>> 0 < a4 >>> 0 ? c4 + 1 | 0 : c4, v5 = D4, w4 = _A(N4 ^ l3, Z2 ^ AA2, 48), c4 = _A(w4 ^ a4, (P4 = t3) ^ _4, 32), AA2 = D4 = t3, N4 = c4, a4 = D4, c4 = U4 + m4 | 0, c4 = (D4 = e4 + H4 | 0) >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4, e4 = D4, U4 = c4, c4 = c4 + a4 | 0, _4 = D4 = D4 + N4 | 0, H4 = c4 = e4 >>> 0 > D4 >>> 0 ? c4 + 1 | 0 : c4, a4 = _A(D4 ^ v5, c4 ^ h4, 40), c4 = (c4 = Y4) + (Y4 = t3) | 0, v5 = D4 = a4 + L4 | 0, l3 = c4 = D4 >>> 0 < a4 >>> 0 ? c4 + 1 | 0 : c4, c4 = c4 + F4 | 0, Z2 = c4 = (h4 = D4 + HA2 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4, F4 = c4, D4 = _A(y4 ^ e4, U4 ^ IA2, 1), c4 = q4 + (y4 = t3) | 0, c4 = M4 + ((e4 = D4 + cA2 | 0) >>> 0 < cA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = yA2 + (k4 = (e4 = e4 + k4 | 0) >>> 0 < k4 >>> 0 ? c4 + 1 | 0 : c4) | 0, L4 = M4 = e4 + z2 | 0, M4 = c4 = M4 >>> 0 < z2 >>> 0 ? c4 + 1 | 0 : c4, U4 = D4, c4 = _A(e4 ^ J4, k4 ^ W2, 32), m4 = D4 = t3, e4 = c4, k4 = D4, c4 = P4 + x4 | 0, J4 = D4 = w4 + O2 | 0, x4 = c4 = D4 >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4, c4 = c4 + k4 | 0, c4 = (w4 = D4 + e4 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4, D4 = w4 ^ U4, U4 = c4, k4 = _A(D4, c4 ^ y4, 40), c4 = (W2 = t3) + M4 | 0, y4 = D4 = k4 + L4 | 0, O2 = _A(D4 ^ e4, m4 ^ (M4 = D4 >>> 0 < k4 >>> 0 ? c4 + 1 | 0 : c4), 48), c4 = _A(O2 ^ h4, (IA2 = t3) ^ F4, 32), HA2 = D4 = t3, L4 = c4, F4 = D4, D4 = _A(f4 ^ J4, x4 ^ tA2, 1), c4 = R4 + (f4 = t3) | 0, c4 = MA2 + ((e4 = D4 + r4 | 0) >>> 0 < r4 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (r4 = (e4 = e4 + QA2 | 0) >>> 0 < QA2 >>> 0 ? c4 + 1 | 0 : c4) + pA2 | 0, J4 = R4 = e4 + DA2 | 0, R4 = c4 = R4 >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4, e4 = _A(e4 ^ G4, r4 ^ CA2, 32), c4 = T2 + (x4 = t3) | 0, G4 = e4, r4 = f4, f4 = c4 = (e4 = s4 + e4 | 0) >>> 0 < s4 >>> 0 ? c4 + 1 | 0 : c4, r4 = _A(D4 ^ e4, r4 ^ c4, 40), c4 = (CA2 = t3) + R4 | 0, s4 = D4 = r4 + J4 | 0, D4 = _A(J4 = D4 ^ G4, x4 ^ (G4 = D4 >>> 0 < r4 >>> 0 ? c4 + 1 | 0 : c4), 48), c4 = f4 + (P4 = t3) | 0, f4 = D4, R4 = D4 = e4 + D4 | 0, J4 = c4 = D4 >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4, c4 = c4 + F4 | 0, T2 = c4 = (F4 = D4 + L4 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4, e4 = _A(F4 ^ d4, FA2 ^ c4, 40), c4 = Z2 + (x4 = t3) | 0, c4 = ((D4 = e4 + h4 | 0) >>> 0 < h4 >>> 0 ? c4 + 1 | 0 : c4) + rA2 | 0, h4 = D4, Z2 = D4 = D4 + gA2 | 0, d4 = c4 = h4 >>> 0 > D4 >>> 0 ? c4 + 1 | 0 : c4, m4 = BA2, h4 = _A(N4 ^ v5, l3 ^ AA2, 48), c4 = (tA2 = t3) + H4 | 0, N4 = D4 = h4 + _4 | 0, c4 = _A(D4 ^ a4, (_4 = D4 >>> 0 < h4 >>> 0 ? c4 + 1 | 0 : c4) ^ Y4, 1), Y4 = a4 = t3, D4 = c4, c4 = M4 + Q4 | 0, c4 = ((y4 = y4 + g6 | 0) >>> 0 < g6 >>> 0 ? c4 + 1 | 0 : c4) + a4 | 0, c4 = (y4 = (a4 = D4 + y4 | 0) >>> 0 < y4 >>> 0 ? c4 + 1 | 0 : c4) + m4 | 0, H4 = M4 = a4 + j2 | 0, M4 = c4 = M4 >>> 0 < a4 >>> 0 ? c4 + 1 | 0 : c4, a4 = _A(a4 ^ f4, y4 ^ P4, 32), c4 = u4 + (v5 = t3) | 0, n4 = c4 = (f4 = a4 + n4 | 0) >>> 0 < n4 >>> 0 ? c4 + 1 | 0 : c4, y4 = _A(D4 ^ f4, c4 ^ Y4, 40), c4 = (l3 = t3) + M4 | 0, M4 = D4 = y4 + H4 | 0, a4 = _A(D4 ^ a4, v5 ^ (Y4 = D4 >>> 0 < y4 >>> 0 ? c4 + 1 | 0 : c4), 48), c4 = n4 + (H4 = t3) | 0, v5 = c4 = (n4 = a4 + f4 | 0) >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(y4 ^ n4, l3 ^ c4, 1), c4 = (l3 = t3) + d4 | 0, c4 = sA2 + ((f4 = D4 + Z2 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (y4 = (f4 = f4 + V2 | 0) >>> 0 < V2 >>> 0 ? c4 + 1 | 0 : c4) + K4 | 0, FA2 = K4 = f4 + aA2 | 0, K4 = c4 = K4 >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4, u4 = D4, m4 = f4, P4 = y4, f4 = fA2, D4 = _A(r4 ^ R4, J4 ^ CA2, 1), c4 = b4 + (r4 = t3) | 0, c4 = ((y4 = S4) >>> 0 > (S4 = D4 + S4 | 0) >>> 0 ? c4 + 1 | 0 : c4) + wA2 | 0, c4 = pA2 + (y4 = (f4 = f4 + S4 | 0) >>> 0 < S4 >>> 0 ? c4 + 1 | 0 : c4) | 0, b4 = S4 = f4 + DA2 | 0, R4 = c4 = S4 >>> 0 < DA2 >>> 0 ? c4 + 1 | 0 : c4, S4 = D4, y4 = c4 = _A(f4 ^ h4, y4 ^ tA2, 32), c4 = U4 + IA2 | 0, c4 = (J4 = D4 = t3) + (w4 = (D4 = w4 + O2 | 0) >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4) | 0, U4 = c4 = (h4 = D4 + y4 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4, S4 = _A(h4 ^ S4, c4 ^ r4, 40), c4 = (IA2 = t3) + R4 | 0, R4 = _A(b4 = (f4 = S4 + b4 | 0) ^ y4, J4 ^ (y4 = f4 >>> 0 < S4 >>> 0 ? c4 + 1 | 0 : c4), 48), c4 = _A(R4 ^ m4, (CA2 = t3) ^ P4, 32), tA2 = r4 = t3, b4 = c4, J4 = r4, D4 = _A(D4 ^ k4, w4 ^ W2, 1), c4 = yA2 + (r4 = t3) | 0, c4 = G4 + ((w4 = D4 + z2 | 0) >>> 0 < z2 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = MA2 + (s4 = (w4 = w4 + s4 | 0) >>> 0 < s4 >>> 0 ? c4 + 1 | 0 : c4) | 0, m4 = k4 = w4 + QA2 | 0, k4 = c4 = k4 >>> 0 < QA2 >>> 0 ? c4 + 1 | 0 : c4, G4 = D4, O2 = r4, w4 = _A(w4 ^ p4, s4 ^ $2, 32), c4 = (p4 = t3) + _4 | 0, r4 = D4 = w4 + N4 | 0, s4 = _A(D4 ^ G4, (N4 = D4 >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4) ^ O2, 40), c4 = (W2 = t3) + k4 | 0, G4 = D4 = s4 + m4 | 0, D4 = _A(D4 ^ w4, p4 ^ (_4 = D4 >>> 0 < s4 >>> 0 ? c4 + 1 | 0 : c4), 48), c4 = N4 + (m4 = t3) | 0, k4 = D4, N4 = D4 = r4 + D4 | 0, p4 = c4 = D4 >>> 0 < r4 >>> 0 ? c4 + 1 | 0 : c4, c4 = c4 + J4 | 0, J4 = D4 = D4 + b4 | 0, w4 = l3, l3 = c4 = N4 >>> 0 > D4 >>> 0 ? c4 + 1 | 0 : c4, w4 = _A(D4 ^ u4, w4 ^ c4, 40), c4 = (c4 = K4) + (K4 = t3) | 0, O2 = D4 = w4 + FA2 | 0, u4 = c4 = D4 >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4, r4 = y4, D4 = _A(L4 ^ Z2, d4 ^ HA2, 48), c4 = T2 + ($2 = t3) | 0, T2 = D4, y4 = (D4 = F4 + D4 | 0) ^ e4, e4 = c4 = D4 >>> 0 < F4 >>> 0 ? c4 + 1 | 0 : c4, y4 = _A(y4, c4 ^ x4, 1), c4 = (x4 = t3) + r4 | 0, c4 = B4 + ((f4 = y4 + f4 | 0) >>> 0 < y4 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (r4 = (f4 = f4 + kA2 | 0) >>> 0 < kA2 >>> 0 ? c4 + 1 | 0 : c4) + q4 | 0, Z2 = F4 = f4 + cA2 | 0, F4 = c4 = F4 >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4, f4 = _A(f4 ^ k4, r4 ^ m4, 32), c4 = v5 + (d4 = t3) | 0, v5 = f4, n4 = c4 = (r4 = n4 + f4 | 0) >>> 0 < n4 >>> 0 ? c4 + 1 | 0 : c4, y4 = _A(y4 ^ r4, x4 ^ c4, 40), c4 = (c4 = F4) + (F4 = t3) | 0, k4 = f4 = y4 + Z2 | 0, f4 = _A(L4 = f4 ^ v5, d4 ^ (v5 = f4 >>> 0 < y4 >>> 0 ? c4 + 1 | 0 : c4), 48), c4 = n4 + (FA2 = t3) | 0, x4 = f4, Z2 = c4 = (n4 = r4 + f4 | 0) >>> 0 < r4 >>> 0 ? c4 + 1 | 0 : c4, f4 = _A(y4 ^ n4, F4 ^ c4, 1), c4 = (F4 = t3) + u4 | 0, c4 = Q4 + ((y4 = f4 + O2 | 0) >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = X2 + (r4 = (y4 = y4 + g6 | 0) >>> 0 < g6 >>> 0 ? c4 + 1 | 0 : c4) | 0, HA2 = d4 = I7 + y4 | 0, d4 = c4 = d4 >>> 0 < I7 >>> 0 ? c4 + 1 | 0 : c4, L4 = f4, m4 = F4, F4 = y4, P4 = r4, f4 = _A(s4 ^ N4, p4 ^ W2, 1), c4 = (r4 = t3) + Y4 | 0, c4 = hA2 + ((y4 = f4 + M4 | 0) >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (s4 = (y4 = y4 + iA2 | 0) >>> 0 < iA2 >>> 0 ? c4 + 1 | 0 : c4) + X2 | 0, Y4 = M4 = I7 + y4 | 0, M4 = c4 = M4 >>> 0 < y4 >>> 0 ? c4 + 1 | 0 : c4, N4 = f4, y4 = c4 = _A(y4 ^ T2, s4 ^ $2, 32), s4 = f4 = t3, c4 = U4 + CA2 | 0, U4 = c4 = (f4 = h4 + R4 | 0) >>> 0 < h4 >>> 0 ? c4 + 1 | 0 : c4, c4 = c4 + s4 | 0, c4 = (h4 = f4) >>> 0 > (f4 = f4 + y4 | 0) >>> 0 ? c4 + 1 | 0 : c4, R4 = f4, f4 ^= N4, N4 = c4, r4 = _A(f4, c4 ^ r4, 40), c4 = (W2 = t3) + M4 | 0, s4 = _A(M4 = (f4 = r4 + Y4 | 0) ^ y4, s4 ^ (y4 = f4 >>> 0 < r4 >>> 0 ? c4 + 1 | 0 : c4), 48), c4 = _A(s4 ^ F4, (c4 = P4) ^ (P4 = t3), 32), $2 = F4 = t3, M4 = c4, Y4 = e4, e4 = a4, c4 = _A(h4 ^ S4, U4 ^ IA2, 1), p4 = a4 = t3, h4 = c4, c4 = _4 + SA2 | 0, c4 = ((S4 = G4 + eA2 | 0) >>> 0 < eA2 >>> 0 ? c4 + 1 | 0 : c4) + a4 | 0, S4 = c4 = (a4 = h4 + S4 | 0) >>> 0 < S4 >>> 0 ? c4 + 1 | 0 : c4, e4 = _A(a4 ^ e4, c4 ^ H4, 32), c4 = (c4 = Y4) + (Y4 = t3) | 0, h4 = _A((D4 = e4 + D4 | 0) ^ h4, p4 ^ (U4 = D4 >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4), 40), c4 = S4 + (IA2 = t3) | 0, G4 = h4, c4 = NA2 + ((_4 = a4) >>> 0 > (a4 = a4 + h4 | 0) >>> 0 ? c4 + 1 | 0 : c4) | 0, _4 = c4 = (h4 = a4 + EA2 | 0) >>> 0 < EA2 >>> 0 ? c4 + 1 | 0 : c4, a4 = _A(e4 ^ h4, Y4 ^ c4, 48), c4 = U4 + (CA2 = t3) | 0, H4 = D4, e4 = a4, U4 = D4 = D4 + a4 | 0, Y4 = c4 = H4 >>> 0 > D4 >>> 0 ? c4 + 1 | 0 : c4, c4 = c4 + F4 | 0, H4 = c4 = (F4 = D4 + M4 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4, D4 = (S4 = _A(F4 ^ L4, c4 ^ m4, 40)) + HA2 | 0, c4 = (HA2 = t3) + d4 | 0, p4 = D4, T2 = D4 >>> 0 < S4 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(b4 ^ O2, u4 ^ tA2, 48), c4 = (b4 = t3) + l3 | 0, J4 = a4 = D4 + J4 | 0, L4 = K4, K4 = c4 = a4 >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4, c4 = _A(a4 ^ w4, L4 ^ c4, 1), O2 = a4 = t3, w4 = c4, c4 = y4 + B4 | 0, c4 = ((f4 = f4 + kA2 | 0) >>> 0 < kA2 >>> 0 ? c4 + 1 | 0 : c4) + a4 | 0, c4 = sA2 + (f4 = (a4 = f4 + w4 | 0) >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4) | 0, u4 = y4 = a4 + V2 | 0, y4 = c4 = y4 >>> 0 < V2 >>> 0 ? c4 + 1 | 0 : c4, a4 = _A(a4 ^ e4, f4 ^ CA2, 32), c4 = Z2 + (d4 = t3) | 0, l3 = a4, a4 = (e4 = n4 + a4 | 0) ^ w4, w4 = c4 = e4 >>> 0 < n4 >>> 0 ? c4 + 1 | 0 : c4, f4 = _A(a4, O2 ^ c4, 40), c4 = (c4 = y4) + (y4 = t3) | 0, O2 = a4 = f4 + u4 | 0, a4 = _A(n4 = a4 ^ l3, d4 ^ (l3 = a4 >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4), 48), c4 = w4 + (CA2 = t3) | 0, Z2 = a4, e4 = c4 = (a4 = e4 + a4 | 0) >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4, f4 = _A(a4 ^ f4, y4 ^ c4, 1), c4 = (n4 = t3) + T2 | 0, c4 = nA2 + ((y4 = f4 + p4 | 0) >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (w4 = (y4 = y4 + oA2 | 0) >>> 0 < oA2 >>> 0 ? c4 + 1 | 0 : c4) + BA2 | 0, AA2 = u4 = y4 + j2 | 0, u4 = c4 = u4 >>> 0 < y4 >>> 0 ? c4 + 1 | 0 : c4, d4 = f4, L4 = y4, m4 = w4, f4 = _A(G4 ^ U4, Y4 ^ IA2, 1), c4 = (Y4 = t3) + rA2 | 0, c4 = v5 + (f4 >>> 0 > (y4 = f4 + gA2 | 0) >>> 0 ? c4 + 1 | 0 : c4) | 0, w4 = c4 = (y4 = y4 + k4 | 0) >>> 0 < k4 >>> 0 ? c4 + 1 | 0 : c4, c4 = _A(D4 ^ y4, c4 ^ b4, 32), b4 = D4 = t3, k4 = c4, c4 = N4 + P4 | 0, c4 = (D4 = s4 + R4 | 0) >>> 0 < s4 >>> 0 ? c4 + 1 | 0 : c4, s4 = D4, U4 = c4, c4 = b4 + c4 | 0, N4 = D4 = D4 + k4 | 0, G4 = c4 = s4 >>> 0 > D4 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(D4 ^ f4, Y4 ^ c4, 40), c4 = w4 + (P4 = t3) | 0, R4 = D4, c4 = yA2 + ((D4 = y4 + D4 | 0) >>> 0 < y4 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (D4 = D4 + z2 | 0) >>> 0 < z2 >>> 0 ? c4 + 1 | 0 : c4, Y4 = D4, D4 ^= k4, k4 = c4, w4 = _A(D4, b4 ^ c4, 48), c4 = _A(w4 ^ L4, (c4 = m4) ^ (m4 = t3), 32), IA2 = D4 = t3, b4 = c4, v5 = D4, D4 = _A(r4 ^ s4, U4 ^ W2, 1), c4 = SA2 + (y4 = t3) | 0, c4 = _4 + ((f4 = D4 + eA2 | 0) >>> 0 < eA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (r4 = (f4 = f4 + h4 | 0) >>> 0 < h4 >>> 0 ? c4 + 1 | 0 : c4) + q4 | 0, _4 = s4 = f4 + cA2 | 0, s4 = c4 = s4 >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4, h4 = D4, U4 = y4, D4 = (f4 = _A(f4 ^ x4, r4 ^ FA2, 32)) + J4 | 0, c4 = (J4 = t3) + K4 | 0, y4 = D4, r4 = _A(r4 = D4 ^ h4, (h4 = D4 >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4) ^ U4, 40), c4 = (W2 = t3) + s4 | 0, s4 = D4 = r4 + _4 | 0, f4 = _A(D4 ^ f4, J4 ^ (K4 = D4 >>> 0 < r4 >>> 0 ? c4 + 1 | 0 : c4), 48), c4 = h4 + (U4 = t3) | 0, _4 = D4 = f4 + y4 | 0, J4 = c4 = D4 >>> 0 < y4 >>> 0 ? c4 + 1 | 0 : c4, c4 = c4 + v5 | 0, v5 = c4 = (h4 = D4 + b4 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4, y4 = _A(h4 ^ d4, c4 ^ n4, 40), c4 = (x4 = t3) + u4 | 0, u4 = D4 = y4 + AA2 | 0, d4 = c4 = D4 >>> 0 < y4 >>> 0 ? c4 + 1 | 0 : c4, D4 = a4, n4 = e4, e4 = f4, a4 = _A(M4 ^ p4, T2 ^ $2, 48), c4 = H4 + (AA2 = t3) | 0, M4 = a4, F4 = c4 = (f4 = F4 + a4 | 0) >>> 0 < F4 >>> 0 ? c4 + 1 | 0 : c4, c4 = _A(f4 ^ S4, HA2 ^ c4, 1), H4 = a4 = t3, S4 = c4, c4 = k4 + KA2 | 0, c4 = ((k4 = Y4 + aA2 | 0) >>> 0 < aA2 >>> 0 ? c4 + 1 | 0 : c4) + a4 | 0, k4 = c4 = (a4 = k4 + S4 | 0) >>> 0 < k4 >>> 0 ? c4 + 1 | 0 : c4, e4 = _A(a4 ^ e4, c4 ^ U4, 32), c4 = (Y4 = t3) + n4 | 0, S4 = _A((D4 = e4 + D4 | 0) ^ S4, H4 ^ (n4 = D4 >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4), 40), c4 = k4 + (p4 = t3) | 0, c4 = MA2 + ((k4 = a4) >>> 0 > (a4 = a4 + S4 | 0) >>> 0 ? c4 + 1 | 0 : c4) | 0, U4 = c4 = (k4 = a4 + QA2 | 0) >>> 0 < QA2 >>> 0 ? c4 + 1 | 0 : c4, a4 = _A(e4 ^ k4, Y4 ^ c4, 48), c4 = n4 + ($2 = t3) | 0, Y4 = a4, H4 = c4 = (n4 = D4 + a4 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(n4 ^ S4, p4 ^ c4, 1), c4 = (S4 = t3) + d4 | 0, c4 = hA2 + ((a4 = D4 + u4 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = nA2 + (e4 = (a4 = a4 + iA2 | 0) >>> 0 < iA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, tA2 = p4 = a4 + oA2 | 0, p4 = c4 = p4 >>> 0 < oA2 >>> 0 ? c4 + 1 | 0 : c4, T2 = D4, L4 = a4, D4 = _A(r4 ^ _4, J4 ^ W2, 1), c4 = (r4 = t3) + l3 | 0, c4 = pA2 + ((a4 = D4 + O2 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = NA2 + (_4 = (a4 = a4 + DA2 | 0) >>> 0 < DA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, O2 = J4 = a4 + EA2 | 0, J4 = c4 = J4 >>> 0 < EA2 >>> 0 ? c4 + 1 | 0 : c4, l3 = D4, c4 = _A(a4 ^ M4, _4 ^ AA2, 32), AA2 = D4 = t3, a4 = c4, c4 = G4 + m4 | 0, N4 = D4 = w4 + N4 | 0, M4 = c4 = D4 >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4, c4 = AA2 + c4 | 0, G4 = c4 = (w4 = D4 + a4 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4, r4 = _A(w4 ^ l3, c4 ^ r4, 40), c4 = (m4 = t3) + J4 | 0, _4 = D4 = r4 + O2 | 0, l3 = _A(D4 ^ a4, AA2 ^ (J4 = D4 >>> 0 < r4 >>> 0 ? c4 + 1 | 0 : c4), 48), c4 = _A(l3 ^ L4, (AA2 = t3) ^ e4, 32), W2 = D4 = t3, O2 = c4, e4 = D4, a4 = fA2, D4 = _A(N4 ^ R4, M4 ^ P4, 1), c4 = K4 + (M4 = t3) | 0, c4 = ((N4 = s4) >>> 0 > (s4 = D4 + s4 | 0) >>> 0 ? c4 + 1 | 0 : c4) + wA2 | 0, c4 = hA2 + (s4 = (a4 = a4 + s4 | 0) >>> 0 < s4 >>> 0 ? c4 + 1 | 0 : c4) | 0, N4 = K4 = a4 + iA2 | 0, K4 = c4 = K4 >>> 0 < iA2 >>> 0 ? c4 + 1 | 0 : c4, a4 = _A(a4 ^ Z2, s4 ^ CA2, 32), c4 = F4 + (R4 = t3) | 0, F4 = a4, c4 = (a4 = f4 + a4 | 0) >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4, f4 = M4, M4 = c4, f4 = _A(D4 ^ a4, f4 ^ c4, 40), c4 = (P4 = t3) + K4 | 0, s4 = D4 = f4 + N4 | 0, D4 = _A(D4 ^ F4, R4 ^ (K4 = D4 >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4), 48), c4 = M4 + (L4 = t3) | 0, M4 = D4, N4 = D4 = a4 + D4 | 0, R4 = c4 = D4 >>> 0 < a4 >>> 0 ? c4 + 1 | 0 : c4, c4 = c4 + e4 | 0, c4 = (F4 = D4 + O2 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4, D4 = F4 ^ T2, T2 = c4, S4 = _A(D4, c4 ^ S4, 40), c4 = (CA2 = t3) + p4 | 0, p4 = D4 = S4 + tA2 | 0, Z2 = D4 >>> 0 < S4 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(b4 ^ u4, d4 ^ IA2, 48), c4 = v5 + (IA2 = t3) | 0, b4 = D4, c4 = (D4 = h4 + D4 | 0) >>> 0 < h4 >>> 0 ? c4 + 1 | 0 : c4, h4 = D4, v5 = c4, c4 = _A(D4 ^ y4, c4 ^ x4, 1), x4 = D4 = t3, e4 = c4, c4 = J4 + sA2 | 0, c4 = ((a4 = _4 + V2 | 0) >>> 0 < V2 >>> 0 ? c4 + 1 | 0 : c4) + D4 | 0, c4 = MA2 + (a4 = (D4 = a4 + e4 | 0) >>> 0 < a4 >>> 0 ? c4 + 1 | 0 : c4) | 0, _4 = y4 = D4 + QA2 | 0, y4 = c4 = y4 >>> 0 < QA2 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(D4 ^ M4, a4 ^ L4, 32), c4 = H4 + (J4 = t3) | 0, M4 = D4, n4 = c4 = (a4 = n4 + D4 | 0) >>> 0 < n4 >>> 0 ? c4 + 1 | 0 : c4, e4 = _A(a4 ^ e4, x4 ^ c4, 40), c4 = (x4 = t3) + y4 | 0, _4 = D4 = e4 + _4 | 0, D4 = _A(y4 = D4 ^ M4, J4 ^ (M4 = D4 >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4), 48), c4 = n4 + (tA2 = t3) | 0, n4 = D4, H4 = c4 = (y4 = a4 + D4 | 0) >>> 0 < a4 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(y4 ^ e4, x4 ^ c4, 1), c4 = (J4 = t3) + Z2 | 0, c4 = SA2 + ((a4 = D4 + p4 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (e4 = (a4 = a4 + eA2 | 0) >>> 0 < eA2 >>> 0 ? c4 + 1 | 0 : c4) + rA2 | 0, FA2 = x4 = a4 + gA2 | 0, x4 = c4 = x4 >>> 0 < a4 >>> 0 ? c4 + 1 | 0 : c4, u4 = D4, d4 = a4, L4 = e4, D4 = _A(f4 ^ N4, P4 ^ R4, 1), c4 = pA2 + (e4 = t3) | 0, c4 = U4 + ((a4 = D4 + DA2 | 0) >>> 0 < DA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = KA2 + (f4 = (a4 = a4 + k4 | 0) >>> 0 < k4 >>> 0 ? c4 + 1 | 0 : c4) | 0, R4 = k4 = a4 + aA2 | 0, k4 = c4 = k4 >>> 0 < aA2 >>> 0 ? c4 + 1 | 0 : c4, U4 = D4, N4 = e4, c4 = _A(a4 ^ b4, f4 ^ IA2, 32), b4 = D4 = t3, f4 = c4, a4 = D4, c4 = G4 + AA2 | 0, c4 = (D4 = w4 + l3 | 0) >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4, w4 = D4, G4 = c4, c4 = c4 + a4 | 0, c4 = (e4 = D4 + f4 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4, D4 = e4 ^ U4, U4 = c4, D4 = _A(D4, c4 ^ N4, 40), c4 = (c4 = k4) + (k4 = t3) | 0, N4 = a4 = D4 + R4 | 0, R4 = c4 = a4 >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4, b4 = _A(a4 ^ f4, b4 ^ c4, 48), c4 = _A(b4 ^ d4, (c4 = L4) ^ (L4 = t3), 32), P4 = a4 = t3, l3 = c4, a4 = _A(w4 ^ r4, G4 ^ m4, 1), c4 = (w4 = t3) + wA2 | 0, c4 = K4 + ((f4 = a4 + fA2 | 0) >>> 0 < a4 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = B4 + (r4 = (f4 = f4 + s4 | 0) >>> 0 < s4 >>> 0 ? c4 + 1 | 0 : c4) | 0, m4 = s4 = f4 + kA2 | 0, s4 = c4 = s4 >>> 0 < kA2 >>> 0 ? c4 + 1 | 0 : c4, K4 = a4, G4 = w4, f4 = _A(f4 ^ Y4, r4 ^ $2, 32), c4 = (Y4 = t3) + v5 | 0, w4 = a4 = f4 + h4 | 0, a4 = (r4 = _A(a4 ^ K4, (h4 = a4 >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4) ^ G4, 40)) + m4 | 0, c4 = (m4 = t3) + s4 | 0, K4 = a4, a4 = _A(a4 ^ f4, Y4 ^ (G4 = a4 >>> 0 < r4 >>> 0 ? c4 + 1 | 0 : c4), 48), c4 = h4 + (AA2 = t3) | 0, Y4 = a4, v5 = a4 = w4 + a4 | 0, d4 = c4 = a4 >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4, c4 = P4 + c4 | 0, c4 = (f4 = a4 + l3 | 0) >>> 0 < a4 >>> 0 ? c4 + 1 | 0 : c4, a4 = J4, J4 = c4, w4 = _A(f4 ^ u4, a4 ^ c4, 40), c4 = (IA2 = t3) + x4 | 0, s4 = a4 = w4 + FA2 | 0, c4 = _A(a4 ^ l3, P4 ^ (x4 = a4 >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4), 48), P4 = a4 = t3, l3 = c4, a4 = D4, c4 = U4 + L4 | 0, U4 = D4 = e4 + b4 | 0, b4 = c4 = D4 >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4, c4 = _A(D4 ^ a4, c4 ^ k4, 1), e4 = a4 = t3, D4 = c4, c4 = G4 + Q4 | 0, c4 = ((h4 = K4 + g6 | 0) >>> 0 < g6 >>> 0 ? c4 + 1 | 0 : c4) + a4 | 0, c4 = yA2 + (h4 = (a4 = D4 + h4 | 0) >>> 0 < h4 >>> 0 ? c4 + 1 | 0 : c4) | 0, L4 = k4 = a4 + z2 | 0, k4 = c4 = k4 >>> 0 < z2 >>> 0 ? c4 + 1 | 0 : c4, K4 = D4, G4 = e4, D4 = _A(p4 ^ O2, Z2 ^ W2, 48), c4 = T2 + (W2 = t3) | 0, p4 = D4, c4 = (D4 = F4 + D4 | 0) >>> 0 < F4 >>> 0 ? c4 + 1 | 0 : c4, F4 = D4, a4 = _A(a4 ^ n4, h4 ^ tA2, 32), T2 = c4, c4 = c4 + (O2 = t3) | 0, e4 = D4 = a4 + D4 | 0, h4 = _A(D4 ^ K4, (n4 = D4 >>> 0 < a4 >>> 0 ? c4 + 1 | 0 : c4) ^ G4, 40), c4 = (Z2 = t3) + k4 | 0, k4 = D4 = h4 + L4 | 0, D4 = _A(D4 ^ a4, O2 ^ (K4 = D4 >>> 0 < h4 >>> 0 ? c4 + 1 | 0 : c4), 48), c4 = n4 + ($2 = t3) | 0, G4 = D4, O2 = c4 = (n4 = e4 + D4 | 0) >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(h4 ^ n4, Z2 ^ c4, 1), c4 = MA2 + (L4 = t3) | 0, Z2 = D4, tA2 = D4 = QA2 + D4 | 0, e4 = c4 = D4 >>> 0 < QA2 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(S4 ^ F4, T2 ^ CA2, 1), c4 = (h4 = t3) + R4 | 0, c4 = NA2 + ((a4 = D4 + N4 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = BA2 + (F4 = (a4 = a4 + EA2 | 0) >>> 0 < EA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, T2 = S4 = a4 + j2 | 0, S4 = c4 = S4 >>> 0 < j2 >>> 0 ? c4 + 1 | 0 : c4, N4 = h4, a4 = _A(a4 ^ Y4, F4 ^ AA2, 32), c4 = H4 + (AA2 = t3) | 0, R4 = a4, c4 = (h4 = y4 + a4 | 0) >>> 0 < y4 >>> 0 ? c4 + 1 | 0 : c4, y4 = N4, N4 = c4, F4 = _A(D4 ^ h4, y4 ^ c4, 40), c4 = (CA2 = t3) + S4 | 0, Y4 = D4 = F4 + T2 | 0, c4 = (H4 = D4 >>> 0 < F4 >>> 0 ? c4 + 1 | 0 : c4) + e4 | 0, S4 = c4 = (e4 = D4 + tA2 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4, T2 = c4 = _A(e4 ^ l3, c4 ^ P4, 32), u4 = D4 = t3, D4 = _A(r4 ^ v5, d4 ^ m4, 1), c4 = (y4 = t3) + M4 | 0, c4 = X2 + ((a4 = D4 + _4 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (r4 = (a4 = I7 + a4 | 0) >>> 0 < I7 >>> 0 ? c4 + 1 | 0 : c4) + q4 | 0, d4 = M4 = a4 + cA2 | 0, M4 = c4 = M4 >>> 0 < a4 >>> 0 ? c4 + 1 | 0 : c4, _4 = D4, v5 = y4, a4 = _A(a4 ^ p4, r4 ^ W2, 32), c4 = (p4 = t3) + b4 | 0, y4 = D4 = a4 + U4 | 0, D4 = (r4 = _A(D4 ^ _4, (U4 = D4 >>> 0 < a4 >>> 0 ? c4 + 1 | 0 : c4) ^ v5, 40)) + d4 | 0, c4 = (d4 = t3) + M4 | 0, M4 = D4, D4 = _A(D4 ^ a4, p4 ^ (_4 = D4 >>> 0 < r4 >>> 0 ? c4 + 1 | 0 : c4), 48), c4 = U4 + (W2 = t3) | 0, U4 = D4, p4 = c4 = (D4 = y4 + D4 | 0) >>> 0 < y4 >>> 0 ? c4 + 1 | 0 : c4, c4 = c4 + u4 | 0, b4 = c4 = (y4 = D4) >>> 0 > (D4 = D4 + T2 | 0) >>> 0 ? c4 + 1 | 0 : c4, a4 = _A(D4 ^ Z2, L4 ^ c4, 40), c4 = S4 + (L4 = t3) | 0, v5 = a4, c4 = Q4 + ((a4 = e4 + a4 | 0) >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4) | 0, Z2 = a4 = a4 + g6 | 0, e4 = a4 ^ T2, T2 = c4 = a4 >>> 0 < g6 >>> 0 ? c4 + 1 | 0 : c4, a4 = _A(e4, u4 ^ c4, 48), c4 = b4 + (u4 = t3) | 0, b4 = c4 = (S4 = D4 + a4 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4, D4 = c4 = _A(S4 ^ v5, L4 ^ c4, 1), v5 = e4 = t3, e4 = _A(y4 ^ r4, p4 ^ d4, 1), c4 = K4 + (r4 = t3) | 0, c4 = NA2 + ((y4 = e4 + k4 | 0) >>> 0 < k4 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = hA2 + (k4 = (y4 = y4 + EA2 | 0) >>> 0 < EA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, L4 = K4 = y4 + iA2 | 0, K4 = c4 = K4 >>> 0 < iA2 >>> 0 ? c4 + 1 | 0 : c4, p4 = e4, d4 = r4, c4 = J4 + P4 | 0, c4 = (e4 = f4 + l3 | 0) >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4, J4 = e4, R4 = _A(Y4 ^ R4, H4 ^ AA2, 48), r4 = _A(y4 ^ R4, k4 ^ (AA2 = t3), 32), Y4 = c4, c4 = c4 + (tA2 = t3) | 0, k4 = e4 = r4 + e4 | 0, e4 = _A(e4 ^ p4, (H4 = e4 >>> 0 < r4 >>> 0 ? c4 + 1 | 0 : c4) ^ d4, 40), c4 = (p4 = t3) + K4 | 0, d4 = c4 = (f4 = e4 + L4 | 0) >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4, c4 = c4 + v5 | 0, c4 = B4 + ((l3 = f4) >>> 0 > (f4 = D4 + f4 | 0) >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (y4 = (f4 = f4 + kA2 | 0) >>> 0 < kA2 >>> 0 ? c4 + 1 | 0 : c4) + wA2 | 0, FA2 = K4 = f4 + fA2 | 0, L4 = c4 = K4 >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4, m4 = D4, P4 = f4, c4 = _A(w4 ^ J4, Y4 ^ IA2, 1), w4 = f4 = t3, D4 = c4, c4 = _4 + pA2 | 0, c4 = ((K4 = M4 + DA2 | 0) >>> 0 < DA2 >>> 0 ? c4 + 1 | 0 : c4) + f4 | 0, c4 = yA2 + (K4 = (f4 = D4 + K4 | 0) >>> 0 < K4 >>> 0 ? c4 + 1 | 0 : c4) | 0, Y4 = M4 = f4 + z2 | 0, M4 = c4 = M4 >>> 0 < z2 >>> 0 ? c4 + 1 | 0 : c4, _4 = D4, c4 = _A(f4 ^ G4, K4 ^ $2, 32), J4 = D4 = t3, f4 = c4, K4 = D4, c4 = N4 + AA2 | 0, N4 = D4 = h4 + R4 | 0, G4 = c4 = D4 >>> 0 < h4 >>> 0 ? c4 + 1 | 0 : c4, c4 = c4 + K4 | 0, c4 = (h4 = D4 + f4 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4, D4 = h4 ^ _4;
                      _4 = c4, K4 = _A(D4, c4 ^ w4, 40), c4 = (AA2 = t3) + M4 | 0, R4 = _A(M4 = (D4 = K4 + Y4 | 0) ^ f4, J4 ^ (f4 = D4 >>> 0 < K4 >>> 0 ? c4 + 1 | 0 : c4), 48), c4 = _A(c4 = R4 ^ P4, (P4 = t3) ^ y4, 32), IA2 = y4 = t3, Y4 = c4, M4 = y4, y4 = _A(F4 ^ N4, G4 ^ CA2, 1), c4 = BA2 + (F4 = t3) | 0, c4 = x4 + ((w4 = y4 + j2 | 0) >>> 0 < j2 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = SA2 + (s4 = (w4 = w4 + s4 | 0) >>> 0 < s4 >>> 0 ? c4 + 1 | 0 : c4) | 0, G4 = N4 = w4 + eA2 | 0, N4 = c4 = N4 >>> 0 < eA2 >>> 0 ? c4 + 1 | 0 : c4, w4 = _A(w4 ^ U4, s4 ^ W2, 32), c4 = O2 + (J4 = t3) | 0, U4 = w4, n4 = c4 = (w4 = n4 + w4 | 0) >>> 0 < n4 >>> 0 ? c4 + 1 | 0 : c4, s4 = _A(y4 ^ w4, c4 ^ F4, 40), c4 = (W2 = t3) + N4 | 0, F4 = y4 = s4 + G4 | 0, y4 = _A(N4 = y4 ^ U4, J4 ^ (U4 = y4 >>> 0 < s4 >>> 0 ? c4 + 1 | 0 : c4), 48), c4 = n4 + ($2 = t3) | 0, N4 = y4, G4 = y4 = w4 + y4 | 0, J4 = c4 = y4 >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4, c4 = c4 + M4 | 0, c4 = (w4 = y4 + Y4 | 0) >>> 0 < y4 >>> 0 ? c4 + 1 | 0 : c4, y4 = v5, v5 = c4, n4 = _A(w4 ^ m4, y4 ^ c4, 40), c4 = (x4 = t3) + L4 | 0, M4 = y4 = n4 + FA2 | 0, y4 = _A(L4 = y4 ^ Y4, IA2 ^ (Y4 = y4 >>> 0 < n4 >>> 0 ? c4 + 1 | 0 : c4), 48), c4 = v5 + (IA2 = t3) | 0, v5 = y4, w4 = c4 = (y4 = w4 + y4 | 0) >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4, x4 = c4 = _A(y4 ^ n4, x4 ^ c4, 1), CA2 = c4, O2 = n4 = t3, n4 = f4, f4 = e4, e4 = _A(r4 ^ l3, d4 ^ tA2, 48), c4 = H4 + (tA2 = t3) | 0, H4 = e4, c4 = (e4 = k4 + e4 | 0) >>> 0 < k4 >>> 0 ? c4 + 1 | 0 : c4, k4 = D4, D4 = f4 ^ e4, f4 = c4, D4 = _A(D4, c4 ^ p4, 1), c4 = (p4 = t3) + n4 | 0, c4 = KA2 + (D4 >>> 0 > (r4 = k4 + D4 | 0) >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = rA2 + (k4 = (r4 = r4 + aA2 | 0) >>> 0 < aA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, l3 = n4 = r4 + gA2 | 0, n4 = c4 = n4 >>> 0 < gA2 >>> 0 ? c4 + 1 | 0 : c4, r4 = _A(r4 ^ N4, k4 ^ $2, 32), c4 = b4 + (d4 = t3) | 0, N4 = c4 = (k4 = r4 + S4 | 0) >>> 0 < S4 >>> 0 ? c4 + 1 | 0 : c4, S4 = _A(D4 ^ k4, p4 ^ c4, 40), c4 = ($2 = t3) + n4 | 0, p4 = D4 = S4 + l3 | 0, r4 = _A(D4 ^ r4, d4 ^ (b4 = D4 >>> 0 < S4 >>> 0 ? c4 + 1 | 0 : c4), 48), c4 = N4 + (l3 = t3) | 0, d4 = D4 = r4 + k4 | 0, N4 = D4, L4 = c4 = D4 >>> 0 < k4 >>> 0 ? c4 + 1 | 0 : c4, k4 = e4, n4 = f4, c4 = _4 + P4 | 0, c4 = (D4 = h4 + R4 | 0) >>> 0 < h4 >>> 0 ? c4 + 1 | 0 : c4, h4 = D4, D4 ^= K4, K4 = c4, c4 = _A(D4, AA2 ^ c4, 1), m4 = D4 = t3, _4 = c4, f4 = c4, c4 = U4 + q4 | 0, c4 = ((e4 = F4 + cA2 | 0) >>> 0 < cA2 >>> 0 ? c4 + 1 | 0 : c4) + D4 | 0, F4 = c4 = (D4 = e4) >>> 0 > (e4 = f4 + e4 | 0) >>> 0 ? c4 + 1 | 0 : c4, f4 = _A(a4 ^ e4, c4 ^ u4, 32), c4 = (c4 = n4) + (n4 = t3) | 0, R4 = D4 = f4 + k4 | 0, a4 = _A(a4 = D4 ^ _4, m4 ^ (_4 = D4 >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4), 40), c4 = F4 + (u4 = t3) | 0, c4 = sA2 + ((D4 = a4 + e4 | 0) >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4) | 0, m4 = c4 = (k4 = D4 + V2 | 0) >>> 0 < V2 >>> 0 ? c4 + 1 | 0 : c4, n4 = _A(f4 ^ k4, n4 ^ c4, 48), FA2 = c4 = t3, D4 = _A(s4 ^ G4, J4 ^ W2, 1), c4 = (f4 = t3) + T2 | 0, c4 = nA2 + ((e4 = D4 + Z2 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = X2 + (s4 = (e4 = e4 + oA2 | 0) >>> 0 < oA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, T2 = F4 = I7 + e4 | 0, G4 = c4 = F4 >>> 0 < I7 >>> 0 ? c4 + 1 | 0 : c4, J4 = D4, F4 = _A(e4 ^ H4, s4 ^ tA2, 32), c4 = (W2 = t3) + K4 | 0, K4 = D4 = F4 + h4 | 0, e4 = _A(D4 ^ J4, (H4 = D4 >>> 0 < F4 >>> 0 ? c4 + 1 | 0 : c4) ^ f4, 40), c4 = (c4 = G4) + (G4 = t3) | 0, J4 = D4 = e4 + T2 | 0, T2 = c4 = D4 >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4, f4 = c4, c4 = X2 + O2 | 0, c4 = ((s4 = I7 + x4 | 0) >>> 0 < I7 >>> 0 ? c4 + 1 | 0 : c4) + f4 | 0, U4 = c4 = (f4 = D4 + s4 | 0) >>> 0 < s4 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(f4 ^ n4, FA2 ^ c4, 32), c4 = (x4 = t3) + L4 | 0, h4 = _A((s4 = D4 + N4 | 0) ^ CA2, (c4 = s4 >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4) ^ O2, 40), O2 = c4, c4 = rA2 + (N4 = t3) | 0, c4 = U4 + ((Z2 = h4 + gA2 | 0) >>> 0 < gA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (U4 = f4 + Z2 | 0) >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4, f4 = x4, x4 = c4, f4 = _A(D4 ^ U4, f4 ^ c4, 48), c4 = (c4 = O2) + (O2 = t3) | 0, D4 = h4 ^ (s4 = f4 + s4 | 0), h4 = c4 = s4 >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4, Z2 = c4 = _A(D4, c4 ^ N4, 1), CA2 = c4, P4 = D4 = t3, N4 = y4, AA2 = w4, y4 = e4, e4 = _A(F4 ^ J4, T2 ^ W2, 48), c4 = H4 + (J4 = t3) | 0, F4 = D4 = e4 + K4 | 0, K4 = c4 = D4 >>> 0 < K4 >>> 0 ? c4 + 1 | 0 : c4, y4 = _A(D4 ^ y4, c4 ^ G4, 1), c4 = (T2 = t3) + KA2 | 0, c4 = m4 + ((D4 = y4 + aA2 | 0) >>> 0 < y4 >>> 0 ? c4 + 1 | 0 : c4) | 0, k4 = c4 = (w4 = D4 + k4 | 0) >>> 0 < k4 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(w4 ^ r4, c4 ^ l3, 32), c4 = (G4 = t3) + AA2 | 0, N4 = r4 = D4 + N4 | 0, H4 = c4 = r4 >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4, y4 = _A(y4 ^ r4, c4 ^ T2, 40), c4 = hA2 + (tA2 = t3) | 0, T2 = y4, c4 = k4 + ((y4 = iA2 + y4 | 0) >>> 0 < iA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, w4 = c4 = (y4 = y4 + w4 | 0) >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4, r4 = _A(D4 ^ y4, c4 ^ G4, 48), c4 = (c4 = H4) + (H4 = t3) | 0, l3 = D4 = r4 + N4 | 0, G4 = D4, m4 = c4 = D4 >>> 0 < r4 >>> 0 ? c4 + 1 | 0 : c4, c4 = _4 + FA2 | 0, N4 = (D4 = n4 + R4 | 0) ^ a4, a4 = c4 = D4 >>> 0 < n4 >>> 0 ? c4 + 1 | 0 : c4, c4 = _A(N4, c4 ^ u4, 1), u4 = k4 = t3, N4 = c4, c4 = b4 + yA2 | 0, c4 = ((n4 = p4 + z2 | 0) >>> 0 < z2 >>> 0 ? c4 + 1 | 0 : c4) + k4 | 0, _4 = c4 = (_4 = n4) >>> 0 > (n4 = n4 + N4 | 0) >>> 0 ? c4 + 1 | 0 : c4, R4 = k4 = _A(n4 ^ v5, IA2 ^ c4, 32), p4 = c4 = t3, c4 = c4 + K4 | 0, b4 = k4 = k4 + F4 | 0, v5 = c4 = R4 >>> 0 > k4 >>> 0 ? c4 + 1 | 0 : c4, k4 = _A(k4 ^ N4, u4 ^ c4, 40), c4 = wA2 + (u4 = t3) | 0, c4 = _4 + ((F4 = k4 + fA2 | 0) >>> 0 < fA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, F4 = c4 = (N4 = n4) >>> 0 > (n4 = n4 + F4 | 0) >>> 0 ? c4 + 1 | 0 : c4, N4 = _A(n4 ^ R4, c4 ^ p4, 48), IA2 = c4 = t3, K4 = c4, S4 = _A(S4 ^ d4, L4 ^ $2, 1), _4 = c4 = t3, R4 = e4, c4 = c4 + q4 | 0, c4 = Y4 + ((e4 = S4 + cA2 | 0) >>> 0 < cA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (e4 = e4 + M4 | 0) >>> 0 < M4 >>> 0 ? c4 + 1 | 0 : c4, M4 = e4 ^ R4, R4 = c4, M4 = _A(M4, c4 ^ J4, 32), c4 = ($2 = t3) + a4 | 0, Y4 = D4 = M4 + D4 | 0, a4 = _A(D4 ^ S4, (a4 = _4) ^ (_4 = D4 >>> 0 < M4 >>> 0 ? c4 + 1 | 0 : c4), 40), c4 = nA2 + (p4 = t3) | 0, c4 = R4 + ((D4 = a4 + oA2 | 0) >>> 0 < oA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, R4 = D4 = D4 + e4 | 0, J4 = c4 = D4 >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4, e4 = c4, c4 = P4 + NA2 | 0, c4 = ((S4 = Z2 + EA2 | 0) >>> 0 < EA2 >>> 0 ? c4 + 1 | 0 : c4) + e4 | 0, Z2 = c4 = (e4 = D4 + S4 | 0) >>> 0 < S4 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(e4 ^ N4, c4 ^ K4, 32), c4 = (d4 = t3) + m4 | 0, K4 = _A((S4 = D4 + G4 | 0) ^ CA2, (c4 = S4 >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4) ^ P4, 40), L4 = G4 = t3, P4 = c4, c4 = G4 + SA2 | 0, c4 = Z2 + ((G4 = K4 + eA2 | 0) >>> 0 < eA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, Z2 = c4 = (G4 = e4 + G4 | 0) >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4, e4 = _A(D4 ^ G4, c4 ^ d4, 48), c4 = (d4 = t3) + P4 | 0, D4 = (S4 = e4 + S4 | 0) ^ K4, K4 = c4 = S4 >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4, L4 = c4 = _A(D4, c4 ^ L4, 1), P4 = D4 = t3, AA2 = s4, W2 = r4, r4 = a4, a4 = _A(M4 ^ R4, J4 ^ $2, 48), c4 = (M4 = t3) + _4 | 0, _4 = D4 = a4 + Y4 | 0, R4 = c4 = D4 >>> 0 < a4 >>> 0 ? c4 + 1 | 0 : c4, r4 = _A(D4 ^ r4, c4 ^ p4, 1), c4 = (p4 = t3) + MA2 | 0, c4 = ((D4 = r4 + QA2 | 0) >>> 0 < r4 >>> 0 ? c4 + 1 | 0 : c4) + F4 | 0, n4 = c4 = (s4 = D4 + n4 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(s4 ^ W2, c4 ^ H4, 32), c4 = (F4 = t3) + h4 | 0, Y4 = h4 = D4 + AA2 | 0, H4 = c4 = h4 >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4, r4 = _A(r4 ^ h4, c4 ^ p4, 40), c4 = B4 + (W2 = t3) | 0, p4 = r4, c4 = n4 + ((r4 = kA2 + r4 | 0) >>> 0 < kA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, J4 = c4 = (h4 = r4 + s4 | 0) >>> 0 < s4 >>> 0 ? c4 + 1 | 0 : c4, r4 = _A(D4 ^ h4, c4 ^ F4, 48), c4 = (c4 = H4) + (H4 = t3) | 0, Y4 = D4 = r4 + Y4 | 0, AA2 = c4 = D4 >>> 0 < r4 >>> 0 ? c4 + 1 | 0 : c4, n4 = f4, s4 = y4, c4 = v5 + IA2 | 0, f4 = c4 = (D4 = N4 + b4 | 0) >>> 0 < N4 >>> 0 ? c4 + 1 | 0 : c4, y4 = _A(D4 ^ k4, c4 ^ u4, 1), c4 = (k4 = t3) + BA2 | 0, c4 = ((F4 = y4 + j2 | 0) >>> 0 < y4 >>> 0 ? c4 + 1 | 0 : c4) + w4 | 0, w4 = _A(n4 ^ (s4 = s4 + F4 | 0), (c4 = s4 >>> 0 < F4 >>> 0 ? c4 + 1 | 0 : c4) ^ O2, 32), F4 = c4, N4 = y4, c4 = (n4 = t3) + R4 | 0, c4 = (y4 = w4 + _4 | 0) >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4, _4 = y4, y4 ^= N4, N4 = c4, y4 = _A(y4, c4 ^ k4, 40), c4 = Q4 + (R4 = t3) | 0, c4 = ((k4 = y4 + g6 | 0) >>> 0 < g6 >>> 0 ? c4 + 1 | 0 : c4) + F4 | 0, b4 = c4 = (F4 = k4) >>> 0 > (k4 = k4 + s4 | 0) >>> 0 ? c4 + 1 | 0 : c4, n4 = _A(w4 ^ k4, c4 ^ n4, 48), IA2 = c4 = t3, s4 = c4, w4 = _A(l3 ^ T2, m4 ^ tA2, 1), v5 = c4 = t3, T2 = f4, c4 = c4 + sA2 | 0, c4 = x4 + ((f4 = w4 + V2 | 0) >>> 0 < V2 >>> 0 ? c4 + 1 | 0 : c4) | 0, F4 = M4, M4 = c4 = (f4 = f4 + U4 | 0) >>> 0 < U4 >>> 0 ? c4 + 1 | 0 : c4, F4 = _A(a4 ^ f4, F4 ^ c4, 32), c4 = ($2 = t3) + T2 | 0, U4 = D4 = F4 + D4 | 0, a4 = _A(D4 ^ w4, (a4 = v5) ^ (v5 = D4 >>> 0 < F4 >>> 0 ? c4 + 1 | 0 : c4), 40), c4 = pA2 + (T2 = t3) | 0, c4 = M4 + ((D4 = a4 + DA2 | 0) >>> 0 < DA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, x4 = D4 = D4 + f4 | 0, l3 = c4 = D4 >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4, f4 = c4, c4 = P4 + yA2 | 0, c4 = ((w4 = z2 + L4 | 0) >>> 0 < z2 >>> 0 ? c4 + 1 | 0 : c4) + f4 | 0, M4 = c4 = (f4 = D4 + w4 | 0) >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(f4 ^ n4, c4 ^ s4, 32), c4 = (O2 = t3) + AA2 | 0, s4 = _A((w4 = D4 + Y4 | 0) ^ L4, (c4 = w4 >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4) ^ P4, 40), L4 = c4, c4 = q4 + (u4 = t3) | 0, c4 = M4 + ((m4 = s4 + cA2 | 0) >>> 0 < cA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (M4 = f4 + m4 | 0) >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4, f4 = O2, O2 = c4, f4 = _A(D4 ^ M4, f4 ^ c4, 48), c4 = (c4 = L4) + (L4 = t3) | 0, D4 = (w4 = f4 + w4 | 0) ^ s4, s4 = c4 = w4 >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4, u4 = c4 = _A(D4, c4 ^ u4, 1), m4 = D4 = t3, P4 = r4, r4 = a4, a4 = _A(F4 ^ x4, l3 ^ $2, 48), c4 = (c4 = v5) + (v5 = t3) | 0, U4 = D4 = a4 + U4 | 0, F4 = T2, T2 = c4 = D4 >>> 0 < a4 >>> 0 ? c4 + 1 | 0 : c4, r4 = _A(D4 ^ r4, F4 ^ c4, 1), c4 = (x4 = t3) + SA2 | 0, c4 = b4 + ((D4 = r4 + eA2 | 0) >>> 0 < r4 >>> 0 ? c4 + 1 | 0 : c4) | 0, F4 = k4, k4 = D4 + k4 | 0, D4 = H4, H4 = c4 = F4 >>> 0 > k4 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(k4 ^ P4, D4 ^ c4, 32), c4 = (c4 = K4) + (K4 = t3) | 0, b4 = c4 = (F4 = D4 + S4 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4, S4 = F4, r4 = _A(r4 ^ F4, c4 ^ x4, 40), c4 = sA2 + ($2 = t3) | 0, x4 = r4, c4 = H4 + ((r4 = V2 + r4 | 0) >>> 0 < V2 >>> 0 ? c4 + 1 | 0 : c4) | 0, H4 = c4 = (F4 = r4 + k4 | 0) >>> 0 < k4 >>> 0 ? c4 + 1 | 0 : c4, r4 = _A(D4 ^ F4, c4 ^ K4, 48), c4 = (c4 = b4) + (b4 = t3) | 0, l3 = D4 = r4 + S4 | 0, P4 = c4 = D4 >>> 0 < r4 >>> 0 ? c4 + 1 | 0 : c4, S4 = e4, c4 = N4 + IA2 | 0, e4 = c4 = (D4 = n4 + _4 | 0) >>> 0 < n4 >>> 0 ? c4 + 1 | 0 : c4, y4 = _A(D4 ^ y4, c4 ^ R4, 1), c4 = rA2 + (n4 = t3) | 0, c4 = J4 + ((k4 = y4 + gA2 | 0) >>> 0 < gA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, N4 = (k4 = h4 + k4 | 0) ^ S4, S4 = c4 = k4 >>> 0 < h4 >>> 0 ? c4 + 1 | 0 : c4, h4 = _A(N4, c4 ^ d4, 32), K4 = c4 = t3, N4 = y4, c4 = c4 + T2 | 0, c4 = (y4 = h4 + U4 | 0) >>> 0 < h4 >>> 0 ? c4 + 1 | 0 : c4, _4 = y4, y4 ^= N4, N4 = c4, y4 = _A(y4, c4 ^ n4, 40), c4 = Q4 + (R4 = t3) | 0, c4 = S4 + ((n4 = y4 + g6 | 0) >>> 0 < g6 >>> 0 ? c4 + 1 | 0 : c4) | 0, J4 = c4 = (n4 = k4 + n4 | 0) >>> 0 < k4 >>> 0 ? c4 + 1 | 0 : c4, S4 = _A(h4 ^ n4, c4 ^ K4, 48), IA2 = c4 = t3, k4 = c4, h4 = _A(p4 ^ Y4, W2 ^ AA2, 1), U4 = c4 = t3, Y4 = e4, c4 = c4 + B4 | 0, c4 = Z2 + ((e4 = h4 + kA2 | 0) >>> 0 < kA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, G4 = c4 = (e4 = e4 + G4 | 0) >>> 0 < G4 >>> 0 ? c4 + 1 | 0 : c4, K4 = _A(a4 ^ e4, c4 ^ v5, 32), c4 = (CA2 = t3) + Y4 | 0, Y4 = D4 = K4 + D4 | 0, a4 = _A(D4 ^ h4, (p4 = D4 >>> 0 < K4 >>> 0 ? c4 + 1 | 0 : c4) ^ U4, 40), c4 = X2 + (v5 = t3) | 0, c4 = G4 + ((D4 = I7 + a4 | 0) >>> 0 < I7 >>> 0 ? c4 + 1 | 0 : c4) | 0, G4 = D4 = D4 + e4 | 0, T2 = c4 = D4 >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4, e4 = c4, c4 = m4 + nA2 | 0, c4 = ((h4 = u4 + oA2 | 0) >>> 0 < oA2 >>> 0 ? c4 + 1 | 0 : c4) + e4 | 0, U4 = c4 = (e4 = D4 + h4 | 0) >>> 0 < h4 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(e4 ^ S4, c4 ^ k4, 32), c4 = (Z2 = t3) + P4 | 0, k4 = _A((h4 = D4 + l3 | 0) ^ u4, (c4 = h4 >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4) ^ m4, 40), d4 = c4, c4 = KA2 + (u4 = t3) | 0, c4 = U4 + ((m4 = k4 + aA2 | 0) >>> 0 < aA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (U4 = e4 + m4 | 0) >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4, e4 = Z2, Z2 = c4, e4 = _A(D4 ^ U4, e4 ^ c4, 48), c4 = (c4 = d4) + (d4 = t3) | 0, D4 = (h4 = e4 + h4 | 0) ^ k4, k4 = c4 = h4 >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4, u4 = c4 = _A(D4, c4 ^ u4, 1), tA2 = c4, m4 = D4 = t3, AA2 = w4, W2 = r4, w4 = a4, a4 = _A(K4 ^ G4, T2 ^ CA2, 48), c4 = (K4 = t3) + p4 | 0, G4 = D4 = a4 + Y4 | 0, Y4 = c4 = D4 >>> 0 < a4 >>> 0 ? c4 + 1 | 0 : c4, w4 = _A(D4 ^ w4, c4 ^ v5, 1), c4 = (v5 = t3) + wA2 | 0, c4 = J4 + ((D4 = w4 + fA2 | 0) >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4) | 0, n4 = c4 = (r4 = D4 + n4 | 0) >>> 0 < n4 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(r4 ^ W2, c4 ^ b4, 32), c4 = (p4 = t3) + s4 | 0, b4 = c4 = (s4 = D4 + AA2 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4, w4 = _A(w4 ^ s4, c4 ^ v5, 40), c4 = MA2 + (CA2 = t3) | 0, J4 = w4, c4 = n4 + ((w4 = QA2 + w4 | 0) >>> 0 < QA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, n4 = w4 + r4 | 0, w4 = p4, p4 = c4 = n4 >>> 0 < r4 >>> 0 ? c4 + 1 | 0 : c4, w4 = _A(D4 ^ n4, w4 ^ c4, 48), c4 = (c4 = b4) + (b4 = t3) | 0, v5 = D4 = w4 + s4 | 0, T2 = c4 = D4 >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4, r4 = f4, c4 = N4 + IA2 | 0, f4 = c4 = (D4 = S4 + _4 | 0) >>> 0 < S4 >>> 0 ? c4 + 1 | 0 : c4, y4 = _A(D4 ^ y4, c4 ^ R4, 1), c4 = (S4 = t3) + pA2 | 0, c4 = H4 + ((s4 = y4 + DA2 | 0) >>> 0 < y4 >>> 0 ? c4 + 1 | 0 : c4) | 0, r4 = _A(r4 ^ (s4 = s4 + F4 | 0), (c4 = s4 >>> 0 < F4 >>> 0 ? c4 + 1 | 0 : c4) ^ L4, 32), N4 = F4 = t3, F4 = c4, _4 = y4, c4 = N4 + Y4 | 0, c4 = (y4 = r4 + G4 | 0) >>> 0 < r4 >>> 0 ? c4 + 1 | 0 : c4, G4 = y4, y4 ^= _4, _4 = c4, y4 = _A(y4, c4 ^ S4, 40), c4 = hA2 + (R4 = t3) | 0, c4 = ((S4 = y4 + iA2 | 0) >>> 0 < iA2 >>> 0 ? c4 + 1 | 0 : c4) + F4 | 0, H4 = N4, N4 = c4 = (F4 = s4 + S4 | 0) >>> 0 < S4 >>> 0 ? c4 + 1 | 0 : c4, S4 = _A(r4 ^ F4, H4 ^ c4, 48), IA2 = c4 = t3, s4 = c4, r4 = _A(l3 ^ x4, P4 ^ $2, 1), Y4 = c4 = t3, H4 = f4, c4 = c4 + BA2 | 0, c4 = O2 + ((f4 = r4 + j2 | 0) >>> 0 < j2 >>> 0 ? c4 + 1 | 0 : c4) | 0, M4 = c4 = (f4 = f4 + M4 | 0) >>> 0 < M4 >>> 0 ? c4 + 1 | 0 : c4, K4 = _A(a4 ^ f4, c4 ^ K4, 32), c4 = ($2 = t3) + H4 | 0, H4 = D4 = K4 + D4 | 0, a4 = _A(D4 ^ r4, (a4 = Y4) ^ (Y4 = D4 >>> 0 < K4 >>> 0 ? c4 + 1 | 0 : c4), 40), c4 = NA2 + (x4 = t3) | 0, c4 = M4 + ((D4 = a4 + EA2 | 0) >>> 0 < EA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, l3 = D4 = D4 + f4 | 0, O2 = c4 = D4 >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4, f4 = c4, c4 = m4 + Q4 | 0, c4 = ((r4 = u4 + g6 | 0) >>> 0 < g6 >>> 0 ? c4 + 1 | 0 : c4) + f4 | 0, M4 = c4 = (f4 = D4 + r4 | 0) >>> 0 < r4 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(f4 ^ S4, c4 ^ s4, 32), c4 = (u4 = t3) + T2 | 0, s4 = _A((r4 = D4 + v5 | 0) ^ tA2, (c4 = r4 >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4) ^ m4, 40), m4 = c4, c4 = SA2 + (L4 = t3) | 0, c4 = M4 + ((P4 = s4 + eA2 | 0) >>> 0 < eA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (M4 = f4 + P4 | 0) >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4, f4 = u4, u4 = c4, f4 = _A(D4 ^ M4, f4 ^ c4, 48), c4 = (c4 = m4) + (m4 = t3) | 0, D4 = (r4 = f4 + r4 | 0) ^ s4, s4 = c4 = r4 >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4, L4 = c4 = _A(D4, c4 ^ L4, 1), P4 = D4 = t3, AA2 = h4, W2 = w4, w4 = a4, a4 = _A(K4 ^ l3, O2 ^ $2, 48), c4 = (K4 = t3) + Y4 | 0, Y4 = D4 = a4 + H4 | 0, H4 = c4 = D4 >>> 0 < a4 >>> 0 ? c4 + 1 | 0 : c4, w4 = _A(D4 ^ w4, c4 ^ x4, 1), c4 = (x4 = t3) + MA2 | 0, c4 = N4 + ((D4 = w4 + QA2 | 0) >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4) | 0, F4 = c4 = (h4 = D4 + F4 | 0) >>> 0 < F4 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(h4 ^ W2, c4 ^ b4, 32), c4 = (N4 = t3) + k4 | 0, b4 = c4 = (k4 = D4 + AA2 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4, w4 = _A(w4 ^ k4, c4 ^ x4, 40), c4 = BA2 + ($2 = t3) | 0, x4 = w4, c4 = F4 + ((w4 = j2 + w4 | 0) >>> 0 < j2 >>> 0 ? c4 + 1 | 0 : c4) | 0, F4 = w4 + h4 | 0, w4 = N4, N4 = c4 = F4 >>> 0 < h4 >>> 0 ? c4 + 1 | 0 : c4, w4 = _A(D4 ^ F4, w4 ^ c4, 48), c4 = (c4 = b4) + (b4 = t3) | 0, l3 = D4 = w4 + k4 | 0, O2 = c4 = D4 >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4, h4 = e4, c4 = _4 + IA2 | 0, e4 = c4 = (D4 = S4 + G4 | 0) >>> 0 < S4 >>> 0 ? c4 + 1 | 0 : c4, y4 = _A(D4 ^ y4, c4 ^ R4, 1), c4 = NA2 + (S4 = t3) | 0, c4 = p4 + ((k4 = y4 + EA2 | 0) >>> 0 < EA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, n4 = c4 = (k4 = k4 + n4 | 0) >>> 0 < n4 >>> 0 ? c4 + 1 | 0 : c4, h4 = _A(h4 ^ k4, c4 ^ d4, 32), G4 = c4 = t3, _4 = y4, c4 = c4 + H4 | 0, c4 = (y4 = h4 + Y4 | 0) >>> 0 < h4 >>> 0 ? c4 + 1 | 0 : c4, R4 = y4, y4 ^= _4, _4 = c4, y4 = _A(y4, c4 ^ S4, 40), c4 = nA2 + (Y4 = t3) | 0, c4 = n4 + ((S4 = y4 + oA2 | 0) >>> 0 < oA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (n4 = k4 + S4 | 0) >>> 0 < k4 >>> 0 ? c4 + 1 | 0 : c4, k4 = G4, G4 = c4, S4 = _A(h4 ^ n4, k4 ^ c4, 48), IA2 = c4 = t3, k4 = c4, h4 = _A(J4 ^ v5, T2 ^ CA2, 1), H4 = c4 = t3, p4 = e4, c4 = c4 + X2 | 0, c4 = Z2 + ((e4 = I7 + h4 | 0) >>> 0 < I7 >>> 0 ? c4 + 1 | 0 : c4) | 0, U4 = c4 = (e4 = e4 + U4 | 0) >>> 0 < U4 >>> 0 ? c4 + 1 | 0 : c4, K4 = _A(a4 ^ e4, c4 ^ K4, 32), c4 = (CA2 = t3) + p4 | 0, p4 = D4 = K4 + D4 | 0, a4 = _A(D4 ^ h4, (a4 = H4) ^ (H4 = D4 >>> 0 < K4 >>> 0 ? c4 + 1 | 0 : c4), 40), c4 = sA2 + (J4 = t3) | 0, c4 = U4 + ((D4 = a4 + V2 | 0) >>> 0 < V2 >>> 0 ? c4 + 1 | 0 : c4) | 0, v5 = D4 = D4 + e4 | 0, T2 = c4 = D4 >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4, e4 = c4, c4 = P4 + rA2 | 0, c4 = ((h4 = L4 + gA2 | 0) >>> 0 < gA2 >>> 0 ? c4 + 1 | 0 : c4) + e4 | 0, U4 = c4 = (e4 = D4 + h4 | 0) >>> 0 < h4 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(e4 ^ S4, c4 ^ k4, 32), c4 = (Z2 = t3) + O2 | 0, k4 = _A((h4 = D4 + l3 | 0) ^ L4, (c4 = h4 >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4) ^ P4, 40), L4 = c4, c4 = B4 + (d4 = t3) | 0, c4 = U4 + ((P4 = k4 + kA2 | 0) >>> 0 < kA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (U4 = e4 + P4 | 0) >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4, e4 = Z2, Z2 = c4, e4 = _A(D4 ^ U4, e4 ^ c4, 48), c4 = (c4 = L4) + (L4 = t3) | 0, D4 = (h4 = e4 + h4 | 0) ^ k4, k4 = c4 = h4 >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4, d4 = c4 = _A(D4, c4 ^ d4, 1), P4 = D4 = t3, AA2 = r4, W2 = w4, w4 = a4, a4 = _A(K4 ^ v5, T2 ^ CA2, 48), c4 = (K4 = t3) + H4 | 0, H4 = D4 = a4 + p4 | 0, p4 = c4 = D4 >>> 0 < a4 >>> 0 ? c4 + 1 | 0 : c4, w4 = _A(D4 ^ w4, c4 ^ J4, 1), c4 = (J4 = t3) + yA2 | 0, c4 = G4 + ((D4 = w4 + z2 | 0) >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4) | 0, n4 = c4 = (r4 = D4 + n4 | 0) >>> 0 < n4 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(r4 ^ W2, c4 ^ b4, 32), c4 = (G4 = t3) + s4 | 0, b4 = c4 = (s4 = D4 + AA2 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4, w4 = _A(w4 ^ s4, c4 ^ J4, 40), c4 = pA2 + (CA2 = t3) | 0, J4 = w4, c4 = n4 + ((w4 = DA2 + w4 | 0) >>> 0 < DA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, n4 = w4 + r4 | 0, w4 = G4, G4 = c4 = n4 >>> 0 < r4 >>> 0 ? c4 + 1 | 0 : c4, w4 = _A(D4 ^ n4, w4 ^ c4, 48), c4 = (c4 = b4) + (b4 = t3) | 0, v5 = D4 = w4 + s4 | 0, T2 = c4 = D4 >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4, r4 = f4, c4 = _4 + IA2 | 0, f4 = c4 = (D4 = S4 + R4 | 0) >>> 0 < S4 >>> 0 ? c4 + 1 | 0 : c4, y4 = _A(D4 ^ y4, c4 ^ Y4, 1), c4 = (S4 = t3) + hA2 | 0, c4 = N4 + ((s4 = y4 + iA2 | 0) >>> 0 < y4 >>> 0 ? c4 + 1 | 0 : c4) | 0, F4 = c4 = (s4 = s4 + F4 | 0) >>> 0 < F4 >>> 0 ? c4 + 1 | 0 : c4, r4 = _A(r4 ^ s4, c4 ^ m4, 32), N4 = c4 = t3, _4 = y4, c4 = c4 + p4 | 0, c4 = (y4 = r4 + H4 | 0) >>> 0 < r4 >>> 0 ? c4 + 1 | 0 : c4, R4 = y4, y4 ^= _4, _4 = c4, y4 = _A(y4, c4 ^ S4, 40), c4 = wA2 + (Y4 = t3) | 0, c4 = F4 + ((S4 = y4 + fA2 | 0) >>> 0 < fA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, H4 = N4, N4 = c4 = (F4 = s4 + S4 | 0) >>> 0 < s4 >>> 0 ? c4 + 1 | 0 : c4, S4 = _A(r4 ^ F4, H4 ^ c4, 48), IA2 = c4 = t3, s4 = c4, r4 = _A(l3 ^ x4, O2 ^ $2, 1), H4 = c4 = t3, p4 = f4, c4 = c4 + q4 | 0, c4 = u4 + ((f4 = r4 + cA2 | 0) >>> 0 < cA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, M4 = c4 = (f4 = f4 + M4 | 0) >>> 0 < M4 >>> 0 ? c4 + 1 | 0 : c4, K4 = _A(a4 ^ f4, c4 ^ K4, 32), c4 = ($2 = t3) + p4 | 0, p4 = D4 = K4 + D4 | 0, a4 = _A(D4 ^ r4, (a4 = H4) ^ (H4 = D4 >>> 0 < K4 >>> 0 ? c4 + 1 | 0 : c4), 40), c4 = KA2 + (x4 = t3) | 0, c4 = M4 + ((D4 = a4 + aA2 | 0) >>> 0 < aA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, l3 = D4 = D4 + f4 | 0, O2 = c4 = D4 >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4, f4 = c4, c4 = P4 + B4 | 0, c4 = ((r4 = d4 + kA2 | 0) >>> 0 < kA2 >>> 0 ? c4 + 1 | 0 : c4) + f4 | 0, M4 = c4 = (f4 = D4 + r4 | 0) >>> 0 < r4 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(f4 ^ S4, c4 ^ s4, 32), c4 = (u4 = t3) + T2 | 0, s4 = _A((r4 = D4 + v5 | 0) ^ d4, (c4 = r4 >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4) ^ P4, 40), m4 = c4, c4 = NA2 + (d4 = t3) | 0, c4 = M4 + ((P4 = s4 + EA2 | 0) >>> 0 < EA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (M4 = f4 + P4 | 0) >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4, f4 = u4, u4 = c4, f4 = _A(D4 ^ M4, f4 ^ c4, 48), c4 = (c4 = m4) + (m4 = t3) | 0, D4 = (r4 = f4 + r4 | 0) ^ s4, s4 = c4 = r4 >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4, d4 = c4 = _A(D4, c4 ^ d4, 1), P4 = D4 = t3, AA2 = h4, W2 = w4, w4 = a4, a4 = _A(K4 ^ l3, O2 ^ $2, 48), c4 = (K4 = t3) + H4 | 0, H4 = D4 = a4 + p4 | 0, p4 = c4 = D4 >>> 0 < a4 >>> 0 ? c4 + 1 | 0 : c4, w4 = _A(D4 ^ w4, c4 ^ x4, 1), c4 = (x4 = t3) + q4 | 0, c4 = N4 + ((D4 = w4 + cA2 | 0) >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4) | 0, F4 = c4 = (h4 = D4 + F4 | 0) >>> 0 < F4 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(h4 ^ W2, c4 ^ b4, 32), c4 = (N4 = t3) + k4 | 0, b4 = c4 = (k4 = D4 + AA2 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4, w4 = _A(w4 ^ k4, c4 ^ x4, 40), c4 = wA2 + ($2 = t3) | 0, x4 = w4, c4 = F4 + ((w4 = fA2 + w4 | 0) >>> 0 < fA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, F4 = w4 + h4 | 0, w4 = N4, N4 = c4 = F4 >>> 0 < h4 >>> 0 ? c4 + 1 | 0 : c4, w4 = _A(D4 ^ F4, w4 ^ c4, 48), c4 = (c4 = b4) + (b4 = t3) | 0, l3 = D4 = w4 + k4 | 0, O2 = c4 = D4 >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4, h4 = e4, c4 = _4 + IA2 | 0, e4 = c4 = (D4 = S4 + R4 | 0) >>> 0 < S4 >>> 0 ? c4 + 1 | 0 : c4, y4 = _A(D4 ^ y4, c4 ^ Y4, 1), c4 = hA2 + (S4 = t3) | 0, c4 = G4 + ((k4 = y4 + iA2 | 0) >>> 0 < iA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, n4 = c4 = (k4 = k4 + n4 | 0) >>> 0 < n4 >>> 0 ? c4 + 1 | 0 : c4, h4 = _A(h4 ^ k4, c4 ^ L4, 32), G4 = c4 = t3, _4 = y4, c4 = c4 + p4 | 0, c4 = (y4 = h4 + H4 | 0) >>> 0 < h4 >>> 0 ? c4 + 1 | 0 : c4, R4 = y4, y4 ^= _4, _4 = c4, y4 = _A(y4, c4 ^ S4, 40), c4 = pA2 + (Y4 = t3) | 0, c4 = n4 + ((S4 = y4 + DA2 | 0) >>> 0 < DA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (n4 = k4 + S4 | 0) >>> 0 < k4 >>> 0 ? c4 + 1 | 0 : c4, k4 = G4, G4 = c4, S4 = _A(h4 ^ n4, k4 ^ c4, 48), IA2 = c4 = t3, k4 = c4, h4 = _A(J4 ^ v5, T2 ^ CA2, 1), H4 = c4 = t3, p4 = e4, c4 = c4 + BA2 | 0, c4 = Z2 + ((e4 = h4 + j2 | 0) >>> 0 < j2 >>> 0 ? c4 + 1 | 0 : c4) | 0, U4 = c4 = (e4 = e4 + U4 | 0) >>> 0 < U4 >>> 0 ? c4 + 1 | 0 : c4, K4 = _A(a4 ^ e4, c4 ^ K4, 32), c4 = (CA2 = t3) + p4 | 0, p4 = D4 = K4 + D4 | 0, a4 = _A(D4 ^ h4, (a4 = H4) ^ (H4 = D4 >>> 0 < K4 >>> 0 ? c4 + 1 | 0 : c4), 40), c4 = KA2 + (J4 = t3) | 0, c4 = U4 + ((D4 = a4 + aA2 | 0) >>> 0 < aA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, v5 = D4 = D4 + e4 | 0, T2 = c4 = D4 >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4, e4 = c4, c4 = P4 + sA2 | 0, c4 = ((h4 = d4 + V2 | 0) >>> 0 < V2 >>> 0 ? c4 + 1 | 0 : c4) + e4 | 0, U4 = c4 = (e4 = D4 + h4 | 0) >>> 0 < h4 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(e4 ^ S4, c4 ^ k4, 32), c4 = (Z2 = t3) + O2 | 0, k4 = _A((h4 = D4 + l3 | 0) ^ d4, (c4 = h4 >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4) ^ P4, 40), L4 = c4, c4 = X2 + (d4 = t3) | 0, c4 = U4 + ((P4 = I7 + k4 | 0) >>> 0 < I7 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (U4 = e4 + P4 | 0) >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4, e4 = Z2, Z2 = c4, e4 = _A(D4 ^ U4, e4 ^ c4, 48), c4 = (c4 = L4) + (L4 = t3) | 0, D4 = (h4 = e4 + h4 | 0) ^ k4, k4 = c4 = h4 >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4, d4 = c4 = _A(D4, c4 ^ d4, 1), P4 = D4 = t3, AA2 = r4, W2 = w4, w4 = a4, a4 = _A(K4 ^ v5, T2 ^ CA2, 48), c4 = (K4 = t3) + H4 | 0, H4 = D4 = a4 + p4 | 0, p4 = c4 = D4 >>> 0 < a4 >>> 0 ? c4 + 1 | 0 : c4, w4 = _A(D4 ^ w4, c4 ^ J4, 1), c4 = (J4 = t3) + nA2 | 0, c4 = G4 + ((D4 = w4 + oA2 | 0) >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4) | 0, n4 = c4 = (r4 = D4 + n4 | 0) >>> 0 < n4 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(r4 ^ W2, c4 ^ b4, 32), c4 = (G4 = t3) + s4 | 0, b4 = c4 = (s4 = D4 + AA2 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4, w4 = _A(w4 ^ s4, c4 ^ J4, 40), c4 = Q4 + (CA2 = t3) | 0, J4 = w4, c4 = n4 + ((w4 = g6 + w4 | 0) >>> 0 < g6 >>> 0 ? c4 + 1 | 0 : c4) | 0, n4 = w4 + r4 | 0, w4 = G4, G4 = c4 = n4 >>> 0 < r4 >>> 0 ? c4 + 1 | 0 : c4, w4 = _A(D4 ^ n4, w4 ^ c4, 48), c4 = (c4 = b4) + (b4 = t3) | 0, v5 = D4 = w4 + s4 | 0, T2 = c4 = D4 >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4, r4 = f4, c4 = _4 + IA2 | 0, f4 = c4 = (D4 = S4 + R4 | 0) >>> 0 < S4 >>> 0 ? c4 + 1 | 0 : c4, y4 = _A(D4 ^ y4, c4 ^ Y4, 1), c4 = (S4 = t3) + rA2 | 0, c4 = N4 + ((s4 = y4 + gA2 | 0) >>> 0 < y4 >>> 0 ? c4 + 1 | 0 : c4) | 0, F4 = c4 = (s4 = s4 + F4 | 0) >>> 0 < F4 >>> 0 ? c4 + 1 | 0 : c4, r4 = _A(r4 ^ s4, c4 ^ m4, 32), N4 = c4 = t3, _4 = y4, c4 = c4 + p4 | 0, c4 = (y4 = r4 + H4 | 0) >>> 0 < r4 >>> 0 ? c4 + 1 | 0 : c4, R4 = y4, y4 ^= _4, _4 = c4, y4 = _A(y4, c4 ^ S4, 40), c4 = MA2 + (Y4 = t3) | 0, c4 = F4 + ((S4 = y4 + QA2 | 0) >>> 0 < QA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, H4 = N4, N4 = c4 = (F4 = s4 + S4 | 0) >>> 0 < s4 >>> 0 ? c4 + 1 | 0 : c4, S4 = _A(r4 ^ F4, H4 ^ c4, 48), IA2 = c4 = t3, s4 = c4, r4 = _A(l3 ^ x4, O2 ^ $2, 1), H4 = c4 = t3, p4 = f4, c4 = c4 + SA2 | 0, c4 = u4 + ((f4 = r4 + eA2 | 0) >>> 0 < eA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, M4 = c4 = (f4 = f4 + M4 | 0) >>> 0 < M4 >>> 0 ? c4 + 1 | 0 : c4, K4 = _A(a4 ^ f4, c4 ^ K4, 32), c4 = ($2 = t3) + p4 | 0, p4 = D4 = K4 + D4 | 0, a4 = _A(D4 ^ r4, (a4 = H4) ^ (H4 = D4 >>> 0 < K4 >>> 0 ? c4 + 1 | 0 : c4), 40), c4 = yA2 + (x4 = t3) | 0, c4 = M4 + ((D4 = a4 + z2 | 0) >>> 0 < z2 >>> 0 ? c4 + 1 | 0 : c4) | 0, l3 = D4 = D4 + f4 | 0, O2 = c4 = D4 >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4, f4 = c4, c4 = P4 + KA2 | 0, c4 = ((r4 = d4 + aA2 | 0) >>> 0 < aA2 >>> 0 ? c4 + 1 | 0 : c4) + f4 | 0, M4 = c4 = (f4 = D4 + r4 | 0) >>> 0 < r4 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(f4 ^ S4, c4 ^ s4, 32), c4 = (u4 = t3) + T2 | 0, s4 = _A((r4 = D4 + v5 | 0) ^ d4, (c4 = r4 >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4) ^ P4, 40), m4 = c4, c4 = wA2 + (d4 = t3) | 0, c4 = M4 + ((P4 = s4 + fA2 | 0) >>> 0 < fA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (M4 = f4 + P4 | 0) >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4, f4 = u4, u4 = c4, f4 = _A(D4 ^ M4, f4 ^ c4, 48), c4 = (c4 = m4) + (m4 = t3) | 0, D4 = (r4 = f4 + r4 | 0) ^ s4, s4 = c4 = r4 >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4, d4 = c4 = _A(D4, c4 ^ d4, 1), P4 = D4 = t3, AA2 = h4, W2 = w4, w4 = a4, a4 = _A(K4 ^ l3, O2 ^ $2, 48), c4 = (K4 = t3) + H4 | 0, H4 = D4 = a4 + p4 | 0, p4 = c4 = D4 >>> 0 < a4 >>> 0 ? c4 + 1 | 0 : c4, w4 = _A(D4 ^ w4, c4 ^ x4, 1), c4 = (x4 = t3) + NA2 | 0, c4 = N4 + ((D4 = w4 + EA2 | 0) >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4) | 0, F4 = c4 = (h4 = D4 + F4 | 0) >>> 0 < F4 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(h4 ^ W2, c4 ^ b4, 32), c4 = (N4 = t3) + k4 | 0, b4 = c4 = (k4 = D4 + AA2 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4, w4 = _A(w4 ^ k4, c4 ^ x4, 40), c4 = B4 + ($2 = t3) | 0, x4 = w4, c4 = F4 + ((w4 = kA2 + w4 | 0) >>> 0 < kA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, F4 = w4 + h4 | 0, w4 = N4, N4 = c4 = F4 >>> 0 < h4 >>> 0 ? c4 + 1 | 0 : c4, w4 = _A(D4 ^ F4, w4 ^ c4, 48), c4 = (c4 = b4) + (b4 = t3) | 0, l3 = D4 = w4 + k4 | 0, O2 = c4 = D4 >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4, h4 = e4, c4 = _4 + IA2 | 0, e4 = c4 = (D4 = S4 + R4 | 0) >>> 0 < S4 >>> 0 ? c4 + 1 | 0 : c4, y4 = _A(D4 ^ y4, c4 ^ Y4, 1), c4 = MA2 + (S4 = t3) | 0, c4 = G4 + ((k4 = y4 + QA2 | 0) >>> 0 < QA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, n4 = c4 = (k4 = k4 + n4 | 0) >>> 0 < n4 >>> 0 ? c4 + 1 | 0 : c4, h4 = _A(h4 ^ k4, c4 ^ L4, 32), G4 = c4 = t3, _4 = y4, c4 = c4 + p4 | 0, c4 = (y4 = h4 + H4 | 0) >>> 0 < h4 >>> 0 ? c4 + 1 | 0 : c4, R4 = y4, y4 ^= _4, _4 = c4, y4 = _A(y4, c4 ^ S4, 40), c4 = q4 + (Y4 = t3) | 0, c4 = n4 + ((S4 = y4 + cA2 | 0) >>> 0 < cA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (n4 = k4 + S4 | 0) >>> 0 < k4 >>> 0 ? c4 + 1 | 0 : c4, k4 = G4, G4 = c4, S4 = _A(h4 ^ n4, k4 ^ c4, 48), IA2 = c4 = t3, k4 = c4, h4 = _A(J4 ^ v5, T2 ^ CA2, 1), H4 = c4 = t3, p4 = e4, c4 = c4 + pA2 | 0, c4 = Z2 + ((e4 = h4 + DA2 | 0) >>> 0 < DA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, U4 = c4 = (e4 = e4 + U4 | 0) >>> 0 < U4 >>> 0 ? c4 + 1 | 0 : c4, K4 = _A(a4 ^ e4, c4 ^ K4, 32), c4 = (CA2 = t3) + p4 | 0, p4 = D4 = K4 + D4 | 0, a4 = _A(D4 ^ h4, (a4 = H4) ^ (H4 = D4 >>> 0 < K4 >>> 0 ? c4 + 1 | 0 : c4), 40), c4 = SA2 + (J4 = t3) | 0, c4 = U4 + ((D4 = a4 + eA2 | 0) >>> 0 < eA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, v5 = D4 = D4 + e4 | 0, T2 = c4 = D4 >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4, e4 = c4, c4 = P4 + hA2 | 0, c4 = ((h4 = d4 + iA2 | 0) >>> 0 < iA2 >>> 0 ? c4 + 1 | 0 : c4) + e4 | 0, U4 = c4 = (e4 = D4 + h4 | 0) >>> 0 < h4 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(e4 ^ S4, c4 ^ k4, 32), c4 = (Z2 = t3) + O2 | 0, k4 = _A((h4 = D4 + l3 | 0) ^ d4, (c4 = h4 >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4) ^ P4, 40), L4 = c4, c4 = Q4 + (d4 = t3) | 0, c4 = U4 + ((P4 = k4 + g6 | 0) >>> 0 < g6 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (U4 = e4 + P4 | 0) >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4, e4 = Z2, Z2 = c4, e4 = _A(D4 ^ U4, e4 ^ c4, 48), c4 = (c4 = L4) + (L4 = t3) | 0, D4 = (h4 = e4 + h4 | 0) ^ k4, k4 = c4 = h4 >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4, d4 = c4 = _A(D4, c4 ^ d4, 1), P4 = D4 = t3, AA2 = r4, W2 = w4, w4 = a4, a4 = _A(K4 ^ v5, T2 ^ CA2, 48), c4 = (K4 = t3) + H4 | 0, H4 = D4 = a4 + p4 | 0, p4 = c4 = D4 >>> 0 < a4 >>> 0 ? c4 + 1 | 0 : c4, w4 = _A(D4 ^ w4, c4 ^ J4, 1), c4 = (v5 = t3) + BA2 | 0, c4 = G4 + ((D4 = w4 + j2 | 0) >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4) | 0, n4 = c4 = (r4 = D4 + n4 | 0) >>> 0 < n4 >>> 0 ? c4 + 1 | 0 : c4, D4 = _A(r4 ^ W2, c4 ^ b4, 32), c4 = (G4 = t3) + s4 | 0, b4 = s4 = D4 + AA2 | 0, J4 = c4 = s4 >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4, w4 = _A(w4 ^ s4, c4 ^ v5, 40), c4 = sA2 + (AA2 = t3) | 0, v5 = w4, c4 = n4 + ((w4 = V2 + w4 | 0) >>> 0 < V2 >>> 0 ? c4 + 1 | 0 : c4) | 0, s4 = w4 + r4 | 0, w4 = G4, G4 = c4 = s4 >>> 0 < r4 >>> 0 ? c4 + 1 | 0 : c4, w4 = _A(D4 ^ s4, w4 ^ c4, 48), c4 = (c4 = J4) + (J4 = t3) | 0, b4 = D4 = w4 + b4 | 0, T2 = c4 = D4 >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4, r4 = f4, c4 = _4 + IA2 | 0, f4 = c4 = (D4 = S4 + R4 | 0) >>> 0 < S4 >>> 0 ? c4 + 1 | 0 : c4, y4 = _A(D4 ^ y4, c4 ^ Y4, 1), c4 = (S4 = t3) + X2 | 0, c4 = N4 + ((n4 = I7 + y4 | 0) >>> 0 < y4 >>> 0 ? c4 + 1 | 0 : c4) | 0, F4 = c4 = (n4 = n4 + F4 | 0) >>> 0 < F4 >>> 0 ? c4 + 1 | 0 : c4, N4 = r4 = _A(r4 ^ n4, c4 ^ m4, 32), _4 = c4 = t3, R4 = y4, c4 = c4 + p4 | 0, c4 = (y4 = r4 + H4 | 0) >>> 0 < r4 >>> 0 ? c4 + 1 | 0 : c4, Y4 = y4, y4 ^= R4, R4 = c4, y4 = _A(y4, c4 ^ S4, 40), c4 = nA2 + (H4 = t3) | 0, c4 = F4 + ((r4 = y4 + oA2 | 0) >>> 0 < oA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, p4 = (r4 = r4 + n4 | 0) ^ N4, N4 = c4 = r4 >>> 0 < n4 >>> 0 ? c4 + 1 | 0 : c4, n4 = _A(p4, c4 ^ _4, 48), m4 = c4 = t3, S4 = c4, _4 = F4 = _A(l3 ^ x4, O2 ^ $2, 1), p4 = c4 = t3, x4 = f4, c4 = c4 + yA2 | 0, c4 = u4 + ((f4 = F4 + z2 | 0) >>> 0 < z2 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (f4 = f4 + M4 | 0) >>> 0 < M4 >>> 0 ? c4 + 1 | 0 : c4, M4 = K4, K4 = c4, F4 = _A(a4 ^ f4, M4 ^ c4, 32), c4 = (W2 = t3) + x4 | 0, M4 = D4 = F4 + D4 | 0, a4 = _A(a4 = D4 ^ _4, (_4 = D4 >>> 0 < F4 >>> 0 ? c4 + 1 | 0 : c4) ^ p4, 40), c4 = rA2 + (p4 = t3) | 0, c4 = K4 + ((D4 = a4 + gA2 | 0) >>> 0 < gA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, K4 = D4 = D4 + f4 | 0, x4 = c4 = D4 >>> 0 < f4 >>> 0 ? c4 + 1 | 0 : c4, f4 = c4, c4 = P4 + sA2 | 0, c4 = ((u4 = V2) >>> 0 > (V2 = d4 + V2 | 0) >>> 0 ? c4 + 1 | 0 : c4) + f4 | 0, sA2 = c4 = (D4 = D4 + V2 | 0) >>> 0 < V2 >>> 0 ? c4 + 1 | 0 : c4, V2 = _A(D4 ^ n4, c4 ^ S4, 32), c4 = (l3 = t3) + T2 | 0, S4 = _A((f4 = b4 + V2 | 0) ^ d4, (c4 = f4 >>> 0 < V2 >>> 0 ? c4 + 1 | 0 : c4) ^ P4, 40), u4 = c4, c4 = nA2 + (O2 = t3) | 0, c4 = sA2 + ((d4 = oA2) >>> 0 > (oA2 = S4 + oA2 | 0) >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (oA2 = D4 + oA2 | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4, D4 = V2 ^ oA2, V2 = c4, nA2 = _A(D4, c4 ^ l3, 48);
                      c4 = (sA2 = t3) + u4 | 0, f4 = c4 = (D4 = f4 + nA2 | 0) >>> 0 < nA2 >>> 0 ? c4 + 1 | 0 : c4, c4 = _A(D4 ^ S4, c4 ^ O2, 1), S4 = t3, l3 = c4, O2 = h4, h4 = gA2, u4 = rA2, rA2 = _A(F4 ^ K4, x4 ^ W2, 48), c4 = (F4 = t3) + _4 | 0, _4 = h4, M4 = c4 = (gA2 = M4 + rA2 | 0) >>> 0 < rA2 >>> 0 ? c4 + 1 | 0 : c4, h4 = _A(a4 ^ (K4 = gA2), c4 ^ p4, 1), c4 = (p4 = t3) + u4 | 0, c4 = N4 + (h4 >>> 0 > (gA2 = _4 + h4 | 0) >>> 0 ? c4 + 1 | 0 : c4) | 0, a4 = c4 = (gA2 = r4 + gA2 | 0) >>> 0 < r4 >>> 0 ? c4 + 1 | 0 : c4, w4 = _A(w4 ^ gA2, c4 ^ J4, 32), c4 = (c4 = k4) + (k4 = t3) | 0, N4 = r4 = w4 + O2 | 0, _4 = c4 = r4 >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4, r4 = _A(r4 ^ h4, c4 ^ p4, 40), c4 = (p4 = t3) + NA2 | 0, c4 = (r4 >>> 0 > (EA2 = r4 + EA2 | 0) >>> 0 ? c4 + 1 | 0 : c4) + a4 | 0, a4 = c4 = (a4 = EA2) >>> 0 > (EA2 = gA2 + EA2 | 0) >>> 0 ? c4 + 1 | 0 : c4, w4 = _A(w4 ^ EA2, c4 ^ k4, 48), c4 = (h4 = t3) + _4 | 0, k4 = gA2 = w4 + N4 | 0, NA2 = c4 = gA2 >>> 0 < w4 >>> 0 ? c4 + 1 | 0 : c4, N4 = I7, _4 = X2, c4 = R4 + m4 | 0, gA2 = c4 = (I7 = n4 + Y4 | 0) >>> 0 < n4 >>> 0 ? c4 + 1 | 0 : c4, X2 = _A(I7 ^ y4, c4 ^ H4, 1), c4 = (n4 = t3) + _4 | 0, c4 = G4 + ((y4 = N4 + X2 | 0) >>> 0 < X2 >>> 0 ? c4 + 1 | 0 : c4) | 0, e4 = _A((y4 = y4 + s4 | 0) ^ e4, (c4 = y4 >>> 0 < s4 >>> 0 ? c4 + 1 | 0 : c4) ^ L4, 32), N4 = c4, G4 = iA2, iA2 = X2, c4 = (s4 = t3) + M4 | 0, M4 = n4, n4 = c4 = (X2 = e4 + K4 | 0) >>> 0 < e4 >>> 0 ? c4 + 1 | 0 : c4, iA2 = _A(X2 ^ iA2, M4 ^ c4, 40), c4 = (K4 = t3) + hA2 | 0, c4 = ((hA2 = G4 + iA2 | 0) >>> 0 < iA2 >>> 0 ? c4 + 1 | 0 : c4) + N4 | 0, N4 = hA2, y4 = e4 ^ (hA2 = y4 + hA2 | 0), e4 = c4 = N4 >>> 0 > hA2 >>> 0 ? c4 + 1 | 0 : c4, c4 = _A(y4, c4 ^ s4, 48), R4 = y4 = t3, s4 = c4, M4 = j2, N4 = BA2, j2 = _A(b4 ^ v5, T2 ^ AA2, 1), _4 = c4 = t3, c4 = c4 + KA2 | 0, c4 = Z2 + ((j2 = (G4 = j2) + aA2 | 0) >>> 0 < aA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, aA2 = c4 = (j2 = U4 + j2 | 0) >>> 0 < U4 >>> 0 ? c4 + 1 | 0 : c4, BA2 = _A(j2 ^ rA2, c4 ^ F4, 32), c4 = (U4 = t3) + gA2 | 0, gA2 = I7 = BA2 + I7 | 0, rA2 = _A(I7 ^ G4, (F4 = I7 >>> 0 < BA2 >>> 0 ? c4 + 1 | 0 : c4) ^ _4, 40), c4 = (c4 = N4) + (N4 = t3) | 0, c4 = aA2 + ((I7 = rA2 + M4 | 0) >>> 0 < rA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, aA2 = I7 = I7 + j2 | 0, KA2 = c4 = I7 >>> 0 < j2 >>> 0 ? c4 + 1 | 0 : c4, j2 = c4, c4 = S4 + MA2 | 0, c4 = ((G4 = QA2) >>> 0 > (QA2 = l3 + QA2 | 0) >>> 0 ? c4 + 1 | 0 : c4) + j2 | 0, MA2 = c4 = (j2 = I7 + QA2 | 0) >>> 0 < QA2 >>> 0 ? c4 + 1 | 0 : c4, QA2 = _A(s4 ^ j2, c4 ^ y4, 32), c4 = (G4 = t3) + NA2 | 0, y4 = I7 = QA2 + k4 | 0, I7 = _A(I7 ^ l3, (M4 = S4) ^ (S4 = I7 >>> 0 < QA2 >>> 0 ? c4 + 1 | 0 : c4), 40), c4 = pA2 + (_4 = t3) | 0, pA2 = I7, c4 = MA2 + ((I7 = DA2 + I7 | 0) >>> 0 < DA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (I7 = I7 + j2 | 0) >>> 0 < j2 >>> 0 ? c4 + 1 | 0 : c4, MA2 = I7, Y4 = (i3[A8 + 8 | 0] | i3[A8 + 9 | 0] << 8 | i3[A8 + 10 | 0] << 16 | i3[A8 + 11 | 0] << 24) ^ I7, M4 = c4, H4 = c4 ^ (i3[A8 + 12 | 0] | i3[A8 + 13 | 0] << 8 | i3[A8 + 14 | 0] << 16 | i3[A8 + 15 | 0] << 24), j2 = _A(BA2 ^ aA2, U4 ^ KA2, 48), c4 = (aA2 = t3) + F4 | 0, F4 = I7 = j2 + gA2 | 0, KA2 = c4 = I7 >>> 0 < j2 >>> 0 ? c4 + 1 | 0 : c4, BA2 = fA2, c4 = n4 + R4 | 0, fA2 = c4 = (I7 = s4 + X2 | 0) >>> 0 < X2 >>> 0 ? c4 + 1 | 0 : c4, iA2 = _A(I7 ^ iA2, c4 ^ K4, 1), c4 = (s4 = t3) + wA2 | 0, c4 = ((BA2 = iA2 + BA2 | 0) >>> 0 < iA2 >>> 0 ? c4 + 1 | 0 : c4) + a4 | 0, BA2 = c4 = (wA2 = BA2 + EA2 | 0) >>> 0 < BA2 >>> 0 ? c4 + 1 | 0 : c4, gA2 = _A(wA2 ^ nA2, c4 ^ sA2, 32), c4 = (X2 = t3) + KA2 | 0, EA2 = c4 = (DA2 = gA2 + F4 | 0) >>> 0 < gA2 >>> 0 ? c4 + 1 | 0 : c4, nA2 = gA2, gA2 = _A(iA2 ^ DA2, c4 ^ s4, 40), c4 = (a4 = t3) + SA2 | 0, c4 = (gA2 >>> 0 > (iA2 = gA2 + eA2 | 0) >>> 0 ? c4 + 1 | 0 : c4) + BA2 | 0, n4 = X2, X2 = c4 = (wA2 = iA2 + wA2 | 0) >>> 0 < iA2 >>> 0 ? c4 + 1 | 0 : c4, iA2 = _A(nA2 ^ (eA2 = wA2), n4 ^ c4, 48), c4 = (s4 = t3) + EA2 | 0, c4 = (BA2 = iA2 + DA2 | 0) >>> 0 < iA2 >>> 0 ? c4 + 1 | 0 : c4, DA2 = BA2, BA2 ^= Y4, C3[A8 + 8 | 0] = BA2, C3[A8 + 9 | 0] = BA2 >>> 8, C3[A8 + 10 | 0] = BA2 >>> 16, C3[A8 + 11 | 0] = BA2 >>> 24, EA2 = c4, c4 ^= H4, C3[A8 + 12 | 0] = c4, C3[A8 + 13 | 0] = c4 >>> 8, C3[A8 + 14 | 0] = c4 >>> 16, C3[A8 + 15 | 0] = c4 >>> 24, wA2 = I7, BA2 = fA2, I7 = j2, j2 = _A(r4 ^ k4, p4 ^ NA2, 1), c4 = (SA2 = t3) + Q4 | 0, c4 = (j2 >>> 0 > (fA2 = j2 + g6 | 0) >>> 0 ? c4 + 1 | 0 : c4) + V2 | 0, oA2 = c4 = (k4 = fA2) >>> 0 > (fA2 = oA2 + fA2 | 0) >>> 0 ? c4 + 1 | 0 : c4, I7 = _A(I7 ^ fA2, c4 ^ aA2, 32), c4 = (c4 = BA2) + (BA2 = t3) | 0, aA2 = c4 = (wA2 = I7 + wA2 | 0) >>> 0 < I7 >>> 0 ? c4 + 1 | 0 : c4, nA2 = I7, wA2 = _A(j2 ^ (V2 = wA2), c4 ^ SA2, 40), c4 = (r4 = t3) + B4 | 0, c4 = oA2 + ((I7 = wA2 + kA2 | 0) >>> 0 < wA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (I7 = I7 + fA2 | 0) >>> 0 < fA2 >>> 0 ? c4 + 1 | 0 : c4, oA2 = I7, I7 ^= nA2, nA2 = c4, fA2 = _A(I7, c4 ^ BA2, 48), c4 = (k4 = t3) + aA2 | 0, V2 = I7 = fA2 + V2 | 0, aA2 = I7 >>> 0 < fA2 >>> 0 ? c4 + 1 | 0 : c4, rA2 = I7 = _A(F4 ^ rA2, N4 ^ KA2, 1), SA2 = c4 = t3, c4 = c4 + q4 | 0, c4 = e4 + ((I7 = I7 + cA2 | 0) >>> 0 < cA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, q4 = c4 = (j2 = I7 + hA2 | 0) >>> 0 < hA2 >>> 0 ? c4 + 1 | 0 : c4, I7 = (BA2 = _A(w4 ^ j2, c4 ^ h4, 32)) + D4 | 0, c4 = (D4 = t3) + f4 | 0, hA2 = I7, I7 = (cA2 = _A(e4 = I7 ^ rA2, (rA2 = I7 >>> 0 < BA2 >>> 0 ? c4 + 1 | 0 : c4) ^ SA2, 40)) + z2 | 0, c4 = (z2 = t3) + yA2 | 0, c4 = q4 + (I7 >>> 0 < cA2 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = (q4 = I7 + j2 | 0) >>> 0 < j2 >>> 0 ? c4 + 1 | 0 : c4, j2 = q4 ^ GA2 ^ V2, C3[0 | (I7 = A8)] = j2, C3[I7 + 1 | 0] = j2 >>> 8, C3[I7 + 2 | 0] = j2 >>> 16, C3[I7 + 3 | 0] = j2 >>> 24, j2 = c4 ^ E4 ^ aA2, C3[I7 + 4 | 0] = j2, C3[I7 + 5 | 0] = j2 >>> 8, C3[I7 + 6 | 0] = j2 >>> 16, C3[I7 + 7 | 0] = j2 >>> 24, j2 = (BA2 = _A(q4 ^ BA2, c4 ^ D4, 48)) + hA2 | 0, c4 = (hA2 = t3) + rA2 | 0, c4 = (rA2 = j2 >>> 0 < BA2 >>> 0 ? c4 + 1 | 0 : c4) ^ (i3[I7 + 20 | 0] | i3[I7 + 21 | 0] << 8 | i3[I7 + 22 | 0] << 16 | i3[I7 + 23 | 0] << 24) ^ nA2, q4 = (i3[I7 + 16 | 0] | i3[I7 + 17 | 0] << 8 | i3[I7 + 18 | 0] << 16 | i3[I7 + 19 | 0] << 24) ^ oA2 ^ j2, C3[I7 + 16 | 0] = q4, C3[I7 + 17 | 0] = q4 >>> 8, C3[I7 + 18 | 0] = q4 >>> 16, C3[I7 + 19 | 0] = q4 >>> 24, C3[I7 + 20 | 0] = c4, C3[I7 + 21 | 0] = c4 >>> 8, C3[I7 + 22 | 0] = c4 >>> 16, C3[I7 + 23 | 0] = c4 >>> 24, I7 = _A(QA2 ^ MA2, M4 ^ G4, 48), q4 = t3, oA2 = i3[A8 + 36 | 0] | i3[A8 + 37 | 0] << 8 | i3[A8 + 38 | 0] << 16 | i3[A8 + 39 | 0] << 24, c4 = (i3[A8 + 32 | 0] | i3[A8 + 33 | 0] << 8 | i3[A8 + 34 | 0] << 16 | i3[A8 + 35 | 0] << 24) ^ _A(gA2 ^ DA2, a4 ^ EA2, 1) ^ I7, C3[A8 + 32 | 0] = c4, C3[A8 + 33 | 0] = c4 >>> 8, C3[A8 + 34 | 0] = c4 >>> 16, C3[A8 + 35 | 0] = c4 >>> 24, c4 = t3 ^ oA2 ^ q4, C3[A8 + 36 | 0] = c4, C3[A8 + 37 | 0] = c4 >>> 8, C3[A8 + 38 | 0] = c4 >>> 16, C3[A8 + 39 | 0] = c4 >>> 24, c4 = S4 + q4 | 0, c4 = (oA2 = I7 + y4 | 0) >>> 0 < I7 >>> 0 ? c4 + 1 | 0 : c4, gA2 = (i3[(I7 = A8) + 28 | 0] | i3[I7 + 29 | 0] << 8 | i3[I7 + 30 | 0] << 16 | i3[I7 + 31 | 0] << 24) ^ X2 ^ c4, q4 = (i3[I7 + 24 | 0] | i3[I7 + 25 | 0] << 8 | i3[I7 + 26 | 0] << 16 | i3[I7 + 27 | 0] << 24) ^ eA2 ^ oA2, C3[I7 + 24 | 0] = q4, C3[I7 + 25 | 0] = q4 >>> 8, C3[I7 + 26 | 0] = q4 >>> 16, C3[I7 + 27 | 0] = q4 >>> 24, C3[I7 + 28 | 0] = gA2, C3[I7 + 29 | 0] = gA2 >>> 8, C3[I7 + 30 | 0] = gA2 >>> 16, C3[I7 + 31 | 0] = gA2 >>> 24, gA2 = i3[I7 + 44 | 0] | i3[I7 + 45 | 0] << 8 | i3[I7 + 46 | 0] << 16 | i3[I7 + 47 | 0] << 24, I7 = fA2 ^ (i3[I7 + 40 | 0] | i3[I7 + 41 | 0] << 8 | i3[I7 + 42 | 0] << 16 | i3[I7 + 43 | 0] << 24) ^ _A(j2 ^ cA2, z2 ^ rA2, 1), C3[A8 + 40 | 0] = I7, C3[A8 + 41 | 0] = I7 >>> 8, C3[A8 + 42 | 0] = I7 >>> 16, C3[A8 + 43 | 0] = I7 >>> 24, I7 = k4 ^ t3 ^ gA2, C3[A8 + 44 | 0] = I7, C3[A8 + 45 | 0] = I7 >>> 8, C3[A8 + 46 | 0] = I7 >>> 16, C3[A8 + 47 | 0] = I7 >>> 24, j2 = i3[A8 + 60 | 0] | i3[A8 + 61 | 0] << 8 | i3[A8 + 62 | 0] << 16 | i3[A8 + 63 | 0] << 24, I7 = BA2 ^ (i3[A8 + 56 | 0] | i3[A8 + 57 | 0] << 8 | i3[A8 + 58 | 0] << 16 | i3[A8 + 59 | 0] << 24) ^ _A(V2 ^ wA2, r4 ^ aA2, 1), C3[A8 + 56 | 0] = I7, C3[A8 + 57 | 0] = I7 >>> 8, C3[A8 + 58 | 0] = I7 >>> 16, C3[A8 + 59 | 0] = I7 >>> 24, I7 = hA2 ^ t3 ^ j2, C3[A8 + 60 | 0] = I7, C3[A8 + 61 | 0] = I7 >>> 8, C3[A8 + 62 | 0] = I7 >>> 16, C3[A8 + 63 | 0] = I7 >>> 24, j2 = i3[A8 + 52 | 0] | i3[A8 + 53 | 0] << 8 | i3[A8 + 54 | 0] << 16 | i3[A8 + 55 | 0] << 24, I7 = iA2 ^ (i3[A8 + 48 | 0] | i3[A8 + 49 | 0] << 8 | i3[A8 + 50 | 0] << 16 | i3[A8 + 51 | 0] << 24) ^ _A(oA2 ^ pA2, c4 ^ _4, 1), C3[A8 + 48 | 0] = I7, C3[A8 + 49 | 0] = I7 >>> 8, C3[A8 + 50 | 0] = I7 >>> 16, C3[A8 + 51 | 0] = I7 >>> 24, I7 = s4 ^ t3 ^ j2, C3[A8 + 52 | 0] = I7, C3[A8 + 53 | 0] = I7 >>> 8, C3[A8 + 54 | 0] = I7 >>> 16, C3[A8 + 55 | 0] = I7 >>> 24;
                    }
                    function k3(A8, I7, g6, B4, Q4, o4, c4) {
                      var D4, a4, y4, f4, e4, w4, h4, k4, n4, F4, S4, M4, N4, K4, _4, p4, H4, G4, J4, Y4, U4, d4, b4, P4, R4, L4, x4, u4, m4, q4, l3, z2, j2, X2, O2, T2, V2, $2, AA2, IA2, gA2, CA2, BA2, QA2, EA2, iA2, oA2, cA2, DA2 = 0, aA2 = 0, yA2 = 0, fA2 = 0, eA2 = 0, wA2 = 0, rA2 = 0, tA2 = 0, hA2 = 0, kA2 = 0, nA2 = 0, sA2 = 0, SA2 = 0, NA2 = 0, KA2 = 0, _A2 = 0, pA2 = 0, HA2 = 0, GA2 = 0, JA2 = 0, YA2 = 0, UA2 = 0, dA2 = 0, bA2 = 0, vA2 = 0, RA2 = 0, LA2 = 0, xA2 = 0, uA2 = 0, qA2 = 0, lA2 = 0, zA2 = 0, jA2 = 0, XA2 = 0, OA2 = 0, TA2 = 0, VA2 = 0, ZA2 = 0, WA2 = 0, $A2 = 0, AI2 = 0, II2 = 0, gI2 = 0, CI2 = 0, BI2 = 0, QI2 = 0;
                      return r3 = y4 = r3 - 560 | 0, MA(yA2 = y4 + 352 | 0), c4 && W(yA2, 35120, 34, 0), FA(y4 + 288 | 0, o4, 32, 0), W(wA2 = y4 + 352 | 0, y4 + 320 | 0, 32, 0), W(wA2, g6, B4, Q4), v3(wA2, tA2 = y4 + 224 | 0), kA2 = i3[(aA2 = o4) + 32 | 0] | i3[aA2 + 33 | 0] << 8 | i3[aA2 + 34 | 0] << 16 | i3[aA2 + 35 | 0] << 24, nA2 = i3[aA2 + 36 | 0] | i3[aA2 + 37 | 0] << 8 | i3[aA2 + 38 | 0] << 16 | i3[aA2 + 39 | 0] << 24, fA2 = i3[aA2 + 40 | 0] | i3[aA2 + 41 | 0] << 8 | i3[aA2 + 42 | 0] << 16 | i3[aA2 + 43 | 0] << 24, DA2 = i3[aA2 + 44 | 0] | i3[aA2 + 45 | 0] << 8 | i3[aA2 + 46 | 0] << 16 | i3[aA2 + 47 | 0] << 24, yA2 = i3[aA2 + 48 | 0] | i3[aA2 + 49 | 0] << 8 | i3[aA2 + 50 | 0] << 16 | i3[aA2 + 51 | 0] << 24, o4 = i3[aA2 + 52 | 0] | i3[aA2 + 53 | 0] << 8 | i3[aA2 + 54 | 0] << 16 | i3[aA2 + 55 | 0] << 24, eA2 = i3[aA2 + 60 | 0] | i3[aA2 + 61 | 0] << 8 | i3[aA2 + 62 | 0] << 16 | i3[aA2 + 63 | 0] << 24, aA2 = i3[aA2 + 56 | 0] | i3[aA2 + 57 | 0] << 8 | i3[aA2 + 58 | 0] << 16 | i3[aA2 + 59 | 0] << 24, C3[A8 + 56 | 0] = aA2, C3[A8 + 57 | 0] = aA2 >>> 8, C3[A8 + 58 | 0] = aA2 >>> 16, C3[A8 + 59 | 0] = aA2 >>> 24, C3[A8 + 60 | 0] = eA2, C3[A8 + 61 | 0] = eA2 >>> 8, C3[A8 + 62 | 0] = eA2 >>> 16, C3[A8 + 63 | 0] = eA2 >>> 24, C3[A8 + 48 | 0] = yA2, C3[A8 + 49 | 0] = yA2 >>> 8, C3[A8 + 50 | 0] = yA2 >>> 16, C3[A8 + 51 | 0] = yA2 >>> 24, C3[A8 + 52 | 0] = o4, C3[A8 + 53 | 0] = o4 >>> 8, C3[A8 + 54 | 0] = o4 >>> 16, C3[A8 + 55 | 0] = o4 >>> 24, C3[A8 + 40 | 0] = fA2, C3[A8 + 41 | 0] = fA2 >>> 8, C3[A8 + 42 | 0] = fA2 >>> 16, C3[A8 + 43 | 0] = fA2 >>> 24, C3[A8 + 44 | 0] = DA2, C3[A8 + 45 | 0] = DA2 >>> 8, C3[A8 + 46 | 0] = DA2 >>> 16, C3[A8 + 47 | 0] = DA2 >>> 24, C3[0 | (o4 = A8 + 32 | 0)] = kA2, C3[o4 + 1 | 0] = kA2 >>> 8, C3[o4 + 2 | 0] = kA2 >>> 16, C3[o4 + 3 | 0] = kA2 >>> 24, C3[o4 + 4 | 0] = nA2, C3[o4 + 5 | 0] = nA2 >>> 8, C3[o4 + 6 | 0] = nA2 >>> 16, C3[o4 + 7 | 0] = nA2 >>> 24, s3(tA2), Z(y4, tA2), mA(A8, y4), MA(wA2), c4 && W(wA2, 35120, 34, 0), W(c4 = y4 + 352 | 0, A8, 64, 0), W(c4, g6, B4, Q4), v3(c4, rA2 = y4 + 160 | 0), s3(rA2), C3[y4 + 288 | 0] = 248 & i3[y4 + 288 | 0], C3[y4 + 319 | 0] = 63 & i3[y4 + 319 | 0] | 64, g6 = i3[23 + (A8 = a4 = y4 + 288 | 0) | 0], fA2 = PA(f4 = i3[A8 + 21 | 0] | i3[A8 + 22 | 0] << 8 | g6 << 16 & 2031616, 0, e4 = (i3[rA2 + 28 | 0] | i3[rA2 + 29 | 0] << 8 | i3[rA2 + 30 | 0] << 16 | i3[rA2 + 31 | 0] << 24) >>> 7 | 0, 0), yA2 = t3, g6 = (A8 = i3[rA2 + 27 | 0]) >>> 24 | 0, Q4 = A8 << 8 | (DA2 = i3[rA2 + 23 | 0] | i3[rA2 + 24 | 0] << 8 | i3[rA2 + 25 | 0] << 16 | i3[rA2 + 26 | 0] << 24) >>> 24, A8 = PA(w4 = 2097151 & ((3 & (nA2 = (A8 = (B4 = i3[rA2 + 28 | 0]) >>> 16 | 0) | g6)) << 30 | (g6 = (B4 <<= 16) | Q4) >>> 2), 0, h4 = (c4 = i3[a4 + 23 | 0] | i3[a4 + 24 | 0] << 8 | i3[a4 + 25 | 0] << 16 | i3[a4 + 26 | 0] << 24) >>> 5 & 2097151, 0), g6 = t3 + yA2 | 0, B4 = A8 >>> 0 > (Q4 = A8 + fA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, A8 = PA(k4 = (g6 = i3[rA2 + 23 | 0]) << 16 & 2031616 | i3[rA2 + 21 | 0] | i3[rA2 + 22 | 0] << 8, 0, n4 = (i3[a4 + 28 | 0] | i3[a4 + 29 | 0] << 8 | i3[a4 + 30 | 0] << 16 | i3[a4 + 31 | 0] << 24) >>> 7 | 0, 0), B4 = t3 + B4 | 0, yA2 = g6 = A8 + Q4 | 0, Q4 = A8 >>> 0 > g6 >>> 0 ? B4 + 1 | 0 : B4, B4 = (A8 = i3[a4 + 27 | 0]) >>> 24 | 0, c4 = A8 << 8 | c4 >>> 24, A8 = PA(F4 = 2097151 & ((3 & (B4 |= g6 = (A8 = i3[a4 + 28 | 0]) >>> 16 | 0)) << 30 | (g6 = (A8 <<= 16) | c4) >>> 2), 0, S4 = DA2 >>> 5 & 2097151, 0), g6 = t3 + Q4 | 0, aA2 = B4 = A8 + yA2 | 0, Q4 = A8 >>> 0 > B4 >>> 0 ? g6 + 1 | 0 : g6, DA2 = PA(h4, 0, S4, 0), yA2 = t3, g6 = (A8 = i3[a4 + 19 | 0]) >>> 24 | 0, c4 = A8 << 8 | (HA2 = i3[a4 + 15 | 0] | i3[a4 + 16 | 0] << 8 | i3[a4 + 17 | 0] << 16 | i3[a4 + 18 | 0] << 24) >>> 24, B4 = g6, g6 = PA(M4 = (7 & (B4 |= g6 = (A8 = i3[a4 + 20 | 0]) >>> 16 | 0)) << 29 | (g6 = (A8 <<= 16) | c4) >>> 3, nA2 = B4 >>> 3 | 0, e4, 0), A8 = t3 + yA2 | 0, A8 = g6 >>> 0 > (B4 = g6 + DA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, c4 = (g6 = PA(f4, 0, w4, 0)) + B4 | 0, B4 = t3 + A8 | 0, g6 = g6 >>> 0 > (DA2 = c4) >>> 0 ? B4 + 1 | 0 : B4, B4 = (A8 = i3[rA2 + 19 | 0]) >>> 24 | 0, yA2 = A8 << 8 | (KA2 = i3[rA2 + 15 | 0] | i3[rA2 + 16 | 0] << 8 | i3[rA2 + 17 | 0] << 16 | i3[rA2 + 18 | 0] << 24) >>> 24, A8 = PA(N4 = (7 & (fA2 = (A8 = (c4 = i3[rA2 + 20 | 0]) >>> 16 | 0) | B4)) << 29 | (B4 = (c4 <<= 16) | yA2) >>> 3, K4 = fA2 >>> 3 | 0, n4, 0), g6 = t3 + g6 | 0, g6 = A8 >>> 0 > (B4 = A8 + DA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, A8 = PA(k4, 0, F4, 0), g6 = t3 + g6 | 0, kA2 = g6 = A8 >>> 0 > (tA2 = A8 + B4 | 0) >>> 0 ? g6 + 1 | 0 : g6, sA2 = A8 = g6 - ((tA2 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (g6 = A8 >>> 21 | 0) + Q4 | 0, DA2 = B4 = (A8 = (2097151 & A8) << 11 | (fA2 = tA2 - -1048576 | 0) >>> 21) >>> 0 > (aA2 = A8 + aA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, NA2 = A8 = B4 - ((aA2 >>> 0 < 4293918720) - 1 | 0) | 0, eA2 = (2097151 & A8) << 11 | (yA2 = aA2 - -1048576 | 0) >>> 21, c4 = A8 >>> 21 | 0, A8 = PA(n4, 0, S4, 0), g6 = t3, B4 = A8, A8 = PA(e4, 0, h4, 0), g6 = t3 + g6 | 0, g6 = A8 >>> 0 > (B4 = B4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, SA2 = (A8 = B4) + (B4 = PA(w4, 0, F4, 0)) | 0, A8 = t3 + g6 | 0, A8 = B4 >>> 0 > SA2 >>> 0 ? A8 + 1 | 0 : A8, wA2 = SA2 - (g6 = -2097152 & (B4 = SA2 - -1048576 | 0)) | 0, g6 = (A8 - ((131071 & (Q4 = A8 - ((SA2 >>> 0 < 4293918720) - 1 | 0) | 0)) + (g6 >>> 0 > SA2 >>> 0) | 0) | 0) + c4 | 0, m4 = g6 = (A8 = eA2 + wA2 | 0) >>> 0 < wA2 >>> 0 ? g6 + 1 | 0 : g6, q4 = A8, wA2 = PA(A8, g6, 470296, 0), eA2 = t3, g6 = PA(e4, 0, F4, 0), A8 = t3, c4 = g6, g6 = PA(w4, 0, n4, 0), A8 = t3 + A8 | 0, g6 = g6 >>> 0 > (c4 = c4 + g6 | 0) >>> 0 ? A8 + 1 | 0 : A8, A8 = Q4 >>> 21 | 0, Q4 = (2097151 & Q4) << 11 | B4 >>> 21, B4 = A8 + g6 | 0, UA2 = Q4 = (B4 = Q4 >>> 0 > (c4 = Q4 + c4 | 0) >>> 0 ? B4 + 1 | 0 : B4) - ((c4 >>> 0 < 4293918720) - 1 | 0) | 0, A8 = c4 - (g6 = -2097152 & (YA2 = c4 - -1048576 | 0)) | 0, l3 = c4 = B4 - ((131071 & Q4) + (g6 >>> 0 > c4 >>> 0) | 0) | 0, z2 = g6 = aA2 - (B4 = -2097152 & yA2) | 0, j2 = Q4 = DA2 - ((B4 >>> 0 > aA2 >>> 0) + NA2 | 0) | 0, X2 = A8, B4 = PA(A8, c4, 666643, 0), A8 = t3 + eA2 | 0, A8 = B4 >>> 0 > (c4 = B4 + wA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = PA(g6, Q4, 654183, 0), g6 = t3 + A8 | 0, hA2 = Q4 = B4 + c4 | 0, yA2 = B4 >>> 0 > Q4 >>> 0 ? g6 + 1 | 0 : g6, SA2 = tA2 - (A8 = -2097152 & fA2) | 0, sA2 = kA2 - ((A8 >>> 0 > tA2 >>> 0) + sA2 | 0) | 0, g6 = PA(w4, 0, M4, nA2), B4 = t3, Q4 = (A8 = g6) + (g6 = PA(_4 = HA2 >>> 6 & 2097151, 0, e4, 0)) | 0, A8 = t3 + B4 | 0, A8 = g6 >>> 0 > Q4 >>> 0 ? A8 + 1 | 0 : A8, g6 = PA(h4, 0, k4, 0), B4 = t3 + A8 | 0, B4 = g6 >>> 0 > (Q4 = g6 + Q4 | 0) >>> 0 ? B4 + 1 | 0 : B4, A8 = PA(f4, 0, S4, 0), g6 = t3 + B4 | 0, g6 = A8 >>> 0 > (Q4 = A8 + Q4 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = PA(n4, 0, p4 = KA2 >>> 6 & 2097151, 0), A8 = t3 + g6 | 0, A8 = B4 >>> 0 > (Q4 = B4 + Q4 | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = PA(F4, 0, N4, K4), g6 = t3 + A8 | 0, tA2 = Q4 = B4 + Q4 | 0, c4 = B4 >>> 0 > Q4 >>> 0 ? g6 + 1 | 0 : g6, g6 = (A8 = i3[a4 + 14 | 0]) >>> 24 | 0, Q4 = A8 << 8 | (kA2 = i3[a4 + 10 | 0] | i3[a4 + 11 | 0] << 8 | i3[a4 + 12 | 0] << 16 | i3[a4 + 13 | 0] << 24) >>> 24, g6 = PA(H4 = 2097151 & ((1 & (g6 |= A8 = (B4 = i3[a4 + 15 | 0]) >>> 16 | 0)) << 31 | (A8 = (B4 <<= 16) | Q4) >>> 1), 0, e4, 0), A8 = t3, B4 = g6, g6 = PA(w4, 0, _4, 0), A8 = t3 + A8 | 0, A8 = g6 >>> 0 > (B4 = B4 + g6 | 0) >>> 0 ? A8 + 1 | 0 : A8, Q4 = (g6 = PA(S4, 0, M4, nA2)) + B4 | 0, B4 = t3 + A8 | 0, B4 = g6 >>> 0 > Q4 >>> 0 ? B4 + 1 | 0 : B4, A8 = PA(h4, 0, N4, K4), g6 = t3 + B4 | 0, g6 = A8 >>> 0 > (Q4 = A8 + Q4 | 0) >>> 0 ? g6 + 1 | 0 : g6, A8 = PA(f4, 0, k4, 0), g6 = t3 + g6 | 0, fA2 = B4 = A8 + Q4 | 0, Q4 = A8 >>> 0 > B4 >>> 0 ? g6 + 1 | 0 : g6, g6 = (A8 = i3[rA2 + 14 | 0]) >>> 24 | 0, DA2 = A8 << 8 | (aA2 = i3[rA2 + 10 | 0] | i3[rA2 + 11 | 0] << 8 | i3[rA2 + 12 | 0] << 16 | i3[rA2 + 13 | 0] << 24) >>> 24, B4 = g6, g6 = (A8 = i3[rA2 + 15 | 0]) >>> 16 | 0, g6 = PA(G4 = 2097151 & ((1 & (g6 |= B4)) << 31 | (A8 = A8 << 16 | DA2) >>> 1), 0, n4, 0), A8 = t3 + Q4 | 0, A8 = g6 >>> 0 > (B4 = g6 + fA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = PA(F4, 0, p4, 0), A8 = t3 + A8 | 0, DA2 = A8 = g6 >>> 0 > (fA2 = g6 + B4 | 0) >>> 0 ? A8 + 1 | 0 : A8, dA2 = g6 = A8 - ((fA2 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (A8 = g6 >>> 21 | 0) + c4 | 0, eA2 = B4 = (g6 = (2097151 & g6) << 11 | (wA2 = fA2 - -1048576 | 0) >>> 21) >>> 0 > (NA2 = g6 + tA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, GA2 = g6 = B4 - ((NA2 >>> 0 < 4293918720) - 1 | 0) | 0, A8 = (A8 = g6 >>> 21 | 0) + sA2 | 0, O2 = A8 = (g6 = (B4 = (2097151 & g6) << 11 | (tA2 = NA2 - -1048576 | 0) >>> 21) + SA2 | 0) >>> 0 < B4 >>> 0 ? A8 + 1 | 0 : A8, T2 = g6, A8 = PA(g6, A8, -997805, -1), g6 = t3 + yA2 | 0, hA2 = B4 = A8 + hA2 | 0, yA2 = A8 >>> 0 > B4 >>> 0 ? g6 + 1 | 0 : g6, SA2 = (RA2 = i3[23 + (D4 = y4 + 224 | 0) | 0] | i3[D4 + 24 | 0] << 8 | i3[D4 + 25 | 0] << 16 | i3[D4 + 26 | 0] << 24) >>> 5 & 2097151, B4 = PA(J4 = (A8 = i3[a4 + 2 | 0]) << 16 & 2031616 | i3[0 | a4] | i3[a4 + 1 | 0] << 8, 0, S4, 0), g6 = t3, Q4 = (A8 = PA(k4, 0, Y4 = (c4 = i3[a4 + 2 | 0] | i3[a4 + 3 | 0] << 8 | i3[a4 + 4 | 0] << 16 | i3[a4 + 5 | 0] << 24) >>> 5 & 2097151, 0)) + B4 | 0, B4 = t3 + g6 | 0, B4 = A8 >>> 0 > Q4 >>> 0 ? B4 + 1 | 0 : B4, A8 = PA(U4 = (i3[a4 + 7 | 0] | i3[a4 + 8 | 0] << 8 | i3[a4 + 9 | 0] << 16 | i3[a4 + 10 | 0] << 24) >>> 7 & 2097151, 0, p4, 0), g6 = t3 + B4 | 0, g6 = A8 >>> 0 > (Q4 = A8 + Q4 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = PA(G4, 0, d4 = kA2 >>> 4 & 2097151, 0), A8 = t3 + g6 | 0, kA2 = Q4 = B4 + Q4 | 0, Q4 = B4 >>> 0 > Q4 >>> 0 ? A8 + 1 | 0 : A8, c4 = (g6 = i3[a4 + 6 | 0]) << 8 | c4 >>> 24, B4 = A8 = g6 >>> 24 | 0, g6 = (A8 = i3[a4 + 7 | 0]) >>> 16 | 0, g6 = PA(b4 = 2097151 & ((3 & (g6 |= B4)) << 30 | (A8 = A8 << 16 | c4) >>> 2), 0, N4, K4), A8 = t3 + Q4 | 0, A8 = g6 >>> 0 > (B4 = g6 + kA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, Q4 = (g6 = PA(_4, 0, P4 = (i3[rA2 + 7 | 0] | i3[rA2 + 8 | 0] << 8 | i3[rA2 + 9 | 0] << 16 | i3[rA2 + 10 | 0] << 24) >>> 7 & 2097151, 0)) + B4 | 0, B4 = t3 + A8 | 0, B4 = g6 >>> 0 > Q4 >>> 0 ? B4 + 1 | 0 : B4, g6 = PA(H4, 0, JA2 = aA2 >>> 4 & 2097151, 0), A8 = t3 + B4 | 0, c4 = g6 >>> 0 > (Q4 = g6 + Q4 | 0) >>> 0 ? A8 + 1 | 0 : A8, A8 = (g6 = i3[rA2 + 6 | 0]) >>> 24 | 0, kA2 = g6 << 8 | (aA2 = i3[rA2 + 2 | 0] | i3[rA2 + 3 | 0] << 8 | i3[rA2 + 4 | 0] << 16 | i3[rA2 + 5 | 0] << 24) >>> 24, g6 = A8, A8 = PA(M4, nA2, R4 = 2097151 & ((3 & (g6 |= B4 = (A8 = i3[rA2 + 7 | 0]) >>> 16 | 0)) << 30 | (A8 = A8 << 16 | kA2) >>> 2), 0), g6 = t3 + c4 | 0, g6 = A8 >>> 0 > (B4 = A8 + Q4 | 0) >>> 0 ? g6 + 1 | 0 : g6, Q4 = B4, B4 = PA(L4 = (A8 = i3[rA2 + 2 | 0]) << 16 & 2031616 | i3[0 | rA2] | i3[rA2 + 1 | 0] << 8, 0, h4, 0), A8 = t3 + g6 | 0, A8 = B4 >>> 0 > (Q4 = Q4 + B4 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = PA(f4, 0, x4 = aA2 >>> 5 & 2097151, 0), A8 = t3 + A8 | 0, A8 = g6 >>> 0 > (B4 = g6 + Q4 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = B4, kA2 = B4 = B4 + SA2 | 0, c4 = g6 = g6 >>> 0 > B4 >>> 0 ? A8 + 1 | 0 : A8, Q4 = i3[D4 + 21 | 0] | i3[D4 + 22 | 0] << 8, A8 = PA(k4, 0, J4, 0), g6 = t3, aA2 = (B4 = A8) + (A8 = PA(N4, K4, Y4, 0)) | 0, B4 = t3 + g6 | 0, B4 = A8 >>> 0 > aA2 >>> 0 ? B4 + 1 | 0 : B4, A8 = PA(G4, 0, U4, 0), g6 = t3 + B4 | 0, g6 = A8 >>> 0 > (aA2 = A8 + aA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, A8 = PA(d4, 0, JA2, 0), g6 = t3 + g6 | 0, g6 = A8 >>> 0 > (B4 = A8 + aA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, aA2 = (A8 = B4) + (B4 = PA(p4, 0, b4, 0)) | 0, A8 = t3 + g6 | 0, A8 = B4 >>> 0 > aA2 >>> 0 ? A8 + 1 | 0 : A8, g6 = PA(_4, 0, R4, 0), A8 = t3 + A8 | 0, A8 = g6 >>> 0 > (B4 = g6 + aA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, aA2 = (g6 = PA(H4, 0, P4, 0)) + B4 | 0, B4 = t3 + A8 | 0, B4 = g6 >>> 0 > aA2 >>> 0 ? B4 + 1 | 0 : B4, A8 = PA(M4, nA2, x4, 0), g6 = t3 + B4 | 0, g6 = A8 >>> 0 > (aA2 = A8 + aA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, A8 = PA(f4, 0, L4, 0), g6 = t3 + g6 | 0, A8 = A8 >>> 0 > (B4 = A8 + aA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, g6 = (g6 = B4) >>> 0 > (B4 = B4 + Q4 | 0) >>> 0 ? A8 + 1 | 0 : A8, Q4 = B4, B4 = (A8 = i3[D4 + 23 | 0]) << 16 & 2031616, A8 = g6, B4 = A8 = B4 >>> 0 > (Q4 = Q4 + B4 | 0) >>> 0 ? A8 + 1 | 0 : A8, rA2 = A8 = A8 - ((Q4 >>> 0 < 4293918720) - 1 | 0) | 0, g6 = (g6 = A8 >>> 21 | 0) + c4 | 0, A8 = (g6 = (c4 = kA2 = (A8 = (2097151 & A8) << 11 | (aA2 = Q4 - -1048576 | 0) >>> 21) + kA2 | 0) >>> 0 < A8 >>> 0 ? g6 + 1 | 0 : g6) + yA2 | 0, A8 = (yA2 = c4 + hA2 | 0) >>> 0 < c4 >>> 0 ? A8 + 1 | 0 : A8, KA2 = c4 - -1048576 | 0, _A2 = c4 = g6 - ((c4 >>> 0 < 4293918720) - 1 | 0) | 0, pA2 = yA2 - (g6 = -2097152 & KA2) | 0, bA2 = A8 - ((g6 >>> 0 > yA2 >>> 0) + c4 | 0) | 0, kA2 = Q4, yA2 = B4, A8 = PA(z2, j2, 470296, 0), g6 = t3, B4 = A8, A8 = PA(q4, m4, 666643, 0), g6 = t3 + g6 | 0, g6 = A8 >>> 0 > (B4 = B4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, Q4 = (A8 = B4) + (B4 = PA(T2, O2, 654183, 0)) | 0, A8 = t3 + g6 | 0, HA2 = Q4, c4 = B4 >>> 0 > Q4 >>> 0 ? A8 + 1 | 0 : A8, g6 = PA(N4, K4, J4, 0), A8 = t3, B4 = g6, g6 = PA(p4, 0, Y4, 0), A8 = t3 + A8 | 0, A8 = g6 >>> 0 > (B4 = B4 + g6 | 0) >>> 0 ? A8 + 1 | 0 : A8, Q4 = (g6 = B4) + (B4 = PA(U4, 0, JA2, 0)) | 0, g6 = t3 + A8 | 0, g6 = B4 >>> 0 > Q4 >>> 0 ? g6 + 1 | 0 : g6, A8 = PA(d4, 0, P4, 0), B4 = t3 + g6 | 0, B4 = A8 >>> 0 > (Q4 = A8 + Q4 | 0) >>> 0 ? B4 + 1 | 0 : B4, A8 = PA(G4, 0, b4, 0), g6 = t3 + B4 | 0, g6 = A8 >>> 0 > (Q4 = A8 + Q4 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = PA(_4, 0, x4, 0), A8 = t3 + g6 | 0, A8 = B4 >>> 0 > (Q4 = B4 + Q4 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = PA(H4, 0, R4, 0), A8 = t3 + A8 | 0, A8 = g6 >>> 0 > (B4 = g6 + Q4 | 0) >>> 0 ? A8 + 1 | 0 : A8, Q4 = (g6 = B4) + (B4 = PA(M4, nA2, L4, 0)) | 0, g6 = t3 + A8 | 0, SA2 = Q4, B4 = B4 >>> 0 > Q4 >>> 0 ? g6 + 1 | 0 : g6, g6 = (A8 = i3[D4 + 19 | 0]) >>> 24 | 0, sA2 = A8 << 8 | (hA2 = i3[D4 + 15 | 0] | i3[D4 + 16 | 0] << 8 | i3[D4 + 17 | 0] << 16 | i3[D4 + 18 | 0] << 24) >>> 24, B4 = ((vA2 = (A8 = (Q4 = i3[D4 + 20 | 0]) >>> 16 | 0) | g6) >>> 3 | 0) + B4 | 0, SA2 = Q4 = (g6 = (7 & vA2) << 29 | (g6 = (Q4 <<= 16) | sA2) >>> 3) + SA2 | 0, Q4 = g6 >>> 0 > Q4 >>> 0 ? B4 + 1 | 0 : B4, sA2 = hA2 >>> 6 & 2097151, A8 = PA(p4, 0, J4, 0), g6 = t3, B4 = A8, A8 = PA(G4, 0, Y4, 0), g6 = t3 + g6 | 0, g6 = A8 >>> 0 > (B4 = B4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, hA2 = (A8 = B4) + (B4 = PA(U4, 0, P4, 0)) | 0, A8 = t3 + g6 | 0, A8 = B4 >>> 0 > hA2 >>> 0 ? A8 + 1 | 0 : A8, B4 = PA(d4, 0, R4, 0), g6 = t3 + A8 | 0, g6 = B4 >>> 0 > (hA2 = B4 + hA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = PA(b4, 0, JA2, 0), A8 = t3 + g6 | 0, A8 = B4 >>> 0 > (hA2 = B4 + hA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = PA(_4, 0, L4, 0), B4 = t3 + A8 | 0, B4 = g6 >>> 0 > (hA2 = g6 + hA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, A8 = PA(H4, 0, x4, 0), g6 = t3 + B4 | 0, A8 = A8 >>> 0 > (hA2 = A8 + hA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, OA2 = A8 = (xA2 = hA2 + sA2 | 0) >>> 0 < hA2 >>> 0 ? A8 + 1 | 0 : A8, II2 = A8 = A8 - ((xA2 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (2097151 & A8) << 11 | (jA2 = xA2 - -1048576 | 0) >>> 21, A8 = (A8 >>> 21 | 0) + Q4 | 0, VA2 = A8 = B4 >>> 0 > (TA2 = B4 + SA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, gI2 = A8 = A8 - ((TA2 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (2097151 & A8) << 11 | (qA2 = TA2 - -1048576 | 0) >>> 21, A8 = (A8 >>> 21 | 0) + c4 | 0, g6 = (B4 >>> 0 > (Q4 = B4 + HA2 | 0) >>> 0 ? A8 + 1 | 0 : A8) + yA2 | 0, yA2 = (B4 = Q4 + kA2 | 0) - (A8 = -2097152 & aA2) | 0, rA2 = A8 = (g6 = B4 >>> 0 < Q4 >>> 0 ? g6 + 1 | 0 : g6) - ((A8 >>> 0 > B4 >>> 0) + rA2 | 0) | 0, CI2 = A8 = A8 - ((yA2 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (2097151 & A8) << 11 | (lA2 = yA2 - -1048576 | 0) >>> 21, A8 = (A8 >> 21) + bA2 | 0, Q4 = A8 = B4 >>> 0 > (c4 = B4 + pA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, AI2 = A8 = A8 - ((c4 >>> 0 < 4293918720) - 1 | 0) | 0, zA2 = (2097151 & A8) << 11 | (HA2 = c4 - -1048576 | 0) >>> 21, kA2 = A8 >> 21, vA2 = NA2 - (A8 = -2097152 & tA2) | 0, GA2 = eA2 - ((A8 >>> 0 > NA2 >>> 0) + GA2 | 0) | 0, A8 = PA(e4, 0, n4, 0), XA2 = g6 = t3, pA2 = A8, hA2 = A8 - -1048576 | 0, uA2 = g6 = g6 - ((A8 >>> 0 < 4293918720) - 1 | 0) | 0, V2 = A8 = g6 >>> 21 | 0, A8 = PA(u4 = (2097151 & g6) << 11 | hA2 >>> 21, A8, -683901, -1), g6 = t3 + DA2 | 0, g6 = A8 >>> 0 > (B4 = A8 + fA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, tA2 = B4 - (A8 = -2097152 & wA2) | 0, aA2 = g6 - ((A8 >>> 0 > B4 >>> 0) + dA2 | 0) | 0, g6 = PA(S4, 0, _4, 0), A8 = t3, B4 = g6, g6 = PA(e4, 0, d4, 0), A8 = t3 + A8 | 0, A8 = g6 >>> 0 > (B4 = B4 + g6 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = PA(w4, 0, H4, 0), A8 = t3 + A8 | 0, A8 = g6 >>> 0 > (B4 = g6 + B4 | 0) >>> 0 ? A8 + 1 | 0 : A8, DA2 = (g6 = B4) + (B4 = PA(k4, 0, M4, nA2)) | 0, g6 = t3 + A8 | 0, g6 = B4 >>> 0 > DA2 >>> 0 ? g6 + 1 | 0 : g6, A8 = PA(h4, 0, p4, 0), B4 = t3 + g6 | 0, B4 = A8 >>> 0 > (DA2 = A8 + DA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, A8 = PA(f4, 0, N4, K4), g6 = t3 + B4 | 0, g6 = A8 >>> 0 > (DA2 = A8 + DA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = PA(n4, 0, JA2, 0), A8 = t3 + g6 | 0, A8 = B4 >>> 0 > (DA2 = B4 + DA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = PA(F4, 0, G4, 0), A8 = t3 + A8 | 0, fA2 = B4 = g6 + DA2 | 0, DA2 = g6 >>> 0 > B4 >>> 0 ? A8 + 1 | 0 : A8, A8 = PA(w4, 0, d4, 0), g6 = t3, B4 = A8, A8 = PA(e4, 0, U4, 0), g6 = t3 + g6 | 0, g6 = A8 >>> 0 > (B4 = B4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, eA2 = (A8 = PA(k4, 0, _4, 0)) + B4 | 0, B4 = t3 + g6 | 0, B4 = A8 >>> 0 > eA2 >>> 0 ? B4 + 1 | 0 : B4, A8 = PA(S4, 0, H4, 0), g6 = t3 + B4 | 0, g6 = A8 >>> 0 > (eA2 = A8 + eA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = PA(M4, nA2, N4, K4), A8 = t3 + g6 | 0, A8 = B4 >>> 0 > (eA2 = B4 + eA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = PA(h4, 0, G4, 0), A8 = t3 + A8 | 0, A8 = g6 >>> 0 > (B4 = g6 + eA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, eA2 = (g6 = B4) + (B4 = PA(f4, 0, p4, 0)) | 0, g6 = t3 + A8 | 0, g6 = B4 >>> 0 > eA2 >>> 0 ? g6 + 1 | 0 : g6, A8 = PA(n4, 0, P4, 0), B4 = t3 + g6 | 0, B4 = A8 >>> 0 > (eA2 = A8 + eA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, A8 = PA(F4, 0, JA2, 0), g6 = t3 + B4 | 0, sA2 = g6 = A8 >>> 0 > (SA2 = A8 + eA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, WA2 = A8 = g6 - ((SA2 >>> 0 < 4293918720) - 1 | 0) | 0, g6 = (2097151 & A8) << 11 | (NA2 = SA2 - -1048576 | 0) >>> 21, A8 = (A8 >>> 21 | 0) + DA2 | 0, wA2 = A8 = g6 >>> 0 > (dA2 = g6 + fA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, LA2 = A8 = A8 - ((dA2 >>> 0 < 4293918720) - 1 | 0) | 0, g6 = (B4 = A8 >>> 21 | 0) + aA2 | 0, tA2 = g6 = (A8 = (2097151 & A8) << 11 | (eA2 = dA2 - -1048576 | 0) >>> 21) >>> 0 > (bA2 = A8 + tA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, ZA2 = A8 = g6 - ((bA2 >>> 0 < 4293918720) - 1 | 0) | 0, DA2 = (2097151 & A8) << 11 | (aA2 = bA2 - -1048576 | 0) >>> 21, A8 = (A8 >> 21) + GA2 | 0, $2 = A8 = (g6 = DA2 + vA2 | 0) >>> 0 < DA2 >>> 0 ? A8 + 1 | 0 : A8, AA2 = g6, A8 = PA(g6, A8, -683901, -1), g6 = t3 + kA2 | 0, zA2 = B4 = A8 + zA2 | 0, kA2 = A8 >>> 0 > B4 >>> 0 ? g6 + 1 | 0 : g6, A8 = PA(w4, 0, J4, 0), g6 = t3, B4 = A8, A8 = PA(S4, 0, Y4, 0), g6 = t3 + g6 | 0, g6 = A8 >>> 0 > (B4 = B4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, DA2 = (A8 = B4) + (B4 = PA(N4, K4, U4, 0)) | 0, A8 = t3 + g6 | 0, A8 = B4 >>> 0 > DA2 >>> 0 ? A8 + 1 | 0 : A8, g6 = PA(p4, 0, d4, 0), B4 = t3 + A8 | 0, B4 = g6 >>> 0 > (DA2 = g6 + DA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, g6 = PA(k4, 0, b4, 0), A8 = t3 + B4 | 0, A8 = g6 >>> 0 > (DA2 = g6 + DA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = PA(_4, 0, JA2, 0), g6 = t3 + A8 | 0, g6 = B4 >>> 0 > (DA2 = B4 + DA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, A8 = PA(H4, 0, G4, 0), g6 = t3 + g6 | 0, g6 = A8 >>> 0 > (B4 = A8 + DA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, DA2 = (A8 = B4) + (B4 = PA(M4, nA2, P4, 0)) | 0, A8 = t3 + g6 | 0, A8 = B4 >>> 0 > DA2 >>> 0 ? A8 + 1 | 0 : A8, g6 = PA(h4, 0, x4, 0), B4 = t3 + A8 | 0, B4 = g6 >>> 0 > (DA2 = g6 + DA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, g6 = PA(f4, 0, R4, 0), A8 = t3 + B4 | 0, A8 = g6 >>> 0 > (DA2 = g6 + DA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = PA(F4, 0, L4, 0), g6 = t3 + A8 | 0, GA2 = DA2 = B4 + DA2 | 0, B4 = B4 >>> 0 > DA2 >>> 0 ? g6 + 1 | 0 : g6, g6 = (A8 = i3[D4 + 27 | 0]) >>> 24 | 0, fA2 = A8 << 8 | RA2 >>> 24, DA2 = 2097151 & ((3 & (g6 |= A8 = (DA2 = i3[D4 + 28 | 0]) >>> 16 | 0)) << 30 | (A8 = (DA2 <<= 16) | fA2) >>> 2), g6 = B4, fA2 = A8 = DA2 + GA2 | 0, DA2 = A8 >>> 0 < DA2 >>> 0 ? g6 + 1 | 0 : g6, vA2 = PA(X2, l3, 470296, 0), GA2 = t3, A8 = (B4 = (2097151 & UA2) << 11 | YA2 >>> 21) + (pA2 - (g6 = -2097152 & hA2) | 0) | 0, g6 = XA2 - ((524287 & uA2) + (g6 >>> 0 > pA2 >>> 0) | 0) + (UA2 >>> 21) | 0, IA2 = g6 = A8 >>> 0 < B4 >>> 0 ? g6 + 1 | 0 : g6, gA2 = A8, g6 = PA(A8, g6, 666643, 0), A8 = t3 + GA2 | 0, A8 = g6 >>> 0 > (B4 = g6 + vA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, hA2 = (g6 = PA(q4, m4, 654183, 0)) + B4 | 0, B4 = t3 + A8 | 0, B4 = g6 >>> 0 > hA2 >>> 0 ? B4 + 1 | 0 : B4, g6 = PA(z2, j2, -997805, -1), A8 = t3 + B4 | 0, A8 = g6 >>> 0 > (hA2 = g6 + hA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = PA(T2, O2, 136657, 0), g6 = t3 + A8 | 0, KA2 = (A8 = (2097151 & _A2) << 11 | KA2 >>> 21) + (hA2 = B4 + hA2 | 0) | 0, g6 = (_A2 >>> 21 | 0) + (B4 >>> 0 > hA2 >>> 0 ? g6 + 1 | 0 : g6) | 0, uA2 = hA2 = DA2 - ((fA2 >>> 0 < 4293918720) - 1 | 0) | 0, A8 = (A8 >>> 0 > KA2 >>> 0 ? g6 + 1 | 0 : g6) + DA2 | 0, g6 = (DA2 = fA2 + KA2 | 0) - (B4 = -2097152 & (XA2 = fA2 - -1048576 | 0)) | 0, B4 = (A8 = (A8 = DA2 >>> 0 < KA2 >>> 0 ? A8 + 1 | 0 : A8) - ((B4 >>> 0 > DA2 >>> 0) + hA2 | 0) | 0) + kA2 | 0, vA2 = DA2 = A8 - ((g6 >>> 0 < 4293918720) - 1 | 0) | 0, pA2 = (B4 = (fA2 = g6 + zA2 | 0) >>> 0 < g6 >>> 0 ? B4 + 1 | 0 : B4) - (((g6 = -2097152 & (GA2 = g6 - -1048576 | 0)) >>> 0 > fA2 >>> 0) + DA2 | 0) | 0, RA2 = A8 = fA2 - g6 | 0, DA2 = c4, c4 = Q4, $A2 = bA2 - (A8 = -2097152 & aA2) | 0, hA2 = tA2 - ((A8 >>> 0 > bA2 >>> 0) + ZA2 | 0) | 0, A8 = PA(gA2, IA2, -683901, -1), g6 = t3, Q4 = (B4 = A8) + (A8 = PA(u4, V2, 136657, 0)) | 0, B4 = t3 + g6 | 0, g6 = wA2 + (A8 >>> 0 > Q4 >>> 0 ? B4 + 1 | 0 : B4) | 0, eA2 = (B4 = Q4 + dA2 | 0) - (A8 = -2097152 & eA2) | 0, tA2 = (g6 = B4 >>> 0 < dA2 >>> 0 ? g6 + 1 | 0 : g6) - ((A8 >>> 0 > B4 >>> 0) + LA2 | 0) | 0, g6 = PA(u4, V2, -997805, -1), A8 = t3 + sA2 | 0, A8 = g6 >>> 0 > (B4 = g6 + SA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, Q4 = (g6 = PA(gA2, IA2, 136657, 0)) + B4 | 0, B4 = t3 + A8 | 0, B4 = g6 >>> 0 > Q4 >>> 0 ? B4 + 1 | 0 : B4, A8 = PA(X2, l3, -683901, -1), g6 = t3 + B4 | 0, g6 = A8 >>> 0 > (Q4 = A8 + Q4 | 0) >>> 0 ? g6 + 1 | 0 : g6, aA2 = Q4 - (A8 = -2097152 & NA2) | 0, kA2 = g6 - ((A8 >>> 0 > Q4 >>> 0) + WA2 | 0) | 0, g6 = PA(S4, 0, d4, 0), A8 = t3, B4 = g6, g6 = PA(w4, 0, U4, 0), A8 = t3 + A8 | 0, A8 = g6 >>> 0 > (B4 = B4 + g6 | 0) >>> 0 ? A8 + 1 | 0 : A8, Q4 = (g6 = PA(e4, 0, b4, 0)) + B4 | 0, B4 = t3 + A8 | 0, B4 = g6 >>> 0 > Q4 >>> 0 ? B4 + 1 | 0 : B4, A8 = PA(N4, K4, _4, 0), g6 = t3 + B4 | 0, g6 = A8 >>> 0 > (Q4 = A8 + Q4 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = PA(k4, 0, H4, 0), A8 = t3 + g6 | 0, A8 = B4 >>> 0 > (Q4 = B4 + Q4 | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = PA(M4, nA2, p4, 0), g6 = t3 + A8 | 0, g6 = B4 >>> 0 > (Q4 = B4 + Q4 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = PA(h4, 0, JA2, 0), A8 = t3 + g6 | 0, A8 = B4 >>> 0 > (Q4 = B4 + Q4 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = PA(f4, 0, G4, 0), B4 = t3 + A8 | 0, B4 = g6 >>> 0 > (Q4 = g6 + Q4 | 0) >>> 0 ? B4 + 1 | 0 : B4, A8 = PA(n4, 0, R4, 0), g6 = t3 + B4 | 0, g6 = A8 >>> 0 > (Q4 = A8 + Q4 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = PA(F4, 0, P4, 0), A8 = t3 + g6 | 0, fA2 = Q4 = B4 + Q4 | 0, Q4 = B4 >>> 0 > Q4 >>> 0 ? A8 + 1 | 0 : A8, A8 = PA(S4, 0, U4, 0), g6 = t3, B4 = A8, A8 = PA(e4, 0, Y4, 0), g6 = t3 + g6 | 0, g6 = A8 >>> 0 > (B4 = B4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, wA2 = (A8 = B4) + (B4 = PA(k4, 0, d4, 0)) | 0, A8 = t3 + g6 | 0, A8 = B4 >>> 0 > wA2 >>> 0 ? A8 + 1 | 0 : A8, g6 = PA(w4, 0, b4, 0), B4 = t3 + A8 | 0, B4 = g6 >>> 0 > (wA2 = g6 + wA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, A8 = PA(_4, 0, p4, 0), g6 = t3 + B4 | 0, g6 = A8 >>> 0 > (wA2 = A8 + wA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = PA(N4, K4, H4, 0), A8 = t3 + g6 | 0, A8 = B4 >>> 0 > (wA2 = B4 + wA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = PA(M4, nA2, G4, 0), g6 = t3 + A8 | 0, g6 = B4 >>> 0 > (wA2 = B4 + wA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = PA(h4, 0, P4, 0), A8 = t3 + g6 | 0, A8 = B4 >>> 0 > (wA2 = B4 + wA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = PA(f4, 0, JA2, 0), B4 = t3 + A8 | 0, B4 = g6 >>> 0 > (wA2 = g6 + wA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, wA2 = (A8 = PA(n4, 0, x4, 0)) + wA2 | 0, g6 = t3 + B4 | 0, B4 = PA(F4, 0, R4, 0), A8 = t3 + (A8 >>> 0 > wA2 >>> 0 ? g6 + 1 | 0 : g6) | 0, bA2 = A8 = B4 >>> 0 > (ZA2 = B4 + wA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, BA2 = A8 = A8 - ((ZA2 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (2097151 & A8) << 11 | (UA2 = ZA2 - -1048576 | 0) >>> 21, A8 = (A8 >>> 21 | 0) + Q4 | 0, YA2 = A8 = B4 >>> 0 > (zA2 = B4 + fA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, QA2 = A8 = A8 - ((zA2 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (2097151 & A8) << 11 | (_A2 = zA2 - -1048576 | 0) >>> 21, A8 = (A8 >>> 21 | 0) + kA2 | 0, KA2 = A8 = B4 >>> 0 > (dA2 = B4 + aA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, EA2 = A8 = A8 - ((dA2 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (2097151 & A8) << 11 | (sA2 = dA2 - -1048576 | 0) >>> 21, A8 = (A8 >> 21) + tA2 | 0, Q4 = A8 = B4 >>> 0 > (aA2 = B4 + eA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, tA2 = A8 = A8 - ((aA2 >>> 0 < 4293918720) - 1 | 0) | 0, kA2 = (2097151 & A8) << 11 | (B4 = aA2 - -1048576 | 0) >>> 21, A8 = (A8 >> 21) + hA2 | 0, WA2 = A8 = (fA2 = kA2 + $A2 | 0) >>> 0 < kA2 >>> 0 ? A8 + 1 | 0 : A8, LA2 = fA2, A8 = PA(fA2, A8, -683901, -1), g6 = t3, fA2 = A8, A8 = PA(AA2, $2, 136657, 0), g6 = t3 + g6 | 0, A8 = (A8 >>> 0 > (fA2 = fA2 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6) + c4 | 0, BI2 = (c4 = DA2 + fA2 | 0) - (g6 = -2097152 & HA2) | 0, QI2 = (A8 = c4 >>> 0 < fA2 >>> 0 ? A8 + 1 | 0 : A8) - ((g6 >>> 0 > c4 >>> 0) + AI2 | 0) | 0, kA2 = yA2, fA2 = rA2, yA2 = PA(LA2, WA2, 136657, 0), c4 = t3, $A2 = A8 = aA2 - (g6 = -2097152 & B4) | 0, CA2 = Q4 = Q4 - ((g6 >>> 0 > aA2 >>> 0) + tA2 | 0) | 0, B4 = PA(AA2, $2, -997805, -1), g6 = t3 + c4 | 0, g6 = B4 >>> 0 > (yA2 = B4 + yA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = PA(A8, Q4, -683901, -1), A8 = t3 + g6 | 0, AI2 = Q4 = B4 + yA2 | 0, DA2 = B4 >>> 0 > Q4 >>> 0 ? A8 + 1 | 0 : A8, A8 = PA(T2, O2, 470296, 0), g6 = t3, Q4 = (B4 = A8) + (A8 = PA(z2, j2, 666643, 0)) | 0, B4 = t3 + g6 | 0, g6 = VA2 + (A8 >>> 0 > Q4 >>> 0 ? B4 + 1 | 0 : B4) | 0, HA2 = A8 = Q4 + TA2 | 0, c4 = g6 = A8 >>> 0 < TA2 >>> 0 ? g6 + 1 | 0 : g6, g6 = PA(T2, O2, 666643, 0), A8 = t3 + OA2 | 0, A8 = g6 >>> 0 > (B4 = g6 + xA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, eA2 = B4 - (g6 = -2097152 & jA2) | 0, SA2 = A8 - ((g6 >>> 0 > B4 >>> 0) + II2 | 0) | 0, g6 = PA(G4, 0, J4, 0), A8 = t3, B4 = g6, g6 = PA(Y4, 0, JA2, 0), A8 = t3 + A8 | 0, A8 = g6 >>> 0 > (B4 = B4 + g6 | 0) >>> 0 ? A8 + 1 | 0 : A8, Q4 = (g6 = B4) + (B4 = PA(U4, 0, R4, 0)) | 0, g6 = t3 + A8 | 0, g6 = B4 >>> 0 > Q4 >>> 0 ? g6 + 1 | 0 : g6, B4 = PA(d4, 0, x4, 0), A8 = t3 + g6 | 0, A8 = B4 >>> 0 > (Q4 = B4 + Q4 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = PA(b4, 0, P4, 0), B4 = t3 + A8 | 0, B4 = g6 >>> 0 > (Q4 = g6 + Q4 | 0) >>> 0 ? B4 + 1 | 0 : B4, A8 = PA(H4, 0, L4, 0), g6 = t3 + B4 | 0, aA2 = Q4 = A8 + Q4 | 0, Q4 = A8 >>> 0 > Q4 >>> 0 ? g6 + 1 | 0 : g6, g6 = (A8 = i3[D4 + 14 | 0]) >>> 24 | 0, yA2 = A8 << 8 | (tA2 = i3[D4 + 10 | 0] | i3[D4 + 11 | 0] << 8 | i3[D4 + 12 | 0] << 16 | i3[D4 + 13 | 0] << 24) >>> 24, g6 = 2097151 & ((1 & (g6 |= B4 = (A8 = i3[D4 + 15 | 0]) >>> 16 | 0)) << 31 | (A8 = yA2 | A8 << 16) >>> 1), A8 = Q4, aA2 = B4 = g6 + aA2 | 0, Q4 = g6 >>> 0 > B4 >>> 0 ? A8 + 1 | 0 : A8, yA2 = tA2 >>> 4 & 2097151, A8 = PA(J4, 0, JA2, 0), g6 = t3, B4 = A8, A8 = PA(Y4, 0, P4, 0), g6 = t3 + g6 | 0, g6 = A8 >>> 0 > (B4 = B4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, A8 = PA(U4, 0, x4, 0), g6 = t3 + g6 | 0, g6 = A8 >>> 0 > (B4 = A8 + B4 | 0) >>> 0 ? g6 + 1 | 0 : g6, tA2 = (A8 = B4) + (B4 = PA(d4, 0, L4, 0)) | 0, A8 = t3 + g6 | 0, A8 = B4 >>> 0 > tA2 >>> 0 ? A8 + 1 | 0 : A8, g6 = PA(b4, 0, R4, 0), B4 = t3 + A8 | 0, A8 = g6 >>> 0 > (tA2 = g6 + tA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, rA2 = A8 = (jA2 = yA2 + tA2 | 0) >>> 0 < tA2 >>> 0 ? A8 + 1 | 0 : A8, iA2 = A8 = A8 - ((jA2 >>> 0 < 4293918720) - 1 | 0) | 0, g6 = (B4 = A8 >>> 21 | 0) + Q4 | 0, NA2 = g6 = (A8 = (2097151 & A8) << 11 | (hA2 = jA2 - -1048576 | 0) >>> 21) >>> 0 > (VA2 = A8 + aA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, oA2 = A8 = g6 - ((VA2 >>> 0 < 4293918720) - 1 | 0) | 0, g6 = (2097151 & A8) << 11 | (wA2 = VA2 - -1048576 | 0) >>> 21, A8 = (A8 >>> 21 | 0) + SA2 | 0, tA2 = A8 = g6 >>> 0 > (eA2 = g6 + eA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, cA2 = A8 = A8 - ((eA2 >>> 0 < 4293918720) - 1 | 0) | 0, g6 = (B4 = A8 >> 21) + c4 | 0, II2 = g6 = (g6 = (A8 = (2097151 & A8) << 11 | (aA2 = eA2 - -1048576 | 0) >>> 21) >>> 0 > (Q4 = A8 + HA2 | 0) >>> 0 ? g6 + 1 | 0 : g6) - (((B4 = -2097152 & qA2) >>> 0 > Q4 >>> 0) + gI2 | 0) | 0, qA2 = A8 = Q4 - B4 | 0, yA2 = A8 - -1048576 | 0, gI2 = A8 = g6 - ((A8 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (g6 = A8 >> 21) + DA2 | 0, g6 = ((A8 = (2097151 & A8) << 11 | yA2 >>> 21) >>> 0 > (Q4 = A8 + AI2 | 0) >>> 0 ? B4 + 1 | 0 : B4) + fA2 | 0, xA2 = g6 = (g6 = (A8 = Q4) >>> 0 > (Q4 = Q4 + kA2 | 0) >>> 0 ? g6 + 1 | 0 : g6) - (((B4 = -2097152 & lA2) >>> 0 > Q4 >>> 0) + CI2 | 0) | 0, fA2 = A8 = Q4 - B4 | 0, c4 = A8 - -1048576 | 0, OA2 = A8 = g6 - ((A8 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (g6 = A8 >> 21) + QI2 | 0, lA2 = A8 = (B4 = (A8 = (2097151 & A8) << 11 | c4 >>> 21) >>> 0 > (DA2 = A8 + BI2 | 0) >>> 0 ? B4 + 1 | 0 : B4) - ((DA2 >>> 0 < 4293918720) - 1 | 0) | 0, HA2 = RA2 - -1048576 | 0, SA2 = pA2 - ((RA2 >>> 0 < 4293918720) - 1 | 0) | 0, kA2 = (2097151 & A8) << 11 | (Q4 = DA2 - -1048576 | 0) >>> 21, A8 = (A8 >> 21) + pA2 | 0, CI2 = (RA2 = kA2 + RA2 | 0) - (g6 = -2097152 & HA2) | 0, BI2 = (kA2 >>> 0 > RA2 >>> 0 ? A8 + 1 | 0 : A8) - ((g6 >>> 0 > RA2 >>> 0) + SA2 | 0) | 0, QI2 = DA2 - (A8 = -2097152 & Q4) | 0, AI2 = B4 - ((A8 >>> 0 > DA2 >>> 0) + lA2 | 0) | 0, TA2 = fA2 - (A8 = -2097152 & c4) | 0, RA2 = xA2 - ((A8 >>> 0 > fA2 >>> 0) + OA2 | 0) | 0, A8 = PA(LA2, WA2, -997805, -1), g6 = t3, B4 = A8, A8 = PA(AA2, $2, 654183, 0), g6 = t3 + g6 | 0, g6 = A8 >>> 0 > (B4 = B4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, Q4 = (A8 = B4) + (B4 = PA($A2, CA2, 136657, 0)) | 0, A8 = t3 + g6 | 0, g6 = II2 + (B4 >>> 0 > Q4 >>> 0 ? A8 + 1 | 0 : A8) | 0, xA2 = (B4 = Q4 + qA2 | 0) - (A8 = -2097152 & yA2) | 0, OA2 = (g6 = B4 >>> 0 < qA2 >>> 0 ? g6 + 1 | 0 : g6) - ((A8 >>> 0 > B4 >>> 0) + gI2 | 0) | 0, qA2 = dA2 - (A8 = -2097152 & sA2) | 0, pA2 = KA2 - ((A8 >>> 0 > dA2 >>> 0) + EA2 | 0) | 0, g6 = PA(gA2, IA2, -997805, -1), A8 = t3, B4 = g6, g6 = PA(u4, V2, 654183, 0), A8 = t3 + A8 | 0, A8 = g6 >>> 0 > (B4 = B4 + g6 | 0) >>> 0 ? A8 + 1 | 0 : A8, Q4 = (g6 = B4) + (B4 = PA(X2, l3, 136657, 0)) | 0, g6 = t3 + A8 | 0, g6 = B4 >>> 0 > Q4 >>> 0 ? g6 + 1 | 0 : g6, A8 = PA(q4, m4, -683901, -1), B4 = t3 + g6 | 0, g6 = YA2 + (A8 >>> 0 > (Q4 = A8 + Q4 | 0) >>> 0 ? B4 + 1 | 0 : B4) | 0, sA2 = (B4 = Q4 + zA2 | 0) - (A8 = -2097152 & _A2) | 0, KA2 = (g6 = B4 >>> 0 < zA2 >>> 0 ? g6 + 1 | 0 : g6) - ((A8 >>> 0 > B4 >>> 0) + QA2 | 0) | 0, g6 = PA(gA2, IA2, 654183, 0), A8 = t3, B4 = g6, g6 = PA(u4, V2, 470296, 0), A8 = t3 + A8 | 0, A8 = g6 >>> 0 > (B4 = B4 + g6 | 0) >>> 0 ? A8 + 1 | 0 : A8, Q4 = (g6 = PA(X2, l3, -997805, -1)) + B4 | 0, B4 = t3 + A8 | 0, g6 = bA2 + (g6 >>> 0 > Q4 >>> 0 ? B4 + 1 | 0 : B4) | 0, g6 = (A8 = Q4 + ZA2 | 0) >>> 0 < ZA2 >>> 0 ? g6 + 1 | 0 : g6, B4 = A8, A8 = PA(q4, m4, 136657, 0), g6 = t3 + g6 | 0, g6 = A8 >>> 0 > (B4 = B4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, Q4 = (A8 = B4) + (B4 = PA(z2, j2, -683901, -1)) | 0, A8 = t3 + g6 | 0, yA2 = Q4 - (g6 = -2097152 & UA2) | 0, c4 = (B4 >>> 0 > Q4 >>> 0 ? A8 + 1 | 0 : A8) - ((g6 >>> 0 > Q4 >>> 0) + BA2 | 0) | 0, Q4 = (i3[D4 + 28 | 0] | i3[D4 + 29 | 0] << 8 | i3[D4 + 30 | 0] << 16 | i3[D4 + 31 | 0] << 24) >>> 7 | 0, A8 = PA(e4, 0, J4, 0), g6 = t3, DA2 = (B4 = A8) + (A8 = PA(w4, 0, Y4, 0)) | 0, B4 = t3 + g6 | 0, B4 = A8 >>> 0 > DA2 >>> 0 ? B4 + 1 | 0 : B4, A8 = PA(k4, 0, U4, 0), g6 = t3 + B4 | 0, g6 = A8 >>> 0 > (DA2 = A8 + DA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = PA(N4, K4, d4, 0), A8 = t3 + g6 | 0, A8 = B4 >>> 0 > (DA2 = B4 + DA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = PA(S4, 0, b4, 0), g6 = t3 + A8 | 0, g6 = B4 >>> 0 > (DA2 = B4 + DA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = PA(_4, 0, G4, 0), A8 = t3 + g6 | 0, A8 = B4 >>> 0 > (DA2 = B4 + DA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = PA(p4, 0, H4, 0), B4 = t3 + A8 | 0, B4 = g6 >>> 0 > (DA2 = g6 + DA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, A8 = PA(M4, nA2, JA2, 0), g6 = t3 + B4 | 0, g6 = A8 >>> 0 > (DA2 = A8 + DA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = PA(h4, 0, R4, 0), A8 = t3 + g6 | 0, A8 = B4 >>> 0 > (DA2 = B4 + DA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = PA(f4, 0, P4, 0), g6 = t3 + A8 | 0, g6 = B4 >>> 0 > (DA2 = B4 + DA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = PA(n4, 0, L4, 0), A8 = t3 + g6 | 0, A8 = B4 >>> 0 > (DA2 = B4 + DA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = PA(F4, 0, x4, 0), B4 = t3 + A8 | 0, g6 = B4 = g6 >>> 0 > (DA2 = g6 + DA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, YA2 = (B4 = (2097151 & uA2) << 11 | XA2 >>> 21) + (A8 = Q4 + DA2 | 0) | 0, A8 = (uA2 >>> 21 | 0) + (g6 = A8 >>> 0 < DA2 >>> 0 ? g6 + 1 | 0 : g6) | 0, kA2 = A8 = B4 >>> 0 > YA2 >>> 0 ? A8 + 1 | 0 : A8, lA2 = g6 = A8 - ((YA2 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (A8 = g6 >>> 21 | 0) + c4 | 0, fA2 = B4 = (g6 = (2097151 & g6) << 11 | (nA2 = YA2 - -1048576 | 0) >>> 21) >>> 0 > (_A2 = g6 + yA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, XA2 = g6 = B4 - ((_A2 >>> 0 < 4293918720) - 1 | 0) | 0, A8 = (A8 = g6 >> 21) + KA2 | 0, yA2 = A8 = (g6 = (2097151 & g6) << 11 | (DA2 = _A2 - -1048576 | 0) >>> 21) >>> 0 > (sA2 = g6 + sA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, UA2 = g6 = A8 - ((sA2 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (A8 = g6 >> 21) + pA2 | 0, uA2 = B4 = (g6 = (Q4 = (2097151 & g6) << 11 | (c4 = sA2 - -1048576 | 0) >>> 21) + qA2 | 0) >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, pA2 = g6, A8 = PA(g6, B4, -683901, -1), g6 = t3 + OA2 | 0, KA2 = B4 = A8 + xA2 | 0, Q4 = A8 >>> 0 > B4 >>> 0 ? g6 + 1 | 0 : g6, g6 = PA(AA2, $2, 470296, 0), A8 = t3 + tA2 | 0, A8 = g6 >>> 0 > (eA2 = g6 + eA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = PA(LA2, WA2, 654183, 0), A8 = t3 + (A8 - (((B4 = -2097152 & aA2) >>> 0 > eA2 >>> 0) + cA2 | 0) | 0) | 0, A8 = g6 >>> 0 > (aA2 = g6 + (eA2 - B4 | 0) | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = PA($A2, CA2, -997805, -1), g6 = t3 + A8 | 0, g6 = B4 >>> 0 > (aA2 = B4 + aA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, bA2 = B4 = sA2 - (A8 = -2097152 & c4) | 0, JA2 = yA2 = yA2 - ((A8 >>> 0 > sA2 >>> 0) + UA2 | 0) | 0, aA2 = (c4 = PA(pA2, uA2, 136657, 0)) + aA2 | 0, A8 = t3 + g6 | 0, B4 = PA(B4, yA2, -683901, -1), g6 = t3 + (c4 >>> 0 > aA2 >>> 0 ? A8 + 1 | 0 : A8) | 0, yA2 = g6 = B4 >>> 0 > (tA2 = B4 + aA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, UA2 = A8 = g6 - ((tA2 >>> 0 < 4293918720) - 1 | 0) | 0, g6 = (2097151 & A8) << 11 | (c4 = tA2 - -1048576 | 0) >>> 21, A8 = (A8 >> 21) + Q4 | 0, sA2 = g6 = (A8 = g6 >>> 0 > (aA2 = g6 + KA2 | 0) >>> 0 ? A8 + 1 | 0 : A8) - ((aA2 >>> 0 < 4293918720) - 1 | 0) | 0, eA2 = (2097151 & g6) << 11 | (Q4 = aA2 - -1048576 | 0) >>> 21, g6 = (g6 >> 21) + RA2 | 0, TA2 = KA2 = eA2 + TA2 | 0, KA2 = eA2 >>> 0 > KA2 >>> 0 ? g6 + 1 | 0 : g6, RA2 = aA2 - (g6 = -2097152 & Q4) | 0, ZA2 = A8 - ((g6 >>> 0 > aA2 >>> 0) + sA2 | 0) | 0, xA2 = tA2 - (A8 = -2097152 & c4) | 0, OA2 = yA2 - ((A8 >>> 0 > tA2 >>> 0) + UA2 | 0) | 0, A8 = PA(AA2, $2, 666643, 0), B4 = NA2 + t3 | 0, B4 = (c4 = A8 + VA2 | 0) >>> 0 < VA2 >>> 0 ? B4 + 1 | 0 : B4, Q4 = (A8 = PA(LA2, WA2, 470296, 0)) + (c4 - (g6 = -2097152 & wA2) | 0) | 0, g6 = t3 + (B4 - ((g6 >>> 0 > c4 >>> 0) + oA2 | 0) | 0) | 0, g6 = A8 >>> 0 > Q4 >>> 0 ? g6 + 1 | 0 : g6, B4 = PA($A2, CA2, 654183, 0), A8 = t3 + g6 | 0, aA2 = Q4 = B4 + Q4 | 0, Q4 = B4 >>> 0 > Q4 >>> 0 ? A8 + 1 | 0 : A8, c4 = _A2 - (A8 = -2097152 & DA2) | 0, yA2 = fA2 - ((A8 >>> 0 > _A2 >>> 0) + XA2 | 0) | 0, A8 = PA(gA2, IA2, 470296, 0), g6 = t3, B4 = A8, A8 = PA(u4, V2, 666643, 0), g6 = t3 + g6 | 0, g6 = A8 >>> 0 > (B4 = B4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, A8 = PA(X2, l3, 654183, 0), g6 = t3 + g6 | 0, g6 = A8 >>> 0 > (B4 = A8 + B4 | 0) >>> 0 ? g6 + 1 | 0 : g6, DA2 = (A8 = B4) + (B4 = PA(q4, m4, -997805, -1)) | 0, A8 = t3 + g6 | 0, A8 = B4 >>> 0 > DA2 >>> 0 ? A8 + 1 | 0 : A8, g6 = PA(z2, j2, 136657, 0), A8 = t3 + A8 | 0, A8 = g6 >>> 0 > (B4 = g6 + DA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, DA2 = (g6 = PA(T2, O2, -683901, -1)) + B4 | 0, B4 = t3 + A8 | 0, g6 = kA2 + (g6 >>> 0 > DA2 >>> 0 ? B4 + 1 | 0 : B4) | 0, _A2 = (B4 = (2097151 & vA2) << 11 | GA2 >>> 21) + ((DA2 = DA2 + YA2 | 0) - (A8 = -2097152 & nA2) | 0) | 0, A8 = ((g6 = DA2 >>> 0 < YA2 >>> 0 ? g6 + 1 | 0 : g6) - ((A8 >>> 0 > DA2 >>> 0) + lA2 | 0) | 0) + (vA2 >> 21) | 0, sA2 = A8 = B4 >>> 0 > _A2 >>> 0 ? A8 + 1 | 0 : A8, qA2 = A8 = A8 - ((_A2 >>> 0 < 4293918720) - 1 | 0) | 0, g6 = c4, c4 = (2097151 & A8) << 11 | (wA2 = _A2 - -1048576 | 0) >>> 21, A8 = (A8 >> 21) + yA2 | 0, UA2 = A8 = (B4 = g6 + c4 | 0) >>> 0 < c4 >>> 0 ? A8 + 1 | 0 : A8, YA2 = B4, A8 = PA(B4, A8, -683901, -1), g6 = t3 + Q4 | 0, g6 = A8 >>> 0 > (B4 = A8 + aA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, Q4 = (A8 = B4) + (B4 = PA(pA2, uA2, -997805, -1)) | 0, A8 = t3 + g6 | 0, A8 = B4 >>> 0 > Q4 >>> 0 ? A8 + 1 | 0 : A8, g6 = PA(bA2, JA2, 136657, 0), B4 = t3 + A8 | 0, GA2 = Q4 = g6 + Q4 | 0, fA2 = g6 >>> 0 > Q4 >>> 0 ? B4 + 1 | 0 : B4, aA2 = jA2 - (A8 = -2097152 & hA2) | 0, kA2 = rA2 - ((A8 >>> 0 > jA2 >>> 0) + iA2 | 0) | 0, g6 = PA(J4, 0, P4, 0), A8 = t3, B4 = g6, g6 = PA(Y4, 0, R4, 0), A8 = t3 + A8 | 0, A8 = g6 >>> 0 > (B4 = B4 + g6 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = PA(U4, 0, L4, 0), A8 = t3 + A8 | 0, A8 = g6 >>> 0 > (B4 = g6 + B4 | 0) >>> 0 ? A8 + 1 | 0 : A8, Q4 = (g6 = PA(b4, 0, x4, 0)) + B4 | 0, B4 = t3 + A8 | 0, g6 = g6 >>> 0 > Q4 >>> 0 ? B4 + 1 | 0 : B4, nA2 = B4 = (A8 = (i3[D4 + 7 | 0] | i3[D4 + 8 | 0] << 8 | i3[D4 + 9 | 0] << 16 | i3[D4 + 10 | 0] << 24) >>> 7 & 2097151) + Q4 | 0, DA2 = A8 >>> 0 > B4 >>> 0 ? g6 + 1 | 0 : g6, A8 = PA(J4, 0, R4, 0), g6 = t3, B4 = A8, A8 = PA(Y4, 0, x4, 0), g6 = t3 + g6 | 0, g6 = A8 >>> 0 > (B4 = B4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, Q4 = (A8 = B4) + (B4 = PA(b4, 0, L4, 0)) | 0, A8 = t3 + g6 | 0, yA2 = Q4, Q4 = B4 >>> 0 > Q4 >>> 0 ? A8 + 1 | 0 : A8, A8 = (g6 = i3[D4 + 6 | 0]) >>> 24 | 0, c4 = g6 << 8 | (lA2 = i3[D4 + 2 | 0] | i3[D4 + 3 | 0] << 8 | i3[D4 + 4 | 0] << 16 | i3[D4 + 5 | 0] << 24) >>> 24, B4 = A8, g6 = (A8 = i3[D4 + 7 | 0]) >>> 16 | 0, g6 |= B4, B4 = Q4, c4 = B4 = (A8 = 2097151 & ((3 & g6) << 30 | (A8 = A8 << 16 | c4) >>> 2)) >>> 0 > (yA2 = A8 + yA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, zA2 = A8 = B4 - ((yA2 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (2097151 & A8) << 11 | (NA2 = yA2 - -1048576 | 0) >>> 21, A8 = (A8 >>> 21 | 0) + DA2 | 0, eA2 = A8 = B4 >>> 0 > (rA2 = B4 + nA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, XA2 = A8 = A8 - ((rA2 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (g6 = A8 >>> 21 | 0) + kA2 | 0, B4 = (A8 = (2097151 & A8) << 11 | (tA2 = rA2 - -1048576 | 0) >>> 21) >>> 0 > (Q4 = A8 + aA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, g6 = PA(LA2, WA2, 666643, 0), A8 = t3 + B4 | 0, A8 = g6 >>> 0 > (Q4 = g6 + Q4 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = PA($A2, CA2, 470296, 0), A8 = t3 + A8 | 0, A8 = g6 >>> 0 > (B4 = g6 + Q4 | 0) >>> 0 ? A8 + 1 | 0 : A8, Q4 = (g6 = B4) + (B4 = PA(YA2, UA2, 136657, 0)) | 0, g6 = t3 + A8 | 0, g6 = B4 >>> 0 > Q4 >>> 0 ? g6 + 1 | 0 : g6, A8 = PA(pA2, uA2, 654183, 0), g6 = t3 + g6 | 0, g6 = A8 >>> 0 > (B4 = A8 + Q4 | 0) >>> 0 ? g6 + 1 | 0 : g6, aA2 = (A8 = PA(bA2, JA2, -997805, -1)) + B4 | 0, B4 = t3 + g6 | 0, kA2 = B4 = A8 >>> 0 > aA2 >>> 0 ? B4 + 1 | 0 : B4, vA2 = A8 = B4 - ((aA2 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (2097151 & A8) << 11 | (nA2 = aA2 - -1048576 | 0) >>> 21, A8 = (A8 >> 21) + fA2 | 0, GA2 = B4 = (A8 = B4 >>> 0 > (Q4 = B4 + GA2 | 0) >>> 0 ? A8 + 1 | 0 : A8) - ((Q4 >>> 0 < 4293918720) - 1 | 0) | 0, DA2 = (2097151 & B4) << 11 | (fA2 = Q4 - -1048576 | 0) >>> 21, B4 = (B4 >> 21) + OA2 | 0, dA2 = hA2 = DA2 + xA2 | 0, hA2 = DA2 >>> 0 > hA2 >>> 0 ? B4 + 1 | 0 : B4, DA2 = Q4, g6 = A8, Q4 = (_A2 - (A8 = -2097152 & wA2) | 0) + (wA2 = (2097151 & SA2) << 11 | HA2 >>> 21) | 0, A8 = (sA2 - ((A8 >>> 0 > _A2 >>> 0) + qA2 | 0) | 0) + (SA2 >> 21) | 0, SA2 = A8 = Q4 >>> 0 < wA2 >>> 0 ? A8 + 1 | 0 : A8, xA2 = A8 = A8 - ((Q4 >>> 0 < 4293918720) - 1 | 0) | 0, _A2 = B4 = A8 >> 21, A8 = PA(LA2 = (2097151 & A8) << 11 | (sA2 = Q4 - -1048576 | 0) >>> 21, B4, -683901, -1), g6 = t3 + g6 | 0, g6 = A8 >>> 0 > (B4 = A8 + DA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, OA2 = B4 - (A8 = -2097152 & fA2) | 0, jA2 = g6 - ((A8 >>> 0 > B4 >>> 0) + GA2 | 0) | 0, g6 = PA(LA2, _A2, 136657, 0), A8 = t3 + kA2 | 0, A8 = g6 >>> 0 > (B4 = g6 + aA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, VA2 = B4 - (g6 = -2097152 & nA2) | 0, vA2 = A8 - ((g6 >>> 0 > B4 >>> 0) + vA2 | 0) | 0, g6 = PA($A2, CA2, 666643, 0), A8 = t3 + (eA2 - (((B4 = -2097152 & tA2) >>> 0 > rA2 >>> 0) + XA2 | 0) | 0) | 0, A8 = g6 >>> 0 > (DA2 = g6 + (rA2 - B4 | 0) | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = PA(YA2, UA2, -997805, -1), g6 = t3 + A8 | 0, g6 = B4 >>> 0 > (DA2 = B4 + DA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, A8 = PA(pA2, uA2, 470296, 0), B4 = t3 + g6 | 0, B4 = A8 >>> 0 > (DA2 = A8 + DA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, g6 = PA(bA2, JA2, 654183, 0), A8 = t3 + B4 | 0, GA2 = DA2 = g6 + DA2 | 0, kA2 = g6 >>> 0 > DA2 >>> 0 ? A8 + 1 | 0 : A8, B4 = lA2 >>> 5 & 2097151, A8 = PA(J4, 0, x4, 0), g6 = t3, fA2 = A8, A8 = PA(Y4, 0, L4, 0), g6 = t3 + g6 | 0, A8 = A8 >>> 0 > (DA2 = fA2 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, fA2 = g6 = B4 + DA2 | 0, B4 = A8 = g6 >>> 0 < DA2 >>> 0 ? A8 + 1 | 0 : A8, rA2 = (g6 = PA(J4, 0, L4, 0)) + (A8 = (A8 = i3[D4 + 2 | 0]) << 16 & 2031616 | i3[0 | D4] | i3[D4 + 1 | 0] << 8) | 0, g6 = t3, wA2 = g6 = A8 >>> 0 > rA2 >>> 0 ? g6 + 1 | 0 : g6, qA2 = g6 = g6 - ((rA2 >>> 0 < 4293918720) - 1 | 0) | 0, A8 = (A8 = g6 >>> 21 | 0) + B4 | 0, tA2 = A8 = (g6 = (2097151 & g6) << 11 | (eA2 = rA2 - -1048576 | 0) >>> 21) >>> 0 > (HA2 = g6 + fA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, lA2 = g6 = A8 - ((HA2 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (2097151 & g6) << 11 | (aA2 = HA2 - -1048576 | 0) >>> 21, g6 = (g6 >>> 21 | 0) + c4 | 0, g6 = B4 >>> 0 > (DA2 = B4 + yA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = PA(YA2, UA2, 654183, 0), A8 = t3 + (g6 - (((c4 = -2097152 & NA2) >>> 0 > DA2 >>> 0) + zA2 | 0) | 0) | 0, A8 = B4 >>> 0 > (yA2 = B4 + (DA2 - c4 | 0) | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = PA(pA2, uA2, 666643, 0), A8 = t3 + A8 | 0, A8 = g6 >>> 0 > (B4 = g6 + yA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, nA2 = (g6 = B4) + (B4 = PA(bA2, JA2, 470296, 0)) | 0, g6 = t3 + A8 | 0, fA2 = g6 = B4 >>> 0 > nA2 >>> 0 ? g6 + 1 | 0 : g6, XA2 = g6 = g6 - ((nA2 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (A8 = g6 >> 21) + kA2 | 0, NA2 = g6 = (B4 = (g6 = (2097151 & g6) << 11 | (DA2 = nA2 - -1048576 | 0) >>> 21) >>> 0 > (yA2 = g6 + GA2 | 0) >>> 0 ? B4 + 1 | 0 : B4) - ((yA2 >>> 0 < 4293918720) - 1 | 0) | 0, kA2 = (2097151 & g6) << 11 | (c4 = yA2 - -1048576 | 0) >>> 21, g6 = (g6 >> 21) + vA2 | 0, uA2 = pA2 = kA2 + VA2 | 0, kA2 = kA2 >>> 0 > pA2 >>> 0 ? g6 + 1 | 0 : g6, A8 = PA(LA2, _A2, -997805, -1), g6 = t3 + B4 | 0, g6 = A8 >>> 0 > (yA2 = A8 + yA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, vA2 = yA2 - (A8 = -2097152 & c4) | 0, GA2 = g6 - ((A8 >>> 0 > yA2 >>> 0) + NA2 | 0) | 0, g6 = PA(LA2, _A2, 654183, 0), A8 = t3 + fA2 | 0, A8 = g6 >>> 0 > (B4 = g6 + nA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, pA2 = B4 - (g6 = -2097152 & DA2) | 0, NA2 = A8 - ((g6 >>> 0 > B4 >>> 0) + XA2 | 0) | 0, A8 = PA(YA2, UA2, 470296, 0), B4 = t3 + (tA2 - (((g6 = -2097152 & aA2) >>> 0 > HA2 >>> 0) + lA2 | 0) | 0) | 0, B4 = A8 >>> 0 > (c4 = A8 + (HA2 - g6 | 0) | 0) >>> 0 ? B4 + 1 | 0 : B4, g6 = PA(bA2, JA2, 666643, 0), A8 = t3 + B4 | 0, yA2 = c4 = g6 + c4 | 0, B4 = g6 >>> 0 > c4 >>> 0 ? A8 + 1 | 0 : A8, g6 = PA(YA2, UA2, 666643, 0), A8 = t3 + (wA2 - ((4095 & qA2) + ((c4 = -2097152 & eA2) >>> 0 > rA2 >>> 0) | 0) | 0) | 0, nA2 = A8 = g6 >>> 0 > (aA2 = g6 + (rA2 - c4 | 0) | 0) >>> 0 ? A8 + 1 | 0 : A8, wA2 = A8 = A8 - ((aA2 >>> 0 < 4293918720) - 1 | 0) | 0, c4 = (2097151 & A8) << 11 | (fA2 = aA2 - -1048576 | 0) >>> 21, A8 = (A8 >> 21) + B4 | 0, B4 = A8 = c4 >>> 0 > (DA2 = c4 + yA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, eA2 = A8 = A8 - ((DA2 >>> 0 < 4293918720) - 1 | 0) | 0, c4 = (2097151 & A8) << 11 | (yA2 = DA2 - -1048576 | 0) >>> 21, A8 = (A8 >> 21) + NA2 | 0, c4 = c4 >>> 0 > (tA2 = c4 + pA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, A8 = PA(LA2, _A2, 470296, 0), B4 = t3 + B4 | 0, B4 = A8 >>> 0 > (g6 = A8 + DA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, DA2 = g6 - (A8 = -2097152 & yA2) | 0, yA2 = B4 - ((A8 >>> 0 > g6 >>> 0) + eA2 | 0) | 0, g6 = PA(LA2, _A2, 666643, 0), A8 = t3 + (nA2 - (((B4 = -2097152 & fA2) >>> 0 > aA2 >>> 0) + wA2 | 0) | 0) | 0, g6 = (B4 = (A8 = g6 >>> 0 > (NA2 = g6 + (aA2 - B4 | 0) | 0) >>> 0 ? A8 + 1 | 0 : A8) >> 21) + yA2 | 0, A8 = (A8 = (g6 = (A8 = (2097151 & A8) << 11 | NA2 >>> 21) >>> 0 > (wA2 = A8 + DA2 | 0) >>> 0 ? g6 + 1 | 0 : g6) >> 21) + c4 | 0, g6 = (g6 = (A8 = (g6 = (2097151 & g6) << 11 | wA2 >>> 21) >>> 0 > (eA2 = g6 + tA2 | 0) >>> 0 ? A8 + 1 | 0 : A8) >> 21) + GA2 | 0, B4 = (A8 = (g6 = (A8 = (2097151 & A8) << 11 | eA2 >>> 21) >>> 0 > (c4 = A8 + vA2 | 0) >>> 0 ? g6 + 1 | 0 : g6) >> 21) + kA2 | 0, A8 = (g6 = (B4 = (g6 = (2097151 & g6) << 11 | c4 >>> 21) >>> 0 > (tA2 = g6 + uA2 | 0) >>> 0 ? B4 + 1 | 0 : B4) >> 21) + jA2 | 0, g6 = (B4 = (A8 = (B4 = (2097151 & B4) << 11 | tA2 >>> 21) >>> 0 > (aA2 = B4 + OA2 | 0) >>> 0 ? A8 + 1 | 0 : A8) >> 21) + hA2 | 0, A8 = (A8 = (g6 = (A8 = (2097151 & A8) << 11 | aA2 >>> 21) >>> 0 > (kA2 = A8 + dA2 | 0) >>> 0 ? g6 + 1 | 0 : g6) >> 21) + ZA2 | 0, g6 = (g6 = (A8 = (g6 = (2097151 & g6) << 11 | kA2 >>> 21) >>> 0 > (nA2 = g6 + RA2 | 0) >>> 0 ? A8 + 1 | 0 : A8) >> 21) + KA2 | 0, B4 = (A8 = (g6 = (A8 = (2097151 & A8) << 11 | nA2 >>> 21) >>> 0 > (fA2 = A8 + TA2 | 0) >>> 0 ? g6 + 1 | 0 : g6) >> 21) + AI2 | 0, A8 = (g6 = (B4 = (g6 = (2097151 & g6) << 11 | fA2 >>> 21) >>> 0 > (DA2 = g6 + QI2 | 0) >>> 0 ? B4 + 1 | 0 : B4) >> 21) + BI2 | 0, sA2 = (hA2 = Q4 - (g6 = -2097152 & sA2) | 0) + ((2097151 & (A8 = (B4 = (2097151 & B4) << 11 | DA2 >>> 21) >>> 0 > (yA2 = B4 + CI2 | 0) >>> 0 ? A8 + 1 | 0 : A8)) << 11 | yA2 >>> 21) | 0, A8 = (SA2 - ((g6 >>> 0 > Q4 >>> 0) + xA2 | 0) | 0) + (A8 >> 21) | 0, SA2 = g6 = (A8 = hA2 >>> 0 > sA2 >>> 0 ? A8 + 1 | 0 : A8) >> 21, NA2 = (A8 = PA(KA2 = (2097151 & A8) << 11 | sA2 >>> 21, g6, 666643, 0)) + (g6 = 2097151 & NA2) | 0, A8 = t3, Q4 = A8 = g6 >>> 0 > NA2 >>> 0 ? A8 + 1 | 0 : A8, C3[0 | o4] = NA2, C3[o4 + 1 | 0] = (255 & A8) << 24 | NA2 >>> 8, A8 = 2097151 & wA2, g6 = PA(KA2, SA2, 470296, 0) + A8 | 0, B4 = t3, A8 = (Q4 >> 21) + (A8 >>> 0 > g6 >>> 0 ? B4 + 1 | 0 : B4) | 0, A8 = (wA2 = (hA2 = (2097151 & Q4) << 11 | NA2 >>> 21) + g6 | 0) >>> 0 < hA2 >>> 0 ? A8 + 1 | 0 : A8, C3[o4 + 4 | 0] = (2047 & A8) << 21 | wA2 >>> 11, g6 = A8, B4 = wA2, C3[o4 + 3 | 0] = (7 & A8) << 29 | B4 >>> 3, C3[o4 + 2 | 0] = 31 & ((65535 & Q4) << 16 | NA2 >>> 16) | B4 << 5, Q4 = 2097151 & eA2, eA2 = PA(KA2, SA2, 654183, 0) + Q4 | 0, A8 = t3, wA2 = (2097151 & g6) << 11 | B4 >>> 21, g6 = (g6 >> 21) + (Q4 = Q4 >>> 0 > eA2 >>> 0 ? A8 + 1 | 0 : A8) | 0, A8 = g6 = (eA2 = wA2 + eA2 | 0) >>> 0 < wA2 >>> 0 ? g6 + 1 | 0 : g6, C3[o4 + 6 | 0] = (63 & A8) << 26 | eA2 >>> 6, Q4 = eA2, eA2 = 0, C3[o4 + 5 | 0] = eA2 << 13 | (1572864 & B4) >>> 19 | Q4 << 2, B4 = 2097151 & c4, c4 = PA(KA2, SA2, -997805, -1) + B4 | 0, g6 = t3, g6 = B4 >>> 0 > c4 >>> 0 ? g6 + 1 | 0 : g6, eA2 = (2097151 & (B4 = A8)) << 11 | Q4 >>> 21, B4 = (A8 >>= 21) + g6 | 0, B4 = (c4 = eA2 + c4 | 0) >>> 0 < eA2 >>> 0 ? B4 + 1 | 0 : B4, C3[o4 + 9 | 0] = (511 & B4) << 23 | c4 >>> 9, C3[o4 + 8 | 0] = (1 & B4) << 31 | c4 >>> 1, g6 = 0, C3[o4 + 7 | 0] = g6 << 18 | (2080768 & Q4) >>> 14 | c4 << 7, g6 = 2097151 & tA2, Q4 = PA(KA2, SA2, 136657, 0) + g6 | 0, A8 = t3, A8 = g6 >>> 0 > Q4 >>> 0 ? A8 + 1 | 0 : A8, tA2 = (2097151 & (g6 = B4)) << 11 | c4 >>> 21, g6 = A8 + (B4 = g6 >> 21) | 0, g6 = (Q4 = tA2 + Q4 | 0) >>> 0 < tA2 >>> 0 ? g6 + 1 | 0 : g6, C3[o4 + 12 | 0] = (4095 & g6) << 20 | Q4 >>> 12, B4 = Q4, C3[o4 + 11 | 0] = (15 & g6) << 28 | B4 >>> 4, Q4 = 0, C3[o4 + 10 | 0] = Q4 << 15 | (1966080 & c4) >>> 17 | B4 << 4, Q4 = 2097151 & aA2, c4 = PA(KA2, SA2, -683901, -1) + Q4 | 0, A8 = t3, A8 = Q4 >>> 0 > c4 >>> 0 ? A8 + 1 | 0 : A8, Q4 = g6, g6 = A8 + (g6 >>= 21) | 0, g6 = (Q4 = (aA2 = c4) + (c4 = (2097151 & Q4) << 11 | B4 >>> 21) | 0) >>> 0 < c4 >>> 0 ? g6 + 1 | 0 : g6, C3[o4 + 14 | 0] = (127 & g6) << 25 | Q4 >>> 7, c4 = 0, C3[o4 + 13 | 0] = c4 << 12 | (1048576 & B4) >>> 20 | Q4 << 1, A8 = g6 >> 21, B4 = (g6 = (2097151 & g6) << 11 | Q4 >>> 21) >>> 0 > (c4 = g6 + (2097151 & kA2) | 0) >>> 0 ? A8 + 1 | 0 : A8, C3[o4 + 17 | 0] = (1023 & B4) << 22 | c4 >>> 10, C3[o4 + 16 | 0] = (3 & B4) << 30 | c4 >>> 2, g6 = 0, C3[o4 + 15 | 0] = g6 << 17 | (2064384 & Q4) >>> 15 | c4 << 6, A8 = B4 >> 21, A8 = (g6 = (2097151 & B4) << 11 | c4 >>> 21) >>> 0 > (B4 = g6 + (2097151 & nA2) | 0) >>> 0 ? A8 + 1 | 0 : A8, C3[o4 + 20 | 0] = (8191 & A8) << 19 | B4 >>> 13, C3[o4 + 19 | 0] = (31 & A8) << 27 | B4 >>> 5, Q4 = (g6 = 2097151 & fA2) + (fA2 = (2097151 & A8) << 11 | B4 >>> 21) | 0, g6 = A8 >> 21, g6 = Q4 >>> 0 < fA2 >>> 0 ? g6 + 1 | 0 : g6, fA2 = Q4, C3[o4 + 21 | 0] = Q4, nA2 = 0, C3[o4 + 18 | 0] = nA2 << 14 | (1835008 & c4) >>> 18 | B4 << 3, C3[o4 + 22 | 0] = (255 & g6) << 24 | Q4 >>> 8, B4 = g6 >> 21, B4 = (Q4 = (c4 = (2097151 & g6) << 11 | Q4 >>> 21) + (2097151 & DA2) | 0) >>> 0 < c4 >>> 0 ? B4 + 1 | 0 : B4, C3[o4 + 25 | 0] = (2047 & B4) << 21 | Q4 >>> 11, C3[o4 + 24 | 0] = (7 & B4) << 29 | Q4 >>> 3, C3[o4 + 23 | 0] = 31 & ((65535 & g6) << 16 | fA2 >>> 16) | Q4 << 5, A8 = B4 >> 21, A8 = (g6 = (2097151 & B4) << 11 | Q4 >>> 21) >>> 0 > (B4 = g6 + (2097151 & yA2) | 0) >>> 0 ? A8 + 1 | 0 : A8, C3[o4 + 27 | 0] = (63 & A8) << 26 | B4 >>> 6, c4 = 0, C3[o4 + 26 | 0] = c4 << 13 | (1572864 & Q4) >>> 19 | B4 << 2, g6 = A8, A8 >>= 21, g6 = (Q4 = (yA2 = (2097151 & g6) << 11 | B4 >>> 21) + (c4 = 2097151 & sA2) | 0) >>> 0 < c4 >>> 0 ? A8 + 1 | 0 : A8, C3[o4 + 31 | 0] = (131071 & g6) << 15 | Q4 >>> 17, A8 = Q4, C3[o4 + 30 | 0] = (511 & g6) << 23 | A8 >>> 9, Q4 = 0, C3[o4 + 28 | 0] = Q4 << 18 | (2080768 & B4) >>> 14 | A8 << 7, C3[o4 + 29 | 0] = yA2 + sA2 >>> 1, MI(a4, 64), MI(D4, 64), I7 && (E3[I7 >> 2] = 64, E3[I7 + 4 >> 2] = 0), r3 = y4 + 560 | 0, 0;
                    }
                    function n3(A8, I7, g6, C4) {
                      for (var B4 = 0, Q4 = 0, o4 = 0, c4 = 0, D4 = 0, a4 = 0, y4 = 0, f4 = 0, e4 = 0, w4 = 0, r4 = 0, h4 = 0, k4 = 0, n4 = 0, s4 = 0, F4 = 0, S4 = 0, M4 = 0, N4 = 0, K4 = 0, _4 = 0, p4 = 0, H4 = 0, G4 = 0, J4 = 0, Y4 = 0, U4 = 0, d4 = 0, b4 = 0, P4 = 0, v5 = 0, R4 = 0, L4 = 0, x4 = 0, u4 = 0, m4 = 0, q4 = 0; o4 = (B4 = D4 << 3) + g6 | 0, Q4 = i3[0 | (B4 = I7 + B4 | 0)] | i3[B4 + 1 | 0] << 8 | i3[B4 + 2 | 0] << 16 | i3[B4 + 3 | 0] << 24, _4 = i3[B4 + 4 | 0] | i3[B4 + 5 | 0] << 8 | i3[B4 + 6 | 0] << 16 | i3[B4 + 7 | 0] << 24, a4 = Q4 << 24 | (65280 & Q4) << 8, y4 = (c4 = 16711680 & Q4) << 24, c4 = c4 >>> 8 | 0, B4 = (e4 = -16777216 & Q4) >>> 24 | 0, E3[o4 >> 2] = y4 | e4 << 8 | -16777216 & ((255 & _4) << 24 | Q4 >>> 8) | 16711680 & ((16777215 & _4) << 8 | Q4 >>> 24) | _4 >>> 8 & 65280 | _4 >>> 24, Q4 = B4 | c4 | a4, B4 = 0, E3[o4 + 4 >> 2] = Q4 | B4, 16 != (0 | (D4 = D4 + 1 | 0)); ) ;
                      for (I7 = E3[A8 + 4 >> 2], E3[C4 >> 2] = E3[A8 >> 2], E3[C4 + 4 >> 2] = I7, I7 = E3[A8 + 60 >> 2], E3[C4 + 56 >> 2] = E3[A8 + 56 >> 2], E3[C4 + 60 >> 2] = I7, I7 = E3[A8 + 52 >> 2], E3[C4 + 48 >> 2] = E3[A8 + 48 >> 2], E3[C4 + 52 >> 2] = I7, I7 = E3[A8 + 44 >> 2], E3[C4 + 40 >> 2] = E3[A8 + 40 >> 2], E3[C4 + 44 >> 2] = I7, I7 = E3[A8 + 36 >> 2], E3[C4 + 32 >> 2] = E3[A8 + 32 >> 2], E3[C4 + 36 >> 2] = I7, I7 = E3[A8 + 28 >> 2], E3[C4 + 24 >> 2] = E3[A8 + 24 >> 2], E3[C4 + 28 >> 2] = I7, I7 = E3[A8 + 20 >> 2], E3[C4 + 16 >> 2] = E3[A8 + 16 >> 2], E3[C4 + 20 >> 2] = I7, I7 = E3[A8 + 12 >> 2], E3[C4 + 8 >> 2] = E3[A8 + 8 >> 2], E3[C4 + 12 >> 2] = I7; o4 = E3[C4 + 56 >> 2], c4 = E3[C4 + 60 >> 2], B4 = E3[(I7 = _4 = (p4 = q4 << 3) + g6 | 0) >> 2], I7 = E3[I7 + 4 >> 2], S4 = Q4 = E3[C4 + 36 >> 2], Q4 = _A(n4 = E3[C4 + 32 >> 2], Q4, 50), D4 = t3, Q4 = _A(n4, S4, 46) ^ Q4, D4 ^= t3, Q4 = _A(n4, S4, 23) ^ Q4, I7 = (t3 ^ D4) + I7 | 0, I7 = (B4 = Q4 + B4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, B4 = (D4 = E3[(Q4 = p4 + 33968 | 0) >> 2]) + B4 | 0, I7 = E3[Q4 + 4 >> 2] + I7 | 0, I7 = B4 >>> 0 < D4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = (D4 = ((y4 = E3[C4 + 48 >> 2]) ^ (w4 = E3[C4 + 40 >> 2])) & n4 ^ y4) + B4 | 0, B4 = (((s4 = E3[C4 + 52 >> 2]) ^ (M4 = E3[C4 + 44 >> 2])) & S4 ^ s4) + I7 | 0, I7 = (Q4 >>> 0 < D4 >>> 0 ? B4 + 1 | 0 : B4) + c4 | 0, I7 = (o4 = Q4 + o4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, D4 = (Q4 = E3[C4 + 24 >> 2]) + o4 | 0, B4 = E3[C4 + 28 >> 2] + I7 | 0, r4 = B4 = Q4 >>> 0 > D4 >>> 0 ? B4 + 1 | 0 : B4, E3[C4 + 24 >> 2] = D4, E3[C4 + 28 >> 2] = B4, F4 = B4 = E3[C4 + 4 >> 2], B4 = _A(Q4 = E3[C4 >> 2], B4, 36), c4 = t3, B4 = _A(Q4, F4, 30) ^ B4, c4 ^= t3, e4 = o4 + (_A(Q4, F4, 25) ^ B4) | 0, B4 = I7 + (t3 ^ c4) | 0, B4 = o4 >>> 0 > e4 >>> 0 ? B4 + 1 | 0 : B4, a4 = (I7 = e4) + (e4 = Q4 & ((c4 = E3[C4 + 16 >> 2]) | (o4 = E3[C4 + 8 >> 2])) | o4 & c4) | 0, I7 = (I7 = B4) + (F4 & ((B4 = E3[C4 + 20 >> 2]) | (h4 = E3[C4 + 12 >> 2])) | B4 & h4) | 0, e4 = I7 = a4 >>> 0 < e4 >>> 0 ? I7 + 1 | 0 : I7, E3[C4 + 56 >> 2] = a4, E3[C4 + 60 >> 2] = I7, f4 = c4, k4 = B4, K4 = E3[(I7 = v5 = (N4 = 8 | p4) + g6 | 0) >> 2], G4 = E3[I7 + 4 >> 2], B4 = ((S4 ^ M4) & r4 ^ M4) + s4 | 0, B4 = (I7 = (c4 = (w4 ^ n4) & D4 ^ w4) + y4 | 0) >>> 0 < c4 >>> 0 ? B4 + 1 | 0 : B4, c4 = _A(D4, r4, 50), y4 = t3, c4 = _A(D4, r4, 46) ^ c4, y4 ^= t3, c4 = (s4 = _A(D4, r4, 23) ^ c4) + I7 | 0, I7 = (t3 ^ y4) + B4 | 0, I7 = (c4 >>> 0 < s4 >>> 0 ? I7 + 1 | 0 : I7) + G4 | 0, I7 = (B4 = c4 + K4 | 0) >>> 0 < c4 >>> 0 ? I7 + 1 | 0 : I7, c4 = (c4 = B4) + (y4 = E3[(B4 = N4 + 33968 | 0) >> 2]) | 0, B4 = E3[B4 + 4 >> 2] + I7 | 0, B4 = (I7 = c4 >>> 0 < y4 >>> 0 ? B4 + 1 | 0 : B4) + k4 | 0, s4 = B4 = (y4 = c4 + f4 | 0) >>> 0 < c4 >>> 0 ? B4 + 1 | 0 : B4, E3[C4 + 16 >> 2] = y4, E3[C4 + 20 >> 2] = B4, I7 = I7 + ((h4 | F4) & e4 | h4 & F4) | 0, I7 = (B4 = c4 + ((Q4 | o4) & a4 | Q4 & o4) | 0) >>> 0 < c4 >>> 0 ? I7 + 1 | 0 : I7, c4 = _A(a4, e4, 36), f4 = t3, c4 = _A(a4, e4, 30) ^ c4, f4 ^= t3, k4 = B4, B4 = _A(a4, e4, 25) ^ c4, I7 = (t3 ^ f4) + I7 | 0, f4 = I7 = B4 >>> 0 > (c4 = k4 + B4 | 0) >>> 0 ? I7 + 1 | 0 : I7, E3[C4 + 48 >> 2] = c4, E3[C4 + 52 >> 2] = I7, k4 = o4, N4 = h4, I7 = (h4 = E3[(B4 = U4 = (o4 = 16 | p4) + g6 | 0) >> 2]) + w4 | 0, B4 = E3[B4 + 4 >> 2] + M4 | 0, B4 = I7 >>> 0 < h4 >>> 0 ? B4 + 1 | 0 : B4, o4 = (w4 = I7) + (h4 = E3[(I7 = o4 + 33968 | 0) >> 2]) | 0, I7 = E3[I7 + 4 >> 2] + B4 | 0, I7 = ((r4 ^ S4) & s4 ^ S4) + (I7 = o4 >>> 0 < h4 >>> 0 ? I7 + 1 | 0 : I7) | 0, I7 = (B4 = (B4 = o4) + (o4 = (D4 ^ n4) & y4 ^ n4) | 0) >>> 0 < o4 >>> 0 ? I7 + 1 | 0 : I7, o4 = _A(y4, s4, 50), h4 = t3, o4 = _A(y4, s4, 46) ^ o4, h4 ^= t3, o4 = (w4 = _A(y4, s4, 23) ^ o4) + B4 | 0, B4 = (t3 ^ h4) + I7 | 0, B4 = (w4 = o4 >>> 0 < w4 >>> 0 ? B4 + 1 | 0 : B4) + N4 | 0, N4 = B4 = (h4 = o4) >>> 0 > (o4 = o4 + k4 | 0) >>> 0 ? B4 + 1 | 0 : B4, E3[C4 + 8 >> 2] = o4, E3[C4 + 12 >> 2] = B4, I7 = _A(c4, f4, 36), B4 = t3, I7 = _A(c4, f4, 30) ^ I7, B4 ^= t3, M4 = _A(c4, f4, 25) ^ I7, I7 = ((e4 | F4) & f4 | e4 & F4) + (t3 ^ B4) | 0, B4 = w4 + ((k4 = M4 + ((Q4 | a4) & c4 | Q4 & a4) | 0) >>> 0 < M4 >>> 0 ? I7 + 1 | 0 : I7) | 0, h4 = B4 = (w4 = h4 + k4 | 0) >>> 0 < h4 >>> 0 ? B4 + 1 | 0 : B4, E3[C4 + 40 >> 2] = w4, E3[C4 + 44 >> 2] = B4, k4 = Q4, B4 = (B4 = n4) + (n4 = E3[(I7 = R4 = (Q4 = 24 | p4) + g6 | 0) >> 2]) | 0, I7 = E3[I7 + 4 >> 2] + S4 | 0, I7 = B4 >>> 0 < n4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = (M4 = B4) + (n4 = E3[(B4 = Q4 + 33968 | 0) >> 2]) | 0, B4 = E3[B4 + 4 >> 2] + I7 | 0, B4 = (r4 ^ (r4 ^ s4) & N4) + (B4 = Q4 >>> 0 < n4 >>> 0 ? B4 + 1 | 0 : B4) | 0, B4 = (I7 = (I7 = Q4) + (Q4 = D4 ^ (D4 ^ y4) & o4) | 0) >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = _A(o4, N4, 50), n4 = t3, Q4 = _A(o4, N4, 46) ^ Q4, n4 ^= t3, Q4 = (S4 = _A(o4, N4, 23) ^ Q4) + I7 | 0, I7 = (t3 ^ n4) + B4 | 0, B4 = (I7 = Q4 >>> 0 < S4 >>> 0 ? I7 + 1 | 0 : I7) + F4 | 0, S4 = B4 = (F4 = Q4 + k4 | 0) >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, E3[C4 >> 2] = F4, E3[C4 + 4 >> 2] = B4, B4 = _A(w4, h4, 36), n4 = t3, B4 = _A(w4, h4, 30) ^ B4, k4 = t3 ^ n4, M4 = _A(w4, h4, 25) ^ B4, B4 = ((e4 | f4) & h4 | e4 & f4) + (t3 ^ k4) | 0, I7 = I7 + ((n4 = M4 + ((c4 | a4) & w4 | c4 & a4) | 0) >>> 0 < M4 >>> 0 ? B4 + 1 | 0 : B4) | 0, n4 = I7 = (k4 = Q4 + n4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, E3[C4 + 32 >> 2] = k4, E3[C4 + 36 >> 2] = I7, Q4 = E3[(B4 = P4 = (I7 = 32 | p4) + g6 | 0) >> 2], B4 = r4 + E3[B4 + 4 >> 2] | 0, B4 = (Q4 = Q4 + D4 | 0) >>> 0 < D4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = (D4 = E3[(I7 = I7 + 33968 | 0) >> 2]) + Q4 | 0, I7 = E3[I7 + 4 >> 2] + B4 | 0, I7 = (s4 ^ (s4 ^ N4) & S4) + (I7 = Q4 >>> 0 < D4 >>> 0 ? I7 + 1 | 0 : I7) | 0, I7 = (B4 = (B4 = Q4) + (Q4 = y4 ^ (o4 ^ y4) & F4) | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = _A(F4, S4, 50), D4 = t3, Q4 = _A(F4, S4, 46) ^ Q4, D4 ^= t3, Q4 = (r4 = _A(F4, S4, 23) ^ Q4) + B4 | 0, B4 = (t3 ^ D4) + I7 | 0, M4 = B4 = Q4 >>> 0 < r4 >>> 0 ? B4 + 1 | 0 : B4, I7 = B4, B4 = _A(k4, n4, 36), D4 = t3, B4 = _A(k4, n4, 30) ^ B4, r4 = t3 ^ D4, K4 = _A(k4, n4, 25) ^ B4, B4 = ((f4 | h4) & n4 | f4 & h4) + (t3 ^ r4) | 0, I7 = ((D4 = K4 + ((c4 | w4) & k4 | c4 & w4) | 0) >>> 0 < K4 >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, D4 = I7 = (r4 = Q4 + D4 | 0) >>> 0 < D4 >>> 0 ? I7 + 1 | 0 : I7, E3[C4 + 24 >> 2] = r4, E3[C4 + 28 >> 2] = I7, B4 = e4 + M4 | 0, M4 = B4 = (e4 = Q4 + a4 | 0) >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, E3[C4 + 56 >> 2] = e4, E3[C4 + 60 >> 2] = B4, Q4 = E3[(I7 = d4 = (B4 = 40 | p4) + g6 | 0) >> 2], I7 = s4 + E3[I7 + 4 >> 2] | 0, I7 = (Q4 = Q4 + y4 | 0) >>> 0 < y4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = (a4 = E3[(B4 = B4 + 33968 | 0) >> 2]) + Q4 | 0, B4 = E3[B4 + 4 >> 2] + I7 | 0, B4 = (N4 ^ (S4 ^ N4) & M4) + (B4 = Q4 >>> 0 < a4 >>> 0 ? B4 + 1 | 0 : B4) | 0, B4 = (I7 = (I7 = Q4) + (Q4 = o4 ^ (o4 ^ F4) & e4) | 0) >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = _A(e4, M4, 50), a4 = t3, Q4 = _A(e4, M4, 46) ^ Q4, a4 ^= t3, Q4 = (y4 = _A(e4, M4, 23) ^ Q4) + I7 | 0, I7 = (t3 ^ a4) + B4 | 0, I7 = Q4 >>> 0 < y4 >>> 0 ? I7 + 1 | 0 : I7, B4 = _A(r4, D4, 36), a4 = t3, B4 = _A(r4, D4, 30) ^ B4, y4 = t3 ^ a4, s4 = _A(r4, D4, 25) ^ B4, B4 = ((h4 | n4) & D4 | h4 & n4) + (t3 ^ y4) | 0, B4 = ((a4 = s4 + ((w4 | k4) & r4 | w4 & k4) | 0) >>> 0 < s4 >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, a4 = B4 = (y4 = Q4 + a4 | 0) >>> 0 < a4 >>> 0 ? B4 + 1 | 0 : B4, E3[C4 + 16 >> 2] = y4, E3[C4 + 20 >> 2] = B4, I7 = I7 + f4 | 0, K4 = I7 = (f4 = Q4 + c4 | 0) >>> 0 < c4 >>> 0 ? I7 + 1 | 0 : I7, E3[C4 + 48 >> 2] = f4, E3[C4 + 52 >> 2] = I7, Q4 = E3[(B4 = Y4 = (I7 = 48 | p4) + g6 | 0) >> 2], B4 = N4 + E3[B4 + 4 >> 2] | 0, B4 = (Q4 = Q4 + o4 | 0) >>> 0 < o4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = (o4 = E3[(I7 = I7 + 33968 | 0) >> 2]) + Q4 | 0, I7 = E3[I7 + 4 >> 2] + B4 | 0, I7 = (S4 ^ (S4 ^ M4) & K4) + (I7 = Q4 >>> 0 < o4 >>> 0 ? I7 + 1 | 0 : I7) | 0, I7 = (B4 = (B4 = Q4) + (Q4 = F4 ^ (e4 ^ F4) & f4) | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = _A(f4, K4, 50), o4 = t3, Q4 = _A(f4, K4, 46) ^ Q4, o4 ^= t3, Q4 = (c4 = _A(f4, K4, 23) ^ Q4) + B4 | 0, B4 = (t3 ^ o4) + I7 | 0, c4 = B4 = Q4 >>> 0 < c4 >>> 0 ? B4 + 1 | 0 : B4, I7 = B4, B4 = _A(y4, a4, 36), o4 = t3, B4 = _A(y4, a4, 30) ^ B4, s4 = t3 ^ o4, N4 = _A(y4, a4, 25) ^ B4, B4 = ((D4 | n4) & a4 | D4 & n4) + (t3 ^ s4) | 0, I7 = ((o4 = N4 + ((r4 | k4) & y4 | r4 & k4) | 0) >>> 0 < N4 >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, s4 = I7 = (B4 = o4) >>> 0 > (o4 = Q4 + o4 | 0) >>> 0 ? I7 + 1 | 0 : I7, E3[C4 + 8 >> 2] = o4, E3[C4 + 12 >> 2] = I7, B4 = c4 + h4 | 0, N4 = B4 = (G4 = Q4 + w4 | 0) >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, E3[C4 + 40 >> 2] = G4, E3[C4 + 44 >> 2] = B4, Q4 = E3[(I7 = b4 = (B4 = 56 | p4) + g6 | 0) >> 2], I7 = S4 + E3[I7 + 4 >> 2] | 0, I7 = (Q4 = Q4 + F4 | 0) >>> 0 < F4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = (c4 = E3[(B4 = B4 + 33968 | 0) >> 2]) + Q4 | 0, B4 = E3[B4 + 4 >> 2] + I7 | 0, B4 = (M4 ^ (M4 ^ K4) & N4) + (B4 = Q4 >>> 0 < c4 >>> 0 ? B4 + 1 | 0 : B4) | 0, B4 = (I7 = (I7 = Q4) + (Q4 = e4 ^ (e4 ^ f4) & G4) | 0) >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = _A(G4, N4, 50), c4 = t3, Q4 = _A(G4, N4, 46) ^ Q4, c4 ^= t3, Q4 = (h4 = _A(G4, N4, 23) ^ Q4) + I7 | 0, I7 = (t3 ^ c4) + B4 | 0, I7 = Q4 >>> 0 < h4 >>> 0 ? I7 + 1 | 0 : I7, B4 = _A(o4, s4, 36), c4 = t3, B4 = _A(o4, s4, 30) ^ B4, h4 = t3 ^ c4, w4 = _A(o4, s4, 25) ^ B4, B4 = ((D4 | a4) & s4 | D4 & a4) + (t3 ^ h4) | 0, B4 = ((c4 = w4 + ((y4 | r4) & o4 | y4 & r4) | 0) >>> 0 < w4 >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, h4 = B4 = (h4 = c4) >>> 0 > (c4 = Q4 + c4 | 0) >>> 0 ? B4 + 1 | 0 : B4, E3[C4 >> 2] = c4, E3[C4 + 4 >> 2] = B4, I7 = I7 + n4 | 0, S4 = I7 = (w4 = Q4 + k4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, E3[C4 + 32 >> 2] = w4, E3[C4 + 36 >> 2] = I7, Q4 = E3[(B4 = L4 = (I7 = 64 | p4) + g6 | 0) >> 2], B4 = M4 + E3[B4 + 4 >> 2] | 0, B4 = (Q4 = Q4 + e4 | 0) >>> 0 < e4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = (e4 = E3[(I7 = I7 + 33968 | 0) >> 2]) + Q4 | 0, I7 = E3[I7 + 4 >> 2] + B4 | 0, I7 = (K4 ^ (N4 ^ K4) & S4) + (I7 = Q4 >>> 0 < e4 >>> 0 ? I7 + 1 | 0 : I7) | 0, I7 = (B4 = (B4 = Q4) + (Q4 = f4 ^ (f4 ^ G4) & w4) | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = _A(w4, S4, 50), e4 = t3, Q4 = _A(w4, S4, 46) ^ Q4, e4 ^= t3, Q4 = (F4 = _A(w4, S4, 23) ^ Q4) + B4 | 0, B4 = (t3 ^ e4) + I7 | 0, n4 = B4 = Q4 >>> 0 < F4 >>> 0 ? B4 + 1 | 0 : B4, I7 = B4, B4 = _A(c4, h4, 36), e4 = t3, B4 = _A(c4, h4, 30) ^ B4, F4 = t3 ^ e4, k4 = _A(c4, h4, 25) ^ B4, B4 = ((a4 | s4) & h4 | a4 & s4) + (t3 ^ F4) | 0, I7 = ((e4 = k4 + ((o4 | y4) & c4 | o4 & y4) | 0) >>> 0 < k4 >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, e4 = I7 = (F4 = Q4 + e4 | 0) >>> 0 < e4 >>> 0 ? I7 + 1 | 0 : I7, E3[C4 + 56 >> 2] = F4, E3[C4 + 60 >> 2] = I7, B4 = D4 + n4 | 0, M4 = B4 = (D4 = Q4 + r4 | 0) >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, E3[C4 + 24 >> 2] = D4, E3[C4 + 28 >> 2] = B4, Q4 = E3[(I7 = J4 = (B4 = 72 | p4) + g6 | 0) >> 2], I7 = K4 + E3[I7 + 4 >> 2] | 0, I7 = (Q4 = Q4 + f4 | 0) >>> 0 < f4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = (f4 = E3[(B4 = B4 + 33968 | 0) >> 2]) + Q4 | 0, B4 = E3[B4 + 4 >> 2] + I7 | 0, B4 = (N4 ^ (S4 ^ N4) & M4) + (B4 = Q4 >>> 0 < f4 >>> 0 ? B4 + 1 | 0 : B4) | 0, B4 = (I7 = (I7 = Q4) + (Q4 = G4 ^ (w4 ^ G4) & D4) | 0) >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = _A(D4, M4, 50), f4 = t3, Q4 = _A(D4, M4, 46) ^ Q4, f4 ^= t3, Q4 = (n4 = _A(D4, M4, 23) ^ Q4) + I7 | 0, I7 = (t3 ^ f4) + B4 | 0, I7 = Q4 >>> 0 < n4 >>> 0 ? I7 + 1 | 0 : I7, B4 = _A(F4, e4, 36), f4 = t3, B4 = _A(F4, e4, 30) ^ B4, n4 = t3 ^ f4, k4 = _A(F4, e4, 25) ^ B4, B4 = ((h4 | s4) & e4 | h4 & s4) + (t3 ^ n4) | 0, B4 = ((f4 = k4 + ((o4 | c4) & F4 | o4 & c4) | 0) >>> 0 < k4 >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, f4 = B4 = (n4 = Q4 + f4 | 0) >>> 0 < f4 >>> 0 ? B4 + 1 | 0 : B4, E3[C4 + 48 >> 2] = n4, E3[C4 + 52 >> 2] = B4, I7 = I7 + a4 | 0, K4 = I7 = (a4 = Q4 + y4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, E3[C4 + 16 >> 2] = a4, E3[C4 + 20 >> 2] = I7, I7 = (I7 = G4) + (y4 = E3[(B4 = G4 = (Q4 = 80 | p4) + g6 | 0) >> 2]) | 0, B4 = E3[B4 + 4 >> 2] + N4 | 0, B4 = I7 >>> 0 < y4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = (r4 = I7) + (y4 = E3[(I7 = Q4 + 33968 | 0) >> 2]) | 0, I7 = E3[I7 + 4 >> 2] + B4 | 0, I7 = (S4 ^ (S4 ^ M4) & K4) + (I7 = Q4 >>> 0 < y4 >>> 0 ? I7 + 1 | 0 : I7) | 0, I7 = (B4 = (B4 = Q4) + (Q4 = w4 ^ (D4 ^ w4) & a4) | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = _A(a4, K4, 50), y4 = t3, Q4 = _A(a4, K4, 46) ^ Q4, y4 ^= t3, Q4 = (k4 = _A(a4, K4, 23) ^ Q4) + B4 | 0, B4 = (t3 ^ y4) + I7 | 0, r4 = B4 = Q4 >>> 0 < k4 >>> 0 ? B4 + 1 | 0 : B4, I7 = B4, B4 = _A(n4, f4, 36), y4 = t3, B4 = _A(n4, f4, 30) ^ B4, k4 = t3 ^ y4, N4 = _A(n4, f4, 25) ^ B4, B4 = ((e4 | h4) & f4 | e4 & h4) + (t3 ^ k4) | 0, I7 = ((y4 = N4 + ((c4 | F4) & n4 | c4 & F4) | 0) >>> 0 < N4 >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, y4 = I7 = (k4 = Q4 + y4 | 0) >>> 0 < y4 >>> 0 ? I7 + 1 | 0 : I7, E3[C4 + 40 >> 2] = k4, E3[C4 + 44 >> 2] = I7, B4 = r4 + s4 | 0, s4 = B4 = (r4 = Q4 + o4 | 0) >>> 0 < o4 >>> 0 ? B4 + 1 | 0 : B4, E3[C4 + 8 >> 2] = r4, E3[C4 + 12 >> 2] = B4, B4 = 33968 + (I7 = 88 | p4) | 0, o4 = E3[(I7 = H4 = I7 + g6 | 0) >> 2], Q4 = E3[B4 >> 2] + o4 | 0, I7 = E3[B4 + 4 >> 2] + E3[I7 + 4 >> 2] | 0, B4 = S4 + (Q4 >>> 0 < o4 >>> 0 ? I7 + 1 | 0 : I7) | 0, B4 = (M4 ^ (M4 ^ K4) & s4) + (B4 = (I7 = Q4 + w4 | 0) >>> 0 < w4 >>> 0 ? B4 + 1 | 0 : B4) | 0, B4 = (I7 = (Q4 = D4 ^ (D4 ^ a4) & r4) + I7 | 0) >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = _A(r4, s4, 50), o4 = t3, Q4 = _A(r4, s4, 46) ^ Q4, o4 ^= t3, Q4 = (w4 = _A(r4, s4, 23) ^ Q4) + I7 | 0, I7 = (t3 ^ o4) + B4 | 0, I7 = Q4 >>> 0 < w4 >>> 0 ? I7 + 1 | 0 : I7, B4 = _A(k4, y4, 36), o4 = t3, B4 = _A(k4, y4, 30) ^ B4, w4 = t3 ^ o4, N4 = _A(k4, y4, 25) ^ B4, B4 = ((e4 | f4) & y4 | e4 & f4) + (t3 ^ w4) | 0, B4 = ((o4 = N4 + ((n4 | F4) & k4 | n4 & F4) | 0) >>> 0 < N4 >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, w4 = B4 = (w4 = o4) >>> 0 > (o4 = Q4 + o4 | 0) >>> 0 ? B4 + 1 | 0 : B4, E3[C4 + 32 >> 2] = o4, E3[C4 + 36 >> 2] = B4, I7 = I7 + h4 | 0, h4 = I7 = (B4 = c4) >>> 0 > (c4 = Q4 + c4 | 0) >>> 0 ? I7 + 1 | 0 : I7, E3[C4 >> 2] = c4, E3[C4 + 4 >> 2] = I7, B4 = 33968 + (I7 = 96 | p4) | 0, N4 = E3[(I7 = x4 = I7 + g6 | 0) >> 2], Q4 = E3[B4 >> 2] + N4 | 0, B4 = E3[B4 + 4 >> 2] + E3[I7 + 4 >> 2] | 0, I7 = M4 + (Q4 >>> 0 < N4 >>> 0 ? B4 + 1 | 0 : B4) | 0, I7 = (B4 = Q4 + D4 | 0) >>> 0 < D4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = (D4 = a4 ^ (a4 ^ r4) & c4) + B4 | 0, B4 = (K4 ^ (s4 ^ K4) & h4) + I7 | 0, B4 = Q4 >>> 0 < D4 >>> 0 ? B4 + 1 | 0 : B4, I7 = _A(c4, h4, 50), D4 = t3, I7 = _A(c4, h4, 46) ^ I7, D4 ^= t3, M4 = Q4, Q4 = _A(c4, h4, 23) ^ I7, B4 = (t3 ^ D4) + B4 | 0, S4 = B4 = (I7 = M4 + Q4 | 0) >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = I7, I7 = _A(o4, w4, 36), D4 = t3, I7 = _A(o4, w4, 30) ^ I7, N4 = t3 ^ D4, M4 = _A(o4, w4, 25) ^ I7, I7 = ((y4 | f4) & w4 | y4 & f4) + (t3 ^ N4) | 0, B4 = ((D4 = M4 + ((n4 | k4) & o4 | n4 & k4) | 0) >>> 0 < M4 >>> 0 ? I7 + 1 | 0 : I7) + B4 | 0, D4 = B4 = (N4 = Q4 + D4 | 0) >>> 0 < D4 >>> 0 ? B4 + 1 | 0 : B4, E3[C4 + 24 >> 2] = N4, E3[C4 + 28 >> 2] = B4, B4 = e4 + S4 | 0, e4 = B4 = (F4 = Q4 + F4 | 0) >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, E3[C4 + 56 >> 2] = F4, E3[C4 + 60 >> 2] = B4, B4 = 33968 + (I7 = 104 | p4) | 0, S4 = E3[(I7 = m4 = I7 + g6 | 0) >> 2], Q4 = E3[B4 >> 2] + S4 | 0, I7 = E3[B4 + 4 >> 2] + E3[I7 + 4 >> 2] | 0, B4 = K4 + (Q4 >>> 0 < S4 >>> 0 ? I7 + 1 | 0 : I7) | 0, B4 = (I7 = Q4 + a4 | 0) >>> 0 < a4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = (a4 = r4 ^ (c4 ^ r4) & F4) + I7 | 0, I7 = (s4 ^ (h4 ^ s4) & e4) + B4 | 0, I7 = Q4 >>> 0 < a4 >>> 0 ? I7 + 1 | 0 : I7, B4 = _A(F4, e4, 50), a4 = t3, B4 = _A(F4, e4, 46) ^ B4, a4 ^= t3, S4 = _A(F4, e4, 23) ^ B4, B4 = (t3 ^ a4) + I7 | 0, M4 = B4 = (Q4 = S4 + Q4 | 0) >>> 0 < S4 >>> 0 ? B4 + 1 | 0 : B4, I7 = B4, B4 = _A(N4, D4, 36), a4 = t3, B4 = _A(N4, D4, 30) ^ B4, S4 = t3 ^ a4, K4 = _A(N4, D4, 25) ^ B4, B4 = ((y4 | w4) & D4 | y4 & w4) + (t3 ^ S4) | 0, I7 = ((a4 = K4 + ((o4 | k4) & N4 | o4 & k4) | 0) >>> 0 < K4 >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, a4 = I7 = (S4 = Q4 + a4 | 0) >>> 0 < a4 >>> 0 ? I7 + 1 | 0 : I7, E3[C4 + 16 >> 2] = S4, E3[C4 + 20 >> 2] = I7, I7 = f4 + M4 | 0, f4 = I7 = (n4 = Q4 + n4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, E3[C4 + 48 >> 2] = n4, E3[C4 + 52 >> 2] = I7, B4 = 33968 + (I7 = 112 | p4) | 0, M4 = E3[(Q4 = K4 = I7 + g6 | 0) >> 2], I7 = E3[B4 >> 2] + M4 | 0, B4 = E3[B4 + 4 >> 2] + E3[Q4 + 4 >> 2] | 0, B4 = s4 + (I7 >>> 0 < M4 >>> 0 ? B4 + 1 | 0 : B4) | 0, B4 = (h4 ^ (e4 ^ h4) & f4) + (B4 = (I7 = I7 + r4 | 0) >>> 0 < r4 >>> 0 ? B4 + 1 | 0 : B4) | 0, B4 = (I7 = (Q4 = c4 ^ (c4 ^ F4) & n4) + I7 | 0) >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = _A(n4, f4, 50), r4 = t3, Q4 = _A(n4, f4, 46) ^ Q4, r4 ^= t3, Q4 = (s4 = _A(n4, f4, 23) ^ Q4) + I7 | 0, I7 = (t3 ^ r4) + B4 | 0, M4 = I7 = Q4 >>> 0 < s4 >>> 0 ? I7 + 1 | 0 : I7, B4 = I7, I7 = _A(S4, a4, 36), r4 = t3, I7 = _A(S4, a4, 30) ^ I7, s4 = t3 ^ r4, u4 = _A(S4, a4, 25) ^ I7, I7 = ((D4 | w4) & a4 | D4 & w4) + (t3 ^ s4) | 0, B4 = ((r4 = u4 + ((o4 | N4) & S4 | o4 & N4) | 0) >>> 0 < u4 >>> 0 ? I7 + 1 | 0 : I7) + B4 | 0, r4 = B4 = (s4 = Q4 + r4 | 0) >>> 0 < r4 >>> 0 ? B4 + 1 | 0 : B4, E3[C4 + 8 >> 2] = s4, E3[C4 + 12 >> 2] = B4, B4 = y4 + M4 | 0, Q4 = B4 = (y4 = Q4 + k4 | 0) >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, E3[C4 + 40 >> 2] = y4, E3[C4 + 44 >> 2] = B4, B4 = 33968 + (I7 = 120 | p4) | 0, p4 = E3[(I7 = k4 = I7 + g6 | 0) >> 2], M4 = E3[B4 >> 2] + p4 | 0, B4 = E3[B4 + 4 >> 2] + E3[I7 + 4 >> 2] | 0, I7 = h4 + (M4 >>> 0 < p4 >>> 0 ? B4 + 1 | 0 : B4) | 0, I7 = (e4 ^ (e4 ^ f4) & Q4) + (I7 = (B4 = c4 + M4 | 0) >>> 0 < c4 >>> 0 ? I7 + 1 | 0 : I7) | 0, I7 = (B4 = (c4 = F4 ^ (n4 ^ F4) & y4) + B4 | 0) >>> 0 < c4 >>> 0 ? I7 + 1 | 0 : I7, c4 = _A(y4, Q4, 50), e4 = t3, c4 = _A(y4, Q4, 46) ^ c4, e4 ^= t3, Q4 = (c4 = _A(y4, Q4, 23) ^ c4) + B4 | 0, B4 = (t3 ^ e4) + I7 | 0, B4 = Q4 >>> 0 < c4 >>> 0 ? B4 + 1 | 0 : B4, c4 = Q4, e4 = B4, I7 = B4, B4 = _A(s4, r4, 36), y4 = t3, B4 = _A(s4, r4, 30) ^ B4, f4 = t3 ^ y4, h4 = _A(s4, r4, 25) ^ B4, B4 = ((D4 | a4) & r4 | D4 & a4) + (t3 ^ f4) | 0, I7 = ((y4 = h4 + ((S4 | N4) & s4 | S4 & N4) | 0) >>> 0 < h4 >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, I7 = (Q4 = Q4 + y4 | 0) >>> 0 < y4 >>> 0 ? I7 + 1 | 0 : I7, E3[C4 >> 2] = Q4, E3[C4 + 4 >> 2] = I7, B4 = e4 + w4 | 0, B4 = (f4 = o4) >>> 0 > (o4 = o4 + c4 | 0) >>> 0 ? B4 + 1 | 0 : B4, E3[C4 + 32 >> 2] = o4, E3[C4 + 36 >> 2] = B4, 64 != (0 | q4); ) a4 = ((q4 = q4 + 16 | 0) << 3) + g6 | 0, c4 = E3[_4 >> 2], D4 = E3[_4 + 4 >> 2], u4 = E3[J4 >> 2], e4 = I7 = E3[J4 + 4 >> 2], B4 = I7, Q4 = I7 = E3[K4 + 4 >> 2], I7 = _A(N4 = E3[K4 >> 2], I7, 45), o4 = t3, f4 = ((63 & Q4) << 26 | N4 >>> 6) ^ (I7 = _A(N4, Q4, 3) ^ I7), I7 = (Q4 >>> 6 ^ (y4 = t3 ^ o4)) + B4 | 0, B4 = ((o4 = f4 + u4 | 0) >>> 0 < f4 >>> 0 ? I7 + 1 | 0 : I7) + D4 | 0, B4 = (I7 = o4 + c4 | 0) >>> 0 < o4 >>> 0 ? B4 + 1 | 0 : B4, c4 = o4 = E3[v5 + 4 >> 2], o4 = _A(D4 = E3[v5 >> 2], o4, 63), y4 = t3, o4 = ((127 & c4) << 25 | D4 >>> 7) ^ _A(D4, c4, 56) ^ o4, B4 = (t3 ^ y4 ^ c4 >>> 7) + B4 | 0, o4 = B4 = o4 >>> 0 > (S4 = o4 + I7 | 0) >>> 0 ? B4 + 1 | 0 : B4, E3[a4 >> 2] = S4, E3[a4 + 4 >> 2] = B4, D4 = (K4 = E3[G4 >> 2]) + D4 | 0, I7 = (a4 = E3[G4 + 4 >> 2]) + c4 | 0, B4 = D4 >>> 0 < K4 >>> 0 ? I7 + 1 | 0 : I7, c4 = I7 = E3[k4 + 4 >> 2], I7 = _A(M4 = E3[k4 >> 2], I7, 45), y4 = t3, f4 = D4, D4 = ((63 & c4) << 26 | M4 >>> 6) ^ _A(M4, c4, 3) ^ I7, B4 = (t3 ^ y4 ^ c4 >>> 6) + B4 | 0, D4 = D4 >>> 0 > (f4 = f4 + D4 | 0) >>> 0 ? B4 + 1 | 0 : B4, B4 = _A(y4 = E3[U4 >> 2], I7 = E3[U4 + 4 >> 2], 63), h4 = t3, r4 = f4, f4 = ((127 & I7) << 25 | y4 >>> 7) ^ _A(y4, I7, 56) ^ B4, B4 = (t3 ^ h4 ^ I7 >>> 7) + D4 | 0, D4 = B4 = f4 >>> 0 > (s4 = r4 + f4 | 0) >>> 0 ? B4 + 1 | 0 : B4, E3[_4 + 136 >> 2] = s4, E3[_4 + 140 >> 2] = B4, B4 = (G4 = E3[H4 >> 2]) + y4 | 0, I7 = (y4 = E3[H4 + 4 >> 2]) + I7 | 0, f4 = _A(S4, o4, 45), h4 = t3, f4 = (w4 = ((63 & o4) << 26 | S4 >>> 6) ^ _A(S4, o4, 3) ^ f4) + B4 | 0, B4 = (t3 ^ h4 ^ o4 >>> 6) + (B4 >>> 0 < G4 >>> 0 ? I7 + 1 | 0 : I7) | 0, B4 = f4 >>> 0 < w4 >>> 0 ? B4 + 1 | 0 : B4, h4 = I7 = E3[R4 + 4 >> 2], I7 = _A(w4 = E3[R4 >> 2], I7, 63), F4 = t3, r4 = f4, f4 = ((127 & h4) << 25 | w4 >>> 7) ^ _A(w4, h4, 56) ^ I7, B4 = (t3 ^ F4 ^ h4 >>> 7) + B4 | 0, f4 = B4 = f4 >>> 0 > (p4 = r4 + f4 | 0) >>> 0 ? B4 + 1 | 0 : B4, E3[_4 + 144 >> 2] = p4, E3[_4 + 148 >> 2] = B4, w4 = (v5 = E3[x4 >> 2]) + w4 | 0, I7 = (I7 = h4) + (h4 = E3[x4 + 4 >> 2]) | 0, B4 = w4 >>> 0 < v5 >>> 0 ? I7 + 1 | 0 : I7, I7 = _A(s4, D4, 45), F4 = t3, n4 = ((63 & D4) << 26 | s4 >>> 6) ^ _A(s4, D4, 3) ^ I7, B4 = (t3 ^ F4 ^ D4 >>> 6) + B4 | 0, B4 = (w4 = n4 + w4 | 0) >>> 0 < n4 >>> 0 ? B4 + 1 | 0 : B4, F4 = I7 = E3[P4 + 4 >> 2], I7 = _A(n4 = E3[P4 >> 2], I7, 63), k4 = t3, r4 = w4, w4 = ((127 & F4) << 25 | n4 >>> 7) ^ _A(n4, F4, 56) ^ I7, B4 = (t3 ^ k4 ^ F4 >>> 7) + B4 | 0, w4 = B4 = w4 >>> 0 > (U4 = r4 + w4 | 0) >>> 0 ? B4 + 1 | 0 : B4, E3[_4 + 152 >> 2] = U4, E3[_4 + 156 >> 2] = B4, I7 = (R4 = E3[m4 >> 2]) + n4 | 0, B4 = (B4 = F4) + (F4 = E3[m4 + 4 >> 2]) | 0, n4 = _A(p4, f4, 45), k4 = t3, n4 = ((63 & f4) << 26 | p4 >>> 6) ^ _A(p4, f4, 3) ^ n4, B4 = (t3 ^ k4 ^ f4 >>> 6) + (I7 >>> 0 < R4 >>> 0 ? B4 + 1 | 0 : B4) | 0, n4 = (r4 = n4 + I7 | 0) >>> 0 < n4 >>> 0 ? B4 + 1 | 0 : B4, B4 = _A(k4 = E3[d4 >> 2], I7 = E3[d4 + 4 >> 2], 63), P4 = t3, H4 = r4, r4 = ((127 & I7) << 25 | k4 >>> 7) ^ (B4 = _A(k4, I7, 56) ^ B4), B4 = (I7 >>> 7 ^ (d4 = t3 ^ P4)) + n4 | 0, n4 = B4 = r4 >>> 0 > (P4 = H4 + r4 | 0) >>> 0 ? B4 + 1 | 0 : B4, E3[_4 + 160 >> 2] = P4, E3[_4 + 164 >> 2] = B4, I7 = I7 + Q4 | 0, I7 = (B4 = k4 + N4 | 0) >>> 0 < k4 >>> 0 ? I7 + 1 | 0 : I7, k4 = _A(U4, w4, 45), r4 = t3, k4 = (d4 = ((63 & w4) << 26 | U4 >>> 6) ^ _A(U4, w4, 3) ^ k4) + B4 | 0, B4 = (t3 ^ r4 ^ w4 >>> 6) + I7 | 0, B4 = k4 >>> 0 < d4 >>> 0 ? B4 + 1 | 0 : B4, r4 = E3[Y4 >> 2], Y4 = I7 = E3[Y4 + 4 >> 2], I7 = _A(r4, I7, 63), d4 = t3, I7 = _A(r4, Y4, 56) ^ I7, H4 = k4, B4 = (Y4 >>> 7 ^ (J4 = t3 ^ d4)) + B4 | 0, k4 = B4 = (k4 = ((127 & Y4) << 25 | r4 >>> 7) ^ I7) >>> 0 > (d4 = H4 + k4 | 0) >>> 0 ? B4 + 1 | 0 : B4, E3[_4 + 168 >> 2] = d4, E3[_4 + 172 >> 2] = B4, I7 = c4 + Y4 | 0, I7 = (B4 = r4 + M4 | 0) >>> 0 < r4 >>> 0 ? I7 + 1 | 0 : I7, H4 = r4 = E3[b4 + 4 >> 2], r4 = _A(J4 = E3[b4 >> 2], r4, 63), Y4 = t3, r4 = (b4 = ((127 & H4) << 25 | J4 >>> 7) ^ _A(J4, H4, 56) ^ r4) + B4 | 0, B4 = (t3 ^ Y4 ^ H4 >>> 7) + I7 | 0, I7 = r4 >>> 0 < b4 >>> 0 ? B4 + 1 | 0 : B4, B4 = _A(P4, n4, 45), Y4 = t3, B4 = _A(P4, n4, 3) ^ B4, b4 = t3 ^ Y4, Y4 = r4, I7 = (n4 >>> 6 ^ b4) + I7 | 0, r4 = I7 = (r4 = ((63 & n4) << 26 | P4 >>> 6) ^ B4) >>> 0 > (Y4 = Y4 + r4 | 0) >>> 0 ? I7 + 1 | 0 : I7, E3[_4 + 176 >> 2] = Y4, E3[_4 + 180 >> 2] = I7, x4 = E3[L4 >> 2], L4 = I7 = E3[L4 + 4 >> 2], b4 = I7, I7 = _A(u4, e4, 63), B4 = t3, m4 = ((127 & e4) << 25 | u4 >>> 7) ^ _A(u4, e4, 56) ^ I7, I7 = (t3 ^ B4 ^ e4 >>> 7) + D4 | 0, B4 = ((s4 = m4 + s4 | 0) >>> 0 < m4 >>> 0 ? I7 + 1 | 0 : I7) + b4 | 0, B4 = (I7 = s4 + x4 | 0) >>> 0 < s4 >>> 0 ? B4 + 1 | 0 : B4, D4 = _A(Y4, r4, 45), s4 = t3, b4 = (D4 = ((63 & r4) << 26 | Y4 >>> 6) ^ _A(Y4, r4, 3) ^ D4) + I7 | 0, I7 = (t3 ^ s4 ^ r4 >>> 6) + B4 | 0, D4 = I7 = D4 >>> 0 > b4 >>> 0 ? I7 + 1 | 0 : I7, E3[_4 + 192 >> 2] = b4, E3[_4 + 196 >> 2] = I7, B4 = o4 + H4 | 0, B4 = (I7 = S4 + J4 | 0) >>> 0 < J4 >>> 0 ? B4 + 1 | 0 : B4, s4 = _A(x4, L4, 63), J4 = t3, H4 = ((127 & L4) << 25 | x4 >>> 7) ^ _A(x4, L4, 56) ^ s4, B4 = (t3 ^ J4 ^ L4 >>> 7) + B4 | 0, I7 = (s4 = H4 + I7 | 0) >>> 0 < H4 >>> 0 ? B4 + 1 | 0 : B4, B4 = _A(d4, k4, 45), J4 = t3, B4 = _A(d4, k4, 3) ^ B4, L4 = s4, I7 = (k4 >>> 6 ^ (H4 = t3 ^ J4)) + I7 | 0, s4 = I7 = (s4 = ((63 & k4) << 26 | d4 >>> 6) ^ B4) >>> 0 > (J4 = L4 + s4 | 0) >>> 0 ? I7 + 1 | 0 : I7, E3[_4 + 184 >> 2] = J4, E3[_4 + 188 >> 2] = I7, I7 = _A(G4, y4, 63), B4 = t3, I7 = ((127 & y4) << 25 | G4 >>> 7) ^ _A(G4, y4, 56) ^ I7, B4 = (t3 ^ B4 ^ y4 >>> 7) + a4 | 0, I7 = w4 + (I7 >>> 0 > (H4 = I7 + K4 | 0) >>> 0 ? B4 + 1 | 0 : B4) | 0, I7 = (B4 = U4 + H4 | 0) >>> 0 < U4 >>> 0 ? I7 + 1 | 0 : I7, w4 = _A(b4, D4, 45), U4 = t3, w4 = _A(b4, D4, 3) ^ w4, H4 = t3 ^ U4, U4 = (w4 ^= (63 & D4) << 26 | b4 >>> 6) + B4 | 0, B4 = (D4 >>> 6 ^ H4) + I7 | 0, w4 = B4 = w4 >>> 0 > U4 >>> 0 ? B4 + 1 | 0 : B4, E3[_4 + 208 >> 2] = U4, E3[_4 + 212 >> 2] = B4, I7 = _A(K4, a4, 63), B4 = t3, H4 = _A(K4, a4, 56) ^ I7, B4 = ((I7 = a4 >>> 7 | 0) ^ t3 ^ B4) + e4 | 0, I7 = f4 + ((a4 = (K4 = H4 ^ ((127 & a4) << 25 | K4 >>> 7)) + u4 | 0) >>> 0 < K4 >>> 0 ? B4 + 1 | 0 : B4) | 0, I7 = (B4 = a4 + p4 | 0) >>> 0 < p4 >>> 0 ? I7 + 1 | 0 : I7, e4 = _A(J4, s4, 45), a4 = t3, f4 = (e4 = ((63 & s4) << 26 | J4 >>> 6) ^ _A(J4, s4, 3) ^ e4) + B4 | 0, B4 = (t3 ^ a4 ^ s4 >>> 6) + I7 | 0, e4 = B4 = e4 >>> 0 > f4 >>> 0 ? B4 + 1 | 0 : B4, E3[_4 + 200 >> 2] = f4, E3[_4 + 204 >> 2] = B4, I7 = _A(R4, F4, 63), B4 = t3, K4 = ((127 & F4) << 25 | R4 >>> 7) ^ _A(R4, F4, 56) ^ I7, I7 = (t3 ^ B4 ^ F4 >>> 7) + h4 | 0, B4 = k4 + ((a4 = K4 + v5 | 0) >>> 0 < K4 >>> 0 ? I7 + 1 | 0 : I7) | 0, B4 = (I7 = a4 + d4 | 0) >>> 0 < d4 >>> 0 ? B4 + 1 | 0 : B4, a4 = _A(U4, w4, 45), k4 = t3, K4 = I7, I7 = w4 >>> 6 | 0, a4 = ((63 & w4) << 26 | U4 >>> 6) ^ _A(U4, w4, 3) ^ a4, B4 = (I7 ^ t3 ^ k4) + B4 | 0, a4 = B4 = a4 >>> 0 > (w4 = K4 + a4 | 0) >>> 0 ? B4 + 1 | 0 : B4, E3[_4 + 224 >> 2] = w4, E3[_4 + 228 >> 2] = B4, I7 = _A(v5, h4, 63), B4 = t3, I7 = _A(v5, h4, 56) ^ I7, k4 = t3 ^ B4, K4 = ((127 & h4) << 25 | v5 >>> 7) ^ I7, I7 = ((B4 = h4 >>> 7 | 0) ^ k4) + y4 | 0, B4 = n4 + ((h4 = K4 + G4 | 0) >>> 0 < K4 >>> 0 ? I7 + 1 | 0 : I7) | 0, B4 = (I7 = h4 + P4 | 0) >>> 0 < P4 >>> 0 ? B4 + 1 | 0 : B4, y4 = _A(f4, e4, 45), h4 = t3, k4 = I7, I7 = e4 >>> 6 | 0, e4 = ((63 & e4) << 26 | f4 >>> 6) ^ _A(f4, e4, 3) ^ y4, I7 = (I7 ^ t3 ^ h4) + B4 | 0, e4 = I7 = (y4 = k4 + e4 | 0) >>> 0 < e4 >>> 0 ? I7 + 1 | 0 : I7, E3[_4 + 216 >> 2] = y4, E3[_4 + 220 >> 2] = I7, I7 = _A(M4, c4, 63), B4 = t3, h4 = ((127 & c4) << 25 | M4 >>> 7) ^ _A(M4, c4, 56) ^ I7, B4 = (t3 ^ B4 ^ c4 >>> 7) + Q4 | 0, B4 = s4 + ((I7 = h4 + N4 | 0) >>> 0 < h4 >>> 0 ? B4 + 1 | 0 : B4) | 0, I7 = (f4 = I7 + J4 | 0) >>> 0 < J4 >>> 0 ? B4 + 1 | 0 : B4, B4 = _A(w4, a4, 45), h4 = t3, k4 = f4, f4 = _A(w4, a4, 3) ^ B4, B4 = a4 >>> 6 | 0, a4 = k4 + (f4 ^= (63 & a4) << 26 | w4 >>> 6) | 0, I7 = (B4 ^ t3 ^ h4) + I7 | 0, E3[_4 + 240 >> 2] = a4, E3[_4 + 244 >> 2] = a4 >>> 0 < f4 >>> 0 ? I7 + 1 | 0 : I7, I7 = _A(N4, Q4, 63), B4 = t3, I7 = _A(N4, Q4, 56) ^ I7, a4 = t3 ^ B4, B4 = ((B4 = Q4 >>> 7 | 0) ^ a4) + F4 | 0, I7 = r4 + ((I7 ^= (127 & Q4) << 25 | N4 >>> 7) >>> 0 > (Q4 = I7 + R4 | 0) >>> 0 ? B4 + 1 | 0 : B4) | 0, I7 = (B4 = Q4 + Y4 | 0) >>> 0 < Y4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = _A(y4, e4, 45), a4 = t3, f4 = B4, B4 = e4 >>> 6 | 0, Q4 = ((63 & e4) << 26 | y4 >>> 6) ^ _A(y4, e4, 3) ^ Q4, B4 = (B4 ^ t3 ^ a4) + I7 | 0, Q4 = B4 = Q4 >>> 0 > (e4 = f4 + Q4 | 0) >>> 0 ? B4 + 1 | 0 : B4, E3[_4 + 232 >> 2] = e4, E3[_4 + 236 >> 2] = B4, I7 = _A(S4, o4, 63), B4 = t3, f4 = _A(S4, o4, 56) ^ I7, B4 = ((I7 = o4 >>> 7 | 0) ^ t3 ^ B4) + c4 | 0, I7 = D4 + ((o4 = (a4 = f4 ^ ((127 & o4) << 25 | S4 >>> 7)) + M4 | 0) >>> 0 < a4 >>> 0 ? B4 + 1 | 0 : B4) | 0, I7 = (B4 = o4 + b4 | 0) >>> 0 < b4 >>> 0 ? I7 + 1 | 0 : I7, o4 = _A(e4, Q4, 45), c4 = t3, f4 = B4, B4 = Q4 >>> 6 | 0, Q4 = f4 + (o4 = ((63 & Q4) << 26 | e4 >>> 6) ^ _A(e4, Q4, 3) ^ o4) | 0, B4 = (B4 ^ t3 ^ c4) + I7 | 0, E3[_4 + 248 >> 2] = Q4, E3[_4 + 252 >> 2] = Q4 >>> 0 < o4 >>> 0 ? B4 + 1 | 0 : B4;
                      I7 = I7 + E3[A8 + 4 >> 2] | 0, I7 = (g6 = Q4 + E3[A8 >> 2] | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, E3[A8 >> 2] = g6, E3[A8 + 4 >> 2] = I7, B4 = E3[A8 + 12 >> 2] + E3[C4 + 12 >> 2] | 0, I7 = (g6 = E3[C4 + 8 >> 2]) + E3[A8 + 8 >> 2] | 0, E3[A8 + 8 >> 2] = I7, E3[A8 + 12 >> 2] = I7 >>> 0 < g6 >>> 0 ? B4 + 1 | 0 : B4, B4 = E3[A8 + 20 >> 2] + E3[C4 + 20 >> 2] | 0, I7 = (g6 = E3[C4 + 16 >> 2]) + E3[A8 + 16 >> 2] | 0, E3[A8 + 16 >> 2] = I7, E3[A8 + 20 >> 2] = I7 >>> 0 < g6 >>> 0 ? B4 + 1 | 0 : B4, I7 = E3[A8 + 28 >> 2] + E3[C4 + 28 >> 2] | 0, g6 = (B4 = E3[C4 + 24 >> 2]) + E3[A8 + 24 >> 2] | 0, E3[A8 + 24 >> 2] = g6, E3[A8 + 28 >> 2] = g6 >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = E3[A8 + 36 >> 2] + E3[C4 + 36 >> 2] | 0, I7 = (g6 = E3[C4 + 32 >> 2]) + E3[A8 + 32 >> 2] | 0, E3[A8 + 32 >> 2] = I7, E3[A8 + 36 >> 2] = I7 >>> 0 < g6 >>> 0 ? B4 + 1 | 0 : B4, I7 = E3[A8 + 44 >> 2] + E3[C4 + 44 >> 2] | 0, g6 = (B4 = E3[C4 + 40 >> 2]) + E3[A8 + 40 >> 2] | 0, E3[A8 + 40 >> 2] = g6, E3[A8 + 44 >> 2] = g6 >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = E3[A8 + 52 >> 2] + E3[C4 + 52 >> 2] | 0, I7 = (g6 = E3[C4 + 48 >> 2]) + E3[A8 + 48 >> 2] | 0, E3[A8 + 48 >> 2] = I7, E3[A8 + 52 >> 2] = I7 >>> 0 < g6 >>> 0 ? B4 + 1 | 0 : B4, B4 = E3[A8 + 60 >> 2] + E3[C4 + 60 >> 2] | 0, I7 = (g6 = E3[C4 + 56 >> 2]) + E3[A8 + 56 >> 2] | 0, E3[A8 + 56 >> 2] = I7, E3[A8 + 60 >> 2] = I7 >>> 0 < g6 >>> 0 ? B4 + 1 | 0 : B4;
                    }
                    function s3(A8) {
                      var I7, g6, B4, Q4, E4, o4, c4, D4, a4, y4, f4, e4 = 0, w4 = 0, r4 = 0, h4 = 0, k4 = 0, n4 = 0, s4 = 0, F4 = 0, S4 = 0, M4 = 0, N4 = 0, K4 = 0, _4 = 0, p4 = 0, H4 = 0, G4 = 0, J4 = 0, Y4 = 0, U4 = 0, d4 = 0, b4 = 0, P4 = 0, v5 = 0, R4 = 0, L4 = 0, x4 = 0, u4 = 0, m4 = 0, q4 = 0, l3 = 0, z2 = 0, j2 = 0, X2 = 0, O2 = 0, T2 = 0, V2 = 0, Z2 = 0;
                      h4 = (G4 = i3[A8 + 44 | 0] | i3[A8 + 45 | 0] << 8 | i3[A8 + 46 | 0] << 16 | i3[A8 + 47 | 0] << 24) >>> 5 & 2097151, r4 = PA(I7 = (i3[A8 + 60 | 0] | i3[A8 + 61 | 0] << 8 | i3[A8 + 62 | 0] << 16 | i3[A8 + 63 | 0] << 24) >>> 3 | 0, 0, -683901, -1), w4 = (e4 = i3[A8 + 44 | 0]) << 16 & 2031616 | i3[A8 + 42 | 0] | i3[A8 + 43 | 0] << 8, e4 = t3, F4 = e4 = w4 >>> 0 > (M4 = r4 + w4 | 0) >>> 0 ? e4 + 1 | 0 : e4, p4 = e4 = e4 - ((M4 >>> 0 < 4293918720) - 1 | 0) | 0, r4 = e4 >> 21, e4 = (w4 = h4) + (h4 = (2097151 & e4) << 11 | (n4 = M4 - -1048576 | 0) >>> 21) | 0, w4 = r4, P4 = w4 = e4 >>> 0 < h4 >>> 0 ? w4 + 1 | 0 : w4, z2 = e4, _4 = PA(e4, w4, -683901, -1), S4 = t3, s4 = PA(g6 = (i3[A8 + 49 | 0] | i3[A8 + 50 | 0] << 8 | i3[A8 + 51 | 0] << 16 | i3[A8 + 52 | 0] << 24) >>> 7 & 2097151, 0, -997805, -1), r4 = (e4 = i3[A8 + 27 | 0]) >>> 24 | 0, h4 = e4 << 8 | (H4 = i3[A8 + 23 | 0] | i3[A8 + 24 | 0] << 8 | i3[A8 + 25 | 0] << 16 | i3[A8 + 26 | 0] << 24) >>> 24, w4 = (e4 = i3[A8 + 28 | 0]) >>> 16 | 0, w4 = 2097151 & ((3 & (w4 |= r4)) << 30 | (e4 = h4 | e4 << 16) >>> 2), e4 = t3, e4 = w4 >>> 0 > (r4 = w4 + s4 | 0) >>> 0 ? e4 + 1 | 0 : e4, w4 = PA(q4 = (N4 = i3[A8 + 52 | 0] | i3[A8 + 53 | 0] << 8 | i3[A8 + 54 | 0] << 16 | i3[A8 + 55 | 0] << 24) >>> 4 & 2097151, 0, 654183, 0), e4 = t3 + e4 | 0, s4 = r4 = w4 + r4 | 0, r4 = w4 >>> 0 > r4 >>> 0 ? e4 + 1 | 0 : e4, k4 = (w4 = i3[A8 + 48 | 0]) << 8 | G4 >>> 24, w4 = e4 = w4 >>> 24 | 0, e4 = PA(B4 = 2097151 & ((3 & (G4 = (e4 = (h4 = i3[A8 + 49 | 0]) >>> 16 | 0) | w4)) << 30 | (w4 = (h4 <<= 16) | k4) >>> 2), 0, 136657, 0), r4 = t3 + r4 | 0, r4 = e4 >>> 0 > (w4 = e4 + s4 | 0) >>> 0 ? r4 + 1 | 0 : r4, h4 = (e4 = PA(Q4 = (i3[A8 + 57 | 0] | i3[A8 + 58 | 0] << 8 | i3[A8 + 59 | 0] << 16 | i3[A8 + 60 | 0] << 24) >>> 6 & 2097151, 0, 666643, 0)) + w4 | 0, w4 = t3 + r4 | 0, s4 = h4, r4 = e4 >>> 0 > h4 >>> 0 ? w4 + 1 | 0 : w4, w4 = (e4 = i3[A8 + 56 | 0]) >>> 24 | 0, k4 = e4 << 8 | N4 >>> 24, w4 = PA(E4 = 2097151 & ((1 & (N4 = (e4 = (h4 = i3[A8 + 57 | 0]) >>> 16 | 0) | w4)) << 31 | (w4 = (h4 <<= 16) | k4) >>> 1), 0, 470296, 0), e4 = t3 + r4 | 0, w4 = (e4 = (r4 = h4 = w4 + s4 | 0) >>> 0 < w4 >>> 0 ? e4 + 1 | 0 : e4) + S4 | 0, w4 = r4 >>> 0 > (h4 = r4 + _4 | 0) >>> 0 ? w4 + 1 | 0 : w4, J4 = r4 - -1048576 | 0, v5 = r4 = e4 - ((r4 >>> 0 < 4293918720) - 1 | 0) | 0, S4 = h4 - (e4 = -2097152 & J4) | 0, _4 = w4 - ((e4 >>> 0 > h4 >>> 0) + r4 | 0) | 0, w4 = PA(g6, 0, 654183, 0), e4 = t3, e4 = w4 >>> 0 > (r4 = w4 + (H4 >>> 5 & 2097151) | 0) >>> 0 ? e4 + 1 | 0 : e4, h4 = (w4 = r4) + (r4 = PA(q4, 0, 470296, 0)) | 0, w4 = t3 + e4 | 0, w4 = r4 >>> 0 > h4 >>> 0 ? w4 + 1 | 0 : w4, e4 = PA(B4, j2, -997805, -1), w4 = t3 + w4 | 0, w4 = e4 >>> 0 > (r4 = e4 + h4 | 0) >>> 0 ? w4 + 1 | 0 : w4, h4 = (e4 = r4) + (r4 = PA(E4, X2, 666643, 0)) | 0, e4 = t3 + w4 | 0, k4 = h4, h4 = r4 >>> 0 > h4 >>> 0 ? e4 + 1 | 0 : e4, s4 = (r4 = PA(g6, 0, 470296, 0)) + (e4 = (e4 = i3[A8 + 23 | 0]) << 16 & 2031616 | i3[A8 + 21 | 0] | i3[A8 + 22 | 0] << 8) | 0, r4 = t3, r4 = e4 >>> 0 > s4 >>> 0 ? r4 + 1 | 0 : r4, s4 = (w4 = PA(q4, 0, 666643, 0)) + s4 | 0, e4 = t3 + r4 | 0, r4 = PA(B4, j2, 654183, 0), w4 = t3 + (w4 >>> 0 > s4 >>> 0 ? e4 + 1 | 0 : e4) | 0, N4 = w4 = r4 >>> 0 > (H4 = r4 + s4 | 0) >>> 0 ? w4 + 1 | 0 : w4, m4 = w4 = w4 - ((H4 >>> 0 < 4293918720) - 1 | 0) | 0, e4 = (e4 = w4 >>> 21 | 0) + h4 | 0, r4 = e4 = (w4 = (2097151 & w4) << 11 | (s4 = H4 - -1048576 | 0) >>> 21) >>> 0 > (k4 = w4 + k4 | 0) >>> 0 ? e4 + 1 | 0 : e4, K4 = w4 = e4 - ((k4 >>> 0 < 4293918720) - 1 | 0) | 0, e4 = S4, S4 = (2097151 & w4) << 11 | (h4 = k4 - -1048576 | 0) >>> 21, w4 = (w4 >> 21) + _4 | 0, G4 = S4 = (w4 = S4 >>> 0 > (Y4 = e4 + S4 | 0) >>> 0 ? w4 + 1 | 0 : w4) - ((Y4 >>> 0 < 4293918720) - 1 | 0) | 0, l3 = Y4 - (e4 = -2097152 & (_4 = Y4 - -1048576 | 0)) | 0, O2 = w4 - ((e4 >>> 0 > Y4 >>> 0) + S4 | 0) | 0, e4 = PA(z2, P4, 136657, 0), r4 = t3 + r4 | 0, r4 = e4 >>> 0 > (w4 = e4 + k4 | 0) >>> 0 ? r4 + 1 | 0 : r4, b4 = w4 - (e4 = -2097152 & h4) | 0, U4 = r4 - ((e4 >>> 0 > w4 >>> 0) + K4 | 0) | 0, Y4 = M4 - (e4 = -2097152 & n4) | 0, p4 = F4 - ((e4 >>> 0 > M4 >>> 0) + p4 | 0) | 0, F4 = PA(I7, 0, 136657, 0), w4 = (e4 = i3[A8 + 40 | 0]) >>> 24 | 0, h4 = e4 << 8 | (n4 = i3[A8 + 36 | 0] | i3[A8 + 37 | 0] << 8 | i3[A8 + 38 | 0] << 16 | i3[A8 + 39 | 0] << 24) >>> 24, r4 = (e4 = i3[A8 + 41 | 0]) >>> 16 | 0, w4 = (r4 |= w4) >>> 3 | 0, r4 = (7 & r4) << 29 | (e4 = h4 | e4 << 16) >>> 3, e4 = w4 + t3 | 0, e4 = r4 >>> 0 > (h4 = r4 + F4 | 0) >>> 0 ? e4 + 1 | 0 : e4, w4 = PA(Q4, 0, -683901, -1), e4 = t3 + e4 | 0, e4 = w4 >>> 0 > (r4 = w4 + h4 | 0) >>> 0 ? e4 + 1 | 0 : e4, k4 = r4, w4 = PA(I7, 0, -997805, -1), r4 = t3, r4 = w4 >>> 0 > (h4 = w4 + (n4 >>> 6 & 2097151) | 0) >>> 0 ? r4 + 1 | 0 : r4, n4 = (w4 = h4) + (h4 = PA(Q4, 0, 136657, 0)) | 0, w4 = t3 + r4 | 0, r4 = PA(E4, X2, -683901, -1), w4 = t3 + (h4 >>> 0 > n4 >>> 0 ? w4 + 1 | 0 : w4) | 0, S4 = w4 = r4 >>> 0 > (R4 = r4 + n4 | 0) >>> 0 ? w4 + 1 | 0 : w4, T2 = r4 = w4 - ((R4 >>> 0 < 4293918720) - 1 | 0) | 0, e4 = e4 + (w4 = r4 >> 21) | 0, n4 = e4 = (r4 = (2097151 & r4) << 11 | (M4 = R4 - -1048576 | 0) >>> 21) >>> 0 > (K4 = r4 + k4 | 0) >>> 0 ? e4 + 1 | 0 : e4, L4 = e4 = e4 - ((K4 >>> 0 < 4293918720) - 1 | 0) | 0, w4 = (w4 = e4 >> 21) + p4 | 0, u4 = w4 = (e4 = (r4 = (2097151 & e4) << 11 | (k4 = K4 - -1048576 | 0) >>> 21) + Y4 | 0) >>> 0 < r4 >>> 0 ? w4 + 1 | 0 : w4, x4 = e4, w4 = PA(e4, w4, -683901, -1), e4 = t3 + U4 | 0, d4 = r4 = w4 + b4 | 0, h4 = w4 >>> 0 > r4 >>> 0 ? e4 + 1 | 0 : e4, Y4 = H4 - (e4 = -2097152 & s4) | 0, p4 = N4 - ((4095 & m4) + (e4 >>> 0 > H4 >>> 0) | 0) | 0, H4 = PA(g6, 0, 666643, 0), e4 = (w4 = i3[A8 + 19 | 0]) >>> 24 | 0, s4 = w4 << 8 | (N4 = i3[A8 + 15 | 0] | i3[A8 + 16 | 0] << 8 | i3[A8 + 17 | 0] << 16 | i3[A8 + 18 | 0] << 24) >>> 24, r4 = e4, w4 = (7 & (r4 |= w4 = (e4 = i3[A8 + 20 | 0]) >>> 16 | 0)) << 29 | (w4 = (e4 <<= 16) | s4) >>> 3, r4 = t3 + (r4 >>> 3 | 0) | 0, r4 = w4 >>> 0 > (s4 = w4 + H4 | 0) >>> 0 ? r4 + 1 | 0 : r4, e4 = PA(B4, j2, 470296, 0), w4 = t3 + r4 | 0, e4 = e4 >>> 0 > (s4 = e4 + s4 | 0) >>> 0 ? w4 + 1 | 0 : w4, r4 = PA(B4, j2, 666643, 0), w4 = t3, H4 = w4 = r4 >>> 0 > (b4 = r4 + (N4 >>> 6 & 2097151) | 0) >>> 0 ? w4 + 1 | 0 : w4, V2 = r4 = w4 - ((b4 >>> 0 < 4293918720) - 1 | 0) | 0, e4 = e4 + (w4 = r4 >>> 21 | 0) | 0, N4 = e4 = (r4 = (2097151 & r4) << 11 | (F4 = b4 - -1048576 | 0) >>> 21) >>> 0 > (U4 = r4 + s4 | 0) >>> 0 ? e4 + 1 | 0 : e4, Z2 = e4 = e4 - ((U4 >>> 0 < 4293918720) - 1 | 0) | 0, w4 = (w4 = e4 >>> 21 | 0) + p4 | 0, w4 = (e4 = (2097151 & e4) << 11 | (s4 = U4 - -1048576 | 0) >>> 21) >>> 0 > (r4 = e4 + Y4 | 0) >>> 0 ? w4 + 1 | 0 : w4, p4 = (e4 = r4) + (r4 = PA(z2, P4, -997805, -1)) | 0, e4 = t3 + w4 | 0, e4 = r4 >>> 0 > p4 >>> 0 ? e4 + 1 | 0 : e4, m4 = w4 = K4 - (r4 = -2097152 & k4) | 0, o4 = k4 = n4 - ((r4 >>> 0 > K4 >>> 0) + L4 | 0) | 0, r4 = PA(x4, u4, 136657, 0), e4 = t3 + e4 | 0, e4 = r4 >>> 0 > (n4 = r4 + p4 | 0) >>> 0 ? e4 + 1 | 0 : e4, r4 = PA(w4, k4, -683901, -1), w4 = t3 + e4 | 0, n4 = w4 = r4 >>> 0 > (p4 = r4 + n4 | 0) >>> 0 ? w4 + 1 | 0 : w4, L4 = e4 = w4 - ((p4 >>> 0 < 4293918720) - 1 | 0) | 0, w4 = (2097151 & e4) << 11 | (k4 = p4 - -1048576 | 0) >>> 21, e4 = (e4 >> 21) + h4 | 0, d4 = w4 = (e4 = w4 >>> 0 > (K4 = w4 + d4 | 0) >>> 0 ? e4 + 1 | 0 : e4) - ((K4 >>> 0 < 4293918720) - 1 | 0) | 0, Y4 = (2097151 & w4) << 11 | (h4 = K4 - -1048576 | 0) >>> 21, w4 = (w4 >> 21) + O2 | 0, D4 = l3 = Y4 + l3 | 0, Y4 = Y4 >>> 0 > l3 >>> 0 ? w4 + 1 | 0 : w4, a4 = K4 - (w4 = -2097152 & h4) | 0, y4 = e4 - ((w4 >>> 0 > K4 >>> 0) + d4 | 0) | 0, l3 = p4 - (e4 = -2097152 & k4) | 0, O2 = n4 - ((e4 >>> 0 > p4 >>> 0) + L4 | 0) | 0, r4 = (e4 = PA(z2, P4, 654183, 0)) + (U4 - (w4 = -2097152 & s4) | 0) | 0, w4 = t3 + (N4 - ((2147483647 & Z2) + (w4 >>> 0 > U4 >>> 0) | 0) | 0) | 0, w4 = e4 >>> 0 > r4 >>> 0 ? w4 + 1 | 0 : w4, e4 = PA(x4, u4, -997805, -1), w4 = t3 + w4 | 0, w4 = e4 >>> 0 > (r4 = e4 + r4 | 0) >>> 0 ? w4 + 1 | 0 : w4, h4 = (e4 = r4) + (r4 = PA(m4, o4, 136657, 0)) | 0, e4 = t3 + w4 | 0, d4 = h4, n4 = r4 >>> 0 > h4 >>> 0 ? e4 + 1 | 0 : e4, U4 = R4 - (e4 = -2097152 & M4) | 0, K4 = S4 - ((e4 >>> 0 > R4 >>> 0) + T2 | 0) | 0, N4 = PA(q4, 0, -683901, -1), e4 = (w4 = i3[A8 + 35 | 0]) >>> 24 | 0, h4 = w4 << 8 | (s4 = i3[A8 + 31 | 0] | i3[A8 + 32 | 0] << 8 | i3[A8 + 33 | 0] << 16 | i3[A8 + 34 | 0] << 24) >>> 24, r4 = e4, w4 = (e4 = i3[A8 + 36 | 0]) >>> 16 | 0, w4 |= r4, r4 = t3, r4 = (e4 = 2097151 & ((1 & w4) << 31 | (e4 = e4 << 16 | h4) >>> 1)) >>> 0 > (w4 = e4 + N4 | 0) >>> 0 ? r4 + 1 | 0 : r4, h4 = (e4 = PA(I7, 0, 654183, 0)) + w4 | 0, w4 = t3 + r4 | 0, w4 = e4 >>> 0 > h4 >>> 0 ? w4 + 1 | 0 : w4, r4 = PA(Q4, 0, -997805, -1), e4 = t3 + w4 | 0, e4 = r4 >>> 0 > (h4 = r4 + h4 | 0) >>> 0 ? e4 + 1 | 0 : e4, w4 = PA(E4, X2, 136657, 0), e4 = t3 + e4 | 0, k4 = r4 = w4 + h4 | 0, h4 = w4 >>> 0 > r4 >>> 0 ? e4 + 1 | 0 : e4, e4 = PA(g6, 0, -683901, -1), w4 = t3, w4 = e4 >>> 0 > (r4 = e4 + (s4 >>> 4 & 2097151) | 0) >>> 0 ? w4 + 1 | 0 : w4, s4 = (e4 = PA(q4, 0, 136657, 0)) + r4 | 0, r4 = t3 + w4 | 0, r4 = e4 >>> 0 > s4 >>> 0 ? r4 + 1 | 0 : r4, e4 = PA(I7, 0, 470296, 0), w4 = t3 + r4 | 0, w4 = e4 >>> 0 > (s4 = e4 + s4 | 0) >>> 0 ? w4 + 1 | 0 : w4, s4 = (r4 = PA(Q4, 0, 654183, 0)) + s4 | 0, e4 = t3 + w4 | 0, w4 = PA(E4, X2, -997805, -1), e4 = t3 + (r4 >>> 0 > s4 >>> 0 ? e4 + 1 | 0 : e4) | 0, N4 = e4 = w4 >>> 0 > (S4 = w4 + s4 | 0) >>> 0 ? e4 + 1 | 0 : e4, f4 = w4 = e4 - ((S4 >>> 0 < 4293918720) - 1 | 0) | 0, r4 = (e4 = w4 >> 21) + h4 | 0, p4 = w4 = (r4 = (w4 = (2097151 & w4) << 11 | (s4 = S4 - -1048576 | 0) >>> 21) >>> 0 > (M4 = w4 + k4 | 0) >>> 0 ? r4 + 1 | 0 : r4) - ((M4 >>> 0 < 4293918720) - 1 | 0) | 0, e4 = (e4 = w4 >> 21) + K4 | 0, L4 = e4 = (w4 = (h4 = (2097151 & w4) << 11 | (k4 = M4 - -1048576 | 0) >>> 21) + U4 | 0) >>> 0 < h4 >>> 0 ? e4 + 1 | 0 : e4, h4 = d4, d4 = w4, e4 = PA(w4, e4, -683901, -1), w4 = t3 + n4 | 0, K4 = h4 = h4 + e4 | 0, h4 = e4 >>> 0 > h4 >>> 0 ? w4 + 1 | 0 : w4, n4 = (e4 = PA(z2, P4, 470296, 0)) + (b4 - (w4 = -2097152 & F4) | 0) | 0, w4 = t3 + (H4 - ((2047 & V2) + (w4 >>> 0 > b4 >>> 0) | 0) | 0) | 0, w4 = e4 >>> 0 > n4 >>> 0 ? w4 + 1 | 0 : w4, F4 = (e4 = n4) + (n4 = PA(x4, u4, 654183, 0)) | 0, e4 = t3 + w4 | 0, e4 = n4 >>> 0 > F4 >>> 0 ? e4 + 1 | 0 : e4, n4 = PA(m4, o4, -997805, -1), w4 = t3 + e4 | 0, w4 = n4 >>> 0 > (F4 = n4 + F4 | 0) >>> 0 ? w4 + 1 | 0 : w4, R4 = k4 = M4 - (e4 = -2097152 & k4) | 0, c4 = n4 = r4 - ((e4 >>> 0 > M4 >>> 0) + p4 | 0) | 0, r4 = PA(d4, L4, 136657, 0), e4 = t3 + w4 | 0, e4 = r4 >>> 0 > (F4 = r4 + F4 | 0) >>> 0 ? e4 + 1 | 0 : e4, r4 = PA(k4, n4, -683901, -1), w4 = t3 + e4 | 0, n4 = w4 = r4 >>> 0 > (H4 = r4 + F4 | 0) >>> 0 ? w4 + 1 | 0 : w4, U4 = e4 = w4 - ((H4 >>> 0 < 4293918720) - 1 | 0) | 0, w4 = (2097151 & e4) << 11 | (k4 = H4 - -1048576 | 0) >>> 21, e4 = (e4 >> 21) + h4 | 0, K4 = w4 = (e4 = w4 >>> 0 > (F4 = w4 + K4 | 0) >>> 0 ? e4 + 1 | 0 : e4) - ((F4 >>> 0 < 4293918720) - 1 | 0) | 0, M4 = (2097151 & w4) << 11 | (h4 = F4 - -1048576 | 0) >>> 21, w4 = (w4 >> 21) + O2 | 0, T2 = p4 = M4 + l3 | 0, p4 = M4 >>> 0 > p4 >>> 0 ? w4 + 1 | 0 : w4, V2 = F4 - (w4 = -2097152 & h4) | 0, Z2 = e4 - ((w4 >>> 0 > F4 >>> 0) + K4 | 0) | 0, l3 = H4 - (e4 = -2097152 & k4) | 0, O2 = n4 - ((e4 >>> 0 > H4 >>> 0) + U4 | 0) | 0, n4 = PA(z2, P4, 666643, 0), e4 = (w4 = i3[A8 + 14 | 0]) >>> 24 | 0, h4 = w4 << 8 | (K4 = i3[A8 + 10 | 0] | i3[A8 + 11 | 0] << 8 | i3[A8 + 12 | 0] << 16 | i3[A8 + 13 | 0] << 24) >>> 24, r4 = e4, w4 = (e4 = i3[A8 + 15 | 0]) >>> 16 | 0, w4 |= r4, r4 = t3, r4 = (e4 = 2097151 & ((1 & w4) << 31 | (e4 = e4 << 16 | h4) >>> 1)) >>> 0 > (w4 = e4 + n4 | 0) >>> 0 ? r4 + 1 | 0 : r4, h4 = (e4 = w4) + (w4 = PA(x4, u4, 470296, 0)) | 0, e4 = t3 + r4 | 0, e4 = w4 >>> 0 > h4 >>> 0 ? e4 + 1 | 0 : e4, w4 = PA(m4, o4, 654183, 0), e4 = t3 + e4 | 0, e4 = w4 >>> 0 > (r4 = w4 + h4 | 0) >>> 0 ? e4 + 1 | 0 : e4, h4 = (w4 = r4) + (r4 = PA(d4, L4, -997805, -1)) | 0, w4 = t3 + e4 | 0, w4 = r4 >>> 0 > h4 >>> 0 ? w4 + 1 | 0 : w4, e4 = PA(R4, c4, 136657, 0), w4 = t3 + w4 | 0, H4 = r4 = e4 + h4 | 0, h4 = e4 >>> 0 > r4 >>> 0 ? w4 + 1 | 0 : w4, s4 = S4 - (e4 = -2097152 & s4) | 0, n4 = N4 - ((e4 >>> 0 > S4 >>> 0) + f4 | 0) | 0, r4 = PA(g6, 0, 136657, 0), e4 = t3, e4 = (w4 = (i3[A8 + 28 | 0] | i3[A8 + 29 | 0] << 8 | i3[A8 + 30 | 0] << 16 | i3[A8 + 31 | 0] << 24) >>> 7 & 2097151) >>> 0 > (r4 = w4 + r4 | 0) >>> 0 ? e4 + 1 | 0 : e4, k4 = (w4 = r4) + (r4 = PA(q4, 0, -997805, -1)) | 0, w4 = t3 + e4 | 0, w4 = r4 >>> 0 > k4 >>> 0 ? w4 + 1 | 0 : w4, e4 = PA(B4, j2, -683901, -1), w4 = t3 + w4 | 0, w4 = e4 >>> 0 > (r4 = e4 + k4 | 0) >>> 0 ? w4 + 1 | 0 : w4, k4 = (e4 = PA(I7, 0, 666643, 0)) + r4 | 0, r4 = t3 + w4 | 0, r4 = e4 >>> 0 > k4 >>> 0 ? r4 + 1 | 0 : r4, w4 = PA(Q4, 0, 470296, 0), e4 = t3 + r4 | 0, e4 = w4 >>> 0 > (k4 = w4 + k4 | 0) >>> 0 ? e4 + 1 | 0 : e4, w4 = PA(E4, X2, 654183, 0), e4 = t3 + e4 | 0, w4 = (v5 >> 21) + (w4 >>> 0 > (r4 = w4 + k4 | 0) >>> 0 ? e4 + 1 | 0 : e4) | 0, M4 = w4 = (k4 = (2097151 & v5) << 11 | J4 >>> 21) >>> 0 > (J4 = k4 + r4 | 0) >>> 0 ? w4 + 1 | 0 : w4, v5 = e4 = w4 - ((J4 >>> 0 < 4293918720) - 1 | 0) | 0, k4 = (2097151 & e4) << 11 | (F4 = J4 - -1048576 | 0) >>> 21, e4 = (e4 >> 21) + n4 | 0, b4 = e4 = (w4 = k4 + s4 | 0) >>> 0 < k4 >>> 0 ? e4 + 1 | 0 : e4, U4 = w4, w4 = PA(w4, e4, -683901, -1), e4 = t3 + h4 | 0, k4 = r4 = w4 + H4 | 0, h4 = w4 >>> 0 > r4 >>> 0 ? e4 + 1 | 0 : e4, e4 = PA(x4, u4, 666643, 0), w4 = t3, w4 = e4 >>> 0 > (r4 = e4 + (K4 >>> 4 & 2097151) | 0) >>> 0 ? w4 + 1 | 0 : w4, e4 = PA(m4, o4, 470296, 0), w4 = t3 + w4 | 0, w4 = e4 >>> 0 > (r4 = e4 + r4 | 0) >>> 0 ? w4 + 1 | 0 : w4, n4 = (e4 = PA(d4, L4, 654183, 0)) + r4 | 0, r4 = t3 + w4 | 0, r4 = e4 >>> 0 > n4 >>> 0 ? r4 + 1 | 0 : r4, w4 = PA(R4, c4, -997805, -1), e4 = t3 + r4 | 0, e4 = w4 >>> 0 > (n4 = w4 + n4 | 0) >>> 0 ? e4 + 1 | 0 : e4, w4 = PA(U4, b4, 136657, 0), e4 = t3 + e4 | 0, N4 = e4 = w4 >>> 0 > (S4 = w4 + n4 | 0) >>> 0 ? e4 + 1 | 0 : e4, u4 = w4 = e4 - ((S4 >>> 0 < 4293918720) - 1 | 0) | 0, e4 = k4, k4 = (2097151 & w4) << 11 | (s4 = S4 - -1048576 | 0) >>> 21, w4 = (w4 >> 21) + h4 | 0, x4 = h4 = (w4 = (r4 = e4 + k4 | 0) >>> 0 < k4 >>> 0 ? w4 + 1 | 0 : w4) - ((r4 >>> 0 < 4293918720) - 1 | 0) | 0, e4 = (e4 = h4 >> 21) + O2 | 0, z2 = k4 = (h4 = (2097151 & h4) << 11 | (n4 = r4 - -1048576 | 0) >>> 21) + l3 | 0, H4 = h4 >>> 0 > k4 >>> 0 ? e4 + 1 | 0 : e4, k4 = r4, r4 = w4, h4 = (J4 - (w4 = -2097152 & F4) | 0) + (F4 = (2097151 & G4) << 11 | _4 >>> 21) | 0, w4 = (M4 - ((w4 >>> 0 > J4 >>> 0) + v5 | 0) | 0) + (G4 >> 21) | 0, K4 = w4 = h4 >>> 0 < F4 >>> 0 ? w4 + 1 | 0 : w4, q4 = w4 = w4 - ((h4 >>> 0 < 4293918720) - 1 | 0) | 0, _4 = e4 = w4 >> 21, e4 = PA(P4 = (2097151 & w4) << 11 | (v5 = h4 - -1048576 | 0) >>> 21, e4, -683901, -1), r4 = t3 + r4 | 0, r4 = e4 >>> 0 > (w4 = e4 + k4 | 0) >>> 0 ? r4 + 1 | 0 : r4, j2 = w4 - (e4 = -2097152 & n4) | 0, X2 = r4 - ((e4 >>> 0 > w4 >>> 0) + x4 | 0) | 0, e4 = PA(P4, _4, 136657, 0), w4 = N4 + t3 | 0, x4 = (r4 = e4 + S4 | 0) - (e4 = -2097152 & s4) | 0, J4 = (w4 = r4 >>> 0 < S4 >>> 0 ? w4 + 1 | 0 : w4) - ((e4 >>> 0 > r4 >>> 0) + u4 | 0) | 0, w4 = PA(m4, o4, 666643, 0), r4 = t3, r4 = (e4 = (i3[A8 + 7 | 0] | i3[A8 + 8 | 0] << 8 | i3[A8 + 9 | 0] << 16 | i3[A8 + 10 | 0] << 24) >>> 7 & 2097151) >>> 0 > (w4 = e4 + w4 | 0) >>> 0 ? r4 + 1 | 0 : r4, k4 = (e4 = PA(d4, L4, 470296, 0)) + w4 | 0, w4 = t3 + r4 | 0, w4 = e4 >>> 0 > k4 >>> 0 ? w4 + 1 | 0 : w4, e4 = PA(R4, c4, 654183, 0), w4 = t3 + w4 | 0, w4 = e4 >>> 0 > (r4 = e4 + k4 | 0) >>> 0 ? w4 + 1 | 0 : w4, k4 = (e4 = r4) + (r4 = PA(U4, b4, -997805, -1)) | 0, e4 = t3 + w4 | 0, F4 = k4, k4 = r4 >>> 0 > k4 >>> 0 ? e4 + 1 | 0 : e4, N4 = PA(d4, L4, 666643, 0), e4 = (w4 = i3[A8 + 6 | 0]) >>> 24 | 0, n4 = w4 << 8 | (u4 = i3[A8 + 2 | 0] | i3[A8 + 3 | 0] << 8 | i3[A8 + 4 | 0] << 16 | i3[A8 + 5 | 0] << 24) >>> 24, r4 = e4, w4 = (e4 = i3[A8 + 7 | 0]) >>> 16 | 0, w4 = 2097151 & ((3 & (w4 |= r4)) << 30 | (e4 = e4 << 16 | n4) >>> 2), e4 = t3, e4 = w4 >>> 0 > (r4 = w4 + N4 | 0) >>> 0 ? e4 + 1 | 0 : e4, n4 = (w4 = PA(R4, c4, 470296, 0)) + r4 | 0, r4 = t3 + e4 | 0, r4 = w4 >>> 0 > n4 >>> 0 ? r4 + 1 | 0 : r4, w4 = PA(U4, b4, 654183, 0), e4 = t3 + r4 | 0, N4 = e4 = w4 >>> 0 > (M4 = w4 + n4 | 0) >>> 0 ? e4 + 1 | 0 : e4, G4 = e4 = e4 - ((M4 >>> 0 < 4293918720) - 1 | 0) | 0, w4 = (r4 = e4 >> 21) + k4 | 0, S4 = e4 = (w4 = (e4 = (2097151 & e4) << 11 | (s4 = M4 - -1048576 | 0) >>> 21) >>> 0 > (n4 = e4 + F4 | 0) >>> 0 ? w4 + 1 | 0 : w4) - ((n4 >>> 0 < 4293918720) - 1 | 0) | 0, F4 = (2097151 & e4) << 11 | (k4 = n4 - -1048576 | 0) >>> 21, e4 = (e4 >> 21) + J4 | 0, x4 = d4 = F4 + x4 | 0, F4 = F4 >>> 0 > d4 >>> 0 ? e4 + 1 | 0 : e4, e4 = PA(P4, _4, -997805, -1), w4 = t3 + w4 | 0, w4 = e4 >>> 0 > (r4 = e4 + n4 | 0) >>> 0 ? w4 + 1 | 0 : w4, m4 = r4 - (e4 = -2097152 & k4) | 0, L4 = w4 - ((e4 >>> 0 > r4 >>> 0) + S4 | 0) | 0, w4 = PA(P4, _4, 654183, 0), e4 = N4 + t3 | 0, d4 = (r4 = w4 + M4 | 0) - (w4 = -2097152 & s4) | 0, J4 = (e4 = r4 >>> 0 < M4 >>> 0 ? e4 + 1 | 0 : e4) - ((w4 >>> 0 > r4 >>> 0) + G4 | 0) | 0, e4 = PA(R4, c4, 666643, 0), w4 = t3, w4 = e4 >>> 0 > (r4 = e4 + (u4 >>> 5 & 2097151) | 0) >>> 0 ? w4 + 1 | 0 : w4, e4 = PA(U4, b4, 470296, 0), w4 = t3 + w4 | 0, n4 = r4 = e4 + r4 | 0, r4 = e4 >>> 0 > r4 >>> 0 ? w4 + 1 | 0 : w4, k4 = PA(U4, b4, 666643, 0), w4 = (e4 = i3[A8 + 2 | 0]) << 16 & 2031616 | i3[0 | A8] | i3[A8 + 1 | 0] << 8, e4 = t3, N4 = e4 = w4 >>> 0 > (S4 = k4 + w4 | 0) >>> 0 ? e4 + 1 | 0 : e4, b4 = e4 = e4 - ((S4 >>> 0 < 4293918720) - 1 | 0) | 0, k4 = (2097151 & e4) << 11 | (s4 = S4 - -1048576 | 0) >>> 21, e4 = (e4 >> 21) + r4 | 0, r4 = e4 = k4 >>> 0 > (M4 = k4 + n4 | 0) >>> 0 ? e4 + 1 | 0 : e4, G4 = e4 = e4 - ((M4 >>> 0 < 4293918720) - 1 | 0) | 0, k4 = (2097151 & e4) << 11 | (n4 = M4 - -1048576 | 0) >>> 21, e4 = (e4 >> 21) + J4 | 0, k4 = k4 >>> 0 > (U4 = k4 + d4 | 0) >>> 0 ? e4 + 1 | 0 : e4, e4 = PA(P4, _4, 470296, 0), r4 = r4 + t3 | 0, r4 = (w4 = e4 + M4 | 0) >>> 0 < M4 >>> 0 ? r4 + 1 | 0 : r4, M4 = w4 - (e4 = -2097152 & n4) | 0, n4 = r4 - ((e4 >>> 0 > w4 >>> 0) + G4 | 0) | 0, w4 = PA(P4, _4, 666643, 0), e4 = t3 + (N4 - (((r4 = -2097152 & s4) >>> 0 > S4 >>> 0) + b4 | 0) | 0) | 0, w4 = (r4 = (e4 = w4 >>> 0 > (J4 = w4 + (S4 - r4 | 0) | 0) >>> 0 ? e4 + 1 | 0 : e4) >> 21) + n4 | 0, e4 = (e4 = (w4 = (e4 = (2097151 & e4) << 11 | J4 >>> 21) >>> 0 > (G4 = e4 + M4 | 0) >>> 0 ? w4 + 1 | 0 : w4) >> 21) + k4 | 0, w4 = (w4 = (e4 = (w4 = (2097151 & w4) << 11 | G4 >>> 21) >>> 0 > (_4 = w4 + U4 | 0) >>> 0 ? e4 + 1 | 0 : e4) >> 21) + L4 | 0, r4 = (e4 = (w4 = (e4 = (2097151 & e4) << 11 | _4 >>> 21) >>> 0 > (k4 = e4 + m4 | 0) >>> 0 ? w4 + 1 | 0 : w4) >> 21) + F4 | 0, e4 = (w4 = (r4 = (w4 = (2097151 & w4) << 11 | k4 >>> 21) >>> 0 > (S4 = w4 + x4 | 0) >>> 0 ? r4 + 1 | 0 : r4) >> 21) + X2 | 0, w4 = (r4 = (e4 = (r4 = (2097151 & r4) << 11 | S4 >>> 21) >>> 0 > (M4 = r4 + j2 | 0) >>> 0 ? e4 + 1 | 0 : e4) >> 21) + H4 | 0, H4 = n4 = (e4 = (2097151 & e4) << 11 | M4 >>> 21) + z2 | 0, e4 = (e4 = (w4 = e4 >>> 0 > n4 >>> 0 ? w4 + 1 | 0 : w4) >> 21) + Z2 | 0, w4 = (w4 = (e4 = (w4 = (2097151 & w4) << 11 | n4 >>> 21) >>> 0 > (F4 = w4 + V2 | 0) >>> 0 ? e4 + 1 | 0 : e4) >> 21) + p4 | 0, r4 = (e4 = (w4 = (e4 = (2097151 & e4) << 11 | F4 >>> 21) >>> 0 > (N4 = e4 + T2 | 0) >>> 0 ? w4 + 1 | 0 : w4) >> 21) + y4 | 0, e4 = (w4 = (r4 = (w4 = (2097151 & w4) << 11 | N4 >>> 21) >>> 0 > (s4 = w4 + a4 | 0) >>> 0 ? r4 + 1 | 0 : r4) >> 21) + Y4 | 0, v5 = (p4 = h4 - (w4 = -2097152 & v5) | 0) + ((2097151 & (e4 = (r4 = (2097151 & r4) << 11 | s4 >>> 21) >>> 0 > (n4 = r4 + D4 | 0) >>> 0 ? e4 + 1 | 0 : e4)) << 11 | n4 >>> 21) | 0, e4 = (K4 - ((w4 >>> 0 > h4 >>> 0) + q4 | 0) | 0) + (e4 >> 21) | 0, K4 = w4 = (e4 = p4 >>> 0 > v5 >>> 0 ? e4 + 1 | 0 : e4) >> 21, J4 = (e4 = PA(Y4 = (2097151 & e4) << 11 | v5 >>> 21, w4, 666643, 0)) + (w4 = 2097151 & J4) | 0, e4 = t3, h4 = e4 = w4 >>> 0 > J4 >>> 0 ? e4 + 1 | 0 : e4, C3[0 | A8] = J4, C3[A8 + 1 | 0] = (255 & e4) << 24 | J4 >>> 8, e4 = 2097151 & G4, w4 = PA(Y4, K4, 470296, 0) + e4 | 0, r4 = t3, e4 = (h4 >> 21) + (e4 >>> 0 > w4 >>> 0 ? r4 + 1 | 0 : r4) | 0, e4 = (p4 = (2097151 & h4) << 11 | J4 >>> 21) >>> 0 > (G4 = p4 + w4 | 0) >>> 0 ? e4 + 1 | 0 : e4, C3[A8 + 4 | 0] = (2047 & e4) << 21 | G4 >>> 11, w4 = e4, r4 = G4, C3[A8 + 3 | 0] = (7 & e4) << 29 | r4 >>> 3, C3[A8 + 2 | 0] = 31 & ((65535 & h4) << 16 | J4 >>> 16) | r4 << 5, h4 = 2097151 & _4, _4 = PA(Y4, K4, 654183, 0) + h4 | 0, e4 = t3, G4 = (2097151 & w4) << 11 | r4 >>> 21, w4 = (w4 >> 21) + (h4 = h4 >>> 0 > _4 >>> 0 ? e4 + 1 | 0 : e4) | 0, e4 = w4 = (_4 = G4 + _4 | 0) >>> 0 < G4 >>> 0 ? w4 + 1 | 0 : w4, C3[A8 + 6 | 0] = (63 & e4) << 26 | _4 >>> 6, h4 = _4, _4 = 0, C3[A8 + 5 | 0] = _4 << 13 | (1572864 & r4) >>> 19 | h4 << 2, r4 = 2097151 & k4, k4 = PA(Y4, K4, -997805, -1) + r4 | 0, w4 = t3, w4 = r4 >>> 0 > k4 >>> 0 ? w4 + 1 | 0 : w4, _4 = (2097151 & (r4 = e4)) << 11 | h4 >>> 21, r4 = (e4 >>= 21) + w4 | 0, r4 = (k4 = _4 + k4 | 0) >>> 0 < _4 >>> 0 ? r4 + 1 | 0 : r4, C3[A8 + 9 | 0] = (511 & r4) << 23 | k4 >>> 9, C3[A8 + 8 | 0] = (1 & r4) << 31 | k4 >>> 1, w4 = 0, C3[A8 + 7 | 0] = w4 << 18 | (2080768 & h4) >>> 14 | k4 << 7, w4 = 2097151 & S4, h4 = PA(Y4, K4, 136657, 0) + w4 | 0, e4 = t3, e4 = w4 >>> 0 > h4 >>> 0 ? e4 + 1 | 0 : e4, S4 = (2097151 & (w4 = r4)) << 11 | k4 >>> 21, w4 = e4 + (r4 = w4 >> 21) | 0, w4 = (h4 = S4 + h4 | 0) >>> 0 < S4 >>> 0 ? w4 + 1 | 0 : w4, C3[A8 + 12 | 0] = (4095 & w4) << 20 | h4 >>> 12, r4 = h4, C3[A8 + 11 | 0] = (15 & w4) << 28 | r4 >>> 4, h4 = 0, C3[A8 + 10 | 0] = h4 << 15 | (1966080 & k4) >>> 17 | r4 << 4, h4 = 2097151 & M4, k4 = PA(Y4, K4, -683901, -1) + h4 | 0, e4 = t3, e4 = h4 >>> 0 > k4 >>> 0 ? e4 + 1 | 0 : e4, h4 = w4, w4 = e4 + (w4 >>= 21) | 0, w4 = (h4 = (d4 = k4) + (k4 = (2097151 & h4) << 11 | r4 >>> 21) | 0) >>> 0 < k4 >>> 0 ? w4 + 1 | 0 : w4, C3[A8 + 14 | 0] = (127 & w4) << 25 | h4 >>> 7, k4 = 0, C3[A8 + 13 | 0] = k4 << 12 | (1048576 & r4) >>> 20 | h4 << 1, e4 = w4 >> 21, r4 = (w4 = (2097151 & w4) << 11 | h4 >>> 21) >>> 0 > (k4 = w4 + (2097151 & H4) | 0) >>> 0 ? e4 + 1 | 0 : e4, C3[A8 + 17 | 0] = (1023 & r4) << 22 | k4 >>> 10, C3[A8 + 16 | 0] = (3 & r4) << 30 | k4 >>> 2, w4 = 0, C3[A8 + 15 | 0] = w4 << 17 | (2064384 & h4) >>> 15 | k4 << 6, e4 = r4 >> 21, e4 = (w4 = (2097151 & r4) << 11 | k4 >>> 21) >>> 0 > (r4 = w4 + (2097151 & F4) | 0) >>> 0 ? e4 + 1 | 0 : e4, C3[A8 + 20 | 0] = (8191 & e4) << 19 | r4 >>> 13, C3[A8 + 19 | 0] = (31 & e4) << 27 | r4 >>> 5, h4 = (w4 = 2097151 & N4) + (N4 = (2097151 & e4) << 11 | r4 >>> 21) | 0, w4 = e4 >> 21, w4 = h4 >>> 0 < N4 >>> 0 ? w4 + 1 | 0 : w4, N4 = h4, C3[A8 + 21 | 0] = h4, F4 = 0, C3[A8 + 18 | 0] = F4 << 14 | (1835008 & k4) >>> 18 | r4 << 3, C3[A8 + 22 | 0] = (255 & w4) << 24 | h4 >>> 8, r4 = w4 >> 21, r4 = (h4 = (k4 = (2097151 & w4) << 11 | h4 >>> 21) + (2097151 & s4) | 0) >>> 0 < k4 >>> 0 ? r4 + 1 | 0 : r4, C3[A8 + 25 | 0] = (2047 & r4) << 21 | h4 >>> 11, C3[A8 + 24 | 0] = (7 & r4) << 29 | h4 >>> 3, C3[A8 + 23 | 0] = 31 & ((65535 & w4) << 16 | N4 >>> 16) | h4 << 5, e4 = r4 >> 21, e4 = (w4 = (2097151 & r4) << 11 | h4 >>> 21) >>> 0 > (r4 = w4 + (2097151 & n4) | 0) >>> 0 ? e4 + 1 | 0 : e4, C3[A8 + 27 | 0] = (63 & e4) << 26 | r4 >>> 6, k4 = 0, C3[A8 + 26 | 0] = k4 << 13 | (1572864 & h4) >>> 19 | r4 << 2, w4 = e4, e4 >>= 21, w4 = (h4 = (n4 = (2097151 & w4) << 11 | r4 >>> 21) + (k4 = 2097151 & v5) | 0) >>> 0 < k4 >>> 0 ? e4 + 1 | 0 : e4, C3[A8 + 31 | 0] = (131071 & w4) << 15 | h4 >>> 17, e4 = h4, C3[A8 + 30 | 0] = (511 & w4) << 23 | e4 >>> 9, h4 = 0, C3[A8 + 28 | 0] = h4 << 18 | (2080768 & r4) >>> 14 | e4 << 7, C3[A8 + 29 | 0] = n4 + v5 >>> 1;
                    }
                    function F3(A8, I7, g6, B4, Q4, o4) {
                      var D4, a4 = 0, y4 = 0, f4 = 0, e4 = 0, w4 = 0, t4 = 0, h4 = 0, k4 = 0, n4 = 0, F4 = 0, S4 = 0, N4 = 0, K4 = 0, p4 = 0, H4 = 0, G4 = 0, J4 = 0, Y4 = 0, U4 = 0, d4 = 0, b4 = 0, P4 = 0, R4 = 0, L4 = 0, x4 = 0, u4 = 0, m4 = 0, l3 = 0, z2 = 0, j2 = 0, V2 = 0, Z2 = 0, $2 = 0, AA2 = 0, IA2 = 0, gA2 = 0, CA2 = 0, BA2 = 0;
                      for (r3 = D4 = r3 - 592 | 0, p4 = -1, S4 = A8 + 32 | 0, F4 = 32, N4 = 1; H4 = i3[2656 + (w4 = F4 - 1 | 0) | 0], f4 |= (w4 = ((y4 = i3[w4 + S4 | 0]) ^ H4) - 1 >> 8 & N4) & (t4 = i3[S4 + (F4 = F4 - 2 | 0) | 0]) - (e4 = i3[F4 + 2656 | 0]) >> 8 | y4 - H4 >> 8 & N4, N4 = w4 & (e4 ^ t4) - 1 >> 8, F4; ) ;
                      if (255 & f4 && !(KA(A8) | !(~((127 & ~i3[Q4 + 31 | 0] | i3[Q4 + 1 | 0] & i3[Q4 + 2 | 0] & i3[Q4 + 3 | 0] & i3[Q4 + 4 | 0] & i3[Q4 + 5 | 0] & i3[Q4 + 6 | 0] & i3[Q4 + 7 | 0] & i3[Q4 + 8 | 0] & i3[Q4 + 9 | 0] & i3[Q4 + 10 | 0] & i3[Q4 + 11 | 0] & i3[Q4 + 12 | 0] & i3[Q4 + 13 | 0] & i3[Q4 + 14 | 0] & i3[Q4 + 15 | 0] & i3[Q4 + 16 | 0] & i3[Q4 + 17 | 0] & i3[Q4 + 18 | 0] & i3[Q4 + 19 | 0] & i3[Q4 + 20 | 0] & i3[Q4 + 21 | 0] & i3[Q4 + 22 | 0] & i3[Q4 + 23 | 0] & i3[Q4 + 24 | 0] & i3[Q4 + 25 | 0] & i3[Q4 + 26 | 0] & i3[Q4 + 27 | 0] & i3[Q4 + 28 | 0] & i3[Q4 + 30 | 0] & i3[Q4 + 29 | 0] ^ 255) - 1 & 236 - i3[0 | Q4]) >>> 8 & 1) || KA(Q4) || q3(w4 = D4 + 128 | 0, Q4))) {
                        for (MA(y4 = D4 + 384 | 0), o4 && W(y4, 35120, 34, 0), W(y4, A8, 32, 0), W(y4, Q4, 32, 0), W(y4, I7, g6, B4), v3(y4, g6 = D4 + 320 | 0), s3(g6), B4 = D4 + 8 | 0, Q4 = 0, I7 = 0, r3 = a4 = r3 - 2272 | 0; o4 = a4 + 2016 | 0, y4 = i3[g6 + (Q4 >>> 3 | 0) | 0], C3[o4 + Q4 | 0] = y4 >>> (6 & Q4) & 1, C3[(f4 = o4) + (o4 = 1 | Q4) | 0] = y4 >>> (7 & o4) & 1, 256 != (0 | (Q4 = Q4 + 2 | 0)); ) ;
                        for (; ; ) {
                          I7 = (g6 = I7) + 1 | 0;
                          A: if (!(g6 >>> 0 > 254) && i3[0 | (f4 = (Q4 = a4 + 2016 | 0) + g6 | 0)]) {
                            I: if (Q4 = C3[0 | (e4 = I7 + Q4 | 0)]) if ((0 | (Q4 = (y4 = Q4 << 1) + (o4 = C3[0 | f4]) | 0)) <= 15) C3[0 | f4] = Q4, C3[0 | e4] = 0;
                            else {
                              if ((0 | (Q4 = o4 - y4 | 0)) < -15) break A;
                              for (C3[0 | f4] = Q4, Q4 = I7; ; ) {
                                if (!i3[0 | (o4 = (a4 + 2016 | 0) + Q4 | 0)]) {
                                  C3[0 | o4] = 1;
                                  break I;
                                }
                                if (C3[0 | o4] = 0, o4 = Q4 >>> 0 < 255, Q4 = Q4 + 1 | 0, !o4) break;
                              }
                            }
                            if (!(g6 >>> 0 > 253)) {
                              I: if (o4 = C3[0 | (t4 = (Q4 = g6 + 2 | 0) + (a4 + 2016 | 0) | 0)]) if ((0 | (o4 = (e4 = o4 << 2) + (y4 = C3[0 | f4]) | 0)) >= 16) {
                                if ((0 | (o4 = y4 - e4 | 0)) < -15) break A;
                                for (C3[0 | f4] = o4; ; ) {
                                  if (i3[0 | (o4 = (a4 + 2016 | 0) + Q4 | 0)]) {
                                    if (C3[0 | o4] = 0, o4 = Q4 >>> 0 < 255, Q4 = Q4 + 1 | 0, o4) continue;
                                    break I;
                                  }
                                  break;
                                }
                                C3[0 | o4] = 1;
                              } else C3[0 | f4] = o4, C3[0 | t4] = 0;
                              if (253 != (0 | g6)) {
                                I: if (o4 = C3[0 | (t4 = (Q4 = g6 + 3 | 0) + (a4 + 2016 | 0) | 0)]) if ((0 | (o4 = (e4 = o4 << 3) + (y4 = C3[0 | f4]) | 0)) >= 16) {
                                  if ((0 | (o4 = y4 - e4 | 0)) < -15) break A;
                                  for (C3[0 | f4] = o4; ; ) {
                                    if (i3[0 | (o4 = (a4 + 2016 | 0) + Q4 | 0)]) {
                                      if (C3[0 | o4] = 0, o4 = Q4 >>> 0 < 255, Q4 = Q4 + 1 | 0, o4) continue;
                                      break I;
                                    }
                                    break;
                                  }
                                  C3[0 | o4] = 1;
                                } else C3[0 | f4] = o4, C3[0 | t4] = 0;
                                if (!(g6 >>> 0 > 251)) {
                                  I: if (o4 = C3[0 | (t4 = (Q4 = g6 + 4 | 0) + (a4 + 2016 | 0) | 0)]) if ((0 | (o4 = (e4 = o4 << 4) + (y4 = C3[0 | f4]) | 0)) >= 16) {
                                    if ((0 | (o4 = y4 - e4 | 0)) < -15) break A;
                                    for (C3[0 | f4] = o4; ; ) {
                                      if (i3[0 | (o4 = (a4 + 2016 | 0) + Q4 | 0)]) {
                                        if (C3[0 | o4] = 0, o4 = Q4 >>> 0 < 255, Q4 = Q4 + 1 | 0, o4) continue;
                                        break I;
                                      }
                                      break;
                                    }
                                    C3[0 | o4] = 1;
                                  } else C3[0 | f4] = o4, C3[0 | t4] = 0;
                                  if (251 != (0 | g6)) {
                                    I: if (o4 = C3[0 | (t4 = (Q4 = g6 + 5 | 0) + (a4 + 2016 | 0) | 0)]) if ((0 | (o4 = (e4 = o4 << 5) + (y4 = C3[0 | f4]) | 0)) >= 16) {
                                      if ((0 | (o4 = y4 - e4 | 0)) < -15) break A;
                                      for (C3[0 | f4] = o4; ; ) {
                                        if (i3[0 | (o4 = (a4 + 2016 | 0) + Q4 | 0)]) {
                                          if (C3[0 | o4] = 0, o4 = Q4 >>> 0 < 255, Q4 = Q4 + 1 | 0, o4) continue;
                                          break I;
                                        }
                                        break;
                                      }
                                      C3[0 | o4] = 1;
                                    } else C3[0 | f4] = o4, C3[0 | t4] = 0;
                                    if (!(g6 >>> 0 > 249) && (g6 = C3[0 | (e4 = (Q4 = g6 + 6 | 0) + (a4 + 2016 | 0) | 0)])) if ((0 | (g6 = (y4 = g6 << 6) + (o4 = C3[0 | f4]) | 0)) >= 16) {
                                      if ((0 | (g6 = o4 - y4 | 0)) < -15) break A;
                                      for (C3[0 | f4] = g6; ; ) {
                                        if (i3[0 | (g6 = (a4 + 2016 | 0) + Q4 | 0)]) {
                                          if (C3[0 | g6] = 0, g6 = Q4 >>> 0 < 255, Q4 = Q4 + 1 | 0, g6) continue;
                                          break A;
                                        }
                                        break;
                                      }
                                      C3[0 | g6] = 1;
                                    } else C3[0 | f4] = g6, C3[0 | e4] = 0;
                                  }
                                }
                              }
                            }
                          }
                          if (256 == (0 | I7)) break;
                        }
                        for (Q4 = 0; I7 = a4 + 1760 | 0, g6 = i3[S4 + (Q4 >>> 3 | 0) | 0], C3[I7 + Q4 | 0] = g6 >>> (6 & Q4) & 1, C3[(o4 = I7) + (I7 = 1 | Q4) | 0] = g6 >>> (7 & I7) & 1, 256 != (0 | (Q4 = Q4 + 2 | 0)); ) ;
                        for (I7 = 0; ; ) {
                          I7 = (g6 = I7) + 1 | 0;
                          A: if (!(g6 >>> 0 > 254) && i3[0 | (f4 = (Q4 = a4 + 1760 | 0) + g6 | 0)]) {
                            I: if (Q4 = C3[0 | (e4 = I7 + Q4 | 0)]) if ((0 | (Q4 = (y4 = Q4 << 1) + (o4 = C3[0 | f4]) | 0)) <= 15) C3[0 | f4] = Q4, C3[0 | e4] = 0;
                            else {
                              if ((0 | (Q4 = o4 - y4 | 0)) < -15) break A;
                              for (C3[0 | f4] = Q4, Q4 = I7; ; ) {
                                if (!i3[0 | (o4 = (a4 + 1760 | 0) + Q4 | 0)]) {
                                  C3[0 | o4] = 1;
                                  break I;
                                }
                                if (C3[0 | o4] = 0, o4 = Q4 >>> 0 < 255, Q4 = Q4 + 1 | 0, !o4) break;
                              }
                            }
                            if (!(g6 >>> 0 > 253)) {
                              I: if (o4 = C3[0 | (t4 = (Q4 = g6 + 2 | 0) + (a4 + 1760 | 0) | 0)]) if ((0 | (o4 = (e4 = o4 << 2) + (y4 = C3[0 | f4]) | 0)) >= 16) {
                                if ((0 | (o4 = y4 - e4 | 0)) < -15) break A;
                                for (C3[0 | f4] = o4; ; ) {
                                  if (i3[0 | (o4 = (a4 + 1760 | 0) + Q4 | 0)]) {
                                    if (C3[0 | o4] = 0, o4 = Q4 >>> 0 < 255, Q4 = Q4 + 1 | 0, o4) continue;
                                    break I;
                                  }
                                  break;
                                }
                                C3[0 | o4] = 1;
                              } else C3[0 | f4] = o4, C3[0 | t4] = 0;
                              if (253 != (0 | g6)) {
                                I: if (o4 = C3[0 | (t4 = (Q4 = g6 + 3 | 0) + (a4 + 1760 | 0) | 0)]) if ((0 | (o4 = (e4 = o4 << 3) + (y4 = C3[0 | f4]) | 0)) >= 16) {
                                  if ((0 | (o4 = y4 - e4 | 0)) < -15) break A;
                                  for (C3[0 | f4] = o4; ; ) {
                                    if (i3[0 | (o4 = (a4 + 1760 | 0) + Q4 | 0)]) {
                                      if (C3[0 | o4] = 0, o4 = Q4 >>> 0 < 255, Q4 = Q4 + 1 | 0, o4) continue;
                                      break I;
                                    }
                                    break;
                                  }
                                  C3[0 | o4] = 1;
                                } else C3[0 | f4] = o4, C3[0 | t4] = 0;
                                if (!(g6 >>> 0 > 251)) {
                                  I: if (o4 = C3[0 | (t4 = (Q4 = g6 + 4 | 0) + (a4 + 1760 | 0) | 0)]) if ((0 | (o4 = (e4 = o4 << 4) + (y4 = C3[0 | f4]) | 0)) >= 16) {
                                    if ((0 | (o4 = y4 - e4 | 0)) < -15) break A;
                                    for (C3[0 | f4] = o4; ; ) {
                                      if (i3[0 | (o4 = (a4 + 1760 | 0) + Q4 | 0)]) {
                                        if (C3[0 | o4] = 0, o4 = Q4 >>> 0 < 255, Q4 = Q4 + 1 | 0, o4) continue;
                                        break I;
                                      }
                                      break;
                                    }
                                    C3[0 | o4] = 1;
                                  } else C3[0 | f4] = o4, C3[0 | t4] = 0;
                                  if (251 != (0 | g6)) {
                                    I: if (o4 = C3[0 | (t4 = (Q4 = g6 + 5 | 0) + (a4 + 1760 | 0) | 0)]) if ((0 | (o4 = (e4 = o4 << 5) + (y4 = C3[0 | f4]) | 0)) >= 16) {
                                      if ((0 | (o4 = y4 - e4 | 0)) < -15) break A;
                                      for (C3[0 | f4] = o4; ; ) {
                                        if (i3[0 | (o4 = (a4 + 1760 | 0) + Q4 | 0)]) {
                                          if (C3[0 | o4] = 0, o4 = Q4 >>> 0 < 255, Q4 = Q4 + 1 | 0, o4) continue;
                                          break I;
                                        }
                                        break;
                                      }
                                      C3[0 | o4] = 1;
                                    } else C3[0 | f4] = o4, C3[0 | t4] = 0;
                                    if (!(g6 >>> 0 > 249) && (g6 = C3[0 | (e4 = (Q4 = g6 + 6 | 0) + (a4 + 1760 | 0) | 0)])) if ((0 | (g6 = (y4 = g6 << 6) + (o4 = C3[0 | f4]) | 0)) >= 16) {
                                      if ((0 | (g6 = o4 - y4 | 0)) < -15) break A;
                                      for (C3[0 | f4] = g6; ; ) {
                                        if (i3[0 | (g6 = (a4 + 1760 | 0) + Q4 | 0)]) {
                                          if (C3[0 | g6] = 0, g6 = Q4 >>> 0 < 255, Q4 = Q4 + 1 | 0, g6) continue;
                                          break A;
                                        }
                                        break;
                                      }
                                      C3[0 | g6] = 1;
                                    } else C3[0 | f4] = g6, C3[0 | e4] = 0;
                                  }
                                }
                              }
                            }
                          }
                          if (256 == (0 | I7)) break;
                        }
                        for (DA(Q4 = a4 + 480 | 0, w4), I7 = E3[w4 + 36 >> 2], E3[a4 + 192 >> 2] = E3[w4 + 32 >> 2], E3[a4 + 196 >> 2] = I7, I7 = E3[w4 + 28 >> 2], E3[a4 + 184 >> 2] = E3[w4 + 24 >> 2], E3[a4 + 188 >> 2] = I7, I7 = E3[w4 + 20 >> 2], E3[a4 + 176 >> 2] = E3[w4 + 16 >> 2], E3[a4 + 180 >> 2] = I7, I7 = E3[w4 + 12 >> 2], E3[a4 + 168 >> 2] = E3[w4 + 8 >> 2], E3[a4 + 172 >> 2] = I7, I7 = E3[w4 + 4 >> 2], E3[a4 + 160 >> 2] = E3[w4 >> 2], E3[a4 + 164 >> 2] = I7, I7 = E3[w4 + 52 >> 2], E3[a4 + 208 >> 2] = E3[w4 + 48 >> 2], E3[a4 + 212 >> 2] = I7, I7 = E3[w4 + 60 >> 2], E3[a4 + 216 >> 2] = E3[w4 + 56 >> 2], E3[a4 + 220 >> 2] = I7, I7 = E3[4 + (g6 = w4 - -64 | 0) >> 2], E3[a4 + 224 >> 2] = E3[g6 >> 2], E3[a4 + 228 >> 2] = I7, I7 = E3[w4 + 76 >> 2], E3[a4 + 232 >> 2] = E3[w4 + 72 >> 2], E3[a4 + 236 >> 2] = I7, I7 = E3[w4 + 44 >> 2], E3[a4 + 200 >> 2] = E3[w4 + 40 >> 2], E3[a4 + 204 >> 2] = I7, I7 = E3[w4 + 92 >> 2], E3[a4 + 248 >> 2] = E3[w4 + 88 >> 2], E3[a4 + 252 >> 2] = I7, I7 = E3[w4 + 100 >> 2], E3[a4 + 256 >> 2] = E3[w4 + 96 >> 2], E3[a4 + 260 >> 2] = I7, I7 = E3[w4 + 108 >> 2], E3[a4 + 264 >> 2] = E3[w4 + 104 >> 2], E3[a4 + 268 >> 2] = I7, I7 = E3[w4 + 116 >> 2], E3[a4 + 272 >> 2] = E3[w4 + 112 >> 2], E3[a4 + 276 >> 2] = I7, I7 = E3[w4 + 84 >> 2], E3[a4 + 240 >> 2] = E3[w4 + 80 >> 2], E3[a4 + 244 >> 2] = I7, _3(o4 = a4 + 320 | 0, g6 = a4 + 160 | 0), M3(a4, o4, h4 = a4 + 440 | 0), M3(a4 + 40 | 0, k4 = a4 + 360 | 0, n4 = a4 + 400 | 0), M3(a4 + 80 | 0, n4, h4), M3(a4 + 120 | 0, o4, k4), X(o4, a4, Q4), M3(g6, o4, h4), M3(G4 = a4 + 200 | 0, k4, n4), M3(J4 = a4 + 240 | 0, n4, h4), M3(K4 = a4 + 280 | 0, o4, k4), DA(I7 = a4 + 640 | 0, g6), X(o4, a4, I7), M3(g6, o4, h4), M3(G4, k4, n4), M3(J4, n4, h4), M3(K4, o4, k4), DA(I7 = a4 + 800 | 0, g6), X(o4, a4, I7), M3(g6, o4, h4), M3(G4, k4, n4), M3(J4, n4, h4), M3(K4, o4, k4), DA(I7 = a4 + 960 | 0, g6), X(o4, a4, I7), M3(g6, o4, h4), M3(G4, k4, n4), M3(J4, n4, h4), M3(K4, o4, k4), DA(I7 = a4 + 1120 | 0, g6), X(o4, a4, I7), M3(g6, o4, h4), M3(G4, k4, n4), M3(J4, n4, h4), M3(K4, o4, k4), DA(I7 = a4 + 1280 | 0, g6), X(o4, a4, I7), M3(g6, o4, h4), M3(G4, k4, n4), M3(J4, n4, h4), M3(K4, o4, k4), DA(I7 = a4 + 1440 | 0, g6), X(o4, a4, I7), M3(g6, o4, h4), M3(G4, k4, n4), M3(J4, n4, h4), M3(K4, o4, k4), DA(a4 + 1600 | 0, g6), E3[B4 + 32 >> 2] = 0, E3[B4 + 36 >> 2] = 0, E3[B4 + 24 >> 2] = 0, E3[B4 + 28 >> 2] = 0, E3[B4 + 16 >> 2] = 0, E3[B4 + 20 >> 2] = 0, E3[B4 + 8 >> 2] = 0, E3[B4 + 12 >> 2] = 0, E3[B4 >> 2] = 0, E3[B4 + 4 >> 2] = 0, E3[B4 + 44 >> 2] = 0, E3[B4 + 48 >> 2] = 0, E3[B4 + 40 >> 2] = 1, E3[B4 + 52 >> 2] = 0, E3[B4 + 56 >> 2] = 0, E3[B4 + 60 >> 2] = 0, E3[B4 + 64 >> 2] = 0, E3[B4 + 68 >> 2] = 0, E3[B4 + 72 >> 2] = 0, E3[B4 + 84 >> 2] = 0, E3[B4 + 88 >> 2] = 0, E3[B4 + 76 >> 2] = 0, E3[B4 + 80 >> 2] = 1, E3[B4 + 92 >> 2] = 0, E3[B4 + 96 >> 2] = 0, E3[B4 + 100 >> 2] = 0, E3[B4 + 104 >> 2] = 0, E3[B4 + 108 >> 2] = 0, E3[B4 + 112 >> 2] = 0, E3[B4 + 116 >> 2] = 0, $2 = B4 + 80 | 0, AA2 = B4 + 40 | 0, I7 = 255; ; ) {
                          A: {
                            I: {
                              if (!i3[(g6 = a4 + 2016 | 0) + I7 | 0] && !i3[(Q4 = a4 + 1760 | 0) + I7 | 0]) {
                                if (!(i3[(o4 = g6) + (g6 = I7 - 1 | 0) | 0] | i3[g6 + Q4 | 0])) break I;
                                I7 = g6;
                              }
                              if ((0 | I7) < 0) break A;
                              for (; _3(Q4 = a4 + 320 | 0, B4), (0 | (o4 = C3[(g6 = I7) + (a4 + 2016 | 0) | 0])) > 0 ? (M3(I7 = a4 + 160 | 0, Q4, h4), M3(G4, k4, n4), M3(J4, n4, h4), M3(K4, Q4, k4), X(Q4, I7, (a4 + 480 | 0) + c3((254 & o4) >>> 1 | 0, 160) | 0)) : (0 | o4) >= 0 || (M3(I7 = a4 + 160 | 0, Q4 = a4 + 320 | 0, h4), M3(G4, k4, n4), M3(J4, n4, h4), M3(K4, Q4, k4), O(Q4, I7, (a4 + 480 | 0) + c3((0 - o4 & 254) >>> 1 | 0, 160) | 0)), (0 | (x4 = C3[g6 + (a4 + 1760 | 0) | 0])) > 0 ? (M3(I7 = a4 + 160 | 0, Q4 = a4 + 320 | 0, h4), M3(G4, k4, n4), M3(J4, n4, h4), M3(K4, Q4, k4), T(Q4, I7, c3((254 & x4) >>> 1 | 0, 120) + 1472 | 0)) : (0 | x4) >= 0 || (M3(a4 + 160 | 0, u4 = a4 + 320 | 0, h4), M3(G4, k4, n4), M3(J4, n4, h4), M3(K4, u4, k4), Y4 = E3[a4 + 160 >> 2], U4 = E3[a4 + 200 >> 2], d4 = E3[a4 + 164 >> 2], b4 = E3[a4 + 204 >> 2], P4 = E3[a4 + 168 >> 2], R4 = E3[a4 + 208 >> 2], L4 = E3[a4 + 172 >> 2], F4 = E3[a4 + 212 >> 2], S4 = E3[a4 + 176 >> 2], N4 = E3[a4 + 216 >> 2], p4 = E3[a4 + 180 >> 2], H4 = E3[a4 + 220 >> 2], f4 = E3[a4 + 184 >> 2], t4 = E3[a4 + 224 >> 2], e4 = E3[a4 + 188 >> 2], y4 = E3[a4 + 228 >> 2], w4 = E3[a4 + 192 >> 2], o4 = E3[a4 + 232 >> 2], Q4 = E3[a4 + 236 >> 2], I7 = E3[a4 + 196 >> 2], E3[a4 + 396 >> 2] = Q4 - I7, E3[a4 + 392 >> 2] = o4 - w4, E3[a4 + 388 >> 2] = y4 - e4, E3[a4 + 384 >> 2] = t4 - f4, E3[a4 + 380 >> 2] = H4 - p4, E3[a4 + 376 >> 2] = N4 - S4, E3[a4 + 372 >> 2] = F4 - L4, E3[a4 + 368 >> 2] = R4 - P4, E3[a4 + 364 >> 2] = b4 - d4, E3[a4 + 360 >> 2] = U4 - Y4, E3[a4 + 356 >> 2] = I7 + Q4, E3[a4 + 352 >> 2] = o4 + w4, E3[a4 + 348 >> 2] = y4 + e4, E3[a4 + 344 >> 2] = f4 + t4, E3[a4 + 340 >> 2] = p4 + H4, E3[a4 + 336 >> 2] = S4 + N4, E3[a4 + 332 >> 2] = F4 + L4, E3[a4 + 328 >> 2] = P4 + R4, E3[a4 + 324 >> 2] = d4 + b4, E3[a4 + 320 >> 2] = Y4 + U4, M3(n4, u4, 40 + (I7 = c3((0 - x4 & 254) >>> 1 | 0, 120) + 1472 | 0) | 0), M3(k4, k4, I7), M3(h4, I7 + 80 | 0, K4), IA2 = E3[a4 + 276 >> 2], gA2 = E3[a4 + 272 >> 2], x4 = E3[a4 + 268 >> 2], u4 = E3[a4 + 264 >> 2], f4 = E3[a4 + 260 >> 2], t4 = E3[a4 + 256 >> 2], e4 = E3[a4 + 252 >> 2], y4 = E3[a4 + 248 >> 2], w4 = E3[a4 + 244 >> 2], o4 = E3[a4 + 240 >> 2], m4 = E3[a4 + 360 >> 2], l3 = E3[a4 + 400 >> 2], z2 = E3[a4 + 364 >> 2], j2 = E3[a4 + 404 >> 2], V2 = E3[a4 + 368 >> 2], Z2 = E3[a4 + 408 >> 2], Y4 = E3[a4 + 372 >> 2], U4 = E3[a4 + 412 >> 2], d4 = E3[a4 + 376 >> 2], b4 = E3[a4 + 416 >> 2], P4 = E3[a4 + 380 >> 2], R4 = E3[a4 + 420 >> 2], L4 = E3[a4 + 384 >> 2], F4 = E3[a4 + 424 >> 2], S4 = E3[a4 + 388 >> 2], N4 = E3[a4 + 428 >> 2], p4 = E3[a4 + 392 >> 2], H4 = E3[a4 + 432 >> 2], Q4 = E3[a4 + 396 >> 2], I7 = E3[a4 + 436 >> 2], E3[a4 + 396 >> 2] = Q4 + I7, E3[a4 + 392 >> 2] = p4 + H4, E3[a4 + 388 >> 2] = S4 + N4, E3[a4 + 384 >> 2] = F4 + L4, E3[a4 + 380 >> 2] = P4 + R4, E3[a4 + 376 >> 2] = d4 + b4, E3[a4 + 372 >> 2] = Y4 + U4, E3[a4 + 368 >> 2] = V2 + Z2, E3[a4 + 364 >> 2] = z2 + j2, E3[a4 + 360 >> 2] = m4 + l3, E3[a4 + 356 >> 2] = I7 - Q4, E3[a4 + 352 >> 2] = H4 - p4, E3[a4 + 348 >> 2] = N4 - S4, E3[a4 + 344 >> 2] = F4 - L4, E3[a4 + 340 >> 2] = R4 - P4, E3[a4 + 336 >> 2] = b4 - d4, E3[a4 + 332 >> 2] = U4 - Y4, E3[a4 + 328 >> 2] = Z2 - V2, E3[a4 + 324 >> 2] = j2 - z2, E3[a4 + 320 >> 2] = l3 - m4, Y4 = o4 << 1, U4 = E3[a4 + 440 >> 2], E3[a4 + 400 >> 2] = Y4 - U4, d4 = w4 << 1, b4 = E3[a4 + 444 >> 2], E3[a4 + 404 >> 2] = d4 - b4, P4 = y4 << 1, R4 = E3[a4 + 448 >> 2], E3[a4 + 408 >> 2] = P4 - R4, L4 = e4 << 1, F4 = E3[a4 + 452 >> 2], E3[a4 + 412 >> 2] = L4 - F4, S4 = t4 << 1, N4 = E3[a4 + 456 >> 2], E3[a4 + 416 >> 2] = S4 - N4, p4 = f4 << 1, H4 = E3[a4 + 460 >> 2], E3[a4 + 420 >> 2] = p4 - H4, f4 = u4 << 1, t4 = E3[a4 + 464 >> 2], E3[a4 + 424 >> 2] = f4 - t4, e4 = x4 << 1, y4 = E3[a4 + 468 >> 2], E3[a4 + 428 >> 2] = e4 - y4, w4 = gA2 << 1, o4 = E3[a4 + 472 >> 2], E3[a4 + 432 >> 2] = w4 - o4, Q4 = IA2 << 1, I7 = E3[a4 + 476 >> 2], E3[a4 + 436 >> 2] = Q4 - I7, E3[a4 + 440 >> 2] = Y4 + U4, E3[a4 + 444 >> 2] = d4 + b4, E3[a4 + 448 >> 2] = P4 + R4, E3[a4 + 452 >> 2] = F4 + L4, E3[a4 + 456 >> 2] = S4 + N4, E3[a4 + 460 >> 2] = p4 + H4, E3[a4 + 464 >> 2] = f4 + t4, E3[a4 + 468 >> 2] = y4 + e4, E3[a4 + 472 >> 2] = o4 + w4, E3[a4 + 476 >> 2] = I7 + Q4), M3(B4, a4 + 320 | 0, h4), M3(AA2, k4, n4), M3($2, n4, h4), I7 = g6 - 1 | 0, (0 | g6) > 0; ) ;
                              break A;
                            }
                            if (I7 = I7 - 2 | 0, g6) continue;
                          }
                          break;
                        }
                        r3 = a4 + 2272 | 0, mA(I7 = D4 + 288 | 0, B4), CA2 = -1, BA2 = UA(I7, A8), p4 = ((0 | A8) == (0 | I7) ? CA2 : BA2) | NA(A8, I7, 32);
                      }
                      return r3 = D4 + 592 | 0, p4;
                    }
                    function S3(A8, I7, g6) {
                      var C4, B4, Q4, o4, c4, D4, a4, y4, f4, e4, w4, t4, h4, k4, n4 = 0, s4 = 0, F4 = 0, S4 = 0, M4 = 0, N4 = 0, K4 = 0, _4 = 0, p4 = 0, H4 = 0, G4 = 0;
                      for (r3 = C4 = r3 - 800 | 0, S4 = i3[I7 + 4 | 0] | i3[I7 + 5 | 0] << 8 | i3[I7 + 6 | 0] << 16 | i3[I7 + 7 | 0] << 24, N4 = i3[I7 + 8 | 0] | i3[I7 + 9 | 0] << 8 | i3[I7 + 10 | 0] << 16 | i3[I7 + 11 | 0] << 24, _4 = i3[I7 + 12 | 0] | i3[I7 + 13 | 0] << 8 | i3[I7 + 14 | 0] << 16 | i3[I7 + 15 | 0] << 24, p4 = i3[I7 + 16 | 0] | i3[I7 + 17 | 0] << 8 | i3[I7 + 18 | 0] << 16 | i3[I7 + 19 | 0] << 24, s4 = i3[I7 + 20 | 0] | i3[I7 + 21 | 0] << 8 | i3[I7 + 22 | 0] << 16 | i3[I7 + 23 | 0] << 24, H4 = i3[I7 + 24 | 0] | i3[I7 + 25 | 0] << 8 | i3[I7 + 26 | 0] << 16 | i3[I7 + 27 | 0] << 24, G4 = i3[I7 + 28 | 0] | i3[I7 + 29 | 0] << 8 | i3[I7 + 30 | 0] << 16 | i3[I7 + 31 | 0] << 24, Q4 = i3[A8 + 4 | 0] | i3[A8 + 5 | 0] << 8 | i3[A8 + 6 | 0] << 16 | i3[A8 + 7 | 0] << 24, o4 = i3[A8 + 8 | 0] | i3[A8 + 9 | 0] << 8 | i3[A8 + 10 | 0] << 16 | i3[A8 + 11 | 0] << 24, c4 = i3[A8 + 12 | 0] | i3[A8 + 13 | 0] << 8 | i3[A8 + 14 | 0] << 16 | i3[A8 + 15 | 0] << 24, D4 = i3[A8 + 16 | 0] | i3[A8 + 17 | 0] << 8 | i3[A8 + 18 | 0] << 16 | i3[A8 + 19 | 0] << 24, a4 = i3[A8 + 20 | 0] | i3[A8 + 21 | 0] << 8 | i3[A8 + 22 | 0] << 16 | i3[A8 + 23 | 0] << 24, y4 = i3[A8 + 24 | 0] | i3[A8 + 25 | 0] << 8 | i3[A8 + 26 | 0] << 16 | i3[A8 + 27 | 0] << 24, f4 = i3[A8 + 28 | 0] | i3[A8 + 29 | 0] << 8 | i3[A8 + 30 | 0] << 16 | i3[A8 + 31 | 0] << 24, F4 = i3[0 | I7] | i3[I7 + 1 | 0] << 8 | i3[I7 + 2 | 0] << 16 | i3[I7 + 3 | 0] << 24, I7 = g6 - -64 | 0, e4 = i3[0 | A8] | i3[A8 + 1 | 0] << 8 | i3[A8 + 2 | 0] << 16 | i3[A8 + 3 | 0] << 24, E3[I7 >> 2] = 33620224 ^ e4, E3[g6 + 56 >> 2] = 1496785429, E3[g6 + 60 >> 2] = 1652156816, E3[(A8 = g6 + 48 | 0) >> 2] = 33620224, E3[A8 + 4 >> 2] = 218629379, E3[g6 + 40 >> 2] = 1110511904, E3[g6 + 44 >> 2] = -584534669, E3[(B4 = g6 + 32 | 0) >> 2] = 1427652059, E3[B4 + 4 >> 2] = -248528275, w4 = F4 ^ e4, E3[g6 >> 2] = w4, E3[g6 + 92 >> 2] = -584534669 ^ f4, E3[g6 + 88 >> 2] = 1110511904 ^ y4, E3[g6 + 84 >> 2] = -248528275 ^ a4, E3[(F4 = g6 + 80 | 0) >> 2] = 1427652059 ^ D4, E3[g6 + 76 >> 2] = 1652156816 ^ c4, E3[g6 + 72 >> 2] = 1496785429 ^ o4, E3[g6 + 68 >> 2] = 218629379 ^ Q4, G4 ^= f4, E3[g6 + 28 >> 2] = G4, H4 ^= y4, E3[g6 + 24 >> 2] = H4, t4 = s4 ^ a4, E3[g6 + 20 >> 2] = t4, p4 ^= D4, E3[(s4 = g6 + 16 | 0) >> 2] = p4, _4 ^= c4, E3[g6 + 12 >> 2] = _4, h4 = N4 ^ o4, E3[g6 + 8 >> 2] = h4, k4 = S4 ^ Q4, E3[g6 + 4 >> 2] = k4, N4 = 0; S4 = E3[F4 + 12 >> 2], E3[C4 + 792 >> 2] = E3[F4 + 8 >> 2], E3[C4 + 796 >> 2] = S4, S4 = E3[F4 + 4 >> 2], E3[C4 + 784 >> 2] = E3[F4 >> 2], E3[C4 + 788 >> 2] = S4, S4 = E3[I7 + 12 >> 2], E3[C4 + 760 >> 2] = E3[I7 + 8 >> 2], E3[C4 + 764 >> 2] = S4, S4 = E3[I7 + 4 >> 2], E3[C4 + 752 >> 2] = E3[I7 >> 2], E3[C4 + 756 >> 2] = S4, S4 = E3[F4 + 12 >> 2], E3[C4 + 744 >> 2] = E3[F4 + 8 >> 2], E3[C4 + 748 >> 2] = S4, S4 = E3[F4 + 4 >> 2], E3[C4 + 736 >> 2] = E3[F4 >> 2], E3[C4 + 740 >> 2] = S4, aA(S4 = C4 + 768 | 0, C4 + 752 | 0, C4 + 736 | 0), n4 = E3[C4 + 780 >> 2], E3[F4 + 8 >> 2] = E3[C4 + 776 >> 2], E3[F4 + 12 >> 2] = n4, n4 = E3[C4 + 772 >> 2], E3[F4 >> 2] = E3[C4 + 768 >> 2], E3[F4 + 4 >> 2] = n4, n4 = E3[A8 + 12 >> 2], E3[C4 + 728 >> 2] = E3[A8 + 8 >> 2], E3[C4 + 732 >> 2] = n4, n4 = E3[A8 + 4 >> 2], E3[C4 + 720 >> 2] = E3[A8 >> 2], E3[C4 + 724 >> 2] = n4, n4 = E3[I7 + 12 >> 2], E3[C4 + 712 >> 2] = E3[I7 + 8 >> 2], E3[C4 + 716 >> 2] = n4, n4 = E3[I7 + 4 >> 2], E3[C4 + 704 >> 2] = E3[I7 >> 2], E3[C4 + 708 >> 2] = n4, aA(S4, C4 + 720 | 0, C4 + 704 | 0), n4 = E3[C4 + 780 >> 2], E3[I7 + 8 >> 2] = E3[C4 + 776 >> 2], E3[I7 + 12 >> 2] = n4, n4 = E3[C4 + 772 >> 2], E3[I7 >> 2] = E3[C4 + 768 >> 2], E3[I7 + 4 >> 2] = n4, n4 = E3[B4 + 12 >> 2], E3[C4 + 696 >> 2] = E3[B4 + 8 >> 2], E3[C4 + 700 >> 2] = n4, n4 = E3[B4 + 4 >> 2], E3[C4 + 688 >> 2] = E3[B4 >> 2], E3[C4 + 692 >> 2] = n4, n4 = E3[A8 + 12 >> 2], E3[C4 + 680 >> 2] = E3[A8 + 8 >> 2], E3[C4 + 684 >> 2] = n4, n4 = E3[A8 + 4 >> 2], E3[C4 + 672 >> 2] = E3[A8 >> 2], E3[C4 + 676 >> 2] = n4, aA(S4, C4 + 688 | 0, C4 + 672 | 0), n4 = E3[C4 + 780 >> 2], E3[A8 + 8 >> 2] = E3[C4 + 776 >> 2], E3[A8 + 12 >> 2] = n4, n4 = E3[C4 + 772 >> 2], E3[A8 >> 2] = E3[C4 + 768 >> 2], E3[A8 + 4 >> 2] = n4, n4 = E3[s4 + 12 >> 2], E3[C4 + 664 >> 2] = E3[s4 + 8 >> 2], E3[C4 + 668 >> 2] = n4, n4 = E3[s4 + 4 >> 2], E3[C4 + 656 >> 2] = E3[s4 >> 2], E3[C4 + 660 >> 2] = n4, n4 = E3[B4 + 12 >> 2], E3[C4 + 648 >> 2] = E3[B4 + 8 >> 2], E3[C4 + 652 >> 2] = n4, n4 = E3[B4 + 4 >> 2], E3[C4 + 640 >> 2] = E3[B4 >> 2], E3[C4 + 644 >> 2] = n4, aA(S4, C4 + 656 | 0, C4 + 640 | 0), n4 = E3[C4 + 780 >> 2], E3[B4 + 8 >> 2] = E3[C4 + 776 >> 2], E3[B4 + 12 >> 2] = n4, n4 = E3[C4 + 772 >> 2], E3[B4 >> 2] = E3[C4 + 768 >> 2], E3[B4 + 4 >> 2] = n4, n4 = E3[g6 + 12 >> 2], E3[C4 + 632 >> 2] = E3[g6 + 8 >> 2], E3[C4 + 636 >> 2] = n4, n4 = E3[g6 + 4 >> 2], E3[C4 + 624 >> 2] = E3[g6 >> 2], E3[C4 + 628 >> 2] = n4, n4 = E3[s4 + 12 >> 2], E3[C4 + 616 >> 2] = E3[s4 + 8 >> 2], E3[C4 + 620 >> 2] = n4, n4 = E3[s4 + 4 >> 2], E3[C4 + 608 >> 2] = E3[s4 >> 2], E3[C4 + 612 >> 2] = n4, aA(S4, C4 + 624 | 0, C4 + 608 | 0), n4 = E3[C4 + 780 >> 2], E3[s4 + 8 >> 2] = E3[C4 + 776 >> 2], E3[s4 + 12 >> 2] = n4, n4 = E3[C4 + 772 >> 2], E3[s4 >> 2] = E3[C4 + 768 >> 2], E3[s4 + 4 >> 2] = n4, n4 = E3[C4 + 796 >> 2], E3[C4 + 600 >> 2] = E3[C4 + 792 >> 2], E3[C4 + 604 >> 2] = n4, n4 = E3[C4 + 788 >> 2], E3[C4 + 592 >> 2] = E3[C4 + 784 >> 2], E3[C4 + 596 >> 2] = n4, n4 = E3[g6 + 12 >> 2], E3[C4 + 584 >> 2] = E3[g6 + 8 >> 2], E3[C4 + 588 >> 2] = n4, n4 = E3[g6 + 4 >> 2], E3[C4 + 576 >> 2] = E3[g6 >> 2], E3[C4 + 580 >> 2] = n4, aA(S4, C4 + 592 | 0, C4 + 576 | 0), n4 = E3[C4 + 768 >> 2], M4 = E3[C4 + 772 >> 2], K4 = E3[C4 + 776 >> 2], E3[g6 + 12 >> 2] = E3[C4 + 780 >> 2] ^ c4, E3[g6 + 8 >> 2] = K4 ^ o4, E3[g6 + 4 >> 2] = M4 ^ Q4, E3[g6 >> 2] = n4 ^ e4, n4 = E3[F4 + 12 >> 2], E3[C4 + 792 >> 2] = E3[F4 + 8 >> 2], E3[C4 + 796 >> 2] = n4, n4 = E3[F4 + 4 >> 2], E3[C4 + 784 >> 2] = E3[F4 >> 2], E3[C4 + 788 >> 2] = n4, n4 = E3[I7 + 12 >> 2], E3[C4 + 568 >> 2] = E3[I7 + 8 >> 2], E3[C4 + 572 >> 2] = n4, n4 = E3[I7 + 4 >> 2], E3[C4 + 560 >> 2] = E3[I7 >> 2], E3[C4 + 564 >> 2] = n4, n4 = E3[F4 + 12 >> 2], E3[C4 + 552 >> 2] = E3[F4 + 8 >> 2], E3[C4 + 556 >> 2] = n4, n4 = E3[F4 + 4 >> 2], E3[C4 + 544 >> 2] = E3[F4 >> 2], E3[C4 + 548 >> 2] = n4, aA(S4, C4 + 560 | 0, C4 + 544 | 0), n4 = E3[C4 + 780 >> 2], E3[F4 + 8 >> 2] = E3[C4 + 776 >> 2], E3[F4 + 12 >> 2] = n4, n4 = E3[C4 + 772 >> 2], E3[F4 >> 2] = E3[C4 + 768 >> 2], E3[F4 + 4 >> 2] = n4, n4 = E3[A8 + 12 >> 2], E3[C4 + 536 >> 2] = E3[A8 + 8 >> 2], E3[C4 + 540 >> 2] = n4, n4 = E3[A8 + 4 >> 2], E3[C4 + 528 >> 2] = E3[A8 >> 2], E3[C4 + 532 >> 2] = n4, n4 = E3[I7 + 12 >> 2], E3[C4 + 520 >> 2] = E3[I7 + 8 >> 2], E3[C4 + 524 >> 2] = n4, n4 = E3[I7 + 4 >> 2], E3[C4 + 512 >> 2] = E3[I7 >> 2], E3[C4 + 516 >> 2] = n4, aA(S4, C4 + 528 | 0, C4 + 512 | 0), n4 = E3[C4 + 780 >> 2], E3[I7 + 8 >> 2] = E3[C4 + 776 >> 2], E3[I7 + 12 >> 2] = n4, n4 = E3[C4 + 772 >> 2], E3[I7 >> 2] = E3[C4 + 768 >> 2], E3[I7 + 4 >> 2] = n4, n4 = E3[B4 + 12 >> 2], E3[C4 + 504 >> 2] = E3[B4 + 8 >> 2], E3[C4 + 508 >> 2] = n4, n4 = E3[B4 + 4 >> 2], E3[C4 + 496 >> 2] = E3[B4 >> 2], E3[C4 + 500 >> 2] = n4, n4 = E3[A8 + 12 >> 2], E3[C4 + 488 >> 2] = E3[A8 + 8 >> 2], E3[C4 + 492 >> 2] = n4, n4 = E3[A8 + 4 >> 2], E3[C4 + 480 >> 2] = E3[A8 >> 2], E3[C4 + 484 >> 2] = n4, aA(S4, C4 + 496 | 0, C4 + 480 | 0), n4 = E3[C4 + 780 >> 2], E3[A8 + 8 >> 2] = E3[C4 + 776 >> 2], E3[A8 + 12 >> 2] = n4, n4 = E3[C4 + 772 >> 2], E3[A8 >> 2] = E3[C4 + 768 >> 2], E3[A8 + 4 >> 2] = n4, n4 = E3[s4 + 12 >> 2], E3[C4 + 472 >> 2] = E3[s4 + 8 >> 2], E3[C4 + 476 >> 2] = n4, n4 = E3[s4 + 4 >> 2], E3[C4 + 464 >> 2] = E3[s4 >> 2], E3[C4 + 468 >> 2] = n4, n4 = E3[B4 + 12 >> 2], E3[C4 + 456 >> 2] = E3[B4 + 8 >> 2], E3[C4 + 460 >> 2] = n4, n4 = E3[B4 + 4 >> 2], E3[C4 + 448 >> 2] = E3[B4 >> 2], E3[C4 + 452 >> 2] = n4, aA(S4, C4 + 464 | 0, C4 + 448 | 0), n4 = E3[C4 + 780 >> 2], E3[B4 + 8 >> 2] = E3[C4 + 776 >> 2], E3[B4 + 12 >> 2] = n4, n4 = E3[C4 + 772 >> 2], E3[B4 >> 2] = E3[C4 + 768 >> 2], E3[B4 + 4 >> 2] = n4, n4 = E3[g6 + 12 >> 2], E3[C4 + 440 >> 2] = E3[g6 + 8 >> 2], E3[C4 + 444 >> 2] = n4, n4 = E3[g6 + 4 >> 2], E3[C4 + 432 >> 2] = E3[g6 >> 2], E3[C4 + 436 >> 2] = n4, n4 = E3[s4 + 12 >> 2], E3[C4 + 424 >> 2] = E3[s4 + 8 >> 2], E3[C4 + 428 >> 2] = n4, n4 = E3[s4 + 4 >> 2], E3[C4 + 416 >> 2] = E3[s4 >> 2], E3[C4 + 420 >> 2] = n4, aA(S4, C4 + 432 | 0, C4 + 416 | 0), n4 = E3[C4 + 780 >> 2], E3[s4 + 8 >> 2] = E3[C4 + 776 >> 2], E3[s4 + 12 >> 2] = n4, n4 = E3[C4 + 772 >> 2], E3[s4 >> 2] = E3[C4 + 768 >> 2], E3[s4 + 4 >> 2] = n4, n4 = E3[C4 + 796 >> 2], E3[C4 + 408 >> 2] = E3[C4 + 792 >> 2], E3[C4 + 412 >> 2] = n4, n4 = E3[C4 + 788 >> 2], E3[C4 + 400 >> 2] = E3[C4 + 784 >> 2], E3[C4 + 404 >> 2] = n4, n4 = E3[g6 + 12 >> 2], E3[C4 + 392 >> 2] = E3[g6 + 8 >> 2], E3[C4 + 396 >> 2] = n4, n4 = E3[g6 + 4 >> 2], E3[C4 + 384 >> 2] = E3[g6 >> 2], E3[C4 + 388 >> 2] = n4, aA(S4, C4 + 400 | 0, C4 + 384 | 0), n4 = E3[C4 + 768 >> 2], M4 = E3[C4 + 772 >> 2], K4 = E3[C4 + 776 >> 2], E3[g6 + 12 >> 2] = E3[C4 + 780 >> 2] ^ f4, E3[g6 + 8 >> 2] = K4 ^ y4, E3[g6 + 4 >> 2] = M4 ^ a4, E3[g6 >> 2] = n4 ^ D4, n4 = E3[F4 + 12 >> 2], E3[C4 + 792 >> 2] = E3[F4 + 8 >> 2], E3[C4 + 796 >> 2] = n4, n4 = E3[F4 + 4 >> 2], E3[C4 + 784 >> 2] = E3[F4 >> 2], E3[C4 + 788 >> 2] = n4, n4 = E3[I7 + 12 >> 2], E3[C4 + 376 >> 2] = E3[I7 + 8 >> 2], E3[C4 + 380 >> 2] = n4, n4 = E3[I7 + 4 >> 2], E3[C4 + 368 >> 2] = E3[I7 >> 2], E3[C4 + 372 >> 2] = n4, n4 = E3[F4 + 12 >> 2], E3[C4 + 360 >> 2] = E3[F4 + 8 >> 2], E3[C4 + 364 >> 2] = n4, n4 = E3[F4 + 4 >> 2], E3[C4 + 352 >> 2] = E3[F4 >> 2], E3[C4 + 356 >> 2] = n4, aA(S4, C4 + 368 | 0, C4 + 352 | 0), n4 = E3[C4 + 780 >> 2], E3[F4 + 8 >> 2] = E3[C4 + 776 >> 2], E3[F4 + 12 >> 2] = n4, n4 = E3[C4 + 772 >> 2], E3[F4 >> 2] = E3[C4 + 768 >> 2], E3[F4 + 4 >> 2] = n4, n4 = E3[A8 + 12 >> 2], E3[C4 + 344 >> 2] = E3[A8 + 8 >> 2], E3[C4 + 348 >> 2] = n4, n4 = E3[A8 + 4 >> 2], E3[C4 + 336 >> 2] = E3[A8 >> 2], E3[C4 + 340 >> 2] = n4, n4 = E3[I7 + 12 >> 2], E3[C4 + 328 >> 2] = E3[I7 + 8 >> 2], E3[C4 + 332 >> 2] = n4, n4 = E3[I7 + 4 >> 2], E3[C4 + 320 >> 2] = E3[I7 >> 2], E3[C4 + 324 >> 2] = n4, aA(S4, C4 + 336 | 0, C4 + 320 | 0), n4 = E3[C4 + 780 >> 2], E3[I7 + 8 >> 2] = E3[C4 + 776 >> 2], E3[I7 + 12 >> 2] = n4, n4 = E3[C4 + 772 >> 2], E3[I7 >> 2] = E3[C4 + 768 >> 2], E3[I7 + 4 >> 2] = n4, n4 = E3[B4 + 12 >> 2], E3[C4 + 312 >> 2] = E3[B4 + 8 >> 2], E3[C4 + 316 >> 2] = n4, n4 = E3[B4 + 4 >> 2], E3[C4 + 304 >> 2] = E3[B4 >> 2], E3[C4 + 308 >> 2] = n4, n4 = E3[A8 + 12 >> 2], E3[C4 + 296 >> 2] = E3[A8 + 8 >> 2], E3[C4 + 300 >> 2] = n4, n4 = E3[A8 + 4 >> 2], E3[C4 + 288 >> 2] = E3[A8 >> 2], E3[C4 + 292 >> 2] = n4, aA(S4, C4 + 304 | 0, C4 + 288 | 0), n4 = E3[C4 + 780 >> 2], E3[A8 + 8 >> 2] = E3[C4 + 776 >> 2], E3[A8 + 12 >> 2] = n4, n4 = E3[C4 + 772 >> 2], E3[A8 >> 2] = E3[C4 + 768 >> 2], E3[A8 + 4 >> 2] = n4, n4 = E3[s4 + 12 >> 2], E3[C4 + 280 >> 2] = E3[s4 + 8 >> 2], E3[C4 + 284 >> 2] = n4, n4 = E3[s4 + 4 >> 2], E3[C4 + 272 >> 2] = E3[s4 >> 2], E3[C4 + 276 >> 2] = n4, n4 = E3[B4 + 12 >> 2], E3[C4 + 264 >> 2] = E3[B4 + 8 >> 2], E3[C4 + 268 >> 2] = n4, n4 = E3[B4 + 4 >> 2], E3[C4 + 256 >> 2] = E3[B4 >> 2], E3[C4 + 260 >> 2] = n4, aA(S4, C4 + 272 | 0, C4 + 256 | 0), n4 = E3[C4 + 780 >> 2], E3[B4 + 8 >> 2] = E3[C4 + 776 >> 2], E3[B4 + 12 >> 2] = n4, n4 = E3[C4 + 772 >> 2], E3[B4 >> 2] = E3[C4 + 768 >> 2], E3[B4 + 4 >> 2] = n4, n4 = E3[g6 + 12 >> 2], E3[C4 + 248 >> 2] = E3[g6 + 8 >> 2], E3[C4 + 252 >> 2] = n4, n4 = E3[g6 + 4 >> 2], E3[C4 + 240 >> 2] = E3[g6 >> 2], E3[C4 + 244 >> 2] = n4, n4 = E3[s4 + 12 >> 2], E3[C4 + 232 >> 2] = E3[s4 + 8 >> 2], E3[C4 + 236 >> 2] = n4, n4 = E3[s4 + 4 >> 2], E3[C4 + 224 >> 2] = E3[s4 >> 2], E3[C4 + 228 >> 2] = n4, aA(S4, C4 + 240 | 0, C4 + 224 | 0), n4 = E3[C4 + 780 >> 2], E3[s4 + 8 >> 2] = E3[C4 + 776 >> 2], E3[s4 + 12 >> 2] = n4, n4 = E3[C4 + 772 >> 2], E3[s4 >> 2] = E3[C4 + 768 >> 2], E3[s4 + 4 >> 2] = n4, n4 = E3[C4 + 796 >> 2], E3[C4 + 216 >> 2] = E3[C4 + 792 >> 2], E3[C4 + 220 >> 2] = n4, n4 = E3[C4 + 788 >> 2], E3[C4 + 208 >> 2] = E3[C4 + 784 >> 2], E3[C4 + 212 >> 2] = n4, n4 = E3[g6 + 12 >> 2], E3[C4 + 200 >> 2] = E3[g6 + 8 >> 2], E3[C4 + 204 >> 2] = n4, n4 = E3[g6 + 4 >> 2], E3[C4 + 192 >> 2] = E3[g6 >> 2], E3[C4 + 196 >> 2] = n4, aA(S4, C4 + 208 | 0, C4 + 192 | 0), n4 = E3[C4 + 768 >> 2], M4 = E3[C4 + 772 >> 2], K4 = E3[C4 + 776 >> 2], E3[g6 + 12 >> 2] = _4 ^ E3[C4 + 780 >> 2], E3[g6 + 8 >> 2] = K4 ^ h4, E3[g6 + 4 >> 2] = M4 ^ k4, E3[g6 >> 2] = n4 ^ w4, n4 = E3[F4 + 12 >> 2], E3[C4 + 792 >> 2] = E3[F4 + 8 >> 2], E3[C4 + 796 >> 2] = n4, n4 = E3[F4 + 4 >> 2], E3[C4 + 784 >> 2] = E3[F4 >> 2], E3[C4 + 788 >> 2] = n4, n4 = E3[I7 + 12 >> 2], E3[C4 + 184 >> 2] = E3[I7 + 8 >> 2], E3[C4 + 188 >> 2] = n4, n4 = E3[I7 + 4 >> 2], E3[C4 + 176 >> 2] = E3[I7 >> 2], E3[C4 + 180 >> 2] = n4, n4 = E3[F4 + 12 >> 2], E3[C4 + 168 >> 2] = E3[F4 + 8 >> 2], E3[C4 + 172 >> 2] = n4, n4 = E3[F4 + 4 >> 2], E3[C4 + 160 >> 2] = E3[F4 >> 2], E3[C4 + 164 >> 2] = n4, aA(S4, C4 + 176 | 0, C4 + 160 | 0), n4 = E3[C4 + 780 >> 2], E3[F4 + 8 >> 2] = E3[C4 + 776 >> 2], E3[F4 + 12 >> 2] = n4, n4 = E3[C4 + 772 >> 2], E3[F4 >> 2] = E3[C4 + 768 >> 2], E3[F4 + 4 >> 2] = n4, n4 = E3[A8 + 12 >> 2], E3[C4 + 152 >> 2] = E3[A8 + 8 >> 2], E3[C4 + 156 >> 2] = n4, n4 = E3[A8 + 4 >> 2], E3[C4 + 144 >> 2] = E3[A8 >> 2], E3[C4 + 148 >> 2] = n4, n4 = E3[I7 + 12 >> 2], E3[C4 + 136 >> 2] = E3[I7 + 8 >> 2], E3[C4 + 140 >> 2] = n4, n4 = E3[I7 + 4 >> 2], E3[C4 + 128 >> 2] = E3[I7 >> 2], E3[C4 + 132 >> 2] = n4, aA(S4, C4 + 144 | 0, C4 + 128 | 0), n4 = E3[C4 + 780 >> 2], E3[I7 + 8 >> 2] = E3[C4 + 776 >> 2], E3[I7 + 12 >> 2] = n4, n4 = E3[C4 + 772 >> 2], E3[I7 >> 2] = E3[C4 + 768 >> 2], E3[I7 + 4 >> 2] = n4, n4 = E3[B4 + 12 >> 2], E3[C4 + 120 >> 2] = E3[B4 + 8 >> 2], E3[C4 + 124 >> 2] = n4, n4 = E3[B4 + 4 >> 2], E3[C4 + 112 >> 2] = E3[B4 >> 2], E3[C4 + 116 >> 2] = n4, n4 = E3[A8 + 12 >> 2], E3[C4 + 104 >> 2] = E3[A8 + 8 >> 2], E3[C4 + 108 >> 2] = n4, n4 = E3[A8 + 4 >> 2], E3[C4 + 96 >> 2] = E3[A8 >> 2], E3[C4 + 100 >> 2] = n4, aA(S4, C4 + 112 | 0, C4 + 96 | 0), n4 = E3[C4 + 780 >> 2], E3[A8 + 8 >> 2] = E3[C4 + 776 >> 2], E3[A8 + 12 >> 2] = n4, n4 = E3[C4 + 772 >> 2], E3[A8 >> 2] = E3[C4 + 768 >> 2], E3[A8 + 4 >> 2] = n4, n4 = E3[s4 + 12 >> 2], E3[C4 + 88 >> 2] = E3[s4 + 8 >> 2], E3[C4 + 92 >> 2] = n4, n4 = E3[s4 + 4 >> 2], E3[C4 + 80 >> 2] = E3[s4 >> 2], E3[C4 + 84 >> 2] = n4, n4 = E3[B4 + 12 >> 2], E3[C4 + 72 >> 2] = E3[B4 + 8 >> 2], E3[C4 + 76 >> 2] = n4, n4 = E3[B4 + 4 >> 2], E3[C4 + 64 >> 2] = E3[B4 >> 2], E3[C4 + 68 >> 2] = n4, aA(S4, C4 + 80 | 0, C4 - -64 | 0), n4 = E3[C4 + 780 >> 2], E3[B4 + 8 >> 2] = E3[C4 + 776 >> 2], E3[B4 + 12 >> 2] = n4, n4 = E3[C4 + 772 >> 2], E3[B4 >> 2] = E3[C4 + 768 >> 2], E3[B4 + 4 >> 2] = n4, n4 = E3[g6 + 12 >> 2], E3[C4 + 56 >> 2] = E3[g6 + 8 >> 2], E3[C4 + 60 >> 2] = n4, n4 = E3[g6 + 4 >> 2], E3[C4 + 48 >> 2] = E3[g6 >> 2], E3[C4 + 52 >> 2] = n4, n4 = E3[s4 + 12 >> 2], E3[C4 + 40 >> 2] = E3[s4 + 8 >> 2], E3[C4 + 44 >> 2] = n4, n4 = E3[s4 + 4 >> 2], E3[C4 + 32 >> 2] = E3[s4 >> 2], E3[C4 + 36 >> 2] = n4, aA(S4, C4 + 48 | 0, C4 + 32 | 0), n4 = E3[C4 + 780 >> 2], E3[s4 + 8 >> 2] = E3[C4 + 776 >> 2], E3[s4 + 12 >> 2] = n4, n4 = E3[C4 + 772 >> 2], E3[s4 >> 2] = E3[C4 + 768 >> 2], E3[s4 + 4 >> 2] = n4, n4 = E3[C4 + 796 >> 2], E3[C4 + 24 >> 2] = E3[C4 + 792 >> 2], E3[C4 + 28 >> 2] = n4, n4 = E3[C4 + 788 >> 2], E3[C4 + 16 >> 2] = E3[C4 + 784 >> 2], E3[C4 + 20 >> 2] = n4, n4 = E3[g6 + 12 >> 2], E3[C4 + 8 >> 2] = E3[g6 + 8 >> 2], E3[C4 + 12 >> 2] = n4, n4 = E3[g6 + 4 >> 2], E3[C4 >> 2] = E3[g6 >> 2], E3[C4 + 4 >> 2] = n4, aA(S4, C4 + 16 | 0, C4), S4 = E3[C4 + 768 >> 2], n4 = E3[C4 + 772 >> 2], M4 = E3[C4 + 776 >> 2], E3[g6 + 12 >> 2] = G4 ^ E3[C4 + 780 >> 2], E3[g6 + 8 >> 2] = M4 ^ H4, E3[g6 + 4 >> 2] = n4 ^ t4, E3[g6 >> 2] = S4 ^ p4, 4 != (0 | (N4 = N4 + 1 | 0)); ) ;
                      r3 = C4 + 800 | 0;
                    }
                    function M3(A8, I7, g6) {
                      var C4, B4, Q4, i4, o4, D4, a4, y4, f4, e4, w4, r4, h4, k4, n4, s4, F4, S4, M4, N4, K4, _4, p4, H4, G4, J4, Y4, U4, d4, b4, P4, v5, R4, L4, x4, u4, m4, q4, l3, z2, j2, X2, O2, T2, V2, Z2, W2, $2, AA2, IA2, gA2, CA2, BA2, QA2 = 0, EA2 = 0, iA2 = 0, oA2 = 0, cA2 = 0, DA2 = 0, aA2 = 0, yA2 = 0, fA2 = 0, eA2 = 0, wA2 = 0, rA2 = 0, tA2 = 0, hA2 = 0, kA2 = 0, nA2 = 0, sA2 = 0, FA2 = 0, SA2 = 0, MA2 = 0, NA2 = 0, KA2 = 0, _A2 = 0, pA2 = 0, HA2 = 0;
                      QA2 = PA(C4 = E3[g6 + 4 >> 2], e4 = C4 >> 31, sA2 = (s4 = E3[I7 + 20 >> 2]) << 1, P4 = sA2 >> 31), iA2 = t3, EA2 = (tA2 = PA(kA2 = E3[g6 >> 2], Q4 = kA2 >> 31, B4 = E3[I7 + 24 >> 2], i4 = B4 >> 31)) + QA2 | 0, QA2 = t3 + iA2 | 0, QA2 = EA2 >>> 0 < tA2 >>> 0 ? QA2 + 1 | 0 : QA2, fA2 = PA(o4 = E3[g6 + 8 >> 2], h4 = o4 >> 31, tA2 = E3[I7 + 16 >> 2], D4 = tA2 >> 31), iA2 = t3 + QA2 | 0, iA2 = (EA2 = fA2 + EA2 | 0) >>> 0 < fA2 >>> 0 ? iA2 + 1 | 0 : iA2, QA2 = (fA2 = PA(w4 = E3[g6 + 12 >> 2], F4 = w4 >> 31, H4 = (S4 = E3[I7 + 12 >> 2]) << 1, v5 = H4 >> 31)) + EA2 | 0, EA2 = t3 + iA2 | 0, EA2 = QA2 >>> 0 < fA2 >>> 0 ? EA2 + 1 | 0 : EA2, iA2 = (hA2 = PA(k4 = E3[g6 + 16 >> 2], G4 = k4 >> 31, fA2 = E3[I7 + 8 >> 2], a4 = fA2 >> 31)) + QA2 | 0, QA2 = t3 + EA2 | 0, QA2 = iA2 >>> 0 < hA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = iA2, iA2 = PA(M4 = E3[g6 + 20 >> 2], R4 = M4 >> 31, J4 = (N4 = E3[I7 + 4 >> 2]) << 1, L4 = J4 >> 31), QA2 = t3 + QA2 | 0, QA2 = (EA2 = EA2 + iA2 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, Z2 = aA2 = E3[g6 + 24 >> 2], iA2 = (eA2 = PA(aA2, T2 = aA2 >> 31, hA2 = E3[I7 >> 2], y4 = hA2 >> 31)) + EA2 | 0, EA2 = t3 + QA2 | 0, EA2 = iA2 >>> 0 < eA2 >>> 0 ? EA2 + 1 | 0 : EA2, x4 = E3[g6 + 28 >> 2], QA2 = (eA2 = PA(rA2 = c3(x4, 19), K4 = rA2 >> 31, Y4 = (_4 = E3[I7 + 36 >> 2]) << 1, u4 = Y4 >> 31)) + iA2 | 0, iA2 = t3 + EA2 | 0, iA2 = QA2 >>> 0 < eA2 >>> 0 ? iA2 + 1 | 0 : iA2, NA2 = E3[g6 + 32 >> 2], EA2 = (yA2 = PA(oA2 = c3(NA2, 19), n4 = oA2 >> 31, eA2 = E3[I7 + 32 >> 2], f4 = eA2 >> 31)) + QA2 | 0, QA2 = t3 + iA2 | 0, QA2 = EA2 >>> 0 < yA2 >>> 0 ? QA2 + 1 | 0 : QA2, W2 = E3[g6 + 36 >> 2], g6 = PA(yA2 = c3(W2, 19), r4 = yA2 >> 31, U4 = (p4 = E3[I7 + 28 >> 2]) << 1, m4 = U4 >> 31), QA2 = t3 + QA2 | 0, cA2 = I7 = g6 + EA2 | 0, g6 = I7 >>> 0 < g6 >>> 0 ? QA2 + 1 | 0 : QA2, I7 = PA(tA2, D4, C4, e4), QA2 = t3, EA2 = PA(kA2, Q4, s4, q4 = s4 >> 31), iA2 = t3 + QA2 | 0, iA2 = (I7 = EA2 + I7 | 0) >>> 0 < EA2 >>> 0 ? iA2 + 1 | 0 : iA2, QA2 = PA(o4, h4, S4, l3 = S4 >> 31), EA2 = t3 + iA2 | 0, EA2 = (I7 = QA2 + I7 | 0) >>> 0 < QA2 >>> 0 ? EA2 + 1 | 0 : EA2, iA2 = PA(fA2, a4, w4, F4), QA2 = t3 + EA2 | 0, QA2 = (I7 = iA2 + I7 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = PA(k4, G4, N4, z2 = N4 >> 31), QA2 = t3 + QA2 | 0, QA2 = (I7 = EA2 + I7 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = PA(hA2, y4, M4, R4), QA2 = t3 + QA2 | 0, QA2 = (I7 = EA2 + I7 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = PA(aA2 = c3(aA2, 19), d4 = aA2 >> 31, _4, j2 = _4 >> 31), iA2 = t3 + QA2 | 0, iA2 = (I7 = EA2 + I7 | 0) >>> 0 < EA2 >>> 0 ? iA2 + 1 | 0 : iA2, QA2 = PA(eA2, f4, rA2, K4), EA2 = t3 + iA2 | 0, EA2 = (I7 = QA2 + I7 | 0) >>> 0 < QA2 >>> 0 ? EA2 + 1 | 0 : EA2, iA2 = PA(oA2, n4, p4, X2 = p4 >> 31), QA2 = t3 + EA2 | 0, QA2 = (I7 = iA2 + I7 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = PA(yA2, r4, B4, i4), QA2 = t3 + QA2 | 0, _A2 = I7 = EA2 + I7 | 0, FA2 = I7 >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, I7 = PA(C4, e4, H4, v5), QA2 = t3, EA2 = PA(kA2, Q4, tA2, D4), QA2 = t3 + QA2 | 0, QA2 = (I7 = EA2 + I7 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = PA(fA2, a4, o4, h4), iA2 = t3 + QA2 | 0, iA2 = (I7 = EA2 + I7 | 0) >>> 0 < EA2 >>> 0 ? iA2 + 1 | 0 : iA2, QA2 = PA(w4, F4, J4, L4), EA2 = t3 + iA2 | 0, EA2 = (I7 = QA2 + I7 | 0) >>> 0 < QA2 >>> 0 ? EA2 + 1 | 0 : EA2, iA2 = PA(hA2, y4, k4, G4), QA2 = t3 + EA2 | 0, QA2 = (I7 = iA2 + I7 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = PA(b4 = c3(M4, 19), O2 = b4 >> 31, Y4, u4), QA2 = t3 + QA2 | 0, QA2 = (I7 = EA2 + I7 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = PA(eA2, f4, aA2, d4), QA2 = t3 + QA2 | 0, QA2 = (I7 = EA2 + I7 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = PA(rA2, K4, U4, m4), iA2 = t3 + QA2 | 0, iA2 = (I7 = EA2 + I7 | 0) >>> 0 < EA2 >>> 0 ? iA2 + 1 | 0 : iA2, QA2 = PA(oA2, n4, B4, i4), EA2 = t3 + iA2 | 0, EA2 = (I7 = QA2 + I7 | 0) >>> 0 < QA2 >>> 0 ? EA2 + 1 | 0 : EA2, iA2 = PA(yA2, r4, sA2, P4), QA2 = t3 + EA2 | 0, $2 = I7 = iA2 + I7 | 0, AA2 = QA2 = I7 >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, IA2 = I7 = I7 + 33554432 | 0, gA2 = QA2 = I7 >>> 0 < 33554432 ? QA2 + 1 | 0 : QA2, iA2 = (67108863 & QA2) << 6 | I7 >>> 26, QA2 = (QA2 >> 26) + FA2 | 0, _A2 = I7 = iA2 + _A2 | 0, QA2 = I7 >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, CA2 = I7 = I7 + 16777216 | 0, QA2 = g6 + (EA2 = (iA2 = I7 >>> 0 < 16777216 ? QA2 + 1 | 0 : QA2) >> 25) | 0, QA2 = (I7 = (iA2 = (33554431 & iA2) << 7 | I7 >>> 25) + cA2 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, SA2 = g6 = (EA2 = I7) + 33554432 | 0, I7 = QA2 = g6 >>> 0 < 33554432 ? QA2 + 1 | 0 : QA2, E3[A8 + 24 >> 2] = EA2 - (-67108864 & g6), g6 = PA(C4, e4, J4, L4), QA2 = t3, EA2 = PA(kA2, Q4, fA2, a4), iA2 = t3 + QA2 | 0, iA2 = (g6 = EA2 + g6 | 0) >>> 0 < EA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = (QA2 = g6) + (g6 = PA(hA2, y4, o4, h4)) | 0, QA2 = t3 + iA2 | 0, QA2 = g6 >>> 0 > EA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = PA(g6 = c3(w4, 19), MA2 = g6 >> 31, Y4, u4), QA2 = t3 + QA2 | 0, QA2 = (EA2 = iA2 + EA2 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = (cA2 = PA(eA2, f4, FA2 = c3(k4, 19), V2 = FA2 >> 31)) + EA2 | 0, EA2 = t3 + QA2 | 0, EA2 = iA2 >>> 0 < cA2 >>> 0 ? EA2 + 1 | 0 : EA2, cA2 = PA(U4, m4, b4, O2), QA2 = t3 + EA2 | 0, QA2 = (iA2 = cA2 + iA2 | 0) >>> 0 < cA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = (cA2 = PA(B4, i4, aA2, d4)) + iA2 | 0, iA2 = t3 + QA2 | 0, iA2 = EA2 >>> 0 < cA2 >>> 0 ? iA2 + 1 | 0 : iA2, cA2 = PA(rA2, K4, sA2, P4), QA2 = t3 + iA2 | 0, QA2 = (EA2 = cA2 + EA2 | 0) >>> 0 < cA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = PA(oA2, n4, tA2, D4), QA2 = t3 + QA2 | 0, QA2 = (EA2 = iA2 + EA2 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = (cA2 = PA(yA2, r4, H4, v5)) + EA2 | 0, EA2 = t3 + QA2 | 0, wA2 = iA2, pA2 = iA2 >>> 0 < cA2 >>> 0 ? EA2 + 1 | 0 : EA2, QA2 = PA(hA2, y4, C4, e4), EA2 = t3, iA2 = (cA2 = PA(kA2, Q4, N4, z2)) + QA2 | 0, QA2 = t3 + EA2 | 0, QA2 = iA2 >>> 0 < cA2 >>> 0 ? QA2 + 1 | 0 : QA2, cA2 = EA2 = c3(o4, 19), EA2 = (DA2 = PA(EA2, KA2 = EA2 >> 31, _4, j2)) + iA2 | 0, iA2 = t3 + QA2 | 0, iA2 = EA2 >>> 0 < DA2 >>> 0 ? iA2 + 1 | 0 : iA2, DA2 = PA(eA2, f4, g6, MA2), QA2 = t3 + iA2 | 0, QA2 = (EA2 = DA2 + EA2 | 0) >>> 0 < DA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = PA(FA2, V2, p4, X2), QA2 = t3 + QA2 | 0, QA2 = (EA2 = iA2 + EA2 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = (DA2 = PA(B4, i4, b4, O2)) + EA2 | 0, EA2 = t3 + QA2 | 0, EA2 = iA2 >>> 0 < DA2 >>> 0 ? EA2 + 1 | 0 : EA2, DA2 = PA(aA2, d4, s4, q4), QA2 = t3 + EA2 | 0, QA2 = (iA2 = DA2 + iA2 | 0) >>> 0 < DA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = (DA2 = PA(tA2, D4, rA2, K4)) + iA2 | 0, iA2 = t3 + QA2 | 0, iA2 = EA2 >>> 0 < DA2 >>> 0 ? iA2 + 1 | 0 : iA2, DA2 = PA(oA2, n4, S4, l3), QA2 = t3 + iA2 | 0, QA2 = (EA2 = DA2 + EA2 | 0) >>> 0 < DA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = PA(yA2, r4, fA2, a4), QA2 = t3 + QA2 | 0, HA2 = EA2 = iA2 + EA2 | 0, DA2 = EA2 >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, QA2 = PA(QA2 = c3(C4, 19), QA2 >> 31, Y4, u4), EA2 = t3, iA2 = PA(kA2, Q4, hA2, y4), EA2 = t3 + EA2 | 0, EA2 = (QA2 = iA2 + QA2 | 0) >>> 0 < iA2 >>> 0 ? EA2 + 1 | 0 : EA2, iA2 = (cA2 = PA(eA2, f4, cA2, KA2)) + QA2 | 0, QA2 = t3 + EA2 | 0, g6 = (EA2 = PA(g6, MA2, U4, m4)) + iA2 | 0, iA2 = t3 + (iA2 >>> 0 < cA2 >>> 0 ? QA2 + 1 | 0 : QA2) | 0, iA2 = g6 >>> 0 < EA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = PA(B4, i4, FA2, V2), QA2 = t3 + iA2 | 0, QA2 = (g6 = EA2 + g6 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = PA(sA2, P4, b4, O2), QA2 = t3 + QA2 | 0, QA2 = (g6 = EA2 + g6 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = PA(tA2, D4, aA2, d4), EA2 = t3 + QA2 | 0, EA2 = (g6 = iA2 + g6 | 0) >>> 0 < iA2 >>> 0 ? EA2 + 1 | 0 : EA2, iA2 = PA(rA2, K4, H4, v5), QA2 = t3 + EA2 | 0, QA2 = (g6 = iA2 + g6 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = PA(oA2, n4, fA2, a4), iA2 = t3 + QA2 | 0, iA2 = (g6 = EA2 + g6 | 0) >>> 0 < EA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = PA(yA2, r4, J4, L4), QA2 = t3 + iA2 | 0, cA2 = g6 = EA2 + g6 | 0, MA2 = QA2 = g6 >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, KA2 = g6 = g6 + 33554432 | 0, BA2 = QA2 = g6 >>> 0 < 33554432 ? QA2 + 1 | 0 : QA2, EA2 = (iA2 = QA2 >> 26) + DA2 | 0, DA2 = g6 = (QA2 = (67108863 & QA2) << 6 | g6 >>> 26) + HA2 | 0, QA2 = g6 >>> 0 < QA2 >>> 0 ? EA2 + 1 | 0 : EA2, HA2 = g6 = g6 + 16777216 | 0, EA2 = (33554431 & (QA2 = g6 >>> 0 < 16777216 ? QA2 + 1 | 0 : QA2)) << 7 | g6 >>> 25, QA2 = (QA2 >> 25) + pA2 | 0, QA2 = (g6 = EA2 + wA2 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, pA2 = EA2 = (iA2 = g6) + 33554432 | 0, g6 = QA2 = EA2 >>> 0 < 33554432 ? QA2 + 1 | 0 : QA2, E3[A8 + 8 >> 2] = iA2 - (-67108864 & EA2), QA2 = PA(B4, i4, C4, e4), iA2 = t3, EA2 = (wA2 = PA(kA2, Q4, p4, X2)) + QA2 | 0, QA2 = t3 + iA2 | 0, QA2 = EA2 >>> 0 < wA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = PA(o4, h4, s4, q4), QA2 = t3 + QA2 | 0, QA2 = (EA2 = iA2 + EA2 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = PA(tA2, D4, w4, F4), QA2 = t3 + QA2 | 0, QA2 = (EA2 = iA2 + EA2 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, wA2 = PA(k4, G4, S4, l3), iA2 = t3 + QA2 | 0, iA2 = (EA2 = wA2 + EA2 | 0) >>> 0 < wA2 >>> 0 ? iA2 + 1 | 0 : iA2, QA2 = (wA2 = PA(fA2, a4, M4, R4)) + EA2 | 0, EA2 = t3 + iA2 | 0, EA2 = QA2 >>> 0 < wA2 >>> 0 ? EA2 + 1 | 0 : EA2, iA2 = (wA2 = PA(N4, z2, Z2, T2)) + QA2 | 0, QA2 = t3 + EA2 | 0, QA2 = iA2 >>> 0 < wA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = iA2, iA2 = PA(hA2, y4, x4, wA2 = x4 >> 31), QA2 = t3 + QA2 | 0, QA2 = (EA2 = EA2 + iA2 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = PA(oA2, n4, _4, j2), QA2 = t3 + QA2 | 0, QA2 = (EA2 = iA2 + EA2 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, nA2 = PA(yA2, r4, eA2, f4), iA2 = t3 + QA2 | 0, QA2 = I7 >> 26, I7 = (SA2 = (67108863 & I7) << 6 | SA2 >>> 26) + (EA2 = nA2 + EA2 | 0) | 0, EA2 = QA2 + (EA2 >>> 0 < nA2 >>> 0 ? iA2 + 1 | 0 : iA2) | 0, QA2 = (iA2 = I7) >>> 0 < SA2 >>> 0 ? EA2 + 1 | 0 : EA2, SA2 = EA2 = iA2 + 16777216 | 0, I7 = QA2 = EA2 >>> 0 < 16777216 ? QA2 + 1 | 0 : QA2, E3[A8 + 28 >> 2] = iA2 - (-33554432 & EA2), QA2 = PA(fA2, a4, C4, e4), EA2 = t3, nA2 = PA(kA2, Q4, S4, l3), iA2 = t3 + EA2 | 0, iA2 = (QA2 = nA2 + QA2 | 0) >>> 0 < nA2 >>> 0 ? iA2 + 1 | 0 : iA2, nA2 = PA(o4, h4, N4, z2), EA2 = t3 + iA2 | 0, EA2 = (QA2 = nA2 + QA2 | 0) >>> 0 < nA2 >>> 0 ? EA2 + 1 | 0 : EA2, iA2 = (nA2 = PA(hA2, y4, w4, F4)) + QA2 | 0, QA2 = t3 + EA2 | 0, QA2 = iA2 >>> 0 < nA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = iA2, iA2 = PA(FA2, V2, _4, j2), QA2 = t3 + QA2 | 0, QA2 = (EA2 = EA2 + iA2 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = PA(eA2, f4, b4, O2), QA2 = t3 + QA2 | 0, QA2 = (EA2 = iA2 + EA2 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = (aA2 = PA(aA2, d4, p4, X2)) + EA2 | 0, iA2 = t3 + QA2 | 0, QA2 = (rA2 = PA(B4, i4, rA2, K4)) + EA2 | 0, EA2 = t3 + (EA2 >>> 0 < aA2 >>> 0 ? iA2 + 1 | 0 : iA2) | 0, iA2 = (oA2 = PA(oA2, n4, s4, q4)) + QA2 | 0, QA2 = t3 + (QA2 >>> 0 < rA2 >>> 0 ? EA2 + 1 | 0 : EA2) | 0, QA2 = iA2 >>> 0 < oA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = iA2, iA2 = PA(yA2, r4, tA2, D4), QA2 = t3 + QA2 | 0, oA2 = EA2 = EA2 + iA2 | 0, QA2 = (QA2 = EA2 >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2) + (EA2 = g6 >> 26) | 0, oA2 = g6 = oA2 + (iA2 = (67108863 & g6) << 6 | pA2 >>> 26) | 0, QA2 = g6 >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, rA2 = EA2 = g6 + 16777216 | 0, g6 = iA2 = EA2 >>> 0 < 16777216 ? QA2 + 1 | 0 : QA2, E3[A8 + 12 >> 2] = oA2 - (-33554432 & EA2), QA2 = PA(C4, e4, U4, m4), iA2 = t3, EA2 = (oA2 = PA(kA2, Q4, eA2, f4)) + QA2 | 0, QA2 = t3 + iA2 | 0, QA2 = EA2 >>> 0 < oA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = PA(B4, i4, o4, h4), QA2 = t3 + QA2 | 0, QA2 = (EA2 = iA2 + EA2 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, oA2 = PA(w4, F4, sA2, P4), iA2 = t3 + QA2 | 0, iA2 = (EA2 = oA2 + EA2 | 0) >>> 0 < oA2 >>> 0 ? iA2 + 1 | 0 : iA2, QA2 = (oA2 = PA(tA2, D4, k4, G4)) + EA2 | 0, EA2 = t3 + iA2 | 0, EA2 = QA2 >>> 0 < oA2 >>> 0 ? EA2 + 1 | 0 : EA2, iA2 = (oA2 = PA(H4, v5, M4, R4)) + QA2 | 0, QA2 = t3 + EA2 | 0, QA2 = iA2 >>> 0 < oA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = iA2, iA2 = PA(fA2, a4, Z2, T2), QA2 = t3 + QA2 | 0, QA2 = (EA2 = EA2 + iA2 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = PA(x4, wA2, J4, L4), QA2 = t3 + QA2 | 0, QA2 = (EA2 = iA2 + EA2 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = (sA2 = PA(hA2, y4, oA2 = NA2, aA2 = oA2 >> 31)) + EA2 | 0, iA2 = t3 + QA2 | 0, QA2 = (yA2 = PA(yA2, r4, Y4, u4)) + EA2 | 0, EA2 = t3 + (EA2 >>> 0 < sA2 >>> 0 ? iA2 + 1 | 0 : iA2) | 0, EA2 = QA2 >>> 0 < yA2 >>> 0 ? EA2 + 1 | 0 : EA2, NA2 = QA2, QA2 = (QA2 = I7 >> 25) + EA2 | 0, QA2 = (I7 = NA2 + (iA2 = (33554431 & I7) << 7 | SA2 >>> 25) | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, yA2 = EA2 = (iA2 = I7) + 33554432 | 0, I7 = QA2 = EA2 >>> 0 < 33554432 ? QA2 + 1 | 0 : QA2, E3[A8 + 32 >> 2] = iA2 - (-67108864 & EA2), EA2 = g6 >> 25, g6 = (rA2 = (33554431 & g6) << 7 | rA2 >>> 25) + ($2 - (QA2 = -67108864 & IA2) | 0) | 0, QA2 = EA2 + (AA2 - ((QA2 >>> 0 > $2 >>> 0) + gA2 | 0) | 0) | 0, QA2 = g6 >>> 0 < rA2 >>> 0 ? QA2 + 1 | 0 : QA2, QA2 = ((67108863 & (QA2 = (g6 = (EA2 = g6) + 33554432 | 0) >>> 0 < 33554432 ? QA2 + 1 | 0 : QA2)) << 6 | g6 >>> 26) + (iA2 = _A2 - (-33554432 & CA2) | 0) | 0, E3[A8 + 20 >> 2] = QA2, E3[A8 + 16 >> 2] = EA2 - (-67108864 & g6), g6 = PA(eA2, f4, C4, e4), QA2 = t3, EA2 = PA(kA2, Q4, _4, j2), QA2 = t3 + QA2 | 0, QA2 = (g6 = EA2 + g6 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = PA(o4, h4, p4, X2), EA2 = t3 + QA2 | 0, EA2 = (g6 = iA2 + g6 | 0) >>> 0 < iA2 >>> 0 ? EA2 + 1 | 0 : EA2, QA2 = PA(B4, i4, w4, F4), iA2 = t3 + EA2 | 0, iA2 = (g6 = QA2 + g6 | 0) >>> 0 < QA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = PA(k4, G4, s4, q4), QA2 = t3 + iA2 | 0, QA2 = (g6 = EA2 + g6 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = PA(tA2, D4, M4, R4), QA2 = t3 + QA2 | 0, QA2 = (g6 = EA2 + g6 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = PA(S4, l3, Z2, T2), QA2 = t3 + QA2 | 0, QA2 = (g6 = EA2 + g6 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = PA(fA2, a4, x4, wA2), EA2 = t3 + QA2 | 0, EA2 = (g6 = iA2 + g6 | 0) >>> 0 < iA2 >>> 0 ? EA2 + 1 | 0 : EA2, QA2 = PA(oA2, aA2, N4, z2), iA2 = t3 + EA2 | 0, iA2 = (g6 = QA2 + g6 | 0) >>> 0 < QA2 >>> 0 ? iA2 + 1 | 0 : iA2, EA2 = PA(hA2, y4, W2, W2 >> 31), QA2 = t3 + iA2 | 0, QA2 = (QA2 = (g6 = EA2 + g6 | 0) >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2) + (EA2 = I7 >> 26) | 0, QA2 = (I7 = (iA2 = g6) + (g6 = (67108863 & I7) << 6 | yA2 >>> 26) | 0) >>> 0 < g6 >>> 0 ? QA2 + 1 | 0 : QA2, QA2 = (I7 = (g6 = I7) + 16777216 | 0) >>> 0 < 16777216 ? QA2 + 1 | 0 : QA2, E3[A8 + 36 >> 2] = g6 - (-33554432 & I7), iA2 = DA2 - (-33554432 & HA2) | 0, EA2 = cA2 - (g6 = -67108864 & KA2) | 0, kA2 = MA2 - ((g6 >>> 0 > cA2 >>> 0) + BA2 | 0) | 0, I7 = (g6 = PA((33554431 & (g6 = QA2)) << 7 | I7 >>> 25, QA2 >>= 25, 19, 0)) + EA2 | 0, EA2 = t3 + kA2 | 0, QA2 = I7 >>> 0 < g6 >>> 0 ? EA2 + 1 | 0 : EA2, QA2 = ((67108863 & (QA2 = (I7 = (g6 = I7) + 33554432 | 0) >>> 0 < 33554432 ? QA2 + 1 | 0 : QA2)) << 6 | I7 >>> 26) + iA2 | 0, E3[A8 + 4 >> 2] = QA2, E3[A8 >> 2] = g6 - (-67108864 & I7);
                    }
                    function N3(A8, I7) {
                      var g6, C4, B4, Q4, o4, c4, D4, a4, y4, f4, e4, w4, t4, h4, k4, n4, s4 = 0, F4 = 0, S4 = 0;
                      r3 = g6 = r3 - 544 | 0, C4 = i3[A8 + 60 | 0] | i3[A8 + 61 | 0] << 8 | i3[A8 + 62 | 0] << 16 | i3[A8 + 63 | 0] << 24, B4 = i3[A8 + 56 | 0] | i3[A8 + 57 | 0] << 8 | i3[A8 + 58 | 0] << 16 | i3[A8 + 59 | 0] << 24, Q4 = i3[A8 + 52 | 0] | i3[A8 + 53 | 0] << 8 | i3[A8 + 54 | 0] << 16 | i3[A8 + 55 | 0] << 24, o4 = i3[A8 + 48 | 0] | i3[A8 + 49 | 0] << 8 | i3[A8 + 50 | 0] << 16 | i3[A8 + 51 | 0] << 24, c4 = i3[A8 + 32 | 0] | i3[A8 + 33 | 0] << 8 | i3[A8 + 34 | 0] << 16 | i3[A8 + 35 | 0] << 24, D4 = i3[A8 + 36 | 0] | i3[A8 + 37 | 0] << 8 | i3[A8 + 38 | 0] << 16 | i3[A8 + 39 | 0] << 24, a4 = i3[A8 + 40 | 0] | i3[A8 + 41 | 0] << 8 | i3[A8 + 42 | 0] << 16 | i3[A8 + 43 | 0] << 24, y4 = i3[A8 + 44 | 0] | i3[A8 + 45 | 0] << 8 | i3[A8 + 46 | 0] << 16 | i3[A8 + 47 | 0] << 24, s4 = i3[A8 + 28 | 0] | i3[A8 + 29 | 0] << 8 | i3[A8 + 30 | 0] << 16 | i3[A8 + 31 | 0] << 24, f4 = i3[A8 + 24 | 0] | i3[A8 + 25 | 0] << 8 | i3[A8 + 26 | 0] << 16 | i3[A8 + 27 | 0] << 24, e4 = i3[A8 + 20 | 0] | i3[A8 + 21 | 0] << 8 | i3[A8 + 22 | 0] << 16 | i3[A8 + 23 | 0] << 24, w4 = i3[A8 + 16 | 0] | i3[A8 + 17 | 0] << 8 | i3[A8 + 18 | 0] << 16 | i3[A8 + 19 | 0] << 24, t4 = i3[A8 + 4 | 0] | i3[A8 + 5 | 0] << 8 | i3[A8 + 6 | 0] << 16 | i3[A8 + 7 | 0] << 24, h4 = i3[A8 + 8 | 0] | i3[A8 + 9 | 0] << 8 | i3[A8 + 10 | 0] << 16 | i3[A8 + 11 | 0] << 24, k4 = i3[A8 + 12 | 0] | i3[A8 + 13 | 0] << 8 | i3[A8 + 14 | 0] << 16 | i3[A8 + 15 | 0] << 24, n4 = i3[0 | A8] | i3[A8 + 1 | 0] << 8 | i3[A8 + 2 | 0] << 16 | i3[A8 + 3 | 0] << 24, A8 = E3[I7 + 124 >> 2], E3[g6 + 536 >> 2] = E3[I7 + 120 >> 2], E3[g6 + 540 >> 2] = A8, A8 = E3[I7 + 116 >> 2], E3[g6 + 528 >> 2] = E3[I7 + 112 >> 2], E3[g6 + 532 >> 2] = A8, A8 = E3[I7 + 108 >> 2], E3[g6 + 504 >> 2] = E3[I7 + 104 >> 2], E3[g6 + 508 >> 2] = A8, A8 = E3[I7 + 100 >> 2], E3[g6 + 496 >> 2] = E3[I7 + 96 >> 2], E3[g6 + 500 >> 2] = A8, A8 = E3[I7 + 124 >> 2], E3[g6 + 488 >> 2] = E3[I7 + 120 >> 2], E3[g6 + 492 >> 2] = A8, A8 = E3[I7 + 116 >> 2], E3[g6 + 480 >> 2] = E3[I7 + 112 >> 2], E3[g6 + 484 >> 2] = A8, aA(S4 = g6 + 512 | 0, g6 + 496 | 0, g6 + 480 | 0), A8 = E3[g6 + 524 >> 2], E3[I7 + 120 >> 2] = E3[g6 + 520 >> 2], E3[I7 + 124 >> 2] = A8, A8 = E3[g6 + 516 >> 2], E3[I7 + 112 >> 2] = E3[g6 + 512 >> 2], E3[I7 + 116 >> 2] = A8, A8 = E3[I7 + 92 >> 2], E3[g6 + 472 >> 2] = E3[I7 + 88 >> 2], E3[g6 + 476 >> 2] = A8, A8 = E3[I7 + 84 >> 2], E3[g6 + 464 >> 2] = E3[I7 + 80 >> 2], E3[g6 + 468 >> 2] = A8, A8 = E3[I7 + 108 >> 2], E3[g6 + 456 >> 2] = E3[I7 + 104 >> 2], E3[g6 + 460 >> 2] = A8, A8 = E3[I7 + 100 >> 2], E3[g6 + 448 >> 2] = E3[I7 + 96 >> 2], E3[g6 + 452 >> 2] = A8, aA(S4, g6 + 464 | 0, g6 + 448 | 0), A8 = E3[g6 + 524 >> 2], E3[I7 + 104 >> 2] = E3[g6 + 520 >> 2], E3[I7 + 108 >> 2] = A8, A8 = E3[g6 + 516 >> 2], E3[I7 + 96 >> 2] = E3[g6 + 512 >> 2], E3[I7 + 100 >> 2] = A8, A8 = E3[I7 + 76 >> 2], E3[g6 + 440 >> 2] = E3[I7 + 72 >> 2], E3[g6 + 444 >> 2] = A8, F4 = E3[4 + (A8 = I7 - -64 | 0) >> 2], E3[g6 + 432 >> 2] = E3[A8 >> 2], E3[g6 + 436 >> 2] = F4, F4 = E3[I7 + 92 >> 2], E3[g6 + 424 >> 2] = E3[I7 + 88 >> 2], E3[g6 + 428 >> 2] = F4, F4 = E3[I7 + 84 >> 2], E3[g6 + 416 >> 2] = E3[I7 + 80 >> 2], E3[g6 + 420 >> 2] = F4, aA(S4, g6 + 432 | 0, g6 + 416 | 0), F4 = E3[g6 + 524 >> 2], E3[I7 + 88 >> 2] = E3[g6 + 520 >> 2], E3[I7 + 92 >> 2] = F4, F4 = E3[g6 + 516 >> 2], E3[I7 + 80 >> 2] = E3[g6 + 512 >> 2], E3[I7 + 84 >> 2] = F4, F4 = E3[I7 + 60 >> 2], E3[g6 + 408 >> 2] = E3[I7 + 56 >> 2], E3[g6 + 412 >> 2] = F4, F4 = E3[I7 + 52 >> 2], E3[g6 + 400 >> 2] = E3[I7 + 48 >> 2], E3[g6 + 404 >> 2] = F4, F4 = E3[I7 + 76 >> 2], E3[g6 + 392 >> 2] = E3[I7 + 72 >> 2], E3[g6 + 396 >> 2] = F4, F4 = E3[A8 + 4 >> 2], E3[g6 + 384 >> 2] = E3[A8 >> 2], E3[g6 + 388 >> 2] = F4, aA(S4, g6 + 400 | 0, g6 + 384 | 0), F4 = E3[g6 + 524 >> 2], E3[I7 + 72 >> 2] = E3[g6 + 520 >> 2], E3[I7 + 76 >> 2] = F4, F4 = E3[g6 + 516 >> 2], E3[A8 >> 2] = E3[g6 + 512 >> 2], E3[A8 + 4 >> 2] = F4, F4 = E3[I7 + 44 >> 2], E3[g6 + 376 >> 2] = E3[I7 + 40 >> 2], E3[g6 + 380 >> 2] = F4, F4 = E3[I7 + 36 >> 2], E3[g6 + 368 >> 2] = E3[I7 + 32 >> 2], E3[g6 + 372 >> 2] = F4, F4 = E3[I7 + 60 >> 2], E3[g6 + 360 >> 2] = E3[I7 + 56 >> 2], E3[g6 + 364 >> 2] = F4, F4 = E3[I7 + 52 >> 2], E3[g6 + 352 >> 2] = E3[I7 + 48 >> 2], E3[g6 + 356 >> 2] = F4, aA(S4, g6 + 368 | 0, g6 + 352 | 0), F4 = E3[g6 + 524 >> 2], E3[I7 + 56 >> 2] = E3[g6 + 520 >> 2], E3[I7 + 60 >> 2] = F4, F4 = E3[g6 + 516 >> 2], E3[I7 + 48 >> 2] = E3[g6 + 512 >> 2], E3[I7 + 52 >> 2] = F4, F4 = E3[I7 + 28 >> 2], E3[g6 + 344 >> 2] = E3[I7 + 24 >> 2], E3[g6 + 348 >> 2] = F4, F4 = E3[I7 + 20 >> 2], E3[g6 + 336 >> 2] = E3[I7 + 16 >> 2], E3[g6 + 340 >> 2] = F4, F4 = E3[I7 + 44 >> 2], E3[g6 + 328 >> 2] = E3[I7 + 40 >> 2], E3[g6 + 332 >> 2] = F4, F4 = E3[I7 + 36 >> 2], E3[g6 + 320 >> 2] = E3[I7 + 32 >> 2], E3[g6 + 324 >> 2] = F4, aA(S4, g6 + 336 | 0, g6 + 320 | 0), F4 = E3[g6 + 524 >> 2], E3[I7 + 40 >> 2] = E3[g6 + 520 >> 2], E3[I7 + 44 >> 2] = F4, F4 = E3[g6 + 516 >> 2], E3[I7 + 32 >> 2] = E3[g6 + 512 >> 2], E3[I7 + 36 >> 2] = F4, F4 = E3[I7 + 12 >> 2], E3[g6 + 312 >> 2] = E3[I7 + 8 >> 2], E3[g6 + 316 >> 2] = F4, F4 = E3[I7 + 4 >> 2], E3[g6 + 304 >> 2] = E3[I7 >> 2], E3[g6 + 308 >> 2] = F4, F4 = E3[I7 + 28 >> 2], E3[g6 + 296 >> 2] = E3[I7 + 24 >> 2], E3[g6 + 300 >> 2] = F4, F4 = E3[I7 + 20 >> 2], E3[g6 + 288 >> 2] = E3[I7 + 16 >> 2], E3[g6 + 292 >> 2] = F4, aA(S4, g6 + 304 | 0, g6 + 288 | 0), F4 = E3[g6 + 524 >> 2], E3[I7 + 24 >> 2] = E3[g6 + 520 >> 2], E3[I7 + 28 >> 2] = F4, F4 = E3[g6 + 516 >> 2], E3[I7 + 16 >> 2] = E3[g6 + 512 >> 2], E3[I7 + 20 >> 2] = F4, F4 = E3[g6 + 540 >> 2], E3[g6 + 280 >> 2] = E3[g6 + 536 >> 2], E3[g6 + 284 >> 2] = F4, F4 = E3[g6 + 532 >> 2], E3[g6 + 272 >> 2] = E3[g6 + 528 >> 2], E3[g6 + 276 >> 2] = F4, F4 = E3[I7 + 12 >> 2], E3[g6 + 264 >> 2] = E3[I7 + 8 >> 2], E3[g6 + 268 >> 2] = F4, F4 = E3[I7 + 4 >> 2], E3[g6 + 256 >> 2] = E3[I7 >> 2], E3[g6 + 260 >> 2] = F4, aA(S4, g6 + 272 | 0, g6 + 256 | 0), F4 = E3[g6 + 524 >> 2], E3[I7 + 8 >> 2] = E3[g6 + 520 >> 2], E3[I7 + 12 >> 2] = F4, F4 = E3[g6 + 516 >> 2], E3[I7 >> 2] = E3[g6 + 512 >> 2], E3[I7 + 4 >> 2] = F4, E3[I7 + 12 >> 2] = (i3[I7 + 12 | 0] | i3[I7 + 13 | 0] << 8 | i3[I7 + 14 | 0] << 16 | i3[I7 + 15 | 0] << 24) ^ k4, E3[I7 + 8 >> 2] = (i3[I7 + 8 | 0] | i3[I7 + 9 | 0] << 8 | i3[I7 + 10 | 0] << 16 | i3[I7 + 11 | 0] << 24) ^ h4, E3[I7 + 4 >> 2] = (i3[I7 + 4 | 0] | i3[I7 + 5 | 0] << 8 | i3[I7 + 6 | 0] << 16 | i3[I7 + 7 | 0] << 24) ^ t4, E3[I7 >> 2] = (i3[0 | I7] | i3[I7 + 1 | 0] << 8 | i3[I7 + 2 | 0] << 16 | i3[I7 + 3 | 0] << 24) ^ n4, E3[A8 >> 2] = (i3[0 | A8] | i3[A8 + 1 | 0] << 8 | i3[A8 + 2 | 0] << 16 | i3[A8 + 3 | 0] << 24) ^ w4, E3[I7 + 68 >> 2] = (i3[I7 + 68 | 0] | i3[I7 + 69 | 0] << 8 | i3[I7 + 70 | 0] << 16 | i3[I7 + 71 | 0] << 24) ^ e4, E3[I7 + 72 >> 2] = (i3[I7 + 72 | 0] | i3[I7 + 73 | 0] << 8 | i3[I7 + 74 | 0] << 16 | i3[I7 + 75 | 0] << 24) ^ f4, E3[I7 + 76 >> 2] = (i3[I7 + 76 | 0] | i3[I7 + 77 | 0] << 8 | i3[I7 + 78 | 0] << 16 | i3[I7 + 79 | 0] << 24) ^ s4, s4 = E3[I7 + 124 >> 2], E3[g6 + 536 >> 2] = E3[I7 + 120 >> 2], E3[g6 + 540 >> 2] = s4, s4 = E3[I7 + 116 >> 2], E3[g6 + 528 >> 2] = E3[I7 + 112 >> 2], E3[g6 + 532 >> 2] = s4, s4 = E3[I7 + 108 >> 2], E3[g6 + 248 >> 2] = E3[I7 + 104 >> 2], E3[g6 + 252 >> 2] = s4, s4 = E3[I7 + 100 >> 2], E3[g6 + 240 >> 2] = E3[I7 + 96 >> 2], E3[g6 + 244 >> 2] = s4, s4 = E3[I7 + 124 >> 2], E3[g6 + 232 >> 2] = E3[I7 + 120 >> 2], E3[g6 + 236 >> 2] = s4, s4 = E3[I7 + 116 >> 2], E3[g6 + 224 >> 2] = E3[I7 + 112 >> 2], E3[g6 + 228 >> 2] = s4, aA(S4, g6 + 240 | 0, g6 + 224 | 0), s4 = E3[g6 + 524 >> 2], E3[I7 + 120 >> 2] = E3[g6 + 520 >> 2], E3[I7 + 124 >> 2] = s4, s4 = E3[g6 + 516 >> 2], E3[I7 + 112 >> 2] = E3[g6 + 512 >> 2], E3[I7 + 116 >> 2] = s4, s4 = E3[I7 + 92 >> 2], E3[g6 + 216 >> 2] = E3[I7 + 88 >> 2], E3[g6 + 220 >> 2] = s4, s4 = E3[I7 + 84 >> 2], E3[g6 + 208 >> 2] = E3[I7 + 80 >> 2], E3[g6 + 212 >> 2] = s4, s4 = E3[I7 + 108 >> 2], E3[g6 + 200 >> 2] = E3[I7 + 104 >> 2], E3[g6 + 204 >> 2] = s4, s4 = E3[I7 + 100 >> 2], E3[g6 + 192 >> 2] = E3[I7 + 96 >> 2], E3[g6 + 196 >> 2] = s4, aA(S4, g6 + 208 | 0, g6 + 192 | 0), s4 = E3[g6 + 524 >> 2], E3[I7 + 104 >> 2] = E3[g6 + 520 >> 2], E3[I7 + 108 >> 2] = s4, s4 = E3[g6 + 516 >> 2], E3[I7 + 96 >> 2] = E3[g6 + 512 >> 2], E3[I7 + 100 >> 2] = s4, s4 = E3[I7 + 76 >> 2], E3[g6 + 184 >> 2] = E3[I7 + 72 >> 2], E3[g6 + 188 >> 2] = s4, s4 = E3[A8 + 4 >> 2], E3[g6 + 176 >> 2] = E3[A8 >> 2], E3[g6 + 180 >> 2] = s4, s4 = E3[I7 + 92 >> 2], E3[g6 + 168 >> 2] = E3[I7 + 88 >> 2], E3[g6 + 172 >> 2] = s4, s4 = E3[I7 + 84 >> 2], E3[g6 + 160 >> 2] = E3[I7 + 80 >> 2], E3[g6 + 164 >> 2] = s4, aA(S4, g6 + 176 | 0, g6 + 160 | 0), s4 = E3[g6 + 524 >> 2], E3[I7 + 88 >> 2] = E3[g6 + 520 >> 2], E3[I7 + 92 >> 2] = s4, s4 = E3[g6 + 516 >> 2], E3[I7 + 80 >> 2] = E3[g6 + 512 >> 2], E3[I7 + 84 >> 2] = s4, s4 = E3[I7 + 60 >> 2], E3[g6 + 152 >> 2] = E3[I7 + 56 >> 2], E3[g6 + 156 >> 2] = s4, s4 = E3[I7 + 52 >> 2], E3[g6 + 144 >> 2] = E3[I7 + 48 >> 2], E3[g6 + 148 >> 2] = s4, s4 = E3[I7 + 76 >> 2], E3[g6 + 136 >> 2] = E3[I7 + 72 >> 2], E3[g6 + 140 >> 2] = s4, s4 = E3[A8 + 4 >> 2], E3[g6 + 128 >> 2] = E3[A8 >> 2], E3[g6 + 132 >> 2] = s4, aA(S4, g6 + 144 | 0, g6 + 128 | 0), s4 = E3[g6 + 524 >> 2], E3[I7 + 72 >> 2] = E3[g6 + 520 >> 2], E3[I7 + 76 >> 2] = s4, s4 = E3[g6 + 516 >> 2], E3[A8 >> 2] = E3[g6 + 512 >> 2], E3[A8 + 4 >> 2] = s4, s4 = E3[I7 + 44 >> 2], E3[g6 + 120 >> 2] = E3[I7 + 40 >> 2], E3[g6 + 124 >> 2] = s4, s4 = E3[I7 + 36 >> 2], E3[g6 + 112 >> 2] = E3[I7 + 32 >> 2], E3[g6 + 116 >> 2] = s4, s4 = E3[I7 + 60 >> 2], E3[g6 + 104 >> 2] = E3[I7 + 56 >> 2], E3[g6 + 108 >> 2] = s4, s4 = E3[I7 + 52 >> 2], E3[g6 + 96 >> 2] = E3[I7 + 48 >> 2], E3[g6 + 100 >> 2] = s4, aA(S4, g6 + 112 | 0, g6 + 96 | 0), s4 = E3[g6 + 524 >> 2], E3[I7 + 56 >> 2] = E3[g6 + 520 >> 2], E3[I7 + 60 >> 2] = s4, s4 = E3[g6 + 516 >> 2], E3[I7 + 48 >> 2] = E3[g6 + 512 >> 2], E3[I7 + 52 >> 2] = s4, s4 = E3[I7 + 28 >> 2], E3[g6 + 88 >> 2] = E3[I7 + 24 >> 2], E3[g6 + 92 >> 2] = s4, s4 = E3[I7 + 20 >> 2], E3[g6 + 80 >> 2] = E3[I7 + 16 >> 2], E3[g6 + 84 >> 2] = s4, s4 = E3[I7 + 44 >> 2], E3[g6 + 72 >> 2] = E3[I7 + 40 >> 2], E3[g6 + 76 >> 2] = s4, s4 = E3[I7 + 36 >> 2], E3[g6 + 64 >> 2] = E3[I7 + 32 >> 2], E3[g6 + 68 >> 2] = s4, aA(S4, g6 + 80 | 0, g6 - -64 | 0), s4 = E3[g6 + 524 >> 2], E3[I7 + 40 >> 2] = E3[g6 + 520 >> 2], E3[I7 + 44 >> 2] = s4, s4 = E3[g6 + 516 >> 2], E3[I7 + 32 >> 2] = E3[g6 + 512 >> 2], E3[I7 + 36 >> 2] = s4, s4 = E3[I7 + 12 >> 2], E3[g6 + 56 >> 2] = E3[I7 + 8 >> 2], E3[g6 + 60 >> 2] = s4, s4 = E3[I7 + 4 >> 2], E3[g6 + 48 >> 2] = E3[I7 >> 2], E3[g6 + 52 >> 2] = s4, s4 = E3[I7 + 28 >> 2], E3[g6 + 40 >> 2] = E3[I7 + 24 >> 2], E3[g6 + 44 >> 2] = s4, s4 = E3[I7 + 20 >> 2], E3[g6 + 32 >> 2] = E3[I7 + 16 >> 2], E3[g6 + 36 >> 2] = s4, aA(S4, g6 + 48 | 0, g6 + 32 | 0), s4 = E3[g6 + 524 >> 2], E3[I7 + 24 >> 2] = E3[g6 + 520 >> 2], E3[I7 + 28 >> 2] = s4, s4 = E3[g6 + 516 >> 2], E3[I7 + 16 >> 2] = E3[g6 + 512 >> 2], E3[I7 + 20 >> 2] = s4, s4 = E3[g6 + 540 >> 2], E3[g6 + 24 >> 2] = E3[g6 + 536 >> 2], E3[g6 + 28 >> 2] = s4, s4 = E3[g6 + 532 >> 2], E3[g6 + 16 >> 2] = E3[g6 + 528 >> 2], E3[g6 + 20 >> 2] = s4, s4 = E3[I7 + 12 >> 2], E3[g6 + 8 >> 2] = E3[I7 + 8 >> 2], E3[g6 + 12 >> 2] = s4, s4 = E3[I7 + 4 >> 2], E3[g6 >> 2] = E3[I7 >> 2], E3[g6 + 4 >> 2] = s4, aA(S4, g6 + 16 | 0, g6), S4 = E3[g6 + 524 >> 2], E3[I7 + 8 >> 2] = E3[g6 + 520 >> 2], E3[I7 + 12 >> 2] = S4, S4 = E3[g6 + 516 >> 2], E3[I7 >> 2] = E3[g6 + 512 >> 2], E3[I7 + 4 >> 2] = S4, E3[I7 + 12 >> 2] = (i3[I7 + 12 | 0] | i3[I7 + 13 | 0] << 8 | i3[I7 + 14 | 0] << 16 | i3[I7 + 15 | 0] << 24) ^ y4, E3[I7 + 8 >> 2] = (i3[I7 + 8 | 0] | i3[I7 + 9 | 0] << 8 | i3[I7 + 10 | 0] << 16 | i3[I7 + 11 | 0] << 24) ^ a4, E3[I7 + 4 >> 2] = (i3[I7 + 4 | 0] | i3[I7 + 5 | 0] << 8 | i3[I7 + 6 | 0] << 16 | i3[I7 + 7 | 0] << 24) ^ D4, E3[I7 >> 2] = (i3[0 | I7] | i3[I7 + 1 | 0] << 8 | i3[I7 + 2 | 0] << 16 | i3[I7 + 3 | 0] << 24) ^ c4, E3[A8 >> 2] = (i3[0 | A8] | i3[A8 + 1 | 0] << 8 | i3[A8 + 2 | 0] << 16 | i3[A8 + 3 | 0] << 24) ^ o4, E3[I7 + 68 >> 2] = (i3[I7 + 68 | 0] | i3[I7 + 69 | 0] << 8 | i3[I7 + 70 | 0] << 16 | i3[I7 + 71 | 0] << 24) ^ Q4, E3[I7 + 72 >> 2] = (i3[I7 + 72 | 0] | i3[I7 + 73 | 0] << 8 | i3[I7 + 74 | 0] << 16 | i3[I7 + 75 | 0] << 24) ^ B4, E3[I7 + 76 >> 2] = (i3[I7 + 76 | 0] | i3[I7 + 77 | 0] << 8 | i3[I7 + 78 | 0] << 16 | i3[I7 + 79 | 0] << 24) ^ C4, r3 = g6 + 544 | 0;
                    }
                    function K3(A8, I7, g6, B4, Q4) {
                      var o4, c4 = 0, D4 = 0, a4 = 0, y4 = 0, f4 = 0, e4 = 0, w4 = 0, t4 = 0, h4 = 0, k4 = 0, n4 = 0, s4 = 0, F4 = 0, S4 = 0, M4 = 0, N4 = 0, K4 = 0, _4 = 0, p4 = 0, H4 = 0;
                      for (r3 = o4 = r3 - 288 | 0, h4 = (i3[Q4 + 44 | 0] | i3[Q4 + 45 | 0] << 8 | i3[Q4 + 46 | 0] << 16 | i3[Q4 + 47 | 0] << 24) ^ B4 >>> 29, k4 = (i3[Q4 + 40 | 0] | i3[Q4 + 41 | 0] << 8 | i3[Q4 + 42 | 0] << 16 | i3[Q4 + 43 | 0] << 24) ^ B4 << 3, n4 = (i3[Q4 + 36 | 0] | i3[Q4 + 37 | 0] << 8 | i3[Q4 + 38 | 0] << 16 | i3[Q4 + 39 | 0] << 24) ^ g6 >>> 29, B4 = (i3[0 | (a4 = Q4 + 32 | 0)] | i3[a4 + 1 | 0] << 8 | i3[a4 + 2 | 0] << 16 | i3[a4 + 3 | 0] << 24) ^ g6 << 3, w4 = Q4 + 16 | 0, f4 = Q4 + 48 | 0, D4 = Q4 - -64 | 0, e4 = Q4 + 80 | 0, c4 = Q4 + 96 | 0, y4 = Q4 + 112 | 0; g6 = E3[y4 + 12 >> 2], E3[o4 + 280 >> 2] = E3[y4 + 8 >> 2], E3[o4 + 284 >> 2] = g6, g6 = E3[y4 + 4 >> 2], E3[o4 + 272 >> 2] = E3[y4 >> 2], E3[o4 + 276 >> 2] = g6, g6 = E3[c4 + 12 >> 2], E3[o4 + 248 >> 2] = E3[c4 + 8 >> 2], E3[o4 + 252 >> 2] = g6, g6 = E3[c4 + 4 >> 2], E3[o4 + 240 >> 2] = E3[c4 >> 2], E3[o4 + 244 >> 2] = g6, g6 = E3[y4 + 12 >> 2], E3[o4 + 232 >> 2] = E3[y4 + 8 >> 2], E3[o4 + 236 >> 2] = g6, g6 = E3[y4 + 4 >> 2], E3[o4 + 224 >> 2] = E3[y4 >> 2], E3[o4 + 228 >> 2] = g6, aA(t4 = o4 + 256 | 0, o4 + 240 | 0, o4 + 224 | 0), g6 = E3[o4 + 268 >> 2], E3[y4 + 8 >> 2] = E3[o4 + 264 >> 2], E3[y4 + 12 >> 2] = g6, g6 = E3[o4 + 260 >> 2], E3[y4 >> 2] = E3[o4 + 256 >> 2], E3[y4 + 4 >> 2] = g6, g6 = E3[e4 + 12 >> 2], E3[o4 + 216 >> 2] = E3[e4 + 8 >> 2], E3[o4 + 220 >> 2] = g6, g6 = E3[e4 + 4 >> 2], E3[o4 + 208 >> 2] = E3[e4 >> 2], E3[o4 + 212 >> 2] = g6, g6 = E3[c4 + 12 >> 2], E3[o4 + 200 >> 2] = E3[c4 + 8 >> 2], E3[o4 + 204 >> 2] = g6, g6 = E3[c4 + 4 >> 2], E3[o4 + 192 >> 2] = E3[c4 >> 2], E3[o4 + 196 >> 2] = g6, aA(t4, o4 + 208 | 0, o4 + 192 | 0), g6 = E3[o4 + 268 >> 2], E3[c4 + 8 >> 2] = E3[o4 + 264 >> 2], E3[c4 + 12 >> 2] = g6, g6 = E3[o4 + 260 >> 2], E3[c4 >> 2] = E3[o4 + 256 >> 2], E3[c4 + 4 >> 2] = g6, g6 = E3[D4 + 12 >> 2], E3[o4 + 184 >> 2] = E3[D4 + 8 >> 2], E3[o4 + 188 >> 2] = g6, g6 = E3[D4 + 4 >> 2], E3[o4 + 176 >> 2] = E3[D4 >> 2], E3[o4 + 180 >> 2] = g6, g6 = E3[e4 + 12 >> 2], E3[o4 + 168 >> 2] = E3[e4 + 8 >> 2], E3[o4 + 172 >> 2] = g6, g6 = E3[e4 + 4 >> 2], E3[o4 + 160 >> 2] = E3[e4 >> 2], E3[o4 + 164 >> 2] = g6, aA(t4, o4 + 176 | 0, o4 + 160 | 0), g6 = E3[o4 + 268 >> 2], E3[e4 + 8 >> 2] = E3[o4 + 264 >> 2], E3[e4 + 12 >> 2] = g6, g6 = E3[o4 + 260 >> 2], E3[e4 >> 2] = E3[o4 + 256 >> 2], E3[e4 + 4 >> 2] = g6, g6 = E3[f4 + 12 >> 2], E3[o4 + 152 >> 2] = E3[f4 + 8 >> 2], E3[o4 + 156 >> 2] = g6, g6 = E3[f4 + 4 >> 2], E3[o4 + 144 >> 2] = E3[f4 >> 2], E3[o4 + 148 >> 2] = g6, g6 = E3[D4 + 12 >> 2], E3[o4 + 136 >> 2] = E3[D4 + 8 >> 2], E3[o4 + 140 >> 2] = g6, g6 = E3[D4 + 4 >> 2], E3[o4 + 128 >> 2] = E3[D4 >> 2], E3[o4 + 132 >> 2] = g6, aA(t4, o4 + 144 | 0, o4 + 128 | 0), g6 = E3[o4 + 268 >> 2], E3[D4 + 8 >> 2] = E3[o4 + 264 >> 2], E3[D4 + 12 >> 2] = g6, g6 = E3[o4 + 260 >> 2], E3[D4 >> 2] = E3[o4 + 256 >> 2], E3[D4 + 4 >> 2] = g6, g6 = E3[a4 + 12 >> 2], E3[o4 + 120 >> 2] = E3[a4 + 8 >> 2], E3[o4 + 124 >> 2] = g6, g6 = E3[a4 + 4 >> 2], E3[o4 + 112 >> 2] = E3[a4 >> 2], E3[o4 + 116 >> 2] = g6, g6 = E3[f4 + 12 >> 2], E3[o4 + 104 >> 2] = E3[f4 + 8 >> 2], E3[o4 + 108 >> 2] = g6, g6 = E3[f4 + 4 >> 2], E3[o4 + 96 >> 2] = E3[f4 >> 2], E3[o4 + 100 >> 2] = g6, aA(t4, o4 + 112 | 0, o4 + 96 | 0), g6 = E3[o4 + 268 >> 2], E3[f4 + 8 >> 2] = E3[o4 + 264 >> 2], E3[f4 + 12 >> 2] = g6, g6 = E3[o4 + 260 >> 2], E3[f4 >> 2] = E3[o4 + 256 >> 2], E3[f4 + 4 >> 2] = g6, g6 = E3[w4 + 12 >> 2], E3[o4 + 88 >> 2] = E3[w4 + 8 >> 2], E3[o4 + 92 >> 2] = g6, g6 = E3[w4 + 4 >> 2], E3[o4 + 80 >> 2] = E3[w4 >> 2], E3[o4 + 84 >> 2] = g6, g6 = E3[a4 + 12 >> 2], E3[o4 + 72 >> 2] = E3[a4 + 8 >> 2], E3[o4 + 76 >> 2] = g6, g6 = E3[a4 + 4 >> 2], E3[o4 + 64 >> 2] = E3[a4 >> 2], E3[o4 + 68 >> 2] = g6, aA(t4, o4 + 80 | 0, o4 - -64 | 0), g6 = E3[o4 + 268 >> 2], E3[a4 + 8 >> 2] = E3[o4 + 264 >> 2], E3[a4 + 12 >> 2] = g6, g6 = E3[o4 + 260 >> 2], E3[a4 >> 2] = E3[o4 + 256 >> 2], E3[a4 + 4 >> 2] = g6, g6 = E3[Q4 + 12 >> 2], E3[o4 + 56 >> 2] = E3[Q4 + 8 >> 2], E3[o4 + 60 >> 2] = g6, g6 = E3[Q4 + 4 >> 2], E3[o4 + 48 >> 2] = E3[Q4 >> 2], E3[o4 + 52 >> 2] = g6, g6 = E3[w4 + 12 >> 2], E3[o4 + 40 >> 2] = E3[w4 + 8 >> 2], E3[o4 + 44 >> 2] = g6, g6 = E3[w4 + 4 >> 2], E3[o4 + 32 >> 2] = E3[w4 >> 2], E3[o4 + 36 >> 2] = g6, aA(t4, o4 + 48 | 0, o4 + 32 | 0), g6 = E3[o4 + 268 >> 2], E3[w4 + 8 >> 2] = E3[o4 + 264 >> 2], E3[w4 + 12 >> 2] = g6, g6 = E3[o4 + 260 >> 2], E3[w4 >> 2] = E3[o4 + 256 >> 2], E3[w4 + 4 >> 2] = g6, g6 = E3[o4 + 284 >> 2], E3[o4 + 24 >> 2] = E3[o4 + 280 >> 2], E3[o4 + 28 >> 2] = g6, g6 = E3[o4 + 276 >> 2], E3[o4 + 16 >> 2] = E3[o4 + 272 >> 2], E3[o4 + 20 >> 2] = g6, g6 = E3[Q4 + 12 >> 2], E3[o4 + 8 >> 2] = E3[Q4 + 8 >> 2], E3[o4 + 12 >> 2] = g6, g6 = E3[Q4 + 4 >> 2], E3[o4 >> 2] = E3[Q4 >> 2], E3[o4 + 4 >> 2] = g6, aA(t4, o4 + 16 | 0, o4), g6 = E3[o4 + 268 >> 2], E3[Q4 + 8 >> 2] = E3[o4 + 264 >> 2], E3[Q4 + 12 >> 2] = g6, g6 = E3[o4 + 260 >> 2], E3[Q4 >> 2] = E3[o4 + 256 >> 2], E3[Q4 + 4 >> 2] = g6, F4 = h4 ^ (i3[Q4 + 12 | 0] | i3[Q4 + 13 | 0] << 8 | i3[Q4 + 14 | 0] << 16 | i3[Q4 + 15 | 0] << 24), E3[Q4 + 12 >> 2] = F4, S4 = k4 ^ (i3[Q4 + 8 | 0] | i3[Q4 + 9 | 0] << 8 | i3[Q4 + 10 | 0] << 16 | i3[Q4 + 11 | 0] << 24), E3[Q4 + 8 >> 2] = S4, M4 = n4 ^ (i3[Q4 + 4 | 0] | i3[Q4 + 5 | 0] << 8 | i3[Q4 + 6 | 0] << 16 | i3[Q4 + 7 | 0] << 24), E3[Q4 + 4 >> 2] = M4, N4 = B4 ^ (i3[0 | Q4] | i3[Q4 + 1 | 0] << 8 | i3[Q4 + 2 | 0] << 16 | i3[Q4 + 3 | 0] << 24), E3[Q4 >> 2] = N4, K4 = B4 ^ (i3[0 | D4] | i3[D4 + 1 | 0] << 8 | i3[D4 + 2 | 0] << 16 | i3[D4 + 3 | 0] << 24), E3[D4 >> 2] = K4, _4 = n4 ^ (i3[Q4 + 68 | 0] | i3[Q4 + 69 | 0] << 8 | i3[Q4 + 70 | 0] << 16 | i3[Q4 + 71 | 0] << 24), E3[Q4 + 68 >> 2] = _4, p4 = k4 ^ (i3[Q4 + 72 | 0] | i3[Q4 + 73 | 0] << 8 | i3[Q4 + 74 | 0] << 16 | i3[Q4 + 75 | 0] << 24), E3[Q4 + 72 >> 2] = p4, H4 = h4 ^ (i3[Q4 + 76 | 0] | i3[Q4 + 77 | 0] << 8 | i3[Q4 + 78 | 0] << 16 | i3[Q4 + 79 | 0] << 24), E3[Q4 + 76 >> 2] = H4, 7 != (0 | (s4 = s4 + 1 | 0)); ) ;
                      A: {
                        I: {
                          g: {
                            if (g6 = I7 - 16 | 0) {
                              if (16 == (0 | g6)) break g;
                              break I;
                            }
                            D4 = i3[Q4 + 16 | 0] | i3[Q4 + 17 | 0] << 8 | i3[Q4 + 18 | 0] << 16 | i3[Q4 + 19 | 0] << 24, a4 = i3[Q4 + 48 | 0] | i3[Q4 + 49 | 0] << 8 | i3[Q4 + 50 | 0] << 16 | i3[Q4 + 51 | 0] << 24, w4 = i3[Q4 + 32 | 0] | i3[Q4 + 33 | 0] << 8 | i3[Q4 + 34 | 0] << 16 | i3[Q4 + 35 | 0] << 24, f4 = i3[Q4 + 96 | 0] | i3[Q4 + 97 | 0] << 8 | i3[Q4 + 98 | 0] << 16 | i3[Q4 + 99 | 0] << 24, e4 = i3[Q4 + 80 | 0] | i3[Q4 + 81 | 0] << 8 | i3[Q4 + 82 | 0] << 16 | i3[Q4 + 83 | 0] << 24, c4 = i3[Q4 + 20 | 0] | i3[Q4 + 21 | 0] << 8 | i3[Q4 + 22 | 0] << 16 | i3[Q4 + 23 | 0] << 24, y4 = i3[Q4 + 52 | 0] | i3[Q4 + 53 | 0] << 8 | i3[Q4 + 54 | 0] << 16 | i3[Q4 + 55 | 0] << 24, t4 = i3[Q4 + 36 | 0] | i3[Q4 + 37 | 0] << 8 | i3[Q4 + 38 | 0] << 16 | i3[Q4 + 39 | 0] << 24, h4 = i3[Q4 + 100 | 0] | i3[Q4 + 101 | 0] << 8 | i3[Q4 + 102 | 0] << 16 | i3[Q4 + 103 | 0] << 24, k4 = i3[Q4 + 84 | 0] | i3[Q4 + 85 | 0] << 8 | i3[Q4 + 86 | 0] << 16 | i3[Q4 + 87 | 0] << 24, n4 = i3[Q4 + 24 | 0] | i3[Q4 + 25 | 0] << 8 | i3[Q4 + 26 | 0] << 16 | i3[Q4 + 27 | 0] << 24, s4 = i3[Q4 + 56 | 0] | i3[Q4 + 57 | 0] << 8 | i3[Q4 + 58 | 0] << 16 | i3[Q4 + 59 | 0] << 24, B4 = i3[Q4 + 40 | 0] | i3[Q4 + 41 | 0] << 8 | i3[Q4 + 42 | 0] << 16 | i3[Q4 + 43 | 0] << 24, g6 = i3[Q4 + 104 | 0] | i3[Q4 + 105 | 0] << 8 | i3[Q4 + 106 | 0] << 16 | i3[Q4 + 107 | 0] << 24, I7 = i3[Q4 + 88 | 0] | i3[Q4 + 89 | 0] << 8 | i3[Q4 + 90 | 0] << 16 | i3[Q4 + 91 | 0] << 24, Q4 = F4 ^ (i3[Q4 + 28 | 0] | i3[Q4 + 29 | 0] << 8 | i3[Q4 + 30 | 0] << 16 | i3[Q4 + 31 | 0] << 24) ^ (i3[Q4 + 60 | 0] | i3[Q4 + 61 | 0] << 8 | i3[Q4 + 62 | 0] << 16 | i3[Q4 + 63 | 0] << 24) ^ (i3[Q4 + 44 | 0] | i3[Q4 + 45 | 0] << 8 | i3[Q4 + 46 | 0] << 16 | i3[Q4 + 47 | 0] << 24) ^ (i3[Q4 + 92 | 0] | i3[Q4 + 93 | 0] << 8 | i3[Q4 + 94 | 0] << 16 | i3[Q4 + 95 | 0] << 24) ^ (i3[Q4 + 108 | 0] | i3[Q4 + 109 | 0] << 8 | i3[Q4 + 110 | 0] << 16 | i3[Q4 + 111 | 0] << 24) ^ H4, C3[A8 + 12 | 0] = Q4, C3[A8 + 13 | 0] = Q4 >>> 8, C3[A8 + 14 | 0] = Q4 >>> 16, C3[A8 + 15 | 0] = Q4 >>> 24, I7 = n4 ^ s4 ^ B4 ^ I7 ^ g6 ^ p4 ^ S4, C3[A8 + 8 | 0] = I7, C3[A8 + 9 | 0] = I7 >>> 8, C3[A8 + 10 | 0] = I7 >>> 16, C3[A8 + 11 | 0] = I7 >>> 24, I7 = c4 ^ y4 ^ t4 ^ h4 ^ k4 ^ _4 ^ M4, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, I7 = D4 ^ a4 ^ w4 ^ f4 ^ e4 ^ K4 ^ N4, C3[0 | A8] = I7, C3[A8 + 1 | 0] = I7 >>> 8, C3[A8 + 2 | 0] = I7 >>> 16, C3[A8 + 3 | 0] = I7 >>> 24;
                            break A;
                          }
                          y4 = i3[Q4 + 16 | 0] | i3[Q4 + 17 | 0] << 8 | i3[Q4 + 18 | 0] << 16 | i3[Q4 + 19 | 0] << 24, t4 = i3[Q4 + 48 | 0] | i3[Q4 + 49 | 0] << 8 | i3[Q4 + 50 | 0] << 16 | i3[Q4 + 51 | 0] << 24, h4 = i3[Q4 + 32 | 0] | i3[Q4 + 33 | 0] << 8 | i3[Q4 + 34 | 0] << 16 | i3[Q4 + 35 | 0] << 24, k4 = i3[Q4 + 20 | 0] | i3[Q4 + 21 | 0] << 8 | i3[Q4 + 22 | 0] << 16 | i3[Q4 + 23 | 0] << 24, n4 = i3[Q4 + 52 | 0] | i3[Q4 + 53 | 0] << 8 | i3[Q4 + 54 | 0] << 16 | i3[Q4 + 55 | 0] << 24, s4 = i3[Q4 + 36 | 0] | i3[Q4 + 37 | 0] << 8 | i3[Q4 + 38 | 0] << 16 | i3[Q4 + 39 | 0] << 24, B4 = i3[Q4 + 24 | 0] | i3[Q4 + 25 | 0] << 8 | i3[Q4 + 26 | 0] << 16 | i3[Q4 + 27 | 0] << 24, g6 = i3[Q4 + 56 | 0] | i3[Q4 + 57 | 0] << 8 | i3[Q4 + 58 | 0] << 16 | i3[Q4 + 59 | 0] << 24, I7 = i3[Q4 + 40 | 0] | i3[Q4 + 41 | 0] << 8 | i3[Q4 + 42 | 0] << 16 | i3[Q4 + 43 | 0] << 24, c4 = F4 ^ (i3[Q4 + 28 | 0] | i3[Q4 + 29 | 0] << 8 | i3[Q4 + 30 | 0] << 16 | i3[Q4 + 31 | 0] << 24) ^ (i3[Q4 + 60 | 0] | i3[Q4 + 61 | 0] << 8 | i3[Q4 + 62 | 0] << 16 | i3[Q4 + 63 | 0] << 24) ^ (i3[Q4 + 44 | 0] | i3[Q4 + 45 | 0] << 8 | i3[Q4 + 46 | 0] << 16 | i3[Q4 + 47 | 0] << 24), C3[A8 + 12 | 0] = c4, C3[A8 + 13 | 0] = c4 >>> 8, C3[A8 + 14 | 0] = c4 >>> 16, C3[A8 + 15 | 0] = c4 >>> 24, I7 = B4 ^ I7 ^ g6 ^ S4, C3[A8 + 8 | 0] = I7, C3[A8 + 9 | 0] = I7 >>> 8, C3[A8 + 10 | 0] = I7 >>> 16, C3[A8 + 11 | 0] = I7 >>> 24, I7 = k4 ^ n4 ^ s4 ^ M4, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, I7 = y4 ^ t4 ^ h4 ^ N4, C3[0 | A8] = I7, C3[A8 + 1 | 0] = I7 >>> 8, C3[A8 + 2 | 0] = I7 >>> 16, C3[A8 + 3 | 0] = I7 >>> 24, f4 = i3[Q4 + 80 | 0] | i3[Q4 + 81 | 0] << 8 | i3[Q4 + 82 | 0] << 16 | i3[Q4 + 83 | 0] << 24, e4 = i3[0 | (I7 = Q4 - -64 | 0)] | i3[I7 + 1 | 0] << 8 | i3[I7 + 2 | 0] << 16 | i3[I7 + 3 | 0] << 24, c4 = i3[Q4 + 112 | 0] | i3[Q4 + 113 | 0] << 8 | i3[Q4 + 114 | 0] << 16 | i3[Q4 + 115 | 0] << 24, y4 = i3[Q4 + 96 | 0] | i3[Q4 + 97 | 0] << 8 | i3[Q4 + 98 | 0] << 16 | i3[Q4 + 99 | 0] << 24, t4 = i3[Q4 + 84 | 0] | i3[Q4 + 85 | 0] << 8 | i3[Q4 + 86 | 0] << 16 | i3[Q4 + 87 | 0] << 24, h4 = i3[Q4 + 68 | 0] | i3[Q4 + 69 | 0] << 8 | i3[Q4 + 70 | 0] << 16 | i3[Q4 + 71 | 0] << 24, k4 = i3[Q4 + 116 | 0] | i3[Q4 + 117 | 0] << 8 | i3[Q4 + 118 | 0] << 16 | i3[Q4 + 119 | 0] << 24, n4 = i3[Q4 + 100 | 0] | i3[Q4 + 101 | 0] << 8 | i3[Q4 + 102 | 0] << 16 | i3[Q4 + 103 | 0] << 24, s4 = i3[Q4 + 88 | 0] | i3[Q4 + 89 | 0] << 8 | i3[Q4 + 90 | 0] << 16 | i3[Q4 + 91 | 0] << 24, B4 = i3[Q4 + 72 | 0] | i3[Q4 + 73 | 0] << 8 | i3[Q4 + 74 | 0] << 16 | i3[Q4 + 75 | 0] << 24, g6 = i3[Q4 + 120 | 0] | i3[Q4 + 121 | 0] << 8 | i3[Q4 + 122 | 0] << 16 | i3[Q4 + 123 | 0] << 24, I7 = i3[Q4 + 104 | 0] | i3[Q4 + 105 | 0] << 8 | i3[Q4 + 106 | 0] << 16 | i3[Q4 + 107 | 0] << 24, Q4 = (i3[Q4 + 92 | 0] | i3[Q4 + 93 | 0] << 8 | i3[Q4 + 94 | 0] << 16 | i3[Q4 + 95 | 0] << 24) ^ (i3[Q4 + 76 | 0] | i3[Q4 + 77 | 0] << 8 | i3[Q4 + 78 | 0] << 16 | i3[Q4 + 79 | 0] << 24) ^ (i3[Q4 + 124 | 0] | i3[Q4 + 125 | 0] << 8 | i3[Q4 + 126 | 0] << 16 | i3[Q4 + 127 | 0] << 24) ^ (i3[Q4 + 108 | 0] | i3[Q4 + 109 | 0] << 8 | i3[Q4 + 110 | 0] << 16 | i3[Q4 + 111 | 0] << 24), C3[A8 + 28 | 0] = Q4, C3[A8 + 29 | 0] = Q4 >>> 8, C3[A8 + 30 | 0] = Q4 >>> 16, C3[A8 + 31 | 0] = Q4 >>> 24, I7 = s4 ^ B4 ^ I7 ^ g6, C3[A8 + 24 | 0] = I7, C3[A8 + 25 | 0] = I7 >>> 8, C3[A8 + 26 | 0] = I7 >>> 16, C3[A8 + 27 | 0] = I7 >>> 24, I7 = t4 ^ h4 ^ k4 ^ n4, C3[A8 + 20 | 0] = I7, C3[A8 + 21 | 0] = I7 >>> 8, C3[A8 + 22 | 0] = I7 >>> 16, C3[A8 + 23 | 0] = I7 >>> 24, I7 = f4 ^ e4 ^ c4 ^ y4, C3[A8 + 16 | 0] = I7, C3[A8 + 17 | 0] = I7 >>> 8, C3[A8 + 18 | 0] = I7 >>> 16, C3[A8 + 19 | 0] = I7 >>> 24;
                          break A;
                        }
                        VA(A8, 0, I7);
                      }
                      r3 = o4 + 288 | 0;
                    }
                    function _3(A8, I7) {
                      var g6, C4, B4, Q4, i4, o4, D4, a4, y4, f4, e4, w4, h4, k4, n4, s4, F4, S4, M4, N4, K4, _4, p4, H4 = 0, G4 = 0, J4 = 0, Y4 = 0, d4 = 0, b4 = 0, P4 = 0, v5 = 0, R4 = 0, L4 = 0, x4 = 0, u4 = 0, m4 = 0, q4 = 0, l3 = 0, z2 = 0, j2 = 0, X2 = 0, O2 = 0, T2 = 0, V2 = 0, Z2 = 0, W2 = 0, $2 = 0, AA2 = 0, IA2 = 0, gA2 = 0, CA2 = 0, BA2 = 0, QA2 = 0, EA2 = 0, iA2 = 0, oA2 = 0, cA2 = 0, DA2 = 0, aA2 = 0;
                      r3 = g6 = r3 - 48 | 0, U3(A8, I7), U3(A8 + 80 | 0, I7 + 40 | 0), H4 = PA(m4 = (IA2 = E3[I7 + 92 >> 2]) << 1, i4 = m4 >> 31, v5 = (Y4 = E3[I7 + 84 >> 2]) << 1, C4 = v5 >> 31), J4 = t3, AA2 = z2 = E3[I7 + 88 >> 2], G4 = (x4 = PA(z2, O2 = z2 >> 31, z2, O2)) + H4 | 0, H4 = t3 + J4 | 0, H4 = G4 >>> 0 < x4 >>> 0 ? H4 + 1 | 0 : H4, J4 = PA(d4 = E3[I7 + 96 >> 2], o4 = d4 >> 31, x4 = (R4 = E3[I7 + 80 >> 2]) << 1, B4 = x4 >> 31), H4 = t3 + H4 | 0, H4 = (G4 = J4 + G4 | 0) >>> 0 < J4 >>> 0 ? H4 + 1 | 0 : H4, CA2 = E3[I7 + 108 >> 2], J4 = PA(u4 = c3(CA2, 38), e4 = u4 >> 31, CA2, k4 = CA2 >> 31), H4 = t3 + H4 | 0, H4 = (G4 = J4 + G4 | 0) >>> 0 < J4 >>> 0 ? H4 + 1 | 0 : H4, J4 = G4, W2 = E3[I7 + 112 >> 2], L4 = PA(b4 = c3(W2, 19), D4 = b4 >> 31, G4 = (T2 = E3[I7 + 104 >> 2]) << 1, G4 >> 31), G4 = t3 + H4 | 0, G4 = (J4 = J4 + L4 | 0) >>> 0 < L4 >>> 0 ? G4 + 1 | 0 : G4, EA2 = E3[I7 + 116 >> 2], H4 = PA(L4 = c3(EA2, 38), Q4 = L4 >> 31, X2 = (Z2 = E3[I7 + 100 >> 2]) << 1, y4 = X2 >> 31), G4 = t3 + G4 | 0, iA2 = H4 = (H4 >>> 0 > (J4 = H4 + J4 | 0) >>> 0 ? G4 + 1 : G4) << 1 | J4 >>> 31, oA2 = J4 = 33554432 + (n4 = J4 << 1) | 0, cA2 = H4 = J4 >>> 0 < 33554432 ? H4 + 1 | 0 : H4, P4 = (67108863 & H4) << 6 | J4 >>> 26, V2 = H4 >> 26, H4 = PA(v5, C4, d4, o4), J4 = t3, G4 = ($2 = PA(z2 <<= 1, f4 = z2 >> 31, IA2, s4 = IA2 >> 31)) + H4 | 0, H4 = t3 + J4 | 0, H4 = G4 >>> 0 < $2 >>> 0 ? H4 + 1 | 0 : H4, J4 = ($2 = PA(Z2, w4 = Z2 >> 31, x4, B4)) + G4 | 0, G4 = t3 + H4 | 0, G4 = J4 >>> 0 < $2 >>> 0 ? G4 + 1 | 0 : G4, BA2 = PA(b4, D4, $2 = CA2 << 1, F4 = $2 >> 31), H4 = t3 + G4 | 0, H4 = (J4 = BA2 + J4 | 0) >>> 0 < BA2 >>> 0 ? H4 + 1 | 0 : H4, G4 = PA(L4, Q4, T2, a4 = T2 >> 31), H4 = t3 + H4 | 0, G4 = (G4 = (G4 >>> 0 > (J4 = G4 + J4 | 0) >>> 0 ? H4 + 1 : H4) << 1 | J4 >>> 31) + V2 | 0, BA2 = J4 = (H4 = J4 << 1) + P4 | 0, H4 = G4 = H4 >>> 0 > J4 >>> 0 ? G4 + 1 | 0 : G4, DA2 = J4 = J4 + 16777216 | 0, P4 = (33554431 & (H4 = J4 >>> 0 < 16777216 ? H4 + 1 | 0 : H4)) << 7 | J4 >>> 25, V2 = H4 >> 25, H4 = PA(m4, i4, IA2, s4), J4 = t3, G4 = (j2 = PA(d4, o4, z2, f4)) + H4 | 0, H4 = t3 + J4 | 0, H4 = G4 >>> 0 < j2 >>> 0 ? H4 + 1 | 0 : H4, J4 = PA(v5, C4, X2, y4), H4 = t3 + H4 | 0, H4 = (G4 = J4 + G4 | 0) >>> 0 < J4 >>> 0 ? H4 + 1 | 0 : H4, J4 = (j2 = PA(x4, B4, T2, a4)) + G4 | 0, G4 = t3 + H4 | 0, G4 = J4 >>> 0 < j2 >>> 0 ? G4 + 1 | 0 : G4, j2 = PA(b4, D4, W2, h4 = W2 >> 31), H4 = t3 + G4 | 0, H4 = (J4 = j2 + J4 | 0) >>> 0 < j2 >>> 0 ? H4 + 1 | 0 : H4, j2 = PA(L4, Q4, $2, F4), G4 = t3 + H4 | 0, G4 = ((J4 = j2 + J4 | 0) >>> 0 < j2 >>> 0 ? G4 + 1 : G4) << 1 | J4 >>> 31, J4 = (H4 = P4) + (P4 = J4 << 1) | 0, H4 = G4 + V2 | 0, H4 = J4 >>> 0 < P4 >>> 0 ? H4 + 1 | 0 : H4, V2 = J4, j2 = G4 = J4 + 33554432 | 0, J4 = H4 = G4 >>> 0 < 33554432 ? H4 + 1 | 0 : H4, E3[A8 + 144 >> 2] = V2 - (-67108864 & G4), V2 = PA(H4 = c3(Z2, 38), H4 >> 31, Z2, w4), P4 = t3, R4 = PA(H4 = R4, G4 = H4 >> 31, H4, G4), G4 = t3 + P4 | 0, G4 = (H4 = R4 + V2 | 0) >>> 0 < R4 >>> 0 ? G4 + 1 | 0 : G4, P4 = (gA2 = PA(R4 = c3(T2, 19), S4 = R4 >> 31, V2 = d4 << 1, M4 = V2 >> 31)) + H4 | 0, H4 = t3 + G4 | 0, H4 = P4 >>> 0 < gA2 >>> 0 ? H4 + 1 | 0 : H4, G4 = P4, P4 = PA(m4, i4, u4, e4), H4 = t3 + H4 | 0, H4 = (G4 = G4 + P4 | 0) >>> 0 < P4 >>> 0 ? H4 + 1 | 0 : H4, P4 = (gA2 = PA(b4, D4, z2, f4)) + G4 | 0, G4 = t3 + H4 | 0, G4 = P4 >>> 0 < gA2 >>> 0 ? G4 + 1 | 0 : G4, gA2 = PA(v5, C4, L4, Q4), H4 = t3 + G4 | 0, gA2 = H4 = ((P4 = gA2 + P4 | 0) >>> 0 < gA2 >>> 0 ? H4 + 1 : H4) << 1 | P4 >>> 31, _4 = G4 = (P4 = 33554432 + (N4 = P4 << 1) | 0) >>> 0 < 33554432 ? H4 + 1 | 0 : H4, QA2 = (67108863 & G4) << 6 | P4 >>> 26, aA2 = G4 >> 26, H4 = PA(R4, S4, X2, y4), q4 = t3, l3 = Y4, G4 = (Y4 = PA(x4, B4, Y4, K4 = Y4 >> 31)) + H4 | 0, H4 = t3 + q4 | 0, H4 = G4 >>> 0 < Y4 >>> 0 ? H4 + 1 | 0 : H4, Y4 = (q4 = PA(d4, o4, u4, e4)) + G4 | 0, G4 = t3 + H4 | 0, G4 = Y4 >>> 0 < q4 >>> 0 ? G4 + 1 | 0 : G4, q4 = PA(b4, D4, m4, i4), H4 = t3 + G4 | 0, H4 = (Y4 = q4 + Y4 | 0) >>> 0 < q4 >>> 0 ? H4 + 1 | 0 : H4, q4 = PA(L4, Q4, AA2, O2), G4 = t3 + H4 | 0, G4 = ((Y4 = q4 + Y4 | 0) >>> 0 < q4 >>> 0 ? G4 + 1 : G4) << 1 | Y4 >>> 31, Y4 = (H4 = QA2) + (QA2 = Y4 << 1) | 0, H4 = G4 + aA2 | 0, H4 = Y4 >>> 0 < QA2 >>> 0 ? H4 + 1 | 0 : H4, aA2 = Y4, QA2 = Y4 = Y4 + 16777216 | 0, p4 = (33554431 & (H4 = Y4 >>> 0 < 16777216 ? H4 + 1 | 0 : H4)) << 7 | Y4 >>> 25, q4 = H4 >> 25, H4 = PA(x4, B4, AA2, O2), Y4 = t3, G4 = (l3 = PA(v5, C4, l3, K4)) + H4 | 0, H4 = t3 + Y4 | 0, Y4 = (R4 = PA(R4, S4, T2, a4)) + G4 | 0, G4 = t3 + (G4 >>> 0 < l3 >>> 0 ? H4 + 1 | 0 : H4) | 0, G4 = Y4 >>> 0 < R4 >>> 0 ? G4 + 1 | 0 : G4, R4 = PA(X2, y4, u4, e4), H4 = t3 + G4 | 0, H4 = (Y4 = R4 + Y4 | 0) >>> 0 < R4 >>> 0 ? H4 + 1 | 0 : H4, G4 = Y4, Y4 = PA(b4, D4, V2, M4), H4 = t3 + H4 | 0, H4 = (G4 = G4 + Y4 | 0) >>> 0 < Y4 >>> 0 ? H4 + 1 | 0 : H4, Y4 = (R4 = PA(L4, Q4, m4, i4)) + G4 | 0, G4 = t3 + H4 | 0, H4 = (H4 = (Y4 >>> 0 < R4 >>> 0 ? G4 + 1 : G4) << 1 | Y4 >>> 31) + q4 | 0, l3 = Y4 = (G4 = Y4 << 1) + p4 | 0, H4 = G4 >>> 0 > Y4 >>> 0 ? H4 + 1 | 0 : H4, Y4 = (R4 = Y4 + 33554432 | 0) >>> 0 < 33554432 ? H4 + 1 | 0 : H4, E3[A8 + 128 >> 2] = l3 - (-67108864 & R4), H4 = PA(z2, f4, Z2, w4), G4 = t3, l3 = PA(d4, o4, m4, i4), G4 = t3 + G4 | 0, G4 = (H4 = l3 + H4 | 0) >>> 0 < l3 >>> 0 ? G4 + 1 | 0 : G4, l3 = (q4 = PA(v5, C4, T2, a4)) + H4 | 0, H4 = t3 + G4 | 0, H4 = l3 >>> 0 < q4 >>> 0 ? H4 + 1 | 0 : H4, q4 = PA(x4, B4, CA2, k4), G4 = t3 + H4 | 0, G4 = (l3 = q4 + l3 | 0) >>> 0 < q4 >>> 0 ? G4 + 1 | 0 : G4, q4 = PA(L4, Q4, W2, h4), H4 = t3 + G4 | 0, H4 = (G4 = J4 >> 26) + (((l3 = q4 + l3 | 0) >>> 0 < q4 >>> 0 ? H4 + 1 : H4) << 1 | l3 >>> 31) | 0, H4 = (J4 = (j2 = (67108863 & J4) << 6 | j2 >>> 26) + (l3 << 1) | 0) >>> 0 < j2 >>> 0 ? H4 + 1 | 0 : H4, j2 = J4, G4 = H4, l3 = H4 = J4 + 16777216 | 0, J4 = G4 = H4 >>> 0 < 16777216 ? G4 + 1 | 0 : G4, E3[A8 + 148 >> 2] = j2 - (-33554432 & H4), H4 = PA(x4, B4, IA2, s4), IA2 = t3, G4 = (O2 = PA(v5, C4, AA2, O2)) + H4 | 0, H4 = t3 + IA2 | 0, H4 = G4 >>> 0 < O2 >>> 0 ? H4 + 1 | 0 : H4, u4 = PA(T2, a4, u4, e4), H4 = t3 + H4 | 0, H4 = (G4 = u4 + G4 | 0) >>> 0 < u4 >>> 0 ? H4 + 1 | 0 : H4, b4 = (u4 = PA(b4, D4, X2, y4)) + G4 | 0, G4 = t3 + H4 | 0, G4 = b4 >>> 0 < u4 >>> 0 ? G4 + 1 | 0 : G4, H4 = b4, b4 = PA(L4, Q4, d4, o4), G4 = t3 + G4 | 0, G4 = ((H4 = H4 + b4 | 0) >>> 0 < b4 >>> 0 ? G4 + 1 : G4) << 1, b4 = H4, H4 = (H4 = G4 | H4 >>> 31) + (G4 = Y4 >> 26) | 0, H4 = (Y4 = (j2 = b4 << 1) + (b4 = (67108863 & Y4) << 6 | R4 >>> 26) | 0) >>> 0 < b4 >>> 0 ? H4 + 1 | 0 : H4, b4 = Y4, u4 = G4 = Y4 + 16777216 | 0, Y4 = H4 = G4 >>> 0 < 16777216 ? H4 + 1 | 0 : H4, E3[A8 + 132 >> 2] = b4 - (-33554432 & G4), H4 = PA(T2, a4, z2, f4), b4 = t3, G4 = (d4 = PA(d4, o4, d4, o4)) + H4 | 0, H4 = t3 + b4 | 0, H4 = G4 >>> 0 < d4 >>> 0 ? H4 + 1 | 0 : H4, d4 = PA(m4, i4, X2, y4), H4 = t3 + H4 | 0, H4 = (G4 = d4 + G4 | 0) >>> 0 < d4 >>> 0 ? H4 + 1 | 0 : H4, d4 = PA(v5, C4, $2, F4), H4 = t3 + H4 | 0, H4 = (G4 = d4 + G4 | 0) >>> 0 < d4 >>> 0 ? H4 + 1 | 0 : H4, d4 = (b4 = PA(x4, B4, W2, h4)) + G4 | 0, G4 = t3 + H4 | 0, G4 = d4 >>> 0 < b4 >>> 0 ? G4 + 1 | 0 : G4, H4 = d4, d4 = PA(d4 = L4, Q4, L4 = EA2, X2 = L4 >> 31), G4 = t3 + G4 | 0, G4 = ((H4 = H4 + d4 | 0) >>> 0 < d4 >>> 0 ? G4 + 1 : G4) << 1, d4 = H4, H4 = (H4 = G4 | H4 >>> 31) + (G4 = J4 >> 25) | 0, H4 = (J4 = (b4 = d4 << 1) + (d4 = (33554431 & J4) << 7 | l3 >>> 25) | 0) >>> 0 < d4 >>> 0 ? H4 + 1 | 0 : H4, d4 = J4, b4 = G4 = J4 + 33554432 | 0, J4 = H4 = G4 >>> 0 < 33554432 ? H4 + 1 | 0 : H4, E3[A8 + 152 >> 2] = d4 - (-67108864 & G4), G4 = n4 - (H4 = -67108864 & oA2) | 0, d4 = iA2 - ((H4 >>> 0 > n4 >>> 0) + cA2 | 0) | 0, H4 = Y4 >> 25, Y4 = (u4 = (33554431 & Y4) << 7 | u4 >>> 25) + G4 | 0, G4 = H4 + d4 | 0, d4 = Y4, H4 = G4 = Y4 >>> 0 < u4 >>> 0 ? G4 + 1 | 0 : G4, H4 = ((67108863 & (H4 = (Y4 = Y4 + 33554432 | 0) >>> 0 < 33554432 ? H4 + 1 | 0 : H4)) << 6 | Y4 >>> 26) + (O2 = BA2 - (-33554432 & DA2) | 0) | 0, E3[A8 + 140 >> 2] = H4, E3[A8 + 136 >> 2] = d4 - (-67108864 & Y4), H4 = PA(m4, i4, T2, a4), G4 = t3, Y4 = PA(Z2, w4, V2, M4), G4 = t3 + G4 | 0, G4 = (H4 = Y4 + H4 | 0) >>> 0 < Y4 >>> 0 ? G4 + 1 | 0 : G4, Y4 = (m4 = PA(z2, f4, CA2, k4)) + H4 | 0, H4 = t3 + G4 | 0, H4 = Y4 >>> 0 < m4 >>> 0 ? H4 + 1 | 0 : H4, v5 = PA(v5, C4, W2, h4), G4 = t3 + H4 | 0, G4 = (Y4 = v5 + Y4 | 0) >>> 0 < v5 >>> 0 ? G4 + 1 | 0 : G4, v5 = PA(x4, B4, L4, X2), H4 = t3 + G4 | 0, H4 = (H4 = ((Y4 = v5 + Y4 | 0) >>> 0 < v5 >>> 0 ? H4 + 1 : H4) << 1 | Y4 >>> 31) + (G4 = J4 >> 26) | 0, G4 = (J4 = (d4 = Y4 << 1) + (Y4 = (67108863 & J4) << 6 | b4 >>> 26) | 0) >>> 0 < Y4 >>> 0 ? H4 + 1 | 0 : H4, G4 = (H4 = J4 + 16777216 | 0) >>> 0 < 16777216 ? G4 + 1 | 0 : G4, E3[A8 + 156 >> 2] = J4 - (-33554432 & H4), Y4 = aA2 - (-33554432 & QA2) | 0, v5 = N4 - (J4 = -67108864 & P4) | 0, x4 = gA2 - ((J4 >>> 0 > N4 >>> 0) + _4 | 0) | 0, J4 = PA((33554431 & G4) << 7 | H4 >>> 25, G4 >> 25, 19, 0), G4 = t3 + x4 | 0, G4 = (H4 = J4 + v5 | 0) >>> 0 < J4 >>> 0 ? G4 + 1 | 0 : G4, J4 = H4, G4 = ((67108863 & (G4 = (H4 = H4 + 33554432 | 0) >>> 0 < 33554432 ? G4 + 1 | 0 : G4)) << 6 | H4 >>> 26) + Y4 | 0, E3[A8 + 124 >> 2] = G4, E3[A8 + 120 >> 2] = J4 - (-67108864 & H4), H4 = E3[I7 + 44 >> 2], G4 = E3[I7 + 4 >> 2], J4 = E3[I7 + 48 >> 2], Y4 = E3[I7 + 8 >> 2], v5 = E3[I7 + 52 >> 2], x4 = E3[I7 + 12 >> 2], L4 = E3[I7 + 56 >> 2], m4 = E3[I7 + 16 >> 2], d4 = E3[I7 + 60 >> 2], b4 = E3[I7 + 20 >> 2], T2 = E3[I7 - -64 >> 2], X2 = E3[I7 + 24 >> 2], z2 = E3[I7 + 68 >> 2], u4 = E3[I7 + 28 >> 2], O2 = E3[I7 + 72 >> 2], Z2 = E3[I7 + 32 >> 2], W2 = E3[I7 + 40 >> 2], AA2 = E3[I7 >> 2], E3[A8 + 76 >> 2] = E3[I7 + 76 >> 2] + E3[I7 + 36 >> 2], E3[A8 + 72 >> 2] = O2 + Z2, E3[A8 + 68 >> 2] = u4 + z2, E3[(CA2 = A8 - -64 | 0) >> 2] = T2 + X2, E3[A8 + 60 >> 2] = d4 + b4, E3[A8 + 56 >> 2] = L4 + m4, E3[A8 + 52 >> 2] = v5 + x4, E3[A8 + 48 >> 2] = J4 + Y4, E3[A8 + 44 >> 2] = H4 + G4, E3[A8 + 40 >> 2] = W2 + AA2, U3(g6, A8 + 40 | 0), I7 = E3[A8 + 4 >> 2], H4 = E3[A8 + 84 >> 2], G4 = E3[A8 + 8 >> 2], J4 = E3[A8 + 88 >> 2], Y4 = E3[A8 + 12 >> 2], v5 = E3[A8 + 92 >> 2], x4 = E3[A8 + 16 >> 2], L4 = E3[A8 + 96 >> 2], m4 = E3[A8 + 20 >> 2], d4 = E3[A8 + 100 >> 2], b4 = E3[A8 + 24 >> 2], T2 = E3[A8 + 104 >> 2], X2 = E3[A8 + 28 >> 2], z2 = E3[A8 + 108 >> 2], u4 = E3[A8 + 32 >> 2], O2 = E3[A8 + 112 >> 2], Z2 = E3[A8 >> 2], W2 = E3[A8 + 80 >> 2], $2 = (AA2 = E3[A8 + 116 >> 2]) - (IA2 = E3[A8 + 36 >> 2]) | 0, E3[A8 + 116 >> 2] = $2, R4 = O2 - u4 | 0, E3[A8 + 112 >> 2] = R4, V2 = z2 - X2 | 0, E3[A8 + 108 >> 2] = V2, P4 = T2 - b4 | 0, E3[A8 + 104 >> 2] = P4, EA2 = d4 - m4 | 0, E3[A8 + 100 >> 2] = EA2, iA2 = L4 - x4 | 0, E3[A8 + 96 >> 2] = iA2, oA2 = v5 - Y4 | 0, E3[A8 + 92 >> 2] = oA2, cA2 = J4 - G4 | 0, E3[A8 + 88 >> 2] = cA2, BA2 = H4 - I7 | 0, E3[A8 + 84 >> 2] = BA2, DA2 = W2 - Z2 | 0, E3[A8 + 80 >> 2] = DA2, AA2 = AA2 + IA2 | 0, E3[A8 + 76 >> 2] = AA2, u4 = u4 + O2 | 0, E3[A8 + 72 >> 2] = u4, X2 = z2 + X2 | 0, E3[A8 + 68 >> 2] = X2, b4 = b4 + T2 | 0, E3[CA2 >> 2] = b4, m4 = d4 + m4 | 0, E3[A8 + 60 >> 2] = m4, x4 = L4 + x4 | 0, E3[A8 + 56 >> 2] = x4, Y4 = Y4 + v5 | 0, E3[A8 + 52 >> 2] = Y4, G4 = G4 + J4 | 0, E3[A8 + 48 >> 2] = G4, I7 = I7 + H4 | 0, E3[A8 + 44 >> 2] = I7, H4 = Z2 + W2 | 0, E3[A8 + 40 >> 2] = H4, J4 = E3[g6 >> 2], v5 = E3[g6 + 4 >> 2], L4 = E3[g6 + 8 >> 2], d4 = E3[g6 + 12 >> 2], T2 = E3[g6 + 16 >> 2], z2 = E3[g6 + 20 >> 2], O2 = E3[g6 + 24 >> 2], Z2 = E3[g6 + 28 >> 2], W2 = E3[g6 + 32 >> 2], E3[A8 + 36 >> 2] = E3[g6 + 36 >> 2] - AA2, E3[A8 + 32 >> 2] = W2 - u4, E3[A8 + 28 >> 2] = Z2 - X2, E3[A8 + 24 >> 2] = O2 - b4, E3[A8 + 20 >> 2] = z2 - m4, E3[A8 + 16 >> 2] = T2 - x4, E3[A8 + 12 >> 2] = d4 - Y4, E3[A8 + 8 >> 2] = L4 - G4, E3[A8 + 4 >> 2] = v5 - I7, E3[A8 >> 2] = J4 - H4, I7 = E3[A8 + 124 >> 2], H4 = E3[A8 + 128 >> 2], G4 = E3[A8 + 132 >> 2], J4 = E3[A8 + 136 >> 2], Y4 = E3[A8 + 140 >> 2], v5 = E3[A8 + 144 >> 2], x4 = E3[A8 + 148 >> 2], L4 = E3[A8 + 152 >> 2], m4 = E3[A8 + 120 >> 2], E3[A8 + 156 >> 2] = E3[A8 + 156 >> 2] - $2, E3[A8 + 152 >> 2] = L4 - R4, E3[A8 + 148 >> 2] = x4 - V2, E3[A8 + 144 >> 2] = v5 - P4, E3[A8 + 140 >> 2] = Y4 - EA2, E3[A8 + 136 >> 2] = J4 - iA2, E3[A8 + 132 >> 2] = G4 - oA2, E3[A8 + 128 >> 2] = H4 - cA2, E3[A8 + 124 >> 2] = I7 - BA2, E3[A8 + 120 >> 2] = m4 - DA2, r3 = g6 + 48 | 0;
                    }
                    function p3(A8, I7, g6, C4) {
                      var B4 = 0, Q4 = 0, o4 = 0, c4 = 0, D4 = 0, a4 = 0, y4 = 0, f4 = 0, e4 = 0, w4 = 0, r4 = 0, t4 = 0, h4 = 0, k4 = 0, n4 = 0, s4 = 0, F4 = 0, S4 = 0, M4 = 0, N4 = 0, K4 = 0, _4 = 0, p4 = 0, H4 = 0, G4 = 0, J4 = 0, Y4 = 0;
                      for (B4 = i3[0 | I7] | i3[I7 + 1 | 0] << 8 | i3[I7 + 2 | 0] << 16 | i3[I7 + 3 | 0] << 24, E3[g6 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = i3[I7 + 4 | 0] | i3[I7 + 5 | 0] << 8 | i3[I7 + 6 | 0] << 16 | i3[I7 + 7 | 0] << 24, E3[g6 + 4 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = i3[I7 + 8 | 0] | i3[I7 + 9 | 0] << 8 | i3[I7 + 10 | 0] << 16 | i3[I7 + 11 | 0] << 24, E3[g6 + 8 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = i3[I7 + 12 | 0] | i3[I7 + 13 | 0] << 8 | i3[I7 + 14 | 0] << 16 | i3[I7 + 15 | 0] << 24, E3[g6 + 12 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = i3[I7 + 16 | 0] | i3[I7 + 17 | 0] << 8 | i3[I7 + 18 | 0] << 16 | i3[I7 + 19 | 0] << 24, E3[g6 + 16 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = i3[I7 + 20 | 0] | i3[I7 + 21 | 0] << 8 | i3[I7 + 22 | 0] << 16 | i3[I7 + 23 | 0] << 24, E3[g6 + 20 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = i3[I7 + 24 | 0] | i3[I7 + 25 | 0] << 8 | i3[I7 + 26 | 0] << 16 | i3[I7 + 27 | 0] << 24, E3[g6 + 24 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = i3[I7 + 28 | 0] | i3[I7 + 29 | 0] << 8 | i3[I7 + 30 | 0] << 16 | i3[I7 + 31 | 0] << 24, E3[g6 + 28 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = i3[I7 + 32 | 0] | i3[I7 + 33 | 0] << 8 | i3[I7 + 34 | 0] << 16 | i3[I7 + 35 | 0] << 24, E3[g6 + 32 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = i3[I7 + 36 | 0] | i3[I7 + 37 | 0] << 8 | i3[I7 + 38 | 0] << 16 | i3[I7 + 39 | 0] << 24, E3[g6 + 36 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = i3[I7 + 40 | 0] | i3[I7 + 41 | 0] << 8 | i3[I7 + 42 | 0] << 16 | i3[I7 + 43 | 0] << 24, E3[g6 + 40 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = i3[I7 + 44 | 0] | i3[I7 + 45 | 0] << 8 | i3[I7 + 46 | 0] << 16 | i3[I7 + 47 | 0] << 24, E3[g6 + 44 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = i3[I7 + 48 | 0] | i3[I7 + 49 | 0] << 8 | i3[I7 + 50 | 0] << 16 | i3[I7 + 51 | 0] << 24, E3[g6 + 48 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = i3[I7 + 52 | 0] | i3[I7 + 53 | 0] << 8 | i3[I7 + 54 | 0] << 16 | i3[I7 + 55 | 0] << 24, E3[g6 + 52 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = i3[I7 + 56 | 0] | i3[I7 + 57 | 0] << 8 | i3[I7 + 58 | 0] << 16 | i3[I7 + 59 | 0] << 24, E3[g6 + 56 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, I7 = i3[I7 + 60 | 0] | i3[I7 + 61 | 0] << 8 | i3[I7 + 62 | 0] << 16 | i3[I7 + 63 | 0] << 24, E3[g6 + 60 >> 2] = I7 << 24 | (65280 & I7) << 8 | I7 >>> 8 & 65280 | I7 >>> 24, I7 = E3[A8 + 28 >> 2], E3[C4 + 24 >> 2] = E3[A8 + 24 >> 2], E3[C4 + 28 >> 2] = I7, I7 = E3[A8 + 20 >> 2], E3[C4 + 16 >> 2] = E3[A8 + 16 >> 2], E3[C4 + 20 >> 2] = I7, I7 = E3[A8 + 12 >> 2], E3[C4 + 8 >> 2] = E3[A8 + 8 >> 2], E3[C4 + 12 >> 2] = I7, I7 = E3[A8 + 4 >> 2], E3[C4 >> 2] = E3[A8 >> 2], E3[C4 + 4 >> 2] = I7; D4 = E3[C4 + 28 >> 2], B4 = (I7 = F4 << 2) + g6 | 0, o4 = E3[C4 + 16 >> 2], a4 = E3[B4 >> 2] + (gI(o4, 26) ^ gI(o4, 21) ^ gI(o4, 7)) | 0, f4 = (D4 = ((Q4 = E3[I7 + 34784 >> 2] + a4 | 0) + (o4 & ((a4 = E3[C4 + 24 >> 2]) ^ (e4 = E3[C4 + 20 >> 2])) ^ a4) | 0) + D4 | 0) + E3[C4 + 12 >> 2] | 0, E3[C4 + 12 >> 2] = f4, D4 = (r4 = D4 + (gI(y4 = E3[C4 >> 2], 30) ^ gI(y4, 19) ^ gI(y4, 10)) | 0) + (y4 & ((Q4 = E3[C4 + 8 >> 2]) | (c4 = E3[C4 + 4 >> 2])) | Q4 & c4) | 0, E3[C4 + 28 >> 2] = D4, Q4 = (r4 = Q4) + (a4 = (E3[(h4 = (Q4 = 4 | I7) + g6 | 0) >> 2] + ((a4 + (e4 ^ f4 & (o4 ^ e4)) | 0) + (gI(f4, 26) ^ gI(f4, 21) ^ gI(f4, 7)) | 0) | 0) + E3[Q4 + 34784 >> 2] | 0) | 0, E3[C4 + 8 >> 2] = Q4, a4 = (a4 + (D4 & (c4 | y4) | c4 & y4) | 0) + (gI(D4, 30) ^ gI(D4, 19) ^ gI(D4, 10)) | 0, E3[C4 + 24 >> 2] = a4, e4 = (r4 = c4) + (c4 = (((e4 + E3[(s4 = (c4 = 8 | I7) + g6 | 0) >> 2] | 0) + E3[c4 + 34784 >> 2] | 0) + (o4 ^ Q4 & (o4 ^ f4)) | 0) + (gI(Q4, 26) ^ gI(Q4, 21) ^ gI(Q4, 7)) | 0) | 0, E3[C4 + 4 >> 2] = e4, c4 = c4 + ((a4 & (D4 | y4) | D4 & y4) + (gI(a4, 30) ^ gI(a4, 19) ^ gI(a4, 10)) | 0) | 0, E3[C4 + 20 >> 2] = c4, o4 = (r4 = y4) + (y4 = (((o4 + E3[(S4 = (y4 = 12 | I7) + g6 | 0) >> 2] | 0) + E3[y4 + 34784 >> 2] | 0) + (f4 ^ e4 & (Q4 ^ f4)) | 0) + (gI(e4, 26) ^ gI(e4, 21) ^ gI(e4, 7)) | 0) | 0, E3[C4 >> 2] = o4, y4 = y4 + ((c4 & (D4 | a4) | D4 & a4) + (gI(c4, 30) ^ gI(c4, 19) ^ gI(c4, 10)) | 0) | 0, E3[C4 + 16 >> 2] = y4, f4 = (w4 = ((((r4 = f4) + E3[(M4 = (f4 = 16 | I7) + g6 | 0) >> 2] | 0) + E3[f4 + 34784 >> 2] | 0) + (Q4 ^ o4 & (Q4 ^ e4)) | 0) + (gI(o4, 26) ^ gI(o4, 21) ^ gI(o4, 7)) | 0) + ((y4 & (c4 | a4) | c4 & a4) + (gI(y4, 30) ^ gI(y4, 19) ^ gI(y4, 10)) | 0) | 0, E3[C4 + 12 >> 2] = f4, w4 = D4 + w4 | 0, E3[C4 + 28 >> 2] = w4, D4 = (Q4 = (((Q4 + E3[(N4 = (D4 = 20 | I7) + g6 | 0) >> 2] | 0) + E3[D4 + 34784 >> 2] | 0) + (e4 ^ w4 & (o4 ^ e4)) | 0) + (gI(w4, 26) ^ gI(w4, 21) ^ gI(w4, 7)) | 0) + ((f4 & (c4 | y4) | c4 & y4) + (gI(f4, 30) ^ gI(f4, 19) ^ gI(f4, 10)) | 0) | 0, E3[C4 + 8 >> 2] = D4, Q4 = Q4 + a4 | 0, E3[C4 + 24 >> 2] = Q4, a4 = (e4 = (((e4 + E3[(K4 = (a4 = 24 | I7) + g6 | 0) >> 2] | 0) + E3[a4 + 34784 >> 2] | 0) + (o4 ^ Q4 & (o4 ^ w4)) | 0) + (gI(Q4, 26) ^ gI(Q4, 21) ^ gI(Q4, 7)) | 0) + ((D4 & (y4 | f4) | y4 & f4) + (gI(D4, 30) ^ gI(D4, 19) ^ gI(D4, 10)) | 0) | 0, E3[C4 + 4 >> 2] = a4, e4 = c4 + e4 | 0, E3[C4 + 20 >> 2] = e4, c4 = (o4 = (((o4 + E3[(_4 = (c4 = 28 | I7) + g6 | 0) >> 2] | 0) + E3[c4 + 34784 >> 2] | 0) + (w4 ^ e4 & (Q4 ^ w4)) | 0) + (gI(e4, 26) ^ gI(e4, 21) ^ gI(e4, 7)) | 0) + ((a4 & (D4 | f4) | D4 & f4) + (gI(a4, 30) ^ gI(a4, 19) ^ gI(a4, 10)) | 0) | 0, E3[C4 >> 2] = c4, o4 = o4 + y4 | 0, E3[C4 + 16 >> 2] = o4, y4 = (w4 = (((w4 + E3[(p4 = (y4 = 32 | I7) + g6 | 0) >> 2] | 0) + E3[y4 + 34784 >> 2] | 0) + (Q4 ^ o4 & (Q4 ^ e4)) | 0) + (gI(o4, 26) ^ gI(o4, 21) ^ gI(o4, 7)) | 0) + ((c4 & (D4 | a4) | D4 & a4) + (gI(c4, 30) ^ gI(c4, 19) ^ gI(c4, 10)) | 0) | 0, E3[C4 + 28 >> 2] = y4, w4 = f4 + w4 | 0, E3[C4 + 12 >> 2] = w4, f4 = (Q4 = (((Q4 + E3[(H4 = (f4 = 36 | I7) + g6 | 0) >> 2] | 0) + E3[f4 + 34784 >> 2] | 0) + (e4 ^ w4 & (o4 ^ e4)) | 0) + (gI(w4, 26) ^ gI(w4, 21) ^ gI(w4, 7)) | 0) + ((y4 & (c4 | a4) | c4 & a4) + (gI(y4, 30) ^ gI(y4, 19) ^ gI(y4, 10)) | 0) | 0, E3[C4 + 24 >> 2] = f4, Q4 = Q4 + D4 | 0, E3[C4 + 8 >> 2] = Q4, D4 = (e4 = (((e4 + E3[(G4 = (D4 = 40 | I7) + g6 | 0) >> 2] | 0) + E3[D4 + 34784 >> 2] | 0) + (o4 ^ Q4 & (o4 ^ w4)) | 0) + (gI(Q4, 26) ^ gI(Q4, 21) ^ gI(Q4, 7)) | 0) + ((f4 & (c4 | y4) | c4 & y4) + (gI(f4, 30) ^ gI(f4, 19) ^ gI(f4, 10)) | 0) | 0, E3[C4 + 20 >> 2] = D4, e4 = a4 + e4 | 0, E3[C4 + 4 >> 2] = e4, r4 = (a4 = 44 | I7) + g6 | 0, a4 = (o4 = ((o4 + (E3[a4 + 34784 >> 2] + E3[r4 >> 2] | 0) | 0) + (w4 ^ e4 & (Q4 ^ w4)) | 0) + (gI(e4, 26) ^ gI(e4, 21) ^ gI(e4, 7)) | 0) + ((D4 & (y4 | f4) | y4 & f4) + (gI(D4, 30) ^ gI(D4, 19) ^ gI(D4, 10)) | 0) | 0, E3[C4 + 16 >> 2] = a4, c4 = c4 + o4 | 0, E3[C4 >> 2] = c4, n4 = (o4 = 48 | I7) + g6 | 0, o4 = (w4 = ((w4 + (E3[o4 + 34784 >> 2] + E3[n4 >> 2] | 0) | 0) + (Q4 ^ c4 & (Q4 ^ e4)) | 0) + (gI(c4, 26) ^ gI(c4, 21) ^ gI(c4, 7)) | 0) + ((a4 & (D4 | f4) | D4 & f4) + (gI(a4, 30) ^ gI(a4, 19) ^ gI(a4, 10)) | 0) | 0, E3[C4 + 12 >> 2] = o4, y4 = y4 + w4 | 0, E3[C4 + 28 >> 2] = y4, k4 = (w4 = 52 | I7) + g6 | 0, Q4 = (w4 = (((E3[w4 + 34784 >> 2] + E3[k4 >> 2] | 0) + Q4 | 0) + (e4 ^ y4 & (c4 ^ e4)) | 0) + (gI(y4, 26) ^ gI(y4, 21) ^ gI(y4, 7)) | 0) + ((o4 & (D4 | a4) | D4 & a4) + (gI(o4, 30) ^ gI(o4, 19) ^ gI(o4, 10)) | 0) | 0, E3[C4 + 8 >> 2] = Q4, f4 = f4 + w4 | 0, E3[C4 + 24 >> 2] = f4, w4 = (t4 = 56 | I7) + g6 | 0, e4 = (t4 = (((E3[t4 + 34784 >> 2] + E3[w4 >> 2] | 0) + e4 | 0) + (c4 ^ f4 & (c4 ^ y4)) | 0) + (gI(f4, 26) ^ gI(f4, 21) ^ gI(f4, 7)) | 0) + ((Q4 & (a4 | o4) | a4 & o4) + (gI(Q4, 30) ^ gI(Q4, 19) ^ gI(Q4, 10)) | 0) | 0, E3[C4 + 4 >> 2] = e4, D4 = D4 + t4 | 0, E3[C4 + 20 >> 2] = D4, t4 = (I7 |= 60) + g6 | 0, D4 = (I7 = ((c4 + (E3[I7 + 34784 >> 2] + E3[t4 >> 2] | 0) | 0) + (y4 ^ D4 & (y4 ^ f4)) | 0) + (gI(D4, 26) ^ gI(D4, 21) ^ gI(D4, 7)) | 0) + ((e4 & (Q4 | o4) | Q4 & o4) + (gI(e4, 30) ^ gI(e4, 19) ^ gI(e4, 10)) | 0) | 0, E3[C4 >> 2] = D4, E3[C4 + 16 >> 2] = I7 + a4, 48 != (0 | F4); ) c4 = E3[H4 >> 2], F4 = F4 + 16 | 0, I7 = E3[w4 >> 2], D4 = (Q4 = E3[B4 >> 2] + (c4 + (gI(I7, 15) ^ gI(I7, 13) ^ I7 >>> 10) | 0) | 0) + (gI(a4 = E3[h4 >> 2], 25) ^ gI(a4, 14) ^ a4 >>> 3) | 0, E3[(F4 << 2) + g6 >> 2] = D4, f4 = (o4 = (Q4 = (y4 = E3[G4 >> 2]) + a4 | 0) + (gI(a4 = E3[t4 >> 2], 15) ^ gI(a4, 13) ^ a4 >>> 10) | 0) + (gI(Q4 = E3[s4 >> 2], 25) ^ gI(Q4, 14) ^ Q4 >>> 3) | 0, E3[B4 + 68 >> 2] = f4, e4 = (r4 = ((o4 = Q4) + (Q4 = E3[r4 >> 2]) | 0) + (gI(D4, 15) ^ gI(D4, 13) ^ D4 >>> 10) | 0) + (gI(o4 = E3[S4 >> 2], 25) ^ gI(o4, 14) ^ o4 >>> 3) | 0, E3[B4 + 72 >> 2] = e4, w4 = (t4 = ((r4 = o4) + (o4 = E3[n4 >> 2]) | 0) + (gI(f4, 15) ^ gI(f4, 13) ^ f4 >>> 10) | 0) + (gI(r4 = E3[M4 >> 2], 25) ^ gI(r4, 14) ^ r4 >>> 3) | 0, E3[B4 + 76 >> 2] = w4, n4 = (t4 = ((t4 = r4) + (r4 = E3[k4 >> 2]) | 0) + (gI(e4, 15) ^ gI(e4, 13) ^ e4 >>> 10) | 0) + (gI(k4 = E3[N4 >> 2], 25) ^ gI(k4, 14) ^ k4 >>> 3) | 0, E3[B4 + 80 >> 2] = n4, k4 = (h4 = (I7 + k4 | 0) + (gI(w4, 15) ^ gI(w4, 13) ^ w4 >>> 10) | 0) + (gI(t4 = E3[K4 >> 2], 25) ^ gI(t4, 14) ^ t4 >>> 3) | 0, E3[B4 + 84 >> 2] = k4, t4 = ((a4 + t4 | 0) + (gI(s4 = E3[_4 >> 2], 25) ^ gI(s4, 14) ^ s4 >>> 3) | 0) + (gI(n4, 15) ^ gI(n4, 13) ^ n4 >>> 10) | 0, E3[B4 + 88 >> 2] = t4, f4 = ((h4 = E3[p4 >> 2]) + (f4 + (gI(c4, 25) ^ gI(c4, 14) ^ c4 >>> 3) | 0) | 0) + (gI(t4, 15) ^ gI(t4, 13) ^ t4 >>> 10) | 0, E3[B4 + 96 >> 2] = f4, h4 = ((D4 + s4 | 0) + (gI(h4, 25) ^ gI(h4, 14) ^ h4 >>> 3) | 0) + (gI(k4, 15) ^ gI(k4, 13) ^ k4 >>> 10) | 0, E3[B4 + 92 >> 2] = h4, w4 = (w4 + (y4 + (gI(Q4, 25) ^ gI(Q4, 14) ^ Q4 >>> 3) | 0) | 0) + (gI(f4, 15) ^ gI(f4, 13) ^ f4 >>> 10) | 0, E3[B4 + 104 >> 2] = w4, c4 = (e4 + (c4 + (gI(y4, 25) ^ gI(y4, 14) ^ y4 >>> 3) | 0) | 0) + (gI(h4, 15) ^ gI(h4, 13) ^ h4 >>> 10) | 0, E3[B4 + 100 >> 2] = c4, y4 = (k4 + (o4 + (gI(r4, 25) ^ gI(r4, 14) ^ r4 >>> 3) | 0) | 0) + (gI(w4, 15) ^ gI(w4, 13) ^ w4 >>> 10) | 0, E3[B4 + 112 >> 2] = y4, c4 = (n4 + (Q4 + (gI(o4, 25) ^ gI(o4, 14) ^ o4 >>> 3) | 0) | 0) + (gI(c4, 15) ^ gI(c4, 13) ^ c4 >>> 10) | 0, E3[B4 + 108 >> 2] = c4, J4 = B4, Y4 = (h4 + (I7 + (gI(a4, 25) ^ gI(a4, 14) ^ a4 >>> 3) | 0) | 0) + (gI(y4, 15) ^ gI(y4, 13) ^ y4 >>> 10) | 0, E3[J4 + 120 >> 2] = Y4, I7 = (t4 + (r4 + (gI(I7, 25) ^ gI(I7, 14) ^ I7 >>> 3) | 0) | 0) + (gI(c4, 15) ^ gI(c4, 13) ^ c4 >>> 10) | 0, E3[B4 + 116 >> 2] = I7, J4 = B4, Y4 = (f4 + (a4 + (gI(D4, 25) ^ gI(D4, 14) ^ D4 >>> 3) | 0) | 0) + (gI(I7, 15) ^ gI(I7, 13) ^ I7 >>> 10) | 0, E3[J4 + 124 >> 2] = Y4;
                      E3[A8 >> 2] = D4 + E3[A8 >> 2], E3[A8 + 4 >> 2] = E3[A8 + 4 >> 2] + E3[C4 + 4 >> 2], E3[A8 + 8 >> 2] = E3[A8 + 8 >> 2] + E3[C4 + 8 >> 2], E3[A8 + 12 >> 2] = E3[A8 + 12 >> 2] + E3[C4 + 12 >> 2], E3[A8 + 16 >> 2] = E3[A8 + 16 >> 2] + E3[C4 + 16 >> 2], E3[A8 + 20 >> 2] = E3[A8 + 20 >> 2] + E3[C4 + 20 >> 2], E3[A8 + 24 >> 2] = E3[A8 + 24 >> 2] + E3[C4 + 24 >> 2], E3[A8 + 28 >> 2] = E3[A8 + 28 >> 2] + E3[C4 + 28 >> 2];
                    }
                    function H3(A8, I7, g6) {
                      var B4, Q4, o4, c4, D4, a4, y4, f4, e4, w4, t4, h4, k4, n4, s4, F4, S4, M4, N4, K4, _4, p4, H4, G4 = 0, J4 = 0, Y4 = 0, U4 = 0, d4 = 0, b4 = 0, P4 = 0, v5 = 0;
                      r3 = B4 = r3 - 288 | 0, y4 = i3[g6 + 16 | 0] | i3[g6 + 17 | 0] << 8 | i3[g6 + 18 | 0] << 16 | i3[g6 + 19 | 0] << 24, f4 = i3[g6 + 48 | 0] | i3[g6 + 49 | 0] << 8 | i3[g6 + 50 | 0] << 16 | i3[g6 + 51 | 0] << 24, e4 = i3[g6 + 20 | 0] | i3[g6 + 21 | 0] << 8 | i3[g6 + 22 | 0] << 16 | i3[g6 + 23 | 0] << 24, w4 = i3[I7 + 4 | 0] | i3[I7 + 5 | 0] << 8 | i3[I7 + 6 | 0] << 16 | i3[I7 + 7 | 0] << 24, t4 = i3[g6 + 52 | 0] | i3[g6 + 53 | 0] << 8 | i3[g6 + 54 | 0] << 16 | i3[g6 + 55 | 0] << 24, h4 = i3[g6 + 24 | 0] | i3[g6 + 25 | 0] << 8 | i3[g6 + 26 | 0] << 16 | i3[g6 + 27 | 0] << 24, k4 = i3[I7 + 8 | 0] | i3[I7 + 9 | 0] << 8 | i3[I7 + 10 | 0] << 16 | i3[I7 + 11 | 0] << 24, n4 = i3[g6 + 56 | 0] | i3[g6 + 57 | 0] << 8 | i3[g6 + 58 | 0] << 16 | i3[g6 + 59 | 0] << 24, d4 = i3[g6 + 28 | 0] | i3[g6 + 29 | 0] << 8 | i3[g6 + 30 | 0] << 16 | i3[g6 + 31 | 0] << 24, s4 = i3[I7 + 12 | 0] | i3[I7 + 13 | 0] << 8 | i3[I7 + 14 | 0] << 16 | i3[I7 + 15 | 0] << 24, F4 = i3[g6 + 60 | 0] | i3[g6 + 61 | 0] << 8 | i3[g6 + 62 | 0] << 16 | i3[g6 + 63 | 0] << 24, J4 = i3[g6 + 32 | 0] | i3[g6 + 33 | 0] << 8 | i3[g6 + 34 | 0] << 16 | i3[g6 + 35 | 0] << 24, b4 = i3[g6 + 80 | 0] | i3[g6 + 81 | 0] << 8 | i3[g6 + 82 | 0] << 16 | i3[g6 + 83 | 0] << 24, S4 = i3[I7 + 16 | 0] | i3[I7 + 17 | 0] << 8 | i3[I7 + 18 | 0] << 16 | i3[I7 + 19 | 0] << 24, M4 = i3[g6 + 112 | 0] | i3[g6 + 113 | 0] << 8 | i3[g6 + 114 | 0] << 16 | i3[g6 + 115 | 0] << 24, G4 = i3[g6 + 96 | 0] | i3[g6 + 97 | 0] << 8 | i3[g6 + 98 | 0] << 16 | i3[g6 + 99 | 0] << 24, Y4 = i3[g6 + 36 | 0] | i3[g6 + 37 | 0] << 8 | i3[g6 + 38 | 0] << 16 | i3[g6 + 39 | 0] << 24, P4 = i3[g6 + 84 | 0] | i3[g6 + 85 | 0] << 8 | i3[g6 + 86 | 0] << 16 | i3[g6 + 87 | 0] << 24, N4 = i3[I7 + 20 | 0] | i3[I7 + 21 | 0] << 8 | i3[I7 + 22 | 0] << 16 | i3[I7 + 23 | 0] << 24, K4 = i3[g6 + 116 | 0] | i3[g6 + 117 | 0] << 8 | i3[g6 + 118 | 0] << 16 | i3[g6 + 119 | 0] << 24, o4 = i3[g6 + 100 | 0] | i3[g6 + 101 | 0] << 8 | i3[g6 + 102 | 0] << 16 | i3[g6 + 103 | 0] << 24, U4 = i3[g6 + 40 | 0] | i3[g6 + 41 | 0] << 8 | i3[g6 + 42 | 0] << 16 | i3[g6 + 43 | 0] << 24, v5 = i3[g6 + 88 | 0] | i3[g6 + 89 | 0] << 8 | i3[g6 + 90 | 0] << 16 | i3[g6 + 91 | 0] << 24, _4 = i3[I7 + 24 | 0] | i3[I7 + 25 | 0] << 8 | i3[I7 + 26 | 0] << 16 | i3[I7 + 27 | 0] << 24, p4 = i3[g6 + 120 | 0] | i3[g6 + 121 | 0] << 8 | i3[g6 + 122 | 0] << 16 | i3[g6 + 123 | 0] << 24, c4 = i3[g6 + 104 | 0] | i3[g6 + 105 | 0] << 8 | i3[g6 + 106 | 0] << 16 | i3[g6 + 107 | 0] << 24, H4 = i3[0 | I7] | i3[I7 + 1 | 0] << 8 | i3[I7 + 2 | 0] << 16 | i3[I7 + 3 | 0] << 24, Q4 = (D4 = i3[g6 + 44 | 0] | i3[g6 + 45 | 0] << 8 | i3[g6 + 46 | 0] << 16 | i3[g6 + 47 | 0] << 24) ^ (a4 = i3[g6 + 108 | 0] | i3[g6 + 109 | 0] << 8 | i3[g6 + 110 | 0] << 16 | i3[g6 + 111 | 0] << 24) & (i3[g6 + 124 | 0] | i3[g6 + 125 | 0] << 8 | i3[g6 + 126 | 0] << 16 | i3[g6 + 127 | 0] << 24) ^ (i3[g6 + 92 | 0] | i3[g6 + 93 | 0] << 8 | i3[g6 + 94 | 0] << 16 | i3[g6 + 95 | 0] << 24) ^ (i3[I7 + 28 | 0] | i3[I7 + 29 | 0] << 8 | i3[I7 + 30 | 0] << 16 | i3[I7 + 31 | 0] << 24), C3[A8 + 28 | 0] = Q4, C3[A8 + 29 | 0] = Q4 >>> 8, C3[A8 + 30 | 0] = Q4 >>> 16, C3[A8 + 31 | 0] = Q4 >>> 24, v5 = U4 ^ c4 & p4 ^ v5 ^ _4, C3[A8 + 24 | 0] = v5, C3[A8 + 25 | 0] = v5 >>> 8, C3[A8 + 26 | 0] = v5 >>> 16, C3[A8 + 27 | 0] = v5 >>> 24, P4 = Y4 ^ o4 & K4 ^ P4 ^ N4, C3[A8 + 20 | 0] = P4, C3[A8 + 21 | 0] = P4 >>> 8, C3[A8 + 22 | 0] = P4 >>> 16, C3[A8 + 23 | 0] = P4 >>> 24, b4 = J4 ^ G4 & M4 ^ b4 ^ S4, C3[A8 + 16 | 0] = b4, C3[A8 + 17 | 0] = b4 >>> 8, C3[A8 + 18 | 0] = b4 >>> 16, C3[A8 + 19 | 0] = b4 >>> 24, d4 = F4 & D4 ^ d4 ^ s4 ^ a4, C3[A8 + 12 | 0] = d4, C3[A8 + 13 | 0] = d4 >>> 8, C3[A8 + 14 | 0] = d4 >>> 16, C3[A8 + 15 | 0] = d4 >>> 24, U4 = U4 & n4 ^ h4 ^ k4 ^ c4, C3[A8 + 8 | 0] = U4, C3[A8 + 9 | 0] = U4 >>> 8, C3[A8 + 10 | 0] = U4 >>> 16, C3[A8 + 11 | 0] = U4 >>> 24, Y4 = Y4 & t4 ^ e4 ^ w4 ^ o4, C3[A8 + 4 | 0] = Y4, C3[A8 + 5 | 0] = Y4 >>> 8, C3[A8 + 6 | 0] = Y4 >>> 16, C3[A8 + 7 | 0] = Y4 >>> 24, J4 = G4 ^ J4 & f4 ^ y4 ^ H4, C3[0 | A8] = J4, C3[A8 + 1 | 0] = J4 >>> 8, C3[A8 + 2 | 0] = J4 >>> 16, C3[A8 + 3 | 0] = J4 >>> 24, A8 = E3[g6 + 124 >> 2], E3[B4 + 280 >> 2] = E3[g6 + 120 >> 2], E3[B4 + 284 >> 2] = A8, A8 = E3[g6 + 116 >> 2], E3[B4 + 272 >> 2] = E3[g6 + 112 >> 2], E3[B4 + 276 >> 2] = A8, A8 = E3[g6 + 108 >> 2], E3[B4 + 248 >> 2] = E3[g6 + 104 >> 2], E3[B4 + 252 >> 2] = A8, A8 = E3[g6 + 100 >> 2], E3[B4 + 240 >> 2] = E3[g6 + 96 >> 2], E3[B4 + 244 >> 2] = A8, A8 = E3[g6 + 124 >> 2], E3[B4 + 232 >> 2] = E3[g6 + 120 >> 2], E3[B4 + 236 >> 2] = A8, A8 = E3[g6 + 116 >> 2], E3[B4 + 224 >> 2] = E3[g6 + 112 >> 2], E3[B4 + 228 >> 2] = A8, aA(I7 = B4 + 256 | 0, B4 + 240 | 0, B4 + 224 | 0), A8 = E3[B4 + 268 >> 2], E3[g6 + 120 >> 2] = E3[B4 + 264 >> 2], E3[g6 + 124 >> 2] = A8, A8 = E3[B4 + 260 >> 2], E3[g6 + 112 >> 2] = E3[B4 + 256 >> 2], E3[g6 + 116 >> 2] = A8, A8 = E3[g6 + 92 >> 2], E3[B4 + 216 >> 2] = E3[g6 + 88 >> 2], E3[B4 + 220 >> 2] = A8, A8 = E3[g6 + 84 >> 2], E3[B4 + 208 >> 2] = E3[g6 + 80 >> 2], E3[B4 + 212 >> 2] = A8, A8 = E3[g6 + 108 >> 2], E3[B4 + 200 >> 2] = E3[g6 + 104 >> 2], E3[B4 + 204 >> 2] = A8, A8 = E3[g6 + 100 >> 2], E3[B4 + 192 >> 2] = E3[g6 + 96 >> 2], E3[B4 + 196 >> 2] = A8, aA(I7, B4 + 208 | 0, B4 + 192 | 0), A8 = E3[B4 + 268 >> 2], E3[g6 + 104 >> 2] = E3[B4 + 264 >> 2], E3[g6 + 108 >> 2] = A8, A8 = E3[B4 + 260 >> 2], E3[g6 + 96 >> 2] = E3[B4 + 256 >> 2], E3[g6 + 100 >> 2] = A8, A8 = E3[g6 + 76 >> 2], E3[B4 + 184 >> 2] = E3[g6 + 72 >> 2], E3[B4 + 188 >> 2] = A8, G4 = E3[4 + (A8 = g6 - -64 | 0) >> 2], E3[B4 + 176 >> 2] = E3[A8 >> 2], E3[B4 + 180 >> 2] = G4, G4 = E3[g6 + 92 >> 2], E3[B4 + 168 >> 2] = E3[g6 + 88 >> 2], E3[B4 + 172 >> 2] = G4, G4 = E3[g6 + 84 >> 2], E3[B4 + 160 >> 2] = E3[g6 + 80 >> 2], E3[B4 + 164 >> 2] = G4, aA(I7, B4 + 176 | 0, B4 + 160 | 0), G4 = E3[B4 + 268 >> 2], E3[g6 + 88 >> 2] = E3[B4 + 264 >> 2], E3[g6 + 92 >> 2] = G4, G4 = E3[B4 + 260 >> 2], E3[g6 + 80 >> 2] = E3[B4 + 256 >> 2], E3[g6 + 84 >> 2] = G4, G4 = E3[g6 + 60 >> 2], E3[B4 + 152 >> 2] = E3[g6 + 56 >> 2], E3[B4 + 156 >> 2] = G4, G4 = E3[g6 + 52 >> 2], E3[B4 + 144 >> 2] = E3[g6 + 48 >> 2], E3[B4 + 148 >> 2] = G4, G4 = E3[g6 + 76 >> 2], E3[B4 + 136 >> 2] = E3[g6 + 72 >> 2], E3[B4 + 140 >> 2] = G4, G4 = E3[A8 + 4 >> 2], E3[B4 + 128 >> 2] = E3[A8 >> 2], E3[B4 + 132 >> 2] = G4, aA(I7, B4 + 144 | 0, B4 + 128 | 0), G4 = E3[B4 + 268 >> 2], E3[g6 + 72 >> 2] = E3[B4 + 264 >> 2], E3[g6 + 76 >> 2] = G4, G4 = E3[B4 + 260 >> 2], E3[A8 >> 2] = E3[B4 + 256 >> 2], E3[A8 + 4 >> 2] = G4, G4 = E3[g6 + 44 >> 2], E3[B4 + 120 >> 2] = E3[g6 + 40 >> 2], E3[B4 + 124 >> 2] = G4, G4 = E3[g6 + 36 >> 2], E3[B4 + 112 >> 2] = E3[g6 + 32 >> 2], E3[B4 + 116 >> 2] = G4, G4 = E3[g6 + 60 >> 2], E3[B4 + 104 >> 2] = E3[g6 + 56 >> 2], E3[B4 + 108 >> 2] = G4, G4 = E3[g6 + 52 >> 2], E3[B4 + 96 >> 2] = E3[g6 + 48 >> 2], E3[B4 + 100 >> 2] = G4, aA(I7, B4 + 112 | 0, B4 + 96 | 0), G4 = E3[B4 + 268 >> 2], E3[g6 + 56 >> 2] = E3[B4 + 264 >> 2], E3[g6 + 60 >> 2] = G4, G4 = E3[B4 + 260 >> 2], E3[g6 + 48 >> 2] = E3[B4 + 256 >> 2], E3[g6 + 52 >> 2] = G4, G4 = E3[g6 + 28 >> 2], E3[B4 + 88 >> 2] = E3[g6 + 24 >> 2], E3[B4 + 92 >> 2] = G4, G4 = E3[g6 + 20 >> 2], E3[B4 + 80 >> 2] = E3[g6 + 16 >> 2], E3[B4 + 84 >> 2] = G4, G4 = E3[g6 + 44 >> 2], E3[B4 + 72 >> 2] = E3[g6 + 40 >> 2], E3[B4 + 76 >> 2] = G4, G4 = E3[g6 + 36 >> 2], E3[B4 + 64 >> 2] = E3[g6 + 32 >> 2], E3[B4 + 68 >> 2] = G4, aA(I7, B4 + 80 | 0, B4 - -64 | 0), G4 = E3[B4 + 268 >> 2], E3[g6 + 40 >> 2] = E3[B4 + 264 >> 2], E3[g6 + 44 >> 2] = G4, G4 = E3[B4 + 260 >> 2], E3[g6 + 32 >> 2] = E3[B4 + 256 >> 2], E3[g6 + 36 >> 2] = G4, G4 = E3[g6 + 12 >> 2], E3[B4 + 56 >> 2] = E3[g6 + 8 >> 2], E3[B4 + 60 >> 2] = G4, G4 = E3[g6 + 4 >> 2], E3[B4 + 48 >> 2] = E3[g6 >> 2], E3[B4 + 52 >> 2] = G4, G4 = E3[g6 + 28 >> 2], E3[B4 + 40 >> 2] = E3[g6 + 24 >> 2], E3[B4 + 44 >> 2] = G4, G4 = E3[g6 + 20 >> 2], E3[B4 + 32 >> 2] = E3[g6 + 16 >> 2], E3[B4 + 36 >> 2] = G4, aA(I7, B4 + 48 | 0, B4 + 32 | 0), G4 = E3[B4 + 268 >> 2], E3[g6 + 24 >> 2] = E3[B4 + 264 >> 2], E3[g6 + 28 >> 2] = G4, G4 = E3[B4 + 260 >> 2], E3[g6 + 16 >> 2] = E3[B4 + 256 >> 2], E3[g6 + 20 >> 2] = G4, G4 = E3[B4 + 284 >> 2], E3[B4 + 24 >> 2] = E3[B4 + 280 >> 2], E3[B4 + 28 >> 2] = G4, G4 = E3[B4 + 276 >> 2], E3[B4 + 16 >> 2] = E3[B4 + 272 >> 2], E3[B4 + 20 >> 2] = G4, G4 = E3[g6 + 12 >> 2], E3[B4 + 8 >> 2] = E3[g6 + 8 >> 2], E3[B4 + 12 >> 2] = G4, G4 = E3[g6 + 4 >> 2], E3[B4 >> 2] = E3[g6 >> 2], E3[B4 + 4 >> 2] = G4, aA(I7, B4 + 16 | 0, B4), I7 = E3[B4 + 268 >> 2], E3[g6 + 8 >> 2] = E3[B4 + 264 >> 2], E3[g6 + 12 >> 2] = I7, I7 = E3[B4 + 260 >> 2], E3[g6 >> 2] = E3[B4 + 256 >> 2], E3[g6 + 4 >> 2] = I7, E3[g6 + 12 >> 2] = d4 ^ (i3[g6 + 12 | 0] | i3[g6 + 13 | 0] << 8 | i3[g6 + 14 | 0] << 16 | i3[g6 + 15 | 0] << 24), E3[g6 + 8 >> 2] = U4 ^ (i3[g6 + 8 | 0] | i3[g6 + 9 | 0] << 8 | i3[g6 + 10 | 0] << 16 | i3[g6 + 11 | 0] << 24), E3[g6 + 4 >> 2] = Y4 ^ (i3[g6 + 4 | 0] | i3[g6 + 5 | 0] << 8 | i3[g6 + 6 | 0] << 16 | i3[g6 + 7 | 0] << 24), E3[g6 >> 2] = J4 ^ (i3[0 | g6] | i3[g6 + 1 | 0] << 8 | i3[g6 + 2 | 0] << 16 | i3[g6 + 3 | 0] << 24), E3[A8 >> 2] = b4 ^ (i3[0 | A8] | i3[A8 + 1 | 0] << 8 | i3[A8 + 2 | 0] << 16 | i3[A8 + 3 | 0] << 24), E3[g6 + 68 >> 2] = P4 ^ (i3[g6 + 68 | 0] | i3[g6 + 69 | 0] << 8 | i3[g6 + 70 | 0] << 16 | i3[g6 + 71 | 0] << 24), E3[g6 + 72 >> 2] = v5 ^ (i3[g6 + 72 | 0] | i3[g6 + 73 | 0] << 8 | i3[g6 + 74 | 0] << 16 | i3[g6 + 75 | 0] << 24), E3[g6 + 76 >> 2] = Q4 ^ (i3[g6 + 76 | 0] | i3[g6 + 77 | 0] << 8 | i3[g6 + 78 | 0] << 16 | i3[g6 + 79 | 0] << 24), r3 = B4 + 288 | 0;
                    }
                    function G3(A8, I7, g6) {
                      var B4, Q4, o4, c4, D4, a4, y4, f4, e4, w4, t4, h4, k4, n4, s4, F4, S4, M4, N4, K4, _4, p4, H4, G4, J4, Y4, U4, d4, b4, P4, v5 = 0;
                      r3 = B4 = r3 - 288 | 0, S4 = i3[g6 + 16 | 0] | i3[g6 + 17 | 0] << 8 | i3[g6 + 18 | 0] << 16 | i3[g6 + 19 | 0] << 24, M4 = i3[g6 + 48 | 0] | i3[g6 + 49 | 0] << 8 | i3[g6 + 50 | 0] << 16 | i3[g6 + 51 | 0] << 24, Q4 = i3[I7 + 4 | 0] | i3[I7 + 5 | 0] << 8 | i3[I7 + 6 | 0] << 16 | i3[I7 + 7 | 0] << 24, N4 = i3[g6 + 20 | 0] | i3[g6 + 21 | 0] << 8 | i3[g6 + 22 | 0] << 16 | i3[g6 + 23 | 0] << 24, K4 = i3[g6 + 52 | 0] | i3[g6 + 53 | 0] << 8 | i3[g6 + 54 | 0] << 16 | i3[g6 + 55 | 0] << 24, o4 = i3[I7 + 8 | 0] | i3[I7 + 9 | 0] << 8 | i3[I7 + 10 | 0] << 16 | i3[I7 + 11 | 0] << 24, _4 = i3[g6 + 24 | 0] | i3[g6 + 25 | 0] << 8 | i3[g6 + 26 | 0] << 16 | i3[g6 + 27 | 0] << 24, p4 = i3[g6 + 56 | 0] | i3[g6 + 57 | 0] << 8 | i3[g6 + 58 | 0] << 16 | i3[g6 + 59 | 0] << 24, c4 = i3[I7 + 12 | 0] | i3[I7 + 13 | 0] << 8 | i3[I7 + 14 | 0] << 16 | i3[I7 + 15 | 0] << 24, H4 = i3[g6 + 28 | 0] | i3[g6 + 29 | 0] << 8 | i3[g6 + 30 | 0] << 16 | i3[g6 + 31 | 0] << 24, G4 = i3[g6 + 60 | 0] | i3[g6 + 61 | 0] << 8 | i3[g6 + 62 | 0] << 16 | i3[g6 + 63 | 0] << 24, v5 = i3[g6 + 32 | 0] | i3[g6 + 33 | 0] << 8 | i3[g6 + 34 | 0] << 16 | i3[g6 + 35 | 0] << 24, D4 = i3[I7 + 16 | 0] | i3[I7 + 17 | 0] << 8 | i3[I7 + 18 | 0] << 16 | i3[I7 + 19 | 0] << 24, J4 = i3[g6 + 80 | 0] | i3[g6 + 81 | 0] << 8 | i3[g6 + 82 | 0] << 16 | i3[g6 + 83 | 0] << 24, Y4 = i3[g6 + 112 | 0] | i3[g6 + 113 | 0] << 8 | i3[g6 + 114 | 0] << 16 | i3[g6 + 115 | 0] << 24, a4 = i3[g6 + 96 | 0] | i3[g6 + 97 | 0] << 8 | i3[g6 + 98 | 0] << 16 | i3[g6 + 99 | 0] << 24, y4 = i3[g6 + 36 | 0] | i3[g6 + 37 | 0] << 8 | i3[g6 + 38 | 0] << 16 | i3[g6 + 39 | 0] << 24, f4 = i3[I7 + 20 | 0] | i3[I7 + 21 | 0] << 8 | i3[I7 + 22 | 0] << 16 | i3[I7 + 23 | 0] << 24, U4 = i3[g6 + 84 | 0] | i3[g6 + 85 | 0] << 8 | i3[g6 + 86 | 0] << 16 | i3[g6 + 87 | 0] << 24, d4 = i3[g6 + 116 | 0] | i3[g6 + 117 | 0] << 8 | i3[g6 + 118 | 0] << 16 | i3[g6 + 119 | 0] << 24, e4 = i3[g6 + 100 | 0] | i3[g6 + 101 | 0] << 8 | i3[g6 + 102 | 0] << 16 | i3[g6 + 103 | 0] << 24, w4 = i3[g6 + 40 | 0] | i3[g6 + 41 | 0] << 8 | i3[g6 + 42 | 0] << 16 | i3[g6 + 43 | 0] << 24, t4 = i3[I7 + 24 | 0] | i3[I7 + 25 | 0] << 8 | i3[I7 + 26 | 0] << 16 | i3[I7 + 27 | 0] << 24, b4 = i3[g6 + 88 | 0] | i3[g6 + 89 | 0] << 8 | i3[g6 + 90 | 0] << 16 | i3[g6 + 91 | 0] << 24, P4 = i3[g6 + 120 | 0] | i3[g6 + 121 | 0] << 8 | i3[g6 + 122 | 0] << 16 | i3[g6 + 123 | 0] << 24, h4 = i3[g6 + 104 | 0] | i3[g6 + 105 | 0] << 8 | i3[g6 + 106 | 0] << 16 | i3[g6 + 107 | 0] << 24, k4 = i3[0 | I7] | i3[I7 + 1 | 0] << 8 | i3[I7 + 2 | 0] << 16 | i3[I7 + 3 | 0] << 24, I7 = (n4 = i3[g6 + 44 | 0] | i3[g6 + 45 | 0] << 8 | i3[g6 + 46 | 0] << 16 | i3[g6 + 47 | 0] << 24) ^ (s4 = i3[I7 + 28 | 0] | i3[I7 + 29 | 0] << 8 | i3[I7 + 30 | 0] << 16 | i3[I7 + 31 | 0] << 24) ^ (F4 = i3[g6 + 108 | 0] | i3[g6 + 109 | 0] << 8 | i3[g6 + 110 | 0] << 16 | i3[g6 + 111 | 0] << 24) & (i3[g6 + 124 | 0] | i3[g6 + 125 | 0] << 8 | i3[g6 + 126 | 0] << 16 | i3[g6 + 127 | 0] << 24) ^ (i3[g6 + 92 | 0] | i3[g6 + 93 | 0] << 8 | i3[g6 + 94 | 0] << 16 | i3[g6 + 95 | 0] << 24), C3[A8 + 28 | 0] = I7, C3[A8 + 29 | 0] = I7 >>> 8, C3[A8 + 30 | 0] = I7 >>> 16, C3[A8 + 31 | 0] = I7 >>> 24, I7 = h4 & P4 ^ b4 ^ t4 ^ w4, C3[A8 + 24 | 0] = I7, C3[A8 + 25 | 0] = I7 >>> 8, C3[A8 + 26 | 0] = I7 >>> 16, C3[A8 + 27 | 0] = I7 >>> 24, I7 = e4 & d4 ^ U4 ^ f4 ^ y4, C3[A8 + 20 | 0] = I7, C3[A8 + 21 | 0] = I7 >>> 8, C3[A8 + 22 | 0] = I7 >>> 16, C3[A8 + 23 | 0] = I7 >>> 24, I7 = v5 ^ a4 & Y4 ^ J4 ^ D4, C3[A8 + 16 | 0] = I7, C3[A8 + 17 | 0] = I7 >>> 8, C3[A8 + 18 | 0] = I7 >>> 16, C3[A8 + 19 | 0] = I7 >>> 24, I7 = G4 & n4 ^ H4 ^ c4 ^ F4, C3[A8 + 12 | 0] = I7, C3[A8 + 13 | 0] = I7 >>> 8, C3[A8 + 14 | 0] = I7 >>> 16, C3[A8 + 15 | 0] = I7 >>> 24, I7 = w4 & p4 ^ _4 ^ o4 ^ h4, C3[A8 + 8 | 0] = I7, C3[A8 + 9 | 0] = I7 >>> 8, C3[A8 + 10 | 0] = I7 >>> 16, C3[A8 + 11 | 0] = I7 >>> 24, I7 = y4 & K4 ^ N4 ^ Q4 ^ e4, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, I7 = v5 & M4 ^ S4 ^ k4 ^ a4, C3[0 | A8] = I7, C3[A8 + 1 | 0] = I7 >>> 8, C3[A8 + 2 | 0] = I7 >>> 16, C3[A8 + 3 | 0] = I7 >>> 24, A8 = E3[g6 + 124 >> 2], E3[B4 + 280 >> 2] = E3[g6 + 120 >> 2], E3[B4 + 284 >> 2] = A8, A8 = E3[g6 + 116 >> 2], E3[B4 + 272 >> 2] = E3[g6 + 112 >> 2], E3[B4 + 276 >> 2] = A8, A8 = E3[g6 + 108 >> 2], E3[B4 + 248 >> 2] = E3[g6 + 104 >> 2], E3[B4 + 252 >> 2] = A8, A8 = E3[g6 + 100 >> 2], E3[B4 + 240 >> 2] = E3[g6 + 96 >> 2], E3[B4 + 244 >> 2] = A8, A8 = E3[g6 + 124 >> 2], E3[B4 + 232 >> 2] = E3[g6 + 120 >> 2], E3[B4 + 236 >> 2] = A8, A8 = E3[g6 + 116 >> 2], E3[B4 + 224 >> 2] = E3[g6 + 112 >> 2], E3[B4 + 228 >> 2] = A8, aA(I7 = B4 + 256 | 0, B4 + 240 | 0, B4 + 224 | 0), A8 = E3[B4 + 268 >> 2], E3[g6 + 120 >> 2] = E3[B4 + 264 >> 2], E3[g6 + 124 >> 2] = A8, A8 = E3[B4 + 260 >> 2], E3[g6 + 112 >> 2] = E3[B4 + 256 >> 2], E3[g6 + 116 >> 2] = A8, A8 = E3[g6 + 92 >> 2], E3[B4 + 216 >> 2] = E3[g6 + 88 >> 2], E3[B4 + 220 >> 2] = A8, A8 = E3[g6 + 84 >> 2], E3[B4 + 208 >> 2] = E3[g6 + 80 >> 2], E3[B4 + 212 >> 2] = A8, A8 = E3[g6 + 108 >> 2], E3[B4 + 200 >> 2] = E3[g6 + 104 >> 2], E3[B4 + 204 >> 2] = A8, A8 = E3[g6 + 100 >> 2], E3[B4 + 192 >> 2] = E3[g6 + 96 >> 2], E3[B4 + 196 >> 2] = A8, aA(I7, B4 + 208 | 0, B4 + 192 | 0), A8 = E3[B4 + 268 >> 2], E3[g6 + 104 >> 2] = E3[B4 + 264 >> 2], E3[g6 + 108 >> 2] = A8, A8 = E3[B4 + 260 >> 2], E3[g6 + 96 >> 2] = E3[B4 + 256 >> 2], E3[g6 + 100 >> 2] = A8, A8 = E3[g6 + 76 >> 2], E3[B4 + 184 >> 2] = E3[g6 + 72 >> 2], E3[B4 + 188 >> 2] = A8, v5 = E3[4 + (A8 = g6 - -64 | 0) >> 2], E3[B4 + 176 >> 2] = E3[A8 >> 2], E3[B4 + 180 >> 2] = v5, v5 = E3[g6 + 92 >> 2], E3[B4 + 168 >> 2] = E3[g6 + 88 >> 2], E3[B4 + 172 >> 2] = v5, v5 = E3[g6 + 84 >> 2], E3[B4 + 160 >> 2] = E3[g6 + 80 >> 2], E3[B4 + 164 >> 2] = v5, aA(I7, B4 + 176 | 0, B4 + 160 | 0), v5 = E3[B4 + 268 >> 2], E3[g6 + 88 >> 2] = E3[B4 + 264 >> 2], E3[g6 + 92 >> 2] = v5, v5 = E3[B4 + 260 >> 2], E3[g6 + 80 >> 2] = E3[B4 + 256 >> 2], E3[g6 + 84 >> 2] = v5, v5 = E3[g6 + 60 >> 2], E3[B4 + 152 >> 2] = E3[g6 + 56 >> 2], E3[B4 + 156 >> 2] = v5, v5 = E3[g6 + 52 >> 2], E3[B4 + 144 >> 2] = E3[g6 + 48 >> 2], E3[B4 + 148 >> 2] = v5, v5 = E3[g6 + 76 >> 2], E3[B4 + 136 >> 2] = E3[g6 + 72 >> 2], E3[B4 + 140 >> 2] = v5, v5 = E3[A8 + 4 >> 2], E3[B4 + 128 >> 2] = E3[A8 >> 2], E3[B4 + 132 >> 2] = v5, aA(I7, B4 + 144 | 0, B4 + 128 | 0), v5 = E3[B4 + 268 >> 2], E3[g6 + 72 >> 2] = E3[B4 + 264 >> 2], E3[g6 + 76 >> 2] = v5, v5 = E3[B4 + 260 >> 2], E3[A8 >> 2] = E3[B4 + 256 >> 2], E3[A8 + 4 >> 2] = v5, v5 = E3[g6 + 44 >> 2], E3[B4 + 120 >> 2] = E3[g6 + 40 >> 2], E3[B4 + 124 >> 2] = v5, v5 = E3[g6 + 36 >> 2], E3[B4 + 112 >> 2] = E3[g6 + 32 >> 2], E3[B4 + 116 >> 2] = v5, v5 = E3[g6 + 60 >> 2], E3[B4 + 104 >> 2] = E3[g6 + 56 >> 2], E3[B4 + 108 >> 2] = v5, v5 = E3[g6 + 52 >> 2], E3[B4 + 96 >> 2] = E3[g6 + 48 >> 2], E3[B4 + 100 >> 2] = v5, aA(I7, B4 + 112 | 0, B4 + 96 | 0), v5 = E3[B4 + 268 >> 2], E3[g6 + 56 >> 2] = E3[B4 + 264 >> 2], E3[g6 + 60 >> 2] = v5, v5 = E3[B4 + 260 >> 2], E3[g6 + 48 >> 2] = E3[B4 + 256 >> 2], E3[g6 + 52 >> 2] = v5, v5 = E3[g6 + 28 >> 2], E3[B4 + 88 >> 2] = E3[g6 + 24 >> 2], E3[B4 + 92 >> 2] = v5, v5 = E3[g6 + 20 >> 2], E3[B4 + 80 >> 2] = E3[g6 + 16 >> 2], E3[B4 + 84 >> 2] = v5, v5 = E3[g6 + 44 >> 2], E3[B4 + 72 >> 2] = E3[g6 + 40 >> 2], E3[B4 + 76 >> 2] = v5, v5 = E3[g6 + 36 >> 2], E3[B4 + 64 >> 2] = E3[g6 + 32 >> 2], E3[B4 + 68 >> 2] = v5, aA(I7, B4 + 80 | 0, B4 - -64 | 0), v5 = E3[B4 + 268 >> 2], E3[g6 + 40 >> 2] = E3[B4 + 264 >> 2], E3[g6 + 44 >> 2] = v5, v5 = E3[B4 + 260 >> 2], E3[g6 + 32 >> 2] = E3[B4 + 256 >> 2], E3[g6 + 36 >> 2] = v5, v5 = E3[g6 + 12 >> 2], E3[B4 + 56 >> 2] = E3[g6 + 8 >> 2], E3[B4 + 60 >> 2] = v5, v5 = E3[g6 + 4 >> 2], E3[B4 + 48 >> 2] = E3[g6 >> 2], E3[B4 + 52 >> 2] = v5, v5 = E3[g6 + 28 >> 2], E3[B4 + 40 >> 2] = E3[g6 + 24 >> 2], E3[B4 + 44 >> 2] = v5, v5 = E3[g6 + 20 >> 2], E3[B4 + 32 >> 2] = E3[g6 + 16 >> 2], E3[B4 + 36 >> 2] = v5, aA(I7, B4 + 48 | 0, B4 + 32 | 0), v5 = E3[B4 + 268 >> 2], E3[g6 + 24 >> 2] = E3[B4 + 264 >> 2], E3[g6 + 28 >> 2] = v5, v5 = E3[B4 + 260 >> 2], E3[g6 + 16 >> 2] = E3[B4 + 256 >> 2], E3[g6 + 20 >> 2] = v5, v5 = E3[B4 + 284 >> 2], E3[B4 + 24 >> 2] = E3[B4 + 280 >> 2], E3[B4 + 28 >> 2] = v5, v5 = E3[B4 + 276 >> 2], E3[B4 + 16 >> 2] = E3[B4 + 272 >> 2], E3[B4 + 20 >> 2] = v5, v5 = E3[g6 + 12 >> 2], E3[B4 + 8 >> 2] = E3[g6 + 8 >> 2], E3[B4 + 12 >> 2] = v5, v5 = E3[g6 + 4 >> 2], E3[B4 >> 2] = E3[g6 >> 2], E3[B4 + 4 >> 2] = v5, aA(I7, B4 + 16 | 0, B4), I7 = E3[B4 + 268 >> 2], E3[g6 + 8 >> 2] = E3[B4 + 264 >> 2], E3[g6 + 12 >> 2] = I7, I7 = E3[B4 + 260 >> 2], E3[g6 >> 2] = E3[B4 + 256 >> 2], E3[g6 + 4 >> 2] = I7, E3[g6 + 12 >> 2] = (i3[g6 + 12 | 0] | i3[g6 + 13 | 0] << 8 | i3[g6 + 14 | 0] << 16 | i3[g6 + 15 | 0] << 24) ^ c4, E3[g6 + 8 >> 2] = (i3[g6 + 8 | 0] | i3[g6 + 9 | 0] << 8 | i3[g6 + 10 | 0] << 16 | i3[g6 + 11 | 0] << 24) ^ o4, E3[g6 + 4 >> 2] = (i3[g6 + 4 | 0] | i3[g6 + 5 | 0] << 8 | i3[g6 + 6 | 0] << 16 | i3[g6 + 7 | 0] << 24) ^ Q4, E3[g6 >> 2] = (i3[0 | g6] | i3[g6 + 1 | 0] << 8 | i3[g6 + 2 | 0] << 16 | i3[g6 + 3 | 0] << 24) ^ k4, E3[A8 >> 2] = (i3[0 | A8] | i3[A8 + 1 | 0] << 8 | i3[A8 + 2 | 0] << 16 | i3[A8 + 3 | 0] << 24) ^ D4, E3[g6 + 68 >> 2] = (i3[g6 + 68 | 0] | i3[g6 + 69 | 0] << 8 | i3[g6 + 70 | 0] << 16 | i3[g6 + 71 | 0] << 24) ^ f4, E3[g6 + 72 >> 2] = (i3[g6 + 72 | 0] | i3[g6 + 73 | 0] << 8 | i3[g6 + 74 | 0] << 16 | i3[g6 + 75 | 0] << 24) ^ t4, E3[g6 + 76 >> 2] = s4 ^ (i3[g6 + 76 | 0] | i3[g6 + 77 | 0] << 8 | i3[g6 + 78 | 0] << 16 | i3[g6 + 79 | 0] << 24), r3 = B4 + 288 | 0;
                    }
                    function J3(A8, I7, g6, B4, Q4) {
                      var o4, c4 = 0, D4 = 0, a4 = 0, y4 = 0, f4 = 0, e4 = 0, w4 = 0, t4 = 0, h4 = 0, k4 = 0, n4 = 0, s4 = 0, F4 = 0, S4 = 0, M4 = 0, N4 = 0;
                      for (r3 = o4 = r3 - 224 | 0, k4 = (i3[Q4 + 60 | 0] | i3[Q4 + 61 | 0] << 8 | i3[Q4 + 62 | 0] << 16 | i3[Q4 + 63 | 0] << 24) ^ B4 >>> 29, n4 = (i3[Q4 + 56 | 0] | i3[Q4 + 57 | 0] << 8 | i3[Q4 + 58 | 0] << 16 | i3[Q4 + 59 | 0] << 24) ^ B4 << 3, e4 = (i3[Q4 + 52 | 0] | i3[Q4 + 53 | 0] << 8 | i3[Q4 + 54 | 0] << 16 | i3[Q4 + 55 | 0] << 24) ^ g6 >>> 29, t4 = (i3[0 | (c4 = Q4 + 48 | 0)] | i3[c4 + 1 | 0] << 8 | i3[c4 + 2 | 0] << 16 | i3[c4 + 3 | 0] << 24) ^ g6 << 3, D4 = Q4 + 16 | 0, a4 = Q4 + 32 | 0, y4 = Q4 - -64 | 0, f4 = Q4 + 80 | 0; g6 = E3[f4 + 12 >> 2], E3[o4 + 216 >> 2] = E3[f4 + 8 >> 2], E3[o4 + 220 >> 2] = g6, g6 = E3[f4 + 4 >> 2], E3[o4 + 208 >> 2] = E3[f4 >> 2], E3[o4 + 212 >> 2] = g6, g6 = E3[y4 + 12 >> 2], E3[o4 + 184 >> 2] = E3[y4 + 8 >> 2], E3[o4 + 188 >> 2] = g6, g6 = E3[y4 + 4 >> 2], E3[o4 + 176 >> 2] = E3[y4 >> 2], E3[o4 + 180 >> 2] = g6, g6 = E3[f4 + 12 >> 2], E3[o4 + 168 >> 2] = E3[f4 + 8 >> 2], E3[o4 + 172 >> 2] = g6, g6 = E3[f4 + 4 >> 2], E3[o4 + 160 >> 2] = E3[f4 >> 2], E3[o4 + 164 >> 2] = g6, aA(B4 = o4 + 192 | 0, o4 + 176 | 0, o4 + 160 | 0), g6 = E3[o4 + 204 >> 2], E3[f4 + 8 >> 2] = E3[o4 + 200 >> 2], E3[f4 + 12 >> 2] = g6, g6 = E3[o4 + 196 >> 2], E3[f4 >> 2] = E3[o4 + 192 >> 2], E3[f4 + 4 >> 2] = g6, g6 = E3[c4 + 12 >> 2], E3[o4 + 152 >> 2] = E3[c4 + 8 >> 2], E3[o4 + 156 >> 2] = g6, g6 = E3[c4 + 4 >> 2], E3[o4 + 144 >> 2] = E3[c4 >> 2], E3[o4 + 148 >> 2] = g6, g6 = E3[y4 + 12 >> 2], E3[o4 + 136 >> 2] = E3[y4 + 8 >> 2], E3[o4 + 140 >> 2] = g6, g6 = E3[y4 + 4 >> 2], E3[o4 + 128 >> 2] = E3[y4 >> 2], E3[o4 + 132 >> 2] = g6, aA(B4, o4 + 144 | 0, o4 + 128 | 0), g6 = E3[o4 + 204 >> 2], E3[y4 + 8 >> 2] = E3[o4 + 200 >> 2], E3[y4 + 12 >> 2] = g6, g6 = E3[o4 + 196 >> 2], E3[y4 >> 2] = E3[o4 + 192 >> 2], E3[y4 + 4 >> 2] = g6, g6 = E3[a4 + 12 >> 2], E3[o4 + 120 >> 2] = E3[a4 + 8 >> 2], E3[o4 + 124 >> 2] = g6, g6 = E3[a4 + 4 >> 2], E3[o4 + 112 >> 2] = E3[a4 >> 2], E3[o4 + 116 >> 2] = g6, g6 = E3[c4 + 12 >> 2], E3[o4 + 104 >> 2] = E3[c4 + 8 >> 2], E3[o4 + 108 >> 2] = g6, g6 = E3[c4 + 4 >> 2], E3[o4 + 96 >> 2] = E3[c4 >> 2], E3[o4 + 100 >> 2] = g6, aA(B4, o4 + 112 | 0, o4 + 96 | 0), g6 = E3[o4 + 204 >> 2], E3[c4 + 8 >> 2] = E3[o4 + 200 >> 2], E3[c4 + 12 >> 2] = g6, g6 = E3[o4 + 196 >> 2], E3[c4 >> 2] = E3[o4 + 192 >> 2], E3[c4 + 4 >> 2] = g6, g6 = E3[D4 + 12 >> 2], E3[o4 + 88 >> 2] = E3[D4 + 8 >> 2], E3[o4 + 92 >> 2] = g6, g6 = E3[D4 + 4 >> 2], E3[o4 + 80 >> 2] = E3[D4 >> 2], E3[o4 + 84 >> 2] = g6, g6 = E3[a4 + 12 >> 2], E3[o4 + 72 >> 2] = E3[a4 + 8 >> 2], E3[o4 + 76 >> 2] = g6, g6 = E3[a4 + 4 >> 2], E3[o4 + 64 >> 2] = E3[a4 >> 2], E3[o4 + 68 >> 2] = g6, aA(B4, o4 + 80 | 0, o4 - -64 | 0), g6 = E3[o4 + 204 >> 2], E3[a4 + 8 >> 2] = E3[o4 + 200 >> 2], E3[a4 + 12 >> 2] = g6, g6 = E3[o4 + 196 >> 2], E3[a4 >> 2] = E3[o4 + 192 >> 2], E3[a4 + 4 >> 2] = g6, g6 = E3[Q4 + 12 >> 2], E3[o4 + 56 >> 2] = E3[Q4 + 8 >> 2], E3[o4 + 60 >> 2] = g6, g6 = E3[Q4 + 4 >> 2], E3[o4 + 48 >> 2] = E3[Q4 >> 2], E3[o4 + 52 >> 2] = g6, g6 = E3[D4 + 12 >> 2], E3[o4 + 40 >> 2] = E3[D4 + 8 >> 2], E3[o4 + 44 >> 2] = g6, g6 = E3[D4 + 4 >> 2], E3[o4 + 32 >> 2] = E3[D4 >> 2], E3[o4 + 36 >> 2] = g6, aA(B4, o4 + 48 | 0, o4 + 32 | 0), g6 = E3[o4 + 204 >> 2], E3[D4 + 8 >> 2] = E3[o4 + 200 >> 2], E3[D4 + 12 >> 2] = g6, g6 = E3[o4 + 196 >> 2], E3[D4 >> 2] = E3[o4 + 192 >> 2], E3[D4 + 4 >> 2] = g6, g6 = E3[o4 + 220 >> 2], E3[o4 + 24 >> 2] = E3[o4 + 216 >> 2], E3[o4 + 28 >> 2] = g6, g6 = E3[o4 + 212 >> 2], E3[o4 + 16 >> 2] = E3[o4 + 208 >> 2], E3[o4 + 20 >> 2] = g6, g6 = E3[Q4 + 12 >> 2], E3[o4 + 8 >> 2] = E3[Q4 + 8 >> 2], E3[o4 + 12 >> 2] = g6, g6 = E3[Q4 + 4 >> 2], E3[o4 >> 2] = E3[Q4 >> 2], E3[o4 + 4 >> 2] = g6, aA(B4, o4 + 16 | 0, o4), h4 = E3[o4 + 192 >> 2], B4 = E3[o4 + 196 >> 2], g6 = E3[o4 + 200 >> 2], s4 = k4 ^ E3[o4 + 204 >> 2], E3[Q4 + 12 >> 2] = s4, F4 = g6 ^ n4, E3[Q4 + 8 >> 2] = F4, S4 = B4 ^ e4, E3[Q4 + 4 >> 2] = S4, M4 = t4 ^ h4, E3[Q4 >> 2] = M4, 7 != (0 | (w4 = w4 + 1 | 0)); ) ;
                      A: {
                        I: {
                          g: {
                            if (g6 = I7 - 16 | 0) {
                              if (16 == (0 | g6)) break g;
                              break I;
                            }
                            N4 = i3[Q4 + 16 | 0] | i3[Q4 + 17 | 0] << 8 | i3[Q4 + 18 | 0] << 16 | i3[Q4 + 19 | 0] << 24, c4 = i3[Q4 + 48 | 0] | i3[Q4 + 49 | 0] << 8 | i3[Q4 + 50 | 0] << 16 | i3[Q4 + 51 | 0] << 24, D4 = i3[Q4 + 32 | 0] | i3[Q4 + 33 | 0] << 8 | i3[Q4 + 34 | 0] << 16 | i3[Q4 + 35 | 0] << 24, a4 = i3[Q4 + 80 | 0] | i3[Q4 + 81 | 0] << 8 | i3[Q4 + 82 | 0] << 16 | i3[Q4 + 83 | 0] << 24, y4 = i3[0 | (I7 = Q4 - -64 | 0)] | i3[I7 + 1 | 0] << 8 | i3[I7 + 2 | 0] << 16 | i3[I7 + 3 | 0] << 24, f4 = i3[Q4 + 20 | 0] | i3[Q4 + 21 | 0] << 8 | i3[Q4 + 22 | 0] << 16 | i3[Q4 + 23 | 0] << 24, k4 = i3[Q4 + 52 | 0] | i3[Q4 + 53 | 0] << 8 | i3[Q4 + 54 | 0] << 16 | i3[Q4 + 55 | 0] << 24, n4 = i3[Q4 + 36 | 0] | i3[Q4 + 37 | 0] << 8 | i3[Q4 + 38 | 0] << 16 | i3[Q4 + 39 | 0] << 24, e4 = i3[Q4 + 84 | 0] | i3[Q4 + 85 | 0] << 8 | i3[Q4 + 86 | 0] << 16 | i3[Q4 + 87 | 0] << 24, t4 = i3[Q4 + 68 | 0] | i3[Q4 + 69 | 0] << 8 | i3[Q4 + 70 | 0] << 16 | i3[Q4 + 71 | 0] << 24, h4 = i3[Q4 + 24 | 0] | i3[Q4 + 25 | 0] << 8 | i3[Q4 + 26 | 0] << 16 | i3[Q4 + 27 | 0] << 24, w4 = i3[Q4 + 56 | 0] | i3[Q4 + 57 | 0] << 8 | i3[Q4 + 58 | 0] << 16 | i3[Q4 + 59 | 0] << 24, B4 = i3[Q4 + 40 | 0] | i3[Q4 + 41 | 0] << 8 | i3[Q4 + 42 | 0] << 16 | i3[Q4 + 43 | 0] << 24, g6 = i3[Q4 + 88 | 0] | i3[Q4 + 89 | 0] << 8 | i3[Q4 + 90 | 0] << 16 | i3[Q4 + 91 | 0] << 24, I7 = i3[Q4 + 72 | 0] | i3[Q4 + 73 | 0] << 8 | i3[Q4 + 74 | 0] << 16 | i3[Q4 + 75 | 0] << 24, Q4 = s4 ^ (i3[Q4 + 28 | 0] | i3[Q4 + 29 | 0] << 8 | i3[Q4 + 30 | 0] << 16 | i3[Q4 + 31 | 0] << 24) ^ (i3[Q4 + 60 | 0] | i3[Q4 + 61 | 0] << 8 | i3[Q4 + 62 | 0] << 16 | i3[Q4 + 63 | 0] << 24) ^ (i3[Q4 + 44 | 0] | i3[Q4 + 45 | 0] << 8 | i3[Q4 + 46 | 0] << 16 | i3[Q4 + 47 | 0] << 24) ^ (i3[Q4 + 92 | 0] | i3[Q4 + 93 | 0] << 8 | i3[Q4 + 94 | 0] << 16 | i3[Q4 + 95 | 0] << 24) ^ (i3[Q4 + 76 | 0] | i3[Q4 + 77 | 0] << 8 | i3[Q4 + 78 | 0] << 16 | i3[Q4 + 79 | 0] << 24), C3[A8 + 12 | 0] = Q4, C3[A8 + 13 | 0] = Q4 >>> 8, C3[A8 + 14 | 0] = Q4 >>> 16, C3[A8 + 15 | 0] = Q4 >>> 24, I7 = F4 ^ h4 ^ I7 ^ g6 ^ B4 ^ w4, C3[A8 + 8 | 0] = I7, C3[A8 + 9 | 0] = I7 >>> 8, C3[A8 + 10 | 0] = I7 >>> 16, C3[A8 + 11 | 0] = I7 >>> 24, I7 = S4 ^ f4 ^ k4 ^ n4 ^ e4 ^ t4, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, I7 = M4 ^ N4 ^ c4 ^ D4 ^ a4 ^ y4, C3[0 | A8] = I7, C3[A8 + 1 | 0] = I7 >>> 8, C3[A8 + 2 | 0] = I7 >>> 16, C3[A8 + 3 | 0] = I7 >>> 24;
                            break A;
                          }
                          t4 = i3[Q4 + 32 | 0] | i3[Q4 + 33 | 0] << 8 | i3[Q4 + 34 | 0] << 16 | i3[Q4 + 35 | 0] << 24, h4 = i3[Q4 + 16 | 0] | i3[Q4 + 17 | 0] << 8 | i3[Q4 + 18 | 0] << 16 | i3[Q4 + 19 | 0] << 24, w4 = i3[Q4 + 36 | 0] | i3[Q4 + 37 | 0] << 8 | i3[Q4 + 38 | 0] << 16 | i3[Q4 + 39 | 0] << 24, B4 = i3[Q4 + 20 | 0] | i3[Q4 + 21 | 0] << 8 | i3[Q4 + 22 | 0] << 16 | i3[Q4 + 23 | 0] << 24, g6 = i3[Q4 + 40 | 0] | i3[Q4 + 41 | 0] << 8 | i3[Q4 + 42 | 0] << 16 | i3[Q4 + 43 | 0] << 24, I7 = i3[Q4 + 24 | 0] | i3[Q4 + 25 | 0] << 8 | i3[Q4 + 26 | 0] << 16 | i3[Q4 + 27 | 0] << 24, e4 = s4 ^ (i3[Q4 + 44 | 0] | i3[Q4 + 45 | 0] << 8 | i3[Q4 + 46 | 0] << 16 | i3[Q4 + 47 | 0] << 24) ^ (i3[Q4 + 28 | 0] | i3[Q4 + 29 | 0] << 8 | i3[Q4 + 30 | 0] << 16 | i3[Q4 + 31 | 0] << 24), C3[A8 + 12 | 0] = e4, C3[A8 + 13 | 0] = e4 >>> 8, C3[A8 + 14 | 0] = e4 >>> 16, C3[A8 + 15 | 0] = e4 >>> 24, I7 = F4 ^ I7 ^ g6, C3[A8 + 8 | 0] = I7, C3[A8 + 9 | 0] = I7 >>> 8, C3[A8 + 10 | 0] = I7 >>> 16, C3[A8 + 11 | 0] = I7 >>> 24, I7 = S4 ^ B4 ^ w4, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, I7 = M4 ^ t4 ^ h4, C3[0 | A8] = I7, C3[A8 + 1 | 0] = I7 >>> 8, C3[A8 + 2 | 0] = I7 >>> 16, C3[A8 + 3 | 0] = I7 >>> 24, k4 = i3[Q4 + 48 | 0] | i3[Q4 + 49 | 0] << 8 | i3[Q4 + 50 | 0] << 16 | i3[Q4 + 51 | 0] << 24, n4 = i3[Q4 + 80 | 0] | i3[Q4 + 81 | 0] << 8 | i3[Q4 + 82 | 0] << 16 | i3[Q4 + 83 | 0] << 24, e4 = i3[0 | (I7 = Q4 - -64 | 0)] | i3[I7 + 1 | 0] << 8 | i3[I7 + 2 | 0] << 16 | i3[I7 + 3 | 0] << 24, t4 = i3[Q4 + 52 | 0] | i3[Q4 + 53 | 0] << 8 | i3[Q4 + 54 | 0] << 16 | i3[Q4 + 55 | 0] << 24, h4 = i3[Q4 + 84 | 0] | i3[Q4 + 85 | 0] << 8 | i3[Q4 + 86 | 0] << 16 | i3[Q4 + 87 | 0] << 24, w4 = i3[Q4 + 68 | 0] | i3[Q4 + 69 | 0] << 8 | i3[Q4 + 70 | 0] << 16 | i3[Q4 + 71 | 0] << 24, B4 = i3[Q4 + 56 | 0] | i3[Q4 + 57 | 0] << 8 | i3[Q4 + 58 | 0] << 16 | i3[Q4 + 59 | 0] << 24, g6 = i3[Q4 + 88 | 0] | i3[Q4 + 89 | 0] << 8 | i3[Q4 + 90 | 0] << 16 | i3[Q4 + 91 | 0] << 24, I7 = i3[Q4 + 72 | 0] | i3[Q4 + 73 | 0] << 8 | i3[Q4 + 74 | 0] << 16 | i3[Q4 + 75 | 0] << 24, Q4 = (i3[Q4 + 60 | 0] | i3[Q4 + 61 | 0] << 8 | i3[Q4 + 62 | 0] << 16 | i3[Q4 + 63 | 0] << 24) ^ (i3[Q4 + 92 | 0] | i3[Q4 + 93 | 0] << 8 | i3[Q4 + 94 | 0] << 16 | i3[Q4 + 95 | 0] << 24) ^ (i3[Q4 + 76 | 0] | i3[Q4 + 77 | 0] << 8 | i3[Q4 + 78 | 0] << 16 | i3[Q4 + 79 | 0] << 24), C3[A8 + 28 | 0] = Q4, C3[A8 + 29 | 0] = Q4 >>> 8, C3[A8 + 30 | 0] = Q4 >>> 16, C3[A8 + 31 | 0] = Q4 >>> 24, I7 = B4 ^ I7 ^ g6, C3[A8 + 24 | 0] = I7, C3[A8 + 25 | 0] = I7 >>> 8, C3[A8 + 26 | 0] = I7 >>> 16, C3[A8 + 27 | 0] = I7 >>> 24, I7 = t4 ^ h4 ^ w4, C3[A8 + 20 | 0] = I7, C3[A8 + 21 | 0] = I7 >>> 8, C3[A8 + 22 | 0] = I7 >>> 16, C3[A8 + 23 | 0] = I7 >>> 24, I7 = k4 ^ e4 ^ n4, C3[A8 + 16 | 0] = I7, C3[A8 + 17 | 0] = I7 >>> 8, C3[A8 + 18 | 0] = I7 >>> 16, C3[A8 + 19 | 0] = I7 >>> 24;
                          break A;
                        }
                        VA(A8, 0, I7);
                      }
                      r3 = o4 + 224 | 0;
                    }
                    function Y3(A8, I7, g6, C4) {
                      var B4, Q4, o4, c4, D4, a4, y4, f4, e4, w4, t4, h4, k4, n4, s4, F4, S4, M4, N4, K4, _4, p4, H4 = 0, G4 = 0, J4 = 0, Y4 = 0, U4 = 0, d4 = 0, b4 = 0, P4 = 0;
                      r3 = B4 = r3 - 320 | 0, E3[B4 + 280 >> 2] = 0, E3[B4 + 284 >> 2] = 0, E3[B4 + 272 >> 2] = 0, E3[B4 + 276 >> 2] = 0, E3[B4 + 264 >> 2] = 0, E3[B4 + 268 >> 2] = 0, E3[B4 + 256 >> 2] = 0, E3[B4 + 260 >> 2] = 0, TA(G4 = B4 + 256 | 0, I7, g6), P4 = i3[C4 + 16 | 0] | i3[C4 + 17 | 0] << 8 | i3[C4 + 18 | 0] << 16 | i3[C4 + 19 | 0] << 24, H4 = i3[C4 + 48 | 0] | i3[C4 + 49 | 0] << 8 | i3[C4 + 50 | 0] << 16 | i3[C4 + 51 | 0] << 24, c4 = i3[C4 + 20 | 0] | i3[C4 + 21 | 0] << 8 | i3[C4 + 22 | 0] << 16 | i3[C4 + 23 | 0] << 24, D4 = i3[C4 + 52 | 0] | i3[C4 + 53 | 0] << 8 | i3[C4 + 54 | 0] << 16 | i3[C4 + 55 | 0] << 24, a4 = i3[C4 + 24 | 0] | i3[C4 + 25 | 0] << 8 | i3[C4 + 26 | 0] << 16 | i3[C4 + 27 | 0] << 24, y4 = i3[C4 + 56 | 0] | i3[C4 + 57 | 0] << 8 | i3[C4 + 58 | 0] << 16 | i3[C4 + 59 | 0] << 24, f4 = i3[C4 + 28 | 0] | i3[C4 + 29 | 0] << 8 | i3[C4 + 30 | 0] << 16 | i3[C4 + 31 | 0] << 24, e4 = i3[C4 + 60 | 0] | i3[C4 + 61 | 0] << 8 | i3[C4 + 62 | 0] << 16 | i3[C4 + 63 | 0] << 24, I7 = i3[C4 + 36 | 0] | i3[C4 + 37 | 0] << 8 | i3[C4 + 38 | 0] << 16 | i3[C4 + 39 | 0] << 24, w4 = i3[C4 + 84 | 0] | i3[C4 + 85 | 0] << 8 | i3[C4 + 86 | 0] << 16 | i3[C4 + 87 | 0] << 24, t4 = i3[C4 + 116 | 0] | i3[C4 + 117 | 0] << 8 | i3[C4 + 118 | 0] << 16 | i3[C4 + 119 | 0] << 24, J4 = i3[C4 + 100 | 0] | i3[C4 + 101 | 0] << 8 | i3[C4 + 102 | 0] << 16 | i3[C4 + 103 | 0] << 24, Y4 = i3[C4 + 44 | 0] | i3[C4 + 45 | 0] << 8 | i3[C4 + 46 | 0] << 16 | i3[C4 + 47 | 0] << 24, h4 = i3[C4 + 92 | 0] | i3[C4 + 93 | 0] << 8 | i3[C4 + 94 | 0] << 16 | i3[C4 + 95 | 0] << 24, k4 = i3[C4 + 124 | 0] | i3[C4 + 125 | 0] << 8 | i3[C4 + 126 | 0] << 16 | i3[C4 + 127 | 0] << 24, U4 = i3[C4 + 108 | 0] | i3[C4 + 109 | 0] << 8 | i3[C4 + 110 | 0] << 16 | i3[C4 + 111 | 0] << 24, d4 = i3[C4 + 32 | 0] | i3[C4 + 33 | 0] << 8 | i3[C4 + 34 | 0] << 16 | i3[C4 + 35 | 0] << 24, n4 = i3[C4 + 80 | 0] | i3[C4 + 81 | 0] << 8 | i3[C4 + 82 | 0] << 16 | i3[C4 + 83 | 0] << 24, s4 = i3[C4 + 112 | 0] | i3[C4 + 113 | 0] << 8 | i3[C4 + 114 | 0] << 16 | i3[C4 + 115 | 0] << 24, b4 = i3[C4 + 96 | 0] | i3[C4 + 97 | 0] << 8 | i3[C4 + 98 | 0] << 16 | i3[C4 + 99 | 0] << 24, F4 = E3[B4 + 272 >> 2], S4 = E3[B4 + 256 >> 2], M4 = E3[B4 + 260 >> 2], N4 = E3[B4 + 264 >> 2], K4 = E3[B4 + 268 >> 2], _4 = E3[B4 + 276 >> 2], p4 = E3[B4 + 284 >> 2], Q4 = i3[C4 + 40 | 0] | i3[C4 + 41 | 0] << 8 | i3[C4 + 42 | 0] << 16 | i3[C4 + 43 | 0] << 24, o4 = i3[C4 + 104 | 0] | i3[C4 + 105 | 0] << 8 | i3[C4 + 106 | 0] << 16 | i3[C4 + 107 | 0] << 24, E3[B4 + 280 >> 2] = Q4 ^ o4 & (i3[C4 + 120 | 0] | i3[C4 + 121 | 0] << 8 | i3[C4 + 122 | 0] << 16 | i3[C4 + 123 | 0] << 24) ^ E3[B4 + 280 >> 2] ^ (i3[C4 + 88 | 0] | i3[C4 + 89 | 0] << 8 | i3[C4 + 90 | 0] << 16 | i3[C4 + 91 | 0] << 24), E3[B4 + 272 >> 2] = d4 ^ b4 & s4 ^ n4 ^ F4, E3[B4 + 284 >> 2] = Y4 ^ U4 & k4 ^ h4 ^ p4, E3[B4 + 276 >> 2] = I7 ^ J4 & t4 ^ w4 ^ _4, E3[B4 + 268 >> 2] = U4 ^ Y4 & e4 ^ f4 ^ K4, E3[B4 + 264 >> 2] = y4 & Q4 ^ a4 ^ N4 ^ o4, E3[B4 + 260 >> 2] = J4 ^ I7 & D4 ^ c4 ^ M4, E3[B4 + 256 >> 2] = b4 ^ H4 & d4 ^ P4 ^ S4, VA(g6 + G4 | 0, 0, 32 - g6 | 0), TA(A8, G4, g6), g6 = E3[B4 + 280 >> 2], G4 = E3[B4 + 272 >> 2], J4 = E3[B4 + 284 >> 2], Y4 = E3[B4 + 276 >> 2], U4 = E3[B4 + 256 >> 2], d4 = E3[B4 + 260 >> 2], b4 = E3[B4 + 264 >> 2], P4 = E3[B4 + 268 >> 2], A8 = E3[C4 + 124 >> 2], E3[B4 + 312 >> 2] = E3[C4 + 120 >> 2], E3[B4 + 316 >> 2] = A8, A8 = E3[C4 + 116 >> 2], E3[B4 + 304 >> 2] = E3[C4 + 112 >> 2], E3[B4 + 308 >> 2] = A8, A8 = E3[C4 + 108 >> 2], E3[B4 + 248 >> 2] = E3[C4 + 104 >> 2], E3[B4 + 252 >> 2] = A8, A8 = E3[C4 + 100 >> 2], E3[B4 + 240 >> 2] = E3[C4 + 96 >> 2], E3[B4 + 244 >> 2] = A8, A8 = E3[C4 + 124 >> 2], E3[B4 + 232 >> 2] = E3[C4 + 120 >> 2], E3[B4 + 236 >> 2] = A8, A8 = E3[C4 + 116 >> 2], E3[B4 + 224 >> 2] = E3[C4 + 112 >> 2], E3[B4 + 228 >> 2] = A8, aA(I7 = B4 + 288 | 0, B4 + 240 | 0, B4 + 224 | 0), A8 = E3[B4 + 300 >> 2], E3[C4 + 120 >> 2] = E3[B4 + 296 >> 2], E3[C4 + 124 >> 2] = A8, A8 = E3[B4 + 292 >> 2], E3[C4 + 112 >> 2] = E3[B4 + 288 >> 2], E3[C4 + 116 >> 2] = A8, A8 = E3[C4 + 92 >> 2], E3[B4 + 216 >> 2] = E3[C4 + 88 >> 2], E3[B4 + 220 >> 2] = A8, A8 = E3[C4 + 84 >> 2], E3[B4 + 208 >> 2] = E3[C4 + 80 >> 2], E3[B4 + 212 >> 2] = A8, A8 = E3[C4 + 108 >> 2], E3[B4 + 200 >> 2] = E3[C4 + 104 >> 2], E3[B4 + 204 >> 2] = A8, A8 = E3[C4 + 100 >> 2], E3[B4 + 192 >> 2] = E3[C4 + 96 >> 2], E3[B4 + 196 >> 2] = A8, aA(I7, B4 + 208 | 0, B4 + 192 | 0), A8 = E3[B4 + 300 >> 2], E3[C4 + 104 >> 2] = E3[B4 + 296 >> 2], E3[C4 + 108 >> 2] = A8, A8 = E3[B4 + 292 >> 2], E3[C4 + 96 >> 2] = E3[B4 + 288 >> 2], E3[C4 + 100 >> 2] = A8, A8 = E3[C4 + 76 >> 2], E3[B4 + 184 >> 2] = E3[C4 + 72 >> 2], E3[B4 + 188 >> 2] = A8, H4 = E3[4 + (A8 = C4 - -64 | 0) >> 2], E3[B4 + 176 >> 2] = E3[A8 >> 2], E3[B4 + 180 >> 2] = H4, H4 = E3[C4 + 92 >> 2], E3[B4 + 168 >> 2] = E3[C4 + 88 >> 2], E3[B4 + 172 >> 2] = H4, H4 = E3[C4 + 84 >> 2], E3[B4 + 160 >> 2] = E3[C4 + 80 >> 2], E3[B4 + 164 >> 2] = H4, aA(I7, B4 + 176 | 0, B4 + 160 | 0), H4 = E3[B4 + 300 >> 2], E3[C4 + 88 >> 2] = E3[B4 + 296 >> 2], E3[C4 + 92 >> 2] = H4, H4 = E3[B4 + 292 >> 2], E3[C4 + 80 >> 2] = E3[B4 + 288 >> 2], E3[C4 + 84 >> 2] = H4, H4 = E3[C4 + 60 >> 2], E3[B4 + 152 >> 2] = E3[C4 + 56 >> 2], E3[B4 + 156 >> 2] = H4, H4 = E3[C4 + 52 >> 2], E3[B4 + 144 >> 2] = E3[C4 + 48 >> 2], E3[B4 + 148 >> 2] = H4, H4 = E3[C4 + 76 >> 2], E3[B4 + 136 >> 2] = E3[C4 + 72 >> 2], E3[B4 + 140 >> 2] = H4, H4 = E3[A8 + 4 >> 2], E3[B4 + 128 >> 2] = E3[A8 >> 2], E3[B4 + 132 >> 2] = H4, aA(I7, B4 + 144 | 0, B4 + 128 | 0), H4 = E3[B4 + 300 >> 2], E3[C4 + 72 >> 2] = E3[B4 + 296 >> 2], E3[C4 + 76 >> 2] = H4, H4 = E3[B4 + 292 >> 2], E3[A8 >> 2] = E3[B4 + 288 >> 2], E3[A8 + 4 >> 2] = H4, H4 = E3[C4 + 44 >> 2], E3[B4 + 120 >> 2] = E3[C4 + 40 >> 2], E3[B4 + 124 >> 2] = H4, H4 = E3[C4 + 36 >> 2], E3[B4 + 112 >> 2] = E3[C4 + 32 >> 2], E3[B4 + 116 >> 2] = H4, H4 = E3[C4 + 60 >> 2], E3[B4 + 104 >> 2] = E3[C4 + 56 >> 2], E3[B4 + 108 >> 2] = H4, H4 = E3[C4 + 52 >> 2], E3[B4 + 96 >> 2] = E3[C4 + 48 >> 2], E3[B4 + 100 >> 2] = H4, aA(I7, B4 + 112 | 0, B4 + 96 | 0), H4 = E3[B4 + 300 >> 2], E3[C4 + 56 >> 2] = E3[B4 + 296 >> 2], E3[C4 + 60 >> 2] = H4, H4 = E3[B4 + 292 >> 2], E3[C4 + 48 >> 2] = E3[B4 + 288 >> 2], E3[C4 + 52 >> 2] = H4, H4 = E3[C4 + 28 >> 2], E3[B4 + 88 >> 2] = E3[C4 + 24 >> 2], E3[B4 + 92 >> 2] = H4, H4 = E3[C4 + 20 >> 2], E3[B4 + 80 >> 2] = E3[C4 + 16 >> 2], E3[B4 + 84 >> 2] = H4, H4 = E3[C4 + 44 >> 2], E3[B4 + 72 >> 2] = E3[C4 + 40 >> 2], E3[B4 + 76 >> 2] = H4, H4 = E3[C4 + 36 >> 2], E3[B4 + 64 >> 2] = E3[C4 + 32 >> 2], E3[B4 + 68 >> 2] = H4, aA(I7, B4 + 80 | 0, B4 - -64 | 0), H4 = E3[B4 + 300 >> 2], E3[C4 + 40 >> 2] = E3[B4 + 296 >> 2], E3[C4 + 44 >> 2] = H4, H4 = E3[B4 + 292 >> 2], E3[C4 + 32 >> 2] = E3[B4 + 288 >> 2], E3[C4 + 36 >> 2] = H4, H4 = E3[C4 + 12 >> 2], E3[B4 + 56 >> 2] = E3[C4 + 8 >> 2], E3[B4 + 60 >> 2] = H4, H4 = E3[C4 + 4 >> 2], E3[B4 + 48 >> 2] = E3[C4 >> 2], E3[B4 + 52 >> 2] = H4, H4 = E3[C4 + 28 >> 2], E3[B4 + 40 >> 2] = E3[C4 + 24 >> 2], E3[B4 + 44 >> 2] = H4, H4 = E3[C4 + 20 >> 2], E3[B4 + 32 >> 2] = E3[C4 + 16 >> 2], E3[B4 + 36 >> 2] = H4, aA(I7, B4 + 48 | 0, B4 + 32 | 0), H4 = E3[B4 + 300 >> 2], E3[C4 + 24 >> 2] = E3[B4 + 296 >> 2], E3[C4 + 28 >> 2] = H4, H4 = E3[B4 + 292 >> 2], E3[C4 + 16 >> 2] = E3[B4 + 288 >> 2], E3[C4 + 20 >> 2] = H4, H4 = E3[B4 + 316 >> 2], E3[B4 + 24 >> 2] = E3[B4 + 312 >> 2], E3[B4 + 28 >> 2] = H4, H4 = E3[B4 + 308 >> 2], E3[B4 + 16 >> 2] = E3[B4 + 304 >> 2], E3[B4 + 20 >> 2] = H4, H4 = E3[C4 + 12 >> 2], E3[B4 + 8 >> 2] = E3[C4 + 8 >> 2], E3[B4 + 12 >> 2] = H4, H4 = E3[C4 + 4 >> 2], E3[B4 >> 2] = E3[C4 >> 2], E3[B4 + 4 >> 2] = H4, aA(I7, B4 + 16 | 0, B4), I7 = E3[B4 + 300 >> 2], E3[C4 + 8 >> 2] = E3[B4 + 296 >> 2], E3[C4 + 12 >> 2] = I7, I7 = E3[B4 + 292 >> 2], E3[C4 >> 2] = E3[B4 + 288 >> 2], E3[C4 + 4 >> 2] = I7, E3[C4 + 12 >> 2] = P4 ^ (i3[C4 + 12 | 0] | i3[C4 + 13 | 0] << 8 | i3[C4 + 14 | 0] << 16 | i3[C4 + 15 | 0] << 24), E3[C4 + 8 >> 2] = b4 ^ (i3[C4 + 8 | 0] | i3[C4 + 9 | 0] << 8 | i3[C4 + 10 | 0] << 16 | i3[C4 + 11 | 0] << 24), E3[C4 + 4 >> 2] = d4 ^ (i3[C4 + 4 | 0] | i3[C4 + 5 | 0] << 8 | i3[C4 + 6 | 0] << 16 | i3[C4 + 7 | 0] << 24), E3[C4 >> 2] = U4 ^ (i3[0 | C4] | i3[C4 + 1 | 0] << 8 | i3[C4 + 2 | 0] << 16 | i3[C4 + 3 | 0] << 24), E3[A8 >> 2] = G4 ^ (i3[0 | A8] | i3[A8 + 1 | 0] << 8 | i3[A8 + 2 | 0] << 16 | i3[A8 + 3 | 0] << 24), E3[C4 + 68 >> 2] = Y4 ^ (i3[C4 + 68 | 0] | i3[C4 + 69 | 0] << 8 | i3[C4 + 70 | 0] << 16 | i3[C4 + 71 | 0] << 24), E3[C4 + 72 >> 2] = g6 ^ (i3[C4 + 72 | 0] | i3[C4 + 73 | 0] << 8 | i3[C4 + 74 | 0] << 16 | i3[C4 + 75 | 0] << 24), E3[C4 + 76 >> 2] = J4 ^ (i3[C4 + 76 | 0] | i3[C4 + 77 | 0] << 8 | i3[C4 + 78 | 0] << 16 | i3[C4 + 79 | 0] << 24), r3 = B4 + 320 | 0;
                    }
                    function U3(A8, I7) {
                      var g6, C4, B4, Q4, i4, o4, D4, a4, y4, f4, e4, w4, r4, h4, k4, n4, s4, F4, S4, M4, N4, K4, _4, p4, H4, G4, J4, Y4, U4, d4, b4, P4, v5 = 0, R4 = 0, L4 = 0, x4 = 0, u4 = 0, m4 = 0, q4 = 0, l3 = 0, z2 = 0, j2 = 0, X2 = 0, O2 = 0, T2 = 0, V2 = 0, Z2 = 0, W2 = 0, $2 = 0, AA2 = 0, IA2 = 0, gA2 = 0, CA2 = 0, BA2 = 0;
                      v5 = PA(C4 = (n4 = E3[I7 + 12 >> 2]) << 1, o4 = C4 >> 31, n4, N4 = n4 >> 31), L4 = t3, R4 = (z2 = PA(u4 = E3[I7 + 16 >> 2], D4 = u4 >> 31, a4 = (x4 = E3[I7 + 8 >> 2]) << 1, w4 = a4 >> 31)) + v5 | 0, v5 = t3 + L4 | 0, v5 = R4 >>> 0 < z2 >>> 0 ? v5 + 1 | 0 : v5, L4 = (j2 = PA(T2 = (y4 = E3[I7 + 20 >> 2]) << 1, r4 = T2 >> 31, z2 = (m4 = E3[I7 + 4 >> 2]) << 1, B4 = z2 >> 31)) + R4 | 0, R4 = t3 + v5 | 0, R4 = L4 >>> 0 < j2 >>> 0 ? R4 + 1 | 0 : R4, q4 = PA(g6 = E3[I7 + 24 >> 2], f4 = g6 >> 31, j2 = (W2 = E3[I7 >> 2]) << 1, Q4 = j2 >> 31), v5 = t3 + R4 | 0, v5 = (L4 = q4 + L4 | 0) >>> 0 < q4 >>> 0 ? v5 + 1 | 0 : v5, R4 = L4, h4 = E3[I7 + 32 >> 2], L4 = PA(X2 = c3(h4, 19), e4 = X2 >> 31, h4, F4 = h4 >> 31), v5 = t3 + v5 | 0, v5 = (R4 = R4 + L4 | 0) >>> 0 < L4 >>> 0 ? v5 + 1 | 0 : v5, G4 = E3[I7 + 36 >> 2], L4 = PA(q4 = c3(G4, 38), i4 = q4 >> 31, S4 = (k4 = E3[I7 + 28 >> 2]) << 1, K4 = S4 >> 31), I7 = t3 + v5 | 0, Z2 = R4 = L4 + R4 | 0, L4 = R4 >>> 0 < L4 >>> 0 ? I7 + 1 | 0 : I7, I7 = PA(z2, B4, u4, D4), v5 = t3, R4 = PA(a4, w4, n4, N4), v5 = t3 + v5 | 0, v5 = (I7 = R4 + I7 | 0) >>> 0 < R4 >>> 0 ? v5 + 1 | 0 : v5, l3 = PA(y4, M4 = y4 >> 31, j2, Q4), R4 = t3 + v5 | 0, R4 = (I7 = l3 + I7 | 0) >>> 0 < l3 >>> 0 ? R4 + 1 | 0 : R4, l3 = PA(X2, e4, S4, K4), v5 = t3 + R4 | 0, v5 = (I7 = l3 + I7 | 0) >>> 0 < l3 >>> 0 ? v5 + 1 | 0 : v5, R4 = PA(q4, i4, g6, f4), v5 = t3 + v5 | 0, CA2 = I7 = R4 + I7 | 0, O2 = I7 >>> 0 < R4 >>> 0 ? v5 + 1 | 0 : v5, v5 = PA(z2, B4, C4, o4), R4 = t3, _4 = I7 = x4, x4 = PA(I7, V2 = I7 >> 31, I7, V2), I7 = t3 + R4 | 0, I7 = (v5 = x4 + v5 | 0) >>> 0 < x4 >>> 0 ? I7 + 1 | 0 : I7, R4 = (x4 = PA(j2, Q4, u4, D4)) + v5 | 0, v5 = t3 + I7 | 0, v5 = R4 >>> 0 < x4 >>> 0 ? v5 + 1 | 0 : v5, I7 = (x4 = PA(l3 = c3(k4, 38), s4 = l3 >> 31, k4, p4 = k4 >> 31)) + R4 | 0, R4 = t3 + v5 | 0, R4 = I7 >>> 0 < x4 >>> 0 ? R4 + 1 | 0 : R4, I7 = (v5 = I7) + (x4 = PA(X2, e4, I7 = g6 << 1, I7 >> 31)) | 0, v5 = t3 + R4 | 0, v5 = I7 >>> 0 < x4 >>> 0 ? v5 + 1 | 0 : v5, R4 = I7, I7 = PA(q4, i4, T2, r4), v5 = t3 + v5 | 0, J4 = R4 = R4 + I7 | 0, Y4 = v5 = I7 >>> 0 > R4 >>> 0 ? v5 + 1 | 0 : v5, I7 = v5, U4 = R4 = R4 + 33554432 | 0, d4 = I7 = R4 >>> 0 < 33554432 ? I7 + 1 | 0 : I7, v5 = (v5 = I7 >> 26) + O2 | 0, CA2 = I7 = (R4 = (67108863 & I7) << 6 | R4 >>> 26) + CA2 | 0, v5 = I7 >>> 0 < R4 >>> 0 ? v5 + 1 | 0 : v5, b4 = I7 = I7 + 16777216 | 0, v5 = (v5 = (R4 = I7 >>> 0 < 16777216 ? v5 + 1 | 0 : v5) >> 25) + L4 | 0, I7 = (I7 = (33554431 & R4) << 7 | I7 >>> 25) >>> 0 > (R4 = I7 + Z2 | 0) >>> 0 ? v5 + 1 | 0 : v5, Z2 = v5 = R4 + 33554432 | 0, x4 = I7 = v5 >>> 0 < 33554432 ? I7 + 1 | 0 : I7, E3[A8 + 24 >> 2] = R4 - (-67108864 & v5), I7 = PA(j2, Q4, _4, V2), v5 = t3, L4 = PA(z2, B4, m4, $2 = m4 >> 31), R4 = t3 + v5 | 0, R4 = (I7 = L4 + I7 | 0) >>> 0 < L4 >>> 0 ? R4 + 1 | 0 : R4, O2 = PA(L4 = c3(g6, 19), gA2 = L4 >> 31, g6, f4), v5 = t3 + R4 | 0, v5 = (I7 = O2 + I7 | 0) >>> 0 < O2 >>> 0 ? v5 + 1 | 0 : v5, R4 = (O2 = PA(T2, r4, l3, s4)) + I7 | 0, I7 = t3 + v5 | 0, I7 = R4 >>> 0 < O2 >>> 0 ? I7 + 1 | 0 : I7, AA2 = PA(X2, e4, O2 = u4 << 1, H4 = O2 >> 31), v5 = t3 + I7 | 0, v5 = (R4 = AA2 + R4 | 0) >>> 0 < AA2 >>> 0 ? v5 + 1 | 0 : v5, I7 = R4, R4 = PA(q4, i4, C4, o4), v5 = t3 + v5 | 0, IA2 = I7 = I7 + R4 | 0, AA2 = I7 >>> 0 < R4 >>> 0 ? v5 + 1 | 0 : v5, I7 = PA(T2, r4, L4, gA2), v5 = t3, m4 = PA(j2, Q4, m4, $2), R4 = t3 + v5 | 0, R4 = (I7 = m4 + I7 | 0) >>> 0 < m4 >>> 0 ? R4 + 1 | 0 : R4, m4 = PA(u4, D4, l3, s4), v5 = t3 + R4 | 0, v5 = (I7 = m4 + I7 | 0) >>> 0 < m4 >>> 0 ? v5 + 1 | 0 : v5, R4 = (m4 = PA(X2, e4, C4, o4)) + I7 | 0, I7 = t3 + v5 | 0, I7 = R4 >>> 0 < m4 >>> 0 ? I7 + 1 | 0 : I7, m4 = PA(q4, i4, _4, V2), v5 = t3 + I7 | 0, BA2 = R4 = m4 + R4 | 0, $2 = R4 >>> 0 < m4 >>> 0 ? v5 + 1 | 0 : v5, R4 = PA(I7 = c3(y4, 38), I7 >> 31, y4, M4), m4 = t3, I7 = W2, W2 = R4, R4 = PA(I7, v5 = I7 >> 31, I7, v5), v5 = t3 + m4 | 0, v5 = (I7 = W2 + R4 | 0) >>> 0 < R4 >>> 0 ? v5 + 1 | 0 : v5, L4 = PA(L4, gA2, O2, H4), R4 = t3 + v5 | 0, R4 = (I7 = L4 + I7 | 0) >>> 0 < L4 >>> 0 ? R4 + 1 | 0 : R4, L4 = PA(C4, o4, l3, s4), v5 = t3 + R4 | 0, v5 = (I7 = L4 + I7 | 0) >>> 0 < L4 >>> 0 ? v5 + 1 | 0 : v5, R4 = (L4 = PA(X2, e4, a4, w4)) + I7 | 0, I7 = t3 + v5 | 0, I7 = R4 >>> 0 < L4 >>> 0 ? I7 + 1 | 0 : I7, L4 = PA(z2, B4, q4, i4), v5 = t3 + I7 | 0, m4 = R4 = L4 + R4 | 0, W2 = v5 = R4 >>> 0 < L4 >>> 0 ? v5 + 1 | 0 : v5, gA2 = R4 = R4 + 33554432 | 0, P4 = v5 = R4 >>> 0 < 33554432 ? v5 + 1 | 0 : v5, I7 = v5 >> 26, v5 = (67108863 & v5) << 6 | R4 >>> 26, R4 = I7 + $2 | 0, $2 = L4 = v5 + BA2 | 0, v5 = v5 >>> 0 > L4 >>> 0 ? R4 + 1 | 0 : R4, BA2 = R4 = L4 + 16777216 | 0, L4 = (33554431 & (v5 = R4 >>> 0 < 16777216 ? v5 + 1 | 0 : v5)) << 7 | R4 >>> 25, v5 = (v5 >> 25) + AA2 | 0, v5 = (R4 = L4 + IA2 | 0) >>> 0 < L4 >>> 0 ? v5 + 1 | 0 : v5, AA2 = I7 = R4 + 33554432 | 0, L4 = v5 = I7 >>> 0 < 33554432 ? v5 + 1 | 0 : v5, E3[A8 + 8 >> 2] = R4 - (-67108864 & I7), I7 = PA(a4, w4, y4, M4), v5 = t3, R4 = PA(u4, D4, C4, o4), v5 = t3 + v5 | 0, v5 = (I7 = R4 + I7 | 0) >>> 0 < R4 >>> 0 ? v5 + 1 | 0 : v5, R4 = PA(z2, B4, g6, f4), v5 = t3 + v5 | 0, v5 = (I7 = R4 + I7 | 0) >>> 0 < R4 >>> 0 ? v5 + 1 | 0 : v5, R4 = PA(j2, Q4, k4, p4), v5 = t3 + v5 | 0, v5 = (I7 = R4 + I7 | 0) >>> 0 < R4 >>> 0 ? v5 + 1 | 0 : v5, IA2 = (R4 = PA(q4, i4, h4, F4)) + I7 | 0, I7 = t3 + v5 | 0, R4 = (v5 = x4 >> 26) + (R4 = R4 >>> 0 > IA2 >>> 0 ? I7 + 1 | 0 : I7) | 0, Z2 = I7 = (x4 = (67108863 & x4) << 6 | Z2 >>> 26) + IA2 | 0, v5 = I7 >>> 0 < x4 >>> 0 ? R4 + 1 | 0 : R4, IA2 = I7 = I7 + 16777216 | 0, x4 = v5 = I7 >>> 0 < 16777216 ? v5 + 1 | 0 : v5, E3[A8 + 28 >> 2] = Z2 - (-33554432 & I7), I7 = PA(j2, Q4, n4, N4), R4 = t3, v5 = (V2 = PA(z2, B4, _4, V2)) + I7 | 0, I7 = t3 + R4 | 0, I7 = v5 >>> 0 < V2 >>> 0 ? I7 + 1 | 0 : I7, v5 = (l3 = PA(g6, f4, l3, s4)) + v5 | 0, R4 = t3 + I7 | 0, I7 = (X2 = PA(X2, e4, T2, r4)) + v5 | 0, v5 = t3 + (v5 >>> 0 < l3 >>> 0 ? R4 + 1 | 0 : R4) | 0, v5 = I7 >>> 0 < X2 >>> 0 ? v5 + 1 | 0 : v5, R4 = PA(q4, i4, u4, D4), v5 = t3 + v5 | 0, v5 = (v5 = (I7 = R4 + I7 | 0) >>> 0 < R4 >>> 0 ? v5 + 1 | 0 : v5) + (R4 = L4 >> 26) | 0, I7 = (R4 = L4 = (Z2 = I7) + (I7 = (67108863 & L4) << 6 | AA2 >>> 26) | 0) >>> 0 < I7 >>> 0 ? v5 + 1 | 0 : v5, X2 = v5 = R4 + 16777216 | 0, L4 = I7 = v5 >>> 0 < 16777216 ? I7 + 1 | 0 : I7, E3[A8 + 12 >> 2] = R4 - (-33554432 & v5), I7 = PA(g6, f4, a4, w4), v5 = t3, R4 = PA(u4, D4, u4, D4), v5 = t3 + v5 | 0, v5 = (I7 = R4 + I7 | 0) >>> 0 < R4 >>> 0 ? v5 + 1 | 0 : v5, R4 = PA(C4, o4, T2, r4), v5 = t3 + v5 | 0, v5 = (I7 = R4 + I7 | 0) >>> 0 < R4 >>> 0 ? v5 + 1 | 0 : v5, R4 = (u4 = PA(z2, B4, S4, K4)) + I7 | 0, I7 = t3 + v5 | 0, I7 = R4 >>> 0 < u4 >>> 0 ? I7 + 1 | 0 : I7, v5 = (u4 = PA(j2, Q4, h4, F4)) + R4 | 0, R4 = t3 + I7 | 0, R4 = v5 >>> 0 < u4 >>> 0 ? R4 + 1 | 0 : R4, I7 = (u4 = PA(I7 = q4, i4, q4 = G4, T2 = q4 >> 31)) + v5 | 0, v5 = t3 + R4 | 0, v5 = I7 >>> 0 < u4 >>> 0 ? v5 + 1 | 0 : v5, R4 = I7, v5 = (I7 = x4 >> 25) + v5 | 0, v5 = (R4 = R4 + (x4 = (33554431 & x4) << 7 | IA2 >>> 25) | 0) >>> 0 < x4 >>> 0 ? v5 + 1 | 0 : v5, u4 = I7 = R4 + 33554432 | 0, x4 = v5 = I7 >>> 0 < 33554432 ? v5 + 1 | 0 : v5, E3[A8 + 32 >> 2] = R4 - (-67108864 & I7), v5 = L4 >> 25, R4 = (L4 = (33554431 & L4) << 7 | X2 >>> 25) + (J4 - (I7 = -67108864 & U4) | 0) | 0, I7 = v5 + (Y4 - ((I7 >>> 0 > J4 >>> 0) + d4 | 0) | 0) | 0, I7 = R4 >>> 0 < L4 >>> 0 ? I7 + 1 | 0 : I7, L4 = R4, I7 = ((67108863 & (v5 = (R4 = R4 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7)) << 6 | R4 >>> 26) + (l3 = CA2 - (-33554432 & b4) | 0) | 0, E3[A8 + 20 >> 2] = I7, E3[A8 + 16 >> 2] = L4 - (-67108864 & R4), I7 = PA(C4, o4, g6, f4), R4 = t3, v5 = (L4 = PA(y4, M4, O2, H4)) + I7 | 0, I7 = t3 + R4 | 0, I7 = v5 >>> 0 < L4 >>> 0 ? I7 + 1 | 0 : I7, R4 = (L4 = PA(a4, w4, k4, p4)) + v5 | 0, v5 = t3 + I7 | 0, v5 = R4 >>> 0 < L4 >>> 0 ? v5 + 1 | 0 : v5, I7 = (L4 = PA(z2, B4, h4, F4)) + R4 | 0, R4 = t3 + v5 | 0, R4 = I7 >>> 0 < L4 >>> 0 ? R4 + 1 | 0 : R4, L4 = (v5 = I7) + (I7 = PA(j2, Q4, q4, T2)) | 0, v5 = t3 + R4 | 0, v5 = (I7 = I7 >>> 0 > L4 >>> 0 ? v5 + 1 | 0 : v5) + (v5 = x4 >> 26) | 0, I7 = (R4 = (x4 = (67108863 & x4) << 6 | u4 >>> 26) + L4 | 0) >>> 0 < x4 >>> 0 ? v5 + 1 | 0 : v5, I7 = (v5 = R4 + 16777216 | 0) >>> 0 < 16777216 ? I7 + 1 | 0 : I7, E3[A8 + 36 >> 2] = R4 - (-33554432 & v5), x4 = $2 - (-33554432 & BA2) | 0, L4 = m4 - (R4 = -67108864 & gA2) | 0, z2 = W2 - ((R4 >>> 0 > m4 >>> 0) + P4 | 0) | 0, I7 = PA((33554431 & I7) << 7 | v5 >>> 25, I7 >> 25, 19, 0), v5 = t3 + z2 | 0, I7 = I7 >>> 0 > (R4 = I7 + L4 | 0) >>> 0 ? v5 + 1 | 0 : v5, I7 = ((67108863 & (I7 = (v5 = R4 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7)) << 6 | v5 >>> 26) + x4 | 0, E3[A8 + 4 >> 2] = I7, E3[A8 >> 2] = R4 - (-67108864 & v5);
                    }
                    function d3(A8, I7) {
                      var g6, C4, B4, Q4, o4, c4, D4, a4, y4, f4, e4 = 0, w4 = 0, t4 = 0;
                      r3 = g6 = r3 - 416 | 0, C4 = i3[A8 + 16 | 0] | i3[A8 + 17 | 0] << 8 | i3[A8 + 18 | 0] << 16 | i3[A8 + 19 | 0] << 24, B4 = i3[A8 + 20 | 0] | i3[A8 + 21 | 0] << 8 | i3[A8 + 22 | 0] << 16 | i3[A8 + 23 | 0] << 24, Q4 = i3[A8 + 24 | 0] | i3[A8 + 25 | 0] << 8 | i3[A8 + 26 | 0] << 16 | i3[A8 + 27 | 0] << 24, o4 = i3[A8 + 28 | 0] | i3[A8 + 29 | 0] << 8 | i3[A8 + 30 | 0] << 16 | i3[A8 + 31 | 0] << 24, t4 = i3[A8 + 4 | 0] | i3[A8 + 5 | 0] << 8 | i3[A8 + 6 | 0] << 16 | i3[A8 + 7 | 0] << 24, c4 = i3[A8 + 8 | 0] | i3[A8 + 9 | 0] << 8 | i3[A8 + 10 | 0] << 16 | i3[A8 + 11 | 0] << 24, D4 = i3[A8 + 12 | 0] | i3[A8 + 13 | 0] << 8 | i3[A8 + 14 | 0] << 16 | i3[A8 + 15 | 0] << 24, a4 = i3[0 | A8] | i3[A8 + 1 | 0] << 8 | i3[A8 + 2 | 0] << 16 | i3[A8 + 3 | 0] << 24, A8 = E3[I7 + 92 >> 2], E3[g6 + 408 >> 2] = E3[I7 + 88 >> 2], E3[g6 + 412 >> 2] = A8, A8 = E3[I7 + 84 >> 2], E3[g6 + 400 >> 2] = E3[I7 + 80 >> 2], E3[g6 + 404 >> 2] = A8, A8 = E3[I7 + 76 >> 2], E3[g6 + 376 >> 2] = E3[I7 + 72 >> 2], E3[g6 + 380 >> 2] = A8, e4 = E3[4 + (A8 = w4 = I7 - -64 | 0) >> 2], E3[g6 + 368 >> 2] = E3[A8 >> 2], E3[g6 + 372 >> 2] = e4, A8 = E3[I7 + 92 >> 2], E3[g6 + 360 >> 2] = E3[I7 + 88 >> 2], E3[g6 + 364 >> 2] = A8, A8 = E3[I7 + 84 >> 2], E3[g6 + 352 >> 2] = E3[I7 + 80 >> 2], E3[g6 + 356 >> 2] = A8, aA(A8 = g6 + 384 | 0, g6 + 368 | 0, g6 + 352 | 0), e4 = E3[g6 + 396 >> 2], E3[I7 + 88 >> 2] = E3[g6 + 392 >> 2], E3[I7 + 92 >> 2] = e4, e4 = E3[g6 + 388 >> 2], E3[I7 + 80 >> 2] = E3[g6 + 384 >> 2], E3[I7 + 84 >> 2] = e4, e4 = E3[I7 + 60 >> 2], E3[g6 + 344 >> 2] = E3[I7 + 56 >> 2], E3[g6 + 348 >> 2] = e4, e4 = E3[I7 + 52 >> 2], E3[g6 + 336 >> 2] = E3[I7 + 48 >> 2], E3[g6 + 340 >> 2] = e4, e4 = E3[I7 + 76 >> 2], E3[g6 + 328 >> 2] = E3[I7 + 72 >> 2], E3[g6 + 332 >> 2] = e4, e4 = E3[w4 + 4 >> 2], E3[g6 + 320 >> 2] = E3[w4 >> 2], E3[g6 + 324 >> 2] = e4, aA(A8, g6 + 336 | 0, g6 + 320 | 0), e4 = E3[g6 + 396 >> 2], E3[I7 + 72 >> 2] = E3[g6 + 392 >> 2], E3[I7 + 76 >> 2] = e4, e4 = E3[g6 + 388 >> 2], E3[w4 >> 2] = E3[g6 + 384 >> 2], E3[w4 + 4 >> 2] = e4, e4 = E3[I7 + 44 >> 2], E3[g6 + 312 >> 2] = E3[I7 + 40 >> 2], E3[g6 + 316 >> 2] = e4, e4 = E3[I7 + 36 >> 2], E3[g6 + 304 >> 2] = E3[I7 + 32 >> 2], E3[g6 + 308 >> 2] = e4, e4 = E3[I7 + 60 >> 2], E3[g6 + 296 >> 2] = E3[I7 + 56 >> 2], E3[g6 + 300 >> 2] = e4, e4 = E3[I7 + 52 >> 2], E3[g6 + 288 >> 2] = E3[I7 + 48 >> 2], E3[g6 + 292 >> 2] = e4, aA(A8, g6 + 304 | 0, g6 + 288 | 0), e4 = E3[g6 + 396 >> 2], E3[I7 + 56 >> 2] = E3[g6 + 392 >> 2], E3[I7 + 60 >> 2] = e4, e4 = E3[g6 + 388 >> 2], E3[I7 + 48 >> 2] = E3[g6 + 384 >> 2], E3[I7 + 52 >> 2] = e4, e4 = E3[I7 + 28 >> 2], E3[g6 + 280 >> 2] = E3[I7 + 24 >> 2], E3[g6 + 284 >> 2] = e4, e4 = E3[I7 + 20 >> 2], E3[g6 + 272 >> 2] = E3[I7 + 16 >> 2], E3[g6 + 276 >> 2] = e4, e4 = E3[I7 + 44 >> 2], E3[g6 + 264 >> 2] = E3[I7 + 40 >> 2], E3[g6 + 268 >> 2] = e4, e4 = E3[I7 + 36 >> 2], E3[g6 + 256 >> 2] = E3[I7 + 32 >> 2], E3[g6 + 260 >> 2] = e4, aA(A8, g6 + 272 | 0, g6 + 256 | 0), e4 = E3[g6 + 396 >> 2], E3[I7 + 40 >> 2] = E3[g6 + 392 >> 2], E3[I7 + 44 >> 2] = e4, e4 = E3[g6 + 388 >> 2], E3[I7 + 32 >> 2] = E3[g6 + 384 >> 2], E3[I7 + 36 >> 2] = e4, e4 = E3[I7 + 12 >> 2], E3[g6 + 248 >> 2] = E3[I7 + 8 >> 2], E3[g6 + 252 >> 2] = e4, e4 = E3[I7 + 4 >> 2], E3[g6 + 240 >> 2] = E3[I7 >> 2], E3[g6 + 244 >> 2] = e4, e4 = E3[I7 + 28 >> 2], E3[g6 + 232 >> 2] = E3[I7 + 24 >> 2], E3[g6 + 236 >> 2] = e4, e4 = E3[I7 + 20 >> 2], E3[g6 + 224 >> 2] = E3[I7 + 16 >> 2], E3[g6 + 228 >> 2] = e4, aA(A8, g6 + 240 | 0, g6 + 224 | 0), e4 = E3[g6 + 396 >> 2], E3[I7 + 24 >> 2] = E3[g6 + 392 >> 2], E3[I7 + 28 >> 2] = e4, e4 = E3[g6 + 388 >> 2], E3[I7 + 16 >> 2] = E3[g6 + 384 >> 2], E3[I7 + 20 >> 2] = e4, e4 = E3[g6 + 412 >> 2], E3[g6 + 216 >> 2] = E3[g6 + 408 >> 2], E3[g6 + 220 >> 2] = e4, e4 = E3[g6 + 404 >> 2], E3[g6 + 208 >> 2] = E3[g6 + 400 >> 2], E3[g6 + 212 >> 2] = e4, e4 = E3[I7 + 12 >> 2], E3[g6 + 200 >> 2] = E3[I7 + 8 >> 2], E3[g6 + 204 >> 2] = e4, e4 = E3[I7 + 4 >> 2], E3[g6 + 192 >> 2] = E3[I7 >> 2], E3[g6 + 196 >> 2] = e4, aA(A8, g6 + 208 | 0, g6 + 192 | 0), e4 = E3[g6 + 384 >> 2], y4 = E3[g6 + 388 >> 2], f4 = E3[g6 + 392 >> 2], E3[I7 + 12 >> 2] = E3[g6 + 396 >> 2] ^ D4, E3[I7 + 8 >> 2] = c4 ^ f4, E3[I7 + 4 >> 2] = t4 ^ y4, E3[I7 >> 2] = e4 ^ a4, t4 = E3[I7 + 92 >> 2], E3[g6 + 408 >> 2] = E3[I7 + 88 >> 2], E3[g6 + 412 >> 2] = t4, t4 = E3[I7 + 84 >> 2], E3[g6 + 400 >> 2] = E3[I7 + 80 >> 2], E3[g6 + 404 >> 2] = t4, t4 = E3[I7 + 76 >> 2], E3[g6 + 184 >> 2] = E3[I7 + 72 >> 2], E3[g6 + 188 >> 2] = t4, t4 = E3[w4 + 4 >> 2], E3[g6 + 176 >> 2] = E3[w4 >> 2], E3[g6 + 180 >> 2] = t4, t4 = E3[I7 + 92 >> 2], E3[g6 + 168 >> 2] = E3[I7 + 88 >> 2], E3[g6 + 172 >> 2] = t4, t4 = E3[I7 + 84 >> 2], E3[g6 + 160 >> 2] = E3[I7 + 80 >> 2], E3[g6 + 164 >> 2] = t4, aA(A8, g6 + 176 | 0, g6 + 160 | 0), t4 = E3[g6 + 396 >> 2], E3[I7 + 88 >> 2] = E3[g6 + 392 >> 2], E3[I7 + 92 >> 2] = t4, t4 = E3[g6 + 388 >> 2], E3[I7 + 80 >> 2] = E3[g6 + 384 >> 2], E3[I7 + 84 >> 2] = t4, t4 = E3[I7 + 60 >> 2], E3[g6 + 152 >> 2] = E3[I7 + 56 >> 2], E3[g6 + 156 >> 2] = t4, t4 = E3[I7 + 52 >> 2], E3[g6 + 144 >> 2] = E3[I7 + 48 >> 2], E3[g6 + 148 >> 2] = t4, t4 = E3[I7 + 76 >> 2], E3[g6 + 136 >> 2] = E3[I7 + 72 >> 2], E3[g6 + 140 >> 2] = t4, t4 = E3[w4 + 4 >> 2], E3[g6 + 128 >> 2] = E3[w4 >> 2], E3[g6 + 132 >> 2] = t4, aA(A8, g6 + 144 | 0, g6 + 128 | 0), t4 = E3[g6 + 396 >> 2], E3[I7 + 72 >> 2] = E3[g6 + 392 >> 2], E3[I7 + 76 >> 2] = t4, t4 = E3[g6 + 388 >> 2], E3[w4 >> 2] = E3[g6 + 384 >> 2], E3[w4 + 4 >> 2] = t4, w4 = E3[I7 + 44 >> 2], E3[g6 + 120 >> 2] = E3[I7 + 40 >> 2], E3[g6 + 124 >> 2] = w4, w4 = E3[I7 + 36 >> 2], E3[g6 + 112 >> 2] = E3[I7 + 32 >> 2], E3[g6 + 116 >> 2] = w4, w4 = E3[I7 + 60 >> 2], E3[g6 + 104 >> 2] = E3[I7 + 56 >> 2], E3[g6 + 108 >> 2] = w4, w4 = E3[I7 + 52 >> 2], E3[g6 + 96 >> 2] = E3[I7 + 48 >> 2], E3[g6 + 100 >> 2] = w4, aA(A8, g6 + 112 | 0, g6 + 96 | 0), w4 = E3[g6 + 396 >> 2], E3[I7 + 56 >> 2] = E3[g6 + 392 >> 2], E3[I7 + 60 >> 2] = w4, w4 = E3[g6 + 388 >> 2], E3[I7 + 48 >> 2] = E3[g6 + 384 >> 2], E3[I7 + 52 >> 2] = w4, w4 = E3[I7 + 28 >> 2], E3[g6 + 88 >> 2] = E3[I7 + 24 >> 2], E3[g6 + 92 >> 2] = w4, w4 = E3[I7 + 20 >> 2], E3[g6 + 80 >> 2] = E3[I7 + 16 >> 2], E3[g6 + 84 >> 2] = w4, w4 = E3[I7 + 44 >> 2], E3[g6 + 72 >> 2] = E3[I7 + 40 >> 2], E3[g6 + 76 >> 2] = w4, w4 = E3[I7 + 36 >> 2], E3[g6 + 64 >> 2] = E3[I7 + 32 >> 2], E3[g6 + 68 >> 2] = w4, aA(A8, g6 + 80 | 0, g6 - -64 | 0), w4 = E3[g6 + 396 >> 2], E3[I7 + 40 >> 2] = E3[g6 + 392 >> 2], E3[I7 + 44 >> 2] = w4, w4 = E3[g6 + 388 >> 2], E3[I7 + 32 >> 2] = E3[g6 + 384 >> 2], E3[I7 + 36 >> 2] = w4, w4 = E3[I7 + 12 >> 2], E3[g6 + 56 >> 2] = E3[I7 + 8 >> 2], E3[g6 + 60 >> 2] = w4, w4 = E3[I7 + 4 >> 2], E3[g6 + 48 >> 2] = E3[I7 >> 2], E3[g6 + 52 >> 2] = w4, w4 = E3[I7 + 28 >> 2], E3[g6 + 40 >> 2] = E3[I7 + 24 >> 2], E3[g6 + 44 >> 2] = w4, w4 = E3[I7 + 20 >> 2], E3[g6 + 32 >> 2] = E3[I7 + 16 >> 2], E3[g6 + 36 >> 2] = w4, aA(A8, g6 + 48 | 0, g6 + 32 | 0), w4 = E3[g6 + 396 >> 2], E3[I7 + 24 >> 2] = E3[g6 + 392 >> 2], E3[I7 + 28 >> 2] = w4, w4 = E3[g6 + 388 >> 2], E3[I7 + 16 >> 2] = E3[g6 + 384 >> 2], E3[I7 + 20 >> 2] = w4, w4 = E3[g6 + 412 >> 2], E3[g6 + 24 >> 2] = E3[g6 + 408 >> 2], E3[g6 + 28 >> 2] = w4, w4 = E3[g6 + 404 >> 2], E3[g6 + 16 >> 2] = E3[g6 + 400 >> 2], E3[g6 + 20 >> 2] = w4, w4 = E3[I7 + 12 >> 2], E3[g6 + 8 >> 2] = E3[I7 + 8 >> 2], E3[g6 + 12 >> 2] = w4, w4 = E3[I7 + 4 >> 2], E3[g6 >> 2] = E3[I7 >> 2], E3[g6 + 4 >> 2] = w4, aA(A8, g6 + 16 | 0, g6), A8 = E3[g6 + 384 >> 2], w4 = E3[g6 + 388 >> 2], t4 = E3[g6 + 392 >> 2], E3[I7 + 12 >> 2] = E3[g6 + 396 >> 2] ^ o4, E3[I7 + 8 >> 2] = t4 ^ Q4, E3[I7 + 4 >> 2] = w4 ^ B4, E3[I7 >> 2] = A8 ^ C4, r3 = g6 + 416 | 0;
                    }
                    function b3(A8, I7, g6) {
                      var C4, B4, Q4, o4, c4, D4, a4, y4, f4, e4, w4, t4, h4, k4, n4 = 0, s4 = 0, F4 = 0;
                      for (r3 = C4 = r3 - 288 | 0, w4 = i3[I7 + 4 | 0] | i3[I7 + 5 | 0] << 8 | i3[I7 + 6 | 0] << 16 | i3[I7 + 7 | 0] << 24, t4 = i3[I7 + 8 | 0] | i3[I7 + 9 | 0] << 8 | i3[I7 + 10 | 0] << 16 | i3[I7 + 11 | 0] << 24, h4 = i3[I7 + 12 | 0] | i3[I7 + 13 | 0] << 8 | i3[I7 + 14 | 0] << 16 | i3[I7 + 15 | 0] << 24, a4 = i3[A8 + 4 | 0] | i3[A8 + 5 | 0] << 8 | i3[A8 + 6 | 0] << 16 | i3[A8 + 7 | 0] << 24, y4 = i3[A8 + 8 | 0] | i3[A8 + 9 | 0] << 8 | i3[A8 + 10 | 0] << 16 | i3[A8 + 11 | 0] << 24, f4 = i3[A8 + 12 | 0] | i3[A8 + 13 | 0] << 8 | i3[A8 + 14 | 0] << 16 | i3[A8 + 15 | 0] << 24, k4 = i3[0 | I7] | i3[I7 + 1 | 0] << 8 | i3[I7 + 2 | 0] << 16 | i3[I7 + 3 | 0] << 24, I7 = g6 + 112 | 0, A8 = 33620224 ^ (e4 = i3[0 | A8] | i3[A8 + 1 | 0] << 8 | i3[A8 + 2 | 0] << 16 | i3[A8 + 3 | 0] << 24), E3[I7 >> 2] = A8, E3[(c4 = g6 + 96 | 0) >> 2] = 1427652059 ^ e4, E3[(D4 = g6 + 80 | 0) >> 2] = A8, s4 = e4 ^ k4, E3[(A8 = g6 - -64 | 0) >> 2] = s4, E3[g6 + 56 >> 2] = 1110511904, E3[g6 + 60 >> 2] = -584534669, E3[(B4 = g6 + 48 | 0) >> 2] = 1427652059, E3[B4 + 4 >> 2] = -248528275, E3[g6 + 40 >> 2] = 1496785429, E3[g6 + 44 >> 2] = 1652156816, E3[(Q4 = g6 + 32 | 0) >> 2] = 33620224, E3[Q4 + 4 >> 2] = 218629379, E3[g6 + 24 >> 2] = 1110511904, E3[g6 + 28 >> 2] = -584534669, E3[(o4 = g6 + 16 | 0) >> 2] = 1427652059, E3[o4 + 4 >> 2] = -248528275, E3[g6 >> 2] = s4, s4 = 1652156816 ^ f4, E3[g6 + 124 >> 2] = s4, F4 = 1496785429 ^ y4, E3[g6 + 120 >> 2] = F4, n4 = 218629379 ^ a4, E3[g6 + 116 >> 2] = n4, E3[g6 + 108 >> 2] = -584534669 ^ f4, E3[g6 + 104 >> 2] = 1110511904 ^ y4, E3[g6 + 100 >> 2] = -248528275 ^ a4, E3[g6 + 92 >> 2] = s4, E3[g6 + 88 >> 2] = F4, E3[g6 + 84 >> 2] = n4, s4 = f4 ^ h4, E3[g6 + 76 >> 2] = s4, F4 = y4 ^ t4, E3[g6 + 72 >> 2] = F4, n4 = a4 ^ w4, E3[g6 + 68 >> 2] = n4, E3[g6 + 12 >> 2] = s4, E3[g6 + 8 >> 2] = F4, E3[g6 + 4 >> 2] = n4, F4 = 0; s4 = E3[I7 + 12 >> 2], E3[C4 + 280 >> 2] = E3[I7 + 8 >> 2], E3[C4 + 284 >> 2] = s4, s4 = E3[I7 + 4 >> 2], E3[C4 + 272 >> 2] = E3[I7 >> 2], E3[C4 + 276 >> 2] = s4, s4 = E3[c4 + 12 >> 2], E3[C4 + 248 >> 2] = E3[c4 + 8 >> 2], E3[C4 + 252 >> 2] = s4, s4 = E3[c4 + 4 >> 2], E3[C4 + 240 >> 2] = E3[c4 >> 2], E3[C4 + 244 >> 2] = s4, s4 = E3[I7 + 12 >> 2], E3[C4 + 232 >> 2] = E3[I7 + 8 >> 2], E3[C4 + 236 >> 2] = s4, s4 = E3[I7 + 4 >> 2], E3[C4 + 224 >> 2] = E3[I7 >> 2], E3[C4 + 228 >> 2] = s4, aA(s4 = C4 + 256 | 0, C4 + 240 | 0, C4 + 224 | 0), n4 = E3[C4 + 268 >> 2], E3[I7 + 8 >> 2] = E3[C4 + 264 >> 2], E3[I7 + 12 >> 2] = n4, n4 = E3[C4 + 260 >> 2], E3[I7 >> 2] = E3[C4 + 256 >> 2], E3[I7 + 4 >> 2] = n4, n4 = E3[D4 + 12 >> 2], E3[C4 + 216 >> 2] = E3[D4 + 8 >> 2], E3[C4 + 220 >> 2] = n4, n4 = E3[D4 + 4 >> 2], E3[C4 + 208 >> 2] = E3[D4 >> 2], E3[C4 + 212 >> 2] = n4, n4 = E3[c4 + 12 >> 2], E3[C4 + 200 >> 2] = E3[c4 + 8 >> 2], E3[C4 + 204 >> 2] = n4, n4 = E3[c4 + 4 >> 2], E3[C4 + 192 >> 2] = E3[c4 >> 2], E3[C4 + 196 >> 2] = n4, aA(s4, C4 + 208 | 0, C4 + 192 | 0), n4 = E3[C4 + 268 >> 2], E3[c4 + 8 >> 2] = E3[C4 + 264 >> 2], E3[c4 + 12 >> 2] = n4, n4 = E3[C4 + 260 >> 2], E3[c4 >> 2] = E3[C4 + 256 >> 2], E3[c4 + 4 >> 2] = n4, n4 = E3[A8 + 12 >> 2], E3[C4 + 184 >> 2] = E3[A8 + 8 >> 2], E3[C4 + 188 >> 2] = n4, n4 = E3[A8 + 4 >> 2], E3[C4 + 176 >> 2] = E3[A8 >> 2], E3[C4 + 180 >> 2] = n4, n4 = E3[D4 + 12 >> 2], E3[C4 + 168 >> 2] = E3[D4 + 8 >> 2], E3[C4 + 172 >> 2] = n4, n4 = E3[D4 + 4 >> 2], E3[C4 + 160 >> 2] = E3[D4 >> 2], E3[C4 + 164 >> 2] = n4, aA(s4, C4 + 176 | 0, C4 + 160 | 0), n4 = E3[C4 + 268 >> 2], E3[D4 + 8 >> 2] = E3[C4 + 264 >> 2], E3[D4 + 12 >> 2] = n4, n4 = E3[C4 + 260 >> 2], E3[D4 >> 2] = E3[C4 + 256 >> 2], E3[D4 + 4 >> 2] = n4, n4 = E3[B4 + 12 >> 2], E3[C4 + 152 >> 2] = E3[B4 + 8 >> 2], E3[C4 + 156 >> 2] = n4, n4 = E3[B4 + 4 >> 2], E3[C4 + 144 >> 2] = E3[B4 >> 2], E3[C4 + 148 >> 2] = n4, n4 = E3[A8 + 12 >> 2], E3[C4 + 136 >> 2] = E3[A8 + 8 >> 2], E3[C4 + 140 >> 2] = n4, n4 = E3[A8 + 4 >> 2], E3[C4 + 128 >> 2] = E3[A8 >> 2], E3[C4 + 132 >> 2] = n4, aA(s4, C4 + 144 | 0, C4 + 128 | 0), n4 = E3[C4 + 268 >> 2], E3[A8 + 8 >> 2] = E3[C4 + 264 >> 2], E3[A8 + 12 >> 2] = n4, n4 = E3[C4 + 260 >> 2], E3[A8 >> 2] = E3[C4 + 256 >> 2], E3[A8 + 4 >> 2] = n4, n4 = E3[Q4 + 12 >> 2], E3[C4 + 120 >> 2] = E3[Q4 + 8 >> 2], E3[C4 + 124 >> 2] = n4, n4 = E3[Q4 + 4 >> 2], E3[C4 + 112 >> 2] = E3[Q4 >> 2], E3[C4 + 116 >> 2] = n4, n4 = E3[B4 + 12 >> 2], E3[C4 + 104 >> 2] = E3[B4 + 8 >> 2], E3[C4 + 108 >> 2] = n4, n4 = E3[B4 + 4 >> 2], E3[C4 + 96 >> 2] = E3[B4 >> 2], E3[C4 + 100 >> 2] = n4, aA(s4, C4 + 112 | 0, C4 + 96 | 0), n4 = E3[C4 + 268 >> 2], E3[B4 + 8 >> 2] = E3[C4 + 264 >> 2], E3[B4 + 12 >> 2] = n4, n4 = E3[C4 + 260 >> 2], E3[B4 >> 2] = E3[C4 + 256 >> 2], E3[B4 + 4 >> 2] = n4, n4 = E3[o4 + 12 >> 2], E3[C4 + 88 >> 2] = E3[o4 + 8 >> 2], E3[C4 + 92 >> 2] = n4, n4 = E3[o4 + 4 >> 2], E3[C4 + 80 >> 2] = E3[o4 >> 2], E3[C4 + 84 >> 2] = n4, n4 = E3[Q4 + 12 >> 2], E3[C4 + 72 >> 2] = E3[Q4 + 8 >> 2], E3[C4 + 76 >> 2] = n4, n4 = E3[Q4 + 4 >> 2], E3[C4 + 64 >> 2] = E3[Q4 >> 2], E3[C4 + 68 >> 2] = n4, aA(s4, C4 + 80 | 0, C4 - -64 | 0), n4 = E3[C4 + 268 >> 2], E3[Q4 + 8 >> 2] = E3[C4 + 264 >> 2], E3[Q4 + 12 >> 2] = n4, n4 = E3[C4 + 260 >> 2], E3[Q4 >> 2] = E3[C4 + 256 >> 2], E3[Q4 + 4 >> 2] = n4, n4 = E3[g6 + 12 >> 2], E3[C4 + 56 >> 2] = E3[g6 + 8 >> 2], E3[C4 + 60 >> 2] = n4, n4 = E3[g6 + 4 >> 2], E3[C4 + 48 >> 2] = E3[g6 >> 2], E3[C4 + 52 >> 2] = n4, n4 = E3[o4 + 12 >> 2], E3[C4 + 40 >> 2] = E3[o4 + 8 >> 2], E3[C4 + 44 >> 2] = n4, n4 = E3[o4 + 4 >> 2], E3[C4 + 32 >> 2] = E3[o4 >> 2], E3[C4 + 36 >> 2] = n4, aA(s4, C4 + 48 | 0, C4 + 32 | 0), n4 = E3[C4 + 268 >> 2], E3[o4 + 8 >> 2] = E3[C4 + 264 >> 2], E3[o4 + 12 >> 2] = n4, n4 = E3[C4 + 260 >> 2], E3[o4 >> 2] = E3[C4 + 256 >> 2], E3[o4 + 4 >> 2] = n4, n4 = E3[C4 + 284 >> 2], E3[C4 + 24 >> 2] = E3[C4 + 280 >> 2], E3[C4 + 28 >> 2] = n4, n4 = E3[C4 + 276 >> 2], E3[C4 + 16 >> 2] = E3[C4 + 272 >> 2], E3[C4 + 20 >> 2] = n4, n4 = E3[g6 + 12 >> 2], E3[C4 + 8 >> 2] = E3[g6 + 8 >> 2], E3[C4 + 12 >> 2] = n4, n4 = E3[g6 + 4 >> 2], E3[C4 >> 2] = E3[g6 >> 2], E3[C4 + 4 >> 2] = n4, aA(s4, C4 + 16 | 0, C4), s4 = E3[C4 + 268 >> 2], E3[g6 + 8 >> 2] = E3[C4 + 264 >> 2], E3[g6 + 12 >> 2] = s4, s4 = E3[C4 + 260 >> 2], E3[g6 >> 2] = E3[C4 + 256 >> 2], E3[g6 + 4 >> 2] = s4, E3[g6 + 12 >> 2] = (i3[g6 + 12 | 0] | i3[g6 + 13 | 0] << 8 | i3[g6 + 14 | 0] << 16 | i3[g6 + 15 | 0] << 24) ^ h4, E3[g6 + 8 >> 2] = (i3[g6 + 8 | 0] | i3[g6 + 9 | 0] << 8 | i3[g6 + 10 | 0] << 16 | i3[g6 + 11 | 0] << 24) ^ t4, E3[g6 + 4 >> 2] = (i3[g6 + 4 | 0] | i3[g6 + 5 | 0] << 8 | i3[g6 + 6 | 0] << 16 | i3[g6 + 7 | 0] << 24) ^ w4, E3[g6 >> 2] = (i3[0 | g6] | i3[g6 + 1 | 0] << 8 | i3[g6 + 2 | 0] << 16 | i3[g6 + 3 | 0] << 24) ^ k4, E3[A8 >> 2] = (i3[0 | A8] | i3[A8 + 1 | 0] << 8 | i3[A8 + 2 | 0] << 16 | i3[A8 + 3 | 0] << 24) ^ e4, E3[g6 + 68 >> 2] = (i3[g6 + 68 | 0] | i3[g6 + 69 | 0] << 8 | i3[g6 + 70 | 0] << 16 | i3[g6 + 71 | 0] << 24) ^ a4, E3[g6 + 72 >> 2] = (i3[g6 + 72 | 0] | i3[g6 + 73 | 0] << 8 | i3[g6 + 74 | 0] << 16 | i3[g6 + 75 | 0] << 24) ^ y4, E3[g6 + 76 >> 2] = (i3[g6 + 76 | 0] | i3[g6 + 77 | 0] << 8 | i3[g6 + 78 | 0] << 16 | i3[g6 + 79 | 0] << 24) ^ f4, 10 != (0 | (F4 = F4 + 1 | 0)); ) ;
                      r3 = C4 + 288 | 0;
                    }
                    function P3(A8, I7, g6, B4, Q4) {
                      var o4, c4, D4, a4, y4, f4, e4, w4, t4, h4, k4, n4, s4, F4, S4, M4 = 0, N4 = 0, K4 = 0, _4 = 0, p4 = 0, H4 = 0, G4 = 0, J4 = 0, Y4 = 0, U4 = 0, d4 = 0, b4 = 0, P4 = 0, v5 = 0, R4 = 0, L4 = 0, x4 = 0, u4 = 0, m4 = 0, q4 = 0, l3 = 0, z2 = 0, j2 = 0, X2 = 0, O2 = 0, T2 = 0, V2 = 0, Z2 = 0, W2 = 0, $2 = 0, AA2 = 0, IA2 = 0, gA2 = 0, CA2 = 0;
                      for (o4 = r3 + -64 | 0, c4 = E3[A8 + 60 >> 2], D4 = E3[A8 + 56 >> 2], q4 = E3[A8 + 52 >> 2], m4 = E3[A8 + 48 >> 2], a4 = E3[A8 + 44 >> 2], y4 = E3[A8 + 40 >> 2], f4 = E3[A8 + 36 >> 2], e4 = E3[A8 + 32 >> 2], w4 = E3[A8 + 28 >> 2], t4 = E3[A8 + 24 >> 2], h4 = E3[A8 + 20 >> 2], k4 = E3[A8 + 16 >> 2], n4 = E3[A8 + 12 >> 2], s4 = E3[A8 + 8 >> 2], F4 = E3[A8 + 4 >> 2], S4 = E3[A8 >> 2]; ; ) {
                        if (!Q4 & B4 >>> 0 > 63 | Q4) M4 = g6;
                        else {
                          if (E3[o4 + 56 >> 2] = 0, E3[o4 + 60 >> 2] = 0, E3[o4 + 48 >> 2] = 0, E3[o4 + 52 >> 2] = 0, E3[o4 + 40 >> 2] = 0, E3[o4 + 44 >> 2] = 0, E3[o4 + 32 >> 2] = 0, E3[o4 + 36 >> 2] = 0, E3[o4 + 24 >> 2] = 0, E3[o4 + 28 >> 2] = 0, E3[o4 + 16 >> 2] = 0, E3[o4 + 20 >> 2] = 0, E3[o4 + 8 >> 2] = 0, E3[o4 + 12 >> 2] = 0, E3[o4 >> 2] = 0, E3[o4 + 4 >> 2] = 0, K4 = 0, B4 | Q4) for (; C3[K4 + o4 | 0] = i3[I7 + K4 | 0], !Q4 & (K4 = K4 + 1 | 0) >>> 0 < B4 >>> 0 | Q4; ) ;
                          I7 = M4 = o4, O2 = g6;
                        }
                        for (l3 = 20, N4 = S4, U4 = F4, d4 = s4, v5 = n4, K4 = k4, g6 = h4, p4 = t4, H4 = w4, G4 = e4, L4 = f4, b4 = y4, _4 = c4, x4 = D4, R4 = q4, P4 = m4, J4 = a4; Y4 = K4, N4 = gI((K4 = N4 + K4 | 0) ^ P4, 16), Y4 = P4 = gI(Y4 ^ (G4 = N4 + G4 | 0), 12), P4 = gI((u4 = K4 + P4 | 0) ^ N4, 8), K4 = gI(Y4 ^ (G4 = P4 + G4 | 0), 7), _4 = gI((N4 = H4 + v5 | 0) ^ _4, 16), H4 = gI((J4 = _4 + J4 | 0) ^ H4, 12), v5 = gI((d4 = p4 + d4 | 0) ^ x4, 16), p4 = gI((b4 = v5 + b4 | 0) ^ p4, 12), x4 = (z2 = N4 + H4 | 0) + K4 | 0, j2 = gI((d4 = p4 + d4 | 0) ^ v5, 8), N4 = gI(x4 ^ j2, 16), v5 = gI((U4 = g6 + U4 | 0) ^ R4, 16), g6 = gI((L4 = v5 + L4 | 0) ^ g6, 12), Y4 = K4, R4 = gI((U4 = g6 + U4 | 0) ^ v5, 8), Y4 = gI(Y4 ^ (K4 = (X2 = R4 + L4 | 0) + N4 | 0), 12), x4 = gI(N4 ^ (v5 = Y4 + x4 | 0), 8), K4 = gI((L4 = x4 + K4 | 0) ^ Y4, 7), Y4 = G4, G4 = d4, N4 = gI(_4 ^ z2, 8), d4 = gI((_4 = N4 + J4 | 0) ^ H4, 7), R4 = gI((G4 = G4 + d4 | 0) ^ R4, 16), J4 = gI((H4 = Y4 + R4 | 0) ^ d4, 12), R4 = gI(R4 ^ (d4 = J4 + G4 | 0), 8), H4 = gI((G4 = H4 + R4 | 0) ^ J4, 7), J4 = _4, _4 = U4, U4 = gI((b4 = b4 + j2 | 0) ^ p4, 7), p4 = J4 + (P4 = gI((_4 = _4 + U4 | 0) ^ P4, 16)) | 0, J4 = _4, _4 = gI(p4 ^ U4, 12), P4 = gI(P4 ^ (U4 = J4 + _4 | 0), 8), p4 = gI((J4 = p4 + P4 | 0) ^ _4, 7), Y4 = b4, _4 = N4, N4 = gI(g6 ^ X2, 7), _4 = gI(_4 ^ (b4 = N4 + u4 | 0), 16), u4 = gI((g6 = Y4 + _4 | 0) ^ N4, 12), _4 = gI(_4 ^ (N4 = u4 + b4 | 0), 8), g6 = gI((b4 = g6 + _4 | 0) ^ u4, 7), l3 = l3 - 2 | 0; ) ;
                        if (l3 = i3[I7 + 4 | 0] | i3[I7 + 5 | 0] << 8 | i3[I7 + 6 | 0] << 16 | i3[I7 + 7 | 0] << 24, u4 = i3[I7 + 8 | 0] | i3[I7 + 9 | 0] << 8 | i3[I7 + 10 | 0] << 16 | i3[I7 + 11 | 0] << 24, z2 = i3[I7 + 12 | 0] | i3[I7 + 13 | 0] << 8 | i3[I7 + 14 | 0] << 16 | i3[I7 + 15 | 0] << 24, j2 = i3[I7 + 16 | 0] | i3[I7 + 17 | 0] << 8 | i3[I7 + 18 | 0] << 16 | i3[I7 + 19 | 0] << 24, X2 = i3[I7 + 20 | 0] | i3[I7 + 21 | 0] << 8 | i3[I7 + 22 | 0] << 16 | i3[I7 + 23 | 0] << 24, Y4 = i3[I7 + 24 | 0] | i3[I7 + 25 | 0] << 8 | i3[I7 + 26 | 0] << 16 | i3[I7 + 27 | 0] << 24, T2 = i3[I7 + 28 | 0] | i3[I7 + 29 | 0] << 8 | i3[I7 + 30 | 0] << 16 | i3[I7 + 31 | 0] << 24, V2 = i3[I7 + 32 | 0] | i3[I7 + 33 | 0] << 8 | i3[I7 + 34 | 0] << 16 | i3[I7 + 35 | 0] << 24, Z2 = i3[I7 + 36 | 0] | i3[I7 + 37 | 0] << 8 | i3[I7 + 38 | 0] << 16 | i3[I7 + 39 | 0] << 24, W2 = i3[I7 + 40 | 0] | i3[I7 + 41 | 0] << 8 | i3[I7 + 42 | 0] << 16 | i3[I7 + 43 | 0] << 24, $2 = i3[I7 + 44 | 0] | i3[I7 + 45 | 0] << 8 | i3[I7 + 46 | 0] << 16 | i3[I7 + 47 | 0] << 24, AA2 = i3[I7 + 48 | 0] | i3[I7 + 49 | 0] << 8 | i3[I7 + 50 | 0] << 16 | i3[I7 + 51 | 0] << 24, IA2 = i3[I7 + 52 | 0] | i3[I7 + 53 | 0] << 8 | i3[I7 + 54 | 0] << 16 | i3[I7 + 55 | 0] << 24, gA2 = i3[I7 + 56 | 0] | i3[I7 + 57 | 0] << 8 | i3[I7 + 58 | 0] << 16 | i3[I7 + 59 | 0] << 24, CA2 = i3[I7 + 60 | 0] | i3[I7 + 61 | 0] << 8 | i3[I7 + 62 | 0] << 16 | i3[I7 + 63 | 0] << 24, N4 = N4 + S4 ^ (i3[0 | I7] | i3[I7 + 1 | 0] << 8 | i3[I7 + 2 | 0] << 16 | i3[I7 + 3 | 0] << 24), C3[0 | M4] = N4, C3[M4 + 1 | 0] = N4 >>> 8, C3[M4 + 2 | 0] = N4 >>> 16, C3[M4 + 3 | 0] = N4 >>> 24, N4 = _4 + c4 ^ CA2, C3[M4 + 60 | 0] = N4, C3[M4 + 61 | 0] = N4 >>> 8, C3[M4 + 62 | 0] = N4 >>> 16, C3[M4 + 63 | 0] = N4 >>> 24, N4 = x4 + D4 ^ gA2, C3[M4 + 56 | 0] = N4, C3[M4 + 57 | 0] = N4 >>> 8, C3[M4 + 58 | 0] = N4 >>> 16, C3[M4 + 59 | 0] = N4 >>> 24, N4 = R4 + q4 ^ IA2, C3[M4 + 52 | 0] = N4, C3[M4 + 53 | 0] = N4 >>> 8, C3[M4 + 54 | 0] = N4 >>> 16, C3[M4 + 55 | 0] = N4 >>> 24, N4 = P4 + m4 ^ AA2, C3[M4 + 48 | 0] = N4, C3[M4 + 49 | 0] = N4 >>> 8, C3[M4 + 50 | 0] = N4 >>> 16, C3[M4 + 51 | 0] = N4 >>> 24, N4 = J4 + a4 ^ $2, C3[M4 + 44 | 0] = N4, C3[M4 + 45 | 0] = N4 >>> 8, C3[M4 + 46 | 0] = N4 >>> 16, C3[M4 + 47 | 0] = N4 >>> 24, N4 = b4 + y4 ^ W2, C3[M4 + 40 | 0] = N4, C3[M4 + 41 | 0] = N4 >>> 8, C3[M4 + 42 | 0] = N4 >>> 16, C3[M4 + 43 | 0] = N4 >>> 24, N4 = L4 + f4 ^ Z2, C3[M4 + 36 | 0] = N4, C3[M4 + 37 | 0] = N4 >>> 8, C3[M4 + 38 | 0] = N4 >>> 16, C3[M4 + 39 | 0] = N4 >>> 24, N4 = G4 + e4 ^ V2, C3[M4 + 32 | 0] = N4, C3[M4 + 33 | 0] = N4 >>> 8, C3[M4 + 34 | 0] = N4 >>> 16, C3[M4 + 35 | 0] = N4 >>> 24, H4 = H4 + w4 ^ T2, C3[M4 + 28 | 0] = H4, C3[M4 + 29 | 0] = H4 >>> 8, C3[M4 + 30 | 0] = H4 >>> 16, C3[M4 + 31 | 0] = H4 >>> 24, p4 = Y4 ^ p4 + t4, C3[M4 + 24 | 0] = p4, C3[M4 + 25 | 0] = p4 >>> 8, C3[M4 + 26 | 0] = p4 >>> 16, C3[M4 + 27 | 0] = p4 >>> 24, g6 = X2 ^ g6 + h4, C3[M4 + 20 | 0] = g6, C3[M4 + 21 | 0] = g6 >>> 8, C3[M4 + 22 | 0] = g6 >>> 16, C3[M4 + 23 | 0] = g6 >>> 24, g6 = j2 ^ K4 + k4, C3[M4 + 16 | 0] = g6, C3[M4 + 17 | 0] = g6 >>> 8, C3[M4 + 18 | 0] = g6 >>> 16, C3[M4 + 19 | 0] = g6 >>> 24, g6 = z2 ^ v5 + n4, C3[M4 + 12 | 0] = g6, C3[M4 + 13 | 0] = g6 >>> 8, C3[M4 + 14 | 0] = g6 >>> 16, C3[M4 + 15 | 0] = g6 >>> 24, g6 = u4 ^ d4 + s4, C3[M4 + 8 | 0] = g6, C3[M4 + 9 | 0] = g6 >>> 8, C3[M4 + 10 | 0] = g6 >>> 16, C3[M4 + 11 | 0] = g6 >>> 24, g6 = l3 ^ U4 + F4, C3[M4 + 4 | 0] = g6, C3[M4 + 5 | 0] = g6 >>> 8, C3[M4 + 6 | 0] = g6 >>> 16, C3[M4 + 7 | 0] = g6 >>> 24, q4 = !(m4 = m4 + 1 | 0) + q4 | 0, !Q4 & B4 >>> 0 <= 64) {
                          if (!(!(B4 | Q4) | !Q4 & B4 >>> 0 > 63 | !!(0 | Q4))) for (K4 = 0; C3[K4 + O2 | 0] = i3[M4 + K4 | 0], B4 >>> 0 > (K4 = K4 + 1 | 0) >>> 0; ) ;
                          E3[A8 + 52 >> 2] = q4, E3[A8 + 48 >> 2] = m4;
                          break;
                        }
                        I7 = I7 - -64 | 0, g6 = M4 - -64 | 0, Q4 = Q4 - 1 | 0, Q4 = (B4 = B4 + -64 | 0) >>> 0 < 4294967232 ? Q4 + 1 | 0 : Q4;
                      }
                    }
                    function v3(A8, I7) {
                      var g6, B4 = 0, Q4 = 0, i4 = 0, o4 = 0, c4 = 0, D4 = 0, a4 = 0;
                      r3 = g6 = r3 - 704 | 0, B4 = 80 + ((Q4 = E3[A8 + 72 >> 2] >>> 3 & 127) + A8 | 0) | 0, Q4 >>> 0 >= 112 ? (TA(B4, 34608, 128 - Q4 | 0), n3(A8, Q4 = A8 + 80 | 0, g6, g6 + 640 | 0), VA(Q4, 0, 112)) : TA(B4, 34608, 112 - Q4 | 0), D4 = (i4 = E3[A8 + 64 >> 2]) << 24 | (65280 & i4) << 8, Q4 = (o4 = 16711680 & i4) >>> 8 | 0, a4 = o4 << 24, o4 = (c4 = -16777216 & i4) >>> 24 | 0, B4 = a4 | c4 << 8 | -16777216 & ((255 & (B4 = E3[A8 + 68 >> 2])) << 24 | i4 >>> 8) | 16711680 & ((16777215 & B4) << 8 | i4 >>> 24) | B4 >>> 8 & 65280 | B4 >>> 24, C3[A8 + 192 | 0] = B4, C3[A8 + 193 | 0] = B4 >>> 8, C3[A8 + 194 | 0] = B4 >>> 16, C3[A8 + 195 | 0] = B4 >>> 24, B4 = Q4 | o4 | D4, Q4 = 0, Q4 |= B4, C3[A8 + 196 | 0] = Q4, C3[A8 + 197 | 0] = Q4 >>> 8, C3[A8 + 198 | 0] = Q4 >>> 16, C3[A8 + 199 | 0] = Q4 >>> 24, D4 = (i4 = E3[A8 + 72 >> 2]) << 24 | (65280 & i4) << 8, Q4 = (o4 = 16711680 & i4) >>> 8 | 0, a4 = o4 << 24, o4 = (c4 = -16777216 & i4) >>> 24 | 0, B4 = a4 | c4 << 8 | -16777216 & ((255 & (B4 = E3[A8 + 76 >> 2])) << 24 | i4 >>> 8) | 16711680 & ((16777215 & B4) << 8 | i4 >>> 24) | B4 >>> 8 & 65280 | B4 >>> 24, C3[A8 + 200 | 0] = B4, C3[A8 + 201 | 0] = B4 >>> 8, C3[A8 + 202 | 0] = B4 >>> 16, C3[A8 + 203 | 0] = B4 >>> 24, B4 = Q4 | o4 | D4, Q4 = 0, Q4 |= B4, C3[A8 + 204 | 0] = Q4, C3[A8 + 205 | 0] = Q4 >>> 8, C3[A8 + 206 | 0] = Q4 >>> 16, C3[A8 + 207 | 0] = Q4 >>> 24, n3(A8, A8 + 80 | 0, g6, g6 + 640 | 0), D4 = (i4 = E3[A8 >> 2]) << 24 | (65280 & i4) << 8, Q4 = (o4 = 16711680 & i4) >>> 8 | 0, a4 = o4 << 24, o4 = (c4 = -16777216 & i4) >>> 24 | 0, B4 = a4 | c4 << 8 | -16777216 & ((255 & (B4 = E3[A8 + 4 >> 2])) << 24 | i4 >>> 8) | 16711680 & ((16777215 & B4) << 8 | i4 >>> 24) | B4 >>> 8 & 65280 | B4 >>> 24, C3[0 | I7] = B4, C3[I7 + 1 | 0] = B4 >>> 8, C3[I7 + 2 | 0] = B4 >>> 16, C3[I7 + 3 | 0] = B4 >>> 24, B4 = Q4 | o4 | D4, Q4 = 0, Q4 |= B4, C3[I7 + 4 | 0] = Q4, C3[I7 + 5 | 0] = Q4 >>> 8, C3[I7 + 6 | 0] = Q4 >>> 16, C3[I7 + 7 | 0] = Q4 >>> 24, D4 = (i4 = E3[A8 + 8 >> 2]) << 24 | (65280 & i4) << 8, Q4 = (o4 = 16711680 & i4) >>> 8 | 0, a4 = o4 << 24, o4 = (c4 = -16777216 & i4) >>> 24 | 0, B4 = a4 | c4 << 8 | -16777216 & ((255 & (B4 = E3[A8 + 12 >> 2])) << 24 | i4 >>> 8) | 16711680 & ((16777215 & B4) << 8 | i4 >>> 24) | B4 >>> 8 & 65280 | B4 >>> 24, C3[I7 + 8 | 0] = B4, C3[I7 + 9 | 0] = B4 >>> 8, C3[I7 + 10 | 0] = B4 >>> 16, C3[I7 + 11 | 0] = B4 >>> 24, B4 = Q4 | o4 | D4, Q4 = 0, Q4 |= B4, C3[I7 + 12 | 0] = Q4, C3[I7 + 13 | 0] = Q4 >>> 8, C3[I7 + 14 | 0] = Q4 >>> 16, C3[I7 + 15 | 0] = Q4 >>> 24, D4 = (i4 = E3[A8 + 16 >> 2]) << 24 | (65280 & i4) << 8, Q4 = (o4 = 16711680 & i4) >>> 8 | 0, a4 = o4 << 24, o4 = (c4 = -16777216 & i4) >>> 24 | 0, B4 = a4 | c4 << 8 | -16777216 & ((255 & (B4 = E3[A8 + 20 >> 2])) << 24 | i4 >>> 8) | 16711680 & ((16777215 & B4) << 8 | i4 >>> 24) | B4 >>> 8 & 65280 | B4 >>> 24, C3[I7 + 16 | 0] = B4, C3[I7 + 17 | 0] = B4 >>> 8, C3[I7 + 18 | 0] = B4 >>> 16, C3[I7 + 19 | 0] = B4 >>> 24, B4 = Q4 | o4 | D4, Q4 = 0, Q4 |= B4, C3[I7 + 20 | 0] = Q4, C3[I7 + 21 | 0] = Q4 >>> 8, C3[I7 + 22 | 0] = Q4 >>> 16, C3[I7 + 23 | 0] = Q4 >>> 24, D4 = (i4 = E3[A8 + 24 >> 2]) << 24 | (65280 & i4) << 8, Q4 = (o4 = 16711680 & i4) >>> 8 | 0, a4 = o4 << 24, o4 = (c4 = -16777216 & i4) >>> 24 | 0, B4 = a4 | c4 << 8 | -16777216 & ((255 & (B4 = E3[A8 + 28 >> 2])) << 24 | i4 >>> 8) | 16711680 & ((16777215 & B4) << 8 | i4 >>> 24) | B4 >>> 8 & 65280 | B4 >>> 24, C3[I7 + 24 | 0] = B4, C3[I7 + 25 | 0] = B4 >>> 8, C3[I7 + 26 | 0] = B4 >>> 16, C3[I7 + 27 | 0] = B4 >>> 24, B4 = Q4 | o4 | D4, Q4 = 0, Q4 |= B4, C3[I7 + 28 | 0] = Q4, C3[I7 + 29 | 0] = Q4 >>> 8, C3[I7 + 30 | 0] = Q4 >>> 16, C3[I7 + 31 | 0] = Q4 >>> 24, D4 = (i4 = E3[A8 + 32 >> 2]) << 24 | (65280 & i4) << 8, Q4 = (o4 = 16711680 & i4) >>> 8 | 0, a4 = o4 << 24, o4 = (c4 = -16777216 & i4) >>> 24 | 0, B4 = a4 | c4 << 8 | -16777216 & ((255 & (B4 = E3[A8 + 36 >> 2])) << 24 | i4 >>> 8) | 16711680 & ((16777215 & B4) << 8 | i4 >>> 24) | B4 >>> 8 & 65280 | B4 >>> 24, C3[I7 + 32 | 0] = B4, C3[I7 + 33 | 0] = B4 >>> 8, C3[I7 + 34 | 0] = B4 >>> 16, C3[I7 + 35 | 0] = B4 >>> 24, B4 = Q4 | o4 | D4, Q4 = 0, Q4 |= B4, C3[I7 + 36 | 0] = Q4, C3[I7 + 37 | 0] = Q4 >>> 8, C3[I7 + 38 | 0] = Q4 >>> 16, C3[I7 + 39 | 0] = Q4 >>> 24, D4 = (i4 = E3[A8 + 40 >> 2]) << 24 | (65280 & i4) << 8, Q4 = (o4 = 16711680 & i4) >>> 8 | 0, a4 = o4 << 24, o4 = (c4 = -16777216 & i4) >>> 24 | 0, B4 = a4 | c4 << 8 | -16777216 & ((255 & (B4 = E3[A8 + 44 >> 2])) << 24 | i4 >>> 8) | 16711680 & ((16777215 & B4) << 8 | i4 >>> 24) | B4 >>> 8 & 65280 | B4 >>> 24, C3[I7 + 40 | 0] = B4, C3[I7 + 41 | 0] = B4 >>> 8, C3[I7 + 42 | 0] = B4 >>> 16, C3[I7 + 43 | 0] = B4 >>> 24, B4 = Q4 | o4 | D4, Q4 = 0, Q4 |= B4, C3[I7 + 44 | 0] = Q4, C3[I7 + 45 | 0] = Q4 >>> 8, C3[I7 + 46 | 0] = Q4 >>> 16, C3[I7 + 47 | 0] = Q4 >>> 24, D4 = (i4 = E3[A8 + 48 >> 2]) << 24 | (65280 & i4) << 8, Q4 = (o4 = 16711680 & i4) >>> 8 | 0, a4 = o4 << 24, o4 = (c4 = -16777216 & i4) >>> 24 | 0, B4 = a4 | c4 << 8 | -16777216 & ((255 & (B4 = E3[A8 + 52 >> 2])) << 24 | i4 >>> 8) | 16711680 & ((16777215 & B4) << 8 | i4 >>> 24) | B4 >>> 8 & 65280 | B4 >>> 24, C3[I7 + 48 | 0] = B4, C3[I7 + 49 | 0] = B4 >>> 8, C3[I7 + 50 | 0] = B4 >>> 16, C3[I7 + 51 | 0] = B4 >>> 24, B4 = Q4 | o4 | D4, Q4 = 0, Q4 |= B4, C3[I7 + 52 | 0] = Q4, C3[I7 + 53 | 0] = Q4 >>> 8, C3[I7 + 54 | 0] = Q4 >>> 16, C3[I7 + 55 | 0] = Q4 >>> 24, D4 = (i4 = E3[A8 + 56 >> 2]) << 24 | (65280 & i4) << 8, Q4 = (o4 = 16711680 & i4) >>> 8 | 0, B4 = I7, a4 = o4 << 24, o4 = (c4 = -16777216 & i4) >>> 24 | 0, I7 = a4 | c4 << 8 | -16777216 & ((255 & (I7 = E3[A8 + 60 >> 2])) << 24 | i4 >>> 8) | 16711680 & ((16777215 & I7) << 8 | i4 >>> 24) | I7 >>> 8 & 65280 | I7 >>> 24, C3[B4 + 56 | 0] = I7, C3[B4 + 57 | 0] = I7 >>> 8, C3[B4 + 58 | 0] = I7 >>> 16, C3[B4 + 59 | 0] = I7 >>> 24, I7 = Q4 | o4 | D4, I7 |= Q4 = 0, C3[B4 + 60 | 0] = I7, C3[B4 + 61 | 0] = I7 >>> 8, C3[B4 + 62 | 0] = I7 >>> 16, C3[B4 + 63 | 0] = I7 >>> 24, MI(g6, 704), MI(A8, 208), r3 = g6 + 704 | 0;
                    }
                    function R3(A8, I7, g6) {
                      var B4, Q4, o4, c4, D4, a4, y4, f4, e4, w4, t4, h4, k4, n4, s4, F4, S4, M4, N4, K4, _4 = 0;
                      r3 = B4 = r3 - 224 | 0, a4 = i3[g6 + 16 | 0] | i3[g6 + 17 | 0] << 8 | i3[g6 + 18 | 0] << 16 | i3[g6 + 19 | 0] << 24, y4 = i3[0 | (_4 = g6 - -64 | 0)] | i3[_4 + 1 | 0] << 8 | i3[_4 + 2 | 0] << 16 | i3[_4 + 3 | 0] << 24, f4 = i3[g6 + 80 | 0] | i3[g6 + 81 | 0] << 8 | i3[g6 + 82 | 0] << 16 | i3[g6 + 83 | 0] << 24, e4 = i3[g6 + 32 | 0] | i3[g6 + 33 | 0] << 8 | i3[g6 + 34 | 0] << 16 | i3[g6 + 35 | 0] << 24, w4 = i3[g6 + 48 | 0] | i3[g6 + 49 | 0] << 8 | i3[g6 + 50 | 0] << 16 | i3[g6 + 51 | 0] << 24, Q4 = i3[I7 + 4 | 0] | i3[I7 + 5 | 0] << 8 | i3[I7 + 6 | 0] << 16 | i3[I7 + 7 | 0] << 24, t4 = i3[g6 + 20 | 0] | i3[g6 + 21 | 0] << 8 | i3[g6 + 22 | 0] << 16 | i3[g6 + 23 | 0] << 24, h4 = i3[g6 + 68 | 0] | i3[g6 + 69 | 0] << 8 | i3[g6 + 70 | 0] << 16 | i3[g6 + 71 | 0] << 24, k4 = i3[g6 + 84 | 0] | i3[g6 + 85 | 0] << 8 | i3[g6 + 86 | 0] << 16 | i3[g6 + 87 | 0] << 24, n4 = i3[g6 + 36 | 0] | i3[g6 + 37 | 0] << 8 | i3[g6 + 38 | 0] << 16 | i3[g6 + 39 | 0] << 24, s4 = i3[g6 + 52 | 0] | i3[g6 + 53 | 0] << 8 | i3[g6 + 54 | 0] << 16 | i3[g6 + 55 | 0] << 24, o4 = i3[I7 + 8 | 0] | i3[I7 + 9 | 0] << 8 | i3[I7 + 10 | 0] << 16 | i3[I7 + 11 | 0] << 24, F4 = i3[g6 + 24 | 0] | i3[g6 + 25 | 0] << 8 | i3[g6 + 26 | 0] << 16 | i3[g6 + 27 | 0] << 24, S4 = i3[g6 + 72 | 0] | i3[g6 + 73 | 0] << 8 | i3[g6 + 74 | 0] << 16 | i3[g6 + 75 | 0] << 24, M4 = i3[g6 + 88 | 0] | i3[g6 + 89 | 0] << 8 | i3[g6 + 90 | 0] << 16 | i3[g6 + 91 | 0] << 24, N4 = i3[g6 + 40 | 0] | i3[g6 + 41 | 0] << 8 | i3[g6 + 42 | 0] << 16 | i3[g6 + 43 | 0] << 24, K4 = i3[g6 + 56 | 0] | i3[g6 + 57 | 0] << 8 | i3[g6 + 58 | 0] << 16 | i3[g6 + 59 | 0] << 24, c4 = i3[0 | I7] | i3[I7 + 1 | 0] << 8 | i3[I7 + 2 | 0] << 16 | i3[I7 + 3 | 0] << 24, I7 = (D4 = i3[I7 + 12 | 0] | i3[I7 + 13 | 0] << 8 | i3[I7 + 14 | 0] << 16 | i3[I7 + 15 | 0] << 24) ^ (i3[g6 + 44 | 0] | i3[g6 + 45 | 0] << 8 | i3[g6 + 46 | 0] << 16 | i3[g6 + 47 | 0] << 24) & (i3[g6 + 60 | 0] | i3[g6 + 61 | 0] << 8 | i3[g6 + 62 | 0] << 16 | i3[g6 + 63 | 0] << 24) ^ (i3[g6 + 28 | 0] | i3[g6 + 29 | 0] << 8 | i3[g6 + 30 | 0] << 16 | i3[g6 + 31 | 0] << 24) ^ (i3[g6 + 92 | 0] | i3[g6 + 93 | 0] << 8 | i3[g6 + 94 | 0] << 16 | i3[g6 + 95 | 0] << 24) ^ (i3[g6 + 76 | 0] | i3[g6 + 77 | 0] << 8 | i3[g6 + 78 | 0] << 16 | i3[g6 + 79 | 0] << 24), C3[A8 + 12 | 0] = I7, C3[A8 + 13 | 0] = I7 >>> 8, C3[A8 + 14 | 0] = I7 >>> 16, C3[A8 + 15 | 0] = I7 >>> 24, I7 = N4 & K4 ^ S4 ^ M4 ^ F4 ^ o4, C3[A8 + 8 | 0] = I7, C3[A8 + 9 | 0] = I7 >>> 8, C3[A8 + 10 | 0] = I7 >>> 16, C3[A8 + 11 | 0] = I7 >>> 24, I7 = n4 & s4 ^ h4 ^ k4 ^ t4 ^ Q4, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, I7 = e4 & w4 ^ a4 ^ y4 ^ f4 ^ c4, C3[0 | A8] = I7, C3[A8 + 1 | 0] = I7 >>> 8, C3[A8 + 2 | 0] = I7 >>> 16, C3[A8 + 3 | 0] = I7 >>> 24, A8 = E3[g6 + 92 >> 2], E3[B4 + 216 >> 2] = E3[g6 + 88 >> 2], E3[B4 + 220 >> 2] = A8, A8 = E3[g6 + 84 >> 2], E3[B4 + 208 >> 2] = E3[g6 + 80 >> 2], E3[B4 + 212 >> 2] = A8, A8 = E3[g6 + 76 >> 2], E3[B4 + 184 >> 2] = E3[g6 + 72 >> 2], E3[B4 + 188 >> 2] = A8, A8 = E3[_4 + 4 >> 2], E3[B4 + 176 >> 2] = E3[_4 >> 2], E3[B4 + 180 >> 2] = A8, A8 = E3[g6 + 92 >> 2], E3[B4 + 168 >> 2] = E3[g6 + 88 >> 2], E3[B4 + 172 >> 2] = A8, A8 = E3[g6 + 84 >> 2], E3[B4 + 160 >> 2] = E3[g6 + 80 >> 2], E3[B4 + 164 >> 2] = A8, aA(A8 = B4 + 192 | 0, B4 + 176 | 0, B4 + 160 | 0), I7 = E3[B4 + 204 >> 2], E3[g6 + 88 >> 2] = E3[B4 + 200 >> 2], E3[g6 + 92 >> 2] = I7, I7 = E3[B4 + 196 >> 2], E3[g6 + 80 >> 2] = E3[B4 + 192 >> 2], E3[g6 + 84 >> 2] = I7, I7 = E3[g6 + 60 >> 2], E3[B4 + 152 >> 2] = E3[g6 + 56 >> 2], E3[B4 + 156 >> 2] = I7, I7 = E3[g6 + 52 >> 2], E3[B4 + 144 >> 2] = E3[g6 + 48 >> 2], E3[B4 + 148 >> 2] = I7, I7 = E3[g6 + 76 >> 2], E3[B4 + 136 >> 2] = E3[g6 + 72 >> 2], E3[B4 + 140 >> 2] = I7, I7 = E3[_4 + 4 >> 2], E3[B4 + 128 >> 2] = E3[_4 >> 2], E3[B4 + 132 >> 2] = I7, aA(A8, B4 + 144 | 0, B4 + 128 | 0), I7 = E3[B4 + 204 >> 2], E3[g6 + 72 >> 2] = E3[B4 + 200 >> 2], E3[g6 + 76 >> 2] = I7, I7 = E3[B4 + 196 >> 2], E3[_4 >> 2] = E3[B4 + 192 >> 2], E3[_4 + 4 >> 2] = I7, I7 = E3[g6 + 44 >> 2], E3[B4 + 120 >> 2] = E3[g6 + 40 >> 2], E3[B4 + 124 >> 2] = I7, I7 = E3[g6 + 36 >> 2], E3[B4 + 112 >> 2] = E3[g6 + 32 >> 2], E3[B4 + 116 >> 2] = I7, I7 = E3[g6 + 60 >> 2], E3[B4 + 104 >> 2] = E3[g6 + 56 >> 2], E3[B4 + 108 >> 2] = I7, I7 = E3[g6 + 52 >> 2], E3[B4 + 96 >> 2] = E3[g6 + 48 >> 2], E3[B4 + 100 >> 2] = I7, aA(A8, B4 + 112 | 0, B4 + 96 | 0), I7 = E3[B4 + 204 >> 2], E3[g6 + 56 >> 2] = E3[B4 + 200 >> 2], E3[g6 + 60 >> 2] = I7, I7 = E3[B4 + 196 >> 2], E3[g6 + 48 >> 2] = E3[B4 + 192 >> 2], E3[g6 + 52 >> 2] = I7, I7 = E3[g6 + 28 >> 2], E3[B4 + 88 >> 2] = E3[g6 + 24 >> 2], E3[B4 + 92 >> 2] = I7, I7 = E3[g6 + 20 >> 2], E3[B4 + 80 >> 2] = E3[g6 + 16 >> 2], E3[B4 + 84 >> 2] = I7, I7 = E3[g6 + 44 >> 2], E3[B4 + 72 >> 2] = E3[g6 + 40 >> 2], E3[B4 + 76 >> 2] = I7, I7 = E3[g6 + 36 >> 2], E3[B4 + 64 >> 2] = E3[g6 + 32 >> 2], E3[B4 + 68 >> 2] = I7, aA(A8, B4 + 80 | 0, B4 - -64 | 0), I7 = E3[B4 + 204 >> 2], E3[g6 + 40 >> 2] = E3[B4 + 200 >> 2], E3[g6 + 44 >> 2] = I7, I7 = E3[B4 + 196 >> 2], E3[g6 + 32 >> 2] = E3[B4 + 192 >> 2], E3[g6 + 36 >> 2] = I7, I7 = E3[g6 + 12 >> 2], E3[B4 + 56 >> 2] = E3[g6 + 8 >> 2], E3[B4 + 60 >> 2] = I7, I7 = E3[g6 + 4 >> 2], E3[B4 + 48 >> 2] = E3[g6 >> 2], E3[B4 + 52 >> 2] = I7, I7 = E3[g6 + 28 >> 2], E3[B4 + 40 >> 2] = E3[g6 + 24 >> 2], E3[B4 + 44 >> 2] = I7, I7 = E3[g6 + 20 >> 2], E3[B4 + 32 >> 2] = E3[g6 + 16 >> 2], E3[B4 + 36 >> 2] = I7, aA(A8, B4 + 48 | 0, B4 + 32 | 0), I7 = E3[B4 + 204 >> 2], E3[g6 + 24 >> 2] = E3[B4 + 200 >> 2], E3[g6 + 28 >> 2] = I7, I7 = E3[B4 + 196 >> 2], E3[g6 + 16 >> 2] = E3[B4 + 192 >> 2], E3[g6 + 20 >> 2] = I7, I7 = E3[B4 + 220 >> 2], E3[B4 + 24 >> 2] = E3[B4 + 216 >> 2], E3[B4 + 28 >> 2] = I7, I7 = E3[B4 + 212 >> 2], E3[B4 + 16 >> 2] = E3[B4 + 208 >> 2], E3[B4 + 20 >> 2] = I7, I7 = E3[g6 + 12 >> 2], E3[B4 + 8 >> 2] = E3[g6 + 8 >> 2], E3[B4 + 12 >> 2] = I7, I7 = E3[g6 + 4 >> 2], E3[B4 >> 2] = E3[g6 >> 2], E3[B4 + 4 >> 2] = I7, aA(A8, B4 + 16 | 0, B4), A8 = E3[B4 + 192 >> 2], I7 = E3[B4 + 196 >> 2], _4 = E3[B4 + 200 >> 2], E3[g6 + 12 >> 2] = D4 ^ E3[B4 + 204 >> 2], E3[g6 + 8 >> 2] = _4 ^ o4, E3[g6 + 4 >> 2] = I7 ^ Q4, E3[g6 >> 2] = A8 ^ c4, r3 = B4 + 224 | 0;
                    }
                    function L3(A8, I7, g6) {
                      var B4, Q4, o4, c4, D4, a4, y4, f4, e4, w4, t4, h4, k4, n4, s4, F4 = 0, S4 = 0, M4 = 0, N4 = 0, K4 = 0;
                      r3 = B4 = r3 - 224 | 0, M4 = i3[g6 + 16 | 0] | i3[g6 + 17 | 0] << 8 | i3[g6 + 18 | 0] << 16 | i3[g6 + 19 | 0] << 24, S4 = i3[0 | (F4 = g6 - -64 | 0)] | i3[F4 + 1 | 0] << 8 | i3[F4 + 2 | 0] << 16 | i3[F4 + 3 | 0] << 24, Q4 = i3[g6 + 80 | 0] | i3[g6 + 81 | 0] << 8 | i3[g6 + 82 | 0] << 16 | i3[g6 + 83 | 0] << 24, o4 = i3[g6 + 32 | 0] | i3[g6 + 33 | 0] << 8 | i3[g6 + 34 | 0] << 16 | i3[g6 + 35 | 0] << 24, c4 = i3[g6 + 48 | 0] | i3[g6 + 49 | 0] << 8 | i3[g6 + 50 | 0] << 16 | i3[g6 + 51 | 0] << 24, N4 = i3[g6 + 20 | 0] | i3[g6 + 21 | 0] << 8 | i3[g6 + 22 | 0] << 16 | i3[g6 + 23 | 0] << 24, D4 = i3[g6 + 68 | 0] | i3[g6 + 69 | 0] << 8 | i3[g6 + 70 | 0] << 16 | i3[g6 + 71 | 0] << 24, a4 = i3[g6 + 84 | 0] | i3[g6 + 85 | 0] << 8 | i3[g6 + 86 | 0] << 16 | i3[g6 + 87 | 0] << 24, y4 = i3[I7 + 4 | 0] | i3[I7 + 5 | 0] << 8 | i3[I7 + 6 | 0] << 16 | i3[I7 + 7 | 0] << 24, f4 = i3[g6 + 36 | 0] | i3[g6 + 37 | 0] << 8 | i3[g6 + 38 | 0] << 16 | i3[g6 + 39 | 0] << 24, e4 = i3[g6 + 52 | 0] | i3[g6 + 53 | 0] << 8 | i3[g6 + 54 | 0] << 16 | i3[g6 + 55 | 0] << 24, K4 = i3[g6 + 24 | 0] | i3[g6 + 25 | 0] << 8 | i3[g6 + 26 | 0] << 16 | i3[g6 + 27 | 0] << 24, w4 = i3[g6 + 72 | 0] | i3[g6 + 73 | 0] << 8 | i3[g6 + 74 | 0] << 16 | i3[g6 + 75 | 0] << 24, t4 = i3[g6 + 88 | 0] | i3[g6 + 89 | 0] << 8 | i3[g6 + 90 | 0] << 16 | i3[g6 + 91 | 0] << 24, h4 = i3[I7 + 8 | 0] | i3[I7 + 9 | 0] << 8 | i3[I7 + 10 | 0] << 16 | i3[I7 + 11 | 0] << 24, k4 = i3[g6 + 40 | 0] | i3[g6 + 41 | 0] << 8 | i3[g6 + 42 | 0] << 16 | i3[g6 + 43 | 0] << 24, n4 = i3[g6 + 56 | 0] | i3[g6 + 57 | 0] << 8 | i3[g6 + 58 | 0] << 16 | i3[g6 + 59 | 0] << 24, s4 = i3[0 | I7] | i3[I7 + 1 | 0] << 8 | i3[I7 + 2 | 0] << 16 | i3[I7 + 3 | 0] << 24, I7 = (i3[g6 + 44 | 0] | i3[g6 + 45 | 0] << 8 | i3[g6 + 46 | 0] << 16 | i3[g6 + 47 | 0] << 24) & (i3[g6 + 60 | 0] | i3[g6 + 61 | 0] << 8 | i3[g6 + 62 | 0] << 16 | i3[g6 + 63 | 0] << 24) ^ (i3[g6 + 28 | 0] | i3[g6 + 29 | 0] << 8 | i3[g6 + 30 | 0] << 16 | i3[g6 + 31 | 0] << 24) ^ (i3[g6 + 76 | 0] | i3[g6 + 77 | 0] << 8 | i3[g6 + 78 | 0] << 16 | i3[g6 + 79 | 0] << 24) ^ (i3[g6 + 92 | 0] | i3[g6 + 93 | 0] << 8 | i3[g6 + 94 | 0] << 16 | i3[g6 + 95 | 0] << 24) ^ (i3[I7 + 12 | 0] | i3[I7 + 13 | 0] << 8 | i3[I7 + 14 | 0] << 16 | i3[I7 + 15 | 0] << 24), C3[A8 + 12 | 0] = I7, C3[A8 + 13 | 0] = I7 >>> 8, C3[A8 + 14 | 0] = I7 >>> 16, C3[A8 + 15 | 0] = I7 >>> 24, K4 = k4 & n4 ^ K4 ^ t4 ^ h4 ^ w4, C3[A8 + 8 | 0] = K4, C3[A8 + 9 | 0] = K4 >>> 8, C3[A8 + 10 | 0] = K4 >>> 16, C3[A8 + 11 | 0] = K4 >>> 24, N4 = f4 & e4 ^ N4 ^ a4 ^ y4 ^ D4, C3[A8 + 4 | 0] = N4, C3[A8 + 5 | 0] = N4 >>> 8, C3[A8 + 6 | 0] = N4 >>> 16, C3[A8 + 7 | 0] = N4 >>> 24, M4 = o4 & c4 ^ M4 ^ S4 ^ Q4 ^ s4, C3[0 | A8] = M4, C3[A8 + 1 | 0] = M4 >>> 8, C3[A8 + 2 | 0] = M4 >>> 16, C3[A8 + 3 | 0] = M4 >>> 24, A8 = E3[g6 + 92 >> 2], E3[B4 + 216 >> 2] = E3[g6 + 88 >> 2], E3[B4 + 220 >> 2] = A8, A8 = E3[g6 + 84 >> 2], E3[B4 + 208 >> 2] = E3[g6 + 80 >> 2], E3[B4 + 212 >> 2] = A8, A8 = E3[g6 + 76 >> 2], E3[B4 + 184 >> 2] = E3[g6 + 72 >> 2], E3[B4 + 188 >> 2] = A8, A8 = E3[F4 + 4 >> 2], E3[B4 + 176 >> 2] = E3[F4 >> 2], E3[B4 + 180 >> 2] = A8, A8 = E3[g6 + 92 >> 2], E3[B4 + 168 >> 2] = E3[g6 + 88 >> 2], E3[B4 + 172 >> 2] = A8, A8 = E3[g6 + 84 >> 2], E3[B4 + 160 >> 2] = E3[g6 + 80 >> 2], E3[B4 + 164 >> 2] = A8, aA(A8 = B4 + 192 | 0, B4 + 176 | 0, B4 + 160 | 0), S4 = E3[B4 + 204 >> 2], E3[g6 + 88 >> 2] = E3[B4 + 200 >> 2], E3[g6 + 92 >> 2] = S4, S4 = E3[B4 + 196 >> 2], E3[g6 + 80 >> 2] = E3[B4 + 192 >> 2], E3[g6 + 84 >> 2] = S4, S4 = E3[g6 + 60 >> 2], E3[B4 + 152 >> 2] = E3[g6 + 56 >> 2], E3[B4 + 156 >> 2] = S4, S4 = E3[g6 + 52 >> 2], E3[B4 + 144 >> 2] = E3[g6 + 48 >> 2], E3[B4 + 148 >> 2] = S4, S4 = E3[g6 + 76 >> 2], E3[B4 + 136 >> 2] = E3[g6 + 72 >> 2], E3[B4 + 140 >> 2] = S4, S4 = E3[F4 + 4 >> 2], E3[B4 + 128 >> 2] = E3[F4 >> 2], E3[B4 + 132 >> 2] = S4, aA(A8, B4 + 144 | 0, B4 + 128 | 0), S4 = E3[B4 + 204 >> 2], E3[g6 + 72 >> 2] = E3[B4 + 200 >> 2], E3[g6 + 76 >> 2] = S4, S4 = E3[B4 + 196 >> 2], E3[F4 >> 2] = E3[B4 + 192 >> 2], E3[F4 + 4 >> 2] = S4, F4 = E3[g6 + 44 >> 2], E3[B4 + 120 >> 2] = E3[g6 + 40 >> 2], E3[B4 + 124 >> 2] = F4, F4 = E3[g6 + 36 >> 2], E3[B4 + 112 >> 2] = E3[g6 + 32 >> 2], E3[B4 + 116 >> 2] = F4, F4 = E3[g6 + 60 >> 2], E3[B4 + 104 >> 2] = E3[g6 + 56 >> 2], E3[B4 + 108 >> 2] = F4, F4 = E3[g6 + 52 >> 2], E3[B4 + 96 >> 2] = E3[g6 + 48 >> 2], E3[B4 + 100 >> 2] = F4, aA(A8, B4 + 112 | 0, B4 + 96 | 0), F4 = E3[B4 + 204 >> 2], E3[g6 + 56 >> 2] = E3[B4 + 200 >> 2], E3[g6 + 60 >> 2] = F4, F4 = E3[B4 + 196 >> 2], E3[g6 + 48 >> 2] = E3[B4 + 192 >> 2], E3[g6 + 52 >> 2] = F4, F4 = E3[g6 + 28 >> 2], E3[B4 + 88 >> 2] = E3[g6 + 24 >> 2], E3[B4 + 92 >> 2] = F4, F4 = E3[g6 + 20 >> 2], E3[B4 + 80 >> 2] = E3[g6 + 16 >> 2], E3[B4 + 84 >> 2] = F4, F4 = E3[g6 + 44 >> 2], E3[B4 + 72 >> 2] = E3[g6 + 40 >> 2], E3[B4 + 76 >> 2] = F4, F4 = E3[g6 + 36 >> 2], E3[B4 + 64 >> 2] = E3[g6 + 32 >> 2], E3[B4 + 68 >> 2] = F4, aA(A8, B4 + 80 | 0, B4 - -64 | 0), F4 = E3[B4 + 204 >> 2], E3[g6 + 40 >> 2] = E3[B4 + 200 >> 2], E3[g6 + 44 >> 2] = F4, F4 = E3[B4 + 196 >> 2], E3[g6 + 32 >> 2] = E3[B4 + 192 >> 2], E3[g6 + 36 >> 2] = F4, F4 = E3[g6 + 12 >> 2], E3[B4 + 56 >> 2] = E3[g6 + 8 >> 2], E3[B4 + 60 >> 2] = F4, F4 = E3[g6 + 4 >> 2], E3[B4 + 48 >> 2] = E3[g6 >> 2], E3[B4 + 52 >> 2] = F4, F4 = E3[g6 + 28 >> 2], E3[B4 + 40 >> 2] = E3[g6 + 24 >> 2], E3[B4 + 44 >> 2] = F4, F4 = E3[g6 + 20 >> 2], E3[B4 + 32 >> 2] = E3[g6 + 16 >> 2], E3[B4 + 36 >> 2] = F4, aA(A8, B4 + 48 | 0, B4 + 32 | 0), F4 = E3[B4 + 204 >> 2], E3[g6 + 24 >> 2] = E3[B4 + 200 >> 2], E3[g6 + 28 >> 2] = F4, F4 = E3[B4 + 196 >> 2], E3[g6 + 16 >> 2] = E3[B4 + 192 >> 2], E3[g6 + 20 >> 2] = F4, F4 = E3[B4 + 220 >> 2], E3[B4 + 24 >> 2] = E3[B4 + 216 >> 2], E3[B4 + 28 >> 2] = F4, F4 = E3[B4 + 212 >> 2], E3[B4 + 16 >> 2] = E3[B4 + 208 >> 2], E3[B4 + 20 >> 2] = F4, F4 = E3[g6 + 12 >> 2], E3[B4 + 8 >> 2] = E3[g6 + 8 >> 2], E3[B4 + 12 >> 2] = F4, F4 = E3[g6 + 4 >> 2], E3[B4 >> 2] = E3[g6 >> 2], E3[B4 + 4 >> 2] = F4, aA(A8, B4 + 16 | 0, B4), A8 = E3[B4 + 192 >> 2], F4 = E3[B4 + 196 >> 2], S4 = E3[B4 + 200 >> 2], E3[g6 + 12 >> 2] = I7 ^ E3[B4 + 204 >> 2], E3[g6 + 8 >> 2] = S4 ^ K4, E3[g6 + 4 >> 2] = F4 ^ N4, E3[g6 >> 2] = A8 ^ M4, r3 = B4 + 224 | 0;
                    }
                    function x3(A8, I7) {
                      var g6, C4, B4, Q4, o4, c4, D4, a4, y4, f4 = 0, e4 = 0;
                      r3 = g6 = r3 - 288 | 0, C4 = i3[A8 + 28 | 0] | i3[A8 + 29 | 0] << 8 | i3[A8 + 30 | 0] << 16 | i3[A8 + 31 | 0] << 24, B4 = i3[A8 + 24 | 0] | i3[A8 + 25 | 0] << 8 | i3[A8 + 26 | 0] << 16 | i3[A8 + 27 | 0] << 24, Q4 = i3[A8 + 20 | 0] | i3[A8 + 21 | 0] << 8 | i3[A8 + 22 | 0] << 16 | i3[A8 + 23 | 0] << 24, o4 = i3[A8 + 16 | 0] | i3[A8 + 17 | 0] << 8 | i3[A8 + 18 | 0] << 16 | i3[A8 + 19 | 0] << 24, c4 = i3[A8 + 4 | 0] | i3[A8 + 5 | 0] << 8 | i3[A8 + 6 | 0] << 16 | i3[A8 + 7 | 0] << 24, D4 = i3[A8 + 8 | 0] | i3[A8 + 9 | 0] << 8 | i3[A8 + 10 | 0] << 16 | i3[A8 + 11 | 0] << 24, a4 = i3[A8 + 12 | 0] | i3[A8 + 13 | 0] << 8 | i3[A8 + 14 | 0] << 16 | i3[A8 + 15 | 0] << 24, y4 = i3[0 | A8] | i3[A8 + 1 | 0] << 8 | i3[A8 + 2 | 0] << 16 | i3[A8 + 3 | 0] << 24, A8 = E3[I7 + 124 >> 2], E3[g6 + 280 >> 2] = E3[I7 + 120 >> 2], E3[g6 + 284 >> 2] = A8, A8 = E3[I7 + 116 >> 2], E3[g6 + 272 >> 2] = E3[I7 + 112 >> 2], E3[g6 + 276 >> 2] = A8, A8 = E3[I7 + 108 >> 2], E3[g6 + 248 >> 2] = E3[I7 + 104 >> 2], E3[g6 + 252 >> 2] = A8, A8 = E3[I7 + 100 >> 2], E3[g6 + 240 >> 2] = E3[I7 + 96 >> 2], E3[g6 + 244 >> 2] = A8, A8 = E3[I7 + 124 >> 2], E3[g6 + 232 >> 2] = E3[I7 + 120 >> 2], E3[g6 + 236 >> 2] = A8, A8 = E3[I7 + 116 >> 2], E3[g6 + 224 >> 2] = E3[I7 + 112 >> 2], E3[g6 + 228 >> 2] = A8, aA(e4 = g6 + 256 | 0, g6 + 240 | 0, g6 + 224 | 0), A8 = E3[g6 + 268 >> 2], E3[I7 + 120 >> 2] = E3[g6 + 264 >> 2], E3[I7 + 124 >> 2] = A8, A8 = E3[g6 + 260 >> 2], E3[I7 + 112 >> 2] = E3[g6 + 256 >> 2], E3[I7 + 116 >> 2] = A8, A8 = E3[I7 + 92 >> 2], E3[g6 + 216 >> 2] = E3[I7 + 88 >> 2], E3[g6 + 220 >> 2] = A8, A8 = E3[I7 + 84 >> 2], E3[g6 + 208 >> 2] = E3[I7 + 80 >> 2], E3[g6 + 212 >> 2] = A8, A8 = E3[I7 + 108 >> 2], E3[g6 + 200 >> 2] = E3[I7 + 104 >> 2], E3[g6 + 204 >> 2] = A8, A8 = E3[I7 + 100 >> 2], E3[g6 + 192 >> 2] = E3[I7 + 96 >> 2], E3[g6 + 196 >> 2] = A8, aA(e4, g6 + 208 | 0, g6 + 192 | 0), A8 = E3[g6 + 268 >> 2], E3[I7 + 104 >> 2] = E3[g6 + 264 >> 2], E3[I7 + 108 >> 2] = A8, A8 = E3[g6 + 260 >> 2], E3[I7 + 96 >> 2] = E3[g6 + 256 >> 2], E3[I7 + 100 >> 2] = A8, A8 = E3[I7 + 76 >> 2], E3[g6 + 184 >> 2] = E3[I7 + 72 >> 2], E3[g6 + 188 >> 2] = A8, f4 = E3[4 + (A8 = I7 - -64 | 0) >> 2], E3[g6 + 176 >> 2] = E3[A8 >> 2], E3[g6 + 180 >> 2] = f4, f4 = E3[I7 + 92 >> 2], E3[g6 + 168 >> 2] = E3[I7 + 88 >> 2], E3[g6 + 172 >> 2] = f4, f4 = E3[I7 + 84 >> 2], E3[g6 + 160 >> 2] = E3[I7 + 80 >> 2], E3[g6 + 164 >> 2] = f4, aA(e4, g6 + 176 | 0, g6 + 160 | 0), f4 = E3[g6 + 268 >> 2], E3[I7 + 88 >> 2] = E3[g6 + 264 >> 2], E3[I7 + 92 >> 2] = f4, f4 = E3[g6 + 260 >> 2], E3[I7 + 80 >> 2] = E3[g6 + 256 >> 2], E3[I7 + 84 >> 2] = f4, f4 = E3[I7 + 60 >> 2], E3[g6 + 152 >> 2] = E3[I7 + 56 >> 2], E3[g6 + 156 >> 2] = f4, f4 = E3[I7 + 52 >> 2], E3[g6 + 144 >> 2] = E3[I7 + 48 >> 2], E3[g6 + 148 >> 2] = f4, f4 = E3[I7 + 76 >> 2], E3[g6 + 136 >> 2] = E3[I7 + 72 >> 2], E3[g6 + 140 >> 2] = f4, f4 = E3[A8 + 4 >> 2], E3[g6 + 128 >> 2] = E3[A8 >> 2], E3[g6 + 132 >> 2] = f4, aA(e4, g6 + 144 | 0, g6 + 128 | 0), f4 = E3[g6 + 268 >> 2], E3[I7 + 72 >> 2] = E3[g6 + 264 >> 2], E3[I7 + 76 >> 2] = f4, f4 = E3[g6 + 260 >> 2], E3[A8 >> 2] = E3[g6 + 256 >> 2], E3[A8 + 4 >> 2] = f4, f4 = E3[I7 + 44 >> 2], E3[g6 + 120 >> 2] = E3[I7 + 40 >> 2], E3[g6 + 124 >> 2] = f4, f4 = E3[I7 + 36 >> 2], E3[g6 + 112 >> 2] = E3[I7 + 32 >> 2], E3[g6 + 116 >> 2] = f4, f4 = E3[I7 + 60 >> 2], E3[g6 + 104 >> 2] = E3[I7 + 56 >> 2], E3[g6 + 108 >> 2] = f4, f4 = E3[I7 + 52 >> 2], E3[g6 + 96 >> 2] = E3[I7 + 48 >> 2], E3[g6 + 100 >> 2] = f4, aA(e4, g6 + 112 | 0, g6 + 96 | 0), f4 = E3[g6 + 268 >> 2], E3[I7 + 56 >> 2] = E3[g6 + 264 >> 2], E3[I7 + 60 >> 2] = f4, f4 = E3[g6 + 260 >> 2], E3[I7 + 48 >> 2] = E3[g6 + 256 >> 2], E3[I7 + 52 >> 2] = f4, f4 = E3[I7 + 28 >> 2], E3[g6 + 88 >> 2] = E3[I7 + 24 >> 2], E3[g6 + 92 >> 2] = f4, f4 = E3[I7 + 20 >> 2], E3[g6 + 80 >> 2] = E3[I7 + 16 >> 2], E3[g6 + 84 >> 2] = f4, f4 = E3[I7 + 44 >> 2], E3[g6 + 72 >> 2] = E3[I7 + 40 >> 2], E3[g6 + 76 >> 2] = f4, f4 = E3[I7 + 36 >> 2], E3[g6 + 64 >> 2] = E3[I7 + 32 >> 2], E3[g6 + 68 >> 2] = f4, aA(e4, g6 + 80 | 0, g6 - -64 | 0), f4 = E3[g6 + 268 >> 2], E3[I7 + 40 >> 2] = E3[g6 + 264 >> 2], E3[I7 + 44 >> 2] = f4, f4 = E3[g6 + 260 >> 2], E3[I7 + 32 >> 2] = E3[g6 + 256 >> 2], E3[I7 + 36 >> 2] = f4, f4 = E3[I7 + 12 >> 2], E3[g6 + 56 >> 2] = E3[I7 + 8 >> 2], E3[g6 + 60 >> 2] = f4, f4 = E3[I7 + 4 >> 2], E3[g6 + 48 >> 2] = E3[I7 >> 2], E3[g6 + 52 >> 2] = f4, f4 = E3[I7 + 28 >> 2], E3[g6 + 40 >> 2] = E3[I7 + 24 >> 2], E3[g6 + 44 >> 2] = f4, f4 = E3[I7 + 20 >> 2], E3[g6 + 32 >> 2] = E3[I7 + 16 >> 2], E3[g6 + 36 >> 2] = f4, aA(e4, g6 + 48 | 0, g6 + 32 | 0), f4 = E3[g6 + 268 >> 2], E3[I7 + 24 >> 2] = E3[g6 + 264 >> 2], E3[I7 + 28 >> 2] = f4, f4 = E3[g6 + 260 >> 2], E3[I7 + 16 >> 2] = E3[g6 + 256 >> 2], E3[I7 + 20 >> 2] = f4, f4 = E3[g6 + 284 >> 2], E3[g6 + 24 >> 2] = E3[g6 + 280 >> 2], E3[g6 + 28 >> 2] = f4, f4 = E3[g6 + 276 >> 2], E3[g6 + 16 >> 2] = E3[g6 + 272 >> 2], E3[g6 + 20 >> 2] = f4, f4 = E3[I7 + 12 >> 2], E3[g6 + 8 >> 2] = E3[I7 + 8 >> 2], E3[g6 + 12 >> 2] = f4, f4 = E3[I7 + 4 >> 2], E3[g6 >> 2] = E3[I7 >> 2], E3[g6 + 4 >> 2] = f4, aA(e4, g6 + 16 | 0, g6), e4 = E3[g6 + 268 >> 2], E3[I7 + 8 >> 2] = E3[g6 + 264 >> 2], E3[I7 + 12 >> 2] = e4, e4 = E3[g6 + 260 >> 2], E3[I7 >> 2] = E3[g6 + 256 >> 2], E3[I7 + 4 >> 2] = e4, E3[I7 + 12 >> 2] = (i3[I7 + 12 | 0] | i3[I7 + 13 | 0] << 8 | i3[I7 + 14 | 0] << 16 | i3[I7 + 15 | 0] << 24) ^ a4, E3[I7 + 8 >> 2] = (i3[I7 + 8 | 0] | i3[I7 + 9 | 0] << 8 | i3[I7 + 10 | 0] << 16 | i3[I7 + 11 | 0] << 24) ^ D4, E3[I7 + 4 >> 2] = (i3[I7 + 4 | 0] | i3[I7 + 5 | 0] << 8 | i3[I7 + 6 | 0] << 16 | i3[I7 + 7 | 0] << 24) ^ c4, E3[I7 >> 2] = (i3[0 | I7] | i3[I7 + 1 | 0] << 8 | i3[I7 + 2 | 0] << 16 | i3[I7 + 3 | 0] << 24) ^ y4, E3[A8 >> 2] = (i3[0 | A8] | i3[A8 + 1 | 0] << 8 | i3[A8 + 2 | 0] << 16 | i3[A8 + 3 | 0] << 24) ^ o4, E3[I7 + 68 >> 2] = (i3[I7 + 68 | 0] | i3[I7 + 69 | 0] << 8 | i3[I7 + 70 | 0] << 16 | i3[I7 + 71 | 0] << 24) ^ Q4, E3[I7 + 72 >> 2] = (i3[I7 + 72 | 0] | i3[I7 + 73 | 0] << 8 | i3[I7 + 74 | 0] << 16 | i3[I7 + 75 | 0] << 24) ^ B4, E3[I7 + 76 >> 2] = (i3[I7 + 76 | 0] | i3[I7 + 77 | 0] << 8 | i3[I7 + 78 | 0] << 16 | i3[I7 + 79 | 0] << 24) ^ C4, r3 = g6 + 288 | 0;
                    }
                    function u3(A8, I7, g6, C4) {
                      var B4, Q4, o4, c4, D4, a4, y4, f4, e4, w4, t4, h4, k4, n4, s4, F4, S4 = 0, M4 = 0, N4 = 0, K4 = 0;
                      r3 = B4 = r3 - 240 | 0, E3[B4 + 200 >> 2] = 0, E3[B4 + 204 >> 2] = 0, E3[B4 + 192 >> 2] = 0, E3[B4 + 196 >> 2] = 0, TA(M4 = B4 + 192 | 0, I7, g6), N4 = i3[C4 + 16 | 0] | i3[C4 + 17 | 0] << 8 | i3[C4 + 18 | 0] << 16 | i3[C4 + 19 | 0] << 24, K4 = i3[0 | (I7 = C4 - -64 | 0)] | i3[I7 + 1 | 0] << 8 | i3[I7 + 2 | 0] << 16 | i3[I7 + 3 | 0] << 24, S4 = i3[C4 + 80 | 0] | i3[C4 + 81 | 0] << 8 | i3[C4 + 82 | 0] << 16 | i3[C4 + 83 | 0] << 24, Q4 = i3[C4 + 32 | 0] | i3[C4 + 33 | 0] << 8 | i3[C4 + 34 | 0] << 16 | i3[C4 + 35 | 0] << 24, o4 = i3[C4 + 48 | 0] | i3[C4 + 49 | 0] << 8 | i3[C4 + 50 | 0] << 16 | i3[C4 + 51 | 0] << 24, c4 = i3[C4 + 20 | 0] | i3[C4 + 21 | 0] << 8 | i3[C4 + 22 | 0] << 16 | i3[C4 + 23 | 0] << 24, D4 = i3[C4 + 68 | 0] | i3[C4 + 69 | 0] << 8 | i3[C4 + 70 | 0] << 16 | i3[C4 + 71 | 0] << 24, a4 = i3[C4 + 84 | 0] | i3[C4 + 85 | 0] << 8 | i3[C4 + 86 | 0] << 16 | i3[C4 + 87 | 0] << 24, y4 = i3[C4 + 36 | 0] | i3[C4 + 37 | 0] << 8 | i3[C4 + 38 | 0] << 16 | i3[C4 + 39 | 0] << 24, f4 = i3[C4 + 52 | 0] | i3[C4 + 53 | 0] << 8 | i3[C4 + 54 | 0] << 16 | i3[C4 + 55 | 0] << 24, e4 = i3[C4 + 24 | 0] | i3[C4 + 25 | 0] << 8 | i3[C4 + 26 | 0] << 16 | i3[C4 + 27 | 0] << 24, w4 = i3[C4 + 72 | 0] | i3[C4 + 73 | 0] << 8 | i3[C4 + 74 | 0] << 16 | i3[C4 + 75 | 0] << 24, t4 = i3[C4 + 88 | 0] | i3[C4 + 89 | 0] << 8 | i3[C4 + 90 | 0] << 16 | i3[C4 + 91 | 0] << 24, h4 = i3[C4 + 40 | 0] | i3[C4 + 41 | 0] << 8 | i3[C4 + 42 | 0] << 16 | i3[C4 + 43 | 0] << 24, k4 = i3[C4 + 56 | 0] | i3[C4 + 57 | 0] << 8 | i3[C4 + 58 | 0] << 16 | i3[C4 + 59 | 0] << 24, n4 = E3[B4 + 192 >> 2], s4 = E3[B4 + 196 >> 2], F4 = E3[B4 + 200 >> 2], E3[B4 + 204 >> 2] = (i3[C4 + 44 | 0] | i3[C4 + 45 | 0] << 8 | i3[C4 + 46 | 0] << 16 | i3[C4 + 47 | 0] << 24) & (i3[C4 + 60 | 0] | i3[C4 + 61 | 0] << 8 | i3[C4 + 62 | 0] << 16 | i3[C4 + 63 | 0] << 24) ^ (i3[C4 + 28 | 0] | i3[C4 + 29 | 0] << 8 | i3[C4 + 30 | 0] << 16 | i3[C4 + 31 | 0] << 24) ^ (i3[C4 + 76 | 0] | i3[C4 + 77 | 0] << 8 | i3[C4 + 78 | 0] << 16 | i3[C4 + 79 | 0] << 24) ^ E3[B4 + 204 >> 2] ^ (i3[C4 + 92 | 0] | i3[C4 + 93 | 0] << 8 | i3[C4 + 94 | 0] << 16 | i3[C4 + 95 | 0] << 24), E3[B4 + 200 >> 2] = h4 & k4 ^ t4 ^ F4 ^ w4 ^ e4, E3[B4 + 196 >> 2] = y4 & f4 ^ a4 ^ s4 ^ D4 ^ c4, E3[B4 + 192 >> 2] = Q4 & o4 ^ N4 ^ K4 ^ S4 ^ n4, VA(g6 + M4 | 0, 0, 16 - g6 | 0), TA(A8, M4, g6), g6 = E3[B4 + 192 >> 2], M4 = E3[B4 + 196 >> 2], N4 = E3[B4 + 200 >> 2], K4 = E3[B4 + 204 >> 2], A8 = E3[C4 + 92 >> 2], E3[B4 + 232 >> 2] = E3[C4 + 88 >> 2], E3[B4 + 236 >> 2] = A8, A8 = E3[C4 + 84 >> 2], E3[B4 + 224 >> 2] = E3[C4 + 80 >> 2], E3[B4 + 228 >> 2] = A8, A8 = E3[C4 + 76 >> 2], E3[B4 + 184 >> 2] = E3[C4 + 72 >> 2], E3[B4 + 188 >> 2] = A8, A8 = E3[I7 + 4 >> 2], E3[B4 + 176 >> 2] = E3[I7 >> 2], E3[B4 + 180 >> 2] = A8, A8 = E3[C4 + 92 >> 2], E3[B4 + 168 >> 2] = E3[C4 + 88 >> 2], E3[B4 + 172 >> 2] = A8, A8 = E3[C4 + 84 >> 2], E3[B4 + 160 >> 2] = E3[C4 + 80 >> 2], E3[B4 + 164 >> 2] = A8, aA(A8 = B4 + 208 | 0, B4 + 176 | 0, B4 + 160 | 0), S4 = E3[B4 + 220 >> 2], E3[C4 + 88 >> 2] = E3[B4 + 216 >> 2], E3[C4 + 92 >> 2] = S4, S4 = E3[B4 + 212 >> 2], E3[C4 + 80 >> 2] = E3[B4 + 208 >> 2], E3[C4 + 84 >> 2] = S4, S4 = E3[C4 + 60 >> 2], E3[B4 + 152 >> 2] = E3[C4 + 56 >> 2], E3[B4 + 156 >> 2] = S4, S4 = E3[C4 + 52 >> 2], E3[B4 + 144 >> 2] = E3[C4 + 48 >> 2], E3[B4 + 148 >> 2] = S4, S4 = E3[C4 + 76 >> 2], E3[B4 + 136 >> 2] = E3[C4 + 72 >> 2], E3[B4 + 140 >> 2] = S4, S4 = E3[I7 + 4 >> 2], E3[B4 + 128 >> 2] = E3[I7 >> 2], E3[B4 + 132 >> 2] = S4, aA(A8, B4 + 144 | 0, B4 + 128 | 0), S4 = E3[B4 + 220 >> 2], E3[C4 + 72 >> 2] = E3[B4 + 216 >> 2], E3[C4 + 76 >> 2] = S4, S4 = E3[B4 + 212 >> 2], E3[I7 >> 2] = E3[B4 + 208 >> 2], E3[I7 + 4 >> 2] = S4, I7 = E3[C4 + 44 >> 2], E3[B4 + 120 >> 2] = E3[C4 + 40 >> 2], E3[B4 + 124 >> 2] = I7, I7 = E3[C4 + 36 >> 2], E3[B4 + 112 >> 2] = E3[C4 + 32 >> 2], E3[B4 + 116 >> 2] = I7, I7 = E3[C4 + 60 >> 2], E3[B4 + 104 >> 2] = E3[C4 + 56 >> 2], E3[B4 + 108 >> 2] = I7, I7 = E3[C4 + 52 >> 2], E3[B4 + 96 >> 2] = E3[C4 + 48 >> 2], E3[B4 + 100 >> 2] = I7, aA(A8, B4 + 112 | 0, B4 + 96 | 0), I7 = E3[B4 + 220 >> 2], E3[C4 + 56 >> 2] = E3[B4 + 216 >> 2], E3[C4 + 60 >> 2] = I7, I7 = E3[B4 + 212 >> 2], E3[C4 + 48 >> 2] = E3[B4 + 208 >> 2], E3[C4 + 52 >> 2] = I7, I7 = E3[C4 + 28 >> 2], E3[B4 + 88 >> 2] = E3[C4 + 24 >> 2], E3[B4 + 92 >> 2] = I7, I7 = E3[C4 + 20 >> 2], E3[B4 + 80 >> 2] = E3[C4 + 16 >> 2], E3[B4 + 84 >> 2] = I7, I7 = E3[C4 + 44 >> 2], E3[B4 + 72 >> 2] = E3[C4 + 40 >> 2], E3[B4 + 76 >> 2] = I7, I7 = E3[C4 + 36 >> 2], E3[B4 + 64 >> 2] = E3[C4 + 32 >> 2], E3[B4 + 68 >> 2] = I7, aA(A8, B4 + 80 | 0, B4 - -64 | 0), I7 = E3[B4 + 220 >> 2], E3[C4 + 40 >> 2] = E3[B4 + 216 >> 2], E3[C4 + 44 >> 2] = I7, I7 = E3[B4 + 212 >> 2], E3[C4 + 32 >> 2] = E3[B4 + 208 >> 2], E3[C4 + 36 >> 2] = I7, I7 = E3[C4 + 12 >> 2], E3[B4 + 56 >> 2] = E3[C4 + 8 >> 2], E3[B4 + 60 >> 2] = I7, I7 = E3[C4 + 4 >> 2], E3[B4 + 48 >> 2] = E3[C4 >> 2], E3[B4 + 52 >> 2] = I7, I7 = E3[C4 + 28 >> 2], E3[B4 + 40 >> 2] = E3[C4 + 24 >> 2], E3[B4 + 44 >> 2] = I7, I7 = E3[C4 + 20 >> 2], E3[B4 + 32 >> 2] = E3[C4 + 16 >> 2], E3[B4 + 36 >> 2] = I7, aA(A8, B4 + 48 | 0, B4 + 32 | 0), I7 = E3[B4 + 220 >> 2], E3[C4 + 24 >> 2] = E3[B4 + 216 >> 2], E3[C4 + 28 >> 2] = I7, I7 = E3[B4 + 212 >> 2], E3[C4 + 16 >> 2] = E3[B4 + 208 >> 2], E3[C4 + 20 >> 2] = I7, I7 = E3[B4 + 236 >> 2], E3[B4 + 24 >> 2] = E3[B4 + 232 >> 2], E3[B4 + 28 >> 2] = I7, I7 = E3[B4 + 228 >> 2], E3[B4 + 16 >> 2] = E3[B4 + 224 >> 2], E3[B4 + 20 >> 2] = I7, I7 = E3[C4 + 12 >> 2], E3[B4 + 8 >> 2] = E3[C4 + 8 >> 2], E3[B4 + 12 >> 2] = I7, I7 = E3[C4 + 4 >> 2], E3[B4 >> 2] = E3[C4 >> 2], E3[B4 + 4 >> 2] = I7, aA(A8, B4 + 16 | 0, B4), A8 = E3[B4 + 208 >> 2], I7 = E3[B4 + 212 >> 2], S4 = E3[B4 + 216 >> 2], E3[C4 + 12 >> 2] = K4 ^ E3[B4 + 220 >> 2], E3[C4 + 8 >> 2] = S4 ^ N4, E3[C4 + 4 >> 2] = I7 ^ M4, E3[C4 >> 2] = A8 ^ g6, r3 = B4 + 240 | 0;
                    }
                    function m3(A8, I7, g6) {
                      var B4, o4 = 0, c4 = 0, D4 = 0, a4 = 0, y4 = 0;
                      r3 = B4 = r3 + -64 | 0;
                      A: {
                        if ((g6 - 65 & 255) >>> 0 > 191) {
                          if (c4 = -1, !(i3[A8 + 80 | 0] | i3[A8 + 81 | 0] << 8 | i3[A8 + 82 | 0] << 16 | i3[A8 + 83 | 0] << 24 | i3[A8 + 84 | 0] | i3[A8 + 85 | 0] << 8 | i3[A8 + 86 | 0] << 16 | i3[A8 + 87 | 0] << 24)) {
                            if ((D4 = i3[A8 + 352 | 0] | i3[A8 + 353 | 0] << 8 | i3[A8 + 354 | 0] << 16 | i3[A8 + 355 | 0] << 24) >>> 0 >= 129) {
                              if (a4 = o4 = i3[A8 + 68 | 0] | i3[A8 + 69 | 0] << 8 | i3[A8 + 70 | 0] << 16 | i3[A8 + 71 | 0] << 24, o4 = (D4 = 128 + (c4 = i3[A8 + 64 | 0] | i3[A8 + 65 | 0] << 8 | i3[A8 + 66 | 0] << 16 | i3[A8 + 67 | 0] << 24) | 0) >>> 0 < 128 ? o4 + 1 | 0 : o4, C3[A8 + 64 | 0] = D4, C3[A8 + 65 | 0] = D4 >>> 8, C3[A8 + 66 | 0] = D4 >>> 16, C3[A8 + 67 | 0] = D4 >>> 24, C3[A8 + 68 | 0] = o4, C3[A8 + 69 | 0] = o4 >>> 8, C3[A8 + 70 | 0] = o4 >>> 16, C3[A8 + 71 | 0] = o4 >>> 24, o4 = i3[A8 + 76 | 0] | i3[A8 + 77 | 0] << 8 | i3[A8 + 78 | 0] << 16 | i3[A8 + 79 | 0] << 24, o4 = (y4 = c4 = -1 == (0 | a4) & c4 >>> 0 > 4294967167) >>> 0 > (c4 = c4 + (i3[A8 + 72 | 0] | i3[A8 + 73 | 0] << 8 | i3[A8 + 74 | 0] << 16 | i3[A8 + 75 | 0] << 24) | 0) >>> 0 ? o4 + 1 | 0 : o4, C3[A8 + 72 | 0] = c4, C3[A8 + 73 | 0] = c4 >>> 8, C3[A8 + 74 | 0] = c4 >>> 16, C3[A8 + 75 | 0] = c4 >>> 24, C3[A8 + 76 | 0] = o4, C3[A8 + 77 | 0] = o4 >>> 8, C3[A8 + 78 | 0] = o4 >>> 16, C3[A8 + 79 | 0] = o4 >>> 24, h3(A8, o4 = A8 + 96 | 0), c4 = (i3[A8 + 352 | 0] | i3[A8 + 353 | 0] << 8 | i3[A8 + 354 | 0] << 16 | i3[A8 + 355 | 0] << 24) - 128 | 0, C3[A8 + 352 | 0] = c4, C3[A8 + 353 | 0] = c4 >>> 8, C3[A8 + 354 | 0] = c4 >>> 16, C3[A8 + 355 | 0] = c4 >>> 24, c4 >>> 0 >= 129) break A;
                              TA(o4, A8 + 224 | 0, c4), D4 = i3[A8 + 352 | 0] | i3[A8 + 353 | 0] << 8 | i3[A8 + 354 | 0] << 16 | i3[A8 + 355 | 0] << 24;
                            }
                            c4 = y4 = i3[A8 + 68 | 0] | i3[A8 + 69 | 0] << 8 | i3[A8 + 70 | 0] << 16 | i3[A8 + 71 | 0] << 24, c4 = (a4 = D4 + (o4 = i3[A8 + 64 | 0] | i3[A8 + 65 | 0] << 8 | i3[A8 + 66 | 0] << 16 | i3[A8 + 67 | 0] << 24) | 0) >>> 0 < D4 >>> 0 ? c4 + 1 | 0 : c4, C3[A8 + 64 | 0] = a4, C3[A8 + 65 | 0] = a4 >>> 8, C3[A8 + 66 | 0] = a4 >>> 16, C3[A8 + 67 | 0] = a4 >>> 24, C3[A8 + 68 | 0] = c4, C3[A8 + 69 | 0] = c4 >>> 8, C3[A8 + 70 | 0] = c4 >>> 16, C3[A8 + 71 | 0] = c4 >>> 24, c4 = (0 | c4) == (0 | y4) & o4 >>> 0 > a4 >>> 0 | c4 >>> 0 < y4 >>> 0, o4 = i3[A8 + 76 | 0] | i3[A8 + 77 | 0] << 8 | i3[A8 + 78 | 0] << 16 | i3[A8 + 79 | 0] << 24, o4 = (y4 = c4) >>> 0 > (c4 = c4 + (i3[A8 + 72 | 0] | i3[A8 + 73 | 0] << 8 | i3[A8 + 74 | 0] << 16 | i3[A8 + 75 | 0] << 24) | 0) >>> 0 ? o4 + 1 | 0 : o4, C3[A8 + 72 | 0] = c4, C3[A8 + 73 | 0] = c4 >>> 8, C3[A8 + 74 | 0] = c4 >>> 16, C3[A8 + 75 | 0] = c4 >>> 24, C3[A8 + 76 | 0] = o4, C3[A8 + 77 | 0] = o4 >>> 8, C3[A8 + 78 | 0] = o4 >>> 16, C3[A8 + 79 | 0] = o4 >>> 24, i3[A8 + 356 | 0] && (C3[A8 + 88 | 0] = 255, C3[A8 + 89 | 0] = 255, C3[A8 + 90 | 0] = 255, C3[A8 + 91 | 0] = 255, C3[A8 + 92 | 0] = 255, C3[A8 + 93 | 0] = 255, C3[A8 + 94 | 0] = 255, C3[A8 + 95 | 0] = 255), C3[A8 + 80 | 0] = 255, C3[A8 + 81 | 0] = 255, C3[A8 + 82 | 0] = 255, C3[A8 + 83 | 0] = 255, C3[A8 + 84 | 0] = 255, C3[A8 + 85 | 0] = 255, C3[A8 + 86 | 0] = 255, C3[A8 + 87 | 0] = 255, VA((c4 = A8 + 96 | 0) + D4 | 0, 0, 256 - D4 | 0), h3(A8, c4), o4 = i3[A8 + 4 | 0] | i3[A8 + 5 | 0] << 8 | i3[A8 + 6 | 0] << 16 | i3[A8 + 7 | 0] << 24, E3[B4 >> 2] = i3[0 | A8] | i3[A8 + 1 | 0] << 8 | i3[A8 + 2 | 0] << 16 | i3[A8 + 3 | 0] << 24, E3[B4 + 4 >> 2] = o4, o4 = i3[A8 + 12 | 0] | i3[A8 + 13 | 0] << 8 | i3[A8 + 14 | 0] << 16 | i3[A8 + 15 | 0] << 24, E3[B4 + 8 >> 2] = i3[A8 + 8 | 0] | i3[A8 + 9 | 0] << 8 | i3[A8 + 10 | 0] << 16 | i3[A8 + 11 | 0] << 24, E3[B4 + 12 >> 2] = o4, o4 = i3[A8 + 20 | 0] | i3[A8 + 21 | 0] << 8 | i3[A8 + 22 | 0] << 16 | i3[A8 + 23 | 0] << 24, E3[B4 + 16 >> 2] = i3[A8 + 16 | 0] | i3[A8 + 17 | 0] << 8 | i3[A8 + 18 | 0] << 16 | i3[A8 + 19 | 0] << 24, E3[B4 + 20 >> 2] = o4, o4 = i3[A8 + 28 | 0] | i3[A8 + 29 | 0] << 8 | i3[A8 + 30 | 0] << 16 | i3[A8 + 31 | 0] << 24, E3[B4 + 24 >> 2] = i3[A8 + 24 | 0] | i3[A8 + 25 | 0] << 8 | i3[A8 + 26 | 0] << 16 | i3[A8 + 27 | 0] << 24, E3[B4 + 28 >> 2] = o4, o4 = i3[A8 + 36 | 0] | i3[A8 + 37 | 0] << 8 | i3[A8 + 38 | 0] << 16 | i3[A8 + 39 | 0] << 24, E3[B4 + 32 >> 2] = i3[A8 + 32 | 0] | i3[A8 + 33 | 0] << 8 | i3[A8 + 34 | 0] << 16 | i3[A8 + 35 | 0] << 24, E3[B4 + 36 >> 2] = o4, o4 = i3[A8 + 44 | 0] | i3[A8 + 45 | 0] << 8 | i3[A8 + 46 | 0] << 16 | i3[A8 + 47 | 0] << 24, E3[B4 + 40 >> 2] = i3[A8 + 40 | 0] | i3[A8 + 41 | 0] << 8 | i3[A8 + 42 | 0] << 16 | i3[A8 + 43 | 0] << 24, E3[B4 + 44 >> 2] = o4, o4 = i3[A8 + 52 | 0] | i3[A8 + 53 | 0] << 8 | i3[A8 + 54 | 0] << 16 | i3[A8 + 55 | 0] << 24, E3[B4 + 48 >> 2] = i3[A8 + 48 | 0] | i3[A8 + 49 | 0] << 8 | i3[A8 + 50 | 0] << 16 | i3[A8 + 51 | 0] << 24, E3[B4 + 52 >> 2] = o4, o4 = i3[A8 + 60 | 0] | i3[A8 + 61 | 0] << 8 | i3[A8 + 62 | 0] << 16 | i3[A8 + 63 | 0] << 24, E3[B4 + 56 >> 2] = i3[A8 + 56 | 0] | i3[A8 + 57 | 0] << 8 | i3[A8 + 58 | 0] << 16 | i3[A8 + 59 | 0] << 24, E3[B4 + 60 >> 2] = o4, TA(I7, B4, g6), MI(A8, 64), MI(c4, 256), c4 = 0;
                          }
                          return r3 = B4 - -64 | 0, c4;
                        }
                        iI(), Q3();
                      }
                      f3(1268, 1130, 306, 1074), Q3();
                    }
                    function q3(A8, I7) {
                      var g6, B4, Q4, o4, c4, D4, a4, y4, f4, e4, w4, t4, h4, k4, n4, s4, F4 = 0, S4 = 0, N4 = 0, K4 = 0, _4 = 0, p4 = 0, H4 = 0;
                      for (r3 = g6 = r3 - 320 | 0, V(B4 = A8 + 40 | 0, I7), E3[A8 + 84 >> 2] = 0, E3[A8 + 88 >> 2] = 0, E3[A8 + 80 >> 2] = 1, E3[A8 + 92 >> 2] = 0, E3[A8 + 96 >> 2] = 0, E3[A8 + 100 >> 2] = 0, E3[A8 + 104 >> 2] = 0, E3[A8 + 108 >> 2] = 0, E3[A8 + 112 >> 2] = 0, E3[A8 + 116 >> 2] = 0, U3(p4 = g6 + 240 | 0, B4), M3(K4 = g6 + 192 | 0, p4, 1328), H4 = -1, Q4 = E3[g6 + 240 >> 2] - 1 | 0, E3[g6 + 240 >> 2] = Q4, E3[g6 + 192 >> 2] = E3[g6 + 192 >> 2] + 1, o4 = E3[g6 + 244 >> 2], c4 = E3[g6 + 248 >> 2], D4 = E3[g6 + 252 >> 2], a4 = E3[g6 + 256 >> 2], y4 = E3[g6 + 260 >> 2], f4 = E3[g6 + 264 >> 2], e4 = E3[g6 + 268 >> 2], w4 = E3[g6 + 272 >> 2], t4 = E3[g6 + 276 >> 2], U3(_4 = g6 + 144 | 0, K4), M3(_4, _4, K4), U3(A8, _4), M3(A8, A8, K4), M3(A8, A8, p4), r3 = S4 = r3 - 144 | 0, U3(N4 = S4 + 96 | 0, A8), U3(F4 = S4 + 48 | 0, N4), U3(F4, F4), M3(F4, A8, F4), M3(N4, N4, F4), U3(N4, N4), M3(N4, F4, N4), U3(F4, N4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), M3(N4, F4, N4), U3(F4, N4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), M3(F4, F4, N4), U3(S4, F4), U3(S4, S4), U3(S4, S4), U3(S4, S4), U3(S4, S4), U3(S4, S4), U3(S4, S4), U3(S4, S4), U3(S4, S4), U3(S4, S4), U3(S4, S4), U3(S4, S4), U3(S4, S4), U3(S4, S4), U3(S4, S4), U3(S4, S4), U3(S4, S4), U3(S4, S4), U3(S4, S4), U3(S4, S4), M3(F4, S4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), M3(N4, F4, N4), U3(F4, N4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), U3(F4, F4), M3(F4, F4, N4), U3(S4, F4), F4 = 1; U3(S4, S4), 100 != (0 | (F4 = F4 + 1 | 0)); ) ;
                      M3(F4 = S4 + 48 || 0, F4, N4), U3(N4, N4), U3(N4, N4), M3(A8, N4, A8), r3 = S4 + 144 | 0, M3(A8, A8, _4), M3(A8, A8, p4), U3(F4 = g6 + 96 | 0, A8), M3(F4, F4, K4), F4 = E3[g6 + 132 >> 2], E3[g6 + 84 >> 2] = F4 - t4, S4 = E3[g6 + 128 >> 2], E3[g6 + 80 >> 2] = S4 - w4, N4 = E3[g6 + 124 >> 2], E3[g6 + 76 >> 2] = N4 - e4, K4 = E3[g6 + 120 >> 2], E3[g6 + 72 >> 2] = K4 - f4, _4 = E3[g6 + 116 >> 2], E3[g6 + 68 >> 2] = _4 - y4, p4 = E3[g6 + 112 >> 2], E3[g6 + 64 >> 2] = p4 - a4, h4 = E3[g6 + 108 >> 2], E3[g6 + 60 >> 2] = h4 - D4, k4 = E3[g6 + 104 >> 2], E3[g6 + 56 >> 2] = k4 - c4, n4 = E3[g6 + 100 >> 2], E3[g6 + 52 >> 2] = n4 - o4, s4 = E3[g6 + 96 >> 2], E3[g6 + 48 >> 2] = s4 - Q4, eA(g6, g6 + 48 | 0);
                      A: {
                        if (!SA(g6, 32)) {
                          if (E3[g6 + 36 >> 2] = F4 + t4, E3[g6 + 32 >> 2] = S4 + w4, E3[g6 + 28 >> 2] = N4 + e4, E3[g6 + 24 >> 2] = K4 + f4, E3[g6 + 20 >> 2] = _4 + y4, E3[g6 + 16 >> 2] = p4 + a4, E3[g6 + 12 >> 2] = D4 + h4, E3[g6 + 8 >> 2] = c4 + k4, E3[g6 + 4 >> 2] = o4 + n4, E3[g6 >> 2] = Q4 + s4, eA(F4 = g6 + 288 | 0, g6), !SA(F4, 32)) break A;
                          M3(A8, A8, 1376);
                        }
                        eA(g6 + 288 | 0, A8), (1 & C3[g6 + 288 | 0]) == (i3[I7 + 31 | 0] >>> 7 | 0) && (E3[A8 >> 2] = 0 - E3[A8 >> 2], E3[A8 + 36 >> 2] = 0 - E3[A8 + 36 >> 2], E3[A8 + 32 >> 2] = 0 - E3[A8 + 32 >> 2], E3[A8 + 28 >> 2] = 0 - E3[A8 + 28 >> 2], E3[A8 + 24 >> 2] = 0 - E3[A8 + 24 >> 2], E3[A8 + 20 >> 2] = 0 - E3[A8 + 20 >> 2], E3[A8 + 16 >> 2] = 0 - E3[A8 + 16 >> 2], E3[A8 + 12 >> 2] = 0 - E3[A8 + 12 >> 2], E3[A8 + 8 >> 2] = 0 - E3[A8 + 8 >> 2], E3[A8 + 4 >> 2] = 0 - E3[A8 + 4 >> 2]), M3(A8 + 120 | 0, A8, B4), H4 = 0;
                      }
                      return r3 = g6 + 320 | 0, H4;
                    }
                    function l2(A8, I7, g6) {
                      var B4, Q4, E4, o4, c4, D4, a4, y4, f4, e4, w4, r4, t4 = 0, h4 = 0, k4 = 0, n4 = 0, s4 = 0, F4 = 0, S4 = 0, M4 = 0, N4 = 0, K4 = 0, _4 = 0, p4 = 0, H4 = 0, G4 = 0, J4 = 0, Y4 = 0, U4 = 0, d4 = 0, b4 = 0, P4 = 0;
                      for (s4 = 1634760805, h4 = B4 = i3[0 | g6] | i3[g6 + 1 | 0] << 8 | i3[g6 + 2 | 0] << 16 | i3[g6 + 3 | 0] << 24, F4 = Q4 = i3[g6 + 4 | 0] | i3[g6 + 5 | 0] << 8 | i3[g6 + 6 | 0] << 16 | i3[g6 + 7 | 0] << 24, S4 = E4 = i3[g6 + 8 | 0] | i3[g6 + 9 | 0] << 8 | i3[g6 + 10 | 0] << 16 | i3[g6 + 11 | 0] << 24, M4 = o4 = i3[g6 + 12 | 0] | i3[g6 + 13 | 0] << 8 | i3[g6 + 14 | 0] << 16 | i3[g6 + 15 | 0] << 24, p4 = 857760878, N4 = c4 = i3[0 | I7] | i3[I7 + 1 | 0] << 8 | i3[I7 + 2 | 0] << 16 | i3[I7 + 3 | 0] << 24, k4 = D4 = i3[I7 + 4 | 0] | i3[I7 + 5 | 0] << 8 | i3[I7 + 6 | 0] << 16 | i3[I7 + 7 | 0] << 24, _4 = a4 = i3[I7 + 8 | 0] | i3[I7 + 9 | 0] << 8 | i3[I7 + 10 | 0] << 16 | i3[I7 + 11 | 0] << 24, G4 = y4 = i3[I7 + 12 | 0] | i3[I7 + 13 | 0] << 8 | i3[I7 + 14 | 0] << 16 | i3[I7 + 15 | 0] << 24, I7 = 2036477234, n4 = f4 = i3[g6 + 16 | 0] | i3[g6 + 17 | 0] << 8 | i3[g6 + 18 | 0] << 16 | i3[g6 + 19 | 0] << 24, t4 = 1797285236, J4 = e4 = i3[g6 + 28 | 0] | i3[g6 + 29 | 0] << 8 | i3[g6 + 30 | 0] << 16 | i3[g6 + 31 | 0] << 24, H4 = w4 = i3[g6 + 24 | 0] | i3[g6 + 25 | 0] << 8 | i3[g6 + 26 | 0] << 16 | i3[g6 + 27 | 0] << 24, g6 = r4 = i3[g6 + 20 | 0] | i3[g6 + 21 | 0] << 8 | i3[g6 + 22 | 0] << 16 | i3[g6 + 23 | 0] << 24; K4 = gI(h4 + p4 | 0, 7) ^ G4, Y4 = gI(K4 + p4 | 0, 9) ^ H4, M4 = gI(g6 + s4 | 0, 7) ^ M4, U4 = gI(M4 + s4 | 0, 9) ^ _4, b4 = gI(U4 + M4 | 0, 13) ^ g6, S4 = gI(t4 + n4 | 0, 7) ^ S4, d4 = gI(S4 + t4 | 0, 9) ^ k4, _4 = gI(S4 + d4 | 0, 13) ^ n4, n4 = gI(d4 + _4 | 0, 18) ^ t4, k4 = gI(I7 + N4 | 0, 7) ^ J4, g6 = b4 ^ gI(n4 + k4 | 0, 7), H4 = Y4 ^ gI(g6 + n4 | 0, 9), J4 = gI(g6 + H4 | 0, 13) ^ k4, t4 = gI(H4 + J4 | 0, 18) ^ n4, F4 = gI(I7 + k4 | 0, 9) ^ F4, N4 = gI(F4 + k4 | 0, 13) ^ N4, I7 = gI(N4 + F4 | 0, 18) ^ I7, n4 = gI(I7 + K4 | 0, 7) ^ _4, _4 = gI(n4 + I7 | 0, 9) ^ U4, G4 = gI(n4 + _4 | 0, 13) ^ K4, I7 = gI(_4 + G4 | 0, 18) ^ I7, K4 = gI(K4 + Y4 | 0, 13) ^ h4, h4 = gI(K4 + Y4 | 0, 18) ^ p4, N4 = gI(h4 + M4 | 0, 7) ^ N4, k4 = gI(N4 + h4 | 0, 9) ^ d4, M4 = gI(k4 + N4 | 0, 13) ^ M4, p4 = gI(k4 + M4 | 0, 18) ^ h4, s4 = gI(U4 + b4 | 0, 18) ^ s4, h4 = gI(s4 + S4 | 0, 7) ^ K4, F4 = gI(h4 + s4 | 0, 9) ^ F4, S4 = gI(h4 + F4 | 0, 13) ^ S4, s4 = gI(F4 + S4 | 0, 18) ^ s4, K4 = P4 >>> 0 < 18, P4 = P4 + 2 | 0, K4; ) ;
                      t4 = t4 + 1797285236 | 0, C3[A8 + 60 | 0] = t4, C3[A8 + 61 | 0] = t4 >>> 8, C3[A8 + 62 | 0] = t4 >>> 16, C3[A8 + 63 | 0] = t4 >>> 24, t4 = J4 + e4 | 0, C3[A8 + 56 | 0] = t4, C3[A8 + 57 | 0] = t4 >>> 8, C3[A8 + 58 | 0] = t4 >>> 16, C3[A8 + 59 | 0] = t4 >>> 24, t4 = H4 + w4 | 0, C3[A8 + 52 | 0] = t4, C3[A8 + 53 | 0] = t4 >>> 8, C3[A8 + 54 | 0] = t4 >>> 16, C3[A8 + 55 | 0] = t4 >>> 24, g6 = g6 + r4 | 0, C3[A8 + 48 | 0] = g6, C3[A8 + 49 | 0] = g6 >>> 8, C3[A8 + 50 | 0] = g6 >>> 16, C3[A8 + 51 | 0] = g6 >>> 24, g6 = n4 + f4 | 0, C3[A8 + 44 | 0] = g6, C3[A8 + 45 | 0] = g6 >>> 8, C3[A8 + 46 | 0] = g6 >>> 16, C3[A8 + 47 | 0] = g6 >>> 24, I7 = I7 + 2036477234 | 0, C3[A8 + 40 | 0] = I7, C3[A8 + 41 | 0] = I7 >>> 8, C3[A8 + 42 | 0] = I7 >>> 16, C3[A8 + 43 | 0] = I7 >>> 24, I7 = G4 + y4 | 0, C3[A8 + 36 | 0] = I7, C3[A8 + 37 | 0] = I7 >>> 8, C3[A8 + 38 | 0] = I7 >>> 16, C3[A8 + 39 | 0] = I7 >>> 24, I7 = _4 + a4 | 0, C3[A8 + 32 | 0] = I7, C3[A8 + 33 | 0] = I7 >>> 8, C3[A8 + 34 | 0] = I7 >>> 16, C3[A8 + 35 | 0] = I7 >>> 24, I7 = k4 + D4 | 0, C3[A8 + 28 | 0] = I7, C3[A8 + 29 | 0] = I7 >>> 8, C3[A8 + 30 | 0] = I7 >>> 16, C3[A8 + 31 | 0] = I7 >>> 24, I7 = N4 + c4 | 0, C3[A8 + 24 | 0] = I7, C3[A8 + 25 | 0] = I7 >>> 8, C3[A8 + 26 | 0] = I7 >>> 16, C3[A8 + 27 | 0] = I7 >>> 24, I7 = p4 + 857760878 | 0, C3[A8 + 20 | 0] = I7, C3[A8 + 21 | 0] = I7 >>> 8, C3[A8 + 22 | 0] = I7 >>> 16, C3[A8 + 23 | 0] = I7 >>> 24, I7 = M4 + o4 | 0, C3[A8 + 16 | 0] = I7, C3[A8 + 17 | 0] = I7 >>> 8, C3[A8 + 18 | 0] = I7 >>> 16, C3[A8 + 19 | 0] = I7 >>> 24, I7 = S4 + E4 | 0, C3[A8 + 12 | 0] = I7, C3[A8 + 13 | 0] = I7 >>> 8, C3[A8 + 14 | 0] = I7 >>> 16, C3[A8 + 15 | 0] = I7 >>> 24, I7 = F4 + Q4 | 0, C3[A8 + 8 | 0] = I7, C3[A8 + 9 | 0] = I7 >>> 8, C3[A8 + 10 | 0] = I7 >>> 16, C3[A8 + 11 | 0] = I7 >>> 24, I7 = h4 + B4 | 0, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, I7 = s4 + 1634760805 | 0, C3[0 | A8] = I7, C3[A8 + 1 | 0] = I7 >>> 8, C3[A8 + 2 | 0] = I7 >>> 16, C3[A8 + 3 | 0] = I7 >>> 24;
                    }
                    function z(A8, I7, g6, C4) {
                      var B4 = 0, Q4 = 0, o4 = 0, D4 = 0, a4 = 0, y4 = 0, f4 = 0, e4 = 0, w4 = 0, r4 = 0, h4 = 0, k4 = 0, n4 = 0, s4 = 0, F4 = 0, S4 = 0, M4 = 0, N4 = 0, K4 = 0, _4 = 0, p4 = 0, H4 = 0, G4 = 0, J4 = 0, Y4 = 0;
                      if (h4 = E3[A8 + 36 >> 2], w4 = E3[A8 + 32 >> 2], r4 = E3[A8 + 28 >> 2], f4 = E3[A8 + 24 >> 2], e4 = E3[A8 + 20 >> 2], !C4 & g6 >>> 0 >= 16 | C4) for (p4 = !i3[A8 + 80 | 0] << 24, n4 = E3[A8 + 4 >> 2], H4 = c3(n4, 5), F4 = E3[A8 + 8 >> 2], K4 = c3(F4, 5), M4 = E3[A8 + 12 >> 2], N4 = c3(M4, 5), _4 = E3[A8 + 16 >> 2], S4 = c3(_4, 5), s4 = E3[A8 >> 2]; B4 = PA(o4 = ((i3[I7 + 3 | 0] | i3[I7 + 4 | 0] << 8 | i3[I7 + 5 | 0] << 16 | i3[I7 + 6 | 0] << 24) >>> 2 & 67108863) + f4 | 0, 0, M4, 0), a4 = t3, e4 = (D4 = PA(f4 = (67108863 & (i3[0 | I7] | i3[I7 + 1 | 0] << 8 | i3[I7 + 2 | 0] << 16 | i3[I7 + 3 | 0] << 24)) + e4 | 0, 0, _4, 0)) + B4 | 0, B4 = t3 + a4 | 0, B4 = D4 >>> 0 > e4 >>> 0 ? B4 + 1 | 0 : B4, a4 = PA(r4 = ((i3[I7 + 6 | 0] | i3[I7 + 7 | 0] << 8 | i3[I7 + 8 | 0] << 16 | i3[I7 + 9 | 0] << 24) >>> 4 & 67108863) + r4 | 0, 0, F4, 0), B4 = t3 + B4 | 0, B4 = a4 >>> 0 > (e4 = a4 + e4 | 0) >>> 0 ? B4 + 1 | 0 : B4, a4 = PA(w4 = ((i3[I7 + 9 | 0] | i3[I7 + 10 | 0] << 8 | i3[I7 + 11 | 0] << 16 | i3[I7 + 12 | 0] << 24) >>> 6 | 0) + w4 | 0, 0, n4, 0), B4 = t3 + B4 | 0, B4 = a4 >>> 0 > (e4 = a4 + e4 | 0) >>> 0 ? B4 + 1 | 0 : B4, a4 = PA(h4 = h4 + p4 + ((i3[I7 + 12 | 0] | i3[I7 + 13 | 0] << 8 | i3[I7 + 14 | 0] << 16 | i3[I7 + 15 | 0] << 24) >>> 8) | 0, 0, s4, 0), B4 = t3 + B4 | 0, G4 = e4 = a4 + e4 | 0, e4 = a4 >>> 0 > e4 >>> 0 ? B4 + 1 | 0 : B4, B4 = PA(o4, 0, F4, 0), a4 = t3, D4 = PA(f4, 0, M4, 0), Q4 = t3 + a4 | 0, Q4 = (B4 = D4 + B4 | 0) >>> 0 < D4 >>> 0 ? Q4 + 1 | 0 : Q4, a4 = (D4 = PA(r4, 0, n4, 0)) + B4 | 0, B4 = t3 + Q4 | 0, B4 = D4 >>> 0 > a4 >>> 0 ? B4 + 1 | 0 : B4, D4 = PA(w4, 0, s4, 0), B4 = t3 + B4 | 0, B4 = D4 >>> 0 > (a4 = D4 + a4 | 0) >>> 0 ? B4 + 1 | 0 : B4, D4 = PA(h4, 0, S4, 0), B4 = t3 + B4 | 0, J4 = a4 = D4 + a4 | 0, a4 = D4 >>> 0 > a4 >>> 0 ? B4 + 1 | 0 : B4, B4 = PA(o4, 0, n4, 0), y4 = t3, D4 = (Q4 = PA(f4, 0, F4, 0)) + B4 | 0, B4 = t3 + y4 | 0, B4 = Q4 >>> 0 > D4 >>> 0 ? B4 + 1 | 0 : B4, y4 = PA(r4, 0, s4, 0), Q4 = t3 + B4 | 0, Q4 = (D4 = y4 + D4 | 0) >>> 0 < y4 >>> 0 ? Q4 + 1 | 0 : Q4, y4 = PA(w4, 0, S4, 0), B4 = t3 + Q4 | 0, B4 = (D4 = y4 + D4 | 0) >>> 0 < y4 >>> 0 ? B4 + 1 | 0 : B4, y4 = PA(h4, 0, N4, 0), B4 = t3 + B4 | 0, Y4 = D4 = y4 + D4 | 0, D4 = D4 >>> 0 < y4 >>> 0 ? B4 + 1 | 0 : B4, B4 = PA(o4, 0, s4, 0), Q4 = t3, y4 = (k4 = PA(f4, 0, n4, 0)) + B4 | 0, B4 = t3 + Q4 | 0, B4 = y4 >>> 0 < k4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = PA(r4, 0, S4, 0), B4 = t3 + B4 | 0, B4 = Q4 >>> 0 > (y4 = Q4 + y4 | 0) >>> 0 ? B4 + 1 | 0 : B4, k4 = PA(w4, 0, N4, 0), Q4 = t3 + B4 | 0, Q4 = (y4 = k4 + y4 | 0) >>> 0 < k4 >>> 0 ? Q4 + 1 | 0 : Q4, k4 = PA(h4, 0, K4, 0), B4 = t3 + Q4 | 0, B4 = (y4 = k4 + y4 | 0) >>> 0 < k4 >>> 0 ? B4 + 1 | 0 : B4, k4 = y4, y4 = B4, B4 = PA(o4, 0, S4, 0), Q4 = t3, o4 = (f4 = PA(f4, 0, s4, 0)) + B4 | 0, B4 = t3 + Q4 | 0, B4 = o4 >>> 0 < f4 >>> 0 ? B4 + 1 | 0 : B4, f4 = PA(r4, 0, N4, 0), B4 = t3 + B4 | 0, B4 = (o4 = f4 + o4 | 0) >>> 0 < f4 >>> 0 ? B4 + 1 | 0 : B4, f4 = PA(w4, 0, K4, 0), B4 = t3 + B4 | 0, B4 = (o4 = f4 + o4 | 0) >>> 0 < f4 >>> 0 ? B4 + 1 | 0 : B4, f4 = PA(h4, 0, H4, 0), Q4 = t3 + B4 | 0, Q4 = (o4 = f4 + o4 | 0) >>> 0 < f4 >>> 0 ? Q4 + 1 | 0 : Q4, f4 = o4, B4 = y4, B4 = (o4 = (r4 = (67108863 & Q4) << 6 | o4 >>> 26) + k4 | 0) >>> 0 < r4 >>> 0 ? B4 + 1 | 0 : B4, r4 = o4, w4 = (67108863 & B4) << 6 | o4 >>> 26, B4 = D4, B4 = (o4 = w4 + Y4 | 0) >>> 0 < w4 >>> 0 ? B4 + 1 | 0 : B4, w4 = o4, Q4 = a4, h4 = B4 = (o4 = (67108863 & B4) << 6 | o4 >>> 26) + J4 | 0, a4 = (67108863 & (Q4 = B4 >>> 0 < o4 >>> 0 ? Q4 + 1 | 0 : Q4)) << 6 | B4 >>> 26, B4 = e4, f4 = (67108863 & r4) + ((B4 = c3((67108863 & ((o4 = a4 + G4 | 0) >>> 0 < a4 >>> 0 ? B4 + 1 : B4)) << 6 | o4 >>> 26, 5) + (67108863 & f4) | 0) >>> 26 | 0) | 0, r4 = 67108863 & w4, w4 = 67108863 & h4, h4 = 67108863 & o4, e4 = 67108863 & B4, I7 = I7 + 16 | 0, !(C4 = C4 - (g6 >>> 0 < 16) | 0) & (g6 = g6 - 16 | 0) >>> 0 > 15 | C4; ) ;
                      E3[A8 + 20 >> 2] = e4, E3[A8 + 36 >> 2] = h4, E3[A8 + 32 >> 2] = w4, E3[A8 + 28 >> 2] = r4, E3[A8 + 24 >> 2] = f4;
                    }
                    function j(A8, I7, g6, B4) {
                      A8 |= 0, I7 |= 0;
                      var E4 = 0;
                      return E4 = -1, (B4 |= 0) - 65 >>> 0 < 4294967232 | (g6 |= 0) >>> 0 > 64 || (g6 && I7 ? (r3 = E4 = r3 - 128 | 0, !I7 | ((B4 &= 255) - 65 & 255) >>> 0 <= 191 | ((g6 &= 255) - 65 & 255) >>> 0 <= 191 ? (iI(), Q3()) : (VA(A8 - -64 | 0, 0, 293), C3[A8 + 56 | 0] = 121, C3[A8 + 57 | 0] = 33, C3[A8 + 58 | 0] = 126, C3[A8 + 59 | 0] = 19, C3[A8 + 60 | 0] = 25, C3[A8 + 61 | 0] = 205, C3[A8 + 62 | 0] = 224, C3[A8 + 63 | 0] = 91, C3[A8 + 48 | 0] = 107, C3[A8 + 49 | 0] = 189, C3[A8 + 50 | 0] = 65, C3[A8 + 51 | 0] = 251, C3[A8 + 52 | 0] = 171, C3[A8 + 53 | 0] = 217, C3[A8 + 54 | 0] = 131, C3[A8 + 55 | 0] = 31, C3[A8 + 40 | 0] = 31, C3[A8 + 41 | 0] = 108, C3[A8 + 42 | 0] = 62, C3[A8 + 43 | 0] = 43, C3[A8 + 44 | 0] = 140, C3[A8 + 45 | 0] = 104, C3[A8 + 46 | 0] = 5, C3[A8 + 47 | 0] = 155, C3[A8 + 32 | 0] = 209, C3[A8 + 33 | 0] = 130, C3[A8 + 34 | 0] = 230, C3[A8 + 35 | 0] = 173, C3[A8 + 36 | 0] = 127, C3[A8 + 37 | 0] = 82, C3[A8 + 38 | 0] = 14, C3[A8 + 39 | 0] = 81, C3[A8 + 24 | 0] = 241, C3[A8 + 25 | 0] = 54, C3[A8 + 26 | 0] = 29, C3[A8 + 27 | 0] = 95, C3[A8 + 28 | 0] = 58, C3[A8 + 29 | 0] = 245, C3[A8 + 30 | 0] = 79, C3[A8 + 31 | 0] = 165, C3[A8 + 16 | 0] = 43, C3[A8 + 17 | 0] = 248, C3[A8 + 18 | 0] = 148, C3[A8 + 19 | 0] = 254, C3[A8 + 20 | 0] = 114, C3[A8 + 21 | 0] = 243, C3[A8 + 22 | 0] = 110, C3[A8 + 23 | 0] = 60, C3[A8 + 8 | 0] = 59, C3[A8 + 9 | 0] = 167, C3[A8 + 10 | 0] = 202, C3[A8 + 11 | 0] = 132, C3[A8 + 12 | 0] = 133, C3[A8 + 13 | 0] = 174, C3[A8 + 14 | 0] = 103, C3[A8 + 15 | 0] = 187, B4 = -222443256 ^ (g6 << 8 | B4), C3[0 | A8] = B4, C3[A8 + 1 | 0] = B4 >>> 8, C3[A8 + 2 | 0] = B4 >>> 16, C3[A8 + 3 | 0] = B4 >>> 24, B4 = g6 >>> 24 ^ 1779033703, C3[A8 + 4 | 0] = B4, C3[A8 + 5 | 0] = B4 >>> 8, C3[A8 + 6 | 0] = B4 >>> 16, C3[A8 + 7 | 0] = B4 >>> 24, g6 = TA(VA(E4, 0, 128), I7, g6), TA(A8 + 96 | 0, g6, 128), I7 = 128 + (i3[A8 + 352 | 0] | i3[A8 + 353 | 0] << 8 | i3[A8 + 354 | 0] << 16 | i3[A8 + 355 | 0] << 24) | 0, C3[A8 + 352 | 0] = I7, C3[A8 + 353 | 0] = I7 >>> 8, C3[A8 + 354 | 0] = I7 >>> 16, C3[A8 + 355 | 0] = I7 >>> 24, MI(g6, 128), r3 = g6 + 128 | 0)) : (((I7 = 255 & B4) - 65 & 255) >>> 0 <= 191 && (iI(), Q3()), VA(A8 - -64 | 0, 0, 293), C3[A8 + 56 | 0] = 121, C3[A8 + 57 | 0] = 33, C3[A8 + 58 | 0] = 126, C3[A8 + 59 | 0] = 19, C3[A8 + 60 | 0] = 25, C3[A8 + 61 | 0] = 205, C3[A8 + 62 | 0] = 224, C3[A8 + 63 | 0] = 91, C3[A8 + 48 | 0] = 107, C3[A8 + 49 | 0] = 189, C3[A8 + 50 | 0] = 65, C3[A8 + 51 | 0] = 251, C3[A8 + 52 | 0] = 171, C3[A8 + 53 | 0] = 217, C3[A8 + 54 | 0] = 131, C3[A8 + 55 | 0] = 31, C3[A8 + 40 | 0] = 31, C3[A8 + 41 | 0] = 108, C3[A8 + 42 | 0] = 62, C3[A8 + 43 | 0] = 43, C3[A8 + 44 | 0] = 140, C3[A8 + 45 | 0] = 104, C3[A8 + 46 | 0] = 5, C3[A8 + 47 | 0] = 155, C3[A8 + 32 | 0] = 209, C3[A8 + 33 | 0] = 130, C3[A8 + 34 | 0] = 230, C3[A8 + 35 | 0] = 173, C3[A8 + 36 | 0] = 127, C3[A8 + 37 | 0] = 82, C3[A8 + 38 | 0] = 14, C3[A8 + 39 | 0] = 81, C3[A8 + 24 | 0] = 241, C3[A8 + 25 | 0] = 54, C3[A8 + 26 | 0] = 29, C3[A8 + 27 | 0] = 95, C3[A8 + 28 | 0] = 58, C3[A8 + 29 | 0] = 245, C3[A8 + 30 | 0] = 79, C3[A8 + 31 | 0] = 165, C3[A8 + 16 | 0] = 43, C3[A8 + 17 | 0] = 248, C3[A8 + 18 | 0] = 148, C3[A8 + 19 | 0] = 254, C3[A8 + 20 | 0] = 114, C3[A8 + 21 | 0] = 243, C3[A8 + 22 | 0] = 110, C3[A8 + 23 | 0] = 60, C3[A8 + 8 | 0] = 59, C3[A8 + 9 | 0] = 167, C3[A8 + 10 | 0] = 202, C3[A8 + 11 | 0] = 132, C3[A8 + 12 | 0] = 133, C3[A8 + 13 | 0] = 174, C3[A8 + 14 | 0] = 103, C3[A8 + 15 | 0] = 187, I7 ^= -222443256, C3[0 | A8] = I7, C3[A8 + 1 | 0] = I7 >>> 8, C3[A8 + 2 | 0] = I7 >>> 16, C3[A8 + 3 | 0] = I7 >>> 24, C3[A8 + 4 | 0] = 103, C3[A8 + 5 | 0] = 230, C3[A8 + 6 | 0] = 9, C3[A8 + 7 | 0] = 106), E4 = 0), 0 | E4;
                    }
                    function X(A8, I7, g6) {
                      var C4, B4, Q4, i4, o4, c4, D4, a4, y4, f4, e4 = 0, w4 = 0, r4 = 0, t4 = 0, h4 = 0, k4 = 0, n4 = 0, s4 = 0, F4 = 0, S4 = 0, N4 = 0, K4 = 0, _4 = 0, p4 = 0, H4 = 0, G4 = 0, J4 = 0, Y4 = 0, U4 = 0;
                      w4 = E3[I7 + 4 >> 2], e4 = E3[I7 + 44 >> 2], t4 = E3[I7 + 8 >> 2], h4 = E3[I7 + 48 >> 2], k4 = E3[I7 + 12 >> 2], n4 = E3[I7 + 52 >> 2], s4 = E3[I7 + 16 >> 2], F4 = E3[I7 + 56 >> 2], S4 = E3[I7 + 20 >> 2], N4 = E3[I7 + 60 >> 2], K4 = E3[I7 + 24 >> 2], _4 = E3[(r4 = I7 - -64 | 0) >> 2], p4 = E3[I7 + 28 >> 2], H4 = E3[I7 + 68 >> 2], G4 = E3[I7 + 32 >> 2], J4 = E3[I7 + 72 >> 2], Y4 = E3[I7 + 36 >> 2], U4 = E3[I7 + 76 >> 2], E3[A8 >> 2] = E3[I7 >> 2] + E3[I7 + 40 >> 2], E3[A8 + 36 >> 2] = Y4 + U4, E3[A8 + 32 >> 2] = G4 + J4, E3[A8 + 28 >> 2] = p4 + H4, E3[A8 + 24 >> 2] = K4 + _4, E3[A8 + 20 >> 2] = S4 + N4, E3[A8 + 16 >> 2] = s4 + F4, E3[A8 + 12 >> 2] = k4 + n4, E3[A8 + 8 >> 2] = t4 + h4, E3[A8 + 4 >> 2] = e4 + w4, e4 = E3[I7 + 4 >> 2], t4 = E3[I7 + 44 >> 2], h4 = E3[I7 + 8 >> 2], k4 = E3[I7 + 48 >> 2], n4 = E3[I7 + 12 >> 2], s4 = E3[I7 + 52 >> 2], F4 = E3[I7 + 16 >> 2], S4 = E3[I7 + 56 >> 2], N4 = E3[I7 + 20 >> 2], K4 = E3[I7 + 60 >> 2], _4 = E3[I7 + 24 >> 2], r4 = E3[r4 >> 2], w4 = E3[I7 + 28 >> 2], p4 = E3[I7 + 68 >> 2], H4 = E3[I7 + 32 >> 2], G4 = E3[I7 + 72 >> 2], J4 = E3[I7 >> 2], Y4 = E3[I7 + 40 >> 2], E3[A8 + 76 >> 2] = E3[I7 + 76 >> 2] - E3[I7 + 36 >> 2], E3[A8 + 72 >> 2] = G4 - H4, E3[A8 + 68 >> 2] = p4 - w4, E3[(w4 = A8 - -64 | 0) >> 2] = r4 - _4, E3[A8 + 60 >> 2] = K4 - N4, E3[A8 + 56 >> 2] = S4 - F4, E3[A8 + 52 >> 2] = s4 - n4, E3[A8 + 48 >> 2] = k4 - h4, E3[A8 + 44 >> 2] = t4 - e4, E3[A8 + 40 >> 2] = Y4 - J4, M3(A8 + 80 | 0, A8, g6), M3(e4 = A8 + 40 | 0, e4, g6 + 40 | 0), M3(A8 + 120 | 0, g6 + 120 | 0, I7 + 120 | 0), M3(A8, I7 + 80 | 0, g6 + 80 | 0), Y4 = E3[A8 + 4 >> 2], U4 = E3[A8 + 8 >> 2], Q4 = E3[A8 + 12 >> 2], i4 = E3[A8 + 16 >> 2], o4 = E3[A8 + 20 >> 2], c4 = E3[A8 + 24 >> 2], D4 = E3[A8 + 28 >> 2], a4 = E3[A8 + 32 >> 2], y4 = E3[A8 + 36 >> 2], I7 = E3[A8 + 44 >> 2], g6 = E3[A8 + 84 >> 2], e4 = E3[A8 + 48 >> 2], t4 = E3[A8 + 88 >> 2], h4 = E3[A8 + 52 >> 2], k4 = E3[A8 + 92 >> 2], n4 = E3[A8 + 56 >> 2], s4 = E3[A8 + 96 >> 2], F4 = E3[A8 + 60 >> 2], S4 = E3[A8 + 100 >> 2], N4 = E3[w4 >> 2], K4 = E3[A8 + 104 >> 2], r4 = E3[A8 + 68 >> 2], _4 = E3[A8 + 108 >> 2], p4 = E3[A8 + 72 >> 2], H4 = E3[A8 + 112 >> 2], f4 = E3[A8 >> 2], G4 = E3[A8 + 40 >> 2], J4 = E3[A8 + 80 >> 2], C4 = E3[A8 + 76 >> 2], B4 = E3[A8 + 116 >> 2], E3[A8 + 76 >> 2] = C4 + B4, E3[A8 + 72 >> 2] = p4 + H4, E3[A8 + 68 >> 2] = r4 + _4, E3[w4 >> 2] = N4 + K4, E3[A8 + 60 >> 2] = F4 + S4, E3[A8 + 56 >> 2] = n4 + s4, E3[A8 + 52 >> 2] = h4 + k4, E3[A8 + 48 >> 2] = e4 + t4, E3[A8 + 44 >> 2] = I7 + g6, E3[A8 + 40 >> 2] = G4 + J4, E3[A8 + 36 >> 2] = B4 - C4, E3[A8 + 32 >> 2] = H4 - p4, E3[A8 + 28 >> 2] = _4 - r4, E3[A8 + 24 >> 2] = K4 - N4, E3[A8 + 20 >> 2] = S4 - F4, E3[A8 + 16 >> 2] = s4 - n4, E3[A8 + 12 >> 2] = k4 - h4, E3[A8 + 8 >> 2] = t4 - e4, E3[A8 + 4 >> 2] = g6 - I7, E3[A8 >> 2] = J4 - G4, I7 = y4 << 1, g6 = E3[A8 + 156 >> 2], E3[A8 + 156 >> 2] = I7 - g6, w4 = a4 << 1, e4 = E3[A8 + 152 >> 2], E3[A8 + 152 >> 2] = w4 - e4, t4 = D4 << 1, h4 = E3[A8 + 148 >> 2], E3[A8 + 148 >> 2] = t4 - h4, k4 = c4 << 1, n4 = E3[A8 + 144 >> 2], E3[A8 + 144 >> 2] = k4 - n4, s4 = o4 << 1, F4 = E3[A8 + 140 >> 2], E3[A8 + 140 >> 2] = s4 - F4, S4 = i4 << 1, N4 = E3[A8 + 136 >> 2], E3[A8 + 136 >> 2] = S4 - N4, K4 = Q4 << 1, r4 = E3[A8 + 132 >> 2], E3[A8 + 132 >> 2] = K4 - r4, _4 = U4 << 1, p4 = E3[A8 + 128 >> 2], E3[A8 + 128 >> 2] = _4 - p4, H4 = Y4 << 1, G4 = E3[A8 + 124 >> 2], E3[A8 + 124 >> 2] = H4 - G4, J4 = f4 << 1, Y4 = E3[A8 + 120 >> 2], E3[A8 + 120 >> 2] = J4 - Y4, E3[A8 + 112 >> 2] = e4 + w4, E3[A8 + 108 >> 2] = t4 + h4, E3[A8 + 104 >> 2] = k4 + n4, E3[A8 + 100 >> 2] = s4 + F4, E3[A8 + 96 >> 2] = S4 + N4, E3[A8 + 92 >> 2] = K4 + r4, E3[A8 + 88 >> 2] = _4 + p4, E3[A8 + 84 >> 2] = H4 + G4, E3[A8 + 80 >> 2] = J4 + Y4, E3[A8 + 116 >> 2] = I7 + g6;
                    }
                    function O(A8, I7, g6) {
                      var C4, B4, Q4, i4, o4, c4, D4, a4, y4, f4, e4 = 0, w4 = 0, r4 = 0, t4 = 0, h4 = 0, k4 = 0, n4 = 0, s4 = 0, F4 = 0, S4 = 0, N4 = 0, K4 = 0, _4 = 0, p4 = 0, H4 = 0, G4 = 0, J4 = 0, Y4 = 0, U4 = 0;
                      w4 = E3[I7 + 4 >> 2], e4 = E3[I7 + 44 >> 2], t4 = E3[I7 + 8 >> 2], h4 = E3[I7 + 48 >> 2], k4 = E3[I7 + 12 >> 2], n4 = E3[I7 + 52 >> 2], s4 = E3[I7 + 16 >> 2], F4 = E3[I7 + 56 >> 2], S4 = E3[I7 + 20 >> 2], N4 = E3[I7 + 60 >> 2], K4 = E3[I7 + 24 >> 2], _4 = E3[(r4 = I7 - -64 | 0) >> 2], p4 = E3[I7 + 28 >> 2], H4 = E3[I7 + 68 >> 2], G4 = E3[I7 + 32 >> 2], J4 = E3[I7 + 72 >> 2], Y4 = E3[I7 + 36 >> 2], U4 = E3[I7 + 76 >> 2], E3[A8 >> 2] = E3[I7 >> 2] + E3[I7 + 40 >> 2], E3[A8 + 36 >> 2] = Y4 + U4, E3[A8 + 32 >> 2] = G4 + J4, E3[A8 + 28 >> 2] = p4 + H4, E3[A8 + 24 >> 2] = K4 + _4, E3[A8 + 20 >> 2] = S4 + N4, E3[A8 + 16 >> 2] = s4 + F4, E3[A8 + 12 >> 2] = k4 + n4, E3[A8 + 8 >> 2] = t4 + h4, E3[A8 + 4 >> 2] = e4 + w4, e4 = E3[I7 + 4 >> 2], t4 = E3[I7 + 44 >> 2], h4 = E3[I7 + 8 >> 2], k4 = E3[I7 + 48 >> 2], n4 = E3[I7 + 12 >> 2], s4 = E3[I7 + 52 >> 2], F4 = E3[I7 + 16 >> 2], S4 = E3[I7 + 56 >> 2], N4 = E3[I7 + 20 >> 2], K4 = E3[I7 + 60 >> 2], _4 = E3[I7 + 24 >> 2], r4 = E3[r4 >> 2], w4 = E3[I7 + 28 >> 2], p4 = E3[I7 + 68 >> 2], H4 = E3[I7 + 32 >> 2], G4 = E3[I7 + 72 >> 2], J4 = E3[I7 >> 2], Y4 = E3[I7 + 40 >> 2], E3[A8 + 76 >> 2] = E3[I7 + 76 >> 2] - E3[I7 + 36 >> 2], E3[A8 + 72 >> 2] = G4 - H4, E3[A8 + 68 >> 2] = p4 - w4, E3[(w4 = A8 - -64 | 0) >> 2] = r4 - _4, E3[A8 + 60 >> 2] = K4 - N4, E3[A8 + 56 >> 2] = S4 - F4, E3[A8 + 52 >> 2] = s4 - n4, E3[A8 + 48 >> 2] = k4 - h4, E3[A8 + 44 >> 2] = t4 - e4, E3[A8 + 40 >> 2] = Y4 - J4, M3(A8 + 80 | 0, A8, g6 + 40 | 0), M3(e4 = A8 + 40 | 0, e4, g6), M3(A8 + 120 | 0, g6 + 120 | 0, I7 + 120 | 0), M3(A8, I7 + 80 | 0, g6 + 80 | 0), Y4 = E3[A8 + 4 >> 2], U4 = E3[A8 + 8 >> 2], Q4 = E3[A8 + 12 >> 2], i4 = E3[A8 + 16 >> 2], o4 = E3[A8 + 20 >> 2], c4 = E3[A8 + 24 >> 2], D4 = E3[A8 + 28 >> 2], a4 = E3[A8 + 32 >> 2], y4 = E3[A8 + 36 >> 2], I7 = E3[A8 + 44 >> 2], g6 = E3[A8 + 84 >> 2], e4 = E3[A8 + 48 >> 2], t4 = E3[A8 + 88 >> 2], h4 = E3[A8 + 52 >> 2], k4 = E3[A8 + 92 >> 2], n4 = E3[A8 + 56 >> 2], s4 = E3[A8 + 96 >> 2], F4 = E3[A8 + 60 >> 2], S4 = E3[A8 + 100 >> 2], N4 = E3[w4 >> 2], K4 = E3[A8 + 104 >> 2], r4 = E3[A8 + 68 >> 2], _4 = E3[A8 + 108 >> 2], p4 = E3[A8 + 72 >> 2], H4 = E3[A8 + 112 >> 2], f4 = E3[A8 >> 2], G4 = E3[A8 + 40 >> 2], J4 = E3[A8 + 80 >> 2], C4 = E3[A8 + 76 >> 2], B4 = E3[A8 + 116 >> 2], E3[A8 + 76 >> 2] = C4 + B4, E3[A8 + 72 >> 2] = p4 + H4, E3[A8 + 68 >> 2] = r4 + _4, E3[w4 >> 2] = N4 + K4, E3[A8 + 60 >> 2] = F4 + S4, E3[A8 + 56 >> 2] = n4 + s4, E3[A8 + 52 >> 2] = h4 + k4, E3[A8 + 48 >> 2] = e4 + t4, E3[A8 + 44 >> 2] = I7 + g6, E3[A8 + 40 >> 2] = G4 + J4, E3[A8 + 36 >> 2] = B4 - C4, E3[A8 + 32 >> 2] = H4 - p4, E3[A8 + 28 >> 2] = _4 - r4, E3[A8 + 24 >> 2] = K4 - N4, E3[A8 + 20 >> 2] = S4 - F4, E3[A8 + 16 >> 2] = s4 - n4, E3[A8 + 12 >> 2] = k4 - h4, E3[A8 + 8 >> 2] = t4 - e4, E3[A8 + 4 >> 2] = g6 - I7, E3[A8 >> 2] = J4 - G4, I7 = E3[A8 + 156 >> 2], g6 = y4 << 1, E3[A8 + 156 >> 2] = I7 + g6, w4 = E3[A8 + 152 >> 2], e4 = a4 << 1, E3[A8 + 152 >> 2] = w4 + e4, t4 = E3[A8 + 148 >> 2], h4 = D4 << 1, E3[A8 + 148 >> 2] = t4 + h4, k4 = E3[A8 + 144 >> 2], n4 = c4 << 1, E3[A8 + 144 >> 2] = k4 + n4, s4 = E3[A8 + 140 >> 2], F4 = o4 << 1, E3[A8 + 140 >> 2] = s4 + F4, S4 = E3[A8 + 136 >> 2], N4 = i4 << 1, E3[A8 + 136 >> 2] = S4 + N4, K4 = E3[A8 + 132 >> 2], r4 = Q4 << 1, E3[A8 + 132 >> 2] = K4 + r4, _4 = E3[A8 + 128 >> 2], p4 = U4 << 1, E3[A8 + 128 >> 2] = _4 + p4, H4 = E3[A8 + 124 >> 2], G4 = Y4 << 1, E3[A8 + 124 >> 2] = H4 + G4, J4 = E3[A8 + 120 >> 2], Y4 = f4 << 1, E3[A8 + 120 >> 2] = J4 + Y4, E3[A8 + 112 >> 2] = e4 - w4, E3[A8 + 108 >> 2] = h4 - t4, E3[A8 + 104 >> 2] = n4 - k4, E3[A8 + 100 >> 2] = F4 - s4, E3[A8 + 96 >> 2] = N4 - S4, E3[A8 + 92 >> 2] = r4 - K4, E3[A8 + 88 >> 2] = p4 - _4, E3[A8 + 84 >> 2] = G4 - H4, E3[A8 + 80 >> 2] = Y4 - J4, E3[A8 + 116 >> 2] = g6 - I7;
                    }
                    function T(A8, I7, g6) {
                      var C4, B4, Q4, i4, o4, c4, D4, a4, y4, f4, e4 = 0, w4 = 0, r4 = 0, t4 = 0, h4 = 0, k4 = 0, n4 = 0, s4 = 0, F4 = 0, S4 = 0, N4 = 0, K4 = 0, _4 = 0, p4 = 0, H4 = 0, G4 = 0, J4 = 0, Y4 = 0, U4 = 0;
                      w4 = E3[I7 + 4 >> 2], e4 = E3[I7 + 44 >> 2], t4 = E3[I7 + 8 >> 2], h4 = E3[I7 + 48 >> 2], k4 = E3[I7 + 12 >> 2], n4 = E3[I7 + 52 >> 2], s4 = E3[I7 + 16 >> 2], F4 = E3[I7 + 56 >> 2], S4 = E3[I7 + 20 >> 2], N4 = E3[I7 + 60 >> 2], K4 = E3[I7 + 24 >> 2], _4 = E3[(r4 = I7 - -64 | 0) >> 2], p4 = E3[I7 + 28 >> 2], H4 = E3[I7 + 68 >> 2], G4 = E3[I7 + 32 >> 2], J4 = E3[I7 + 72 >> 2], Y4 = E3[I7 + 36 >> 2], U4 = E3[I7 + 76 >> 2], E3[A8 >> 2] = E3[I7 >> 2] + E3[I7 + 40 >> 2], E3[A8 + 36 >> 2] = Y4 + U4, E3[A8 + 32 >> 2] = G4 + J4, E3[A8 + 28 >> 2] = p4 + H4, E3[A8 + 24 >> 2] = K4 + _4, E3[A8 + 20 >> 2] = S4 + N4, E3[A8 + 16 >> 2] = s4 + F4, E3[A8 + 12 >> 2] = k4 + n4, E3[A8 + 8 >> 2] = t4 + h4, E3[A8 + 4 >> 2] = e4 + w4, e4 = E3[I7 + 4 >> 2], t4 = E3[I7 + 44 >> 2], h4 = E3[I7 + 8 >> 2], k4 = E3[I7 + 48 >> 2], n4 = E3[I7 + 12 >> 2], s4 = E3[I7 + 52 >> 2], F4 = E3[I7 + 16 >> 2], S4 = E3[I7 + 56 >> 2], N4 = E3[I7 + 20 >> 2], K4 = E3[I7 + 60 >> 2], _4 = E3[I7 + 24 >> 2], r4 = E3[r4 >> 2], w4 = E3[I7 + 28 >> 2], p4 = E3[I7 + 68 >> 2], H4 = E3[I7 + 32 >> 2], G4 = E3[I7 + 72 >> 2], J4 = E3[I7 >> 2], Y4 = E3[I7 + 40 >> 2], E3[A8 + 76 >> 2] = E3[I7 + 76 >> 2] - E3[I7 + 36 >> 2], E3[A8 + 72 >> 2] = G4 - H4, E3[A8 + 68 >> 2] = p4 - w4, E3[(w4 = A8 - -64 | 0) >> 2] = r4 - _4, E3[A8 + 60 >> 2] = K4 - N4, E3[A8 + 56 >> 2] = S4 - F4, E3[A8 + 52 >> 2] = s4 - n4, E3[A8 + 48 >> 2] = k4 - h4, E3[A8 + 44 >> 2] = t4 - e4, E3[A8 + 40 >> 2] = Y4 - J4, M3(A8 + 80 | 0, A8, g6), M3(e4 = A8 + 40 | 0, e4, g6 + 40 | 0), M3(A8 + 120 | 0, g6 + 80 | 0, I7 + 120 | 0), Y4 = E3[I7 + 84 >> 2], U4 = E3[I7 + 88 >> 2], Q4 = E3[I7 + 92 >> 2], i4 = E3[I7 + 96 >> 2], o4 = E3[I7 + 100 >> 2], c4 = E3[I7 + 104 >> 2], D4 = E3[I7 + 108 >> 2], a4 = E3[I7 + 112 >> 2], y4 = E3[I7 + 116 >> 2], g6 = E3[A8 + 44 >> 2], e4 = E3[A8 + 84 >> 2], t4 = E3[A8 + 48 >> 2], h4 = E3[A8 + 88 >> 2], k4 = E3[A8 + 52 >> 2], n4 = E3[A8 + 92 >> 2], s4 = E3[A8 + 56 >> 2], F4 = E3[A8 + 96 >> 2], S4 = E3[A8 + 60 >> 2], N4 = E3[A8 + 100 >> 2], K4 = E3[w4 >> 2], r4 = E3[A8 + 104 >> 2], _4 = E3[A8 + 68 >> 2], p4 = E3[A8 + 108 >> 2], H4 = E3[A8 + 72 >> 2], G4 = E3[A8 + 112 >> 2], f4 = E3[I7 + 80 >> 2], I7 = E3[A8 + 40 >> 2], J4 = E3[A8 + 80 >> 2], C4 = E3[A8 + 76 >> 2], B4 = E3[A8 + 116 >> 2], E3[A8 + 76 >> 2] = C4 + B4, E3[A8 + 72 >> 2] = H4 + G4, E3[A8 + 68 >> 2] = _4 + p4, E3[w4 >> 2] = K4 + r4, E3[A8 + 60 >> 2] = S4 + N4, E3[A8 + 56 >> 2] = s4 + F4, E3[A8 + 52 >> 2] = k4 + n4, E3[A8 + 48 >> 2] = t4 + h4, E3[A8 + 44 >> 2] = g6 + e4, E3[A8 + 40 >> 2] = I7 + J4, E3[A8 + 36 >> 2] = B4 - C4, E3[A8 + 32 >> 2] = G4 - H4, E3[A8 + 28 >> 2] = p4 - _4, E3[A8 + 24 >> 2] = r4 - K4, E3[A8 + 20 >> 2] = N4 - S4, E3[A8 + 16 >> 2] = F4 - s4, E3[A8 + 12 >> 2] = n4 - k4, E3[A8 + 8 >> 2] = h4 - t4, E3[A8 + 4 >> 2] = e4 - g6, E3[A8 >> 2] = J4 - I7, I7 = y4 << 1, g6 = E3[A8 + 156 >> 2], E3[A8 + 156 >> 2] = I7 - g6, w4 = a4 << 1, e4 = E3[A8 + 152 >> 2], E3[A8 + 152 >> 2] = w4 - e4, t4 = D4 << 1, h4 = E3[A8 + 148 >> 2], E3[A8 + 148 >> 2] = t4 - h4, k4 = c4 << 1, n4 = E3[A8 + 144 >> 2], E3[A8 + 144 >> 2] = k4 - n4, s4 = o4 << 1, F4 = E3[A8 + 140 >> 2], E3[A8 + 140 >> 2] = s4 - F4, S4 = i4 << 1, N4 = E3[A8 + 136 >> 2], E3[A8 + 136 >> 2] = S4 - N4, K4 = Q4 << 1, r4 = E3[A8 + 132 >> 2], E3[A8 + 132 >> 2] = K4 - r4, _4 = U4 << 1, p4 = E3[A8 + 128 >> 2], E3[A8 + 128 >> 2] = _4 - p4, H4 = Y4 << 1, G4 = E3[A8 + 124 >> 2], E3[A8 + 124 >> 2] = H4 - G4, J4 = f4 << 1, Y4 = E3[A8 + 120 >> 2], E3[A8 + 120 >> 2] = J4 - Y4, E3[A8 + 112 >> 2] = e4 + w4, E3[A8 + 108 >> 2] = t4 + h4, E3[A8 + 104 >> 2] = k4 + n4, E3[A8 + 100 >> 2] = s4 + F4, E3[A8 + 96 >> 2] = S4 + N4, E3[A8 + 92 >> 2] = K4 + r4, E3[A8 + 88 >> 2] = _4 + p4, E3[A8 + 84 >> 2] = H4 + G4, E3[A8 + 80 >> 2] = J4 + Y4, E3[A8 + 116 >> 2] = I7 + g6;
                    }
                    function V(A8, I7) {
                      var g6, C4, B4, Q4, o4, c4, D4, a4, y4, f4, e4, w4, r4, h4, k4 = 0, n4 = 0, s4 = 0, F4 = 0, S4 = 0, M4 = 0, N4 = 0, K4 = 0, _4 = 0, p4 = 0, H4 = 0, G4 = 0, J4 = 0;
                      r4 = i3[I7 + 31 | 0], g6 = i3[I7 + 30 | 0], C4 = i3[I7 + 29 | 0], B4 = i3[I7 + 6 | 0], Q4 = i3[I7 + 5 | 0], o4 = i3[I7 + 4 | 0], c4 = i3[I7 + 9 | 0], D4 = i3[I7 + 8 | 0], a4 = i3[I7 + 7 | 0], y4 = i3[I7 + 12 | 0], H4 = i3[I7 + 11 | 0], G4 = i3[I7 + 10 | 0], f4 = i3[I7 + 15 | 0], J4 = i3[I7 + 14 | 0], e4 = i3[I7 + 13 | 0], N4 = i3[I7 + 28 | 0], p4 = i3[I7 + 27 | 0], K4 = i3[I7 + 26 | 0], M4 = i3[I7 + 25 | 0], F4 = i3[I7 + 24 | 0], s4 = i3[I7 + 23 | 0], h4 = i3[0 | I7] | i3[I7 + 1 | 0] << 8 | i3[I7 + 2 | 0] << 16 | i3[I7 + 3 | 0] << 24, S4 = (n4 = i3[I7 + 21 | 0]) << 15, n4 = k4 = n4 >>> 17 | 0, _4 = S4, _4 |= (S4 = i3[I7 + 20 | 0]) << 7, S4 = (k4 = S4 >>> 25 | 0) | n4, n4 = (k4 = i3[I7 + 22 | 0]) >>> 9 | 0, k4 = k4 << 23 | _4, n4 |= S4, w4 = i3[I7 + 16 | 0] | i3[I7 + 17 | 0] << 8 | i3[I7 + 18 | 0] << 16 | i3[I7 + 19 | 0] << 24, I7 = 0, S4 = k4, k4 = (33554431 & (I7 = (_4 = w4 + 16777216 | 0) >>> 0 < 16777216 ? 1 : I7)) << 7 | _4 >>> 25, I7 = (I7 >>> 25 | 0) + n4 | 0, k4 = (n4 = S4 = S4 + k4 | 0) >>> 0 < k4 >>> 0 ? I7 + 1 | 0 : I7, I7 = (S4 = n4 + 33554432 | 0) >>> 0 < 33554432 ? k4 + 1 | 0 : k4, E3[A8 + 24 >> 2] = n4 - (-67108864 & S4), k4 = (n4 = s4 >>> 27 | 0) | F4 >>> 19 | M4 >>> 11, n4 = s4 = (F4 = M4 << 21 | (s4 = F4 << 13 | s4 << 5)) + (n4 = (67108863 & (n4 = I7)) << 6 | S4 >>> 26) | 0, I7 = k4, k4 = (s4 = F4 + 16777216 | 0) >>> 0 < 16777216 ? I7 + 1 | 0 : I7, E3[A8 + 28 >> 2] = n4 - (1040187392 & s4), n4 = (k4 = (I7 = k4) >>> 25 | 0) + (n4 = p4 >>> 20 | K4 >>> 28 | N4 >>> 12) | 0, I7 = n4 = (k4 = s4 = (I7 = (33554431 & I7) << 7 | s4 >>> 25) + (p4 << 12 | K4 << 4 | N4 << 20) | 0) >>> 0 < I7 >>> 0 ? n4 + 1 | 0 : n4, s4 = (N4 = k4 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7, E3[A8 + 32 >> 2] = k4 - (-67108864 & N4), n4 = y4 >>> 13 | (k4 = H4 >>> 21 | G4 >>> 29), I7 = (n4 = (p4 = 16777216 + (H4 = H4 << 11 | G4 << 3 | y4 << 19) | 0) >>> 0 < 16777216 ? n4 + 1 | 0 : n4) >>> 25 | 0, n4 = (k4 = F4 = J4 << 10 | e4 << 2 | f4 << 18) + (F4 = (33554431 & n4) << 7 | p4 >>> 25) | 0, k4 = I7 + (M4 = J4 >>> 22 | e4 >>> 30 | f4 >>> 14) | 0, I7 = k4 = n4 >>> 0 < F4 >>> 0 ? k4 + 1 | 0 : k4, F4 = ((67108863 & (I7 = (F4 = n4 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7)) << 6 | (k4 = F4) >>> 26) + (K4 = w4 - (-33554432 & _4) | 0) | 0, E3[A8 + 20 >> 2] = F4, E3[A8 + 16 >> 2] = n4 - (-67108864 & k4), k4 = Q4 >>> 18 | o4 >>> 26 | B4 >>> 10, n4 = (k4 = (K4 = 16777216 + (G4 = Q4 << 14 | o4 << 6 | B4 << 22) | 0) >>> 0 < 16777216 ? k4 + 1 | 0 : k4) >>> 25 | 0, k4 = (I7 = F4 = D4 << 13 | a4 << 5 | c4 << 21) + (F4 = (33554431 & k4) << 7 | K4 >>> 25) | 0, I7 = n4 + (M4 = D4 >>> 19 | a4 >>> 27 | c4 >>> 11) | 0, I7 = k4 >>> 0 < F4 >>> 0 ? I7 + 1 | 0 : I7, n4 = (M4 = k4 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7, E3[A8 + 8 >> 2] = k4 - (-67108864 & M4), N4 = (s4 = (67108863 & s4) << 6 | N4 >>> 26) + (J4 = r4 << 18 & 33292288 | g6 << 10 | C4 << 2) | 0, I7 = k4 = g6 >>> 22 | C4 >>> 30, k4 = (s4 = J4 + 16777216 | 0) >>> 0 < 16777216 ? I7 + 1 | 0 : I7, E3[A8 + 36 >> 2] = N4 - (33554432 & s4), n4 = H4 + ((67108863 & n4) << 6 | M4 >>> 26) | 0, E3[A8 + 12 >> 2] = n4 - (234881024 & p4), F4 = G4 - (2113929216 & K4) | 0, n4 = PA((33554431 & (I7 = k4)) << 7 | s4 >>> 25, k4 = I7 >>> 25 | 0, 19, 0), I7 = t3, n4 = (k4 = n4 + h4 | 0) >>> 0 < n4 >>> 0 ? I7 + 1 | 0 : I7, s4 = ((67108863 & (n4 = (I7 = k4 + 33554432 | 0) >>> 0 < 33554432 ? n4 + 1 | 0 : n4)) << 6 | I7 >>> 26) + F4 | 0, E3[A8 + 4 >> 2] = s4, E3[A8 >> 2] = k4 - (-67108864 & I7);
                    }
                    function Z(A8, I7) {
                      var g6, B4, Q4, o4, c4 = 0, D4 = 0, a4 = 0, y4 = 0, f4 = 0, e4 = 0;
                      for (r3 = g6 = r3 - 480 | 0; a4 = (D4 = g6 + 288 | 0) + (c4 << 1) | 0, y4 = i3[I7 + c4 | 0], C3[a4 + 1 | 0] = y4 >>> 4, C3[0 | a4] = 15 & y4, D4 = D4 + ((a4 = 1 | c4) << 1) | 0, a4 = i3[I7 + a4 | 0], C3[D4 + 1 | 0] = a4 >>> 4, C3[0 | D4] = 15 & a4, 32 != (0 | (c4 = c4 + 2 | 0)); ) ;
                      for (I7 = 0; c4 = 8 + (D4 = (c4 = I7) + i3[0 | (I7 = (g6 + 288 | 0) + f4 | 0)] | 0) | 0, C3[0 | I7] = D4 - (240 & c4), c4 = 8 + (D4 = i3[I7 + 1 | 0] + (c4 << 24 >> 24 >> 4) | 0) | 0, C3[I7 + 1 | 0] = D4 - (240 & c4), c4 = 8 + (D4 = i3[I7 + 2 | 0] + (c4 << 24 >> 24 >> 4) | 0) | 0, C3[I7 + 2 | 0] = D4 - (240 & c4), I7 = c4 << 24 >> 24 >> 4, 63 != (0 | (f4 = f4 + 3 | 0)); ) ;
                      for (C3[g6 + 351 | 0] = i3[g6 + 351 | 0] + I7, E3[A8 + 32 >> 2] = 0, E3[A8 + 36 >> 2] = 0, E3[A8 + 24 >> 2] = 0, E3[A8 + 28 >> 2] = 0, E3[A8 + 16 >> 2] = 0, E3[A8 + 20 >> 2] = 0, E3[A8 + 8 >> 2] = 0, E3[A8 + 12 >> 2] = 0, E3[A8 >> 2] = 0, E3[A8 + 4 >> 2] = 0, E3[A8 + 44 >> 2] = 0, E3[A8 + 48 >> 2] = 0, E3[A8 + 40 >> 2] = 1, E3[A8 + 52 >> 2] = 0, E3[A8 + 56 >> 2] = 0, E3[A8 + 60 >> 2] = 0, E3[A8 + 64 >> 2] = 0, E3[A8 + 68 >> 2] = 0, E3[A8 + 72 >> 2] = 0, E3[A8 + 76 >> 2] = 0, E3[A8 + 80 >> 2] = 1, VA(A8 + 84 | 0, 0, 76), Q4 = A8 + 120 | 0, f4 = A8 + 80 | 0, I7 = A8 + 40 | 0, D4 = g6 + 208 | 0, B4 = g6 + 168 | 0, a4 = g6 + 248 | 0, c4 = 1; oA(e4 = g6 + 8 | 0, c4 >>> 1 | 0, C3[(g6 + 288 | 0) + c4 | 0]), T(y4 = g6 + 128 | 0, A8, e4), M3(A8, y4, a4), M3(I7, B4, D4), M3(f4, D4, a4), M3(Q4, y4, B4), e4 = c4 >>> 0 < 62, c4 = c4 + 2 | 0, e4; ) ;
                      for (c4 = E3[A8 + 36 >> 2], E3[g6 + 392 >> 2] = E3[A8 + 32 >> 2], E3[g6 + 396 >> 2] = c4, c4 = E3[A8 + 28 >> 2], E3[g6 + 384 >> 2] = E3[A8 + 24 >> 2], E3[g6 + 388 >> 2] = c4, c4 = E3[A8 + 20 >> 2], E3[g6 + 376 >> 2] = E3[A8 + 16 >> 2], E3[g6 + 380 >> 2] = c4, c4 = E3[A8 + 12 >> 2], E3[g6 + 368 >> 2] = E3[A8 + 8 >> 2], E3[g6 + 372 >> 2] = c4, c4 = E3[A8 + 4 >> 2], E3[g6 + 360 >> 2] = E3[A8 >> 2], E3[g6 + 364 >> 2] = c4, c4 = E3[I7 + 12 >> 2], E3[g6 + 408 >> 2] = E3[I7 + 8 >> 2], E3[g6 + 412 >> 2] = c4, c4 = E3[I7 + 20 >> 2], E3[g6 + 416 >> 2] = E3[I7 + 16 >> 2], E3[g6 + 420 >> 2] = c4, c4 = E3[I7 + 28 >> 2], E3[g6 + 424 >> 2] = E3[I7 + 24 >> 2], E3[g6 + 428 >> 2] = c4, c4 = E3[I7 + 36 >> 2], E3[g6 + 432 >> 2] = E3[I7 + 32 >> 2], E3[g6 + 436 >> 2] = c4, c4 = E3[I7 + 4 >> 2], E3[g6 + 400 >> 2] = E3[I7 >> 2], E3[g6 + 404 >> 2] = c4, c4 = E3[f4 + 12 >> 2], E3[g6 + 448 >> 2] = E3[f4 + 8 >> 2], E3[g6 + 452 >> 2] = c4, c4 = E3[f4 + 20 >> 2], E3[g6 + 456 >> 2] = E3[f4 + 16 >> 2], E3[g6 + 460 >> 2] = c4, c4 = E3[f4 + 28 >> 2], E3[g6 + 464 >> 2] = E3[f4 + 24 >> 2], E3[g6 + 468 >> 2] = c4, c4 = E3[f4 + 36 >> 2], E3[g6 + 472 >> 2] = E3[f4 + 32 >> 2], E3[g6 + 476 >> 2] = c4, c4 = E3[f4 + 4 >> 2], E3[g6 + 440 >> 2] = E3[f4 >> 2], E3[g6 + 444 >> 2] = c4, _3(y4, c4 = g6 + 360 | 0), M3(c4, y4, a4), M3(e4 = g6 + 400 | 0, B4, D4), M3(o4 = g6 + 440 | 0, D4, a4), _3(y4, c4), M3(c4, y4, a4), M3(e4, B4, D4), M3(o4, D4, a4), _3(y4, c4), M3(c4, y4, a4), M3(e4, B4, D4), M3(o4, D4, a4), _3(y4, c4), M3(A8, y4, a4), M3(I7, B4, D4), M3(f4, D4, a4), M3(Q4, y4, B4), c4 = 0; oA(e4 = g6 + 8 | 0, c4 >>> 1 | 0, C3[(g6 + 288 | 0) + c4 | 0]), T(y4 = g6 + 128 | 0, A8, e4), M3(A8, y4, a4), M3(I7, B4, D4), M3(f4, D4, a4), M3(Q4, y4, B4), y4 = c4 >>> 0 < 62, c4 = c4 + 2 | 0, y4; ) ;
                      r3 = g6 + 480 | 0;
                    }
                    function W(A8, I7, g6, B4) {
                      var Q4, o4 = 0, c4 = 0, D4 = 0, a4 = 0, y4 = 0, f4 = 0, e4 = 0, w4 = 0, t4 = 0, h4 = 0, k4 = 0, s4 = 0;
                      if (r3 = Q4 = r3 - 704 | 0, g6 | B4) if (o4 = (B4 << 3 | g6 >>> 29) + (c4 = a4 = E3[A8 + 76 >> 2]) | 0, D4 = (f4 = E3[A8 + 72 >> 2]) + (y4 = g6 << 3) | 0, E3[A8 + 72 >> 2] = D4, o4 = D4 >>> 0 < y4 >>> 0 ? o4 + 1 | 0 : o4, E3[A8 + 76 >> 2] = o4, a4 = E3[A8 + 68 >> 2], o4 = (o4 = D4 = (0 | o4) == (0 | c4) & D4 >>> 0 < f4 >>> 0 | o4 >>> 0 < c4 >>> 0) >>> 0 > (D4 = D4 + E3[A8 + 64 >> 2] | 0) >>> 0 ? a4 + 1 | 0 : a4, D4 = (y4 = B4 >>> 29 | 0) + D4 | 0, E3[A8 + 64 >> 2] = D4, E3[A8 + 68 >> 2] = D4 >>> 0 < y4 >>> 0 ? o4 + 1 | 0 : o4, D4 = A8 + 80 | 0, (0 | B4) == (0 | (a4 = k4 = 0 - ((o4 = 0) + ((y4 = 127 & ((7 & c4) << 29 | f4 >>> 3)) >>> 0 > 128) | 0) | 0)) & g6 >>> 0 >= (f4 = 128 - y4 | 0) >>> 0 | B4 >>> 0 > a4 >>> 0) {
                        if (c4 = 0, a4 = 0, !o4 & (127 ^ y4) >>> 0 >= 3 | o4) for (s4 = 252 & f4; C3[(o4 = c4 + y4 | 0) + D4 | 0] = i3[I7 + c4 | 0], C3[D4 + (y4 + (o4 = 1 | c4) | 0) | 0] = i3[I7 + o4 | 0], C3[D4 + (y4 + (o4 = 2 | c4) | 0) | 0] = i3[I7 + o4 | 0], C3[D4 + (y4 + (o4 = 3 | c4) | 0) | 0] = i3[I7 + o4 | 0], o4 = a4, a4 = (c4 = c4 + 4 | 0) >>> 0 < 4 ? o4 + 1 | 0 : o4, o4 = t4, t4 = o4 = (e4 = e4 + 4 | 0) >>> 0 < 4 ? o4 + 1 | 0 : o4, (0 | e4) != (0 | s4) | (0 | h4) != (0 | o4); ) ;
                        if (t4 = o4 = 0, o4 | (e4 = 3 & f4)) for (; C3[(o4 = c4 + y4 | 0) + D4 | 0] = i3[I7 + c4 | 0], o4 = a4, a4 = (c4 = c4 + 1 | 0) ? o4 : o4 + 1 | 0, o4 = h4, h4 = o4 = (w4 = w4 + 1 | 0) ? o4 : o4 + 1 | 0, (0 | e4) != (0 | w4) | (0 | t4) != (0 | o4); ) ;
                        if (n3(A8, D4, Q4, c4 = Q4 + 640 | 0), I7 = I7 + f4 | 0, !(B4 = B4 - ((g6 >>> 0 < f4 >>> 0) + k4 | 0) | 0) & (g6 = g6 - f4 | 0) >>> 0 > 127 | B4) for (; n3(A8, I7, Q4, c4), I7 = I7 + 128 | 0, !(B4 = B4 - (g6 >>> 0 < 128) | 0) & (g6 = g6 - 128 | 0) >>> 0 > 127 | B4; ) ;
                        if (g6 | B4) {
                          if (A8 = 3 & g6, w4 = 0, h4 = 0, c4 = 0, a4 = 0, !B4 & g6 >>> 0 >= 4 | B4) for (e4 = 124 & g6, f4 = 0, g6 = 0, B4 = 0; C3[c4 + D4 | 0] = i3[I7 + c4 | 0], C3[(o4 = 1 | c4) + D4 | 0] = i3[I7 + o4 | 0], C3[(o4 = 2 | c4) + D4 | 0] = i3[I7 + o4 | 0], C3[(o4 = 3 | c4) + D4 | 0] = i3[I7 + o4 | 0], o4 = a4, a4 = (c4 = c4 + 4 | 0) >>> 0 < 4 ? o4 + 1 | 0 : o4, o4 = B4, B4 = o4 = (g6 = g6 + 4 | 0) >>> 0 < 4 ? o4 + 1 | 0 : o4, (0 | g6) != (0 | e4) | (0 | f4) != (0 | o4); ) ;
                          if (A8 | t4) for (; C3[c4 + D4 | 0] = i3[I7 + c4 | 0], a4 = (c4 = c4 + 1 | 0) ? a4 : a4 + 1 | 0, o4 = h4, h4 = o4 = (w4 = w4 + 1 | 0) ? o4 : o4 + 1 | 0, (0 | A8) != (0 | w4) | (0 | t4) != (0 | o4); ) ;
                        }
                        MI(Q4, 704);
                      } else {
                        if (c4 = 0, a4 = 0, !B4 & g6 >>> 0 >= 4 | B4) for (A8 = -4 & g6; C3[(o4 = c4 + y4 | 0) + D4 | 0] = i3[I7 + c4 | 0], C3[D4 + (f4 = y4 + (o4 = 1 | c4) | 0) | 0] = i3[I7 + o4 | 0], C3[D4 + (f4 = y4 + (o4 = 2 | c4) | 0) | 0] = i3[I7 + o4 | 0], C3[D4 + (f4 = y4 + (o4 = 3 | c4) | 0) | 0] = i3[I7 + o4 | 0], o4 = a4, a4 = (c4 = c4 + 4 | 0) >>> 0 < 4 ? o4 + 1 | 0 : o4, o4 = t4, t4 = o4 = (e4 = e4 + 4 | 0) >>> 0 < 4 ? o4 + 1 | 0 : o4, (0 | A8) != (0 | e4) | (0 | B4) != (0 | o4); ) ;
                        if ((g6 &= 3) | (A8 = 0)) for (; C3[(B4 = c4 + y4 | 0) + D4 | 0] = i3[I7 + c4 | 0], a4 = (c4 = c4 + 1 | 0) ? a4 : a4 + 1 | 0, o4 = h4, h4 = o4 = (w4 = w4 + 1 | 0) ? o4 : o4 + 1 | 0, (0 | g6) != (0 | w4) | (0 | A8) != (0 | o4); ) ;
                      }
                      return r3 = Q4 + 704 | 0, 0;
                    }
                    function $(A8, I7, g6) {
                      var B4 = 0, Q4 = 0, E4 = 0, o4 = 0, c4 = 0, D4 = 0, a4 = 0, y4 = 0, f4 = 0, e4 = 0, w4 = 0, r4 = 0, t4 = 0, h4 = 0, k4 = 0, n4 = 0, s4 = 0, F4 = 0, S4 = 0, M4 = 0;
                      for (Q4 = 2036477234, o4 = 857760878, B4 = 1634760805, D4 = 1797285236, E4 = i3[I7 + 12 | 0] | i3[I7 + 13 | 0] << 8 | i3[I7 + 14 | 0] << 16 | i3[I7 + 15 | 0] << 24, f4 = i3[I7 + 8 | 0] | i3[I7 + 9 | 0] << 8 | i3[I7 + 10 | 0] << 16 | i3[I7 + 11 | 0] << 24, c4 = i3[I7 + 4 | 0] | i3[I7 + 5 | 0] << 8 | i3[I7 + 6 | 0] << 16 | i3[I7 + 7 | 0] << 24, e4 = i3[g6 + 28 | 0] | i3[g6 + 29 | 0] << 8 | i3[g6 + 30 | 0] << 16 | i3[g6 + 31 | 0] << 24, a4 = i3[g6 + 24 | 0] | i3[g6 + 25 | 0] << 8 | i3[g6 + 26 | 0] << 16 | i3[g6 + 27 | 0] << 24, s4 = i3[g6 + 20 | 0] | i3[g6 + 21 | 0] << 8 | i3[g6 + 22 | 0] << 16 | i3[g6 + 23 | 0] << 24, w4 = i3[g6 + 16 | 0] | i3[g6 + 17 | 0] << 8 | i3[g6 + 18 | 0] << 16 | i3[g6 + 19 | 0] << 24, r4 = i3[g6 + 12 | 0] | i3[g6 + 13 | 0] << 8 | i3[g6 + 14 | 0] << 16 | i3[g6 + 15 | 0] << 24, t4 = i3[g6 + 8 | 0] | i3[g6 + 9 | 0] << 8 | i3[g6 + 10 | 0] << 16 | i3[g6 + 11 | 0] << 24, h4 = i3[g6 + 4 | 0] | i3[g6 + 5 | 0] << 8 | i3[g6 + 6 | 0] << 16 | i3[g6 + 7 | 0] << 24, I7 = i3[0 | I7] | i3[I7 + 1 | 0] << 8 | i3[I7 + 2 | 0] << 16 | i3[I7 + 3 | 0] << 24, g6 = i3[0 | g6] | i3[g6 + 1 | 0] << 8 | i3[g6 + 2 | 0] << 16 | i3[g6 + 3 | 0] << 24; y4 = g6, g6 = gI((k4 = I7) ^ (I7 = g6 + B4 | 0), 16), y4 = w4 = gI(y4 ^ (B4 = g6 + w4 | 0), 12), F4 = gI((k4 = I7 + w4 | 0) ^ g6, 8), I7 = gI(y4 ^ (w4 = F4 + B4 | 0), 7), B4 = r4, r4 = gI((g6 = D4 + r4 | 0) ^ E4, 16), B4 = gI(B4 ^ (e4 = r4 + e4 | 0), 12), E4 = t4, D4 = gI((Q4 = Q4 + t4 | 0) ^ f4, 16), E4 = gI(E4 ^ (t4 = D4 + a4 | 0), 12), a4 = gI((Q4 = E4 + Q4 | 0) ^ D4, 8), g6 = gI(a4 ^ (D4 = I7 + (n4 = g6 + B4 | 0) | 0), 16), f4 = gI((o4 = o4 + h4 | 0) ^ c4, 16), h4 = gI((c4 = f4 + s4 | 0) ^ h4, 12), y4 = I7, I7 = gI((o4 = o4 + h4 | 0) ^ f4, 8), y4 = gI(y4 ^ (c4 = g6 + (S4 = I7 + c4 | 0) | 0), 12), f4 = gI(g6 ^ (D4 = y4 + D4 | 0), 8), g6 = gI((s4 = f4 + c4 | 0) ^ y4, 7), y4 = Q4, Q4 = B4, n4 = gI(r4 ^ n4, 8), Q4 = gI(Q4 ^ (B4 = n4 + e4 | 0), 7), r4 = gI((c4 = y4 + Q4 | 0) ^ I7, 16), e4 = gI((I7 = r4 + w4 | 0) ^ Q4, 12), c4 = gI(r4 ^ (Q4 = e4 + c4 | 0), 8), r4 = gI((w4 = I7 + c4 | 0) ^ e4, 7), I7 = gI((I7 = E4) ^ (E4 = a4 + t4 | 0), 7), t4 = gI((o4 = I7 + o4 | 0) ^ F4, 16), a4 = gI(I7 ^ (B4 = t4 + B4 | 0), 12), I7 = gI(t4 ^ (o4 = a4 + o4 | 0), 8), t4 = gI((e4 = B4 + I7 | 0) ^ a4, 7), y4 = E4, B4 = gI(h4 ^ S4, 7), a4 = gI((E4 = B4 + k4 | 0) ^ n4, 16), k4 = gI(B4 ^ (h4 = y4 + a4 | 0), 12), E4 = gI(a4 ^ (B4 = k4 + E4 | 0), 8), h4 = gI((a4 = h4 + E4 | 0) ^ k4, 7), 10 != (0 | (M4 = M4 + 1 | 0)); ) ;
                      C3[0 | A8] = B4, C3[A8 + 1 | 0] = B4 >>> 8, C3[A8 + 2 | 0] = B4 >>> 16, C3[A8 + 3 | 0] = B4 >>> 24, C3[A8 + 28 | 0] = E4, C3[A8 + 29 | 0] = E4 >>> 8, C3[A8 + 30 | 0] = E4 >>> 16, C3[A8 + 31 | 0] = E4 >>> 24, C3[A8 + 24 | 0] = f4, C3[A8 + 25 | 0] = f4 >>> 8, C3[A8 + 26 | 0] = f4 >>> 16, C3[A8 + 27 | 0] = f4 >>> 24, C3[A8 + 20 | 0] = c4, C3[A8 + 21 | 0] = c4 >>> 8, C3[A8 + 22 | 0] = c4 >>> 16, C3[A8 + 23 | 0] = c4 >>> 24, C3[A8 + 16 | 0] = I7, C3[A8 + 17 | 0] = I7 >>> 8, C3[A8 + 18 | 0] = I7 >>> 16, C3[A8 + 19 | 0] = I7 >>> 24, C3[A8 + 12 | 0] = D4, C3[A8 + 13 | 0] = D4 >>> 8, C3[A8 + 14 | 0] = D4 >>> 16, C3[A8 + 15 | 0] = D4 >>> 24, C3[A8 + 8 | 0] = Q4, C3[A8 + 9 | 0] = Q4 >>> 8, C3[A8 + 10 | 0] = Q4 >>> 16, C3[A8 + 11 | 0] = Q4 >>> 24, C3[A8 + 4 | 0] = o4, C3[A8 + 5 | 0] = o4 >>> 8, C3[A8 + 6 | 0] = o4 >>> 16, C3[A8 + 7 | 0] = o4 >>> 24;
                    }
                    function AA(A8, I7, g6) {
                      var B4 = 0, Q4 = 0, E4 = 0, o4 = 0, c4 = 0, D4 = 0, a4 = 0, y4 = 0, f4 = 0, e4 = 0, w4 = 0, r4 = 0, t4 = 0, h4 = 0, k4 = 0, n4 = 0, s4 = 0, F4 = 0, S4 = 0, M4 = 0;
                      for (B4 = 1797285236, a4 = 2036477234, y4 = 857760878, Q4 = 1634760805, E4 = i3[I7 + 12 | 0] | i3[I7 + 13 | 0] << 8 | i3[I7 + 14 | 0] << 16 | i3[I7 + 15 | 0] << 24, c4 = i3[I7 + 8 | 0] | i3[I7 + 9 | 0] << 8 | i3[I7 + 10 | 0] << 16 | i3[I7 + 11 | 0] << 24, o4 = i3[I7 + 4 | 0] | i3[I7 + 5 | 0] << 8 | i3[I7 + 6 | 0] << 16 | i3[I7 + 7 | 0] << 24, k4 = i3[g6 + 28 | 0] | i3[g6 + 29 | 0] << 8 | i3[g6 + 30 | 0] << 16 | i3[g6 + 31 | 0] << 24, h4 = i3[g6 + 24 | 0] | i3[g6 + 25 | 0] << 8 | i3[g6 + 26 | 0] << 16 | i3[g6 + 27 | 0] << 24, n4 = 20, r4 = i3[g6 + 20 | 0] | i3[g6 + 21 | 0] << 8 | i3[g6 + 22 | 0] << 16 | i3[g6 + 23 | 0] << 24, t4 = i3[g6 + 16 | 0] | i3[g6 + 17 | 0] << 8 | i3[g6 + 18 | 0] << 16 | i3[g6 + 19 | 0] << 24, f4 = i3[g6 + 12 | 0] | i3[g6 + 13 | 0] << 8 | i3[g6 + 14 | 0] << 16 | i3[g6 + 15 | 0] << 24, e4 = i3[g6 + 8 | 0] | i3[g6 + 9 | 0] << 8 | i3[g6 + 10 | 0] << 16 | i3[g6 + 11 | 0] << 24, w4 = i3[g6 + 4 | 0] | i3[g6 + 5 | 0] << 8 | i3[g6 + 6 | 0] << 16 | i3[g6 + 7 | 0] << 24, I7 = i3[0 | I7] | i3[I7 + 1 | 0] << 8 | i3[I7 + 2 | 0] << 16 | i3[I7 + 3 | 0] << 24, g6 = i3[0 | g6] | i3[g6 + 1 | 0] << 8 | i3[g6 + 2 | 0] << 16 | i3[g6 + 3 | 0] << 24; D4 = gI(g6 + y4 | 0, 7) ^ E4, s4 = gI(D4 + y4 | 0, 9) ^ h4, f4 = gI(Q4 + r4 | 0, 7) ^ f4, F4 = gI(f4 + Q4 | 0, 9) ^ c4, S4 = gI(F4 + f4 | 0, 13) ^ r4, e4 = gI(B4 + t4 | 0, 7) ^ e4, o4 = gI(e4 + B4 | 0, 9) ^ o4, c4 = gI(o4 + e4 | 0, 13) ^ t4, B4 = gI(o4 + c4 | 0, 18) ^ B4, E4 = gI(I7 + a4 | 0, 7) ^ k4, r4 = S4 ^ gI(B4 + E4 | 0, 7), h4 = s4 ^ gI(r4 + B4 | 0, 9), k4 = gI(r4 + h4 | 0, 13) ^ E4, B4 = gI(h4 + k4 | 0, 18) ^ B4, w4 = gI(E4 + a4 | 0, 9) ^ w4, M4 = gI(w4 + E4 | 0, 13) ^ I7, I7 = gI(M4 + w4 | 0, 18) ^ a4, t4 = gI(I7 + D4 | 0, 7) ^ c4, c4 = gI(t4 + I7 | 0, 9) ^ F4, E4 = gI(c4 + t4 | 0, 13) ^ D4, a4 = gI(E4 + c4 | 0, 18) ^ I7, D4 = gI(D4 + s4 | 0, 13) ^ g6, g6 = gI(D4 + s4 | 0, 18) ^ y4, I7 = gI(g6 + f4 | 0, 7) ^ M4, o4 = gI(I7 + g6 | 0, 9) ^ o4, f4 = gI(I7 + o4 | 0, 13) ^ f4, y4 = gI(o4 + f4 | 0, 18) ^ g6, Q4 = gI(F4 + S4 | 0, 18) ^ Q4, g6 = gI(Q4 + e4 | 0, 7) ^ D4, w4 = gI(g6 + Q4 | 0, 9) ^ w4, e4 = gI(g6 + w4 | 0, 13) ^ e4, Q4 = gI(w4 + e4 | 0, 18) ^ Q4, D4 = n4 >>> 0 > 2, n4 = n4 - 2 | 0, D4; ) ;
                      return C3[0 | A8] = Q4, C3[A8 + 1 | 0] = Q4 >>> 8, C3[A8 + 2 | 0] = Q4 >>> 16, C3[A8 + 3 | 0] = Q4 >>> 24, C3[A8 + 28 | 0] = E4, C3[A8 + 29 | 0] = E4 >>> 8, C3[A8 + 30 | 0] = E4 >>> 16, C3[A8 + 31 | 0] = E4 >>> 24, C3[A8 + 24 | 0] = c4, C3[A8 + 25 | 0] = c4 >>> 8, C3[A8 + 26 | 0] = c4 >>> 16, C3[A8 + 27 | 0] = c4 >>> 24, C3[A8 + 20 | 0] = o4, C3[A8 + 21 | 0] = o4 >>> 8, C3[A8 + 22 | 0] = o4 >>> 16, C3[A8 + 23 | 0] = o4 >>> 24, C3[A8 + 16 | 0] = I7, C3[A8 + 17 | 0] = I7 >>> 8, C3[A8 + 18 | 0] = I7 >>> 16, C3[A8 + 19 | 0] = I7 >>> 24, C3[A8 + 12 | 0] = B4, C3[A8 + 13 | 0] = B4 >>> 8, C3[A8 + 14 | 0] = B4 >>> 16, C3[A8 + 15 | 0] = B4 >>> 24, C3[A8 + 8 | 0] = a4, C3[A8 + 9 | 0] = a4 >>> 8, C3[A8 + 10 | 0] = a4 >>> 16, C3[A8 + 11 | 0] = a4 >>> 24, C3[A8 + 4 | 0] = y4, C3[A8 + 5 | 0] = y4 >>> 8, C3[A8 + 6 | 0] = y4 >>> 16, C3[A8 + 7 | 0] = y4 >>> 24, 0;
                    }
                    function IA(A8, I7) {
                      var g6, B4, Q4 = 0, i4 = 0, o4 = 0, c4 = 0;
                      r3 = g6 = r3 - 288 | 0, i4 = 40 + ((Q4 = E3[A8 + 32 >> 2] >>> 3 & 63) + A8 | 0) | 0, Q4 >>> 0 >= 56 ? (TA(i4, 35040, 64 - Q4 | 0), p3(A8, A8 + 40 | 0, g6, g6 + 256 | 0), E3[A8 + 88 >> 2] = 0, E3[A8 + 92 >> 2] = 0, E3[A8 + 80 >> 2] = 0, E3[A8 + 84 >> 2] = 0, E3[A8 + 72 >> 2] = 0, E3[A8 + 76 >> 2] = 0, E3[(Q4 = A8 - -64 | 0) >> 2] = 0, E3[Q4 + 4 >> 2] = 0, E3[A8 + 56 >> 2] = 0, E3[A8 + 60 >> 2] = 0, E3[A8 + 48 >> 2] = 0, E3[A8 + 52 >> 2] = 0, E3[A8 + 40 >> 2] = 0, E3[A8 + 44 >> 2] = 0) : TA(i4, 35040, 56 - Q4 | 0), o4 = (Q4 = 16711680 & (i4 = E3[A8 + 32 >> 2])) >>> 8 | 0, c4 = Q4 << 24, B4 = (Q4 = -16777216 & i4) >>> 24 | 0, Q4 = (c4 |= Q4 << 8) | -16777216 & ((255 & (Q4 = E3[A8 + 36 >> 2])) << 24 | i4 >>> 8) | 16711680 & ((16777215 & Q4) << 8 | i4 >>> 24) | Q4 >>> 8 & 65280 | Q4 >>> 24, C3[A8 + 96 | 0] = Q4, C3[A8 + 97 | 0] = Q4 >>> 8, C3[A8 + 98 | 0] = Q4 >>> 16, C3[A8 + 99 | 0] = Q4 >>> 24, Q4 = o4 | B4 | i4 << 24 | (65280 & i4) << 8, Q4 |= o4 = 0, C3[A8 + 100 | 0] = Q4, C3[A8 + 101 | 0] = Q4 >>> 8, C3[A8 + 102 | 0] = Q4 >>> 16, C3[A8 + 103 | 0] = Q4 >>> 24, p3(A8, A8 + 40 | 0, g6, g6 + 256 | 0), Q4 = (Q4 = E3[A8 >> 2]) << 24 | (65280 & Q4) << 8 | Q4 >>> 8 & 65280 | Q4 >>> 24, C3[0 | I7] = Q4, C3[I7 + 1 | 0] = Q4 >>> 8, C3[I7 + 2 | 0] = Q4 >>> 16, C3[I7 + 3 | 0] = Q4 >>> 24, Q4 = (Q4 = E3[A8 + 4 >> 2]) << 24 | (65280 & Q4) << 8 | Q4 >>> 8 & 65280 | Q4 >>> 24, C3[I7 + 4 | 0] = Q4, C3[I7 + 5 | 0] = Q4 >>> 8, C3[I7 + 6 | 0] = Q4 >>> 16, C3[I7 + 7 | 0] = Q4 >>> 24, Q4 = (Q4 = E3[A8 + 8 >> 2]) << 24 | (65280 & Q4) << 8 | Q4 >>> 8 & 65280 | Q4 >>> 24, C3[I7 + 8 | 0] = Q4, C3[I7 + 9 | 0] = Q4 >>> 8, C3[I7 + 10 | 0] = Q4 >>> 16, C3[I7 + 11 | 0] = Q4 >>> 24, Q4 = (Q4 = E3[A8 + 12 >> 2]) << 24 | (65280 & Q4) << 8 | Q4 >>> 8 & 65280 | Q4 >>> 24, C3[I7 + 12 | 0] = Q4, C3[I7 + 13 | 0] = Q4 >>> 8, C3[I7 + 14 | 0] = Q4 >>> 16, C3[I7 + 15 | 0] = Q4 >>> 24, Q4 = (Q4 = E3[A8 + 16 >> 2]) << 24 | (65280 & Q4) << 8 | Q4 >>> 8 & 65280 | Q4 >>> 24, C3[I7 + 16 | 0] = Q4, C3[I7 + 17 | 0] = Q4 >>> 8, C3[I7 + 18 | 0] = Q4 >>> 16, C3[I7 + 19 | 0] = Q4 >>> 24, Q4 = (Q4 = E3[A8 + 20 >> 2]) << 24 | (65280 & Q4) << 8 | Q4 >>> 8 & 65280 | Q4 >>> 24, C3[I7 + 20 | 0] = Q4, C3[I7 + 21 | 0] = Q4 >>> 8, C3[I7 + 22 | 0] = Q4 >>> 16, C3[I7 + 23 | 0] = Q4 >>> 24, Q4 = (Q4 = E3[A8 + 24 >> 2]) << 24 | (65280 & Q4) << 8 | Q4 >>> 8 & 65280 | Q4 >>> 24, C3[I7 + 24 | 0] = Q4, C3[I7 + 25 | 0] = Q4 >>> 8, C3[I7 + 26 | 0] = Q4 >>> 16, C3[I7 + 27 | 0] = Q4 >>> 24, Q4 = (Q4 = E3[A8 + 28 >> 2]) << 24 | (65280 & Q4) << 8 | Q4 >>> 8 & 65280 | Q4 >>> 24, C3[I7 + 28 | 0] = Q4, C3[I7 + 29 | 0] = Q4 >>> 8, C3[I7 + 30 | 0] = Q4 >>> 16, C3[I7 + 31 | 0] = Q4 >>> 24, MI(g6, 288), MI(A8, 104), r3 = g6 + 288 | 0;
                    }
                    function gA(A8, I7, g6) {
                      var B4, Q4 = 0, o4 = 0, c4 = 0, D4 = 0, a4 = 0, y4 = 0, f4 = 0, e4 = 0;
                      if (r3 = B4 = r3 - 96 | 0, g6 >>> 0 >= 65 && (RA(A8), BA(A8, I7, g6), IA(A8, B4), g6 = 32, I7 = B4), RA(A8), E3[B4 + 88 >> 2] = 909522486, E3[B4 + 92 >> 2] = 909522486, E3[B4 + 80 >> 2] = 909522486, E3[B4 + 84 >> 2] = 909522486, E3[B4 + 72 >> 2] = 909522486, E3[B4 + 76 >> 2] = 909522486, E3[(c4 = f4 = B4 - -64 | 0) >> 2] = 909522486, E3[c4 + 4 >> 2] = 909522486, E3[B4 + 56 >> 2] = 909522486, E3[B4 + 60 >> 2] = 909522486, E3[B4 + 48 >> 2] = 909522486, E3[B4 + 52 >> 2] = 909522486, E3[B4 + 40 >> 2] = 909522486, E3[B4 + 44 >> 2] = 909522486, E3[B4 + 32 >> 2] = 909522486, E3[B4 + 36 >> 2] = 909522486, g6) {
                        if (g6 >>> 0 >= 4) for (D4 = 124 & g6; C3[0 | (o4 = (c4 = B4 + 32 | 0) + Q4 | 0)] = i3[0 | o4] ^ i3[I7 + Q4 | 0], C3[0 | (e4 = (o4 = 1 | Q4) + c4 | 0)] = i3[0 | e4] ^ i3[I7 + o4 | 0], C3[0 | (e4 = (o4 = 2 | Q4) + c4 | 0)] = i3[0 | e4] ^ i3[I7 + o4 | 0], C3[0 | (o4 = (o4 = c4) + (c4 = 3 | Q4) | 0)] = i3[0 | o4] ^ i3[I7 + c4 | 0], Q4 = Q4 + 4 | 0, (0 | D4) != (0 | (a4 = a4 + 4 | 0)); ) ;
                        if (a4 = 3 & g6) for (; C3[0 | (c4 = (B4 + 32 | 0) + Q4 | 0)] = i3[0 | c4] ^ i3[I7 + Q4 | 0], Q4 = Q4 + 1 | 0, (0 | a4) != (0 | (y4 = y4 + 1 | 0)); ) ;
                      }
                      if (BA(A8, B4 + 32 | 0, 64), RA(c4 = A8 + 104 | 0), E3[B4 + 88 >> 2] = 1549556828, E3[B4 + 92 >> 2] = 1549556828, E3[B4 + 80 >> 2] = 1549556828, E3[B4 + 84 >> 2] = 1549556828, E3[B4 + 72 >> 2] = 1549556828, E3[B4 + 76 >> 2] = 1549556828, E3[f4 >> 2] = 1549556828, E3[f4 + 4 >> 2] = 1549556828, E3[B4 + 56 >> 2] = 1549556828, E3[B4 + 60 >> 2] = 1549556828, E3[B4 + 48 >> 2] = 1549556828, E3[B4 + 52 >> 2] = 1549556828, E3[B4 + 40 >> 2] = 1549556828, E3[B4 + 44 >> 2] = 1549556828, E3[B4 + 32 >> 2] = 1549556828, E3[B4 + 36 >> 2] = 1549556828, g6) {
                        if (y4 = 0, Q4 = 0, g6 >>> 0 >= 4) for (f4 = 124 & g6, a4 = 0; C3[0 | (D4 = (A8 = B4 + 32 | 0) + Q4 | 0)] = i3[0 | D4] ^ i3[I7 + Q4 | 0], C3[0 | (o4 = (D4 = 1 | Q4) + A8 | 0)] = i3[0 | o4] ^ i3[I7 + D4 | 0], C3[0 | (o4 = (D4 = 2 | Q4) + A8 | 0)] = i3[0 | o4] ^ i3[I7 + D4 | 0], C3[0 | (D4 = (o4 = A8) + (A8 = 3 | Q4) | 0)] = i3[0 | D4] ^ i3[A8 + I7 | 0], Q4 = Q4 + 4 | 0, (0 | f4) != (0 | (a4 = a4 + 4 | 0)); ) ;
                        if (A8 = 3 & g6) for (; C3[0 | (g6 = (B4 + 32 | 0) + Q4 | 0)] = i3[0 | g6] ^ i3[I7 + Q4 | 0], Q4 = Q4 + 1 | 0, (0 | A8) != (0 | (y4 = y4 + 1 | 0)); ) ;
                      }
                      return BA(c4, A8 = B4 + 32 | 0, 64), MI(A8, 64), MI(B4, 32), r3 = B4 + 96 | 0, 0;
                    }
                    function CA(A8, I7, g6, C4, B4, i4, o4) {
                      var c4 = 0, D4 = 0, a4 = 0, y4 = 0, f4 = 0, e4 = 0, w4 = 0;
                      if (I7 - 65 >>> 0 < 4294967232 | o4 >>> 0 > 64) A8 = -1;
                      else {
                        e4 = c4 = r3, r3 = c4 = c4 - 512 & -64;
                        A: {
                          I: if (!(!(!(C4 | B4) | g6) | !A8 | ((D4 = 255 & I7) - 65 & 255) >>> 0 <= 191 | !(!(I7 = 255 & o4) || i4) | I7 >>> 0 >= 65)) {
                            if (I7) {
                              if (!i4) break I;
                              VA(c4 - -64 | 0, 0, 293), E3[c4 + 56 >> 2] = 327033209, E3[c4 + 60 >> 2] = 1541459225, E3[c4 + 48 >> 2] = -79577749, E3[c4 + 52 >> 2] = 528734635, E3[c4 + 40 >> 2] = 725511199, E3[c4 + 44 >> 2] = -1694144372, E3[c4 + 32 >> 2] = -1377402159, E3[c4 + 36 >> 2] = 1359893119, E3[c4 + 24 >> 2] = 1595750129, E3[c4 + 28 >> 2] = -1521486534, E3[c4 + 16 >> 2] = -23791573, E3[c4 + 20 >> 2] = 1013904242, E3[c4 + 8 >> 2] = -2067093701, E3[c4 + 12 >> 2] = -1150833019, E3[c4 >> 2] = -222443256 ^ (I7 << 8 | D4), E3[c4 + 4 >> 2] = I7 >>> 24 ^ 1779033703, VA((o4 = c4 + 384 | 0) + I7 | 0, 0, 128 - I7 | 0), TA(o4, i4, I7), TA(c4 + 96 | 0, o4, 128), E3[c4 + 352 >> 2] = 128, MI(o4, 128), I7 = 128;
                            } else VA(c4 - -64 | 0, 0, 293), E3[c4 + 56 >> 2] = 327033209, E3[c4 + 60 >> 2] = 1541459225, E3[c4 + 48 >> 2] = -79577749, E3[c4 + 52 >> 2] = 528734635, E3[c4 + 40 >> 2] = 725511199, E3[c4 + 44 >> 2] = -1694144372, E3[c4 + 32 >> 2] = -1377402159, E3[c4 + 36 >> 2] = 1359893119, E3[c4 + 24 >> 2] = 1595750129, E3[c4 + 28 >> 2] = -1521486534, E3[c4 + 16 >> 2] = -23791573, E3[c4 + 20 >> 2] = 1013904242, E3[c4 + 8 >> 2] = -2067093701, E3[c4 + 12 >> 2] = -1150833019, E3[c4 >> 2] = -222443256 ^ D4, E3[c4 + 4 >> 2] = 1779033703, I7 = 0;
                            g: if (C4 | B4) for (w4 = c4 + 224 | 0, a4 = c4 + 96 | 0; ; ) {
                              if (o4 = I7 + a4 | 0, !B4 & C4 >>> 0 <= (i4 = 256 - I7 | 0) >>> 0) {
                                TA(o4, g6, C4), E3[c4 + 352 >> 2] = C4 + E3[c4 + 352 >> 2];
                                break g;
                              }
                              if (TA(o4, g6, i4), E3[c4 + 352 >> 2] = i4 + E3[c4 + 352 >> 2], y4 = I7 = E3[c4 + 68 >> 2], I7 = (f4 = (o4 = E3[c4 + 64 >> 2]) + 128 | 0) >>> 0 < 128 ? I7 + 1 | 0 : I7, E3[c4 + 64 >> 2] = f4, E3[c4 + 68 >> 2] = I7, I7 = E3[c4 + 76 >> 2], I7 = (y4 = o4 = -1 == (0 | y4) & o4 >>> 0 > 4294967167) >>> 0 > (o4 = o4 + E3[c4 + 72 >> 2] | 0) >>> 0 ? I7 + 1 | 0 : I7, E3[c4 + 72 >> 2] = o4, E3[c4 + 76 >> 2] = I7, h3(c4, a4), TA(a4, w4, 128), I7 = E3[c4 + 352 >> 2] - 128 | 0, E3[c4 + 352 >> 2] = I7, g6 = g6 + i4 | 0, !((B4 = B4 - (C4 >>> 0 < i4 >>> 0) | 0) | (C4 = C4 - i4 | 0))) break;
                            }
                            m3(c4, A8, D4), r3 = e4;
                            break A;
                          }
                          iI(), Q3();
                        }
                        A8 = 0;
                      }
                      return A8;
                    }
                    function BA(A8, I7, g6) {
                      var B4, Q4 = 0, o4 = 0, c4 = 0, D4 = 0, a4 = 0, y4 = 0, f4 = 0, e4 = 0, w4 = 0, t4 = 0, h4 = 0;
                      if (r3 = B4 = r3 - 288 | 0, g6) if (Q4 = E3[A8 + 36 >> 2], y4 = (D4 = E3[A8 + 32 >> 2]) + (a4 = g6 << 3) | 0, E3[A8 + 32 >> 2] = y4, c4 = (g6 >>> 29 | 0) + Q4 | 0, E3[A8 + 36 >> 2] = a4 >>> 0 > y4 >>> 0 ? c4 + 1 | 0 : c4, a4 = A8 + 40 | 0, true & (c4 = 64 - (y4 = 63 & ((7 & Q4) << 29 | D4 >>> 3)) | 0) >>> 0 <= g6 >>> 0) {
                        if (Q4 = 0, D4 = 0, (63 ^ y4) >>> 0 >= 3) for (h4 = 124 & c4; C3[(Q4 + y4 | 0) + a4 | 0] = i3[I7 + Q4 | 0], C3[(y4 + (w4 = 1 | Q4) | 0) + a4 | 0] = i3[I7 + w4 | 0], C3[(y4 + (w4 = 2 | Q4) | 0) + a4 | 0] = i3[I7 + w4 | 0], C3[(y4 + (w4 = 3 | Q4) | 0) + a4 | 0] = i3[I7 + w4 | 0], D4 = (Q4 = Q4 + 4 | 0) >>> 0 < 4 ? D4 + 1 | 0 : D4, (o4 = (t4 = t4 + 4 | 0) >>> 0 < 4 ? o4 + 1 | 0 : o4) | (0 | t4) != (0 | h4); ) ;
                        if (o4 = 3 & c4) for (; C3[(Q4 + y4 | 0) + a4 | 0] = i3[I7 + Q4 | 0], D4 = (Q4 = Q4 + 1 | 0) ? D4 : D4 + 1 | 0, (f4 = (e4 = e4 + 1 | 0) ? f4 : f4 + 1 | 0) | (0 | o4) != (0 | e4); ) ;
                        if (p3(A8, a4, B4, f4 = B4 + 256 | 0), I7 = I7 + c4 | 0, !(o4 = 0 - ((g6 >>> 0 < c4 >>> 0) + 0 | 0) | 0) & (g6 = g6 - c4 | 0) >>> 0 > 63 | o4) for (; p3(A8, I7, B4, f4), I7 = I7 - -64 | 0, o4 = o4 - 1 | 0, !(o4 = (g6 = g6 + -64 | 0) >>> 0 < 4294967232 ? o4 + 1 | 0 : o4) & g6 >>> 0 > 63 | o4; ) ;
                        if (g6 | o4) {
                          if (A8 = 3 & g6, e4 = 0, f4 = 0, Q4 = 0, D4 = 0, !o4 & g6 >>> 0 >= 4 | o4) for (y4 = 60 & g6, g6 = 0, o4 = 0; C3[Q4 + a4 | 0] = i3[I7 + Q4 | 0], C3[(c4 = 1 | Q4) + a4 | 0] = i3[I7 + c4 | 0], C3[(c4 = 2 | Q4) + a4 | 0] = i3[I7 + c4 | 0], C3[(c4 = 3 | Q4) + a4 | 0] = i3[I7 + c4 | 0], D4 = (Q4 = Q4 + 4 | 0) >>> 0 < 4 ? D4 + 1 | 0 : D4, (o4 = (g6 = g6 + 4 | 0) >>> 0 < 4 ? o4 + 1 | 0 : o4) | (0 | g6) != (0 | y4); ) ;
                          if (A8) for (; C3[Q4 + a4 | 0] = i3[I7 + Q4 | 0], D4 = (Q4 = Q4 + 1 | 0) ? D4 : D4 + 1 | 0, (f4 = (e4 = e4 + 1 | 0) ? f4 : f4 + 1 | 0) | (0 | A8) != (0 | e4); ) ;
                        }
                        MI(B4, 288);
                      } else {
                        if (Q4 = 0, D4 = 0, g6 >>> 0 >= 4) for (A8 = -4 & g6; C3[(Q4 + y4 | 0) + a4 | 0] = i3[I7 + Q4 | 0], C3[(y4 + (c4 = 1 | Q4) | 0) + a4 | 0] = i3[I7 + c4 | 0], C3[(y4 + (c4 = 2 | Q4) | 0) + a4 | 0] = i3[I7 + c4 | 0], C3[(y4 + (c4 = 3 | Q4) | 0) + a4 | 0] = i3[I7 + c4 | 0], D4 = (Q4 = Q4 + 4 | 0) >>> 0 < 4 ? D4 + 1 | 0 : D4, (o4 = (t4 = t4 + 4 | 0) >>> 0 < 4 ? o4 + 1 | 0 : o4) | (0 | A8) != (0 | t4); ) ;
                        if (A8 = 3 & g6) for (; C3[(Q4 + y4 | 0) + a4 | 0] = i3[I7 + Q4 | 0], D4 = (Q4 = Q4 + 1 | 0) ? D4 : D4 + 1 | 0, (f4 = (e4 = e4 + 1 | 0) ? f4 : f4 + 1 | 0) | (0 | A8) != (0 | e4); ) ;
                      }
                      r3 = B4 + 288 | 0;
                    }
                    function QA(A8, I7, g6, B4) {
                      var Q4 = 0, o4 = 0, c4 = 0, D4 = 0, a4 = 0, y4 = 0, f4 = 0, e4 = 0, w4 = 0, r4 = 0, t4 = 0, h4 = 0;
                      A: {
                        if ((o4 = E3[A8 + 56 >> 2]) | (Q4 = E3[A8 + 60 >> 2])) {
                          if (e4 = D4 = 16 - o4 | 0, y4 = (D4 = (0 | (c4 = 0 - ((o4 >>> 0 > 16) + Q4 | 0) | 0)) == (0 | B4) & g6 >>> 0 > D4 >>> 0 | B4 >>> 0 > c4 >>> 0) ? e4 : g6, e4 = D4 = D4 ? c4 : B4, D4 | y4) {
                            if (D4 = A8 - -64 | 0, c4 = 0, o4 = 0, !e4 & y4 >>> 0 >= 4 | e4) for (f4 = -4 & y4; Q4 = c4 + E3[A8 + 56 >> 2] | 0, C3[Q4 + D4 | 0] = i3[I7 + c4 | 0], Q4 = (w4 = 1 | c4) + E3[A8 + 56 >> 2] | 0, C3[Q4 + D4 | 0] = i3[I7 + w4 | 0], Q4 = (w4 = 2 | c4) + E3[A8 + 56 >> 2] | 0, C3[Q4 + D4 | 0] = i3[I7 + w4 | 0], Q4 = (w4 = 3 | c4) + E3[A8 + 56 >> 2] | 0, C3[Q4 + D4 | 0] = i3[I7 + w4 | 0], Q4 = o4, o4 = (c4 = c4 + 4 | 0) >>> 0 < 4 ? Q4 + 1 | 0 : Q4, Q4 = t4, t4 = Q4 = (a4 = a4 + 4 | 0) >>> 0 < 4 ? Q4 + 1 | 0 : Q4, (0 | a4) != (0 | f4) | (0 | e4) != (0 | Q4); ) ;
                            if (t4 = Q4 = 0, Q4 | (a4 = 3 & y4)) for (; Q4 = c4 + E3[A8 + 56 >> 2] | 0, C3[Q4 + D4 | 0] = i3[I7 + c4 | 0], o4 = (c4 = c4 + 1 | 0) ? o4 : o4 + 1 | 0, Q4 = h4, h4 = Q4 = (r4 = r4 + 1 | 0) ? Q4 : Q4 + 1 | 0, (0 | a4) != (0 | r4) | (0 | t4) != (0 | Q4); ) ;
                            o4 = E3[A8 + 56 >> 2], Q4 = E3[A8 + 60 >> 2];
                          }
                          if (Q4 = Q4 + e4 | 0, Q4 = (o4 = o4 + y4 | 0) >>> 0 < y4 >>> 0 ? Q4 + 1 | 0 : Q4, E3[A8 + 56 >> 2] = o4, E3[A8 + 60 >> 2] = Q4, !Q4 & o4 >>> 0 < 16) break A;
                          z(A8, A8 - -64 | 0, 16, 0), E3[A8 + 56 >> 2] = 0, E3[A8 + 60 >> 2] = 0, g6 = (o4 = g6) - y4 | 0, B4 = B4 - ((o4 >>> 0 < y4 >>> 0) + e4 | 0) | 0, I7 = I7 + y4 | 0;
                        }
                        if (!B4 & g6 >>> 0 >= 16 | B4 && (z(A8, I7, o4 = -16 & g6, B4), g6 &= 15, B4 = 0, I7 = I7 + o4 | 0), g6 | B4) {
                          if (D4 = A8 - -64 | 0, r4 = 0, h4 = 0, c4 = 0, o4 = 0, !B4 & g6 >>> 0 >= 4 | B4) for (y4 = 12 & g6, e4 = 0, a4 = 0; Q4 = c4 + E3[A8 + 56 >> 2] | 0, C3[Q4 + D4 | 0] = i3[I7 + c4 | 0], Q4 = (f4 = 1 | c4) + E3[A8 + 56 >> 2] | 0, C3[Q4 + D4 | 0] = i3[I7 + f4 | 0], Q4 = (f4 = 2 | c4) + E3[A8 + 56 >> 2] | 0, C3[Q4 + D4 | 0] = i3[I7 + f4 | 0], Q4 = (f4 = 3 | c4) + E3[A8 + 56 >> 2] | 0, C3[Q4 + D4 | 0] = i3[I7 + f4 | 0], o4 = (c4 = c4 + 4 | 0) >>> 0 < 4 ? o4 + 1 | 0 : o4, Q4 = t4, t4 = Q4 = (a4 = a4 + 4 | 0) >>> 0 < 4 ? Q4 + 1 | 0 : Q4, (0 | y4) != (0 | a4) | (0 | e4) != (0 | Q4); ) ;
                          if (t4 = Q4 = 0, Q4 | (a4 = 3 & g6)) for (; Q4 = c4 + E3[A8 + 56 >> 2] | 0, C3[Q4 + D4 | 0] = i3[I7 + c4 | 0], o4 = (c4 = c4 + 1 | 0) ? o4 : o4 + 1 | 0, Q4 = h4, h4 = Q4 = (r4 = r4 + 1 | 0) ? Q4 : Q4 + 1 | 0, (0 | a4) != (0 | r4) | (0 | t4) != (0 | Q4); ) ;
                          o4 = B4 + E3[A8 + 60 >> 2] | 0, o4 = (I7 = g6 + E3[A8 + 56 >> 2] | 0) >>> 0 < g6 >>> 0 ? o4 + 1 | 0 : o4, E3[A8 + 56 >> 2] = I7, E3[A8 + 60 >> 2] = o4;
                        }
                      }
                    }
                    function EA(A8, I7, g6) {
                      var C4, B4 = 0, Q4 = 0, i4 = 0, o4 = 0, c4 = 0, D4 = 0, a4 = 0, y4 = 0, f4 = 0, e4 = 0, w4 = 0, r4 = 0, t4 = 0, h4 = 0, k4 = 0, n4 = 0, s4 = 0, F4 = 0, S4 = 0;
                      r4 = E3[I7 + 4 >> 2], B4 = E3[A8 + 4 >> 2], t4 = E3[I7 + 8 >> 2], Q4 = E3[A8 + 8 >> 2], h4 = E3[I7 + 12 >> 2], i4 = E3[A8 + 12 >> 2], k4 = E3[I7 + 16 >> 2], o4 = E3[A8 + 16 >> 2], n4 = E3[I7 + 20 >> 2], c4 = E3[A8 + 20 >> 2], e4 = E3[I7 + 24 >> 2], D4 = E3[A8 + 24 >> 2], s4 = E3[I7 + 28 >> 2], a4 = E3[A8 + 28 >> 2], F4 = E3[I7 + 32 >> 2], y4 = E3[A8 + 32 >> 2], S4 = E3[I7 + 36 >> 2], f4 = E3[A8 + 36 >> 2], g6 = 0 - g6 | 0, w4 = E3[A8 >> 2], E3[A8 >> 2] = g6 & (w4 ^ E3[I7 >> 2]) ^ w4, E3[A8 + 36 >> 2] = f4 ^ g6 & (f4 ^ S4), E3[A8 + 32 >> 2] = y4 ^ g6 & (y4 ^ F4), E3[A8 + 28 >> 2] = a4 ^ g6 & (a4 ^ s4), E3[A8 + 24 >> 2] = D4 ^ g6 & (D4 ^ e4), E3[A8 + 20 >> 2] = c4 ^ g6 & (c4 ^ n4), E3[A8 + 16 >> 2] = o4 ^ g6 & (o4 ^ k4), E3[A8 + 12 >> 2] = i4 ^ g6 & (i4 ^ h4), E3[A8 + 8 >> 2] = Q4 ^ g6 & (Q4 ^ t4), E3[A8 + 4 >> 2] = B4 ^ g6 & (B4 ^ r4), B4 = E3[A8 + 44 >> 2], r4 = E3[I7 + 44 >> 2], Q4 = E3[A8 + 48 >> 2], t4 = E3[I7 + 48 >> 2], i4 = E3[A8 + 52 >> 2], h4 = E3[I7 + 52 >> 2], o4 = E3[A8 + 56 >> 2], k4 = E3[I7 + 56 >> 2], c4 = E3[A8 + 60 >> 2], n4 = E3[I7 + 60 >> 2], D4 = E3[(e4 = A8 - -64 | 0) >> 2], s4 = E3[I7 - -64 >> 2], a4 = E3[A8 + 68 >> 2], F4 = E3[I7 + 68 >> 2], y4 = E3[A8 + 72 >> 2], S4 = E3[I7 + 72 >> 2], f4 = E3[A8 + 40 >> 2], w4 = E3[I7 + 40 >> 2], C4 = E3[A8 + 76 >> 2], E3[A8 + 76 >> 2] = C4 ^ g6 & (E3[I7 + 76 >> 2] ^ C4), E3[A8 + 72 >> 2] = y4 ^ g6 & (y4 ^ S4), E3[A8 + 68 >> 2] = a4 ^ g6 & (a4 ^ F4), E3[e4 >> 2] = D4 ^ g6 & (D4 ^ s4), E3[A8 + 60 >> 2] = c4 ^ g6 & (c4 ^ n4), E3[A8 + 56 >> 2] = o4 ^ g6 & (o4 ^ k4), E3[A8 + 52 >> 2] = i4 ^ g6 & (i4 ^ h4), E3[A8 + 48 >> 2] = Q4 ^ g6 & (Q4 ^ t4), E3[A8 + 44 >> 2] = B4 ^ g6 & (B4 ^ r4), E3[A8 + 40 >> 2] = f4 ^ g6 & (f4 ^ w4), B4 = E3[A8 + 84 >> 2], r4 = E3[I7 + 84 >> 2], Q4 = E3[A8 + 88 >> 2], t4 = E3[I7 + 88 >> 2], i4 = E3[A8 + 92 >> 2], h4 = E3[I7 + 92 >> 2], o4 = E3[A8 + 96 >> 2], k4 = E3[I7 + 96 >> 2], c4 = E3[A8 + 100 >> 2], n4 = E3[I7 + 100 >> 2], D4 = E3[A8 + 104 >> 2], e4 = E3[I7 + 104 >> 2], a4 = E3[A8 + 108 >> 2], s4 = E3[I7 + 108 >> 2], y4 = E3[A8 + 112 >> 2], F4 = E3[I7 + 112 >> 2], f4 = E3[A8 + 80 >> 2], S4 = E3[I7 + 80 >> 2], w4 = E3[I7 + 116 >> 2], I7 = E3[A8 + 116 >> 2], E3[A8 + 116 >> 2] = g6 & (w4 ^ I7) ^ I7, E3[A8 + 112 >> 2] = y4 ^ g6 & (y4 ^ F4), E3[A8 + 108 >> 2] = a4 ^ g6 & (a4 ^ s4), E3[A8 + 104 >> 2] = D4 ^ g6 & (D4 ^ e4), E3[A8 + 100 >> 2] = c4 ^ g6 & (c4 ^ n4), E3[A8 + 96 >> 2] = o4 ^ g6 & (o4 ^ k4), E3[A8 + 92 >> 2] = i4 ^ g6 & (i4 ^ h4), E3[A8 + 88 >> 2] = Q4 ^ g6 & (Q4 ^ t4), E3[A8 + 84 >> 2] = B4 ^ g6 & (B4 ^ r4), E3[A8 + 80 >> 2] = f4 ^ g6 & (f4 ^ S4);
                    }
                    function iA(A8, I7) {
                      var g6, C4, B4 = 0;
                      for (r3 = g6 = r3 - 192 | 0, U3(C4 = g6 + 144 | 0, I7), U3(B4 = g6 + 96 | 0, C4), U3(B4, B4), M3(B4, I7, B4), M3(C4, C4, B4), U3(I7 = g6 + 48 | 0, C4), M3(B4, B4, I7), U3(I7, B4), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), M3(B4, I7, B4), U3(I7, B4), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), M3(I7, I7, B4), U3(g6, I7), U3(g6, g6), U3(g6, g6), U3(g6, g6), U3(g6, g6), U3(g6, g6), U3(g6, g6), U3(g6, g6), U3(g6, g6), U3(g6, g6), U3(g6, g6), U3(g6, g6), U3(g6, g6), U3(g6, g6), U3(g6, g6), U3(g6, g6), U3(g6, g6), U3(g6, g6), U3(g6, g6), U3(g6, g6), M3(I7, g6, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), M3(B4, I7, B4), U3(I7, B4), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), M3(I7, I7, B4), U3(g6, I7), I7 = 1; U3(g6, g6), 100 != (0 | (I7 = I7 + 1 | 0)); ) ;
                      M3(I7 = g6 + 48 | 0, g6, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), U3(I7, I7), M3(B4 = g6 + 96 | 0, I7, B4), U3(B4, B4), U3(B4, B4), U3(B4, B4), U3(B4, B4), U3(B4, B4), M3(A8, B4, g6 + 144 | 0), r3 = g6 + 192 | 0;
                    }
                    function oA(A8, I7, g6) {
                      var C4, B4, Q4, i4, o4, D4, a4, y4, f4 = 0;
                      r3 = C4 = r3 - 128 | 0, E3[A8 >> 2] = 1, E3[A8 + 4 >> 2] = 0, E3[A8 + 8 >> 2] = 0, E3[A8 + 12 >> 2] = 0, E3[A8 + 16 >> 2] = 0, E3[A8 + 20 >> 2] = 0, E3[A8 + 24 >> 2] = 0, E3[A8 + 28 >> 2] = 0, E3[A8 + 32 >> 2] = 0, E3[A8 + 36 >> 2] = 0, E3[A8 + 40 >> 2] = 1, VA(A8 + 44 | 0, 0, 76), EA(A8, I7 = c3(I7, 960) + 2688 | 0, (255 & (1 ^ (f4 = g6 - ((g6 >> 31 & g6) << 1) | 0))) - 1 >>> 31 | 0), EA(A8, I7 + 120 | 0, (255 & (2 ^ f4)) - 1 >>> 31 | 0), EA(A8, I7 + 240 | 0, (255 & (3 ^ f4)) - 1 >>> 31 | 0), EA(A8, I7 + 360 | 0, (255 & (4 ^ f4)) - 1 >>> 31 | 0), EA(A8, I7 + 480 | 0, (255 & (5 ^ f4)) - 1 >>> 31 | 0), EA(A8, I7 + 600 | 0, (255 & (6 ^ f4)) - 1 >>> 31 | 0), EA(A8, I7 + 720 | 0, (255 & (7 ^ f4)) - 1 >>> 31 | 0), EA(A8, I7 + 840 | 0, (255 & (8 ^ f4)) - 1 >>> 31 | 0), I7 = E3[A8 + 76 >> 2], E3[C4 + 40 >> 2] = E3[A8 + 72 >> 2], E3[C4 + 44 >> 2] = I7, f4 = E3[4 + (I7 = A8 - -64 | 0) >> 2], E3[C4 + 32 >> 2] = E3[I7 >> 2], E3[C4 + 36 >> 2] = f4, I7 = E3[A8 + 60 >> 2], E3[C4 + 24 >> 2] = E3[A8 + 56 >> 2], E3[C4 + 28 >> 2] = I7, I7 = E3[A8 + 52 >> 2], E3[C4 + 16 >> 2] = E3[A8 + 48 >> 2], E3[C4 + 20 >> 2] = I7, I7 = E3[A8 + 44 >> 2], E3[C4 + 8 >> 2] = E3[A8 + 40 >> 2], E3[C4 + 12 >> 2] = I7, I7 = E3[A8 + 12 >> 2], E3[C4 + 56 >> 2] = E3[A8 + 8 >> 2], E3[C4 + 60 >> 2] = I7, f4 = E3[A8 + 20 >> 2], E3[(I7 = C4 - -64 | 0) >> 2] = E3[A8 + 16 >> 2], E3[I7 + 4 >> 2] = f4, I7 = E3[A8 + 28 >> 2], E3[C4 + 72 >> 2] = E3[A8 + 24 >> 2], E3[C4 + 76 >> 2] = I7, I7 = E3[A8 + 36 >> 2], E3[C4 + 80 >> 2] = E3[A8 + 32 >> 2], E3[C4 + 84 >> 2] = I7, I7 = E3[A8 + 4 >> 2], E3[C4 + 48 >> 2] = E3[A8 >> 2], E3[C4 + 52 >> 2] = I7, I7 = E3[A8 + 84 >> 2], f4 = E3[A8 + 88 >> 2], B4 = E3[A8 + 92 >> 2], Q4 = E3[A8 + 96 >> 2], i4 = E3[A8 + 100 >> 2], o4 = E3[A8 + 104 >> 2], D4 = E3[A8 + 108 >> 2], a4 = E3[A8 + 112 >> 2], y4 = E3[A8 + 80 >> 2], E3[C4 + 124 >> 2] = 0 - E3[A8 + 116 >> 2], E3[C4 + 120 >> 2] = 0 - a4, E3[C4 + 116 >> 2] = 0 - D4, E3[C4 + 112 >> 2] = 0 - o4, E3[C4 + 108 >> 2] = 0 - i4, E3[C4 + 104 >> 2] = 0 - Q4, E3[C4 + 100 >> 2] = 0 - B4, E3[C4 + 96 >> 2] = 0 - f4, E3[C4 + 92 >> 2] = 0 - I7, E3[C4 + 88 >> 2] = 0 - y4, EA(A8, C4 + 8 | 0, (128 & g6) >>> 7 | 0), r3 = C4 + 128 | 0;
                    }
                    function cA(A8, I7, g6, B4) {
                      var Q4 = 0, E4 = 0, o4 = 0, c4 = 0, D4 = 0, a4 = 0, y4 = 0;
                      if (g6 | B4) A: for (y4 = A8 + 224 | 0, D4 = A8 + 96 | 0, E4 = i3[A8 + 352 | 0] | i3[A8 + 353 | 0] << 8 | i3[A8 + 354 | 0] << 16 | i3[A8 + 355 | 0] << 24; ; ) {
                        if (Q4 = E4 + D4 | 0, !B4 & g6 >>> 0 <= (o4 = 256 - E4 | 0) >>> 0) {
                          TA(Q4, I7, g6), I7 = g6 + (i3[A8 + 352 | 0] | i3[A8 + 353 | 0] << 8 | i3[A8 + 354 | 0] << 16 | i3[A8 + 355 | 0] << 24) | 0, C3[A8 + 352 | 0] = I7, C3[A8 + 353 | 0] = I7 >>> 8, C3[A8 + 354 | 0] = I7 >>> 16, C3[A8 + 355 | 0] = I7 >>> 24;
                          break A;
                        }
                        if (TA(Q4, I7, o4), Q4 = (i3[A8 + 352 | 0] | i3[A8 + 353 | 0] << 8 | i3[A8 + 354 | 0] << 16 | i3[A8 + 355 | 0] << 24) + o4 | 0, C3[A8 + 352 | 0] = Q4, C3[A8 + 353 | 0] = Q4 >>> 8, C3[A8 + 354 | 0] = Q4 >>> 16, C3[A8 + 355 | 0] = Q4 >>> 24, a4 = E4 = i3[A8 + 68 | 0] | i3[A8 + 69 | 0] << 8 | i3[A8 + 70 | 0] << 16 | i3[A8 + 71 | 0] << 24, E4 = (c4 = 128 + (Q4 = i3[A8 + 64 | 0] | i3[A8 + 65 | 0] << 8 | i3[A8 + 66 | 0] << 16 | i3[A8 + 67 | 0] << 24) | 0) >>> 0 < 128 ? E4 + 1 | 0 : E4, C3[A8 + 64 | 0] = c4, C3[A8 + 65 | 0] = c4 >>> 8, C3[A8 + 66 | 0] = c4 >>> 16, C3[A8 + 67 | 0] = c4 >>> 24, C3[A8 + 68 | 0] = E4, C3[A8 + 69 | 0] = E4 >>> 8, C3[A8 + 70 | 0] = E4 >>> 16, C3[A8 + 71 | 0] = E4 >>> 24, E4 = i3[A8 + 76 | 0] | i3[A8 + 77 | 0] << 8 | i3[A8 + 78 | 0] << 16 | i3[A8 + 79 | 0] << 24, E4 = (a4 = Q4 = -1 == (0 | a4) & Q4 >>> 0 > 4294967167) >>> 0 > (Q4 = Q4 + (i3[A8 + 72 | 0] | i3[A8 + 73 | 0] << 8 | i3[A8 + 74 | 0] << 16 | i3[A8 + 75 | 0] << 24) | 0) >>> 0 ? E4 + 1 | 0 : E4, C3[A8 + 72 | 0] = Q4, C3[A8 + 73 | 0] = Q4 >>> 8, C3[A8 + 74 | 0] = Q4 >>> 16, C3[A8 + 75 | 0] = Q4 >>> 24, C3[A8 + 76 | 0] = E4, C3[A8 + 77 | 0] = E4 >>> 8, C3[A8 + 78 | 0] = E4 >>> 16, C3[A8 + 79 | 0] = E4 >>> 24, h3(A8, D4), TA(D4, y4, 128), Q4 = E4 = (i3[A8 + 352 | 0] | i3[A8 + 353 | 0] << 8 | i3[A8 + 354 | 0] << 16 | i3[A8 + 355 | 0] << 24) - 128 | 0, C3[A8 + 352 | 0] = Q4, C3[A8 + 353 | 0] = Q4 >>> 8, C3[A8 + 354 | 0] = Q4 >>> 16, C3[A8 + 355 | 0] = Q4 >>> 24, I7 = I7 + o4 | 0, !((B4 = B4 - (g6 >>> 0 < o4 >>> 0) | 0) | (g6 = g6 - o4 | 0))) break;
                      }
                      return 0;
                    }
                    function DA(A8, I7) {
                      var g6, C4 = 0, B4 = 0, Q4 = 0, i4 = 0, o4 = 0, c4 = 0, D4 = 0, a4 = 0, y4 = 0, f4 = 0, e4 = 0, w4 = 0, r4 = 0, t4 = 0, h4 = 0, k4 = 0, n4 = 0, s4 = 0;
                      C4 = E3[I7 + 4 >> 2], Q4 = E3[I7 + 44 >> 2], i4 = E3[I7 + 8 >> 2], o4 = E3[I7 + 48 >> 2], c4 = E3[I7 + 12 >> 2], D4 = E3[I7 + 52 >> 2], a4 = E3[I7 + 16 >> 2], y4 = E3[I7 + 56 >> 2], f4 = E3[I7 + 20 >> 2], e4 = E3[I7 + 60 >> 2], w4 = E3[I7 + 24 >> 2], r4 = E3[(B4 = I7 - -64 | 0) >> 2], t4 = E3[I7 + 28 >> 2], h4 = E3[I7 + 68 >> 2], k4 = E3[I7 + 32 >> 2], n4 = E3[I7 + 72 >> 2], s4 = E3[I7 + 36 >> 2], g6 = E3[I7 + 76 >> 2], E3[A8 >> 2] = E3[I7 >> 2] + E3[I7 + 40 >> 2], E3[A8 + 36 >> 2] = s4 + g6, E3[A8 + 32 >> 2] = k4 + n4, E3[A8 + 28 >> 2] = t4 + h4, E3[A8 + 24 >> 2] = w4 + r4, E3[A8 + 20 >> 2] = f4 + e4, E3[A8 + 16 >> 2] = a4 + y4, E3[A8 + 12 >> 2] = c4 + D4, E3[A8 + 8 >> 2] = i4 + o4, E3[A8 + 4 >> 2] = C4 + Q4, C4 = E3[I7 + 4 >> 2], Q4 = E3[I7 + 44 >> 2], i4 = E3[I7 + 8 >> 2], o4 = E3[I7 + 48 >> 2], c4 = E3[I7 + 12 >> 2], D4 = E3[I7 + 52 >> 2], a4 = E3[I7 + 16 >> 2], y4 = E3[I7 + 56 >> 2], f4 = E3[I7 + 20 >> 2], e4 = E3[I7 + 60 >> 2], w4 = E3[I7 + 24 >> 2], B4 = E3[B4 >> 2], r4 = E3[I7 + 28 >> 2], t4 = E3[I7 + 68 >> 2], h4 = E3[I7 + 32 >> 2], k4 = E3[I7 + 72 >> 2], n4 = E3[I7 >> 2], s4 = E3[I7 + 40 >> 2], E3[A8 + 76 >> 2] = E3[I7 + 76 >> 2] - E3[I7 + 36 >> 2], E3[A8 + 72 >> 2] = k4 - h4, E3[A8 + 68 >> 2] = t4 - r4, E3[A8 - -64 >> 2] = B4 - w4, E3[A8 + 60 >> 2] = e4 - f4, E3[A8 + 56 >> 2] = y4 - a4, E3[A8 + 52 >> 2] = D4 - c4, E3[A8 + 48 >> 2] = o4 - i4, E3[A8 + 44 >> 2] = Q4 - C4, E3[A8 + 40 >> 2] = s4 - n4, C4 = E3[I7 + 84 >> 2], E3[A8 + 80 >> 2] = E3[I7 + 80 >> 2], E3[A8 + 84 >> 2] = C4, C4 = E3[I7 + 92 >> 2], E3[A8 + 88 >> 2] = E3[I7 + 88 >> 2], E3[A8 + 92 >> 2] = C4, C4 = E3[I7 + 100 >> 2], E3[A8 + 96 >> 2] = E3[I7 + 96 >> 2], E3[A8 + 100 >> 2] = C4, C4 = E3[I7 + 108 >> 2], E3[A8 + 104 >> 2] = E3[I7 + 104 >> 2], E3[A8 + 108 >> 2] = C4, C4 = E3[I7 + 116 >> 2], E3[A8 + 112 >> 2] = E3[I7 + 112 >> 2], E3[A8 + 116 >> 2] = C4, M3(A8 + 120 | 0, I7 + 120 | 0, 1424);
                    }
                    function aA(A8, I7, g6) {
                      var C4, B4, Q4, i4, o4, c4, D4, a4, y4, f4, e4, w4, t4 = 0, h4 = 0, k4 = 0, n4 = 0, s4 = 0;
                      t4 = E3[I7 + 12 >> 2], h4 = E3[I7 + 8 >> 2], k4 = E3[I7 + 4 >> 2], C4 = r3 + -64 & -64, I7 = E3[I7 >> 2], E3[C4 >> 2] = E3[35248 + ((255 & I7) << 2) >> 2], E3[C4 + 4 >> 2] = E3[35248 + (k4 >>> 6 & 1020) >> 2], E3[C4 + 8 >> 2] = E3[35248 + (h4 >>> 14 & 1020) >> 2], E3[C4 + 12 >> 2] = E3[35248 + (t4 >>> 22 & 1020) >> 2], E3[C4 + 16 >> 2] = E3[35248 + ((255 & k4) << 2) >> 2], E3[C4 + 20 >> 2] = E3[35248 + (h4 >>> 6 & 1020) >> 2], E3[C4 + 24 >> 2] = E3[35248 + (t4 >>> 14 & 1020) >> 2], E3[C4 + 28 >> 2] = E3[35248 + (I7 >>> 22 & 1020) >> 2], E3[C4 + 32 >> 2] = E3[35248 + ((255 & h4) << 2) >> 2], E3[C4 + 36 >> 2] = E3[35248 + (t4 >>> 6 & 1020) >> 2], E3[C4 + 40 >> 2] = E3[35248 + (I7 >>> 14 & 1020) >> 2], E3[C4 + 44 >> 2] = E3[35248 + (k4 >>> 22 & 1020) >> 2], E3[C4 + 48 >> 2] = E3[35248 + ((255 & t4) << 2) >> 2], E3[C4 + 52 >> 2] = E3[35248 + (I7 >>> 6 & 1020) >> 2], E3[C4 + 56 >> 2] = E3[35248 + (k4 >>> 14 & 1020) >> 2], E3[C4 + 60 >> 2] = E3[35248 + (h4 >>> 22 & 1020) >> 2], I7 = E3[C4 + 12 >> 2], t4 = E3[C4 >> 2], h4 = E3[C4 + 4 >> 2], k4 = E3[C4 + 8 >> 2], B4 = E3[C4 + 28 >> 2], Q4 = E3[C4 + 16 >> 2], i4 = E3[C4 + 20 >> 2], o4 = E3[C4 + 24 >> 2], c4 = E3[C4 + 44 >> 2], D4 = E3[C4 + 32 >> 2], a4 = E3[C4 + 36 >> 2], y4 = E3[C4 + 40 >> 2], f4 = E3[g6 >> 2], e4 = E3[g6 + 4 >> 2], w4 = E3[g6 + 8 >> 2], n4 = A8, s4 = E3[g6 + 12 >> 2] ^ E3[C4 + 48 >> 2] ^ gI(E3[C4 + 52 >> 2], 8) ^ gI(E3[C4 + 56 >> 2], 16) ^ gI(E3[C4 + 60 >> 2], 24), E3[n4 + 12 >> 2] = s4, n4 = A8, s4 = gI(a4, 8) ^ D4 ^ gI(y4, 16) ^ gI(c4, 24) ^ w4, E3[n4 + 8 >> 2] = s4, n4 = A8, s4 = gI(i4, 8) ^ Q4 ^ gI(o4, 16) ^ gI(B4, 24) ^ e4, E3[n4 + 4 >> 2] = s4, n4 = A8, s4 = gI(h4, 8) ^ t4 ^ gI(k4, 16) ^ gI(I7, 24) ^ f4, E3[n4 >> 2] = s4;
                    }
                    function yA(A8, I7) {
                      var g6, B4, Q4, i4, o4, D4 = 0, a4 = 0, y4 = 0, f4 = 0, e4 = 0, w4 = 0, r4 = 0, t4 = 0, h4 = 0, k4 = 0;
                      (D4 = E3[A8 + 56 >> 2]) | (a4 = E3[A8 + 60 >> 2]) && (C3[(f4 = A8 - -64 | 0) + D4 | 0] = 1, !((k4 = D4 + 1 | 0) ? a4 : a4 + 1 | 0) & k4 >>> 0 <= 15 && VA(65 + (A8 + D4 | 0) | 0, 0, 15 - D4 | 0), C3[A8 + 80 | 0] = 1, z(A8, f4, 16, 0)), k4 = E3[A8 + 52 >> 2], t4 = E3[A8 + 48 >> 2], f4 = E3[A8 + 44 >> 2], D4 = E3[A8 + 24 >> 2], e4 = E3[A8 + 28 >> 2] + (D4 >>> 26 | 0) | 0, y4 = E3[A8 + 32 >> 2] + (e4 >>> 26 | 0) | 0, g6 = E3[A8 + 36 >> 2] + (y4 >>> 26 | 0) | 0, a4 = (r4 = (D4 = (D4 = (67108863 & D4) + ((w4 = E3[A8 + 20 >> 2] + c3(g6 >>> 26 | 0, 5) | 0) >>> 26 | 0) | 0) & (e4 = (y4 = (o4 = (67108863 & g6) + ((i4 = (B4 = 67108863 & y4) + ((Q4 = (h4 = 67108863 & e4) + ((w4 = D4 + ((a4 = 5 + (r4 = 67108863 & w4) | 0) >>> 26 | 0) | 0) >>> 26 | 0) | 0) >>> 26 | 0) | 0) >>> 26 | 0) | 0) - 67108864 | 0) >> 31) | w4 & (y4 = 67108863 & (w4 = (y4 >>> 31 | 0) - 1 | 0))) << 26 | a4 & y4 | e4 & r4) + E3[A8 + 40 >> 2] | 0, C3[0 | I7] = a4, C3[I7 + 1 | 0] = a4 >>> 8, C3[I7 + 2 | 0] = a4 >>> 16, C3[I7 + 3 | 0] = a4 >>> 24, r4 = a4 >>> 0 < r4 >>> 0, a4 = 0, a4 = (D4 = (h4 = e4 & h4 | y4 & Q4) << 20 | D4 >>> 6) >>> 0 > (D4 = D4 + f4 | 0) >>> 0 ? 1 : a4, a4 = (f4 = D4) >>> 0 > (D4 = D4 + r4 | 0) >>> 0 ? a4 + 1 | 0 : a4, C3[I7 + 4 | 0] = D4, C3[I7 + 5 | 0] = D4 >>> 8, C3[I7 + 6 | 0] = D4 >>> 16, C3[I7 + 7 | 0] = D4 >>> 24, D4 = 0, f4 = (f4 = (y4 = e4 & B4 | y4 & i4) << 14 | h4 >>> 12) >>> 0 > (t4 = f4 + t4 | 0) >>> 0 ? 1 : D4, D4 = t4, t4 = a4, D4 = D4 + a4 | 0, a4 = f4, a4 = D4 >>> 0 < t4 >>> 0 ? a4 + 1 | 0 : a4, C3[I7 + 8 | 0] = D4, C3[I7 + 9 | 0] = D4 >>> 8, C3[I7 + 10 | 0] = D4 >>> 16, C3[I7 + 11 | 0] = D4 >>> 24, a4 = (D4 = (D4 = (w4 & o4 | e4 & g6) << 8 | y4 >>> 18) + k4 | 0) + a4 | 0, C3[I7 + 12 | 0] = a4, C3[I7 + 13 | 0] = a4 >>> 8, C3[I7 + 14 | 0] = a4 >>> 16, C3[I7 + 15 | 0] = a4 >>> 24, MI(A8, 88);
                    }
                    function fA(A8, I7, g6) {
                      var B4, Q4 = 0;
                      return r3 = B4 = r3 - 16 | 0, C3[B4 + 15 | 0] = 0, Q4 = -1, 0 | vI[E3[8806]](A8, I7, g6) || (C3[B4 + 15 | 0] = i3[0 | A8] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 1 | 0] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 2 | 0] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 3 | 0] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 4 | 0] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 5 | 0] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 6 | 0] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 7 | 0] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 8 | 0] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 9 | 0] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 10 | 0] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 11 | 0] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 12 | 0] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 13 | 0] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 14 | 0] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 15 | 0] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 16 | 0] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 17 | 0] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 18 | 0] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 19 | 0] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 20 | 0] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 21 | 0] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 22 | 0] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 23 | 0] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 24 | 0] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 25 | 0] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 26 | 0] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 27 | 0] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 28 | 0] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 29 | 0] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 30 | 0] | i3[B4 + 15 | 0], C3[B4 + 15 | 0] = i3[A8 + 31 | 0] | i3[B4 + 15 | 0], Q4 = (i3[B4 + 15 | 0] << 23) - 8388608 >> 31), r3 = B4 + 16 | 0, Q4;
                    }
                    function eA(A8, I7) {
                      var g6, B4, Q4, i4, o4, D4, a4, y4 = 0, f4 = 0;
                      B4 = E3[I7 + 32 >> 2], Q4 = E3[I7 + 28 >> 2], i4 = E3[I7 + 24 >> 2], o4 = E3[I7 + 20 >> 2], D4 = E3[I7 + 16 >> 2], a4 = E3[I7 + 12 >> 2], y4 = E3[I7 + 4 >> 2], f4 = E3[I7 >> 2], g6 = E3[I7 + 36 >> 2], I7 = E3[I7 + 8 >> 2], f4 = c3((B4 + (Q4 + (i4 + (o4 + (D4 + (a4 + ((y4 + (f4 + (c3(g6, 19) + 16777216 >>> 25 | 0) >> 26) >> 25) + I7 >> 26) >> 25) >> 26) >> 25) >> 26) >> 25) >> 26) + g6 >> 25, 19) + f4 | 0, C3[0 | A8] = f4, C3[A8 + 2 | 0] = f4 >>> 16, C3[A8 + 1 | 0] = f4 >>> 8, y4 = y4 + (f4 >> 26) | 0, C3[A8 + 5 | 0] = y4 >>> 14, C3[A8 + 4 | 0] = y4 >>> 6, C3[A8 + 3 | 0] = f4 >>> 24 & 3 | y4 << 2, I7 = I7 + (y4 >> 25) | 0, C3[A8 + 8 | 0] = I7 >>> 13, C3[A8 + 7 | 0] = I7 >>> 5, C3[A8 + 6 | 0] = I7 << 3 | (29360128 & y4) >>> 22, f4 = (I7 >> 26) + a4 | 0, C3[A8 + 11 | 0] = f4 >>> 11, C3[A8 + 10 | 0] = f4 >>> 3, C3[A8 + 9 | 0] = f4 << 5 | (65011712 & I7) >>> 21, y4 = (f4 >> 25) + D4 | 0, C3[A8 + 15 | 0] = y4 >>> 18, C3[A8 + 14 | 0] = y4 >>> 10, C3[A8 + 13 | 0] = y4 >>> 2, I7 = (y4 >> 26) + o4 | 0, C3[A8 + 16 | 0] = I7, C3[A8 + 12 | 0] = y4 << 6 | (33030144 & f4) >>> 19, C3[A8 + 18 | 0] = I7 >>> 16, C3[A8 + 17 | 0] = I7 >>> 8, y4 = (I7 >> 25) + i4 | 0, C3[A8 + 21 | 0] = y4 >>> 15, C3[A8 + 20 | 0] = y4 >>> 7, C3[A8 + 19 | 0] = I7 >>> 24 & 1 | y4 << 1, I7 = (y4 >> 26) + Q4 | 0, C3[A8 + 24 | 0] = I7 >>> 13, C3[A8 + 23 | 0] = I7 >>> 5, C3[A8 + 22 | 0] = I7 << 3 | (58720256 & y4) >>> 23, y4 = (I7 >> 25) + B4 | 0, C3[A8 + 27 | 0] = y4 >>> 12, C3[A8 + 26 | 0] = y4 >>> 4, C3[A8 + 25 | 0] = y4 << 4 | (31457280 & I7) >>> 21, I7 = g6 + (y4 >> 26) | 0, C3[A8 + 30 | 0] = I7 >>> 10, C3[A8 + 29 | 0] = I7 >>> 2, C3[A8 + 31 | 0] = (33292288 & I7) >>> 18, C3[A8 + 28 | 0] = I7 << 6 | (66060288 & y4) >>> 20;
                    }
                    function wA(A8, I7, g6) {
                      var B4, Q4 = 0, E4 = 0, o4 = 0, c4 = 0, D4 = 0, a4 = 0, y4 = 0;
                      if (r3 = B4 = r3 - 192 | 0, g6 >>> 0 >= 129 && (MA(A8), W(A8, I7, g6, 0), v3(A8, B4), g6 = 64, I7 = B4), MA(A8), VA(B4 - -64 | 0, 54, 128), g6) {
                        if (g6 >>> 0 >= 4) for (y4 = 252 & g6; C3[0 | (Q4 = (o4 = B4 - -64 | 0) + E4 | 0)] = i3[0 | Q4] ^ i3[I7 + E4 | 0], C3[0 | (c4 = (Q4 = 1 | E4) + o4 | 0)] = i3[0 | c4] ^ i3[I7 + Q4 | 0], C3[0 | (c4 = (Q4 = 2 | E4) + o4 | 0)] = i3[0 | c4] ^ i3[I7 + Q4 | 0], C3[0 | (Q4 = (Q4 = o4) + (o4 = 3 | E4) | 0)] = i3[0 | Q4] ^ i3[I7 + o4 | 0], E4 = E4 + 4 | 0, (0 | y4) != (0 | (D4 = D4 + 4 | 0)); ) ;
                        if (D4 = 3 & g6) for (; C3[0 | (o4 = (B4 - -64 | 0) + E4 | 0)] = i3[0 | o4] ^ i3[I7 + E4 | 0], E4 = E4 + 1 | 0, (0 | D4) != (0 | (a4 = a4 + 1 | 0)); ) ;
                      }
                      if (W(A8, E4 = B4 - -64 | 0, 128, 0), MA(o4 = A8 + 208 | 0), VA(E4, 92, 128), g6) {
                        if (a4 = 0, E4 = 0, g6 >>> 0 >= 4) for (y4 = 252 & g6, D4 = 0; C3[0 | (Q4 = (A8 = B4 - -64 | 0) + E4 | 0)] = i3[0 | Q4] ^ i3[I7 + E4 | 0], C3[0 | (c4 = (Q4 = 1 | E4) + A8 | 0)] = i3[0 | c4] ^ i3[I7 + Q4 | 0], C3[0 | (c4 = (Q4 = 2 | E4) + A8 | 0)] = i3[0 | c4] ^ i3[I7 + Q4 | 0], C3[0 | (Q4 = (Q4 = A8) + (A8 = 3 | E4) | 0)] = i3[0 | Q4] ^ i3[A8 + I7 | 0], E4 = E4 + 4 | 0, (0 | y4) != (0 | (D4 = D4 + 4 | 0)); ) ;
                        if (A8 = 3 & g6) for (; C3[0 | (g6 = (B4 - -64 | 0) + E4 | 0)] = i3[0 | g6] ^ i3[I7 + E4 | 0], E4 = E4 + 1 | 0, (0 | A8) != (0 | (a4 = a4 + 1 | 0)); ) ;
                      }
                      return W(o4, A8 = B4 - -64 | 0, 128, 0), MI(A8, 128), MI(B4, 64), r3 = B4 + 192 | 0, 0;
                    }
                    function rA(A8, I7) {
                      var g6;
                      return E3[12 + (g6 = r3 - 16 | 0) >> 2] = A8, E3[g6 + 8 >> 2] = I7, E3[g6 + 4 >> 2] = 0, E3[g6 + 4 >> 2] = E3[g6 + 4 >> 2] | i3[E3[g6 + 12 >> 2]] ^ i3[E3[g6 + 8 >> 2]], E3[g6 + 4 >> 2] = E3[g6 + 4 >> 2] | i3[E3[g6 + 12 >> 2] + 1 | 0] ^ i3[E3[g6 + 8 >> 2] + 1 | 0], E3[g6 + 4 >> 2] = E3[g6 + 4 >> 2] | i3[E3[g6 + 12 >> 2] + 2 | 0] ^ i3[E3[g6 + 8 >> 2] + 2 | 0], E3[g6 + 4 >> 2] = E3[g6 + 4 >> 2] | i3[E3[g6 + 12 >> 2] + 3 | 0] ^ i3[E3[g6 + 8 >> 2] + 3 | 0], E3[g6 + 4 >> 2] = E3[g6 + 4 >> 2] | i3[E3[g6 + 12 >> 2] + 4 | 0] ^ i3[E3[g6 + 8 >> 2] + 4 | 0], E3[g6 + 4 >> 2] = E3[g6 + 4 >> 2] | i3[E3[g6 + 12 >> 2] + 5 | 0] ^ i3[E3[g6 + 8 >> 2] + 5 | 0], E3[g6 + 4 >> 2] = E3[g6 + 4 >> 2] | i3[E3[g6 + 12 >> 2] + 6 | 0] ^ i3[E3[g6 + 8 >> 2] + 6 | 0], E3[g6 + 4 >> 2] = E3[g6 + 4 >> 2] | i3[E3[g6 + 12 >> 2] + 7 | 0] ^ i3[E3[g6 + 8 >> 2] + 7 | 0], E3[g6 + 4 >> 2] = E3[g6 + 4 >> 2] | i3[E3[g6 + 12 >> 2] + 8 | 0] ^ i3[E3[g6 + 8 >> 2] + 8 | 0], E3[g6 + 4 >> 2] = E3[g6 + 4 >> 2] | i3[E3[g6 + 12 >> 2] + 9 | 0] ^ i3[E3[g6 + 8 >> 2] + 9 | 0], E3[g6 + 4 >> 2] = E3[g6 + 4 >> 2] | i3[E3[g6 + 12 >> 2] + 10 | 0] ^ i3[E3[g6 + 8 >> 2] + 10 | 0], E3[g6 + 4 >> 2] = E3[g6 + 4 >> 2] | i3[E3[g6 + 12 >> 2] + 11 | 0] ^ i3[E3[g6 + 8 >> 2] + 11 | 0], E3[g6 + 4 >> 2] = E3[g6 + 4 >> 2] | i3[E3[g6 + 12 >> 2] + 12 | 0] ^ i3[E3[g6 + 8 >> 2] + 12 | 0], E3[g6 + 4 >> 2] = E3[g6 + 4 >> 2] | i3[E3[g6 + 12 >> 2] + 13 | 0] ^ i3[E3[g6 + 8 >> 2] + 13 | 0], E3[g6 + 4 >> 2] = E3[g6 + 4 >> 2] | i3[E3[g6 + 12 >> 2] + 14 | 0] ^ i3[E3[g6 + 8 >> 2] + 14 | 0], E3[g6 + 4 >> 2] = E3[g6 + 4 >> 2] | i3[E3[g6 + 12 >> 2] + 15 | 0] ^ i3[E3[g6 + 8 >> 2] + 15 | 0], (E3[g6 + 4 >> 2] - 1 >>> 8 & 1) - 1 | 0;
                    }
                    function tA(A8, I7, g6, C4, B4, Q4, i4) {
                      var o4, c4, D4, a4 = 0, y4 = 0, f4 = 0, e4 = 0;
                      r3 = o4 = r3 - 352 | 0, AA(o4, Q4, i4);
                      A: {
                        if (!(((a4 = !!(0 | B4)) | !B4 & C4 >>> 0 > A8 - g6 >>> 0) & A8 >>> 0 > g6 >>> 0) & (!B4 & g6 - A8 >>> 0 >= C4 >>> 0 | A8 >>> 0 >= g6 >>> 0)) {
                          if (E3[o4 + 56 >> 2] = 0, E3[o4 + 60 >> 2] = 0, E3[o4 + 48 >> 2] = 0, E3[o4 + 52 >> 2] = 0, E3[o4 + 40 >> 2] = 0, E3[o4 + 44 >> 2] = 0, E3[o4 + 32 >> 2] = 0, E3[o4 + 36 >> 2] = 0, y4 = (i4 = (a4 = !!(0 | B4)) | !B4 & C4 >>> 0 >= 32) ? 32 : C4, f4 = i4 ? 0 : B4, i4 = a4 | !B4 & C4 >>> 0 > 32, !(C4 | B4)) {
                            e4 = 1;
                            break A;
                          }
                        } else g6 = lA(A8, g6, C4), E3[o4 + 56 >> 2] = 0, E3[o4 + 60 >> 2] = 0, E3[o4 + 48 >> 2] = 0, E3[o4 + 52 >> 2] = 0, E3[o4 + 40 >> 2] = 0, E3[o4 + 44 >> 2] = 0, E3[o4 + 32 >> 2] = 0, E3[o4 + 36 >> 2] = 0, y4 = (i4 = a4 | !B4 & C4 >>> 0 >= 32) ? 32 : C4, f4 = i4 ? 0 : B4, i4 = a4 | !B4 & C4 >>> 0 > 32;
                        TA(o4 - -64 | 0, g6, y4), e4 = 0;
                      }
                      return a4 = f4, oI(c4 = o4 + 32 | 0, c4, D4 = y4 + 32 | 0, a4 = D4 >>> 0 < 32 ? a4 + 1 | 0 : a4, a4 = Q4 + 16 | 0, o4), nI(o4 + 96 | 0, c4), e4 || TA(A8, o4 - -64 | 0, y4), MI(o4 + 32 | 0, 64), i4 && DI(A8 + y4 | 0, g6 + y4 | 0, C4 - y4 | 0, B4 - ((C4 >>> 0 < y4 >>> 0) + f4 | 0) | 0, a4, o4), MI(o4, 32), rI(g6 = o4 + 96 | 0, A8, C4, B4), sI(g6, I7), MI(g6, 256), r3 = o4 + 352 | 0, 0;
                    }
                    function hA(A8, I7) {
                      var g6, C4 = 0, B4 = 0;
                      g6 = I7;
                      A: {
                        I: {
                          g: {
                            if (I7 &= 255) {
                              if (3 & A8) for (; ; ) {
                                if (!(C4 = i3[0 | A8]) | (0 | I7) == (0 | C4)) break A;
                                if (!(3 & (A8 = A8 + 1 | 0))) break;
                              }
                              if (-2139062144 != (-2139062144 & ((C4 = E3[A8 >> 2]) | 16843008 - C4))) break g;
                              for (B4 = c3(I7, 16843009); ; ) {
                                if (-2139062144 != (-2139062144 & (16843008 - (I7 = C4 ^ B4) | I7))) break g;
                                if (C4 = E3[A8 + 4 >> 2], A8 = I7 = A8 + 4 | 0, -2139062144 != (-2139062144 & (16843008 - C4 | C4))) break;
                              }
                              break I;
                            }
                            C4 = A8;
                            C: {
                              B: {
                                Q: if (3 & A8) {
                                  if (I7 = 0, !i3[0 | A8]) break C;
                                  for (; ; ) {
                                    if (!(3 & (A8 = A8 + 1 | 0))) break Q;
                                    if (!i3[0 | A8]) break;
                                  }
                                  break B;
                                }
                                for (; I7 = A8, A8 = A8 + 4 | 0, -2139062144 == (-2139062144 & (16843008 - (B4 = E3[I7 >> 2]) | B4)); ) ;
                                for (; I7 = (A8 = I7) + 1 | 0, i3[0 | A8]; ) ;
                              }
                              I7 = A8 - C4 | 0;
                            }
                            A8 = I7 + C4 | 0;
                            break A;
                          }
                          I7 = A8;
                        }
                        for (; ; ) {
                          if (!(C4 = i3[0 | (A8 = I7)])) break A;
                          if (I7 = A8 + 1 | 0, (0 | C4) == (255 & g6)) break;
                        }
                      }
                      return i3[0 | A8] == (255 & g6) ? A8 : 0;
                    }
                    function kA(A8, I7, g6, C4, B4, Q4, i4) {
                      var o4, c4, D4 = 0, a4 = 0, y4 = 0;
                      r3 = o4 = r3 - 96 | 0, AA(o4, Q4, i4), i4 = o4 + 32 | 0, c4 = Q4 + 16 | 0, vI[E3[8808]](i4, 32, 0, c4, o4), Q4 = -1;
                      A: {
                        I: if (!(0 | vI[E3[8802]](g6, I7, C4, B4, i4))) {
                          if (Q4 = 0, !A8) break A;
                          g: {
                            if (!(((g6 = !!(0 | B4)) | !B4 & C4 >>> 0 > I7 - A8 >>> 0) & A8 >>> 0 < I7 >>> 0) & (!B4 & C4 >>> 0 <= A8 - I7 >>> 0 | A8 >>> 0 <= I7 >>> 0)) {
                              if (!(C4 | B4)) break g;
                              g6 = (Q4 = !B4 & C4 >>> 0 >= 32 | !!(0 | B4)) ? 32 : C4, D4 = Q4 ? 0 : B4;
                            } else I7 = lA(A8, I7, C4), g6 = (Q4 = g6 | !B4 & C4 >>> 0 >= 32) ? 32 : C4, D4 = Q4 ? 0 : B4;
                            if (Q4 = D4, y4 = TA(o4 - -64 | 0, I7, g6), oI(i4 = o4 + 32 | 0, i4, a4 = g6 + 32 | 0, Q4 = a4 >>> 0 < 32 ? Q4 + 1 | 0 : Q4, c4, o4), A8 = TA(A8, y4, g6), MI(i4, 64), Q4 = 0, !B4 & C4 >>> 0 < 33) break I;
                            DI(A8 + g6 | 0, I7 + g6 | 0, C4 - g6 | 0, B4 - (D4 + (g6 >>> 0 > C4 >>> 0) | 0) | 0, c4, o4);
                            break I;
                          }
                          oI(A8 = o4 + 32 | 0, A8, 32, 0, c4, o4), MI(A8, 64);
                        }
                        MI(o4, 32);
                      }
                      return r3 = o4 + 96 | 0, Q4;
                    }
                    function nA(A8, I7, g6, C4, B4, Q4, o4, c4, D4, a4) {
                      var y4, f4;
                      return r3 = y4 = r3 - 400 | 0, E3[y4 + 4 >> 2] = 0, $(f4 = y4 + 16 | 0, D4, a4), a4 = i3[D4 + 20 | 0] | i3[D4 + 21 | 0] << 8 | i3[D4 + 22 | 0] << 16 | i3[D4 + 23 | 0] << 24, E3[y4 + 8 >> 2] = i3[D4 + 16 | 0] | i3[D4 + 17 | 0] << 8 | i3[D4 + 18 | 0] << 16 | i3[D4 + 19 | 0] << 24, E3[y4 + 12 >> 2] = a4, eI(a4 = y4 + 80 | 0, 64, y4 + 4 | 0, f4), nI(D4 = y4 + 144 | 0, a4), MI(a4, 64), rI(D4, Q4, o4, c4), rI(D4, 35104, 0 - o4 & 15, 0), rI(D4, I7, g6, C4), rI(D4, 35104, 0 - g6 & 15, 0), E3[y4 + 72 >> 2] = o4, E3[y4 + 76 >> 2] = c4, rI(D4, Q4 = y4 + 72 | 0, 8, 0), E3[y4 + 72 >> 2] = g6, E3[y4 + 76 >> 2] = C4, rI(D4, Q4, 8, 0), sI(D4, Q4 = y4 + 48 | 0), MI(D4, 256), D4 = rA(Q4, B4), MI(Q4, 16), A8 && (D4 ? (VA(A8, 0, g6), D4 = -1) : (BI(A8, I7, g6, C4, y4 + 4 | 0, y4 + 16 | 0), D4 = 0)), MI(y4 + 16 | 0, 32), r3 = y4 + 400 | 0, D4;
                    }
                    function sA(A8, I7, g6, C4, B4, Q4, o4, c4, D4, a4, y4) {
                      var f4, e4, w4;
                      return r3 = f4 = r3 - 384 | 0, E3[f4 + 4 >> 2] = 0, $(e4 = f4 + 16 | 0, a4, y4), y4 = i3[a4 + 20 | 0] | i3[a4 + 21 | 0] << 8 | i3[a4 + 22 | 0] << 16 | i3[a4 + 23 | 0] << 24, E3[f4 + 8 >> 2] = i3[a4 + 16 | 0] | i3[a4 + 17 | 0] << 8 | i3[a4 + 18 | 0] << 16 | i3[a4 + 19 | 0] << 24, E3[f4 + 12 >> 2] = y4, eI(y4 = f4 - -64 | 0, 64, w4 = f4 + 4 | 0, e4), nI(a4 = f4 + 128 | 0, y4), MI(y4, 64), rI(a4, o4, c4, D4), rI(a4, 35104, 0 - c4 & 15, 0), BI(A8, C4, B4, Q4, w4, e4), rI(a4, A8, B4, Q4), rI(a4, 35104, 0 - B4 & 15, 0), E3[f4 + 56 >> 2] = c4, E3[f4 + 60 >> 2] = D4, rI(a4, A8 = f4 + 56 | 0, 8, 0), E3[f4 + 56 >> 2] = B4, E3[f4 + 60 >> 2] = Q4, rI(a4, A8, 8, 0), sI(a4, I7), MI(a4, 256), g6 && (E3[g6 >> 2] = 16, E3[g6 + 4 >> 2] = 0), MI(f4 + 16 | 0, 32), r3 = f4 + 384 | 0, 0;
                    }
                    function FA(A8, I7, g6, C4) {
                      var B4, Q4 = 0;
                      return r3 = B4 = r3 - 208 | 0, E3[B4 + 72 >> 2] = 0, E3[B4 + 76 >> 2] = 0, Q4 = E3[8479], E3[B4 + 8 >> 2] = E3[8478], E3[B4 + 12 >> 2] = Q4, Q4 = E3[8481], E3[B4 + 16 >> 2] = E3[8480], E3[B4 + 20 >> 2] = Q4, Q4 = E3[8483], E3[B4 + 24 >> 2] = E3[8482], E3[B4 + 28 >> 2] = Q4, Q4 = E3[8485], E3[B4 + 32 >> 2] = E3[8484], E3[B4 + 36 >> 2] = Q4, Q4 = E3[8487], E3[B4 + 40 >> 2] = E3[8486], E3[B4 + 44 >> 2] = Q4, Q4 = E3[8489], E3[B4 + 48 >> 2] = E3[8488], E3[B4 + 52 >> 2] = Q4, Q4 = E3[8491], E3[B4 + 56 >> 2] = E3[8490], E3[B4 + 60 >> 2] = Q4, E3[B4 + 64 >> 2] = 0, E3[B4 + 68 >> 2] = 0, Q4 = E3[8477], E3[B4 >> 2] = E3[8476], E3[B4 + 4 >> 2] = Q4, W(B4, I7, g6, C4), v3(B4, A8), r3 = B4 + 208 | 0, 0;
                    }
                    function SA(A8, I7) {
                      var g6, B4 = 0, Q4 = 0, E4 = 0, o4 = 0;
                      if (C3[15 + (g6 = r3 - 16 | 0) | 0] = 0, I7) {
                        if (I7 >>> 0 >= 4) for (o4 = -4 & I7; B4 = A8 + Q4 | 0, C3[g6 + 15 | 0] = i3[0 | B4] | i3[g6 + 15 | 0], C3[g6 + 15 | 0] = i3[B4 + 1 | 0] | i3[g6 + 15 | 0], C3[g6 + 15 | 0] = i3[B4 + 2 | 0] | i3[g6 + 15 | 0], C3[g6 + 15 | 0] = i3[B4 + 3 | 0] | i3[g6 + 15 | 0], Q4 = Q4 + 4 | 0, (0 | o4) != (0 | (E4 = E4 + 4 | 0)); ) ;
                        if (B4 = 3 & I7) for (I7 = 0; C3[g6 + 15 | 0] = i3[A8 + Q4 | 0] | i3[g6 + 15 | 0], Q4 = Q4 + 1 | 0, (0 | B4) != (0 | (I7 = I7 + 1 | 0)); ) ;
                      }
                      return i3[g6 + 15 | 0] - 1 >>> 8 & 1;
                    }
                    function MA(A8) {
                      var I7 = 0;
                      E3[A8 + 64 >> 2] = 0, E3[A8 + 68 >> 2] = 0, E3[A8 + 72 >> 2] = 0, E3[A8 + 76 >> 2] = 0, I7 = E3[8477], E3[A8 >> 2] = E3[8476], E3[A8 + 4 >> 2] = I7, I7 = E3[8479], E3[A8 + 8 >> 2] = E3[8478], E3[A8 + 12 >> 2] = I7, I7 = E3[8481], E3[A8 + 16 >> 2] = E3[8480], E3[A8 + 20 >> 2] = I7, I7 = E3[8483], E3[A8 + 24 >> 2] = E3[8482], E3[A8 + 28 >> 2] = I7, I7 = E3[8485], E3[A8 + 32 >> 2] = E3[8484], E3[A8 + 36 >> 2] = I7, I7 = E3[8487], E3[A8 + 40 >> 2] = E3[8486], E3[A8 + 44 >> 2] = I7, I7 = E3[8489], E3[A8 + 48 >> 2] = E3[8488], E3[A8 + 52 >> 2] = I7, I7 = E3[8491], E3[A8 + 56 >> 2] = E3[8490], E3[A8 + 60 >> 2] = I7;
                    }
                    function NA(A8, I7, g6) {
                      var B4, Q4 = 0, o4 = 0;
                      if (E3[12 + (B4 = r3 - 16 | 0) >> 2] = A8, E3[B4 + 8 >> 2] = I7, A8 = 0, C3[B4 + 7 | 0] = 0, g6) {
                        if (I7 = 1 & g6, 1 != (0 | g6)) for (o4 = -2 & g6, g6 = 0; C3[B4 + 7 | 0] = i3[B4 + 7 | 0] | i3[E3[B4 + 12 >> 2] + A8 | 0] ^ i3[E3[B4 + 8 >> 2] + A8 | 0], Q4 = 1 | A8, C3[B4 + 7 | 0] = i3[B4 + 7 | 0] | i3[Q4 + E3[B4 + 12 >> 2] | 0] ^ i3[E3[B4 + 8 >> 2] + Q4 | 0], A8 = A8 + 2 | 0, (0 | o4) != (0 | (g6 = g6 + 2 | 0)); ) ;
                        I7 && (C3[B4 + 7 | 0] = i3[B4 + 7 | 0] | i3[E3[B4 + 12 >> 2] + A8 | 0] ^ i3[E3[B4 + 8 >> 2] + A8 | 0]);
                      }
                      return (i3[B4 + 7 | 0] - 1 >>> 8 & 1) - 1 | 0;
                    }
                    function KA(A8) {
                      for (var I7 = 0, g6 = 0, C4 = 0, B4 = 0, Q4 = 0, E4 = 0, o4 = 0, c4 = 0, D4 = 0, a4 = 0; B4 = (g6 = i3[A8 + C4 | 0]) ^ i3[0 | (I7 = C4 + 2432 | 0)] | B4, Q4 = g6 ^ i3[I7 + 192 | 0] | Q4, E4 = g6 ^ i3[I7 + 160 | 0] | E4, o4 = g6 ^ i3[I7 + 128 | 0] | o4, c4 = g6 ^ i3[I7 + 96 | 0] | c4, D4 = g6 ^ i3[I7 - -64 | 0] | D4, a4 = g6 ^ i3[I7 + 32 | 0] | a4, 31 != (0 | (C4 = C4 + 1 | 0)); ) ;
                      return ((255 & ((I7 = 127 ^ (A8 = 127 & i3[A8 + 31 | 0])) | Q4)) - 1 | (255 & (I7 | E4)) - 1 | (255 & (I7 | o4)) - 1 | (255 & (122 ^ A8 | c4)) - 1 | (255 & (5 ^ A8 | D4)) - 1 | (255 & (A8 | a4)) - 1 | (255 & (A8 | B4)) - 1) >>> 8 & 1;
                    }
                    function _A(A8, I7, g6) {
                      var C4 = 0, B4 = 0, Q4 = 0, E4 = 0;
                      return B4 = 31 & (Q4 = E4 = 63 & g6), Q4 = Q4 >>> 0 >= 32 ? -1 >>> B4 | 0 : (C4 = -1 >>> B4 | 0) | (1 << B4) - 1 << 32 - B4, Q4 &= A8, C4 &= I7, B4 = 31 & E4, E4 >>> 0 >= 32 ? (C4 = Q4 << B4, E4 = 0) : (C4 = (1 << B4) - 1 & Q4 >>> 32 - B4 | C4 << B4, E4 = Q4 << B4), Q4 = C4, C4 = 31 & (B4 = 0 - g6 & 63), B4 >>> 0 >= 32 ? (C4 = -1 << C4, g6 = 0) : C4 = (g6 = -1 << C4) | (1 << C4) - 1 & -1 >>> 32 - C4, A8 &= g6, I7 &= C4, C4 = 31 & B4, B4 >>> 0 >= 32 ? (g6 = 0, A8 = I7 >>> C4 | 0) : (g6 = I7 >>> C4 | 0, A8 = ((1 << C4) - 1 & I7) << 32 - C4 | A8 >>> C4), t3 = g6 | Q4, A8 | E4;
                    }
                    function pA(A8, I7, g6, C4, B4, Q4, i4, o4, c4, D4) {
                      var a4, y4, f4;
                      return r3 = a4 = r3 - 352 | 0, eI(f4 = a4 + 32 | 0, 64, c4, D4), nI(y4 = a4 + 96 | 0, f4), MI(f4, 64), rI(y4, Q4, i4, o4), rI(y4, 35168, 0 - i4 & 15, 0), rI(y4, I7, g6, C4), rI(y4, 35168, 0 - g6 & 15, 0), E3[a4 + 24 >> 2] = i4, E3[a4 + 28 >> 2] = o4, rI(y4, Q4 = a4 + 24 | 0, 8, 0), E3[a4 + 24 >> 2] = g6, E3[a4 + 28 >> 2] = C4, rI(y4, Q4, 8, 0), sI(y4, a4), MI(y4, 256), Q4 = rA(a4, B4), MI(a4, 16), A8 && (Q4 ? (VA(A8, 0, g6), Q4 = -1) : (vA(A8, I7, g6, C4, c4, 1, D4), Q4 = 0)), r3 = a4 + 352 | 0, Q4;
                    }
                    function HA(A8, I7, g6, C4, B4, Q4, i4, o4, c4, D4, a4) {
                      var y4, f4, e4;
                      return r3 = y4 = r3 - 336 | 0, eI(e4 = y4 + 16 | 0, 64, D4, a4), nI(f4 = y4 + 80 | 0, e4), MI(e4, 64), rI(f4, i4, o4, c4), rI(f4, 35168, 0 - o4 & 15, 0), vA(A8, C4, B4, Q4, D4, 1, a4), rI(f4, A8, B4, Q4), rI(f4, 35168, 0 - B4 & 15, 0), E3[y4 + 8 >> 2] = o4, E3[y4 + 12 >> 2] = c4, rI(f4, A8 = y4 + 8 | 0, 8, 0), E3[y4 + 8 >> 2] = B4, E3[y4 + 12 >> 2] = Q4, rI(f4, A8, 8, 0), sI(f4, I7), MI(f4, 256), g6 && (E3[g6 >> 2] = 16, E3[g6 + 4 >> 2] = 0), r3 = y4 + 336 | 0, 0;
                    }
                    function GA(A8, I7, g6, C4, B4, Q4, i4, o4, c4, D4) {
                      var a4, y4, f4;
                      return r3 = a4 = r3 - 352 | 0, wI(f4 = a4 + 32 | 0, c4, D4), nI(y4 = a4 + 96 | 0, f4), MI(f4, 64), rI(y4, Q4, i4, o4), E3[a4 + 24 >> 2] = i4, E3[a4 + 28 >> 2] = o4, rI(y4, Q4 = a4 + 24 | 0, 8, 0), rI(y4, I7, g6, C4), E3[a4 + 24 >> 2] = g6, E3[a4 + 28 >> 2] = C4, rI(y4, Q4, 8, 0), sI(y4, a4), MI(y4, 256), Q4 = rA(a4, B4), MI(a4, 16), A8 && (Q4 ? (VA(A8, 0, g6), Q4 = -1) : (CI(A8, I7, g6, C4, c4, D4), Q4 = 0)), r3 = a4 + 352 | 0, Q4;
                    }
                    function JA(A8, I7, g6, C4, B4, Q4, i4, o4, c4, D4, a4) {
                      var y4, f4, e4;
                      return r3 = y4 = r3 - 336 | 0, wI(e4 = y4 + 16 | 0, D4, a4), nI(f4 = y4 + 80 | 0, e4), MI(e4, 64), rI(f4, i4, o4, c4), E3[y4 + 8 >> 2] = o4, E3[y4 + 12 >> 2] = c4, rI(f4, i4 = y4 + 8 | 0, 8, 0), CI(A8, C4, B4, Q4, D4, a4), rI(f4, A8, B4, Q4), E3[y4 + 8 >> 2] = B4, E3[y4 + 12 >> 2] = Q4, rI(f4, i4, 8, 0), sI(f4, I7), MI(f4, 256), g6 && (E3[g6 >> 2] = 16, E3[g6 + 4 >> 2] = 0), r3 = y4 + 336 | 0, 0;
                    }
                    function YA(A8, I7, g6, C4, B4, Q4, i4, o4, c4, D4, a4) {
                      var y4 = 0, f4 = 0, e4 = 0;
                      return f4 = -1, (y4 = C4 >>> 0 < 32) & !B4 || !(y4 = B4 - y4 | 0) & (e4 = C4 - 32 | 0) >>> 0 > 4294967263 | y4 | !o4 & i4 >>> 0 > 4294967263 | o4 || (f4 = 0 | vI[E3[a4 >> 2]](A8, g6, e4, (g6 + C4 | 0) - 32 | 0, 32, Q4, i4, c4, D4)), I7 && (E3[I7 >> 2] = f4 ? 0 : C4 - 32 | 0, E3[I7 + 4 >> 2] = f4 ? 0 : B4 - (C4 >>> 0 < 32) | 0), f4;
                    }
                    function UA(A8, I7) {
                      var g6;
                      for (E3[12 + (g6 = r3 - 16 | 0) >> 2] = A8, E3[g6 + 8 >> 2] = I7, A8 = 0, E3[g6 + 4 >> 2] = 0; E3[g6 + 4 >> 2] = E3[g6 + 4 >> 2] | i3[E3[g6 + 12 >> 2] + A8 | 0] ^ i3[E3[g6 + 8 >> 2] + A8 | 0], I7 = 1 | A8, E3[g6 + 4 >> 2] = E3[g6 + 4 >> 2] | i3[I7 + E3[g6 + 12 >> 2] | 0] ^ i3[I7 + E3[g6 + 8 >> 2] | 0], 32 != (0 | (A8 = A8 + 2 | 0)); ) ;
                      return (E3[g6 + 4 >> 2] - 1 >>> 8 & 1) - 1 | 0;
                    }
                    function dA(A8) {
                      var I7 = 0, g6 = 0, B4 = 0, Q4 = 0, E4 = 0;
                      for (I7 = 1; g6 = (B4 = I7) + i3[0 | (I7 = A8 + Q4 | 0)] | 0, C3[0 | I7] = g6, g6 = i3[I7 + 1 | 0] + (g6 >>> 8 | 0) | 0, C3[I7 + 1 | 0] = g6, g6 = i3[I7 + 2 | 0] + (g6 >>> 8 | 0) | 0, C3[I7 + 2 | 0] = g6, B4 = I7, I7 = i3[I7 + 3 | 0] + (g6 >>> 8 | 0) | 0, C3[B4 + 3 | 0] = I7, I7 = I7 >>> 8 | 0, Q4 = Q4 + 4 | 0, 4 != (0 | (E4 = E4 + 4 | 0)); ) ;
                    }
                    function bA(A8, I7, g6, C4, B4, i4, o4, c4, D4, a4, y4) {
                      return !B4 & C4 >>> 0 > 4294967263 | !!(0 | B4) | !c4 & o4 >>> 0 >= 4294967264 | !!(0 | c4) ? (iI(), Q3()) : (A8 = 0 | vI[E3[y4 >> 2]](A8, A8 + C4 | 0, 32, g6, C4, i4, o4, D4, a4), I7 && (C4 = (g6 = C4 + 32 | 0) >>> 0 < 32 ? B4 + 1 | 0 : B4, E3[I7 >> 2] = A8 ? 0 : g6, E3[I7 + 4 >> 2] = A8 ? 0 : C4)), A8;
                    }
                    function PA(A8, I7, g6, C4) {
                      var B4, Q4, E4, i4, o4 = 0, D4 = 0;
                      return i4 = c3(o4 = g6 >>> 16 | 0, D4 = A8 >>> 16 | 0), o4 = (65535 & (D4 = ((E4 = c3(B4 = 65535 & g6, Q4 = 65535 & A8)) >>> 16 | 0) + c3(D4, B4) | 0)) + c3(o4, Q4) | 0, t3 = (c3(I7, g6) + i4 | 0) + c3(A8, C4) + (D4 >>> 16) + (o4 >>> 16) | 0, 65535 & E4 | o4 << 16;
                    }
                    function vA(A8, I7, g6, C4, B4, i4, o4) {
                      var c4 = 0, D4 = 0;
                      c4 = C4, 1 == (((c4 = (D4 = g6 + 63 | 0) >>> 0 < 63 ? c4 + 1 | 0 : c4) >>> 6 | 0) + !!(0 | (c4 = (63 & c4) << 26 | D4 >>> 6)) | 0) & i4 >>> 0 > (D4 = 0 - c4 | 0) >>> 0 | 1 == (0 | C4) | C4 >>> 0 > 1 ? (iI(), Q3()) : vI[E3[9075]](A8, I7, g6, C4, B4, i4, o4);
                    }
                    function RA(A8) {
                      var I7 = 0;
                      E3[A8 + 32 >> 2] = 0, E3[A8 + 36 >> 2] = 0, I7 = E3[8689], E3[A8 >> 2] = E3[8688], E3[A8 + 4 >> 2] = I7, I7 = E3[8691], E3[A8 + 8 >> 2] = E3[8690], E3[A8 + 12 >> 2] = I7, I7 = E3[8693], E3[A8 + 16 >> 2] = E3[8692], E3[A8 + 20 >> 2] = I7, I7 = E3[8695], E3[A8 + 24 >> 2] = E3[8694], E3[A8 + 28 >> 2] = I7;
                    }
                    function LA(A8, I7) {
                      A8 |= 0;
                      var g6, B4 = 0, Q4 = 0, E4 = 0;
                      if (r3 = g6 = r3 - 16 | 0, I7 |= 0) for (; C3[g6 + 15 | 0] = 0, Q4 = A8 + B4 | 0, E4 = 0 | y3(36304, g6 + 15 | 0, 0), C3[0 | Q4] = E4, (0 | (B4 = B4 + 1 | 0)) != (0 | I7); ) ;
                      r3 = g6 + 16 | 0;
                    }
                    function xA(A8, I7, g6, C4, B4, Q4, E4) {
                      var i4, o4, c4 = 0;
                      return r3 = i4 = r3 - 32 | 0, c4 = -1, (o4 = g6 >>> 0 < 16) & !C4 || OA(i4, Q4, E4) || (c4 = kA(A8, I7 + 16 | 0, I7, g6 - 16 | 0, C4 - o4 | 0, B4, i4), MI(i4, 32)), r3 = i4 + 32 | 0, c4;
                    }
                    function uA(A8) {
                      var I7, g6;
                      A: {
                        if (!((A8 = (I7 = E3[8800]) + (g6 = A8 + 7 & -8) | 0) >>> 0 <= I7 >>> 0 && g6)) {
                          if (A8 >>> 0 <= RI() << 16 >>> 0) break A;
                          if (0 | w3(0 | A8)) break A;
                        }
                        return E3[9280] = 48, -1;
                      }
                      return E3[8800] = A8, I7;
                    }
                    function mA(A8, I7) {
                      var g6, B4, Q4;
                      r3 = g6 = r3 - 176 | 0, iA(B4 = g6 + 96 | 0, I7 + 80 | 0), M3(Q4 = g6 + 48 | 0, I7, B4), M3(g6, I7 + 40 | 0, B4), eA(A8, g6), eA(g6 + 144 | 0, Q4), C3[A8 + 31 | 0] = i3[A8 + 31 | 0] ^ i3[g6 + 144 | 0] << 7, r3 = g6 + 176 | 0;
                    }
                    function qA(A8, I7, g6, C4, B4, i4, o4, c4, D4, a4, y4, f4) {
                      return g6 && (E3[g6 >> 2] = 32, E3[g6 + 4 >> 2] = 0), !D4 & c4 >>> 0 < 4294967264 & !i4 & B4 >>> 0 <= 4294967263 || (iI(), Q3()), 0 | vI[E3[f4 >> 2]](A8, I7, 32, C4, B4, o4, c4, a4, y4);
                    }
                    function lA(A8, I7, g6) {
                      var B4 = 0;
                      if (A8 >>> 0 < I7 >>> 0) return TA(A8, I7, g6);
                      if (g6) for (B4 = A8 + g6 | 0, I7 = I7 + g6 | 0; I7 = I7 - 1 | 0, C3[0 | (B4 = B4 - 1 | 0)] = i3[0 | I7], g6 = g6 - 1 | 0; ) ;
                      return A8;
                    }
                    function zA(A8, I7, g6, C4, B4, E4, i4) {
                      var o4, c4 = 0;
                      if (r3 = o4 = r3 - 32 | 0, !C4 & g6 >>> 0 < 4294967280) return c4 = -1, OA(o4, E4, i4) || (c4 = tA(A8 + 16 | 0, A8, I7, g6, C4, B4, o4), MI(o4, 32)), r3 = o4 + 32 | 0, c4;
                      iI(), Q3();
                    }
                    function jA(A8, I7, g6, C4, B4, Q4) {
                      return I7 |= 0, 0 | (!(C4 |= 0) & (g6 |= 0) >>> 0 >= 16 | C4 ? kA(A8 |= 0, I7 + 16 | 0, I7, g6 - 16 | 0, C4 - (g6 >>> 0 < 16) | 0, B4 |= 0, Q4 |= 0) : -1);
                    }
                    function XA(A8, I7, g6, C4, B4, Q4, i4, o4, c4, D4, a4) {
                      return !C4 & g6 >>> 0 > 4294967263 | C4 | !o4 & i4 >>> 0 > 4294967263 | o4 ? -1 : 0 | vI[E3[a4 >> 2]](A8, I7, g6, B4, 32, Q4, i4, c4, D4);
                    }
                    function OA(A8, I7, g6) {
                      A8 |= 0;
                      var C4, B4 = 0;
                      return r3 = C4 = r3 - 32 | 0, B4 = -1, fA(C4, g6 |= 0, I7 |= 0) || (B4 = AA(A8, 35184, C4)), r3 = C4 + 32 | 0, 0 | B4;
                    }
                    function TA(A8, I7, g6) {
                      var B4 = 0;
                      if (g6) for (B4 = A8; C3[0 | B4] = i3[0 | I7], B4 = B4 + 1 | 0, I7 = I7 + 1 | 0, g6 = g6 - 1 | 0; ) ;
                      return A8;
                    }
                    function VA(A8, I7, g6) {
                      var B4 = 0;
                      if (g6) for (B4 = A8; C3[0 | B4] = I7, B4 = B4 + 1 | 0, g6 = g6 - 1 | 0; ) ;
                      return A8;
                    }
                    function ZA(A8, I7, g6) {
                      return A8 |= 0, I7 |= 0, (g6 |= 0) >>> 0 >= 256 && (f3(1248, 1175, 107, 1055), Q3()), 0 | m3(A8, I7, 255 & g6);
                    }
                    function WA(A8, I7) {
                      var g6;
                      r3 = g6 = r3 + -64 | 0, v3(A8, g6), W(A8 = A8 + 208 | 0, g6, 64, 0), v3(A8, I7), MI(g6, 64), r3 = g6 - -64 | 0;
                    }
                    function $A(A8, I7, g6, C4, B4, Q4, E4) {
                      return 0 | tA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q4 |= 0, E4 |= 0);
                    }
                    function AI(A8, I7, g6, C4, B4, Q4, E4) {
                      return 0 | kA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q4 |= 0, E4 |= 0);
                    }
                    function II(A8, I7) {
                      var g6;
                      r3 = g6 = r3 - 32 | 0, IA(A8, g6), BA(A8 = A8 + 104 | 0, g6, 32), IA(A8, I7), MI(g6, 32), r3 = g6 + 32 | 0;
                    }
                    function gI(A8, I7) {
                      var g6 = 0;
                      return (-1 >>> (g6 = 31 & I7) & A8) << g6 | ((g6 = A8) & -1 << (A8 = 0 - I7 & 31)) >>> A8;
                    }
                    function CI(A8, I7, g6, C4, B4, i4) {
                      1 == (0 | C4) | C4 >>> 0 > 1 && (iI(), Q3()), vI[E3[9074]](A8, I7, g6, C4, B4, 1, 0, i4);
                    }
                    function BI(A8, I7, g6, C4, B4, i4) {
                      1 == (0 | C4) | C4 >>> 0 > 1 && (iI(), Q3()), vI[E3[9075]](A8, I7, g6, C4, B4, 1, i4);
                    }
                    function QI() {
                      var A8;
                      r3 = A8 = r3 - 16 | 0, C3[A8 + 15 | 0] = 0, y3(36340, A8 + 15 | 0, 0), r3 = A8 + 16 | 0;
                    }
                    function EI(A8, I7, g6) {
                      return 0 | fA(A8 |= 0, I7 |= 0, g6 |= 0);
                    }
                    function iI() {
                      var A8;
                      (A8 = E3[9413]) && vI[0 | A8](), e3(), Q3();
                    }
                    function oI(A8, I7, g6, C4, B4, Q4) {
                      vI[E3[8809]](A8, I7, g6, C4, B4, 0, 0, Q4);
                    }
                    function cI(A8, I7) {
                      return A8 |= 0, LA(I7 |= 0, 32), 0 | hI(A8, I7);
                    }
                    function DI(A8, I7, g6, C4, B4, Q4) {
                      vI[E3[8809]](A8, I7, g6, C4, B4, 1, 0, Q4);
                    }
                    function aI(A8) {
                      return A8 ? 31 - D3(A8 - 1 ^ A8) | 0 : 32;
                    }
                    function yI(A8, I7, g6, C4) {
                      vI[E3[9075]](A8, I7, 40, 0, g6, 0, C4);
                    }
                    function fI(A8, I7) {
                      return 0 | hI(A8 |= 0, I7 |= 0);
                    }
                    function eI(A8, I7, g6, C4) {
                      vI[E3[9073]](A8, I7, 0, g6, C4);
                    }
                    function wI(A8, I7, g6) {
                      vI[E3[9072]](A8, 64, 0, I7, g6);
                    }
                    function rI(A8, I7, g6, C4) {
                      vI[E3[8804]](A8, I7, g6, C4);
                    }
                    function tI(A8, I7, g6, C4) {
                      return W(A8, I7, g6, C4), 0;
                    }
                    function hI(A8, I7) {
                      return 0 | vI[E3[8807]](A8, I7);
                    }
                    function kI(A8, I7, g6) {
                      return BA(A8, I7, g6), 0;
                    }
                    function nI(A8, I7) {
                      vI[E3[8803]](A8, I7);
                    }
                    function sI(A8, I7) {
                      vI[E3[8805]](A8, I7);
                    }
                    function FI(A8) {
                      LA(A8 |= 0, 32);
                    }
                    function SI(A8) {
                      LA(A8 |= 0, 16);
                    }
                    function MI(A8, I7) {
                      VA(A8, 0, I7);
                    }
                    function NI() {
                      return 208;
                    }
                    function KI() {
                      return 16;
                    }
                    function _I() {
                      return 32;
                    }
                    function pI() {
                      return 24;
                    }
                    function HI() {
                      return -17;
                    }
                    function GI() {
                      return -33;
                    }
                    function JI() {
                      return 64;
                    }
                    function YI() {
                      return 0;
                    }
                    function UI() {
                      return 8;
                    }
                    function dI() {
                      return 1;
                    }
                    function bI() {
                      return 2;
                    }
                    B3(I6 = i3, 1024, "cmFuZG9tYnl0ZXMAYjY0X3BvcyA8PSBiNjRfbGVuAGNyeXB0b19nZW5lcmljaGFzaF9ibGFrZTJiX2ZpbmFsAHJhbmRvbWJ5dGVzL3JhbmRvbWJ5dGVzLmMAc29kaXVtL2NvZGVjcy5jAGNyeXB0b19nZW5lcmljaGFzaC9ibGFrZTJiL3JlZi9ibGFrZTJiLXJlZi5jAGNyeXB0b19nZW5lcmljaGFzaC9ibGFrZTJiL3JlZi9nZW5lcmljaGFzaF9ibGFrZTJiLmMAYnVmX2xlbiA8PSBTSVpFX01BWABvdXRsZW4gPD0gVUlOVDhfTUFYAFMtPmJ1ZmxlbiA8PSBCTEFLRTJCX0JMT0NLQllURVMAc29kaXVtX2JpbjJiYXNlNjQAMS4wLjIwAAAAALZ4Wf+FctMAvW4V/w8KagApwAEAmOh5/7w8oP+Zcc7/ALfi/rQNSP8AAAAAAAAAALCgDv7TyYb/nhiPAH9pNQBgDL0Ap9f7/59MgP5qZeH/HvwEAJIMrg=="), B3(I6, 1424, "WfGy/grlpv973Sr+HhTUAFKAAwAw0fMAd3lA/zLjnP8AbsUBZxuQ"), B3(I6, 1472, "hTuMAb3xJP/4JcMBYNw3ALdMPv/DQj0AMkykAeGkTP9MPaP/dT4fAFGRQP92QQ4AonPW/waKLgB85vT/CoqPADQawgC49EwAgY8pAb70E/97qnr/YoFEAHnVkwBWZR7/oWebAIxZQ//v5b4BQwu1AMbwif7uRbz/Q5fuABMqbP/lVXEBMkSH/xFqCQAyZwH/UAGoASOYHv8QqLkBOFno/2XS/AAp+kcAzKpP/w4u7/9QTe8AvdZL/xGN+QAmUEz/vlV1AFbkqgCc2NABw8+k/5ZCTP+v4RD/jVBiAUzb8gDGonIALtqYAJsr8f6boGj/M7ulAAIRrwBCVKAB9zoeACNBNf5F7L8ALYb1AaN73QAgbhT/NBelALrWRwDpsGAA8u82ATlZigBTAFT/iKBkAFyOeP5ofL4AtbE+//opVQCYgioBYPz2AJeXP/7vhT4AIDicAC2nvf+OhbMBg1bTALuzlv76qg7/0qNOACU0lwBjTRoA7pzV/9XA0QFJLlQAFEEpATbOTwDJg5L+qm8Y/7EhMv6rJsv/Tvd0ANHdmQCFgLIBOiwZAMknOwG9E/wAMeXSAXW7dQC1s7gBAHLbADBekwD1KTgAfQ3M/vStdwAs3SD+VOoUAPmgxgHsfur/L2Oo/qrimf9ms9gA4o16/3pCmf629YYA4+QZAdY56//YrTj/tefSAHeAnf+BX4j/bn4zAAKpt/8HgmL+RbBe/3QE4wHZ8pH/yq0fAWkBJ/8ur0UA5C86/9fgRf7POEX/EP6L/xfP1P/KFH7/X9Vg/wmwIQDIBc//8SqA/iMhwP/45cQBgRF4APtnl/8HNHD/jDhC/yji9f/ZRiX+rNYJ/0hDhgGSwNb/LCZwAES4S//OWvsAleuNALWqOgB09O8AXJ0CAGatYgDpiWABfzHLAAWblAAXlAn/03oMACKGGv/bzIgAhggp/+BTK/5VGfcAbX8A/qmIMADud9v/563VAM4S/v4Iugf/fgkHAW8qSABvNOz+YD+NAJO/f/7NTsD/DmrtAbvbTACv87v+aVmtAFUZWQGi85QAAnbR/iGeCQCLoy7/XUYoAGwqjv5v/I7/m9+QADPlp/9J/Jv/XnQM/5ig2v+c7iX/s+rP/8UAs/+apI0A4cRoAAojGf7R1PL/Yf3e/rhl5QDeEn8BpIiH/x7PjP6SYfMAgcAa/slUIf9vCk7/k1Gy/wQEGACh7tf/Bo0hADXXDv8ptdD/54udALPL3f//uXEAveKs/3FC1v/KPi3/ZkAI/06uEP6FdUT/"), B3(I6, 2464, "AQ=="), B3(I6, 2496, "JuiVj8KyJ7BFw/SJ8u+Y8NXfrAXTxjM5sTgCiG1T/AXHF2pwPU3YT7o8C3YNEGcPKiBT+iw5zMZOx/13kqwDeuz///////////////////////////////////////9/7f///////////////////////////////////////3/u////////////////////////////////////////f+3T9VwaYxJY1pz3ot753hQ="), B3(I6, 2687, ""), B3(I6, 33660, "AQ=="), B3(I6, 33696, "AQ=="), B3(I6, 33728, "4Ot6fDtBuK4WVuP68Z/EatoJjeucMrH9hmIFFl9JuABfnJW8o1CMJLHQsVWcg+9bBERcxFgcjobYIk7d0J8RV+z///////////////////////////////////////9/7f///////////////////////////////////////3/u////////////////////////////////////////f0xpYnNvZGl1bURSRwAAAAAIybzzZ+YJajunyoSFrme7K/iU/nLzbjzxNh1fOvVPpdGC5q1/Ug5RH2w+K4xoBZtrvUH7q9mDH3khfhMZzeBbIq4o15gvikLNZe8jkUQ3cS87TezP+8C1vNuJgaXbtek4tUjzW8JWORnQBbbxEfFZm08Zr6SCP5IYgW3a1V4cq0ICA6OYqgfYvm9wRQFbgxKMsuROvoUxJOK0/9XDfQxVb4l78nRdvnKxlhY7/rHegDUSxyWnBtyblCZpz3Txm8HSSvGewWmb5OMlTziGR77vtdWMi8adwQ9lnKx3zKEMJHUCK1lvLOktg+SmbqqEdErU+0G93KmwXLVTEYPaiPl2q99m7lJRPpgQMrQtbcYxqD8h+5jIJwOw5A7vvsd/Wb/Cj6g98wvgxiWnCpNHkafVb4ID4FFjygZwbg4KZykpFPwv0kaFCrcnJskmXDghGy7tKsRa/G0sTd+zlZ0TDThT3mOvi1RzCmWosnc8uwpqduau7UcuycKBOzWCFIUscpJkA/FMoei/ogEwQrxLZhqokZf40HCLS8IwvlQGo1FsxxhS79YZ6JLREKllVSQGmdYqIHFXhTUO9LjRuzJwoGoQyNDSuBbBpBlTq0FRCGw3Hpnrjt9Md0gnqEib4bW8sDRjWsnFswwcOcuKQeNKqthOc+Njd0/KnFujuLLW828uaPyy713ugo90YC8XQ29jpXhyq/ChFHjIhOw5ZBoIAseMKB5jI/r/vpDpvYLe62xQpBV5xrL3o/m+K1Ny4/J4ccacYSbqzj4nygfCwCHHuIbRHuvgzdZ92up40W7uf0999bpvF3KqZ/AGppjIosV9YwquDfm+BJg/ERtHHBM1C3EbhH0EI/V32yiTJMdAe6vKMry+yRUKvp48TA0QnMRnHUO2Qj7LvtTFTCp+ZfycKX9Z7PrWOqtvy18XWEdKjBlEbIA="), B3(I6, 34752, "Z+YJaoWuZ7ty8248OvVPpX9SDlGMaAWbq9mDHxnN4FuYL4pCkUQ3cc/7wLWl27XpW8JWOfER8Vmkgj+S1V4cq5iqB9gBW4MSvoUxJMN9DFV0Xb5y/rHegKcG3Jt08ZvBwWmb5IZHvu/GncEPzKEMJG8s6S2qhHRK3KmwXNqI+XZSUT6YbcYxqMgnA7DHf1m/8wvgxkeRp9VRY8oGZykpFIUKtyc4IRsu/G0sTRMNOFNUcwpluwpqdi7JwoGFLHKSoei/oktmGqhwi0vCo1FsxxnoktEkBpnWhTUO9HCgahAWwaQZCGw3Hkx3SCe1vLA0swwcOUqq2E5Pypxb828uaO6Cj3RvY6V4FHjIhAgCx4z6/76Q62xQpPej+b7yeHHGgA=="), B3(I6, 35120, "U2lnRWQyNTUxOSBubyBFZDI1NTE5IGNvbGxpc2lvbnMB"), B3(I6, 35200, "IJMBAAEAAAACAAAAAwAAAAQAAAAFAAAABgAAAAcAAAAIAAAACQ=="), B3(I6, 35248, "xmNjpfh8fITud3eZ9nt7jf/y8g3Wa2u93m9vsZHFxVRgMDBQAgEBA85nZ6lWKyt95/7+GbXX12JNq6vm7HZ2mo/KykUfgoKdicnJQPp9fYfv+voVsllZ645HR8n78PALQa2t7LPU1GdfoqL9Ra+v6iOcnL9TpKT35HJylpvAwFt1t7fC4f39HD2Tk65MJiZqbDY2Wn4/P0H19/cCg8zMT2g0NFxRpaX00eXlNPnx8QjicXGTq9jYc2IxMVMqFRU/CAQEDJXHx1JGIyNlncPDXjAYGCg3lpahCgUFDy+amrUOBwcJJBISNhuAgJvf4uI9zevrJk4nJ2l/srLN6nV1nxIJCRsdg4OeWCwsdDQaGi42Gxst3G5usrRaWu5boKD7pFJS9nY7O0231tZhfbOzzlIpKXvd4+M+Xi8vcROEhJemU1P1udHRaAAAAADB7e0sQCAgYOP8/B95sbHItltb7dRqar6Ny8tGZ76+2XI5OUuUSkremExM1LBYWOiFz89Ku9DQa8Xv7ypPqqrl7fv7FoZDQ8WaTU3XZjMzVRGFhZSKRUXP6fn5EAQCAgb+f3+BoFBQ8Hg8PEQln5+6S6io46JRUfNdo6P+gEBAwAWPj4o/kpKtIZ2dvHA4OEjx9fUEY7y833e2tsGv2tp1QiEhYyAQEDDl//8a/fPzDr/S0m2Bzc1MGAwMFCYTEzXD7Owvvl9f4TWXl6KIRETMLhcXOZPExFdVp6fy/H5+gno9PUfIZGSsul1d5zIZGSvmc3OVwGBgoBmBgZieT0/Ro9zcf0QiImZUKip+O5CQqwuIiIOMRkbKx+7uKWu4uNMoFBQ8p97eebxeXuIWCwsdrdvbdtvg4DtkMjJWdDo6ThQKCh6SSUnbDAYGCkgkJGy4XFzkn8LCXb3T025DrKzvxGJipjmRkagxlZWk0+TkN/J5eYvV5+cyi8jIQ243N1nabW23AY2NjLHV1WScTk7SSamp4NhsbLSsVlb68/T0B8/q6iXKZWWv9Hp6jkeurukQCAgYb7q61fB4eIhKJSVvXC4ucjgcHCRXpqbxc7S0x5fGxlHL6Ogjod3dfOh0dJw+Hx8hlktL3WG9vdwNi4uGD4qKheBwcJB8Pj5CcbW1xMxmZqqQSEjYBgMDBff29gEcDg4SwmFho2o1NV+uV1f5abm50BeGhpGZwcFYOh0dJyeenrnZ4eE46/j4EyuYmLMiEREz0mlpu6nZ2XAHjo6JM5SUpy2bm7Y8Hh4iFYeHksnp6SCHzs5JqlVV/1AoKHil3996A4yMj1mhofgJiYmAGg0NF2W/v9rX5uYxhEJCxtBoaLiCQUHDKZmZsFotLXceDw8Re7Cwy6hUVPxtu7vWLBYWOgoAAAALAAAADAAAAA0AAAAOAAAADwAAABAAAAAR");
                    var PI, vI = (PI = [null, function(A8, I7, g6, B4, Q4) {
                      var o4, c4, D4;
                      return A8 |= 0, I7 |= 0, g6 |= 0, B4 |= 0, Q4 |= 0, r3 = o4 = (c4 = r3) - 128 & -64, E3[o4 >> 2] = 67108863 & (i3[0 | Q4] | i3[Q4 + 1 | 0] << 8 | i3[Q4 + 2 | 0] << 16 | i3[Q4 + 3 | 0] << 24), E3[o4 + 4 >> 2] = (i3[Q4 + 3 | 0] | i3[Q4 + 4 | 0] << 8 | i3[Q4 + 5 | 0] << 16 | i3[Q4 + 6 | 0] << 24) >>> 2 & 67108611, E3[o4 + 8 >> 2] = (i3[Q4 + 6 | 0] | i3[Q4 + 7 | 0] << 8 | i3[Q4 + 8 | 0] << 16 | i3[Q4 + 9 | 0] << 24) >>> 4 & 67092735, E3[o4 + 12 >> 2] = (i3[Q4 + 9 | 0] | i3[Q4 + 10 | 0] << 8 | i3[Q4 + 11 | 0] << 16 | i3[Q4 + 12 | 0] << 24) >>> 6 & 66076671, D4 = i3[Q4 + 12 | 0] | i3[Q4 + 13 | 0] << 8 | i3[Q4 + 14 | 0] << 16 | i3[Q4 + 15 | 0] << 24, E3[o4 + 20 >> 2] = 0, E3[o4 + 24 >> 2] = 0, E3[o4 + 28 >> 2] = 0, E3[o4 + 32 >> 2] = 0, E3[o4 + 36 >> 2] = 0, E3[o4 + 16 >> 2] = D4 >>> 8 & 1048575, E3[o4 + 40 >> 2] = i3[Q4 + 16 | 0] | i3[Q4 + 17 | 0] << 8 | i3[Q4 + 18 | 0] << 16 | i3[Q4 + 19 | 0] << 24, E3[o4 + 44 >> 2] = i3[Q4 + 20 | 0] | i3[Q4 + 21 | 0] << 8 | i3[Q4 + 22 | 0] << 16 | i3[Q4 + 23 | 0] << 24, E3[o4 + 48 >> 2] = i3[Q4 + 24 | 0] | i3[Q4 + 25 | 0] << 8 | i3[Q4 + 26 | 0] << 16 | i3[Q4 + 27 | 0] << 24, Q4 = i3[Q4 + 28 | 0] | i3[Q4 + 29 | 0] << 8 | i3[Q4 + 30 | 0] << 16 | i3[Q4 + 31 | 0] << 24, C3[o4 + 80 | 0] = 0, E3[o4 + 56 >> 2] = 0, E3[o4 + 60 >> 2] = 0, E3[o4 + 52 >> 2] = Q4, QA(o4, I7, g6, B4), yA(o4, A8), r3 = c4, 0;
                    }, function(A8, I7, g6, B4, Q4) {
                      var o4, c4, D4;
                      return A8 |= 0, I7 |= 0, g6 |= 0, B4 |= 0, Q4 |= 0, r3 = o4 = (c4 = r3) - 192 & -64, E3[o4 + 64 >> 2] = 67108863 & (i3[0 | Q4] | i3[Q4 + 1 | 0] << 8 | i3[Q4 + 2 | 0] << 16 | i3[Q4 + 3 | 0] << 24), E3[o4 + 68 >> 2] = (i3[Q4 + 3 | 0] | i3[Q4 + 4 | 0] << 8 | i3[Q4 + 5 | 0] << 16 | i3[Q4 + 6 | 0] << 24) >>> 2 & 67108611, E3[o4 + 72 >> 2] = (i3[Q4 + 6 | 0] | i3[Q4 + 7 | 0] << 8 | i3[Q4 + 8 | 0] << 16 | i3[Q4 + 9 | 0] << 24) >>> 4 & 67092735, E3[o4 + 76 >> 2] = (i3[Q4 + 9 | 0] | i3[Q4 + 10 | 0] << 8 | i3[Q4 + 11 | 0] << 16 | i3[Q4 + 12 | 0] << 24) >>> 6 & 66076671, D4 = i3[Q4 + 12 | 0] | i3[Q4 + 13 | 0] << 8 | i3[Q4 + 14 | 0] << 16 | i3[Q4 + 15 | 0] << 24, E3[o4 + 84 >> 2] = 0, E3[o4 + 88 >> 2] = 0, E3[o4 + 92 >> 2] = 0, E3[o4 + 96 >> 2] = 0, E3[o4 + 100 >> 2] = 0, E3[o4 + 80 >> 2] = D4 >>> 8 & 1048575, E3[o4 + 104 >> 2] = i3[Q4 + 16 | 0] | i3[Q4 + 17 | 0] << 8 | i3[Q4 + 18 | 0] << 16 | i3[Q4 + 19 | 0] << 24, E3[o4 + 108 >> 2] = i3[Q4 + 20 | 0] | i3[Q4 + 21 | 0] << 8 | i3[Q4 + 22 | 0] << 16 | i3[Q4 + 23 | 0] << 24, E3[o4 + 112 >> 2] = i3[Q4 + 24 | 0] | i3[Q4 + 25 | 0] << 8 | i3[Q4 + 26 | 0] << 16 | i3[Q4 + 27 | 0] << 24, Q4 = i3[Q4 + 28 | 0] | i3[Q4 + 29 | 0] << 8 | i3[Q4 + 30 | 0] << 16 | i3[Q4 + 31 | 0] << 24, C3[o4 + 144 | 0] = 0, E3[o4 + 120 >> 2] = 0, E3[o4 + 124 >> 2] = 0, E3[o4 + 116 >> 2] = Q4, QA(Q4 = o4 - -64 | 0, I7, g6, B4), yA(Q4, I7 = o4 + 48 | 0), A8 = rA(A8, I7), r3 = c4, 0 | A8;
                    }, function(A8, I7) {
                      var g6;
                      return I7 |= 0, E3[(A8 |= 0) >> 2] = 67108863 & (i3[0 | I7] | i3[I7 + 1 | 0] << 8 | i3[I7 + 2 | 0] << 16 | i3[I7 + 3 | 0] << 24), E3[A8 + 4 >> 2] = (i3[I7 + 3 | 0] | i3[I7 + 4 | 0] << 8 | i3[I7 + 5 | 0] << 16 | i3[I7 + 6 | 0] << 24) >>> 2 & 67108611, E3[A8 + 8 >> 2] = (i3[I7 + 6 | 0] | i3[I7 + 7 | 0] << 8 | i3[I7 + 8 | 0] << 16 | i3[I7 + 9 | 0] << 24) >>> 4 & 67092735, E3[A8 + 12 >> 2] = (i3[I7 + 9 | 0] | i3[I7 + 10 | 0] << 8 | i3[I7 + 11 | 0] << 16 | i3[I7 + 12 | 0] << 24) >>> 6 & 66076671, g6 = i3[I7 + 12 | 0] | i3[I7 + 13 | 0] << 8 | i3[I7 + 14 | 0] << 16 | i3[I7 + 15 | 0] << 24, E3[A8 + 20 >> 2] = 0, E3[A8 + 24 >> 2] = 0, E3[A8 + 28 >> 2] = 0, E3[A8 + 32 >> 2] = 0, E3[A8 + 36 >> 2] = 0, E3[A8 + 16 >> 2] = g6 >>> 8 & 1048575, E3[A8 + 40 >> 2] = i3[I7 + 16 | 0] | i3[I7 + 17 | 0] << 8 | i3[I7 + 18 | 0] << 16 | i3[I7 + 19 | 0] << 24, E3[A8 + 44 >> 2] = i3[I7 + 20 | 0] | i3[I7 + 21 | 0] << 8 | i3[I7 + 22 | 0] << 16 | i3[I7 + 23 | 0] << 24, E3[A8 + 48 >> 2] = i3[I7 + 24 | 0] | i3[I7 + 25 | 0] << 8 | i3[I7 + 26 | 0] << 16 | i3[I7 + 27 | 0] << 24, I7 = i3[I7 + 28 | 0] | i3[I7 + 29 | 0] << 8 | i3[I7 + 30 | 0] << 16 | i3[I7 + 31 | 0] << 24, C3[A8 + 80 | 0] = 0, E3[A8 + 56 >> 2] = 0, E3[A8 + 60 >> 2] = 0, E3[A8 + 52 >> 2] = I7, 0;
                    }, function(A8, I7, g6, C4) {
                      return QA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0), 0;
                    }, function(A8, I7) {
                      return yA(A8 |= 0, I7 |= 0), 0;
                    }, function(A8, I7, g6) {
                      A8 |= 0, I7 |= 0, g6 |= 0;
                      var B4, Q4 = 0, o4 = 0, c4 = 0, D4 = 0, a4 = 0, y4 = 0, f4 = 0, e4 = 0, w4 = 0, h4 = 0, k4 = 0, n4 = 0, s4 = 0, F4 = 0, S4 = 0, N4 = 0, K4 = 0, _4 = 0, p4 = 0, H4 = 0, G4 = 0, J4 = 0, Y4 = 0, d4 = 0, b4 = 0, P4 = 0, v5 = 0, R4 = 0, L4 = 0, x4 = 0, u4 = 0, m4 = 0, q4 = 0, l3 = 0, z2 = 0, j2 = 0, X2 = 0, O2 = 0, T2 = 0, Z2 = 0, W2 = 0, $2 = 0, AA2 = 0, IA2 = 0, gA2 = 0, CA2 = 0, BA2 = 0, QA2 = 0, EA2 = 0, oA2 = 0, cA2 = 0, DA2 = 0, aA2 = 0, yA2 = 0, fA2 = 0, wA2 = 0, rA2 = 0, tA2 = 0, hA2 = 0, kA2 = 0, nA2 = 0, sA2 = 0, FA2 = 0, SA2 = 0, MA2 = 0, NA2 = 0;
                      for (r3 = B4 = r3 - 368 | 0; k4 = (c4 = i3[g6 + Q4 | 0]) ^ i3[0 | (a4 = Q4 + 33664 | 0)] | k4, h4 = c4 ^ i3[a4 + 192 | 0] | h4, w4 = c4 ^ i3[a4 + 160 | 0] | w4, e4 = c4 ^ i3[a4 + 128 | 0] | e4, D4 = c4 ^ i3[a4 + 96 | 0] | D4, y4 = c4 ^ i3[a4 - -64 | 0] | y4, o4 = c4 ^ i3[a4 + 32 | 0] | o4, 31 != (0 | (Q4 = Q4 + 1 | 0)); ) ;
                      if (Q4 = -1, !(256 & ((255 & ((c4 = 127 ^ (a4 = 127 & i3[g6 + 31 | 0])) | h4)) - 1 | (255 & (c4 | w4)) - 1 | (255 & (c4 | e4)) - 1 | (255 & (87 ^ a4 | D4)) - 1 | (255 & (y4 | a4)) - 1 | (255 & (o4 | a4)) - 1 | (255 & (a4 | k4)) - 1))) {
                        for (Q4 = I7, I7 = i3[I7 + 28 | 0] | i3[I7 + 29 | 0] << 8 | i3[I7 + 30 | 0] << 16 | i3[I7 + 31 | 0] << 24, E3[B4 + 360 >> 2] = i3[Q4 + 24 | 0] | i3[Q4 + 25 | 0] << 8 | i3[Q4 + 26 | 0] << 16 | i3[Q4 + 27 | 0] << 24, E3[B4 + 364 >> 2] = I7, I7 = i3[Q4 + 20 | 0] | i3[Q4 + 21 | 0] << 8 | i3[Q4 + 22 | 0] << 16 | i3[Q4 + 23 | 0] << 24, E3[B4 + 352 >> 2] = i3[Q4 + 16 | 0] | i3[Q4 + 17 | 0] << 8 | i3[Q4 + 18 | 0] << 16 | i3[Q4 + 19 | 0] << 24, E3[B4 + 356 >> 2] = I7, o4 = i3[Q4 + 4 | 0] | i3[Q4 + 5 | 0] << 8 | i3[Q4 + 6 | 0] << 16 | i3[Q4 + 7 | 0] << 24, I7 = i3[0 | Q4] | i3[Q4 + 1 | 0] << 8 | i3[Q4 + 2 | 0] << 16 | i3[Q4 + 3 | 0] << 24, E3[B4 + 336 >> 2] = I7, E3[B4 + 340 >> 2] = o4, o4 = i3[Q4 + 12 | 0] | i3[Q4 + 13 | 0] << 8 | i3[Q4 + 14 | 0] << 16 | i3[Q4 + 15 | 0] << 24, E3[B4 + 344 >> 2] = i3[Q4 + 8 | 0] | i3[Q4 + 9 | 0] << 8 | i3[Q4 + 10 | 0] << 16 | i3[Q4 + 11 | 0] << 24, E3[B4 + 348 >> 2] = o4, C3[B4 + 336 | 0] = 248 & I7, C3[B4 + 367 | 0] = 63 & i3[B4 + 367 | 0] | 64, V(B4 + 288 | 0, g6), E3[B4 + 260 >> 2] = 0, E3[B4 + 264 >> 2] = 0, E3[B4 + 268 >> 2] = 0, E3[B4 + 272 >> 2] = 0, E3[B4 + 276 >> 2] = 0, E3[B4 + 208 >> 2] = 0, E3[B4 + 212 >> 2] = 0, E3[B4 + 216 >> 2] = 0, E3[B4 + 220 >> 2] = 0, E3[B4 + 224 >> 2] = 0, E3[B4 + 228 >> 2] = 0, I7 = E3[B4 + 308 >> 2], E3[B4 + 160 >> 2] = E3[B4 + 304 >> 2], E3[B4 + 164 >> 2] = I7, I7 = E3[B4 + 316 >> 2], E3[B4 + 168 >> 2] = E3[B4 + 312 >> 2], E3[B4 + 172 >> 2] = I7, I7 = E3[B4 + 324 >> 2], E3[B4 + 176 >> 2] = E3[B4 + 320 >> 2], E3[B4 + 180 >> 2] = I7, E3[B4 + 244 >> 2] = 0, E3[B4 + 248 >> 2] = 0, E3[B4 + 240 >> 2] = 1, E3[B4 + 252 >> 2] = 0, E3[B4 + 256 >> 2] = 0, E3[B4 + 192 >> 2] = 0, E3[B4 + 196 >> 2] = 0, E3[B4 + 200 >> 2] = 0, E3[B4 + 204 >> 2] = 0, I7 = E3[B4 + 292 >> 2], E3[B4 + 144 >> 2] = E3[B4 + 288 >> 2], E3[B4 + 148 >> 2] = I7, I7 = E3[B4 + 300 >> 2], E3[B4 + 152 >> 2] = E3[B4 + 296 >> 2], E3[B4 + 156 >> 2] = I7, E3[B4 + 116 >> 2] = 0, E3[B4 + 120 >> 2] = 0, E3[B4 + 124 >> 2] = 0, E3[B4 + 128 >> 2] = 0, E3[B4 + 132 >> 2] = 0, E3[B4 + 100 >> 2] = 0, E3[B4 + 104 >> 2] = 0, E3[B4 + 96 >> 2] = 1, E3[B4 + 108 >> 2] = 0, E3[B4 + 112 >> 2] = 0, g6 = 254; W2 = E3[B4 + 276 >> 2], c4 = E3[B4 + 180 >> 2], $2 = E3[B4 + 96 >> 2], AA2 = E3[B4 + 192 >> 2], IA2 = E3[B4 + 144 >> 2], gA2 = E3[B4 + 240 >> 2], CA2 = E3[B4 + 100 >> 2], BA2 = E3[B4 + 196 >> 2], QA2 = E3[B4 + 148 >> 2], EA2 = E3[B4 + 244 >> 2], J4 = E3[B4 + 104 >> 2], oA2 = E3[B4 + 200 >> 2], Y4 = E3[B4 + 152 >> 2], cA2 = E3[B4 + 248 >> 2], P4 = E3[B4 + 108 >> 2], DA2 = E3[B4 + 204 >> 2], v5 = E3[B4 + 156 >> 2], aA2 = E3[B4 + 252 >> 2], d4 = E3[B4 + 112 >> 2], yA2 = E3[B4 + 208 >> 2], H4 = E3[B4 + 160 >> 2], fA2 = E3[B4 + 256 >> 2], k4 = E3[B4 + 116 >> 2], wA2 = E3[B4 + 212 >> 2], f4 = E3[B4 + 164 >> 2], rA2 = E3[B4 + 260 >> 2], h4 = E3[B4 + 120 >> 2], tA2 = E3[B4 + 216 >> 2], w4 = E3[B4 + 168 >> 2], hA2 = E3[B4 + 264 >> 2], e4 = E3[B4 + 124 >> 2], kA2 = E3[B4 + 220 >> 2], D4 = E3[B4 + 172 >> 2], nA2 = E3[B4 + 268 >> 2], y4 = E3[B4 + 128 >> 2], sA2 = E3[B4 + 224 >> 2], o4 = E3[B4 + 176 >> 2], p4 = E3[B4 + 272 >> 2], FA2 = g6, G4 = (N4 = (I7 = 0 - ((I7 = Z2) ^ (Z2 = i3[(SA2 = B4 + 336 | 0) + (g6 >>> 3 | 0) | 0] >>> (7 & g6) & 1)) | 0) & ((Q4 = E3[B4 + 132 >> 2]) ^ (j2 = E3[B4 + 228 >> 2]))) ^ Q4, E3[B4 + 132 >> 2] = G4, X2 = c4 ^ (K4 = I7 & (c4 ^ W2)), E3[B4 + 84 >> 2] = X2 - G4, b4 = y4 ^ (s4 = I7 & (y4 ^ sA2)), E3[B4 + 128 >> 2] = b4, O2 = (_4 = I7 & (o4 ^ p4)) ^ o4, E3[B4 + 80 >> 2] = O2 - b4, L4 = e4 ^ (F4 = I7 & (e4 ^ kA2)), E3[B4 + 124 >> 2] = L4, MA2 = D4 ^ (S4 = I7 & (D4 ^ nA2)), E3[B4 + 76 >> 2] = MA2 - L4, x4 = h4 ^ (n4 = I7 & (h4 ^ tA2)), E3[B4 + 120 >> 2] = x4, NA2 = w4 ^ (a4 = I7 & (w4 ^ hA2)), E3[B4 + 72 >> 2] = NA2 - x4, u4 = k4 ^ (c4 = I7 & (k4 ^ wA2)), E3[B4 + 116 >> 2] = u4, m4 = f4 ^ (k4 = I7 & (f4 ^ rA2)), E3[B4 + 68 >> 2] = m4 - u4, q4 = d4 ^ (h4 = I7 & (d4 ^ yA2)), E3[B4 + 112 >> 2] = q4, R4 = H4 ^ (w4 = I7 & (H4 ^ fA2)), E3[B4 + 64 >> 2] = R4 - q4, l3 = P4 ^ (e4 = I7 & (P4 ^ DA2)), E3[B4 + 108 >> 2] = l3, T2 = v5 ^ (D4 = I7 & (v5 ^ aA2)), E3[B4 + 60 >> 2] = T2 - l3, z2 = J4 ^ (y4 = I7 & (J4 ^ oA2)), E3[B4 + 104 >> 2] = z2, P4 = Y4 ^ (o4 = I7 & (Y4 ^ cA2)), E3[B4 + 56 >> 2] = P4 - z2, J4 = CA2 ^ (Q4 = I7 & (CA2 ^ BA2)), E3[B4 + 100 >> 2] = J4, v5 = QA2 ^ (g6 = I7 & (QA2 ^ EA2)), E3[B4 + 52 >> 2] = v5 - J4, Y4 = $2 ^ (d4 = I7 & ($2 ^ AA2)), E3[B4 + 96 >> 2] = Y4, H4 = (I7 &= IA2 ^ gA2) ^ IA2, E3[B4 + 48 >> 2] = H4 - Y4, f4 = K4 ^ W2, N4 ^= j2, E3[B4 + 36 >> 2] = f4 - N4, K4 = _4 ^ p4, s4 ^= sA2, E3[B4 + 32 >> 2] = K4 - s4, _4 = S4 ^ nA2, F4 ^= kA2, E3[B4 + 28 >> 2] = _4 - F4, S4 = a4 ^ hA2, n4 ^= tA2, E3[B4 + 24 >> 2] = S4 - n4, a4 = k4 ^ rA2, c4 ^= wA2, E3[B4 + 20 >> 2] = a4 - c4, k4 = w4 ^ fA2, h4 ^= yA2, E3[B4 + 16 >> 2] = k4 - h4, w4 = D4 ^ aA2, e4 ^= DA2, E3[B4 + 12 >> 2] = w4 - e4, D4 = o4 ^ cA2, y4 ^= oA2, E3[B4 + 8 >> 2] = D4 - y4, o4 = g6 ^ EA2, Q4 ^= BA2, E3[B4 + 4 >> 2] = o4 - Q4, g6 = I7 ^ gA2, I7 = d4 ^ AA2, E3[B4 >> 2] = g6 - I7, E3[B4 + 276 >> 2] = f4 + N4, E3[B4 + 272 >> 2] = K4 + s4, E3[B4 + 268 >> 2] = F4 + _4, E3[B4 + 264 >> 2] = n4 + S4, E3[B4 + 260 >> 2] = c4 + a4, E3[B4 + 256 >> 2] = h4 + k4, E3[B4 + 248 >> 2] = D4 + y4, E3[B4 + 244 >> 2] = Q4 + o4, E3[B4 + 240 >> 2] = I7 + g6, E3[B4 + 252 >> 2] = e4 + w4, E3[B4 + 228 >> 2] = G4 + X2, E3[B4 + 224 >> 2] = b4 + O2, E3[B4 + 220 >> 2] = L4 + MA2, E3[B4 + 216 >> 2] = x4 + NA2, E3[B4 + 212 >> 2] = u4 + m4, E3[B4 + 208 >> 2] = R4 + q4, E3[B4 + 204 >> 2] = l3 + T2, E3[B4 + 200 >> 2] = P4 + z2, E3[B4 + 196 >> 2] = J4 + v5, E3[B4 + 192 >> 2] = H4 + Y4, M3(X2 = B4 + 96 | 0, b4 = B4 + 48 | 0, G4 = B4 + 240 | 0), M3(p4 = B4 + 192 | 0, p4, B4), U3(b4, B4), U3(B4, G4), f4 = E3[B4 + 192 >> 2], N4 = E3[B4 + 96 >> 2], K4 = E3[B4 + 196 >> 2], s4 = E3[B4 + 100 >> 2], _4 = E3[B4 + 200 >> 2], F4 = E3[B4 + 104 >> 2], S4 = E3[B4 + 204 >> 2], n4 = E3[B4 + 108 >> 2], a4 = E3[B4 + 208 >> 2], c4 = E3[B4 + 112 >> 2], k4 = E3[B4 + 212 >> 2], h4 = E3[B4 + 116 >> 2], w4 = E3[B4 + 216 >> 2], e4 = E3[B4 + 120 >> 2], D4 = E3[B4 + 220 >> 2], y4 = E3[B4 + 124 >> 2], o4 = E3[B4 + 224 >> 2], Q4 = E3[B4 + 128 >> 2], g6 = E3[B4 + 228 >> 2], I7 = E3[B4 + 132 >> 2], E3[B4 + 180 >> 2] = g6 + I7, E3[B4 + 176 >> 2] = Q4 + o4, E3[B4 + 172 >> 2] = D4 + y4, E3[B4 + 168 >> 2] = e4 + w4, E3[B4 + 164 >> 2] = h4 + k4, E3[B4 + 160 >> 2] = c4 + a4, E3[B4 + 156 >> 2] = n4 + S4, E3[B4 + 152 >> 2] = F4 + _4, E3[B4 + 148 >> 2] = K4 + s4, E3[B4 + 144 >> 2] = f4 + N4, E3[B4 + 228 >> 2] = I7 - g6, E3[B4 + 224 >> 2] = Q4 - o4, E3[B4 + 220 >> 2] = y4 - D4, E3[B4 + 216 >> 2] = e4 - w4, E3[B4 + 212 >> 2] = h4 - k4, E3[B4 + 208 >> 2] = c4 - a4, E3[B4 + 204 >> 2] = n4 - S4, E3[B4 + 200 >> 2] = F4 - _4, E3[B4 + 196 >> 2] = s4 - K4, E3[B4 + 192 >> 2] = N4 - f4, M3(G4, B4, b4), L4 = E3[B4 + 52 >> 2], n4 = E3[B4 + 4 >> 2], x4 = E3[B4 + 56 >> 2], a4 = E3[B4 + 8 >> 2], u4 = E3[B4 + 64 >> 2], w4 = E3[B4 + 16 >> 2], q4 = E3[B4 + 60 >> 2], e4 = E3[B4 + 12 >> 2], l3 = E3[B4 + 72 >> 2], D4 = E3[B4 + 24 >> 2], z2 = E3[B4 + 68 >> 2], y4 = E3[B4 + 20 >> 2], J4 = E3[B4 + 80 >> 2], o4 = E3[B4 + 32 >> 2], Y4 = E3[B4 + 76 >> 2], Q4 = E3[B4 + 28 >> 2], j2 = E3[B4 + 84 >> 2], I7 = E3[B4 + 36 >> 2], O2 = E3[B4 + 48 >> 2], g6 = E3[B4 >> 2] - O2 | 0, E3[B4 >> 2] = g6, I7 = I7 - j2 | 0, E3[B4 + 36 >> 2] = I7, d4 = Q4 - Y4 | 0, E3[B4 + 28 >> 2] = d4, H4 = o4 - J4 | 0, E3[B4 + 32 >> 2] = H4, c4 = y4 - z2 | 0, E3[B4 + 20 >> 2] = c4, k4 = D4 - l3 | 0, E3[B4 + 24 >> 2] = k4, h4 = e4 - q4 | 0, E3[B4 + 12 >> 2] = h4, w4 = w4 - u4 | 0, E3[B4 + 16 >> 2] = w4, e4 = a4 - x4 | 0, E3[B4 + 8 >> 2] = e4, o4 = n4 - L4 | 0, E3[B4 + 4 >> 2] = o4, U3(p4, p4), I7 = PA(I7, I7 >> 31, 121666, 0), Q4 = t3, T2 = I7, I7 = PA((33554431 & (Q4 = (f4 = I7 + 16777216 | 0) >>> 0 < 16777216 ? Q4 + 1 | 0 : Q4)) << 7 | f4 >>> 25, Q4 >> 25, 19, 0), y4 = t3, Q4 = I7, I7 = PA(g6, g6 >> 31, 121666, 0), R4 = t3 + y4 | 0, I7 = I7 >>> 0 > (Q4 = Q4 + I7 | 0) >>> 0 ? R4 + 1 | 0 : R4, g6 = (D4 = Q4 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7, N4 = Q4 - (-67108864 & D4) | 0, E3[B4 + 96 >> 2] = N4, y4 = PA(o4, o4 >> 31, 121666, 0), Q4 = t3, Q4 = (o4 = y4 + 16777216 | 0) >>> 0 < 16777216 ? Q4 + 1 | 0 : Q4, K4 = (y4 - (-33554432 & o4) | 0) + ((67108863 & g6) << 6 | D4 >>> 26) | 0, E3[B4 + 100 >> 2] = K4, R4 = (I7 = Q4) >> 25, Q4 = (33554431 & I7) << 7 | o4 >>> 25, g6 = PA(e4, e4 >> 31, 121666, 0) + Q4 | 0, I7 = R4 + t3 | 0, I7 = g6 >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, y4 = (s4 = g6 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7, _4 = g6 - (-67108864 & s4) | 0, E3[B4 + 104 >> 2] = _4, Q4 = PA(w4, w4 >> 31, 121666, 0), o4 = t3, g6 = PA(h4, h4 >> 31, 121666, 0), I7 = t3, m4 = Q4, P4 = g6, Q4 = (33554431 & (I7 = (F4 = g6 + 16777216 | 0) >>> 0 < 16777216 ? I7 + 1 | 0 : I7)) << 7 | F4 >>> 25, I7 = (I7 >> 25) + o4 | 0, I7 = (g6 = m4 + Q4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, o4 = (S4 = g6 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7, n4 = g6 - (-67108864 & S4) | 0, E3[B4 + 112 >> 2] = n4, Q4 = PA(k4, k4 >> 31, 121666, 0), D4 = t3, g6 = PA(c4, c4 >> 31, 121666, 0), I7 = t3, m4 = Q4, v5 = g6, Q4 = (33554431 & (I7 = (a4 = g6 + 16777216 | 0) >>> 0 < 16777216 ? I7 + 1 | 0 : I7)) << 7 | a4 >>> 25, I7 = (I7 >> 25) + D4 | 0, I7 = (g6 = m4 + Q4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = (c4 = g6 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7, k4 = g6 - (-67108864 & c4) | 0, E3[B4 + 120 >> 2] = k4, D4 = PA(H4, H4 >> 31, 121666, 0), e4 = t3, g6 = PA(d4, d4 >> 31, 121666, 0), I7 = t3, H4 = g6, g6 = (33554431 & (I7 = (h4 = g6 + 16777216 | 0) >>> 0 < 16777216 ? I7 + 1 | 0 : I7)) << 7 | h4 >>> 25, I7 = (I7 >> 25) + e4 | 0, I7 = g6 >>> 0 > (D4 = g6 + D4 | 0) >>> 0 ? I7 + 1 | 0 : I7, g6 = (w4 = D4 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7, e4 = D4 - (-67108864 & w4) | 0, E3[B4 + 128 >> 2] = e4, D4 = (y4 = P4 + ((67108863 & y4) << 6 | s4 >>> 26) | 0) - (-33554432 & F4) | 0, E3[B4 + 108 >> 2] = D4, y4 = (o4 = v5 + ((67108863 & o4) << 6 | S4 >>> 26) | 0) - (-33554432 & a4) | 0, E3[B4 + 116 >> 2] = y4, o4 = (I7 = H4 + ((67108863 & Q4) << 6 | c4 >>> 26) | 0) - (-33554432 & h4) | 0, E3[B4 + 124 >> 2] = o4, g6 = (g6 = T2 + ((67108863 & g6) << 6 | w4 >>> 26) | 0) - (-33554432 & f4) | 0, E3[B4 + 132 >> 2] = g6, U3(I7 = B4 + 144 | 0, I7), E3[B4 + 84 >> 2] = g6 + j2, E3[B4 + 80 >> 2] = e4 + J4, E3[B4 + 76 >> 2] = o4 + Y4, E3[B4 + 72 >> 2] = k4 + l3, E3[B4 + 68 >> 2] = y4 + z2, E3[B4 + 64 >> 2] = n4 + u4, E3[B4 + 60 >> 2] = D4 + q4, E3[B4 + 56 >> 2] = _4 + x4, E3[B4 + 52 >> 2] = K4 + L4, E3[B4 + 48 >> 2] = N4 + O2, g6 = FA2 - 1 | 0, M3(X2, B4 + 288 | 0, p4), M3(p4, B4, b4), FA2; ) ;
                        k4 = E3[B4 + 144 >> 2], N4 = E3[B4 + 240 >> 2], h4 = E3[B4 + 148 >> 2], K4 = E3[B4 + 244 >> 2], w4 = E3[B4 + 152 >> 2], s4 = E3[B4 + 248 >> 2], e4 = E3[B4 + 156 >> 2], _4 = E3[B4 + 252 >> 2], D4 = E3[B4 + 160 >> 2], F4 = E3[B4 + 256 >> 2], y4 = E3[B4 + 164 >> 2], S4 = E3[B4 + 260 >> 2], o4 = E3[B4 + 168 >> 2], n4 = E3[B4 + 264 >> 2], Q4 = E3[B4 + 172 >> 2], a4 = E3[B4 + 268 >> 2], g6 = E3[B4 + 176 >> 2], c4 = E3[B4 + 272 >> 2], f4 = 0 - Z2 | 0, I7 = E3[B4 + 276 >> 2], E3[B4 + 276 >> 2] = f4 & (I7 ^ E3[B4 + 180 >> 2]) ^ I7, E3[B4 + 272 >> 2] = c4 ^ f4 & (g6 ^ c4), E3[B4 + 268 >> 2] = a4 ^ f4 & (Q4 ^ a4), E3[B4 + 264 >> 2] = n4 ^ f4 & (o4 ^ n4), E3[B4 + 260 >> 2] = S4 ^ f4 & (y4 ^ S4), E3[B4 + 256 >> 2] = F4 ^ f4 & (D4 ^ F4), E3[B4 + 252 >> 2] = _4 ^ f4 & (e4 ^ _4), E3[B4 + 248 >> 2] = s4 ^ f4 & (w4 ^ s4), E3[B4 + 244 >> 2] = K4 ^ f4 & (h4 ^ K4), E3[B4 + 240 >> 2] = N4 ^ f4 & (k4 ^ N4), N4 = E3[B4 + 192 >> 2], k4 = E3[B4 + 96 >> 2], K4 = E3[B4 + 196 >> 2], h4 = E3[B4 + 100 >> 2], s4 = E3[B4 + 200 >> 2], w4 = E3[B4 + 104 >> 2], _4 = E3[B4 + 204 >> 2], e4 = E3[B4 + 108 >> 2], F4 = E3[B4 + 208 >> 2], D4 = E3[B4 + 112 >> 2], S4 = E3[B4 + 212 >> 2], y4 = E3[B4 + 116 >> 2], n4 = E3[B4 + 216 >> 2], o4 = E3[B4 + 120 >> 2], a4 = E3[B4 + 220 >> 2], Q4 = E3[B4 + 124 >> 2], c4 = E3[B4 + 224 >> 2], g6 = E3[B4 + 128 >> 2], I7 = E3[B4 + 228 >> 2], E3[B4 + 228 >> 2] = f4 & (I7 ^ E3[B4 + 132 >> 2]) ^ I7, E3[B4 + 224 >> 2] = c4 ^ f4 & (g6 ^ c4), E3[B4 + 220 >> 2] = a4 ^ f4 & (Q4 ^ a4), E3[B4 + 216 >> 2] = n4 ^ f4 & (o4 ^ n4), E3[B4 + 212 >> 2] = S4 ^ f4 & (y4 ^ S4), E3[B4 + 208 >> 2] = F4 ^ f4 & (D4 ^ F4), E3[B4 + 204 >> 2] = _4 ^ f4 & (e4 ^ _4), E3[B4 + 200 >> 2] = s4 ^ f4 & (w4 ^ s4), E3[B4 + 196 >> 2] = K4 ^ f4 & (h4 ^ K4), E3[B4 + 192 >> 2] = N4 ^ f4 & (k4 ^ N4), iA(p4, p4), M3(G4, G4, p4), eA(A8, G4), MI(SA2, 32), Q4 = 0;
                      }
                      return r3 = B4 + 368 | 0, 0 | Q4;
                    }, function(A8, I7) {
                      var g6, B4, Q4, o4, c4, D4, a4, y4, f4, e4, w4, t4, h4, k4, n4, s4, F4, S4, N4, K4;
                      return I7 |= 0, r3 = g6 = r3 - 304 | 0, C3[0 | (A8 |= 0)] = i3[0 | I7], C3[A8 + 1 | 0] = i3[I7 + 1 | 0], C3[A8 + 2 | 0] = i3[I7 + 2 | 0], C3[A8 + 3 | 0] = i3[I7 + 3 | 0], C3[A8 + 4 | 0] = i3[I7 + 4 | 0], C3[A8 + 5 | 0] = i3[I7 + 5 | 0], C3[A8 + 6 | 0] = i3[I7 + 6 | 0], C3[A8 + 7 | 0] = i3[I7 + 7 | 0], C3[A8 + 8 | 0] = i3[I7 + 8 | 0], C3[A8 + 9 | 0] = i3[I7 + 9 | 0], C3[A8 + 10 | 0] = i3[I7 + 10 | 0], C3[A8 + 11 | 0] = i3[I7 + 11 | 0], C3[A8 + 12 | 0] = i3[I7 + 12 | 0], C3[A8 + 13 | 0] = i3[I7 + 13 | 0], C3[A8 + 14 | 0] = i3[I7 + 14 | 0], C3[A8 + 15 | 0] = i3[I7 + 15 | 0], C3[A8 + 16 | 0] = i3[I7 + 16 | 0], C3[A8 + 17 | 0] = i3[I7 + 17 | 0], C3[A8 + 18 | 0] = i3[I7 + 18 | 0], C3[A8 + 19 | 0] = i3[I7 + 19 | 0], C3[A8 + 20 | 0] = i3[I7 + 20 | 0], C3[A8 + 21 | 0] = i3[I7 + 21 | 0], C3[A8 + 22 | 0] = i3[I7 + 22 | 0], C3[A8 + 23 | 0] = i3[I7 + 23 | 0], C3[A8 + 24 | 0] = i3[I7 + 24 | 0], C3[A8 + 25 | 0] = i3[I7 + 25 | 0], C3[A8 + 26 | 0] = i3[I7 + 26 | 0], C3[A8 + 27 | 0] = i3[I7 + 27 | 0], C3[A8 + 28 | 0] = i3[I7 + 28 | 0], C3[A8 + 29 | 0] = i3[I7 + 29 | 0], C3[A8 + 30 | 0] = i3[I7 + 30 | 0], I7 = i3[I7 + 31 | 0], C3[0 | A8] = 248 & i3[0 | A8], C3[A8 + 31 | 0] = 63 & I7 | 64, Z(g6 + 48 | 0, A8), I7 = E3[g6 + 128 >> 2], B4 = E3[g6 + 88 >> 2], Q4 = E3[g6 + 132 >> 2], o4 = E3[g6 + 92 >> 2], c4 = E3[g6 + 136 >> 2], D4 = E3[g6 + 96 >> 2], a4 = E3[g6 + 140 >> 2], y4 = E3[g6 + 100 >> 2], f4 = E3[g6 + 144 >> 2], e4 = E3[g6 + 104 >> 2], w4 = E3[g6 + 148 >> 2], t4 = E3[g6 + 108 >> 2], h4 = E3[g6 + 152 >> 2], k4 = E3[g6 + 112 >> 2], n4 = E3[g6 + 156 >> 2], s4 = E3[g6 + 116 >> 2], F4 = E3[g6 + 160 >> 2], S4 = E3[g6 + 120 >> 2], N4 = E3[g6 + 124 >> 2], K4 = E3[g6 + 164 >> 2], E3[g6 + 292 >> 2] = N4 + K4, E3[g6 + 288 >> 2] = F4 + S4, E3[g6 + 284 >> 2] = n4 + s4, E3[g6 + 280 >> 2] = h4 + k4, E3[g6 + 276 >> 2] = w4 + t4, E3[g6 + 272 >> 2] = f4 + e4, E3[g6 + 268 >> 2] = a4 + y4, E3[g6 + 264 >> 2] = c4 + D4, E3[g6 + 260 >> 2] = Q4 + o4, E3[g6 + 256 >> 2] = I7 + B4, E3[g6 + 244 >> 2] = K4 - N4, E3[g6 + 240 >> 2] = F4 - S4, E3[g6 + 236 >> 2] = n4 - s4, E3[g6 + 232 >> 2] = h4 - k4, E3[g6 + 228 >> 2] = w4 - t4, E3[g6 + 224 >> 2] = f4 - e4, E3[g6 + 220 >> 2] = a4 - y4, E3[g6 + 216 >> 2] = c4 - D4, E3[g6 + 212 >> 2] = Q4 - o4, E3[g6 + 208 >> 2] = I7 - B4, iA(I7 = g6 + 208 | 0, I7), M3(g6, g6 + 256 | 0, I7), eA(A8, g6), r3 = g6 + 304 | 0, 0;
                    }, function(A8, I7, g6, B4, Q4) {
                      A8 |= 0, B4 |= 0, Q4 |= 0;
                      var o4, c4 = 0, D4 = 0, a4 = 0, y4 = 0;
                      if (r3 = o4 = r3 - 112 | 0, (I7 |= 0) | (g6 |= 0)) {
                        c4 = i3[Q4 + 28 | 0] | i3[Q4 + 29 | 0] << 8 | i3[Q4 + 30 | 0] << 16 | i3[Q4 + 31 | 0] << 24, E3[o4 + 24 >> 2] = i3[Q4 + 24 | 0] | i3[Q4 + 25 | 0] << 8 | i3[Q4 + 26 | 0] << 16 | i3[Q4 + 27 | 0] << 24, E3[o4 + 28 >> 2] = c4, c4 = i3[Q4 + 20 | 0] | i3[Q4 + 21 | 0] << 8 | i3[Q4 + 22 | 0] << 16 | i3[Q4 + 23 | 0] << 24, E3[o4 + 16 >> 2] = i3[Q4 + 16 | 0] | i3[Q4 + 17 | 0] << 8 | i3[Q4 + 18 | 0] << 16 | i3[Q4 + 19 | 0] << 24, E3[o4 + 20 >> 2] = c4, c4 = i3[Q4 + 4 | 0] | i3[Q4 + 5 | 0] << 8 | i3[Q4 + 6 | 0] << 16 | i3[Q4 + 7 | 0] << 24, E3[o4 >> 2] = i3[0 | Q4] | i3[Q4 + 1 | 0] << 8 | i3[Q4 + 2 | 0] << 16 | i3[Q4 + 3 | 0] << 24, E3[o4 + 4 >> 2] = c4, c4 = i3[Q4 + 12 | 0] | i3[Q4 + 13 | 0] << 8 | i3[Q4 + 14 | 0] << 16 | i3[Q4 + 15 | 0] << 24, E3[o4 + 8 >> 2] = i3[Q4 + 8 | 0] | i3[Q4 + 9 | 0] << 8 | i3[Q4 + 10 | 0] << 16 | i3[Q4 + 11 | 0] << 24, E3[o4 + 12 >> 2] = c4, Q4 = i3[0 | B4] | i3[B4 + 1 | 0] << 8 | i3[B4 + 2 | 0] << 16 | i3[B4 + 3 | 0] << 24, B4 = i3[B4 + 4 | 0] | i3[B4 + 5 | 0] << 8 | i3[B4 + 6 | 0] << 16 | i3[B4 + 7 | 0] << 24, E3[o4 + 104 >> 2] = 0, E3[o4 + 108 >> 2] = 0, E3[o4 + 96 >> 2] = Q4, E3[o4 + 100 >> 2] = B4;
                        A: {
                          if (!g6 & I7 >>> 0 >= 64 | g6) {
                            for (; l2(A8, o4 + 96 | 0, o4), B4 = i3[o4 + 104 | 0] + 1 | 0, C3[o4 + 104 | 0] = B4, B4 = i3[o4 + 105 | 0] + (B4 >>> 8 | 0) | 0, C3[o4 + 105 | 0] = B4, B4 = i3[o4 + 106 | 0] + (B4 >>> 8 | 0) | 0, C3[o4 + 106 | 0] = B4, B4 = i3[o4 + 107 | 0] + (B4 >>> 8 | 0) | 0, C3[o4 + 107 | 0] = B4, B4 = i3[o4 + 108 | 0] + (B4 >>> 8 | 0) | 0, C3[o4 + 108 | 0] = B4, B4 = i3[o4 + 109 | 0] + (B4 >>> 8 | 0) | 0, C3[o4 + 109 | 0] = B4, B4 = i3[o4 + 110 | 0] + (B4 >>> 8 | 0) | 0, C3[o4 + 110 | 0] = B4, C3[o4 + 111 | 0] = i3[o4 + 111 | 0] + (B4 >>> 8 | 0), A8 = A8 - -64 | 0, g6 = g6 - 1 | 0, !(g6 = (I7 = I7 + -64 | 0) >>> 0 < 4294967232 ? g6 + 1 | 0 : g6) & I7 >>> 0 > 63 | g6; ) ;
                            if (!(I7 | g6)) break A;
                          }
                          if (B4 = 0, l2(o4 + 32 | 0, o4 + 96 | 0, o4), c4 = 3 & I7, Q4 = 0, !g6 & I7 >>> 0 >= 4 | g6) for (g6 = 60 & I7, I7 = 0; D4 = a4 = o4 + 32 | 0, C3[A8 + Q4 | 0] = i3[D4 + Q4 | 0], C3[(y4 = 1 | Q4) + A8 | 0] = i3[D4 + y4 | 0], C3[(D4 = 2 | Q4) + A8 | 0] = i3[D4 + a4 | 0], C3[(D4 = 3 | Q4) + A8 | 0] = i3[D4 + (o4 + 32 | 0) | 0], Q4 = Q4 + 4 | 0, (0 | g6) != (0 | (I7 = I7 + 4 | 0)); ) ;
                          if (c4) for (; C3[A8 + Q4 | 0] = i3[(o4 + 32 | 0) + Q4 | 0], Q4 = Q4 + 1 | 0, (0 | c4) != (0 | (B4 = B4 + 1 | 0)); ) ;
                        }
                        MI(o4 + 32 | 0, 64), MI(o4, 32);
                      }
                      return r3 = o4 + 112 | 0, 0;
                    }, function(A8, I7, g6, B4, Q4, o4, c4, D4) {
                      A8 |= 0, I7 |= 0, Q4 |= 0, o4 |= 0, c4 |= 0, D4 |= 0;
                      var a4, y4 = 0;
                      if (r3 = a4 = r3 - 112 | 0, (g6 |= 0) | (B4 |= 0)) {
                        y4 = i3[D4 + 28 | 0] | i3[D4 + 29 | 0] << 8 | i3[D4 + 30 | 0] << 16 | i3[D4 + 31 | 0] << 24, E3[a4 + 24 >> 2] = i3[D4 + 24 | 0] | i3[D4 + 25 | 0] << 8 | i3[D4 + 26 | 0] << 16 | i3[D4 + 27 | 0] << 24, E3[a4 + 28 >> 2] = y4, y4 = i3[D4 + 20 | 0] | i3[D4 + 21 | 0] << 8 | i3[D4 + 22 | 0] << 16 | i3[D4 + 23 | 0] << 24, E3[a4 + 16 >> 2] = i3[D4 + 16 | 0] | i3[D4 + 17 | 0] << 8 | i3[D4 + 18 | 0] << 16 | i3[D4 + 19 | 0] << 24, E3[a4 + 20 >> 2] = y4, y4 = i3[D4 + 4 | 0] | i3[D4 + 5 | 0] << 8 | i3[D4 + 6 | 0] << 16 | i3[D4 + 7 | 0] << 24, E3[a4 >> 2] = i3[0 | D4] | i3[D4 + 1 | 0] << 8 | i3[D4 + 2 | 0] << 16 | i3[D4 + 3 | 0] << 24, E3[a4 + 4 >> 2] = y4, y4 = i3[D4 + 12 | 0] | i3[D4 + 13 | 0] << 8 | i3[D4 + 14 | 0] << 16 | i3[D4 + 15 | 0] << 24, E3[a4 + 8 >> 2] = i3[D4 + 8 | 0] | i3[D4 + 9 | 0] << 8 | i3[D4 + 10 | 0] << 16 | i3[D4 + 11 | 0] << 24, E3[a4 + 12 >> 2] = y4, D4 = i3[Q4 + 4 | 0] | i3[Q4 + 5 | 0] << 8 | i3[Q4 + 6 | 0] << 16 | i3[Q4 + 7 | 0] << 24, E3[a4 + 96 >> 2] = i3[0 | Q4] | i3[Q4 + 1 | 0] << 8 | i3[Q4 + 2 | 0] << 16 | i3[Q4 + 3 | 0] << 24, E3[a4 + 100 >> 2] = D4, C3[a4 + 104 | 0] = o4, C3[a4 + 111 | 0] = c4 >>> 24, C3[a4 + 110 | 0] = c4 >>> 16, C3[a4 + 109 | 0] = c4 >>> 8, C3[a4 + 108 | 0] = c4, C3[a4 + 107 | 0] = (16777215 & c4) << 8 | o4 >>> 24, C3[a4 + 106 | 0] = (65535 & c4) << 16 | o4 >>> 16, C3[a4 + 105 | 0] = (255 & c4) << 24 | o4 >>> 8;
                        A: {
                          if (!B4 & g6 >>> 0 >= 64 | B4) {
                            for (; ; ) {
                              for (D4 = 0, l2(a4 + 32 | 0, a4 + 96 | 0, a4); o4 = a4 + 32 | 0, C3[A8 + D4 | 0] = i3[o4 + D4 | 0] ^ i3[I7 + D4 | 0], C3[(Q4 = 1 | D4) + A8 | 0] = i3[Q4 + o4 | 0] ^ i3[I7 + Q4 | 0], 64 != (0 | (D4 = D4 + 2 | 0)); ) ;
                              if (Q4 = i3[a4 + 104 | 0] + 1 | 0, C3[a4 + 104 | 0] = Q4, Q4 = i3[a4 + 105 | 0] + (Q4 >>> 8 | 0) | 0, C3[a4 + 105 | 0] = Q4, Q4 = i3[a4 + 106 | 0] + (Q4 >>> 8 | 0) | 0, C3[a4 + 106 | 0] = Q4, Q4 = i3[a4 + 107 | 0] + (Q4 >>> 8 | 0) | 0, C3[a4 + 107 | 0] = Q4, Q4 = i3[a4 + 108 | 0] + (Q4 >>> 8 | 0) | 0, C3[a4 + 108 | 0] = Q4, Q4 = i3[a4 + 109 | 0] + (Q4 >>> 8 | 0) | 0, C3[a4 + 109 | 0] = Q4, Q4 = i3[a4 + 110 | 0] + (Q4 >>> 8 | 0) | 0, C3[a4 + 110 | 0] = Q4, C3[a4 + 111 | 0] = i3[a4 + 111 | 0] + (Q4 >>> 8 | 0), I7 = I7 - -64 | 0, A8 = A8 - -64 | 0, B4 = B4 - 1 | 0, !(!(B4 = (g6 = g6 + -64 | 0) >>> 0 < 4294967232 ? B4 + 1 | 0 : B4) & g6 >>> 0 > 63 | B4)) break;
                            }
                            if (!(g6 | B4)) break A;
                          }
                          if (D4 = 0, l2(a4 + 32 | 0, a4 + 96 | 0, a4), o4 = 1 & g6, 1 != (0 | g6) | B4) for (B4 = 62 & g6, Q4 = 0; c4 = a4 + 32 | 0, C3[A8 + D4 | 0] = i3[c4 + D4 | 0] ^ i3[I7 + D4 | 0], C3[(g6 = 1 | D4) + A8 | 0] = i3[g6 + c4 | 0] ^ i3[I7 + g6 | 0], D4 = D4 + 2 | 0, (0 | B4) != (0 | (Q4 = Q4 + 2 | 0)); ) ;
                          o4 && (C3[A8 + D4 | 0] = i3[(a4 + 32 | 0) + D4 | 0] ^ i3[I7 + D4 | 0]);
                        }
                        MI(a4 + 32 | 0, 64), MI(a4, 32);
                      }
                      return r3 = a4 + 112 | 0, 0;
                    }, function(A8, I7, g6, C4, B4, Q4, E4, i4, o4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q4 |= 0, E4 |= 0;
                      var c4, D4, a4 = 0;
                      if (D4 = a4 = r3, r3 = c4 = a4 - 192 & -32, b3(o4 |= 0, i4 |= 0, c4 - -64 | 0), o4 = 0, E4 >>> 0 <= 63) i4 = 0;
                      else for (a4 = 64; N3(Q4 + o4 | 0, c4 - -64 | 0), o4 = i4 = a4, (a4 = i4 - -64 | 0) >>> 0 <= E4 >>> 0; ) ;
                      if ((a4 = 32 | i4) >>> 0 > E4 >>> 0) o4 = i4;
                      else for (; x3(Q4 + i4 | 0, c4 - -64 | 0), o4 = a4, (a4 = (i4 = a4) + 32 | 0) >>> 0 <= E4 >>> 0; ) ;
                      if ((i4 = 31 & E4) && (VA((a4 = c4 + 32 | 0) | i4, 0, 32 - i4 | 0), TA(a4, Q4 + o4 | 0, i4), x3(a4, c4 - -64 | 0)), o4 = 32, i4 = 0, B4 >>> 0 < 32) Q4 = 0;
                      else for (; G3(A8 + i4 | 0, C4 + i4 | 0, c4 - -64 | 0), Q4 = o4, (o4 = (i4 = o4) + 32 | 0) >>> 0 <= B4 >>> 0; ) ;
                      return (i4 = 31 & B4) && (VA((o4 = c4 + 32 | 0) | i4, 0, 32 - i4 | 0), TA(o4, C4 + Q4 | 0, i4), G3(c4, o4, c4 - -64 | 0), TA(A8 + Q4 | 0, c4, i4)), K3(I7, g6, E4, B4, c4 - -64 | 0), r3 = D4, 0;
                    }, function(A8, I7, g6, C4, B4, Q4, E4, i4, o4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q4 |= 0, E4 |= 0;
                      var c4, D4, a4 = 0;
                      if (D4 = a4 = r3, r3 = c4 = a4 - 224 & -32, b3(o4 |= 0, i4 |= 0, c4 + 96 | 0), o4 = 0, E4 >>> 0 <= 63) i4 = 0;
                      else for (a4 = 64; N3(Q4 + o4 | 0, c4 + 96 | 0), o4 = i4 = a4, (a4 = i4 - -64 | 0) >>> 0 <= E4 >>> 0; ) ;
                      if ((a4 = 32 | i4) >>> 0 > E4 >>> 0) o4 = i4;
                      else for (; x3(Q4 + i4 | 0, c4 + 96 | 0), o4 = a4, (a4 = (i4 = a4) + 32 | 0) >>> 0 <= E4 >>> 0; ) ;
                      (i4 = 31 & E4) && (VA((a4 = c4 - -64 | 0) | i4, 0, 32 - i4 | 0), TA(a4, Q4 + o4 | 0, i4), x3(a4, c4 + 96 | 0));
                      A: {
                        I: {
                          g: {
                            C: {
                              B: {
                                if (A8) {
                                  if (o4 = 32, g6 >>> 0 < 32) break B;
                                  for (Q4 = 0; H3(A8 + Q4 | 0, I7 + Q4 | 0, c4 + 96 | 0), Q4 = i4 = o4, (o4 = i4 + 32 | 0) >>> 0 <= g6 >>> 0; ) ;
                                } else {
                                  if (Q4 = 32, g6 >>> 0 < 32) break g;
                                  for (o4 = 0; H3(c4 + 32 | 0, I7 + o4 | 0, c4 + 96 | 0), o4 = i4 = Q4, (Q4 = i4 + 32 | 0) >>> 0 <= g6 >>> 0; ) ;
                                }
                                if (!(Q4 = 31 & g6)) break A;
                                if (A8) break C;
                                break I;
                              }
                              if (i4 = 0, Q4 = g6, !g6) break A;
                            }
                            Y3(A8 + i4 | 0, I7 + i4 | 0, Q4, c4 + 96 | 0);
                            break A;
                          }
                          if (i4 = 0, Q4 = g6, !g6) break A;
                        }
                        Y3(c4 + 32 | 0, I7 + i4 | 0, Q4, c4 + 96 | 0);
                      }
                      K3(c4, B4, E4, g6, c4 + 96 | 0), i4 = -1;
                      A: {
                        I: {
                          if (I7 = B4 - 16 | 0) {
                            if (16 == (0 | I7)) break I;
                            break A;
                          }
                          i4 = rA(c4, C4);
                          break A;
                        }
                        i4 = UA(c4, C4);
                      }
                      return !A8 | !i4 || VA(A8, 0, g6), r3 = D4, 0 | i4;
                    }, function(A8, I7, g6, C4, B4, Q4, o4, c4, D4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q4 |= 0, o4 |= 0;
                      var a4, y4 = 0, f4 = 0, e4 = 0, w4 = 0, t4 = 0, h4 = 0, k4 = 0, n4 = 0, s4 = 0, F4 = 0;
                      if (r3 = a4 = r3 - 528 | 0, S3(D4 |= 0, c4 |= 0, a4 + 400 | 0), D4 = 0, o4 >>> 0 <= 31) c4 = 0;
                      else for (f4 = 32; d3(Q4 + D4 | 0, a4 + 400 | 0), D4 = c4 = f4, (f4 = c4 + 32 | 0) >>> 0 <= o4 >>> 0; ) ;
                      if ((D4 = 16 | c4) >>> 0 <= o4 >>> 0) for (f4 = a4 + 416 | 0, w4 = a4 + 432 | 0, t4 = a4 + 448 | 0, e4 = a4 + 464 | 0, h4 = a4 + 480 | 0; k4 = i3[0 | (c4 = Q4 + c4 | 0)] | i3[c4 + 1 | 0] << 8 | i3[c4 + 2 | 0] << 16 | i3[c4 + 3 | 0] << 24, n4 = i3[c4 + 4 | 0] | i3[c4 + 5 | 0] << 8 | i3[c4 + 6 | 0] << 16 | i3[c4 + 7 | 0] << 24, s4 = i3[c4 + 8 | 0] | i3[c4 + 9 | 0] << 8 | i3[c4 + 10 | 0] << 16 | i3[c4 + 11 | 0] << 24, F4 = i3[c4 + 12 | 0] | i3[c4 + 13 | 0] << 8 | i3[c4 + 14 | 0] << 16 | i3[c4 + 15 | 0] << 24, c4 = E3[h4 + 12 >> 2], E3[a4 + 520 >> 2] = E3[h4 + 8 >> 2], E3[a4 + 524 >> 2] = c4, c4 = E3[h4 + 4 >> 2], E3[a4 + 512 >> 2] = E3[h4 >> 2], E3[a4 + 516 >> 2] = c4, c4 = E3[e4 + 12 >> 2], E3[a4 + 376 >> 2] = E3[e4 + 8 >> 2], E3[a4 + 380 >> 2] = c4, c4 = E3[e4 + 4 >> 2], E3[a4 + 368 >> 2] = E3[e4 >> 2], E3[a4 + 372 >> 2] = c4, c4 = E3[h4 + 12 >> 2], E3[a4 + 360 >> 2] = E3[h4 + 8 >> 2], E3[a4 + 364 >> 2] = c4, c4 = E3[h4 + 4 >> 2], E3[a4 + 352 >> 2] = E3[h4 >> 2], E3[a4 + 356 >> 2] = c4, aA(c4 = a4 + 496 | 0, a4 + 368 | 0, a4 + 352 | 0), y4 = E3[a4 + 508 >> 2], E3[h4 + 8 >> 2] = E3[a4 + 504 >> 2], E3[h4 + 12 >> 2] = y4, y4 = E3[a4 + 500 >> 2], E3[h4 >> 2] = E3[a4 + 496 >> 2], E3[h4 + 4 >> 2] = y4, y4 = E3[t4 + 12 >> 2], E3[a4 + 344 >> 2] = E3[t4 + 8 >> 2], E3[a4 + 348 >> 2] = y4, y4 = E3[t4 + 4 >> 2], E3[a4 + 336 >> 2] = E3[t4 >> 2], E3[a4 + 340 >> 2] = y4, y4 = E3[e4 + 12 >> 2], E3[a4 + 328 >> 2] = E3[e4 + 8 >> 2], E3[a4 + 332 >> 2] = y4, y4 = E3[e4 + 4 >> 2], E3[a4 + 320 >> 2] = E3[e4 >> 2], E3[a4 + 324 >> 2] = y4, aA(c4, a4 + 336 | 0, a4 + 320 | 0), y4 = E3[a4 + 508 >> 2], E3[e4 + 8 >> 2] = E3[a4 + 504 >> 2], E3[e4 + 12 >> 2] = y4, y4 = E3[a4 + 500 >> 2], E3[e4 >> 2] = E3[a4 + 496 >> 2], E3[e4 + 4 >> 2] = y4, y4 = E3[w4 + 12 >> 2], E3[a4 + 312 >> 2] = E3[w4 + 8 >> 2], E3[a4 + 316 >> 2] = y4, y4 = E3[w4 + 4 >> 2], E3[a4 + 304 >> 2] = E3[w4 >> 2], E3[a4 + 308 >> 2] = y4, y4 = E3[t4 + 12 >> 2], E3[a4 + 296 >> 2] = E3[t4 + 8 >> 2], E3[a4 + 300 >> 2] = y4, y4 = E3[t4 + 4 >> 2], E3[a4 + 288 >> 2] = E3[t4 >> 2], E3[a4 + 292 >> 2] = y4, aA(c4, a4 + 304 | 0, a4 + 288 | 0), y4 = E3[a4 + 508 >> 2], E3[t4 + 8 >> 2] = E3[a4 + 504 >> 2], E3[t4 + 12 >> 2] = y4, y4 = E3[a4 + 500 >> 2], E3[t4 >> 2] = E3[a4 + 496 >> 2], E3[t4 + 4 >> 2] = y4, y4 = E3[f4 + 12 >> 2], E3[a4 + 280 >> 2] = E3[f4 + 8 >> 2], E3[a4 + 284 >> 2] = y4, y4 = E3[f4 + 4 >> 2], E3[a4 + 272 >> 2] = E3[f4 >> 2], E3[a4 + 276 >> 2] = y4, y4 = E3[w4 + 12 >> 2], E3[a4 + 264 >> 2] = E3[w4 + 8 >> 2], E3[a4 + 268 >> 2] = y4, y4 = E3[w4 + 4 >> 2], E3[a4 + 256 >> 2] = E3[w4 >> 2], E3[a4 + 260 >> 2] = y4, aA(c4, a4 + 272 | 0, a4 + 256 | 0), y4 = E3[a4 + 508 >> 2], E3[w4 + 8 >> 2] = E3[a4 + 504 >> 2], E3[w4 + 12 >> 2] = y4, y4 = E3[a4 + 500 >> 2], E3[w4 >> 2] = E3[a4 + 496 >> 2], E3[w4 + 4 >> 2] = y4, y4 = E3[a4 + 412 >> 2], E3[a4 + 248 >> 2] = E3[a4 + 408 >> 2], E3[a4 + 252 >> 2] = y4, y4 = E3[a4 + 404 >> 2], E3[a4 + 240 >> 2] = E3[a4 + 400 >> 2], E3[a4 + 244 >> 2] = y4, y4 = E3[f4 + 12 >> 2], E3[a4 + 232 >> 2] = E3[f4 + 8 >> 2], E3[a4 + 236 >> 2] = y4, y4 = E3[f4 + 4 >> 2], E3[a4 + 224 >> 2] = E3[f4 >> 2], E3[a4 + 228 >> 2] = y4, aA(c4, a4 + 240 | 0, a4 + 224 | 0), y4 = E3[a4 + 508 >> 2], E3[f4 + 8 >> 2] = E3[a4 + 504 >> 2], E3[f4 + 12 >> 2] = y4, y4 = E3[a4 + 500 >> 2], E3[f4 >> 2] = E3[a4 + 496 >> 2], E3[f4 + 4 >> 2] = y4, y4 = E3[a4 + 524 >> 2], E3[a4 + 216 >> 2] = E3[a4 + 520 >> 2], E3[a4 + 220 >> 2] = y4, y4 = E3[a4 + 412 >> 2], E3[a4 + 200 >> 2] = E3[a4 + 408 >> 2], E3[a4 + 204 >> 2] = y4, y4 = E3[a4 + 516 >> 2], E3[a4 + 208 >> 2] = E3[a4 + 512 >> 2], E3[a4 + 212 >> 2] = y4, y4 = E3[a4 + 404 >> 2], E3[a4 + 192 >> 2] = E3[a4 + 400 >> 2], E3[a4 + 196 >> 2] = y4, aA(c4, a4 + 208 | 0, a4 + 192 | 0), E3[a4 + 412 >> 2] = F4 ^ E3[a4 + 508 >> 2], E3[a4 + 408 >> 2] = E3[a4 + 504 >> 2] ^ s4, E3[a4 + 404 >> 2] = E3[a4 + 500 >> 2] ^ n4, E3[a4 + 400 >> 2] = E3[a4 + 496 >> 2] ^ k4, (D4 = (c4 = D4) + 16 | 0) >>> 0 <= o4 >>> 0; ) ;
                      if ((D4 = 15 & o4) && (VA((f4 = a4 + 384 | 0) | D4, 0, 16 - D4 | 0), TA(f4, Q4 + c4 | 0, D4), D4 = E3[a4 + 384 >> 2], f4 = E3[a4 + 388 >> 2], w4 = E3[a4 + 392 >> 2], t4 = E3[a4 + 396 >> 2], c4 = E3[a4 + 492 >> 2], Q4 = E3[a4 + 488 >> 2], E3[a4 + 520 >> 2] = Q4, E3[a4 + 524 >> 2] = c4, e4 = E3[a4 + 476 >> 2], E3[a4 + 184 >> 2] = E3[a4 + 472 >> 2], E3[a4 + 188 >> 2] = e4, E3[a4 + 168 >> 2] = Q4, E3[a4 + 172 >> 2] = c4, c4 = E3[a4 + 484 >> 2], Q4 = E3[a4 + 480 >> 2], E3[a4 + 512 >> 2] = Q4, E3[a4 + 516 >> 2] = c4, e4 = E3[a4 + 468 >> 2], E3[a4 + 176 >> 2] = E3[a4 + 464 >> 2], E3[a4 + 180 >> 2] = e4, E3[a4 + 160 >> 2] = Q4, E3[a4 + 164 >> 2] = c4, aA(Q4 = a4 + 496 | 0, a4 + 176 | 0, a4 + 160 | 0), c4 = E3[a4 + 508 >> 2], E3[a4 + 488 >> 2] = E3[a4 + 504 >> 2], E3[a4 + 492 >> 2] = c4, c4 = E3[a4 + 460 >> 2], E3[a4 + 152 >> 2] = E3[a4 + 456 >> 2], E3[a4 + 156 >> 2] = c4, c4 = E3[a4 + 476 >> 2], E3[a4 + 136 >> 2] = E3[a4 + 472 >> 2], E3[a4 + 140 >> 2] = c4, c4 = E3[a4 + 500 >> 2], E3[a4 + 480 >> 2] = E3[a4 + 496 >> 2], E3[a4 + 484 >> 2] = c4, c4 = E3[a4 + 452 >> 2], E3[a4 + 144 >> 2] = E3[a4 + 448 >> 2], E3[a4 + 148 >> 2] = c4, c4 = E3[a4 + 468 >> 2], E3[a4 + 128 >> 2] = E3[a4 + 464 >> 2], E3[a4 + 132 >> 2] = c4, aA(Q4, a4 + 144 | 0, a4 + 128 | 0), c4 = E3[a4 + 508 >> 2], E3[a4 + 472 >> 2] = E3[a4 + 504 >> 2], E3[a4 + 476 >> 2] = c4, c4 = E3[a4 + 444 >> 2], E3[a4 + 120 >> 2] = E3[a4 + 440 >> 2], E3[a4 + 124 >> 2] = c4, c4 = E3[a4 + 460 >> 2], E3[a4 + 104 >> 2] = E3[a4 + 456 >> 2], E3[a4 + 108 >> 2] = c4, c4 = E3[a4 + 500 >> 2], E3[a4 + 464 >> 2] = E3[a4 + 496 >> 2], E3[a4 + 468 >> 2] = c4, c4 = E3[a4 + 436 >> 2], E3[a4 + 112 >> 2] = E3[a4 + 432 >> 2], E3[a4 + 116 >> 2] = c4, c4 = E3[a4 + 452 >> 2], E3[a4 + 96 >> 2] = E3[a4 + 448 >> 2], E3[a4 + 100 >> 2] = c4, aA(Q4, a4 + 112 | 0, a4 + 96 | 0), c4 = E3[a4 + 508 >> 2], E3[a4 + 456 >> 2] = E3[a4 + 504 >> 2], E3[a4 + 460 >> 2] = c4, c4 = E3[a4 + 428 >> 2], E3[a4 + 88 >> 2] = E3[a4 + 424 >> 2], E3[a4 + 92 >> 2] = c4, c4 = E3[a4 + 444 >> 2], E3[a4 + 72 >> 2] = E3[a4 + 440 >> 2], E3[a4 + 76 >> 2] = c4, c4 = E3[a4 + 500 >> 2], E3[a4 + 448 >> 2] = E3[a4 + 496 >> 2], E3[a4 + 452 >> 2] = c4, c4 = E3[a4 + 420 >> 2], E3[a4 + 80 >> 2] = E3[a4 + 416 >> 2], E3[a4 + 84 >> 2] = c4, c4 = E3[a4 + 436 >> 2], E3[a4 + 64 >> 2] = E3[a4 + 432 >> 2], E3[a4 + 68 >> 2] = c4, aA(Q4, a4 + 80 | 0, a4 - -64 | 0), c4 = E3[a4 + 508 >> 2], E3[a4 + 440 >> 2] = E3[a4 + 504 >> 2], E3[a4 + 444 >> 2] = c4, c4 = E3[a4 + 412 >> 2], E3[a4 + 56 >> 2] = E3[a4 + 408 >> 2], E3[a4 + 60 >> 2] = c4, c4 = E3[a4 + 428 >> 2], E3[a4 + 40 >> 2] = E3[a4 + 424 >> 2], E3[a4 + 44 >> 2] = c4, c4 = E3[a4 + 500 >> 2], E3[a4 + 432 >> 2] = E3[a4 + 496 >> 2], E3[a4 + 436 >> 2] = c4, c4 = E3[a4 + 404 >> 2], E3[a4 + 48 >> 2] = E3[a4 + 400 >> 2], E3[a4 + 52 >> 2] = c4, c4 = E3[a4 + 420 >> 2], E3[a4 + 32 >> 2] = E3[a4 + 416 >> 2], E3[a4 + 36 >> 2] = c4, aA(Q4, a4 + 48 | 0, a4 + 32 | 0), c4 = E3[a4 + 508 >> 2], E3[a4 + 424 >> 2] = E3[a4 + 504 >> 2], E3[a4 + 428 >> 2] = c4, c4 = E3[a4 + 524 >> 2], E3[a4 + 24 >> 2] = E3[a4 + 520 >> 2], E3[a4 + 28 >> 2] = c4, c4 = E3[a4 + 412 >> 2], E3[a4 + 8 >> 2] = E3[a4 + 408 >> 2], E3[a4 + 12 >> 2] = c4, c4 = E3[a4 + 500 >> 2], E3[a4 + 416 >> 2] = E3[a4 + 496 >> 2], E3[a4 + 420 >> 2] = c4, c4 = E3[a4 + 516 >> 2], E3[a4 + 16 >> 2] = E3[a4 + 512 >> 2], E3[a4 + 20 >> 2] = c4, c4 = E3[a4 + 404 >> 2], E3[a4 >> 2] = E3[a4 + 400 >> 2], E3[a4 + 4 >> 2] = c4, aA(Q4, a4 + 16 | 0, a4), E3[a4 + 412 >> 2] = t4 ^ E3[a4 + 508 >> 2], E3[a4 + 408 >> 2] = w4 ^ E3[a4 + 504 >> 2], E3[a4 + 404 >> 2] = f4 ^ E3[a4 + 500 >> 2], E3[a4 + 400 >> 2] = D4 ^ E3[a4 + 496 >> 2]), f4 = 16, c4 = 0, B4 >>> 0 < 16) D4 = 0;
                      else for (; R3(A8 + c4 | 0, C4 + c4 | 0, a4 + 400 | 0), D4 = f4, (f4 = (c4 = f4) + 16 | 0) >>> 0 <= B4 >>> 0; ) ;
                      return (Q4 = 15 & B4) && (VA((c4 = a4 + 384 | 0) | Q4, 0, 16 - Q4 | 0), TA(c4, C4 + D4 | 0, Q4), R3(C4 = a4 + 512 | 0, c4, a4 + 400 | 0), TA(A8 + D4 | 0, C4, Q4)), J3(I7, g6, o4, B4, a4 + 400 | 0), r3 = a4 + 528 | 0, 0;
                    }, function(A8, I7, g6, C4, B4, Q4, o4, c4, D4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q4 |= 0, o4 |= 0;
                      var a4, y4 = 0, f4 = 0, e4 = 0, w4 = 0, t4 = 0, h4 = 0, k4 = 0, n4 = 0, s4 = 0, F4 = 0;
                      if (r3 = a4 = r3 - 544 | 0, S3(D4 |= 0, c4 |= 0, a4 + 432 | 0), D4 = 0, o4 >>> 0 <= 31) c4 = 0;
                      else for (f4 = 32; d3(Q4 + D4 | 0, a4 + 432 | 0), D4 = c4 = f4, (f4 = c4 + 32 | 0) >>> 0 <= o4 >>> 0; ) ;
                      if ((D4 = 16 | c4) >>> 0 <= o4 >>> 0) for (f4 = a4 + 448 | 0, w4 = a4 + 464 | 0, t4 = a4 + 480 | 0, e4 = a4 + 496 | 0, h4 = a4 + 512 | 0; k4 = i3[0 | (c4 = Q4 + c4 | 0)] | i3[c4 + 1 | 0] << 8 | i3[c4 + 2 | 0] << 16 | i3[c4 + 3 | 0] << 24, n4 = i3[c4 + 4 | 0] | i3[c4 + 5 | 0] << 8 | i3[c4 + 6 | 0] << 16 | i3[c4 + 7 | 0] << 24, s4 = i3[c4 + 8 | 0] | i3[c4 + 9 | 0] << 8 | i3[c4 + 10 | 0] << 16 | i3[c4 + 11 | 0] << 24, F4 = i3[c4 + 12 | 0] | i3[c4 + 13 | 0] << 8 | i3[c4 + 14 | 0] << 16 | i3[c4 + 15 | 0] << 24, c4 = E3[h4 + 12 >> 2], E3[a4 + 392 >> 2] = E3[h4 + 8 >> 2], E3[a4 + 396 >> 2] = c4, c4 = E3[h4 + 4 >> 2], E3[a4 + 384 >> 2] = E3[h4 >> 2], E3[a4 + 388 >> 2] = c4, c4 = E3[e4 + 12 >> 2], E3[a4 + 376 >> 2] = E3[e4 + 8 >> 2], E3[a4 + 380 >> 2] = c4, c4 = E3[e4 + 4 >> 2], E3[a4 + 368 >> 2] = E3[e4 >> 2], E3[a4 + 372 >> 2] = c4, c4 = E3[h4 + 12 >> 2], E3[a4 + 360 >> 2] = E3[h4 + 8 >> 2], E3[a4 + 364 >> 2] = c4, c4 = E3[h4 + 4 >> 2], E3[a4 + 352 >> 2] = E3[h4 >> 2], E3[a4 + 356 >> 2] = c4, aA(c4 = a4 + 528 | 0, a4 + 368 | 0, a4 + 352 | 0), y4 = E3[a4 + 540 >> 2], E3[h4 + 8 >> 2] = E3[a4 + 536 >> 2], E3[h4 + 12 >> 2] = y4, y4 = E3[a4 + 532 >> 2], E3[h4 >> 2] = E3[a4 + 528 >> 2], E3[h4 + 4 >> 2] = y4, y4 = E3[t4 + 12 >> 2], E3[a4 + 344 >> 2] = E3[t4 + 8 >> 2], E3[a4 + 348 >> 2] = y4, y4 = E3[t4 + 4 >> 2], E3[a4 + 336 >> 2] = E3[t4 >> 2], E3[a4 + 340 >> 2] = y4, y4 = E3[e4 + 12 >> 2], E3[a4 + 328 >> 2] = E3[e4 + 8 >> 2], E3[a4 + 332 >> 2] = y4, y4 = E3[e4 + 4 >> 2], E3[a4 + 320 >> 2] = E3[e4 >> 2], E3[a4 + 324 >> 2] = y4, aA(c4, a4 + 336 | 0, a4 + 320 | 0), y4 = E3[a4 + 540 >> 2], E3[e4 + 8 >> 2] = E3[a4 + 536 >> 2], E3[e4 + 12 >> 2] = y4, y4 = E3[a4 + 532 >> 2], E3[e4 >> 2] = E3[a4 + 528 >> 2], E3[e4 + 4 >> 2] = y4, y4 = E3[w4 + 12 >> 2], E3[a4 + 312 >> 2] = E3[w4 + 8 >> 2], E3[a4 + 316 >> 2] = y4, y4 = E3[w4 + 4 >> 2], E3[a4 + 304 >> 2] = E3[w4 >> 2], E3[a4 + 308 >> 2] = y4, y4 = E3[t4 + 12 >> 2], E3[a4 + 296 >> 2] = E3[t4 + 8 >> 2], E3[a4 + 300 >> 2] = y4, y4 = E3[t4 + 4 >> 2], E3[a4 + 288 >> 2] = E3[t4 >> 2], E3[a4 + 292 >> 2] = y4, aA(c4, a4 + 304 | 0, a4 + 288 | 0), y4 = E3[a4 + 540 >> 2], E3[t4 + 8 >> 2] = E3[a4 + 536 >> 2], E3[t4 + 12 >> 2] = y4, y4 = E3[a4 + 532 >> 2], E3[t4 >> 2] = E3[a4 + 528 >> 2], E3[t4 + 4 >> 2] = y4, y4 = E3[f4 + 12 >> 2], E3[a4 + 280 >> 2] = E3[f4 + 8 >> 2], E3[a4 + 284 >> 2] = y4, y4 = E3[f4 + 4 >> 2], E3[a4 + 272 >> 2] = E3[f4 >> 2], E3[a4 + 276 >> 2] = y4, y4 = E3[w4 + 12 >> 2], E3[a4 + 264 >> 2] = E3[w4 + 8 >> 2], E3[a4 + 268 >> 2] = y4, y4 = E3[w4 + 4 >> 2], E3[a4 + 256 >> 2] = E3[w4 >> 2], E3[a4 + 260 >> 2] = y4, aA(c4, a4 + 272 | 0, a4 + 256 | 0), y4 = E3[a4 + 540 >> 2], E3[w4 + 8 >> 2] = E3[a4 + 536 >> 2], E3[w4 + 12 >> 2] = y4, y4 = E3[a4 + 532 >> 2], E3[w4 >> 2] = E3[a4 + 528 >> 2], E3[w4 + 4 >> 2] = y4, y4 = E3[a4 + 444 >> 2], E3[a4 + 248 >> 2] = E3[a4 + 440 >> 2], E3[a4 + 252 >> 2] = y4, y4 = E3[a4 + 436 >> 2], E3[a4 + 240 >> 2] = E3[a4 + 432 >> 2], E3[a4 + 244 >> 2] = y4, y4 = E3[f4 + 12 >> 2], E3[a4 + 232 >> 2] = E3[f4 + 8 >> 2], E3[a4 + 236 >> 2] = y4, y4 = E3[f4 + 4 >> 2], E3[a4 + 224 >> 2] = E3[f4 >> 2], E3[a4 + 228 >> 2] = y4, aA(c4, a4 + 240 | 0, a4 + 224 | 0), y4 = E3[a4 + 540 >> 2], E3[f4 + 8 >> 2] = E3[a4 + 536 >> 2], E3[f4 + 12 >> 2] = y4, y4 = E3[a4 + 532 >> 2], E3[f4 >> 2] = E3[a4 + 528 >> 2], E3[f4 + 4 >> 2] = y4, y4 = E3[a4 + 396 >> 2], E3[a4 + 216 >> 2] = E3[a4 + 392 >> 2], E3[a4 + 220 >> 2] = y4, y4 = E3[a4 + 444 >> 2], E3[a4 + 200 >> 2] = E3[a4 + 440 >> 2], E3[a4 + 204 >> 2] = y4, y4 = E3[a4 + 388 >> 2], E3[a4 + 208 >> 2] = E3[a4 + 384 >> 2], E3[a4 + 212 >> 2] = y4, y4 = E3[a4 + 436 >> 2], E3[a4 + 192 >> 2] = E3[a4 + 432 >> 2], E3[a4 + 196 >> 2] = y4, aA(c4, a4 + 208 | 0, a4 + 192 | 0), E3[a4 + 444 >> 2] = F4 ^ E3[a4 + 540 >> 2], E3[a4 + 440 >> 2] = E3[a4 + 536 >> 2] ^ s4, E3[a4 + 436 >> 2] = E3[a4 + 532 >> 2] ^ n4, E3[a4 + 432 >> 2] = E3[a4 + 528 >> 2] ^ k4, (D4 = (c4 = D4) + 16 | 0) >>> 0 <= o4 >>> 0; ) ;
                      (D4 = 15 & o4) && (VA((f4 = a4 + 416 | 0) | D4, 0, 16 - D4 | 0), TA(f4, Q4 + c4 | 0, D4), D4 = E3[a4 + 416 >> 2], f4 = E3[a4 + 420 >> 2], w4 = E3[a4 + 424 >> 2], t4 = E3[a4 + 428 >> 2], c4 = E3[a4 + 524 >> 2], Q4 = E3[a4 + 520 >> 2], E3[a4 + 392 >> 2] = Q4, E3[a4 + 396 >> 2] = c4, e4 = E3[a4 + 508 >> 2], E3[a4 + 184 >> 2] = E3[a4 + 504 >> 2], E3[a4 + 188 >> 2] = e4, E3[a4 + 168 >> 2] = Q4, E3[a4 + 172 >> 2] = c4, c4 = E3[a4 + 516 >> 2], Q4 = E3[a4 + 512 >> 2], E3[a4 + 384 >> 2] = Q4, E3[a4 + 388 >> 2] = c4, e4 = E3[a4 + 500 >> 2], E3[a4 + 176 >> 2] = E3[a4 + 496 >> 2], E3[a4 + 180 >> 2] = e4, E3[a4 + 160 >> 2] = Q4, E3[a4 + 164 >> 2] = c4, aA(Q4 = a4 + 528 | 0, a4 + 176 | 0, a4 + 160 | 0), c4 = E3[a4 + 540 >> 2], E3[a4 + 520 >> 2] = E3[a4 + 536 >> 2], E3[a4 + 524 >> 2] = c4, c4 = E3[a4 + 492 >> 2], E3[a4 + 152 >> 2] = E3[a4 + 488 >> 2], E3[a4 + 156 >> 2] = c4, c4 = E3[a4 + 508 >> 2], E3[a4 + 136 >> 2] = E3[a4 + 504 >> 2], E3[a4 + 140 >> 2] = c4, c4 = E3[a4 + 532 >> 2], E3[a4 + 512 >> 2] = E3[a4 + 528 >> 2], E3[a4 + 516 >> 2] = c4, c4 = E3[a4 + 484 >> 2], E3[a4 + 144 >> 2] = E3[a4 + 480 >> 2], E3[a4 + 148 >> 2] = c4, c4 = E3[a4 + 500 >> 2], E3[a4 + 128 >> 2] = E3[a4 + 496 >> 2], E3[a4 + 132 >> 2] = c4, aA(Q4, a4 + 144 | 0, a4 + 128 | 0), c4 = E3[a4 + 540 >> 2], E3[a4 + 504 >> 2] = E3[a4 + 536 >> 2], E3[a4 + 508 >> 2] = c4, c4 = E3[a4 + 476 >> 2], E3[a4 + 120 >> 2] = E3[a4 + 472 >> 2], E3[a4 + 124 >> 2] = c4, c4 = E3[a4 + 492 >> 2], E3[a4 + 104 >> 2] = E3[a4 + 488 >> 2], E3[a4 + 108 >> 2] = c4, c4 = E3[a4 + 532 >> 2], E3[a4 + 496 >> 2] = E3[a4 + 528 >> 2], E3[a4 + 500 >> 2] = c4, c4 = E3[a4 + 468 >> 2], E3[a4 + 112 >> 2] = E3[a4 + 464 >> 2], E3[a4 + 116 >> 2] = c4, c4 = E3[a4 + 484 >> 2], E3[a4 + 96 >> 2] = E3[a4 + 480 >> 2], E3[a4 + 100 >> 2] = c4, aA(Q4, a4 + 112 | 0, a4 + 96 | 0), c4 = E3[a4 + 540 >> 2], E3[a4 + 488 >> 2] = E3[a4 + 536 >> 2], E3[a4 + 492 >> 2] = c4, c4 = E3[a4 + 460 >> 2], E3[a4 + 88 >> 2] = E3[a4 + 456 >> 2], E3[a4 + 92 >> 2] = c4, c4 = E3[a4 + 476 >> 2], E3[a4 + 72 >> 2] = E3[a4 + 472 >> 2], E3[a4 + 76 >> 2] = c4, c4 = E3[a4 + 532 >> 2], E3[a4 + 480 >> 2] = E3[a4 + 528 >> 2], E3[a4 + 484 >> 2] = c4, c4 = E3[a4 + 452 >> 2], E3[a4 + 80 >> 2] = E3[a4 + 448 >> 2], E3[a4 + 84 >> 2] = c4, c4 = E3[a4 + 468 >> 2], E3[a4 + 64 >> 2] = E3[a4 + 464 >> 2], E3[a4 + 68 >> 2] = c4, aA(Q4, a4 + 80 | 0, a4 - -64 | 0), c4 = E3[a4 + 540 >> 2], E3[a4 + 472 >> 2] = E3[a4 + 536 >> 2], E3[a4 + 476 >> 2] = c4, c4 = E3[a4 + 444 >> 2], E3[a4 + 56 >> 2] = E3[a4 + 440 >> 2], E3[a4 + 60 >> 2] = c4, c4 = E3[a4 + 460 >> 2], E3[a4 + 40 >> 2] = E3[a4 + 456 >> 2], E3[a4 + 44 >> 2] = c4, c4 = E3[a4 + 532 >> 2], E3[a4 + 464 >> 2] = E3[a4 + 528 >> 2], E3[a4 + 468 >> 2] = c4, c4 = E3[a4 + 436 >> 2], E3[a4 + 48 >> 2] = E3[a4 + 432 >> 2], E3[a4 + 52 >> 2] = c4, c4 = E3[a4 + 452 >> 2], E3[a4 + 32 >> 2] = E3[a4 + 448 >> 2], E3[a4 + 36 >> 2] = c4, aA(Q4, a4 + 48 | 0, a4 + 32 | 0), c4 = E3[a4 + 540 >> 2], E3[a4 + 456 >> 2] = E3[a4 + 536 >> 2], E3[a4 + 460 >> 2] = c4, c4 = E3[a4 + 396 >> 2], E3[a4 + 24 >> 2] = E3[a4 + 392 >> 2], E3[a4 + 28 >> 2] = c4, c4 = E3[a4 + 444 >> 2], E3[a4 + 8 >> 2] = E3[a4 + 440 >> 2], E3[a4 + 12 >> 2] = c4, c4 = E3[a4 + 532 >> 2], E3[a4 + 448 >> 2] = E3[a4 + 528 >> 2], E3[a4 + 452 >> 2] = c4, c4 = E3[a4 + 388 >> 2], E3[a4 + 16 >> 2] = E3[a4 + 384 >> 2], E3[a4 + 20 >> 2] = c4, c4 = E3[a4 + 436 >> 2], E3[a4 >> 2] = E3[a4 + 432 >> 2], E3[a4 + 4 >> 2] = c4, aA(Q4, a4 + 16 | 0, a4), E3[a4 + 444 >> 2] = t4 ^ E3[a4 + 540 >> 2], E3[a4 + 440 >> 2] = w4 ^ E3[a4 + 536 >> 2], E3[a4 + 436 >> 2] = f4 ^ E3[a4 + 532 >> 2], E3[a4 + 432 >> 2] = D4 ^ E3[a4 + 528 >> 2]);
                      A: {
                        I: {
                          g: {
                            C: {
                              B: {
                                if (A8) {
                                  if (f4 = 16, g6 >>> 0 < 16) break B;
                                  for (D4 = 0; L3(A8 + D4 | 0, I7 + D4 | 0, a4 + 432 | 0), D4 = c4 = f4, (f4 = c4 + 16 | 0) >>> 0 <= g6 >>> 0; ) ;
                                } else {
                                  if (D4 = 16, g6 >>> 0 < 16) break g;
                                  for (f4 = 0; L3(a4 + 528 | 0, I7 + f4 | 0, a4 + 432 | 0), f4 = c4 = D4, (D4 = c4 + 16 | 0) >>> 0 <= g6 >>> 0; ) ;
                                }
                                if (!(D4 = 15 & g6)) break A;
                                if (A8) break C;
                                break I;
                              }
                              if (c4 = 0, !(D4 = g6)) break A;
                            }
                            u3(A8 + c4 | 0, I7 + c4 | 0, D4, a4 + 432 | 0);
                            break A;
                          }
                          if (c4 = 0, !(D4 = g6)) break A;
                        }
                        u3(a4 + 528 | 0, I7 + c4 | 0, D4, a4 + 432 | 0);
                      }
                      J3(a4 + 384 | 0, B4, o4, g6, a4 + 432 | 0), c4 = -1;
                      A: {
                        I: {
                          if (I7 = B4 - 16 | 0) {
                            if (16 == (0 | I7)) break I;
                            break A;
                          }
                          c4 = rA(a4 + 384 | 0, C4);
                          break A;
                        }
                        c4 = UA(a4 + 384 | 0, C4);
                      }
                      return !A8 | !c4 || VA(A8, 0, g6), r3 = a4 + 544 | 0, 0 | c4;
                    }, function(A8, I7, g6, C4, B4) {
                      var Q4;
                      return A8 |= 0, C4 |= 0, B4 |= 0, r3 = Q4 = r3 + -64 | 0, (I7 |= 0) | (g6 |= 0) && (E3[Q4 + 8 >> 2] = 2036477234, E3[Q4 + 12 >> 2] = 1797285236, E3[Q4 >> 2] = 1634760805, E3[Q4 + 4 >> 2] = 857760878, E3[Q4 + 16 >> 2] = i3[0 | B4] | i3[B4 + 1 | 0] << 8 | i3[B4 + 2 | 0] << 16 | i3[B4 + 3 | 0] << 24, E3[Q4 + 20 >> 2] = i3[B4 + 4 | 0] | i3[B4 + 5 | 0] << 8 | i3[B4 + 6 | 0] << 16 | i3[B4 + 7 | 0] << 24, E3[Q4 + 24 >> 2] = i3[B4 + 8 | 0] | i3[B4 + 9 | 0] << 8 | i3[B4 + 10 | 0] << 16 | i3[B4 + 11 | 0] << 24, E3[Q4 + 28 >> 2] = i3[B4 + 12 | 0] | i3[B4 + 13 | 0] << 8 | i3[B4 + 14 | 0] << 16 | i3[B4 + 15 | 0] << 24, E3[Q4 + 32 >> 2] = i3[B4 + 16 | 0] | i3[B4 + 17 | 0] << 8 | i3[B4 + 18 | 0] << 16 | i3[B4 + 19 | 0] << 24, E3[Q4 + 36 >> 2] = i3[B4 + 20 | 0] | i3[B4 + 21 | 0] << 8 | i3[B4 + 22 | 0] << 16 | i3[B4 + 23 | 0] << 24, E3[Q4 + 40 >> 2] = i3[B4 + 24 | 0] | i3[B4 + 25 | 0] << 8 | i3[B4 + 26 | 0] << 16 | i3[B4 + 27 | 0] << 24, B4 = i3[B4 + 28 | 0] | i3[B4 + 29 | 0] << 8 | i3[B4 + 30 | 0] << 16 | i3[B4 + 31 | 0] << 24, E3[Q4 + 48 >> 2] = 0, E3[Q4 + 52 >> 2] = 0, E3[Q4 + 44 >> 2] = B4, E3[Q4 + 56 >> 2] = i3[0 | C4] | i3[C4 + 1 | 0] << 8 | i3[C4 + 2 | 0] << 16 | i3[C4 + 3 | 0] << 24, E3[Q4 + 60 >> 2] = i3[C4 + 4 | 0] | i3[C4 + 5 | 0] << 8 | i3[C4 + 6 | 0] << 16 | i3[C4 + 7 | 0] << 24, P3(Q4, A8 = VA(A8, 0, I7), A8, I7, g6), MI(Q4, 64)), r3 = Q4 - -64 | 0, 0;
                    }, function(A8, I7, g6, C4, B4) {
                      var Q4;
                      return A8 |= 0, C4 |= 0, B4 |= 0, r3 = Q4 = r3 + -64 | 0, (I7 |= 0) | (g6 |= 0) && (E3[Q4 + 8 >> 2] = 2036477234, E3[Q4 + 12 >> 2] = 1797285236, E3[Q4 >> 2] = 1634760805, E3[Q4 + 4 >> 2] = 857760878, E3[Q4 + 16 >> 2] = i3[0 | B4] | i3[B4 + 1 | 0] << 8 | i3[B4 + 2 | 0] << 16 | i3[B4 + 3 | 0] << 24, E3[Q4 + 20 >> 2] = i3[B4 + 4 | 0] | i3[B4 + 5 | 0] << 8 | i3[B4 + 6 | 0] << 16 | i3[B4 + 7 | 0] << 24, E3[Q4 + 24 >> 2] = i3[B4 + 8 | 0] | i3[B4 + 9 | 0] << 8 | i3[B4 + 10 | 0] << 16 | i3[B4 + 11 | 0] << 24, E3[Q4 + 28 >> 2] = i3[B4 + 12 | 0] | i3[B4 + 13 | 0] << 8 | i3[B4 + 14 | 0] << 16 | i3[B4 + 15 | 0] << 24, E3[Q4 + 32 >> 2] = i3[B4 + 16 | 0] | i3[B4 + 17 | 0] << 8 | i3[B4 + 18 | 0] << 16 | i3[B4 + 19 | 0] << 24, E3[Q4 + 36 >> 2] = i3[B4 + 20 | 0] | i3[B4 + 21 | 0] << 8 | i3[B4 + 22 | 0] << 16 | i3[B4 + 23 | 0] << 24, E3[Q4 + 40 >> 2] = i3[B4 + 24 | 0] | i3[B4 + 25 | 0] << 8 | i3[B4 + 26 | 0] << 16 | i3[B4 + 27 | 0] << 24, B4 = i3[B4 + 28 | 0] | i3[B4 + 29 | 0] << 8 | i3[B4 + 30 | 0] << 16 | i3[B4 + 31 | 0] << 24, E3[Q4 + 48 >> 2] = 0, E3[Q4 + 44 >> 2] = B4, E3[Q4 + 52 >> 2] = i3[0 | C4] | i3[C4 + 1 | 0] << 8 | i3[C4 + 2 | 0] << 16 | i3[C4 + 3 | 0] << 24, E3[Q4 + 56 >> 2] = i3[C4 + 4 | 0] | i3[C4 + 5 | 0] << 8 | i3[C4 + 6 | 0] << 16 | i3[C4 + 7 | 0] << 24, E3[Q4 + 60 >> 2] = i3[C4 + 8 | 0] | i3[C4 + 9 | 0] << 8 | i3[C4 + 10 | 0] << 16 | i3[C4 + 11 | 0] << 24, P3(Q4, A8 = VA(A8, 0, I7), A8, I7, g6), MI(Q4, 64)), r3 = Q4 - -64 | 0, 0;
                    }, function(A8, I7, g6, C4, B4, Q4, o4, c4) {
                      var D4;
                      return A8 |= 0, I7 |= 0, B4 |= 0, Q4 |= 0, o4 |= 0, c4 |= 0, r3 = D4 = r3 + -64 | 0, (g6 |= 0) | (C4 |= 0) && (E3[D4 + 8 >> 2] = 2036477234, E3[D4 + 12 >> 2] = 1797285236, E3[D4 >> 2] = 1634760805, E3[D4 + 4 >> 2] = 857760878, E3[D4 + 16 >> 2] = i3[0 | c4] | i3[c4 + 1 | 0] << 8 | i3[c4 + 2 | 0] << 16 | i3[c4 + 3 | 0] << 24, E3[D4 + 20 >> 2] = i3[c4 + 4 | 0] | i3[c4 + 5 | 0] << 8 | i3[c4 + 6 | 0] << 16 | i3[c4 + 7 | 0] << 24, E3[D4 + 24 >> 2] = i3[c4 + 8 | 0] | i3[c4 + 9 | 0] << 8 | i3[c4 + 10 | 0] << 16 | i3[c4 + 11 | 0] << 24, E3[D4 + 28 >> 2] = i3[c4 + 12 | 0] | i3[c4 + 13 | 0] << 8 | i3[c4 + 14 | 0] << 16 | i3[c4 + 15 | 0] << 24, E3[D4 + 32 >> 2] = i3[c4 + 16 | 0] | i3[c4 + 17 | 0] << 8 | i3[c4 + 18 | 0] << 16 | i3[c4 + 19 | 0] << 24, E3[D4 + 36 >> 2] = i3[c4 + 20 | 0] | i3[c4 + 21 | 0] << 8 | i3[c4 + 22 | 0] << 16 | i3[c4 + 23 | 0] << 24, E3[D4 + 40 >> 2] = i3[c4 + 24 | 0] | i3[c4 + 25 | 0] << 8 | i3[c4 + 26 | 0] << 16 | i3[c4 + 27 | 0] << 24, E3[D4 + 44 >> 2] = i3[c4 + 28 | 0] | i3[c4 + 29 | 0] << 8 | i3[c4 + 30 | 0] << 16 | i3[c4 + 31 | 0] << 24, E3[D4 + 48 >> 2] = Q4, E3[D4 + 52 >> 2] = o4, E3[D4 + 56 >> 2] = i3[0 | B4] | i3[B4 + 1 | 0] << 8 | i3[B4 + 2 | 0] << 16 | i3[B4 + 3 | 0] << 24, E3[D4 + 60 >> 2] = i3[B4 + 4 | 0] | i3[B4 + 5 | 0] << 8 | i3[B4 + 6 | 0] << 16 | i3[B4 + 7 | 0] << 24, P3(D4, I7, A8, g6, C4), MI(D4, 64)), r3 = D4 - -64 | 0, 0;
                    }, function(A8, I7, g6, C4, B4, Q4, o4) {
                      var c4;
                      return A8 |= 0, I7 |= 0, B4 |= 0, Q4 |= 0, o4 |= 0, r3 = c4 = r3 + -64 | 0, (g6 |= 0) | (C4 |= 0) && (E3[c4 + 8 >> 2] = 2036477234, E3[c4 + 12 >> 2] = 1797285236, E3[c4 >> 2] = 1634760805, E3[c4 + 4 >> 2] = 857760878, E3[c4 + 16 >> 2] = i3[0 | o4] | i3[o4 + 1 | 0] << 8 | i3[o4 + 2 | 0] << 16 | i3[o4 + 3 | 0] << 24, E3[c4 + 20 >> 2] = i3[o4 + 4 | 0] | i3[o4 + 5 | 0] << 8 | i3[o4 + 6 | 0] << 16 | i3[o4 + 7 | 0] << 24, E3[c4 + 24 >> 2] = i3[o4 + 8 | 0] | i3[o4 + 9 | 0] << 8 | i3[o4 + 10 | 0] << 16 | i3[o4 + 11 | 0] << 24, E3[c4 + 28 >> 2] = i3[o4 + 12 | 0] | i3[o4 + 13 | 0] << 8 | i3[o4 + 14 | 0] << 16 | i3[o4 + 15 | 0] << 24, E3[c4 + 32 >> 2] = i3[o4 + 16 | 0] | i3[o4 + 17 | 0] << 8 | i3[o4 + 18 | 0] << 16 | i3[o4 + 19 | 0] << 24, E3[c4 + 36 >> 2] = i3[o4 + 20 | 0] | i3[o4 + 21 | 0] << 8 | i3[o4 + 22 | 0] << 16 | i3[o4 + 23 | 0] << 24, E3[c4 + 40 >> 2] = i3[o4 + 24 | 0] | i3[o4 + 25 | 0] << 8 | i3[o4 + 26 | 0] << 16 | i3[o4 + 27 | 0] << 24, o4 = i3[o4 + 28 | 0] | i3[o4 + 29 | 0] << 8 | i3[o4 + 30 | 0] << 16 | i3[o4 + 31 | 0] << 24, E3[c4 + 48 >> 2] = Q4, E3[c4 + 44 >> 2] = o4, E3[c4 + 52 >> 2] = i3[0 | B4] | i3[B4 + 1 | 0] << 8 | i3[B4 + 2 | 0] << 16 | i3[B4 + 3 | 0] << 24, E3[c4 + 56 >> 2] = i3[B4 + 4 | 0] | i3[B4 + 5 | 0] << 8 | i3[B4 + 6 | 0] << 16 | i3[B4 + 7 | 0] << 24, E3[c4 + 60 >> 2] = i3[B4 + 8 | 0] | i3[B4 + 9 | 0] << 8 | i3[B4 + 10 | 0] << 16 | i3[B4 + 11 | 0] << 24, P3(c4, I7, A8, g6, C4), MI(c4, 64)), r3 = c4 - -64 | 0, 0;
                    }], PI.grow = function(A8) {
                      var I7 = this.length;
                      return this.length = this.length + A8, I7;
                    }, PI.set = function(A8, I7) {
                      this[A8] = I7;
                    }, PI.get = function(A8) {
                      return this[A8];
                    }, PI);
                    function RI() {
                      return g5.byteLength / 65536 | 0;
                    }
                    return { e: Object.create(Object.prototype, { grow: { value: function(A8) {
                      A8 |= 0;
                      var B4 = 0 | RI(), Q4 = B4 + A8 | 0;
                      if (B4 < Q4 && Q4 < 65536) {
                        var D4 = new ArrayBuffer(c3(Q4, 65536));
                        new Int8Array(D4).set(C3), C3 = new Int8Array(D4), new Int16Array(D4), E3 = new Int32Array(D4), i3 = new Uint8Array(D4), new Uint16Array(D4), o3 = new Uint32Array(D4), new Float32Array(D4), new Float64Array(D4), g5 = D4, I6 = i3;
                      }
                      return B4;
                    } }, buffer: { get: function() {
                      return g5;
                    } } }), f: function() {
                    }, g: KI, h: YI, i: KI, j: _I, k: GI, l: SI, m: function(A8, I7, g6, C4, B4, Q4, E4, i4, o4, c4, D4) {
                      return 0 | bA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q4 |= 0, E4 |= 0, i4 |= 0, c4 |= 0, D4 |= 0, 36272);
                    }, n: function(A8, I7, g6, C4, B4, Q4, E4, i4, o4, c4, D4, a4) {
                      return 0 | qA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q4 |= 0, E4 |= 0, i4 |= 0, o4 |= 0, D4 |= 0, a4 |= 0, 36272);
                    }, o: function(A8, I7, g6, C4, B4, Q4, E4, i4, o4, c4, D4) {
                      return 0 | YA(A8 |= 0, I7 |= 0, C4 |= 0, B4 |= 0, Q4 |= 0, E4 |= 0, i4 |= 0, o4 |= 0, c4 |= 0, D4 |= 0, 36276);
                    }, p: function(A8, I7, g6, C4, B4, Q4, E4, i4, o4, c4, D4) {
                      return 0 | XA(A8 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q4 |= 0, E4 |= 0, i4 |= 0, o4 |= 0, c4 |= 0, D4 |= 0, 36276);
                    }, q: _I, r: YI, s: _I, t: _I, u: GI, v: FI, w: function(A8, I7, g6, C4, B4, Q4, E4, i4, o4, c4, D4) {
                      return 0 | bA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q4 |= 0, E4 |= 0, i4 |= 0, c4 |= 0, D4 |= 0, 36280);
                    }, x: function(A8, I7, g6, C4, B4, Q4, E4, i4, o4, c4, D4, a4) {
                      return 0 | qA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q4 |= 0, E4 |= 0, i4 |= 0, o4 |= 0, D4 |= 0, a4 |= 0, 36280);
                    }, y: function(A8, I7, g6, C4, B4, Q4, E4, i4, o4, c4, D4) {
                      return 0 | YA(A8 |= 0, I7 |= 0, C4 |= 0, B4 |= 0, Q4 |= 0, E4 |= 0, i4 |= 0, o4 |= 0, c4 |= 0, D4 |= 0, 36284);
                    }, z: function(A8, I7, g6, C4, B4, Q4, E4, i4, o4, c4, D4) {
                      return 0 | XA(A8 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q4 |= 0, E4 |= 0, i4 |= 0, o4 |= 0, c4 |= 0, D4 |= 0, 36284);
                    }, A: YI, B: function(A8, I7, g6, C4, B4, Q4, E4, i4, o4, c4, D4, a4) {
                      return 0 | JA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, (A8 = 0) | (B4 |= 0), Q4 |= 0, E4 |= 0, A8 | (i4 |= 0), o4 |= 0, D4 |= 0, a4 |= 0);
                    }, C: function(A8, I7, g6, C4, B4, i4, o4, c4, D4, a4, y4) {
                      return A8 |= 0, I7 |= 0, C4 |= 0, o4 |= 0, D4 |= 0, o4 |= D4 = 0, !(B4 |= 0) & (C4 |= D4) >>> 0 < 4294967280 ? (JA(A8, A8 + C4 | 0, 0, g6 |= 0, C4, B4, i4 |= 0, o4, c4 |= 0, a4 |= 0, y4 |= 0), I7 && (B4 = (A8 = C4 + 16 | 0) >>> 0 < 16 ? B4 + 1 | 0 : B4, E3[I7 >> 2] = A8, E3[I7 + 4 >> 2] = B4)) : (iI(), Q3()), 0;
                    }, D: function(A8, I7, g6, C4, B4, Q4, E4, i4, o4, c4, D4, a4) {
                      return 0 | HA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, (A8 = 0) | (B4 |= 0), Q4 |= 0, E4 |= 0, A8 | (i4 |= 0), o4 |= 0, D4 |= 0, a4 |= 0);
                    }, E: function(A8, I7, g6, C4, B4, i4, o4, c4, D4, a4, y4) {
                      return A8 |= 0, I7 |= 0, C4 |= 0, o4 |= 0, D4 |= 0, o4 |= D4 = 0, !(B4 |= 0) & (C4 |= D4) >>> 0 < 4294967280 ? (HA(A8, A8 + C4 | 0, 0, g6 |= 0, C4, B4, i4 |= 0, o4, c4 |= 0, a4 |= 0, y4 |= 0), I7 && (B4 = (A8 = C4 + 16 | 0) >>> 0 < 16 ? B4 + 1 | 0 : B4, E3[I7 >> 2] = A8, E3[I7 + 4 >> 2] = B4)) : (iI(), Q3()), 0;
                    }, F: function(A8, I7, g6, C4, B4, Q4, E4, i4, o4, c4, D4) {
                      return 0 | GA(A8 |= 0, g6 |= 0, (A8 = 0) | (C4 |= 0), B4 |= 0, Q4 |= 0, E4 |= 0, A8 | (i4 |= 0), o4 |= 0, c4 |= 0, D4 |= 0);
                    }, G: function(A8, I7, g6, C4, B4, Q4, i4, o4, c4, D4, a4) {
                      return I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, o4 |= 0, o4 |= 0, g6 = -1, !(Q4 |= 0) & (B4 |= 0) >>> 0 >= 16 | Q4 && (g6 = GA(A8 |= 0, C4, B4 - 16 | 0, Q4 - (B4 >>> 0 < 16) | 0, (C4 + B4 | 0) - 16 | 0, i4 |= 0, o4, c4 |= 0, D4 |= 0, a4 |= 0)), I7 && (E3[I7 >> 2] = g6 ? 0 : B4 - 16 | 0, E3[I7 + 4 >> 2] = g6 ? 0 : Q4 - (B4 >>> 0 < 16) | 0), 0 | g6;
                    }, H: function(A8, I7, g6, C4, B4, Q4, E4, i4, o4, c4, D4) {
                      return 0 | pA(A8 |= 0, g6 |= 0, (A8 = 0) | (C4 |= 0), B4 |= 0, Q4 |= 0, E4 |= 0, A8 | (i4 |= 0), o4 |= 0, c4 |= 0, D4 |= 0);
                    }, I: function(A8, I7, g6, C4, B4, Q4, i4, o4, c4, D4, a4) {
                      return I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, o4 |= 0, o4 |= 0, g6 = -1, !(Q4 |= 0) & (B4 |= 0) >>> 0 >= 16 | Q4 && (g6 = pA(A8 |= 0, C4, B4 - 16 | 0, Q4 - (B4 >>> 0 < 16) | 0, (C4 + B4 | 0) - 16 | 0, i4 |= 0, o4, c4 |= 0, D4 |= 0, a4 |= 0)), I7 && (E3[I7 >> 2] = g6 ? 0 : B4 - 16 | 0, E3[I7 + 4 >> 2] = g6 ? 0 : Q4 - (B4 >>> 0 < 16) | 0), 0 | g6;
                    }, J: _I, K: function() {
                      return 12;
                    }, L: YI, M: KI, N: HI, O: FI, P: _I, Q: UI, R: YI, S: KI, T: HI, U: FI, V: function(A8, I7, g6, C4, B4, Q4, E4, i4, o4, c4, D4, a4) {
                      return 0 | sA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, (A8 = 0) | (B4 |= 0), Q4 |= 0, E4 |= 0, A8 | (i4 |= 0), o4 |= 0, D4 |= 0, a4 |= 0);
                    }, W: function(A8, I7, g6, C4, B4, i4, o4, c4, D4, a4, y4) {
                      return A8 |= 0, I7 |= 0, C4 |= 0, o4 |= 0, D4 |= 0, o4 |= D4 = 0, !(B4 |= 0) & (C4 |= D4) >>> 0 < 4294967280 ? (sA(A8, A8 + C4 | 0, 0, g6 |= 0, C4, B4, i4 |= 0, o4, c4 |= 0, a4 |= 0, y4 |= 0), I7 && (B4 = (A8 = C4 + 16 | 0) >>> 0 < 16 ? B4 + 1 | 0 : B4, E3[I7 >> 2] = A8, E3[I7 + 4 >> 2] = B4)) : (iI(), Q3()), 0;
                    }, X: function(A8, I7, g6, C4, B4, Q4, E4, i4, o4, c4, D4) {
                      return 0 | nA(A8 |= 0, g6 |= 0, (A8 = 0) | (C4 |= 0), B4 |= 0, Q4 |= 0, E4 |= 0, A8 | (i4 |= 0), o4 |= 0, c4 |= 0, D4 |= 0);
                    }, Y: function(A8, I7, g6, C4, B4, Q4, i4, o4, c4, D4, a4) {
                      return I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, o4 |= 0, o4 |= 0, g6 = -1, !(Q4 |= 0) & (B4 |= 0) >>> 0 >= 16 | Q4 && (g6 = nA(A8 |= 0, C4, B4 - 16 | 0, Q4 - (B4 >>> 0 < 16) | 0, (C4 + B4 | 0) - 16 | 0, i4 |= 0, o4, c4 |= 0, D4 |= 0, a4 |= 0)), I7 && (E3[I7 >> 2] = g6 ? 0 : B4 - 16 | 0, E3[I7 + 4 >> 2] = g6 ? 0 : Q4 - (B4 >>> 0 < 16) | 0), 0 | g6;
                    }, Z: _I, _: pI, $: YI, aa: KI, ba: HI, ca: FI, da: _I, ea: _I, fa: function(A8, I7, g6, B4, Q4) {
                      var i4;
                      return A8 |= 0, I7 |= 0, g6 |= 0, B4 |= 0, r3 = i4 = r3 - 480 | 0, wA(i4, Q4 |= 0, 32), tI(i4, I7, g6, B4), WA(i4, i4 + 416 | 0), I7 = E3[i4 + 444 >> 2], g6 = E3[i4 + 440 >> 2], C3[A8 + 24 | 0] = g6, C3[A8 + 25 | 0] = g6 >>> 8, C3[A8 + 26 | 0] = g6 >>> 16, C3[A8 + 27 | 0] = g6 >>> 24, C3[A8 + 28 | 0] = I7, C3[A8 + 29 | 0] = I7 >>> 8, C3[A8 + 30 | 0] = I7 >>> 16, C3[A8 + 31 | 0] = I7 >>> 24, I7 = E3[i4 + 436 >> 2], g6 = E3[i4 + 432 >> 2], C3[A8 + 16 | 0] = g6, C3[A8 + 17 | 0] = g6 >>> 8, C3[A8 + 18 | 0] = g6 >>> 16, C3[A8 + 19 | 0] = g6 >>> 24, C3[A8 + 20 | 0] = I7, C3[A8 + 21 | 0] = I7 >>> 8, C3[A8 + 22 | 0] = I7 >>> 16, C3[A8 + 23 | 0] = I7 >>> 24, I7 = E3[i4 + 428 >> 2], g6 = E3[i4 + 424 >> 2], C3[A8 + 8 | 0] = g6, C3[A8 + 9 | 0] = g6 >>> 8, C3[A8 + 10 | 0] = g6 >>> 16, C3[A8 + 11 | 0] = g6 >>> 24, C3[A8 + 12 | 0] = I7, C3[A8 + 13 | 0] = I7 >>> 8, C3[A8 + 14 | 0] = I7 >>> 16, C3[A8 + 15 | 0] = I7 >>> 24, I7 = E3[i4 + 420 >> 2], g6 = E3[i4 + 416 >> 2], C3[0 | A8] = g6, C3[A8 + 1 | 0] = g6 >>> 8, C3[A8 + 2 | 0] = g6 >>> 16, C3[A8 + 3 | 0] = g6 >>> 24, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, r3 = i4 + 480 | 0, 0;
                    }, ga: function(A8, I7, g6, C4, B4) {
                      var Q4, i4;
                      return A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, r3 = Q4 = r3 - 512 | 0, wA(i4 = Q4 + 32 | 0, B4 |= 0, 32), tI(i4, I7, g6, C4), WA(i4, Q4 + 448 | 0), I7 = E3[Q4 + 476 >> 2], E3[Q4 + 24 >> 2] = E3[Q4 + 472 >> 2], E3[Q4 + 28 >> 2] = I7, I7 = E3[Q4 + 468 >> 2], E3[Q4 + 16 >> 2] = E3[Q4 + 464 >> 2], E3[Q4 + 20 >> 2] = I7, I7 = E3[Q4 + 460 >> 2], E3[Q4 + 8 >> 2] = E3[Q4 + 456 >> 2], E3[Q4 + 12 >> 2] = I7, I7 = E3[Q4 + 452 >> 2], E3[Q4 >> 2] = E3[Q4 + 448 >> 2], E3[Q4 + 4 >> 2] = I7, I7 = UA(A8, Q4), g6 = NA(Q4, A8, 32), r3 = Q4 + 512 | 0, ((0 | A8) == (0 | Q4) ? -1 : I7) | g6;
                    }, ha: FI, ia: _I, ja: _I, ka: _I, la: _I, ma: pI, na: KI, oa: HI, pa: function(A8, I7, g6) {
                      A8 |= 0, I7 |= 0;
                      var B4, Q4 = 0;
                      return r3 = B4 = r3 + -64 | 0, FA(B4, g6 |= 0, 32, 0), g6 = E3[B4 + 28 >> 2], Q4 = E3[B4 + 24 >> 2], C3[I7 + 24 | 0] = Q4, C3[I7 + 25 | 0] = Q4 >>> 8, C3[I7 + 26 | 0] = Q4 >>> 16, C3[I7 + 27 | 0] = Q4 >>> 24, C3[I7 + 28 | 0] = g6, C3[I7 + 29 | 0] = g6 >>> 8, C3[I7 + 30 | 0] = g6 >>> 16, C3[I7 + 31 | 0] = g6 >>> 24, g6 = E3[B4 + 20 >> 2], Q4 = E3[B4 + 16 >> 2], C3[I7 + 16 | 0] = Q4, C3[I7 + 17 | 0] = Q4 >>> 8, C3[I7 + 18 | 0] = Q4 >>> 16, C3[I7 + 19 | 0] = Q4 >>> 24, C3[I7 + 20 | 0] = g6, C3[I7 + 21 | 0] = g6 >>> 8, C3[I7 + 22 | 0] = g6 >>> 16, C3[I7 + 23 | 0] = g6 >>> 24, g6 = E3[B4 + 12 >> 2], Q4 = E3[B4 + 8 >> 2], C3[I7 + 8 | 0] = Q4, C3[I7 + 9 | 0] = Q4 >>> 8, C3[I7 + 10 | 0] = Q4 >>> 16, C3[I7 + 11 | 0] = Q4 >>> 24, C3[I7 + 12 | 0] = g6, C3[I7 + 13 | 0] = g6 >>> 8, C3[I7 + 14 | 0] = g6 >>> 16, C3[I7 + 15 | 0] = g6 >>> 24, g6 = E3[B4 + 4 >> 2], Q4 = E3[B4 >> 2], C3[0 | I7] = Q4, C3[I7 + 1 | 0] = Q4 >>> 8, C3[I7 + 2 | 0] = Q4 >>> 16, C3[I7 + 3 | 0] = Q4 >>> 24, C3[I7 + 4 | 0] = g6, C3[I7 + 5 | 0] = g6 >>> 8, C3[I7 + 6 | 0] = g6 >>> 16, C3[I7 + 7 | 0] = g6 >>> 24, MI(B4, 64), A8 = hI(A8, I7), r3 = B4 - -64 | 0, 0 | A8;
                    }, qa: cI, ra: OA, sa: $A, ta: function(A8, I7, g6, C4, B4, Q4, E4, i4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, Q4 |= 0;
                      var o4, c4 = 0;
                      return c4 = C4 |= 0, C4 = B4 |= 0, o4 = 0 | c4, r3 = c4 = r3 - 32 | 0, B4 = -1, OA(c4, E4 |= 0, i4 |= 0) || (B4 = tA(A8, I7, g6, o4, C4, Q4, c4), MI(c4, 32)), r3 = c4 + 32 | 0, 0 | B4;
                    }, ua: function(A8, I7, g6, C4, B4, E4) {
                      return A8 |= 0, I7 |= 0, B4 |= 0, E4 |= 0, !(C4 |= 0) & (g6 |= 0) >>> 0 >= 4294967280 | C4 && (iI(), Q3()), 0 | tA(A8 + 16 | 0, A8, I7, g6, C4, B4, E4);
                    }, va: function(A8, I7, g6, C4, B4, Q4, E4) {
                      return 0 | zA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q4 |= 0, E4 |= 0);
                    }, wa: AI, xa: function(A8, I7, g6, C4, B4, Q4, E4, i4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, Q4 |= 0;
                      var o4, c4 = 0;
                      return c4 = C4 |= 0, C4 = B4 |= 0, o4 = 0 | c4, r3 = c4 = r3 - 32 | 0, B4 = -1, OA(c4, E4 |= 0, i4 |= 0) || (B4 = kA(A8, I7, g6, o4, C4, Q4, c4), MI(c4, 32)), r3 = c4 + 32 | 0, 0 | B4;
                    }, ya: jA, za: function(A8, I7, g6, C4, B4, Q4, E4) {
                      return 0 | xA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q4 |= 0, E4 |= 0);
                    }, Aa: function(A8, I7, g6, B4, Q4) {
                      A8 |= 0, I7 |= 0, Q4 |= 0;
                      var i4, o4, c4, D4, a4 = 0, y4 = 0;
                      return a4 = g6 |= 0, g6 = B4 |= 0, D4 = 0 | a4, a4 = B4 = r3, r3 = i4 = B4 - 512 & -64, B4 = -1, cI(o4 = i4 - -64 | 0, c4 = i4 + 32 | 0) || (j(B4 = i4 + 128 | 0, 0, 0, 24), cA(B4, o4, 32, 0), cA(B4, Q4, 32, 0), ZA(B4, y4 = i4 + 96 | 0, 24), B4 = zA(A8 + 32 | 0, I7, D4, g6, y4, Q4, c4), I7 = E3[i4 + 92 >> 2], g6 = E3[i4 + 88 >> 2], C3[A8 + 24 | 0] = g6, C3[A8 + 25 | 0] = g6 >>> 8, C3[A8 + 26 | 0] = g6 >>> 16, C3[A8 + 27 | 0] = g6 >>> 24, C3[A8 + 28 | 0] = I7, C3[A8 + 29 | 0] = I7 >>> 8, C3[A8 + 30 | 0] = I7 >>> 16, C3[A8 + 31 | 0] = I7 >>> 24, I7 = E3[i4 + 84 >> 2], g6 = E3[i4 + 80 >> 2], C3[A8 + 16 | 0] = g6, C3[A8 + 17 | 0] = g6 >>> 8, C3[A8 + 18 | 0] = g6 >>> 16, C3[A8 + 19 | 0] = g6 >>> 24, C3[A8 + 20 | 0] = I7, C3[A8 + 21 | 0] = I7 >>> 8, C3[A8 + 22 | 0] = I7 >>> 16, C3[A8 + 23 | 0] = I7 >>> 24, I7 = E3[i4 + 76 >> 2], g6 = E3[i4 + 72 >> 2], C3[A8 + 8 | 0] = g6, C3[A8 + 9 | 0] = g6 >>> 8, C3[A8 + 10 | 0] = g6 >>> 16, C3[A8 + 11 | 0] = g6 >>> 24, C3[A8 + 12 | 0] = I7, C3[A8 + 13 | 0] = I7 >>> 8, C3[A8 + 14 | 0] = I7 >>> 16, C3[A8 + 15 | 0] = I7 >>> 24, I7 = E3[i4 + 68 >> 2], g6 = E3[i4 + 64 >> 2], C3[0 | A8] = g6, C3[A8 + 1 | 0] = g6 >>> 8, C3[A8 + 2 | 0] = g6 >>> 16, C3[A8 + 3 | 0] = g6 >>> 24, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, MI(c4, 32), MI(o4, 32), MI(y4, 24)), r3 = a4, 0 | B4;
                    }, Ba: function(A8, I7, g6, C4, B4, Q4) {
                      A8 |= 0, I7 |= 0, B4 |= 0, Q4 |= 0;
                      var E4, i4, o4 = 0;
                      return i4 = o4 = r3, r3 = E4 = o4 - 448 & -64, o4 = -1, !(C4 |= 0) & (g6 |= 0) >>> 0 >= 48 | C4 && (j(o4 = E4 - -64 | 0, 0, 0, 24), cA(o4, I7, 32, 0), cA(o4, B4, 32, 0), ZA(o4, B4 = E4 + 32 | 0, 24), o4 = xA(A8, I7 + 32 | 0, g6 - 32 | 0, C4 - (g6 >>> 0 < 32) | 0, B4, I7, Q4)), r3 = i4, 0 | o4;
                    }, Ca: function() {
                      return 48;
                    }, Da: KI, Ea: JI, Fa: _I, Ga: KI, Ha: JI, Ia: _I, Ja: function() {
                      return 384;
                    }, Ka: function(A8, I7, g6, C4, B4, Q4, E4) {
                      return 0 | CA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q4 |= 0, E4 |= 0);
                    }, La: j, Ma: function(A8, I7, g6, C4) {
                      return 0 | cA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0);
                    }, Na: ZA, Oa: FI, Pa: JI, Qa: function(A8, I7, g6, C4) {
                      return 0 | FA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0);
                    }, Ra: KI, Sa: JI, Ta: UI, Ua: _I, Va: function(A8, I7, g6, C4, B4, o4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, o4 |= 0;
                      var c4, D4 = 0, a4 = 0, y4 = 0, f4 = 0, e4 = 0, w4 = 0, t4 = 0;
                      return r3 = c4 = r3 - 32 | 0, D4 = i3[0 | (B4 |= 0)] | i3[B4 + 1 | 0] << 8 | i3[B4 + 2 | 0] << 16 | i3[B4 + 3 | 0] << 24, B4 = i3[B4 + 4 | 0] | i3[B4 + 5 | 0] << 8 | i3[B4 + 6 | 0] << 16 | i3[B4 + 7 | 0] << 24, E3[c4 + 24 >> 2] = 0, E3[c4 + 28 >> 2] = 0, E3[c4 + 16 >> 2] = D4, E3[c4 + 20 >> 2] = B4, E3[c4 + 8 >> 2] = 0, E3[c4 + 12 >> 2] = 0, E3[(B4 = c4) >> 2] = g6, E3[B4 + 4 >> 2] = C4, I7 - 65 >>> 0 <= 4294967246 ? (E3[9280] = 28, A8 = -1) : I7 - 65 >>> 0 < 4294967232 ? A8 = -1 : (r3 = B4 = (y4 = r3) - 512 & -64, !o4 | !A8 | ((a4 = 255 & I7) - 65 & 255) >>> 0 <= 191 ? (iI(), Q3()) : (C4 = c4 + 16 | 0, c4 ? (f4 = 725511199 ^ (i3[c4 + 8 | 0] | i3[c4 + 9 | 0] << 8 | i3[c4 + 10 | 0] << 16 | i3[c4 + 11 | 0] << 24), e4 = -1694144372 ^ (i3[c4 + 12 | 0] | i3[c4 + 13 | 0] << 8 | i3[c4 + 14 | 0] << 16 | i3[c4 + 15 | 0] << 24), g6 = -1377402159 ^ (i3[0 | c4] | i3[c4 + 1 | 0] << 8 | i3[c4 + 2 | 0] << 16 | i3[c4 + 3 | 0] << 24), I7 = 1359893119 ^ (i3[c4 + 4 | 0] | i3[c4 + 5 | 0] << 8 | i3[c4 + 6 | 0] << 16 | i3[c4 + 7 | 0] << 24)) : (f4 = 725511199, e4 = -1694144372, g6 = -1377402159, I7 = 1359893119), C4 ? (w4 = 327033209 ^ (i3[C4 + 8 | 0] | i3[C4 + 9 | 0] << 8 | i3[C4 + 10 | 0] << 16 | i3[C4 + 11 | 0] << 24), t4 = 1541459225 ^ (i3[C4 + 12 | 0] | i3[C4 + 13 | 0] << 8 | i3[C4 + 14 | 0] << 16 | i3[C4 + 15 | 0] << 24), D4 = -79577749 ^ (i3[0 | C4] | i3[C4 + 1 | 0] << 8 | i3[C4 + 2 | 0] << 16 | i3[C4 + 3 | 0] << 24), C4 = 528734635 ^ (i3[C4 + 4 | 0] | i3[C4 + 5 | 0] << 8 | i3[C4 + 6 | 0] << 16 | i3[C4 + 7 | 0] << 24)) : (w4 = 327033209, t4 = 1541459225, D4 = -79577749, C4 = 528734635), VA(B4 - -64 | 0, 0, 293), E3[B4 + 56 >> 2] = w4, E3[B4 + 60 >> 2] = t4, E3[B4 + 48 >> 2] = D4, E3[B4 + 52 >> 2] = C4, E3[B4 + 40 >> 2] = f4, E3[B4 + 44 >> 2] = e4, E3[B4 + 32 >> 2] = g6, E3[B4 + 36 >> 2] = I7, E3[B4 + 24 >> 2] = 1595750129, E3[B4 + 28 >> 2] = -1521486534, E3[B4 + 16 >> 2] = -23791573, E3[B4 + 20 >> 2] = 1013904242, E3[B4 + 8 >> 2] = -2067093701, E3[B4 + 12 >> 2] = -1150833019, E3[B4 >> 2] = -222443256 ^ (8192 | a4), E3[B4 + 4 >> 2] = 1779033703, VA(32 + (I7 = B4 + 384 | 0) | 0, 0, 96), TA(I7, o4, 32), TA(B4 + 96 | 0, I7, 128), E3[B4 + 352 >> 2] = 128, MI(I7, 128), m3(B4, A8, a4), r3 = y4), A8 = 0), r3 = c4 + 32 | 0, 0 | A8;
                    }, Wa: FI, Xa: function(A8, I7, g6) {
                      return 0 | gA(A8 |= 0, I7 |= 0, g6 |= 0);
                    }, Ya: function(A8, I7, g6) {
                      return 0 | kI(A8 |= 0, I7 |= 0, g6 |= 0);
                    }, Za: function(A8, I7) {
                      return II(A8 |= 0, I7 |= 0), MI(A8, 4), 0;
                    }, _a: function(A8, I7, g6, C4, B4) {
                      var Q4;
                      return A8 |= 0, C4 |= 0, B4 |= 0, r3 = Q4 = r3 - 208 | 0, gA(Q4, I7 |= 0, g6 |= 0), kI(Q4, C4, B4), II(Q4, A8), MI(Q4, 4), r3 = Q4 + 208 | 0, 0;
                    }, $a: FI, ab: function(A8, I7, g6, B4, Q4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, B4 |= 0, Q4 |= 0;
                      var o4, c4 = 0, D4 = 0, a4 = 0, y4 = 0;
                      if (r3 = o4 = r3 - 256 | 0, C3[o4 + 15 | 0] = 1, I7 >>> 0 <= 8160) {
                        if (I7 >>> 0 >= 32) for (y4 = A8 - 32 | 0, c4 = 32; a4 = c4, gA(c4 = o4 + 48 | 0, Q4, 32), D4 && kI(c4, D4 + y4 | 0, 32), kI(c4 = o4 + 48 | 0, g6, B4), kI(c4, o4 + 15 | 0, 1), II(c4, A8 + D4 | 0), C3[o4 + 15 | 0] = i3[o4 + 15 | 0] + 1, (c4 = (D4 = a4) + 32 | 0) >>> 0 <= I7 >>> 0; ) ;
                        (D4 = 31 & I7) && (gA(I7 = o4 + 48 | 0, Q4, 32), a4 && kI(I7, (A8 + a4 | 0) - 32 | 0, 32), kI(I7 = o4 + 48 | 0, g6, B4), kI(I7, o4 + 15 | 0, 1), II(g6 = I7, I7 = o4 + 16 | 0), TA(A8 + a4 | 0, I7, D4), MI(I7, 32)), MI(o4 + 48 | 0, 208), A8 = 0;
                      } else E3[9280] = 28, A8 = -1;
                      return r3 = o4 + 256 | 0, 0 | A8;
                    }, bb: _I, cb: YI, db: function() {
                      return 8160;
                    }, eb: NI, fb: function(A8, I7, g6) {
                      return 0 | wA(A8 |= 0, I7 |= 0, g6 |= 0);
                    }, gb: function(A8, I7, g6) {
                      return 0 | tI(A8 |= 0, I7 |= 0, g6 |= 0, 0);
                    }, hb: function(A8, I7) {
                      return WA(A8 |= 0, I7 |= 0), MI(A8, 4), 0;
                    }, ib: function(A8, I7, g6, C4, B4) {
                      var Q4;
                      return A8 |= 0, C4 |= 0, B4 |= 0, r3 = Q4 = r3 - 416 | 0, wA(Q4, I7 |= 0, g6 |= 0), tI(Q4, C4, B4, 0), WA(Q4, A8), MI(Q4, 4), r3 = Q4 + 416 | 0, 0;
                    }, jb: function(A8) {
                      LA(A8 |= 0, 64);
                    }, kb: function(A8, I7, g6, B4, Q4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, B4 |= 0, Q4 |= 0;
                      var o4, c4 = 0, D4 = 0, a4 = 0, y4 = 0;
                      if (r3 = o4 = r3 - 496 | 0, C3[o4 + 15 | 0] = 1, I7 >>> 0 <= 16320) {
                        if (I7 >>> 0 >= 64) for (y4 = A8 + -64 | 0, c4 = 64; a4 = c4, wA(c4 = o4 + 80 | 0, Q4, 64), D4 && tI(c4, D4 + y4 | 0, 64, 0), tI(c4 = o4 + 80 | 0, g6, B4, 0), tI(c4, o4 + 15 | 0, 1, 0), WA(c4, A8 + D4 | 0), C3[o4 + 15 | 0] = i3[o4 + 15 | 0] + 1, (c4 = (D4 = a4) - -64 | 0) >>> 0 <= I7 >>> 0; ) ;
                        (D4 = 63 & I7) && (wA(I7 = o4 + 80 | 0, Q4, 64), a4 && tI(I7, (A8 + a4 | 0) - 64 | 0, 64, 0), tI(I7 = o4 + 80 | 0, g6, B4, 0), tI(I7, o4 + 15 | 0, 1, 0), WA(g6 = I7, I7 = o4 + 16 | 0), TA(A8 + a4 | 0, I7, D4), MI(I7, 64)), MI(o4 + 80 | 0, 416), A8 = 0;
                      } else E3[9280] = 28, A8 = -1;
                      return r3 = o4 + 496 | 0, 0 | A8;
                    }, lb: JI, mb: YI, nb: function() {
                      return 16320;
                    }, ob: function() {
                      return 416;
                    }, pb: function(A8, I7, g6) {
                      return A8 |= 0, CA(I7 |= 0, 32, g6 |= 0, 32, 0, 0, 0), 0 | fI(A8, I7);
                    }, qb: function(A8, I7) {
                      return A8 |= 0, LA(I7 |= 0, 32), 0 | fI(A8, I7);
                    }, rb: function(A8, I7, g6, B4, E4) {
                      I7 |= 0, g6 |= 0, B4 |= 0, E4 |= 0;
                      var o4, c4, D4 = 0, a4 = 0, y4 = 0;
                      if (c4 = D4 = r3, r3 = D4 = D4 - 512 & -64, o4 = (A8 |= 0) || I7) {
                        if (y4 = -1, !EI(a4 = D4 + 96 | 0, B4, E4)) {
                          for (B4 = I7 || A8, A8 = 0, j(I7 = D4 + 128 | 0, 0, 0, 64), cA(I7, a4, 32, 0), MI(a4, 32), cA(I7, g6, 32, 0), cA(I7, E4, 32, 0), ZA(I7, D4 + 32 | 0, 64), MI(I7, 384); g6 = (I7 = D4 + 32 | 0) + A8 | 0, C3[A8 + o4 | 0] = i3[0 | g6], C3[A8 + B4 | 0] = i3[g6 + 32 | 0], C3[(g6 = 1 | A8) + o4 | 0] = i3[I7 + g6 | 0], C3[g6 + B4 | 0] = i3[I7 + (33 | A8) | 0], 32 != (0 | (A8 = A8 + 2 | 0)); ) ;
                          MI(I7, 64), y4 = 0;
                        }
                        return r3 = c4, 0 | y4;
                      }
                      iI(), Q3();
                    }, sb: function(A8, I7, g6, B4, E4) {
                      I7 |= 0, g6 |= 0, B4 |= 0, E4 |= 0;
                      var o4, c4, D4 = 0, a4 = 0, y4 = 0;
                      if (c4 = D4 = r3, r3 = D4 = D4 - 512 & -64, o4 = (A8 |= 0) || I7) {
                        if (y4 = -1, !EI(a4 = D4 + 96 | 0, B4, E4)) {
                          for (B4 = I7 || A8, A8 = 0, j(I7 = D4 + 128 | 0, 0, 0, 64), cA(I7, a4, 32, 0), MI(a4, 32), cA(I7, E4, 32, 0), cA(I7, g6, 32, 0), ZA(I7, D4 + 32 | 0, 64), MI(I7, 384); g6 = (I7 = D4 + 32 | 0) + A8 | 0, C3[A8 + B4 | 0] = i3[0 | g6], C3[A8 + o4 | 0] = i3[g6 + 32 | 0], C3[(g6 = 1 | A8) + B4 | 0] = i3[I7 + g6 | 0], C3[g6 + o4 | 0] = i3[I7 + (33 | A8) | 0], 32 != (0 | (A8 = A8 + 2 | 0)); ) ;
                          MI(I7, 64), y4 = 0;
                        }
                        return r3 = c4, 0 | y4;
                      }
                      iI(), Q3();
                    }, tb: _I, ub: _I, vb: _I, wb: _I, xb: fI, yb: EI, zb: _I, Ab: _I, Bb: _I, Cb: pI, Db: KI, Eb: HI, Fb: FI, Gb: $A, Hb: function(A8, I7, g6, C4, B4, E4) {
                      return A8 |= 0, I7 |= 0, B4 |= 0, E4 |= 0, !(C4 |= 0) & (g6 |= 0) >>> 0 >= 4294967280 | C4 && (iI(), Q3()), tA(A8 + 16 | 0, A8, I7, g6, C4, B4, E4), 0;
                    }, Ib: AI, Jb: jA, Kb: FI, Lb: function(A8, I7, g6) {
                      return A8 |= 0, g6 |= 0, LA(I7 |= 0, 24), $(A8, I7, g6), C3[A8 + 32 | 0] = 1, C3[A8 + 33 | 0] = 0, C3[A8 + 34 | 0] = 0, C3[A8 + 35 | 0] = 0, g6 = i3[I7 + 16 | 0] | i3[I7 + 17 | 0] << 8 | i3[I7 + 18 | 0] << 16 | i3[I7 + 19 | 0] << 24, I7 = i3[I7 + 20 | 0] | i3[I7 + 21 | 0] << 8 | i3[I7 + 22 | 0] << 16 | i3[I7 + 23 | 0] << 24, C3[A8 + 44 | 0] = 0, C3[A8 + 45 | 0] = 0, C3[A8 + 46 | 0] = 0, C3[A8 + 47 | 0] = 0, C3[A8 + 48 | 0] = 0, C3[A8 + 49 | 0] = 0, C3[A8 + 50 | 0] = 0, C3[A8 + 51 | 0] = 0, C3[A8 + 36 | 0] = g6, C3[A8 + 37 | 0] = g6 >>> 8, C3[A8 + 38 | 0] = g6 >>> 16, C3[A8 + 39 | 0] = g6 >>> 24, C3[A8 + 40 | 0] = I7, C3[A8 + 41 | 0] = I7 >>> 8, C3[A8 + 42 | 0] = I7 >>> 16, C3[A8 + 43 | 0] = I7 >>> 24, 0;
                    }, Mb: function(A8, I7, g6) {
                      return $(A8 |= 0, I7 |= 0, g6 |= 0), C3[A8 + 32 | 0] = 1, C3[A8 + 33 | 0] = 0, C3[A8 + 34 | 0] = 0, C3[A8 + 35 | 0] = 0, g6 = i3[I7 + 16 | 0] | i3[I7 + 17 | 0] << 8 | i3[I7 + 18 | 0] << 16 | i3[I7 + 19 | 0] << 24, I7 = i3[I7 + 20 | 0] | i3[I7 + 21 | 0] << 8 | i3[I7 + 22 | 0] << 16 | i3[I7 + 23 | 0] << 24, C3[A8 + 44 | 0] = 0, C3[A8 + 45 | 0] = 0, C3[A8 + 46 | 0] = 0, C3[A8 + 47 | 0] = 0, C3[A8 + 48 | 0] = 0, C3[A8 + 49 | 0] = 0, C3[A8 + 50 | 0] = 0, C3[A8 + 51 | 0] = 0, C3[A8 + 36 | 0] = g6, C3[A8 + 37 | 0] = g6 >>> 8, C3[A8 + 38 | 0] = g6 >>> 16, C3[A8 + 39 | 0] = g6 >>> 24, C3[A8 + 40 | 0] = I7, C3[A8 + 41 | 0] = I7 >>> 8, C3[A8 + 42 | 0] = I7 >>> 16, C3[A8 + 43 | 0] = I7 >>> 24, 0;
                    }, Nb: function(A8) {
                      var I7, g6 = 0, B4 = 0;
                      r3 = I7 = r3 - 48 | 0, g6 = i3[28 + (A8 |= 0) | 0] | i3[A8 + 29 | 0] << 8 | i3[A8 + 30 | 0] << 16 | i3[A8 + 31 | 0] << 24, E3[I7 + 24 >> 2] = i3[A8 + 24 | 0] | i3[A8 + 25 | 0] << 8 | i3[A8 + 26 | 0] << 16 | i3[A8 + 27 | 0] << 24, E3[I7 + 28 >> 2] = g6, g6 = i3[A8 + 20 | 0] | i3[A8 + 21 | 0] << 8 | i3[A8 + 22 | 0] << 16 | i3[A8 + 23 | 0] << 24, E3[I7 + 16 >> 2] = i3[A8 + 16 | 0] | i3[A8 + 17 | 0] << 8 | i3[A8 + 18 | 0] << 16 | i3[A8 + 19 | 0] << 24, E3[I7 + 20 >> 2] = g6, g6 = i3[A8 + 4 | 0] | i3[A8 + 5 | 0] << 8 | i3[A8 + 6 | 0] << 16 | i3[A8 + 7 | 0] << 24, E3[I7 >> 2] = i3[0 | A8] | i3[A8 + 1 | 0] << 8 | i3[A8 + 2 | 0] << 16 | i3[A8 + 3 | 0] << 24, E3[I7 + 4 >> 2] = g6, g6 = i3[A8 + 12 | 0] | i3[A8 + 13 | 0] << 8 | i3[A8 + 14 | 0] << 16 | i3[A8 + 15 | 0] << 24, E3[I7 + 8 >> 2] = i3[A8 + 8 | 0] | i3[A8 + 9 | 0] << 8 | i3[A8 + 10 | 0] << 16 | i3[A8 + 11 | 0] << 24, E3[I7 + 12 >> 2] = g6, g6 = i3[A8 + 40 | 0] | i3[A8 + 41 | 0] << 8 | i3[A8 + 42 | 0] << 16 | i3[A8 + 43 | 0] << 24, E3[I7 + 32 >> 2] = i3[A8 + 36 | 0] | i3[A8 + 37 | 0] << 8 | i3[A8 + 38 | 0] << 16 | i3[A8 + 39 | 0] << 24, E3[I7 + 36 >> 2] = g6, yI(I7, I7, A8 + 32 | 0, A8), g6 = E3[I7 + 28 >> 2], B4 = E3[I7 + 24 >> 2], C3[A8 + 24 | 0] = B4, C3[A8 + 25 | 0] = B4 >>> 8, C3[A8 + 26 | 0] = B4 >>> 16, C3[A8 + 27 | 0] = B4 >>> 24, C3[A8 + 28 | 0] = g6, C3[A8 + 29 | 0] = g6 >>> 8, C3[A8 + 30 | 0] = g6 >>> 16, C3[A8 + 31 | 0] = g6 >>> 24, g6 = E3[I7 + 20 >> 2], B4 = E3[I7 + 16 >> 2], C3[A8 + 16 | 0] = B4, C3[A8 + 17 | 0] = B4 >>> 8, C3[A8 + 18 | 0] = B4 >>> 16, C3[A8 + 19 | 0] = B4 >>> 24, C3[A8 + 20 | 0] = g6, C3[A8 + 21 | 0] = g6 >>> 8, C3[A8 + 22 | 0] = g6 >>> 16, C3[A8 + 23 | 0] = g6 >>> 24, g6 = E3[I7 + 12 >> 2], B4 = E3[I7 + 8 >> 2], C3[A8 + 8 | 0] = B4, C3[A8 + 9 | 0] = B4 >>> 8, C3[A8 + 10 | 0] = B4 >>> 16, C3[A8 + 11 | 0] = B4 >>> 24, C3[A8 + 12 | 0] = g6, C3[A8 + 13 | 0] = g6 >>> 8, C3[A8 + 14 | 0] = g6 >>> 16, C3[A8 + 15 | 0] = g6 >>> 24, g6 = E3[I7 + 4 >> 2], B4 = E3[I7 >> 2], C3[0 | A8] = B4, C3[A8 + 1 | 0] = B4 >>> 8, C3[A8 + 2 | 0] = B4 >>> 16, C3[A8 + 3 | 0] = B4 >>> 24, C3[A8 + 4 | 0] = g6, C3[A8 + 5 | 0] = g6 >>> 8, C3[A8 + 6 | 0] = g6 >>> 16, C3[A8 + 7 | 0] = g6 >>> 24, B4 = E3[I7 + 36 >> 2], g6 = E3[I7 + 32 >> 2], C3[A8 + 32 | 0] = 1, C3[A8 + 33 | 0] = 0, C3[A8 + 34 | 0] = 0, C3[A8 + 35 | 0] = 0, C3[A8 + 36 | 0] = g6, C3[A8 + 37 | 0] = g6 >>> 8, C3[A8 + 38 | 0] = g6 >>> 16, C3[A8 + 39 | 0] = g6 >>> 24, C3[A8 + 40 | 0] = B4, C3[A8 + 41 | 0] = B4 >>> 8, C3[A8 + 42 | 0] = B4 >>> 16, C3[A8 + 43 | 0] = B4 >>> 24, r3 = I7 + 48 | 0;
                    }, Ob: function(A8, I7, g6, B4, o4, c4, D4, a4, y4, f4) {
                      A8 |= 0, I7 |= 0, B4 |= 0, c4 |= 0, D4 |= 0, y4 |= 0, f4 |= 0;
                      var e4, w4 = 0, t4 = 0, h4 = 0;
                      return w4 = o4 |= 0, w4 |= o4 = 0, e4 = o4 | (a4 |= 0), r3 = o4 = r3 - 384 | 0, (g6 |= 0) && (E3[g6 >> 2] = 0, E3[g6 + 4 >> 2] = 0), !c4 & w4 >>> 0 < 4294967279 ? (eI(t4 = o4 + 16 | 0, 64, h4 = A8 + 32 | 0, A8), nI(a4 = o4 + 80 | 0, t4), MI(t4, 64), rI(a4, D4, e4, y4), rI(a4, 34736, 0 - e4 & 15, 0), E3[o4 + 72 >> 2] = 0, E3[o4 + 76 >> 2] = 0, E3[(D4 = o4 - -64 | 0) >> 2] = 0, E3[D4 + 4 >> 2] = 0, E3[o4 + 56 >> 2] = 0, E3[o4 + 60 >> 2] = 0, E3[o4 + 48 >> 2] = 0, E3[o4 + 52 >> 2] = 0, E3[o4 + 40 >> 2] = 0, E3[o4 + 44 >> 2] = 0, E3[o4 + 32 >> 2] = 0, E3[o4 + 36 >> 2] = 0, E3[o4 + 16 >> 2] = 0, E3[o4 + 20 >> 2] = 0, E3[o4 + 24 >> 2] = 0, E3[o4 + 28 >> 2] = 0, C3[o4 + 16 | 0] = f4, vA(t4, t4, 64, 0, h4, 1, A8), rI(a4, t4, 64, 0), C3[0 | I7] = i3[o4 + 16 | 0], vA(I7 = I7 + 1 | 0, B4, w4, c4, h4, 2, A8), rI(a4, I7, w4, c4), rI(a4, 34736, 15 & w4, 0), E3[o4 + 8 >> 2] = e4, E3[o4 + 12 >> 2] = y4, rI(a4, B4 = o4 + 8 | 0, 8, 0), E3[o4 + 8 >> 2] = w4 - -64, E3[o4 + 12 >> 2] = c4 - ((w4 >>> 0 < 4294967232) - 1 | 0), rI(a4, B4, 8, 0), sI(a4, I7 = I7 + w4 | 0), MI(a4, 256), C3[A8 + 36 | 0] = i3[A8 + 36 | 0] ^ i3[0 | I7], C3[A8 + 37 | 0] = i3[A8 + 37 | 0] ^ i3[I7 + 1 | 0], C3[A8 + 38 | 0] = i3[A8 + 38 | 0] ^ i3[I7 + 2 | 0], C3[A8 + 39 | 0] = i3[A8 + 39 | 0] ^ i3[I7 + 3 | 0], C3[A8 + 40 | 0] = i3[A8 + 40 | 0] ^ i3[I7 + 4 | 0], C3[A8 + 41 | 0] = i3[A8 + 41 | 0] ^ i3[I7 + 5 | 0], C3[A8 + 42 | 0] = i3[A8 + 42 | 0] ^ i3[I7 + 6 | 0], C3[A8 + 43 | 0] = i3[A8 + 43 | 0] ^ i3[I7 + 7 | 0], dA(h4), (2 & f4 || SA(h4, 4)) && (I7 = i3[A8 + 28 | 0] | i3[A8 + 29 | 0] << 8 | i3[A8 + 30 | 0] << 16 | i3[A8 + 31 | 0] << 24, E3[o4 + 360 >> 2] = i3[A8 + 24 | 0] | i3[A8 + 25 | 0] << 8 | i3[A8 + 26 | 0] << 16 | i3[A8 + 27 | 0] << 24, E3[o4 + 364 >> 2] = I7, I7 = i3[A8 + 20 | 0] | i3[A8 + 21 | 0] << 8 | i3[A8 + 22 | 0] << 16 | i3[A8 + 23 | 0] << 24, E3[o4 + 352 >> 2] = i3[A8 + 16 | 0] | i3[A8 + 17 | 0] << 8 | i3[A8 + 18 | 0] << 16 | i3[A8 + 19 | 0] << 24, E3[o4 + 356 >> 2] = I7, I7 = i3[A8 + 4 | 0] | i3[A8 + 5 | 0] << 8 | i3[A8 + 6 | 0] << 16 | i3[A8 + 7 | 0] << 24, E3[o4 + 336 >> 2] = i3[0 | A8] | i3[A8 + 1 | 0] << 8 | i3[A8 + 2 | 0] << 16 | i3[A8 + 3 | 0] << 24, E3[o4 + 340 >> 2] = I7, I7 = i3[A8 + 12 | 0] | i3[A8 + 13 | 0] << 8 | i3[A8 + 14 | 0] << 16 | i3[A8 + 15 | 0] << 24, E3[o4 + 344 >> 2] = i3[A8 + 8 | 0] | i3[A8 + 9 | 0] << 8 | i3[A8 + 10 | 0] << 16 | i3[A8 + 11 | 0] << 24, E3[o4 + 348 >> 2] = I7, I7 = i3[A8 + 40 | 0] | i3[A8 + 41 | 0] << 8 | i3[A8 + 42 | 0] << 16 | i3[A8 + 43 | 0] << 24, E3[o4 + 368 >> 2] = i3[A8 + 36 | 0] | i3[A8 + 37 | 0] << 8 | i3[A8 + 38 | 0] << 16 | i3[A8 + 39 | 0] << 24, E3[o4 + 372 >> 2] = I7, yI(I7 = o4 + 336 | 0, I7, h4, A8), I7 = E3[o4 + 364 >> 2], B4 = E3[o4 + 360 >> 2], C3[A8 + 24 | 0] = B4, C3[A8 + 25 | 0] = B4 >>> 8, C3[A8 + 26 | 0] = B4 >>> 16, C3[A8 + 27 | 0] = B4 >>> 24, C3[A8 + 28 | 0] = I7, C3[A8 + 29 | 0] = I7 >>> 8, C3[A8 + 30 | 0] = I7 >>> 16, C3[A8 + 31 | 0] = I7 >>> 24, I7 = E3[o4 + 356 >> 2], B4 = E3[o4 + 352 >> 2], C3[A8 + 16 | 0] = B4, C3[A8 + 17 | 0] = B4 >>> 8, C3[A8 + 18 | 0] = B4 >>> 16, C3[A8 + 19 | 0] = B4 >>> 24, C3[A8 + 20 | 0] = I7, C3[A8 + 21 | 0] = I7 >>> 8, C3[A8 + 22 | 0] = I7 >>> 16, C3[A8 + 23 | 0] = I7 >>> 24, I7 = E3[o4 + 348 >> 2], B4 = E3[o4 + 344 >> 2], C3[A8 + 8 | 0] = B4, C3[A8 + 9 | 0] = B4 >>> 8, C3[A8 + 10 | 0] = B4 >>> 16, C3[A8 + 11 | 0] = B4 >>> 24, C3[A8 + 12 | 0] = I7, C3[A8 + 13 | 0] = I7 >>> 8, C3[A8 + 14 | 0] = I7 >>> 16, C3[A8 + 15 | 0] = I7 >>> 24, I7 = E3[o4 + 340 >> 2], B4 = E3[o4 + 336 >> 2], C3[0 | A8] = B4, C3[A8 + 1 | 0] = B4 >>> 8, C3[A8 + 2 | 0] = B4 >>> 16, C3[A8 + 3 | 0] = B4 >>> 24, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, I7 = E3[o4 + 368 >> 2], B4 = E3[o4 + 372 >> 2], C3[A8 + 32 | 0] = 1, C3[A8 + 33 | 0] = 0, C3[A8 + 34 | 0] = 0, C3[A8 + 35 | 0] = 0, C3[A8 + 36 | 0] = I7, C3[A8 + 37 | 0] = I7 >>> 8, C3[A8 + 38 | 0] = I7 >>> 16, C3[A8 + 39 | 0] = I7 >>> 24, C3[A8 + 40 | 0] = B4, C3[A8 + 41 | 0] = B4 >>> 8, C3[A8 + 42 | 0] = B4 >>> 16, C3[A8 + 43 | 0] = B4 >>> 24), g6 && (c4 = (A8 = w4 + 17 | 0) >>> 0 < 17 ? c4 + 1 | 0 : c4, E3[g6 >> 2] = A8, E3[g6 + 4 >> 2] = c4), r3 = o4 + 384 | 0) : (iI(), Q3()), 0;
                    }, Pb: function(A8, I7, g6, B4, o4, c4, D4, a4, y4, f4) {
                      A8 |= 0, I7 |= 0, B4 |= 0, o4 |= 0, a4 |= 0, f4 |= 0;
                      var e4, w4 = 0, t4 = 0, h4 = 0, k4 = 0, n4 = 0, s4 = 0;
                      w4 = c4 |= 0, c4 = D4 |= 0, t4 = 0 | w4, e4 = y4 |= 0, r3 = D4 = r3 - 400 | 0, (g6 |= 0) && (E3[g6 >> 2] = 0, E3[g6 + 4 >> 2] = 0), B4 && (C3[0 | B4] = 255), s4 = -1;
                      A: {
                        I: {
                          if (!((y4 = t4 >>> 0 < 17) & !c4)) {
                            if (n4 = w4 = c4 - y4 | 0, !w4 & (y4 = t4 - 17 | 0) >>> 0 >= 4294967279 | w4) break I;
                            eI(h4 = D4 + 32 | 0, 64, k4 = A8 + 32 | 0, A8), nI(w4 = D4 + 96 | 0, h4), MI(h4, 64), rI(w4, a4, e4, f4), rI(w4, 34736, 0 - e4 & 15, 0), E3[D4 + 88 >> 2] = 0, E3[D4 + 92 >> 2] = 0, E3[D4 + 80 >> 2] = 0, E3[D4 + 84 >> 2] = 0, E3[D4 + 72 >> 2] = 0, E3[D4 + 76 >> 2] = 0, E3[(a4 = D4 - -64 | 0) >> 2] = 0, E3[a4 + 4 >> 2] = 0, E3[D4 + 56 >> 2] = 0, E3[D4 + 60 >> 2] = 0, E3[D4 + 48 >> 2] = 0, E3[D4 + 52 >> 2] = 0, E3[D4 + 40 >> 2] = 0, E3[D4 + 44 >> 2] = 0, E3[D4 + 32 >> 2] = 0, E3[D4 + 36 >> 2] = 0, C3[D4 + 32 | 0] = i3[0 | o4], vA(h4, h4, 64, 0, k4, 1, A8), a4 = i3[D4 + 32 | 0], C3[D4 + 32 | 0] = i3[0 | o4], rI(w4, h4, 64, 0), rI(w4, o4 = o4 + 1 | 0, y4, n4), rI(w4, 34736, t4 - 1 & 15, 0), E3[D4 + 24 >> 2] = e4, E3[D4 + 28 >> 2] = f4, rI(w4, f4 = D4 + 24 | 0, 8, 0), c4 = (t4 = t4 + 47 | 0) >>> 0 < 47 ? c4 + 1 | 0 : c4, E3[D4 + 24 >> 2] = t4, E3[D4 + 28 >> 2] = c4, rI(w4, f4, 8, 0), sI(w4, D4), MI(w4, 256), NA(D4, o4 + y4 | 0, 16) ? MI(D4, 16) : (vA(I7, o4, y4, n4, k4, 2, A8), C3[A8 + 36 | 0] = i3[A8 + 36 | 0] ^ i3[0 | D4], C3[A8 + 37 | 0] = i3[A8 + 37 | 0] ^ i3[D4 + 1 | 0], C3[A8 + 38 | 0] = i3[A8 + 38 | 0] ^ i3[D4 + 2 | 0], C3[A8 + 39 | 0] = i3[A8 + 39 | 0] ^ i3[D4 + 3 | 0], C3[A8 + 40 | 0] = i3[A8 + 40 | 0] ^ i3[D4 + 4 | 0], C3[A8 + 41 | 0] = i3[A8 + 41 | 0] ^ i3[D4 + 5 | 0], C3[A8 + 42 | 0] = i3[A8 + 42 | 0] ^ i3[D4 + 6 | 0], C3[A8 + 43 | 0] = i3[A8 + 43 | 0] ^ i3[D4 + 7 | 0], dA(k4), (2 & a4 || SA(k4, 4)) && (I7 = i3[A8 + 28 | 0] | i3[A8 + 29 | 0] << 8 | i3[A8 + 30 | 0] << 16 | i3[A8 + 31 | 0] << 24, E3[D4 + 376 >> 2] = i3[A8 + 24 | 0] | i3[A8 + 25 | 0] << 8 | i3[A8 + 26 | 0] << 16 | i3[A8 + 27 | 0] << 24, E3[D4 + 380 >> 2] = I7, I7 = i3[A8 + 20 | 0] | i3[A8 + 21 | 0] << 8 | i3[A8 + 22 | 0] << 16 | i3[A8 + 23 | 0] << 24, E3[D4 + 368 >> 2] = i3[A8 + 16 | 0] | i3[A8 + 17 | 0] << 8 | i3[A8 + 18 | 0] << 16 | i3[A8 + 19 | 0] << 24, E3[D4 + 372 >> 2] = I7, I7 = i3[A8 + 4 | 0] | i3[A8 + 5 | 0] << 8 | i3[A8 + 6 | 0] << 16 | i3[A8 + 7 | 0] << 24, E3[D4 + 352 >> 2] = i3[0 | A8] | i3[A8 + 1 | 0] << 8 | i3[A8 + 2 | 0] << 16 | i3[A8 + 3 | 0] << 24, E3[D4 + 356 >> 2] = I7, I7 = i3[A8 + 12 | 0] | i3[A8 + 13 | 0] << 8 | i3[A8 + 14 | 0] << 16 | i3[A8 + 15 | 0] << 24, E3[D4 + 360 >> 2] = i3[A8 + 8 | 0] | i3[A8 + 9 | 0] << 8 | i3[A8 + 10 | 0] << 16 | i3[A8 + 11 | 0] << 24, E3[D4 + 364 >> 2] = I7, I7 = i3[A8 + 40 | 0] | i3[A8 + 41 | 0] << 8 | i3[A8 + 42 | 0] << 16 | i3[A8 + 43 | 0] << 24, E3[D4 + 384 >> 2] = i3[A8 + 36 | 0] | i3[A8 + 37 | 0] << 8 | i3[A8 + 38 | 0] << 16 | i3[A8 + 39 | 0] << 24, E3[D4 + 388 >> 2] = I7, yI(I7 = D4 + 352 | 0, I7, k4, A8), I7 = E3[D4 + 380 >> 2], o4 = E3[D4 + 376 >> 2], C3[A8 + 24 | 0] = o4, C3[A8 + 25 | 0] = o4 >>> 8, C3[A8 + 26 | 0] = o4 >>> 16, C3[A8 + 27 | 0] = o4 >>> 24, C3[A8 + 28 | 0] = I7, C3[A8 + 29 | 0] = I7 >>> 8, C3[A8 + 30 | 0] = I7 >>> 16, C3[A8 + 31 | 0] = I7 >>> 24, I7 = E3[D4 + 372 >> 2], o4 = E3[D4 + 368 >> 2], C3[A8 + 16 | 0] = o4, C3[A8 + 17 | 0] = o4 >>> 8, C3[A8 + 18 | 0] = o4 >>> 16, C3[A8 + 19 | 0] = o4 >>> 24, C3[A8 + 20 | 0] = I7, C3[A8 + 21 | 0] = I7 >>> 8, C3[A8 + 22 | 0] = I7 >>> 16, C3[A8 + 23 | 0] = I7 >>> 24, I7 = E3[D4 + 364 >> 2], o4 = E3[D4 + 360 >> 2], C3[A8 + 8 | 0] = o4, C3[A8 + 9 | 0] = o4 >>> 8, C3[A8 + 10 | 0] = o4 >>> 16, C3[A8 + 11 | 0] = o4 >>> 24, C3[A8 + 12 | 0] = I7, C3[A8 + 13 | 0] = I7 >>> 8, C3[A8 + 14 | 0] = I7 >>> 16, C3[A8 + 15 | 0] = I7 >>> 24, I7 = E3[D4 + 356 >> 2], o4 = E3[D4 + 352 >> 2], C3[0 | A8] = o4, C3[A8 + 1 | 0] = o4 >>> 8, C3[A8 + 2 | 0] = o4 >>> 16, C3[A8 + 3 | 0] = o4 >>> 24, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, I7 = E3[D4 + 384 >> 2], o4 = E3[D4 + 388 >> 2], C3[A8 + 32 | 0] = 1, C3[A8 + 33 | 0] = 0, C3[A8 + 34 | 0] = 0, C3[A8 + 35 | 0] = 0, C3[A8 + 36 | 0] = I7, C3[A8 + 37 | 0] = I7 >>> 8, C3[A8 + 38 | 0] = I7 >>> 16, C3[A8 + 39 | 0] = I7 >>> 24, C3[A8 + 40 | 0] = o4, C3[A8 + 41 | 0] = o4 >>> 8, C3[A8 + 42 | 0] = o4 >>> 16, C3[A8 + 43 | 0] = o4 >>> 24), g6 && (E3[g6 >> 2] = y4, E3[g6 + 4 >> 2] = n4), s4 = 0, B4 && (C3[0 | B4] = a4));
                          }
                          r3 = D4 + 400 | 0;
                          break A;
                        }
                        iI(), Q3();
                      }
                      return 0 | s4;
                    }, Qb: function() {
                      return 52;
                    }, Rb: function() {
                      return 17;
                    }, Sb: pI, Tb: _I, Ub: function() {
                      return -18;
                    }, Vb: YI, Wb: dI, Xb: bI, Yb: function() {
                      return 3;
                    }, Zb: UI, _b: KI, $b: function(A8, I7, g6, B4, Q4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, B4 |= 0;
                      var E4, o4, c4 = 0, D4 = 0, a4 = 0, y4 = 0, f4 = 0, e4 = 0, w4 = 0, r4 = 0, h4 = 0, k4 = 0, n4 = 0, s4 = 0, F4 = 0, S4 = 0;
                      if (F4 = 1886610805 ^ (c4 = i3[0 | (Q4 |= 0)] | i3[Q4 + 1 | 0] << 8 | i3[Q4 + 2 | 0] << 16 | i3[Q4 + 3 | 0] << 24), w4 = 1936682341 ^ (D4 = i3[Q4 + 4 | 0] | i3[Q4 + 5 | 0] << 8 | i3[Q4 + 6 | 0] << 16 | i3[Q4 + 7 | 0] << 24), c4 ^= 1852142177, a4 = 1819895653 ^ D4, S4 = 1852075885 ^ (D4 = i3[Q4 + 8 | 0] | i3[Q4 + 9 | 0] << 8 | i3[Q4 + 10 | 0] << 16 | i3[Q4 + 11 | 0] << 24), n4 = 1685025377 ^ (Q4 = i3[Q4 + 12 | 0] | i3[Q4 + 13 | 0] << 8 | i3[Q4 + 14 | 0] << 16 | i3[Q4 + 15 | 0] << 24), f4 = 2037671283 ^ D4, D4 = 1952801890 ^ Q4, k4 = g6, (0 | (o4 = (g6 + I7 | 0) - (E4 = 7 & g6) | 0)) != (0 | I7)) for (; g6 = (y4 = D4 ^ (s4 = i3[I7 + 4 | 0] | i3[I7 + 5 | 0] << 8 | i3[I7 + 6 | 0] << 16 | i3[I7 + 7 | 0] << 24)) + a4 | 0, f4 = B4 = c4 + (Q4 = f4 ^ (r4 = i3[0 | I7] | i3[I7 + 1 | 0] << 8 | i3[I7 + 2 | 0] << 16 | i3[I7 + 3 | 0] << 24)) | 0, h4 = g6 = B4 >>> 0 < Q4 >>> 0 ? g6 + 1 | 0 : g6, c4 = B4, B4 = g6, g6 = w4 + n4 | 0, g6 = (D4 = F4 + S4 | 0) >>> 0 < F4 >>> 0 ? g6 + 1 | 0 : g6, e4 = (a4 = _A(S4, n4, 13) ^ D4) + c4 | 0, B4 = (c4 = t3 ^ g6) + B4 | 0, c4 = _A(a4, c4, 17) ^ e4, n4 = _A(c4, B4 = (a4 = a4 >>> 0 > e4 >>> 0 ? B4 + 1 | 0 : B4) ^ t3, 13), w4 = t3, y4 = _A(Q4, y4, 16), Q4 = h4 ^ t3, y4 ^= f4, h4 = _A(D4, g6, 32), g6 = t3 + Q4 | 0, g6 = (f4 = B4) + (B4 = (D4 = y4 + h4 | 0) >>> 0 < h4 >>> 0 ? g6 + 1 | 0 : g6) | 0, h4 = g6 = (f4 = c4 + D4 | 0) >>> 0 < D4 >>> 0 ? g6 + 1 | 0 : g6, n4 = _A(c4 = f4 ^ n4, g6 ^= w4, 17), w4 = t3, y4 = _A(y4, Q4, 21), Q4 = B4 ^ t3, y4 ^= D4, D4 = _A(e4, a4, 32), B4 = t3 + Q4 | 0, g6 = (D4 = D4 >>> 0 > (a4 = y4 + D4 | 0) >>> 0 ? B4 + 1 | 0 : B4) + g6 | 0, S4 = (c4 = c4 + a4 | 0) ^ n4, B4 = g6 = c4 >>> 0 < a4 >>> 0 ? g6 + 1 | 0 : g6, n4 = g6 ^ w4, g6 = _A(y4, Q4, 16), y4 = D4 ^= t3, e4 = _A(g6 ^= a4, D4, 21), a4 = t3, h4 = (D4 = _A(f4, h4, 32)) + g6 | 0, g6 = t3 + y4 | 0, f4 = e4 ^ h4, D4 = (g6 = D4 >>> 0 > h4 >>> 0 ? g6 + 1 | 0 : g6) ^ a4, c4 = _A(c4, B4, 32), a4 = t3, F4 = h4 ^ r4, w4 = g6 ^ s4, (0 | o4) != (0 | (I7 = I7 + 8 | 0)); ) ;
                      switch (s4 = 0, e4 = k4 << 24, E4 - 1 | 0) {
                        case 6:
                          e4 |= i3[I7 + 6 | 0] << 16;
                        case 5:
                          e4 |= i3[I7 + 5 | 0] << 8;
                        case 4:
                          e4 |= i3[I7 + 4 | 0];
                        case 3:
                          s4 |= (g6 = i3[I7 + 3 | 0]) << 24, e4 |= B4 = g6 >>> 8 | 0;
                        case 2:
                          s4 |= (B4 = i3[I7 + 2 | 0]) << 16, e4 |= g6 = B4 >>> 16 | 0;
                        case 1:
                          s4 |= (g6 = i3[I7 + 1 | 0]) << 8, e4 |= B4 = g6 >>> 24 | 0;
                        case 0:
                          s4 = i3[0 | I7] | s4;
                      }
                      return I7 = A8, B4 = _A(Q4 = f4 ^ s4, A8 = D4 ^ e4, 16), A8 = A8 + a4 | 0, D4 = A8 = (h4 = Q4 + c4 | 0) >>> 0 < c4 >>> 0 ? A8 + 1 | 0 : A8, r4 = _A(Q4 = B4 ^ h4, A8 ^= g6 = t3, 21), a4 = t3, g6 = w4 + n4 | 0, B4 = g6 = (c4 = F4 + S4 | 0) >>> 0 < F4 >>> 0 ? g6 + 1 | 0 : g6, y4 = Q4, Q4 = _A(c4, g6, 32), g6 = t3 + A8 | 0, A8 = a4, a4 = g6 = Q4 >>> 0 > (f4 = y4 + Q4 | 0) >>> 0 ? g6 + 1 | 0 : g6, w4 = _A(Q4 = f4 ^ r4, A8 ^= g6, 16), y4 = t3, g6 = (c4 = k4 = _A(S4, n4, 13) ^ c4) + h4 | 0, B4 = (r4 = t3 ^ B4) + D4 | 0, h4 = Q4, Q4 = _A(g6, B4 = g6 >>> 0 < c4 >>> 0 ? B4 + 1 | 0 : B4, 32), A8 = t3 + A8 | 0, w4 = _A(c4 = w4 ^ (h4 = h4 + Q4 | 0), Q4 = (D4 = Q4 >>> 0 > h4 >>> 0 ? A8 + 1 | 0 : A8) ^ y4, 21), y4 = t3, k4 = _A(k4, r4, 17) ^ g6, g6 = (r4 = t3 ^ B4) + a4 | 0, A8 = g6 = (B4 = f4 = (A8 = k4) + f4 | 0) >>> 0 < A8 >>> 0 ? g6 + 1 | 0 : g6, a4 = c4, c4 = _A(B4, g6, 32), g6 = t3 + Q4 | 0, y4 = g6 = (c4 = c4 >>> 0 > (a4 = a4 + c4 | 0) >>> 0 ? g6 + 1 | 0 : g6) ^ y4, w4 = _A(n4 = a4 ^ w4, g6, 16), f4 = t3, k4 = _A(k4, r4, 13) ^ B4, A8 = (r4 = A8 ^ t3) + D4 | 0, B4 = A8 = (g6 = k4) >>> 0 > (Q4 = g6 + h4 | 0) >>> 0 ? A8 + 1 | 0 : A8, A8 = _A(Q4, A8, 32), g6 = y4 + t3 | 0, y4 = g6 = (D4 = (A8 = n4 + (255 ^ A8) | 0) >>> 0 < n4 >>> 0 ? g6 + 1 | 0 : g6) ^ f4, h4 = A8, w4 = _A(n4 = w4 ^ A8, g6, 21), f4 = t3, k4 = _A(k4, r4, 17) ^ Q4, g6 = (r4 = B4 ^ t3) + (c4 ^ e4) | 0, B4 = g6 = (A8 = a4 ^ s4) >>> 0 > (Q4 = k4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, A8 = _A(Q4, g6, 32), g6 = y4 + t3 | 0, y4 = g6 = (c4 = (A8 = A8 + n4 | 0) >>> 0 < n4 >>> 0 ? g6 + 1 | 0 : g6) ^ f4, a4 = A8, e4 = _A(w4 ^= A8, g6, 16), f4 = t3, k4 = _A(k4, r4, 13) ^ Q4, A8 = D4 + (r4 = t3 ^ B4) | 0, A8 = _A(Q4 = h4 + k4 | 0, g6 = A8 = Q4 >>> 0 < h4 >>> 0 ? A8 + 1 | 0 : A8, 32), B4 = y4 + t3 | 0, y4 = B4 = (D4 = (A8 = A8 + w4 | 0) >>> 0 < w4 >>> 0 ? B4 + 1 | 0 : B4) ^ f4, h4 = A8, e4 = _A(w4 = e4 ^ A8, B4, 21), f4 = t3, A8 = _A(k4, r4, 17), g6 = c4 + (k4 = g6 ^ t3) | 0, B4 = g6 = (Q4 = a4 + (r4 = A8 ^ Q4) | 0) >>> 0 < a4 >>> 0 ? g6 + 1 | 0 : g6, A8 = _A(Q4, g6, 32), g6 = y4 + t3 | 0, a4 = A8 = A8 + w4 | 0, c4 = g6 = A8 >>> 0 < w4 >>> 0 ? g6 + 1 | 0 : g6, e4 = _A(y4 = e4 ^ A8, g6 ^= f4, 16), f4 = t3, A8 = _A(r4, k4, 13), B4 = D4 + (k4 = B4 ^ t3) | 0, A8 = _A(Q4 = h4 + (r4 = A8 ^ Q4) | 0, B4 = Q4 >>> 0 < h4 >>> 0 ? B4 + 1 | 0 : B4, 32), g6 = g6 + t3 | 0, y4 = g6 = (D4 = (A8 = A8 + y4 | 0) >>> 0 < y4 >>> 0 ? g6 + 1 | 0 : g6) ^ f4, h4 = A8, e4 = _A(w4 = e4 ^ A8, g6, 21), f4 = t3, A8 = _A(r4, k4, 17), g6 = c4 + (k4 = B4 ^ t3) | 0, B4 = g6 = (Q4 = a4 + (r4 = A8 ^ Q4) | 0) >>> 0 < a4 >>> 0 ? g6 + 1 | 0 : g6, g6 = _A(Q4, g6, 32), A8 = y4 + t3 | 0, y4 = A8 = (c4 = (g6 = g6 + w4 | 0) >>> 0 < w4 >>> 0 ? A8 + 1 | 0 : A8) ^ f4, a4 = g6, e4 = _A(w4 = e4 ^ g6, A8, 16), f4 = t3, A8 = _A(r4, k4, 13), g6 = D4 + (k4 = B4 ^ t3) | 0, B4 = g6 = (Q4 = h4 + (r4 = A8 ^ Q4) | 0) >>> 0 < h4 >>> 0 ? g6 + 1 | 0 : g6, A8 = _A(Q4, g6, 32), g6 = y4 + t3 | 0, D4 = A8 = A8 + w4 | 0, e4 = _A(e4 ^ A8, (g6 = A8 >>> 0 < w4 >>> 0 ? g6 + 1 | 0 : g6) ^ f4, 21), f4 = t3, Q4 = _A(r4, k4, 17) ^ Q4, h4 = _A(Q4, A8 = B4 ^ t3, 13), A8 = A8 + c4 | 0, B4 = A8 = t3 ^ ((Q4 = Q4 + a4 | 0) >>> 0 < a4 >>> 0 ? A8 + 1 : A8), Q4 = _A(c4 = Q4 ^ h4, A8, 17) ^ e4, A8 = t3 ^ f4, B4 = g6 + B4 | 0, g6 = _A(g6 = c4 + D4 | 0, B4 = g6 >>> 0 < D4 >>> 0 ? B4 + 1 | 0 : B4, 32) ^ Q4 ^ g6, C3[0 | I7] = g6, C3[I7 + 1 | 0] = g6 >>> 8, C3[I7 + 2 | 0] = g6 >>> 16, C3[I7 + 3 | 0] = g6 >>> 24, A8 ^= B4 ^ t3, C3[I7 + 4 | 0] = A8, C3[I7 + 5 | 0] = A8 >>> 8, C3[I7 + 6 | 0] = A8 >>> 16, C3[I7 + 7 | 0] = A8 >>> 24, 0;
                    }, ac: SI, bc: NI, cc: JI, dc: _I, ec: _I, fc: JI, gc: function() {
                      return -65;
                    }, hc: function(A8, I7, g6) {
                      A8 |= 0;
                      var B4, Q4, E4, o4, c4 = 0, D4 = 0, a4 = 0, y4 = 0, f4 = 0;
                      return r3 = E4 = r3 - 160 | 0, FA(I7 |= 0, g6 |= 0, 32, 0), C3[0 | I7] = 248 & i3[0 | I7], C3[I7 + 31 | 0] = 63 & i3[I7 + 31 | 0] | 64, Z(E4, I7), mA(A8, E4), D4 = i3[(Q4 = g6) + 8 | 0] | i3[Q4 + 9 | 0] << 8 | i3[Q4 + 10 | 0] << 16 | i3[Q4 + 11 | 0] << 24, c4 = i3[Q4 + 12 | 0] | i3[Q4 + 13 | 0] << 8 | i3[Q4 + 14 | 0] << 16 | i3[Q4 + 15 | 0] << 24, a4 = i3[Q4 + 16 | 0] | i3[Q4 + 17 | 0] << 8 | i3[Q4 + 18 | 0] << 16 | i3[Q4 + 19 | 0] << 24, y4 = i3[Q4 + 20 | 0] | i3[Q4 + 21 | 0] << 8 | i3[Q4 + 22 | 0] << 16 | i3[Q4 + 23 | 0] << 24, f4 = i3[0 | Q4] | i3[Q4 + 1 | 0] << 8 | i3[Q4 + 2 | 0] << 16 | i3[Q4 + 3 | 0] << 24, g6 = i3[Q4 + 4 | 0] | i3[Q4 + 5 | 0] << 8 | i3[Q4 + 6 | 0] << 16 | i3[Q4 + 7 | 0] << 24, o4 = i3[Q4 + 28 | 0] | i3[Q4 + 29 | 0] << 8 | i3[Q4 + 30 | 0] << 16 | i3[Q4 + 31 | 0] << 24, B4 = I7, I7 = i3[Q4 + 24 | 0] | i3[Q4 + 25 | 0] << 8 | i3[Q4 + 26 | 0] << 16 | i3[Q4 + 27 | 0] << 24, C3[B4 + 24 | 0] = I7, C3[B4 + 25 | 0] = I7 >>> 8, C3[B4 + 26 | 0] = I7 >>> 16, C3[B4 + 27 | 0] = I7 >>> 24, C3[B4 + 28 | 0] = o4, C3[B4 + 29 | 0] = o4 >>> 8, C3[B4 + 30 | 0] = o4 >>> 16, C3[B4 + 31 | 0] = o4 >>> 24, C3[B4 + 16 | 0] = a4, C3[B4 + 17 | 0] = a4 >>> 8, C3[B4 + 18 | 0] = a4 >>> 16, C3[B4 + 19 | 0] = a4 >>> 24, C3[B4 + 20 | 0] = y4, C3[B4 + 21 | 0] = y4 >>> 8, C3[B4 + 22 | 0] = y4 >>> 16, C3[B4 + 23 | 0] = y4 >>> 24, C3[B4 + 8 | 0] = D4, C3[B4 + 9 | 0] = D4 >>> 8, C3[B4 + 10 | 0] = D4 >>> 16, C3[B4 + 11 | 0] = D4 >>> 24, C3[B4 + 12 | 0] = c4, C3[B4 + 13 | 0] = c4 >>> 8, C3[B4 + 14 | 0] = c4 >>> 16, C3[B4 + 15 | 0] = c4 >>> 24, C3[0 | B4] = f4, C3[B4 + 1 | 0] = f4 >>> 8, C3[B4 + 2 | 0] = f4 >>> 16, C3[B4 + 3 | 0] = f4 >>> 24, C3[B4 + 4 | 0] = g6, C3[B4 + 5 | 0] = g6 >>> 8, C3[B4 + 6 | 0] = g6 >>> 16, C3[B4 + 7 | 0] = g6 >>> 24, a4 = i3[(c4 = A8) + 8 | 0] | i3[c4 + 9 | 0] << 8 | i3[c4 + 10 | 0] << 16 | i3[c4 + 11 | 0] << 24, y4 = i3[c4 + 12 | 0] | i3[c4 + 13 | 0] << 8 | i3[c4 + 14 | 0] << 16 | i3[c4 + 15 | 0] << 24, f4 = i3[c4 + 16 | 0] | i3[c4 + 17 | 0] << 8 | i3[c4 + 18 | 0] << 16 | i3[c4 + 19 | 0] << 24, g6 = i3[c4 + 20 | 0] | i3[c4 + 21 | 0] << 8 | i3[c4 + 22 | 0] << 16 | i3[c4 + 23 | 0] << 24, I7 = i3[0 | c4] | i3[c4 + 1 | 0] << 8 | i3[c4 + 2 | 0] << 16 | i3[c4 + 3 | 0] << 24, A8 = i3[c4 + 4 | 0] | i3[c4 + 5 | 0] << 8 | i3[c4 + 6 | 0] << 16 | i3[c4 + 7 | 0] << 24, D4 = i3[c4 + 28 | 0] | i3[c4 + 29 | 0] << 8 | i3[c4 + 30 | 0] << 16 | i3[c4 + 31 | 0] << 24, c4 = i3[c4 + 24 | 0] | i3[c4 + 25 | 0] << 8 | i3[c4 + 26 | 0] << 16 | i3[c4 + 27 | 0] << 24, C3[B4 + 56 | 0] = c4, C3[B4 + 57 | 0] = c4 >>> 8, C3[B4 + 58 | 0] = c4 >>> 16, C3[B4 + 59 | 0] = c4 >>> 24, C3[B4 + 60 | 0] = D4, C3[B4 + 61 | 0] = D4 >>> 8, C3[B4 + 62 | 0] = D4 >>> 16, C3[B4 + 63 | 0] = D4 >>> 24, C3[B4 + 48 | 0] = f4, C3[B4 + 49 | 0] = f4 >>> 8, C3[B4 + 50 | 0] = f4 >>> 16, C3[B4 + 51 | 0] = f4 >>> 24, C3[B4 + 52 | 0] = g6, C3[B4 + 53 | 0] = g6 >>> 8, C3[B4 + 54 | 0] = g6 >>> 16, C3[B4 + 55 | 0] = g6 >>> 24, C3[B4 + 40 | 0] = a4, C3[B4 + 41 | 0] = a4 >>> 8, C3[B4 + 42 | 0] = a4 >>> 16, C3[B4 + 43 | 0] = a4 >>> 24, C3[B4 + 44 | 0] = y4, C3[B4 + 45 | 0] = y4 >>> 8, C3[B4 + 46 | 0] = y4 >>> 16, C3[B4 + 47 | 0] = y4 >>> 24, C3[B4 + 32 | 0] = I7, C3[B4 + 33 | 0] = I7 >>> 8, C3[B4 + 34 | 0] = I7 >>> 16, C3[B4 + 35 | 0] = I7 >>> 24, C3[B4 + 36 | 0] = A8, C3[B4 + 37 | 0] = A8 >>> 8, C3[B4 + 38 | 0] = A8 >>> 16, C3[B4 + 39 | 0] = A8 >>> 24, r3 = E4 + 160 | 0, 0;
                    }, ic: function(A8, I7) {
                      A8 |= 0, I7 |= 0;
                      var g6, B4, Q4, o4, c4, D4 = 0, a4 = 0, y4 = 0;
                      return r3 = a4 = r3 - 192 | 0, LA(a4, 32), FA(I7, a4, 32, 0), C3[0 | I7] = 248 & i3[0 | I7], C3[I7 + 31 | 0] = 63 & i3[I7 + 31 | 0] | 64, Z(y4 = a4 + 32 | 0, I7), mA(A8, y4), g6 = a4, y4 = E3[a4 + 28 >> 2], a4 = E3[a4 + 24 >> 2], C3[I7 + 24 | 0] = a4, C3[I7 + 25 | 0] = a4 >>> 8, C3[I7 + 26 | 0] = a4 >>> 16, C3[I7 + 27 | 0] = a4 >>> 24, C3[I7 + 28 | 0] = y4, C3[I7 + 29 | 0] = y4 >>> 8, C3[I7 + 30 | 0] = y4 >>> 16, C3[I7 + 31 | 0] = y4 >>> 24, y4 = E3[g6 + 20 >> 2], a4 = E3[g6 + 16 >> 2], C3[I7 + 16 | 0] = a4, C3[I7 + 17 | 0] = a4 >>> 8, C3[I7 + 18 | 0] = a4 >>> 16, C3[I7 + 19 | 0] = a4 >>> 24, C3[I7 + 20 | 0] = y4, C3[I7 + 21 | 0] = y4 >>> 8, C3[I7 + 22 | 0] = y4 >>> 16, C3[I7 + 23 | 0] = y4 >>> 24, y4 = E3[g6 + 12 >> 2], a4 = E3[g6 + 8 >> 2], C3[I7 + 8 | 0] = a4, C3[I7 + 9 | 0] = a4 >>> 8, C3[I7 + 10 | 0] = a4 >>> 16, C3[I7 + 11 | 0] = a4 >>> 24, C3[I7 + 12 | 0] = y4, C3[I7 + 13 | 0] = y4 >>> 8, C3[I7 + 14 | 0] = y4 >>> 16, C3[I7 + 15 | 0] = y4 >>> 24, y4 = E3[g6 + 4 >> 2], a4 = E3[g6 >> 2], C3[0 | I7] = a4, C3[I7 + 1 | 0] = a4 >>> 8, C3[I7 + 2 | 0] = a4 >>> 16, C3[I7 + 3 | 0] = a4 >>> 24, C3[I7 + 4 | 0] = y4, C3[I7 + 5 | 0] = y4 >>> 8, C3[I7 + 6 | 0] = y4 >>> 16, C3[I7 + 7 | 0] = y4 >>> 24, B4 = i3[(D4 = A8) + 8 | 0] | i3[D4 + 9 | 0] << 8 | i3[D4 + 10 | 0] << 16 | i3[D4 + 11 | 0] << 24, Q4 = i3[D4 + 12 | 0] | i3[D4 + 13 | 0] << 8 | i3[D4 + 14 | 0] << 16 | i3[D4 + 15 | 0] << 24, o4 = i3[D4 + 16 | 0] | i3[D4 + 17 | 0] << 8 | i3[D4 + 18 | 0] << 16 | i3[D4 + 19 | 0] << 24, y4 = i3[D4 + 20 | 0] | i3[D4 + 21 | 0] << 8 | i3[D4 + 22 | 0] << 16 | i3[D4 + 23 | 0] << 24, a4 = i3[0 | D4] | i3[D4 + 1 | 0] << 8 | i3[D4 + 2 | 0] << 16 | i3[D4 + 3 | 0] << 24, A8 = i3[D4 + 4 | 0] | i3[D4 + 5 | 0] << 8 | i3[D4 + 6 | 0] << 16 | i3[D4 + 7 | 0] << 24, c4 = i3[D4 + 28 | 0] | i3[D4 + 29 | 0] << 8 | i3[D4 + 30 | 0] << 16 | i3[D4 + 31 | 0] << 24, D4 = i3[D4 + 24 | 0] | i3[D4 + 25 | 0] << 8 | i3[D4 + 26 | 0] << 16 | i3[D4 + 27 | 0] << 24, C3[I7 + 56 | 0] = D4, C3[I7 + 57 | 0] = D4 >>> 8, C3[I7 + 58 | 0] = D4 >>> 16, C3[I7 + 59 | 0] = D4 >>> 24, C3[I7 + 60 | 0] = c4, C3[I7 + 61 | 0] = c4 >>> 8, C3[I7 + 62 | 0] = c4 >>> 16, C3[I7 + 63 | 0] = c4 >>> 24, C3[I7 + 48 | 0] = o4, C3[I7 + 49 | 0] = o4 >>> 8, C3[I7 + 50 | 0] = o4 >>> 16, C3[I7 + 51 | 0] = o4 >>> 24, C3[I7 + 52 | 0] = y4, C3[I7 + 53 | 0] = y4 >>> 8, C3[I7 + 54 | 0] = y4 >>> 16, C3[I7 + 55 | 0] = y4 >>> 24, C3[I7 + 40 | 0] = B4, C3[I7 + 41 | 0] = B4 >>> 8, C3[I7 + 42 | 0] = B4 >>> 16, C3[I7 + 43 | 0] = B4 >>> 24, C3[I7 + 44 | 0] = Q4, C3[I7 + 45 | 0] = Q4 >>> 8, C3[I7 + 46 | 0] = Q4 >>> 16, C3[I7 + 47 | 0] = Q4 >>> 24, C3[I7 + 32 | 0] = a4, C3[I7 + 33 | 0] = a4 >>> 8, C3[I7 + 34 | 0] = a4 >>> 16, C3[I7 + 35 | 0] = a4 >>> 24, C3[I7 + 36 | 0] = A8, C3[I7 + 37 | 0] = A8 >>> 8, C3[I7 + 38 | 0] = A8 >>> 16, C3[I7 + 39 | 0] = A8 >>> 24, MI(g6, 32), r3 = g6 + 192 | 0, 0;
                    }, jc: function(A8, I7, g6, C4, B4, Q4) {
                      I7 |= 0, B4 |= 0, Q4 |= 0;
                      var i4, o4 = 0;
                      return r3 = i4 = r3 - 16 | 0, k3(A8 |= 0, i4 + 8 | 0, lA(A8 - -64 | 0, g6 |= 0, C4 |= 0), C4, B4, Q4, 0), 64 != E3[i4 + 8 >> 2] | E3[i4 + 12 >> 2] ? (I7 && (E3[I7 >> 2] = 0, E3[I7 + 4 >> 2] = 0), VA(A8, 0, C4 - -64 | 0), o4 = -1) : I7 && (E3[I7 >> 2] = C4 - -64, E3[I7 + 4 >> 2] = B4 - ((C4 >>> 0 < 4294967232) - 1 | 0)), r3 = i4 + 16 | 0, 0 | o4;
                    }, kc: function(A8, I7, g6, C4, B4, Q4) {
                      A8 |= 0, I7 |= 0, g6 |= 0;
                      var i4 = 0;
                      A: {
                        I: {
                          if (i4 = C4 |= 0, !(!(B4 |= 0) & C4 >>> 0 < 64 || (C4 = B4 - 1 | 0, !(C4 = (B4 = i4 + -64 | 0) >>> 0 < 4294967232 ? C4 + 1 | 0 : C4) & B4 >>> 0 > 4294967231 | C4))) {
                            if (!F3(g6, i4 = g6 - -64 | 0, B4, C4, Q4 |= 0, 0)) break I;
                            A8 && VA(A8, 0, B4);
                          }
                          if (g6 = -1, !I7) break A;
                          E3[I7 >> 2] = 0, E3[I7 + 4 >> 2] = 0;
                          break A;
                        }
                        I7 && (E3[I7 >> 2] = B4, E3[I7 + 4 >> 2] = C4), g6 = 0, A8 && lA(A8, i4, B4);
                      }
                      return 0 | g6;
                    }, lc: function(A8, I7, g6, C4, B4, Q4) {
                      return k3(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q4 |= 0, 0), 0;
                    }, mc: function(A8, I7, g6, C4, B4) {
                      return 0 | F3(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, 0);
                    }, nc: function(A8) {
                      return MA(A8 |= 0), 0;
                    }, oc: function(A8, I7, g6, C4) {
                      return 0 | W(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0);
                    }, pc: function(A8, I7, g6, C4) {
                      var B4;
                      return I7 |= 0, g6 |= 0, C4 |= 0, r3 = B4 = r3 + -64 | 0, v3(A8 |= 0, B4), A8 = k3(I7, g6, B4, 64, 0, C4, 1), r3 = B4 - -64 | 0, 0 | A8;
                    }, qc: function(A8, I7, g6) {
                      var C4;
                      return I7 |= 0, g6 |= 0, r3 = C4 = r3 + -64 | 0, v3(A8 |= 0, C4), A8 = F3(I7, C4, 64, 0, g6, 1), r3 = C4 - -64 | 0, 0 | A8;
                    }, rc: function(A8, I7) {
                      A8 |= 0;
                      var g6, B4 = 0, Q4 = 0, i4 = 0, o4 = 0, D4 = 0, a4 = 0, y4 = 0, f4 = 0, e4 = 0, w4 = 0, h4 = 0, k4 = 0, n4 = 0, s4 = 0, F4 = 0, S4 = 0, N4 = 0, K4 = 0, p4 = 0, H4 = 0, G4 = 0, J4 = 0, Y4 = 0, U4 = 0, d4 = 0, b4 = 0, P4 = 0, v5 = 0, R4 = 0, L4 = 0, x4 = 0, u4 = 0, m4 = 0, l3 = 0, z2 = 0, j2 = 0, T2 = 0, V2 = 0, Z2 = 0, W2 = 0, $2 = 0, AA2 = 0, IA2 = 0, gA2 = 0, CA2 = 0, BA2 = 0, QA2 = 0, EA2 = 0, oA2 = 0, cA2 = 0, aA2 = 0, yA2 = 0, fA2 = 0, wA2 = 0, rA2 = 0, tA2 = 0, hA2 = 0, kA2 = 0, nA2 = 0, sA2 = 0, FA2 = 0, MA2 = 0, NA2 = 0, _A2 = 0, pA2 = 0, HA2 = 0, GA2 = 0, JA2 = 0, YA2 = 0, UA2 = 0, dA2 = 0, bA2 = 0, vA2 = 0, RA2 = 0, LA2 = 0, xA2 = 0, uA2 = 0, mA2 = 0, qA2 = 0, lA2 = 0;
                      if (r3 = g6 = r3 - 256 | 0, bA2 = -1, !KA(I7 |= 0) && !q3(B4 = g6 + 96 | 0, I7)) {
                        for (r3 = i4 = r3 - 2048 | 0, DA(o4 = i4 + 640 | 0, B4), B4 = E3[(I7 = B4) + 36 >> 2], E3[i4 + 352 >> 2] = E3[I7 + 32 >> 2], E3[i4 + 356 >> 2] = B4, B4 = E3[I7 + 28 >> 2], E3[i4 + 344 >> 2] = E3[I7 + 24 >> 2], E3[i4 + 348 >> 2] = B4, B4 = E3[I7 + 20 >> 2], E3[i4 + 336 >> 2] = E3[I7 + 16 >> 2], E3[i4 + 340 >> 2] = B4, B4 = E3[I7 + 12 >> 2], E3[i4 + 328 >> 2] = E3[I7 + 8 >> 2], E3[i4 + 332 >> 2] = B4, B4 = E3[I7 + 4 >> 2], E3[i4 + 320 >> 2] = E3[I7 >> 2], E3[i4 + 324 >> 2] = B4, B4 = E3[I7 + 52 >> 2], E3[i4 + 368 >> 2] = E3[I7 + 48 >> 2], E3[i4 + 372 >> 2] = B4, B4 = E3[I7 + 60 >> 2], E3[i4 + 376 >> 2] = E3[I7 + 56 >> 2], E3[i4 + 380 >> 2] = B4, Q4 = E3[4 + (B4 = I7 - -64 | 0) >> 2], E3[i4 + 384 >> 2] = E3[B4 >> 2], E3[i4 + 388 >> 2] = Q4, B4 = E3[I7 + 76 >> 2], E3[i4 + 392 >> 2] = E3[I7 + 72 >> 2], E3[i4 + 396 >> 2] = B4, B4 = E3[I7 + 44 >> 2], E3[i4 + 360 >> 2] = E3[I7 + 40 >> 2], E3[i4 + 364 >> 2] = B4, B4 = E3[I7 + 92 >> 2], E3[i4 + 408 >> 2] = E3[I7 + 88 >> 2], E3[i4 + 412 >> 2] = B4, B4 = E3[I7 + 100 >> 2], E3[i4 + 416 >> 2] = E3[I7 + 96 >> 2], E3[i4 + 420 >> 2] = B4, B4 = E3[I7 + 108 >> 2], E3[i4 + 424 >> 2] = E3[I7 + 104 >> 2], E3[i4 + 428 >> 2] = B4, B4 = E3[I7 + 116 >> 2], E3[i4 + 432 >> 2] = E3[I7 + 112 >> 2], E3[i4 + 436 >> 2] = B4, B4 = E3[I7 + 84 >> 2], E3[i4 + 400 >> 2] = E3[I7 + 80 >> 2], E3[i4 + 404 >> 2] = B4, _3(I7 = i4 + 480 | 0, B4 = i4 + 320 | 0), M3(Q4 = i4 + 160 | 0, I7, a4 = i4 + 600 | 0), M3(i4 + 200 | 0, f4 = i4 + 520 | 0, e4 = i4 + 560 | 0), M3(i4 + 240 | 0, e4, a4), M3(i4 + 280 | 0, I7, f4), X(I7, Q4, o4), M3(B4, I7, a4), M3(F4 = i4 + 360 | 0, f4, e4), M3(S4 = i4 + 400 | 0, e4, a4), M3(k4 = i4 + 440 | 0, I7, f4), DA(o4 = i4 + 800 | 0, B4), X(I7, Q4, o4), M3(B4, I7, a4), M3(F4, f4, e4), M3(S4, e4, a4), M3(k4, I7, f4), DA(o4 = i4 + 960 | 0, B4), X(I7, Q4, o4), M3(B4, I7, a4), M3(F4, f4, e4), M3(S4, e4, a4), M3(k4, I7, f4), DA(o4 = i4 + 1120 | 0, B4), X(I7, Q4, o4), M3(B4, I7, a4), M3(F4, f4, e4), M3(S4, e4, a4), M3(k4, I7, f4), DA(o4 = i4 + 1280 | 0, B4), X(I7, Q4, o4), M3(B4, I7, a4), M3(F4, f4, e4), M3(S4, e4, a4), M3(k4, I7, f4), DA(o4 = i4 + 1440 | 0, B4), X(I7, Q4, o4), M3(B4, I7, a4), M3(F4, f4, e4), M3(S4, e4, a4), M3(k4, I7, f4), DA(o4 = i4 + 1600 | 0, B4), X(I7, Q4, o4), M3(B4, I7, a4), M3(F4, f4, e4), M3(S4, e4, a4), M3(k4, I7, f4), DA(i4 + 1760 | 0, B4), E3[i4 + 32 >> 2] = 0, E3[i4 + 36 >> 2] = 0, E3[i4 + 24 >> 2] = 0, E3[i4 + 28 >> 2] = 0, E3[i4 + 16 >> 2] = 0, E3[i4 + 20 >> 2] = 0, E3[i4 + 8 >> 2] = 0, E3[i4 + 12 >> 2] = 0, E3[i4 + 52 >> 2] = 0, E3[i4 + 56 >> 2] = 0, E3[i4 + 60 >> 2] = 0, E3[i4 + 64 >> 2] = 0, E3[i4 + 68 >> 2] = 0, E3[i4 + 72 >> 2] = 0, E3[i4 + 76 >> 2] = 0, E3[i4 + 80 >> 2] = 1, E3[i4 >> 2] = 0, E3[i4 + 4 >> 2] = 0, E3[i4 + 44 >> 2] = 0, E3[i4 + 48 >> 2] = 0, E3[i4 + 40 >> 2] = 1, VA(i4 + 84 | 0, 0, 76), w4 = i4 + 120 | 0, s4 = i4 + 2008 | 0, n4 = i4 + 1968 | 0, B4 = i4 + 80 | 0, Q4 = i4 + 40 | 0, o4 = 252; D4 = E3[i4 + 36 >> 2], E3[(I7 = i4 + 1960 | 0) >> 2] = E3[i4 + 32 >> 2], E3[I7 + 4 >> 2] = D4, D4 = E3[i4 + 28 >> 2], E3[(I7 = i4 + 1952 | 0) >> 2] = E3[i4 + 24 >> 2], E3[I7 + 4 >> 2] = D4, D4 = E3[i4 + 20 >> 2], E3[(I7 = i4 + 1944 | 0) >> 2] = E3[i4 + 16 >> 2], E3[I7 + 4 >> 2] = D4, D4 = E3[i4 + 12 >> 2], E3[(I7 = i4 + 1936 | 0) >> 2] = E3[i4 + 8 >> 2], E3[I7 + 4 >> 2] = D4, I7 = E3[i4 + 4 >> 2], E3[i4 + 1928 >> 2] = E3[i4 >> 2], E3[i4 + 1932 >> 2] = I7, D4 = E3[(I7 = Q4) + 36 >> 2], E3[n4 + 32 >> 2] = E3[I7 + 32 >> 2], E3[n4 + 36 >> 2] = D4, D4 = E3[I7 + 28 >> 2], E3[n4 + 24 >> 2] = E3[I7 + 24 >> 2], E3[n4 + 28 >> 2] = D4, D4 = E3[I7 + 20 >> 2], E3[n4 + 16 >> 2] = E3[I7 + 16 >> 2], E3[n4 + 20 >> 2] = D4, D4 = E3[I7 + 12 >> 2], E3[n4 + 8 >> 2] = E3[I7 + 8 >> 2], E3[n4 + 12 >> 2] = D4, D4 = E3[I7 + 4 >> 2], E3[n4 >> 2] = E3[I7 >> 2], E3[n4 + 4 >> 2] = D4, D4 = E3[(I7 = B4) + 36 >> 2], E3[s4 + 32 >> 2] = E3[I7 + 32 >> 2], E3[s4 + 36 >> 2] = D4, D4 = E3[I7 + 28 >> 2], E3[s4 + 24 >> 2] = E3[I7 + 24 >> 2], E3[s4 + 28 >> 2] = D4, D4 = E3[I7 + 20 >> 2], E3[s4 + 16 >> 2] = E3[I7 + 16 >> 2], E3[s4 + 20 >> 2] = D4, D4 = E3[I7 + 12 >> 2], E3[s4 + 8 >> 2] = E3[I7 + 8 >> 2], E3[s4 + 12 >> 2] = D4, D4 = E3[I7 + 4 >> 2], E3[s4 >> 2] = E3[I7 >> 2], E3[s4 + 4 >> 2] = D4, o4 = C3[(I7 = o4) + 33408 | 0], _3(D4 = i4 + 480 | 0, i4 + 1928 | 0), (0 | o4) > 0 ? (M3(K4 = i4 + 320 | 0, D4, a4), M3(F4, f4, e4), M3(S4, e4, a4), M3(k4, D4, f4), X(D4, K4, (i4 + 640 | 0) + c3((254 & o4) >>> 1 | 0, 160) | 0)) : (0 | o4) >= 0 || (M3(K4 = i4 + 320 | 0, D4 = i4 + 480 | 0, a4), M3(F4, f4, e4), M3(S4, e4, a4), M3(k4, D4, f4), O(D4, K4, (i4 + 640 | 0) + c3((0 - o4 & 254) >>> 1 | 0, 160) | 0)), M3(i4, o4 = i4 + 480 | 0, a4), M3(Q4, f4, e4), M3(B4, e4, a4), M3(w4, o4, f4), o4 = I7 - 1 | 0, I7; ) ;
                        eA(I7 = i4 + 640 | 0, i4), I7 = SA(I7, 32), r3 = i4 + 2048 | 0, I7 && (bA2 = 0, u4 = E3[g6 + 172 >> 2], E3[g6 + 36 >> 2] = 0 - u4, F4 = E3[g6 + 168 >> 2], E3[g6 + 32 >> 2] = 0 - F4, m4 = E3[g6 + 164 >> 2], E3[g6 + 28 >> 2] = 0 - m4, f4 = E3[g6 + 160 >> 2], E3[g6 + 24 >> 2] = 0 - f4, l3 = E3[g6 + 156 >> 2], E3[g6 + 20 >> 2] = 0 - l3, e4 = E3[g6 + 152 >> 2], E3[g6 + 16 >> 2] = 0 - e4, z2 = E3[g6 + 148 >> 2], E3[g6 + 12 >> 2] = 0 - z2, s4 = E3[g6 + 144 >> 2], E3[g6 + 8 >> 2] = 0 - s4, j2 = E3[g6 + 140 >> 2], E3[g6 + 4 >> 2] = 0 - j2, i4 = E3[g6 + 136 >> 2], E3[g6 >> 2] = 1 - i4, iA(g6, g6), I7 = PA(S4 = E3[g6 + 4 >> 2], R4 = S4 >> 31, J4 = l3 << 1, oA2 = J4 >> 31), B4 = t3, Q4 = PA(a4 = E3[g6 >> 2], Y4 = a4 >> 31, f4, U4 = f4 >> 31), B4 = t3 + B4 | 0, B4 = (I7 = Q4 + I7 | 0) >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = (o4 = PA(D4 = E3[g6 + 8 >> 2], T2 = D4 >> 31, e4, d4 = e4 >> 31)) + I7 | 0, I7 = t3 + B4 | 0, I7 = Q4 >>> 0 < o4 >>> 0 ? I7 + 1 | 0 : I7, B4 = Q4, Q4 = PA(L4 = E3[g6 + 12 >> 2], W2 = L4 >> 31, IA2 = z2 << 1, cA2 = IA2 >> 31), I7 = t3 + I7 | 0, I7 = (B4 = B4 + Q4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = PA(V2 = E3[g6 + 16 >> 2], gA2 = V2 >> 31, s4, b4 = s4 >> 31), I7 = t3 + I7 | 0, I7 = (B4 = Q4 + B4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, HA2 = o4 = E3[g6 + 20 >> 2], n4 = PA(o4, aA2 = o4 >> 31, CA2 = j2 << 1, yA2 = CA2 >> 31), Q4 = t3 + I7 | 0, Q4 = (B4 = n4 + B4 | 0) >>> 0 < n4 >>> 0 ? Q4 + 1 | 0 : Q4, GA2 = p4 = E3[g6 + 24 >> 2], I7 = (i4 = PA(p4, NA2 = p4 >> 31, n4 = i4 + 1 | 0, P4 = n4 >> 31)) + B4 | 0, B4 = t3 + Q4 | 0, B4 = I7 >>> 0 < i4 >>> 0 ? B4 + 1 | 0 : B4, fA2 = E3[g6 + 28 >> 2], Q4 = (i4 = PA(K4 = c3(fA2, 19), $2 = K4 >> 31, BA2 = u4 << 1, wA2 = BA2 >> 31)) + I7 | 0, I7 = t3 + B4 | 0, I7 = Q4 >>> 0 < i4 >>> 0 ? I7 + 1 | 0 : I7, B4 = Q4, vA2 = E3[g6 + 32 >> 2], Q4 = PA(w4 = c3(vA2, 19), Z2 = w4 >> 31, F4, v5 = F4 >> 31), I7 = t3 + I7 | 0, I7 = (B4 = B4 + Q4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, RA2 = E3[g6 + 36 >> 2], Q4 = PA(k4 = c3(RA2, 19), x4 = k4 >> 31, QA2 = m4 << 1, rA2 = QA2 >> 31), I7 = t3 + I7 | 0, h4 = B4 = Q4 + B4 | 0, i4 = B4 >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, I7 = PA(e4, d4, S4, R4), B4 = t3, y4 = PA(a4, Y4, l3, tA2 = l3 >> 31), Q4 = t3 + B4 | 0, Q4 = (I7 = y4 + I7 | 0) >>> 0 < y4 >>> 0 ? Q4 + 1 | 0 : Q4, y4 = PA(D4, T2, z2, hA2 = z2 >> 31), B4 = t3 + Q4 | 0, B4 = (I7 = y4 + I7 | 0) >>> 0 < y4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = (y4 = PA(s4, b4, L4, W2)) + I7 | 0, I7 = t3 + B4 | 0, I7 = Q4 >>> 0 < y4 >>> 0 ? I7 + 1 | 0 : I7, B4 = Q4, Q4 = PA(V2, gA2, j2, kA2 = j2 >> 31), I7 = t3 + I7 | 0, I7 = (B4 = B4 + Q4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = PA(n4, P4, o4, aA2), I7 = t3 + I7 | 0, I7 = (B4 = Q4 + B4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, y4 = PA(p4 = c3(p4, 19), EA2 = p4 >> 31, u4, nA2 = u4 >> 31), Q4 = t3 + I7 | 0, Q4 = (B4 = y4 + B4 | 0) >>> 0 < y4 >>> 0 ? Q4 + 1 | 0 : Q4, I7 = (y4 = PA(F4, v5, K4, $2)) + B4 | 0, B4 = t3 + Q4 | 0, B4 = I7 >>> 0 < y4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = (y4 = PA(w4, Z2, m4, sA2 = m4 >> 31)) + I7 | 0, I7 = t3 + B4 | 0, I7 = Q4 >>> 0 < y4 >>> 0 ? I7 + 1 | 0 : I7, B4 = Q4, Q4 = PA(f4, U4, k4, x4), I7 = t3 + I7 | 0, JA2 = B4 = B4 + Q4 | 0, AA2 = B4 >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, I7 = PA(S4, R4, IA2, cA2), Q4 = t3, B4 = (y4 = PA(a4, Y4, e4, d4)) + I7 | 0, I7 = t3 + Q4 | 0, I7 = B4 >>> 0 < y4 >>> 0 ? I7 + 1 | 0 : I7, y4 = PA(s4, b4, D4, T2), Q4 = t3 + I7 | 0, Q4 = (B4 = y4 + B4 | 0) >>> 0 < y4 >>> 0 ? Q4 + 1 | 0 : Q4, I7 = (y4 = PA(L4, W2, CA2, yA2)) + B4 | 0, B4 = t3 + Q4 | 0, B4 = I7 >>> 0 < y4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = (y4 = PA(n4, P4, V2, gA2)) + I7 | 0, I7 = t3 + B4 | 0, I7 = Q4 >>> 0 < y4 >>> 0 ? I7 + 1 | 0 : I7, B4 = Q4, Q4 = PA(y4 = c3(o4, 19), FA2 = y4 >> 31, BA2, wA2), I7 = t3 + I7 | 0, I7 = (B4 = B4 + Q4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = PA(F4, v5, p4, EA2), I7 = t3 + I7 | 0, I7 = (B4 = Q4 + B4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, o4 = PA(K4, $2, QA2, rA2), Q4 = t3 + I7 | 0, Q4 = (B4 = o4 + B4 | 0) >>> 0 < o4 >>> 0 ? Q4 + 1 | 0 : Q4, I7 = (o4 = PA(f4, U4, w4, Z2)) + B4 | 0, B4 = t3 + Q4 | 0, B4 = I7 >>> 0 < o4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = (o4 = PA(k4, x4, J4, oA2)) + I7 | 0, I7 = t3 + B4 | 0, LA2 = Q4, xA2 = I7 = Q4 >>> 0 < o4 >>> 0 ? I7 + 1 | 0 : I7, uA2 = Q4 = Q4 + 33554432 | 0, mA2 = I7 = Q4 >>> 0 < 33554432 ? I7 + 1 | 0 : I7, Q4 = (67108863 & I7) << 6 | Q4 >>> 26, I7 = (I7 >> 26) + AA2 | 0, JA2 = o4 = Q4 + JA2 | 0, I7 = Q4 >>> 0 > o4 >>> 0 ? I7 + 1 | 0 : I7, qA2 = o4 = o4 + 16777216 | 0, I7 = (B4 = (Q4 = o4 >>> 0 < 16777216 ? I7 + 1 | 0 : I7) >> 25) + i4 | 0, I7 = (Q4 = (o4 = (33554431 & Q4) << 7 | o4 >>> 25) + h4 | 0) >>> 0 < o4 >>> 0 ? I7 + 1 | 0 : I7, G4 = B4 = Q4 + 33554432 | 0, o4 = I7 = B4 >>> 0 < 33554432 ? I7 + 1 | 0 : I7, E3[g6 + 72 >> 2] = Q4 - (-67108864 & B4), I7 = PA(S4, R4, CA2, yA2), B4 = t3, i4 = PA(a4, Y4, s4, b4), Q4 = t3 + B4 | 0, Q4 = (I7 = i4 + I7 | 0) >>> 0 < i4 >>> 0 ? Q4 + 1 | 0 : Q4, B4 = (i4 = PA(n4, P4, D4, T2)) + I7 | 0, I7 = t3 + Q4 | 0, I7 = B4 >>> 0 < i4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = PA(i4 = c3(L4, 19), MA2 = i4 >> 31, BA2, wA2), I7 = t3 + I7 | 0, I7 = (B4 = Q4 + B4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = (h4 = PA(AA2 = c3(V2, 19), _A2 = AA2 >> 31, F4, v5)) + B4 | 0, B4 = t3 + I7 | 0, B4 = Q4 >>> 0 < h4 >>> 0 ? B4 + 1 | 0 : B4, h4 = PA(QA2, rA2, y4, FA2), I7 = t3 + B4 | 0, I7 = (Q4 = h4 + Q4 | 0) >>> 0 < h4 >>> 0 ? I7 + 1 | 0 : I7, B4 = (h4 = PA(f4, U4, p4, EA2)) + Q4 | 0, Q4 = t3 + I7 | 0, Q4 = B4 >>> 0 < h4 >>> 0 ? Q4 + 1 | 0 : Q4, h4 = PA(K4, $2, J4, oA2), I7 = t3 + Q4 | 0, I7 = (B4 = h4 + B4 | 0) >>> 0 < h4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = PA(e4, d4, w4, Z2), I7 = t3 + I7 | 0, I7 = (B4 = Q4 + B4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = (h4 = PA(k4, x4, IA2, cA2)) + B4 | 0, B4 = t3 + I7 | 0, H4 = Q4, YA2 = Q4 >>> 0 < h4 >>> 0 ? B4 + 1 | 0 : B4, I7 = PA(n4, P4, S4, R4), B4 = t3, Q4 = (h4 = PA(a4, Y4, j2, kA2)) + I7 | 0, I7 = t3 + B4 | 0, I7 = Q4 >>> 0 < h4 >>> 0 ? I7 + 1 | 0 : I7, h4 = B4 = c3(D4, 19), B4 = (N4 = PA(B4, pA2 = B4 >> 31, u4, nA2)) + Q4 | 0, Q4 = t3 + I7 | 0, Q4 = B4 >>> 0 < N4 >>> 0 ? Q4 + 1 | 0 : Q4, N4 = PA(i4, MA2, F4, v5), I7 = t3 + Q4 | 0, I7 = (B4 = N4 + B4 | 0) >>> 0 < N4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = PA(AA2, _A2, m4, sA2), I7 = t3 + I7 | 0, I7 = (B4 = Q4 + B4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = (N4 = PA(f4, U4, y4, FA2)) + B4 | 0, B4 = t3 + I7 | 0, B4 = Q4 >>> 0 < N4 >>> 0 ? B4 + 1 | 0 : B4, N4 = PA(p4, EA2, l3, tA2), I7 = t3 + B4 | 0, I7 = (Q4 = N4 + Q4 | 0) >>> 0 < N4 >>> 0 ? I7 + 1 | 0 : I7, B4 = (N4 = PA(e4, d4, K4, $2)) + Q4 | 0, Q4 = t3 + I7 | 0, Q4 = B4 >>> 0 < N4 >>> 0 ? Q4 + 1 | 0 : Q4, N4 = PA(w4, Z2, z2, hA2), I7 = t3 + Q4 | 0, I7 = (B4 = N4 + B4 | 0) >>> 0 < N4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = PA(s4, b4, k4, x4), I7 = t3 + I7 | 0, UA2 = B4 = Q4 + B4 | 0, N4 = B4 >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, I7 = PA(I7 = c3(S4, 19), I7 >> 31, BA2, wA2), B4 = t3, Q4 = PA(a4, Y4, n4, P4), B4 = t3 + B4 | 0, B4 = (I7 = Q4 + I7 | 0) >>> 0 < Q4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = (h4 = PA(h4, pA2, F4, v5)) + I7 | 0, I7 = t3 + B4 | 0, B4 = (i4 = PA(i4, MA2, QA2, rA2)) + Q4 | 0, Q4 = t3 + (Q4 >>> 0 < h4 >>> 0 ? I7 + 1 | 0 : I7) | 0, Q4 = B4 >>> 0 < i4 >>> 0 ? Q4 + 1 | 0 : Q4, i4 = PA(f4, U4, AA2, _A2), I7 = t3 + Q4 | 0, I7 = (B4 = i4 + B4 | 0) >>> 0 < i4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = PA(J4, oA2, y4, FA2), I7 = t3 + I7 | 0, I7 = (B4 = Q4 + B4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = (i4 = PA(e4, d4, p4, EA2)) + B4 | 0, B4 = t3 + I7 | 0, B4 = Q4 >>> 0 < i4 >>> 0 ? B4 + 1 | 0 : B4, i4 = PA(K4, $2, IA2, cA2), I7 = t3 + B4 | 0, I7 = (Q4 = i4 + Q4 | 0) >>> 0 < i4 >>> 0 ? I7 + 1 | 0 : I7, B4 = (i4 = PA(s4, b4, w4, Z2)) + Q4 | 0, Q4 = t3 + I7 | 0, Q4 = B4 >>> 0 < i4 >>> 0 ? Q4 + 1 | 0 : Q4, i4 = PA(k4, x4, CA2, yA2), I7 = t3 + Q4 | 0, h4 = B4 = i4 + B4 | 0, MA2 = I7 = B4 >>> 0 < i4 >>> 0 ? I7 + 1 | 0 : I7, pA2 = B4 = B4 + 33554432 | 0, lA2 = I7 = B4 >>> 0 < 33554432 ? I7 + 1 | 0 : I7, Q4 = I7 >> 26, I7 = (67108863 & I7) << 6 | B4 >>> 26, B4 = Q4 + N4 | 0, N4 = i4 = I7 + UA2 | 0, I7 = B4 = I7 >>> 0 > i4 >>> 0 ? B4 + 1 | 0 : B4, UA2 = i4 = i4 + 16777216 | 0, i4 = (33554431 & (I7 = i4 >>> 0 < 16777216 ? I7 + 1 | 0 : I7)) << 7 | i4 >>> 25, I7 = (I7 >> 25) + YA2 | 0, I7 = (B4 = i4 + H4 | 0) >>> 0 < i4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = B4, YA2 = B4 = B4 + 33554432 | 0, i4 = I7 = B4 >>> 0 < 33554432 ? I7 + 1 | 0 : I7, E3[g6 + 56 >> 2] = Q4 - (-67108864 & B4), I7 = PA(f4, U4, S4, R4), Q4 = t3, B4 = (H4 = PA(a4, Y4, m4, sA2)) + I7 | 0, I7 = t3 + Q4 | 0, I7 = B4 >>> 0 < H4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = PA(D4, T2, l3, tA2), I7 = t3 + I7 | 0, I7 = (B4 = Q4 + B4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = PA(e4, d4, L4, W2), I7 = t3 + I7 | 0, I7 = (B4 = Q4 + B4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, H4 = PA(V2, gA2, z2, hA2), Q4 = t3 + I7 | 0, Q4 = (B4 = H4 + B4 | 0) >>> 0 < H4 >>> 0 ? Q4 + 1 | 0 : Q4, I7 = (H4 = PA(s4, b4, HA2, aA2)) + B4 | 0, B4 = t3 + Q4 | 0, B4 = I7 >>> 0 < H4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = (H4 = PA(j2, kA2, GA2, NA2)) + I7 | 0, I7 = t3 + B4 | 0, I7 = Q4 >>> 0 < H4 >>> 0 ? I7 + 1 | 0 : I7, B4 = Q4, Q4 = PA(fA2, dA2 = fA2 >> 31, n4, P4), I7 = t3 + I7 | 0, I7 = (B4 = B4 + Q4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = PA(w4, Z2, u4, nA2), I7 = t3 + I7 | 0, I7 = (B4 = Q4 + B4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, H4 = (Q4 = B4) + (B4 = PA(F4, v5, k4, x4)) | 0, Q4 = t3 + I7 | 0, B4 = (I7 = o4 >> 26) + (B4 = B4 >>> 0 > H4 >>> 0 ? Q4 + 1 | 0 : Q4) | 0, G4 = Q4 = (o4 = (67108863 & o4) << 6 | G4 >>> 26) + H4 | 0, I7 = B4 = Q4 >>> 0 < o4 >>> 0 ? B4 + 1 | 0 : B4, H4 = Q4 = Q4 + 16777216 | 0, o4 = I7 = Q4 >>> 0 < 16777216 ? I7 + 1 | 0 : I7, E3[g6 + 76 >> 2] = G4 - (-33554432 & Q4), I7 = PA(s4, b4, S4, R4), B4 = t3, G4 = PA(a4, Y4, z2, hA2), Q4 = t3 + B4 | 0, Q4 = (I7 = G4 + I7 | 0) >>> 0 < G4 >>> 0 ? Q4 + 1 | 0 : Q4, G4 = PA(D4, T2, j2, kA2), B4 = t3 + Q4 | 0, B4 = (I7 = G4 + I7 | 0) >>> 0 < G4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = (G4 = PA(n4, P4, L4, W2)) + I7 | 0, I7 = t3 + B4 | 0, I7 = Q4 >>> 0 < G4 >>> 0 ? I7 + 1 | 0 : I7, B4 = Q4, Q4 = PA(AA2, _A2, u4, nA2), I7 = t3 + I7 | 0, I7 = (B4 = B4 + Q4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = PA(F4, v5, y4, FA2), I7 = t3 + I7 | 0, I7 = (B4 = Q4 + B4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, B4 = (p4 = PA(p4, EA2, m4, sA2)) + B4 | 0, Q4 = t3 + I7 | 0, I7 = (K4 = PA(f4, U4, K4, $2)) + B4 | 0, B4 = t3 + (B4 >>> 0 < p4 >>> 0 ? Q4 + 1 | 0 : Q4) | 0, Q4 = (w4 = PA(w4, Z2, l3, tA2)) + I7 | 0, I7 = t3 + (I7 >>> 0 < K4 >>> 0 ? B4 + 1 | 0 : B4) | 0, I7 = Q4 >>> 0 < w4 >>> 0 ? I7 + 1 | 0 : I7, B4 = Q4, Q4 = PA(e4, d4, k4, x4), I7 = t3 + I7 | 0, G4 = B4 = B4 + Q4 | 0, I7 = (I7 = B4 >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7) + (B4 = i4 >> 26) | 0, w4 = i4 = G4 + (Q4 = (67108863 & i4) << 6 | YA2 >>> 26) | 0, I7 = Q4 >>> 0 > i4 >>> 0 ? I7 + 1 | 0 : I7, K4 = B4 = i4 + 16777216 | 0, i4 = Q4 = B4 >>> 0 < 16777216 ? I7 + 1 | 0 : I7, E3[g6 + 60 >> 2] = w4 - (-33554432 & B4), I7 = PA(S4, R4, QA2, rA2), Q4 = t3, B4 = (w4 = PA(a4, Y4, F4, v5)) + I7 | 0, I7 = t3 + Q4 | 0, I7 = B4 >>> 0 < w4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = PA(f4, U4, D4, T2), I7 = t3 + I7 | 0, I7 = (B4 = Q4 + B4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, w4 = PA(L4, W2, J4, oA2), Q4 = t3 + I7 | 0, Q4 = (B4 = w4 + B4 | 0) >>> 0 < w4 >>> 0 ? Q4 + 1 | 0 : Q4, I7 = (w4 = PA(e4, d4, V2, gA2)) + B4 | 0, B4 = t3 + Q4 | 0, B4 = I7 >>> 0 < w4 >>> 0 ? B4 + 1 | 0 : B4, Q4 = (w4 = PA(IA2, cA2, HA2, aA2)) + I7 | 0, I7 = t3 + B4 | 0, I7 = Q4 >>> 0 < w4 >>> 0 ? I7 + 1 | 0 : I7, B4 = Q4, Q4 = PA(s4, b4, GA2, NA2), I7 = t3 + I7 | 0, I7 = (B4 = B4 + Q4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = B4, B4 = PA(CA2, yA2, fA2, dA2), I7 = t3 + I7 | 0, I7 = B4 >>> 0 > (Q4 = Q4 + B4 | 0) >>> 0 ? I7 + 1 | 0 : I7, w4 = B4 = vA2, B4 = (J4 = PA(B4, p4 = B4 >> 31, n4, P4)) + Q4 | 0, Q4 = t3 + I7 | 0, I7 = (k4 = PA(k4, x4, BA2, wA2)) + B4 | 0, B4 = t3 + (B4 >>> 0 < J4 >>> 0 ? Q4 + 1 | 0 : Q4) | 0, Q4 = I7 >>> 0 < k4 >>> 0 ? B4 + 1 | 0 : B4, B4 = I7, I7 = (I7 = o4 >> 25) + Q4 | 0, I7 = (B4 = B4 + (o4 = (33554431 & o4) << 7 | H4 >>> 25) | 0) >>> 0 < o4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = B4, k4 = B4 = B4 + 33554432 | 0, o4 = I7 = B4 >>> 0 < 33554432 ? I7 + 1 | 0 : I7, E3[g6 + 80 >> 2] = Q4 - (-67108864 & B4), B4 = i4 >> 25, Q4 = (i4 = (33554431 & i4) << 7 | K4 >>> 25) + (LA2 - (I7 = -67108864 & uA2) | 0) | 0, I7 = B4 + (xA2 - ((I7 >>> 0 > LA2 >>> 0) + mA2 | 0) | 0) | 0, I7 = Q4 >>> 0 < i4 >>> 0 ? I7 + 1 | 0 : I7, I7 = ((67108863 & (I7 = (B4 = Q4 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7)) << 6 | B4 >>> 26) + (J4 = JA2 - (-33554432 & qA2) | 0) | 0, E3[g6 + 68 >> 2] = I7, E3[g6 + 64 >> 2] = Q4 - (-67108864 & B4), I7 = PA(F4, v5, S4, R4), Q4 = t3, B4 = (i4 = PA(a4, Y4, u4, nA2)) + I7 | 0, I7 = t3 + Q4 | 0, I7 = B4 >>> 0 < i4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = (i4 = PA(D4, T2, m4, sA2)) + B4 | 0, B4 = t3 + I7 | 0, B4 = Q4 >>> 0 < i4 >>> 0 ? B4 + 1 | 0 : B4, I7 = (i4 = PA(f4, U4, L4, W2)) + Q4 | 0, Q4 = t3 + B4 | 0, Q4 = I7 >>> 0 < i4 >>> 0 ? Q4 + 1 | 0 : Q4, B4 = (i4 = PA(V2, gA2, l3, tA2)) + I7 | 0, I7 = t3 + Q4 | 0, I7 = B4 >>> 0 < i4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = PA(e4, d4, HA2, aA2), I7 = t3 + I7 | 0, I7 = (B4 = Q4 + B4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = PA(z2, hA2, GA2, NA2), I7 = t3 + I7 | 0, I7 = (B4 = Q4 + B4 | 0) >>> 0 < Q4 >>> 0 ? I7 + 1 | 0 : I7, Q4 = (i4 = PA(s4, b4, fA2, dA2)) + B4 | 0, B4 = t3 + I7 | 0, B4 = Q4 >>> 0 < i4 >>> 0 ? B4 + 1 | 0 : B4, i4 = (I7 = PA(w4, p4, j2, kA2)) + Q4 | 0, Q4 = t3 + B4 | 0, Q4 = I7 >>> 0 > i4 >>> 0 ? Q4 + 1 | 0 : Q4, B4 = i4, i4 = PA(I7 = RA2, I7 >> 31, n4, P4), I7 = t3 + Q4 | 0, Q4 = B4 = B4 + i4 | 0, I7 = (I7 = B4 >>> 0 < i4 >>> 0 ? I7 + 1 | 0 : I7) + (B4 = o4 >> 26) | 0, I7 = (Q4 = Q4 + (o4 = (67108863 & o4) << 6 | k4 >>> 26) | 0) >>> 0 < o4 >>> 0 ? I7 + 1 | 0 : I7, I7 = (B4 = Q4 + 16777216 | 0) >>> 0 < 16777216 ? I7 + 1 | 0 : I7, E3[g6 + 84 >> 2] = Q4 - (-33554432 & B4), o4 = N4 - (-33554432 & UA2) | 0, i4 = h4 - (Q4 = -67108864 & pA2) | 0, a4 = MA2 - ((Q4 >>> 0 > h4 >>> 0) + lA2 | 0) | 0, I7 = PA((33554431 & (Q4 = I7)) << 7 | B4 >>> 25, I7 >>= 25, 19, 0), B4 = t3 + a4 | 0, I7 = I7 >>> 0 > (Q4 = I7 + i4 | 0) >>> 0 ? B4 + 1 | 0 : B4, I7 = ((67108863 & (I7 = (B4 = Q4 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7)) << 6 | B4 >>> 26) + o4 | 0, E3[g6 + 52 >> 2] = I7, E3[g6 + 48 >> 2] = Q4 - (-67108864 & B4), eA(A8, g6 + 48 | 0));
                      }
                      return r3 = g6 + 256 | 0, 0 | bA2;
                    }, sc: function(A8, I7) {
                      A8 |= 0;
                      var g6, B4 = 0;
                      return r3 = g6 = r3 + -64 | 0, FA(g6, I7 |= 0, 32, 0), C3[0 | g6] = 248 & i3[0 | g6], C3[g6 + 31 | 0] = 63 & i3[g6 + 31 | 0] | 64, I7 = E3[g6 + 20 >> 2], B4 = E3[g6 + 16 >> 2], C3[A8 + 16 | 0] = B4, C3[A8 + 17 | 0] = B4 >>> 8, C3[A8 + 18 | 0] = B4 >>> 16, C3[A8 + 19 | 0] = B4 >>> 24, C3[A8 + 20 | 0] = I7, C3[A8 + 21 | 0] = I7 >>> 8, C3[A8 + 22 | 0] = I7 >>> 16, C3[A8 + 23 | 0] = I7 >>> 24, I7 = E3[g6 + 12 >> 2], B4 = E3[g6 + 8 >> 2], C3[A8 + 8 | 0] = B4, C3[A8 + 9 | 0] = B4 >>> 8, C3[A8 + 10 | 0] = B4 >>> 16, C3[A8 + 11 | 0] = B4 >>> 24, C3[A8 + 12 | 0] = I7, C3[A8 + 13 | 0] = I7 >>> 8, C3[A8 + 14 | 0] = I7 >>> 16, C3[A8 + 15 | 0] = I7 >>> 24, I7 = E3[g6 + 4 >> 2], B4 = E3[g6 >> 2], C3[0 | A8] = B4, C3[A8 + 1 | 0] = B4 >>> 8, C3[A8 + 2 | 0] = B4 >>> 16, C3[A8 + 3 | 0] = B4 >>> 24, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, I7 = E3[g6 + 28 >> 2], B4 = E3[g6 + 24 >> 2], C3[A8 + 24 | 0] = B4, C3[A8 + 25 | 0] = B4 >>> 8, C3[A8 + 26 | 0] = B4 >>> 16, C3[A8 + 27 | 0] = B4 >>> 24, C3[A8 + 28 | 0] = I7, C3[A8 + 29 | 0] = I7 >>> 8, C3[A8 + 30 | 0] = I7 >>> 16, C3[A8 + 31 | 0] = I7 >>> 24, MI(g6, 64), r3 = g6 - -64 | 0, 0;
                    }, tc: function() {
                      var A8, I7;
                      return r3 = A8 = r3 - 16 | 0, C3[A8 + 15 | 0] = 0, I7 = 0 | y3(36304, A8 + 15 | 0, 0), r3 = A8 + 16 | 0, 0 | I7;
                    }, uc: QI, vc: function(A8) {
                      var I7, g6 = 0, B4 = 0;
                      if (r3 = I7 = r3 - 16 | 0, (A8 |= 0) >>> 0 >= 2) {
                        for (g6 = (0 - A8 >>> 0) % (A8 >>> 0) | 0; C3[I7 + 15 | 0] = 0, g6 >>> 0 > (B4 = 0 | y3(36304, I7 + 15 | 0, 0)) >>> 0; ) ;
                        g6 = (B4 >>> 0) % (A8 >>> 0) | 0;
                      }
                      return r3 = I7 + 16 | 0, 0 | g6;
                    }, wc: LA, xc: function(A8, I7, g6) {
                      eI(A8 |= 0, I7 |= 0, 33888, g6 |= 0);
                    }, yc: _I, zc: function() {
                      var A8 = 0, I7 = 0;
                      return (A8 = E3[9414]) && (A8 = E3[A8 + 20 >> 2]) && (I7 = 0 | vI[0 | A8]()), 0 | I7;
                    }, Ac: function(A8, I7, g6) {
                      A8 |= 0, I7 |= 0;
                      var B4, E4 = 0, i4 = 0, o4 = 0;
                      if (r3 = B4 = r3 - 16 | 0, g6 |= 0) f3(1228, 1088, 198, 1024), Q3();
                      else {
                        if (I7 | g6) for (; C3[B4 + 15 | 0] = 0, i4 = A8 + E4 | 0, o4 = 0 | y3(36304, B4 + 15 | 0, 0), C3[0 | i4] = o4, (0 | I7) != (0 | (E4 = E4 + 1 | 0)); ) ;
                        r3 = B4 + 16 | 0;
                      }
                    }, Bc: function(A8, I7, g6, B4) {
                      A8 |= 0, g6 |= 0;
                      var E4 = 0, o4 = 0, c4 = 0;
                      if (!((B4 |= 0) >>> 0 > 2147483646 | B4 << 1 >>> 0 >= (I7 |= 0) >>> 0)) {
                        if (I7 = 0, B4) {
                          for (; E4 = (I7 << 1) + A8 | 0, o4 = 15 & (c4 = i3[I7 + g6 | 0]), C3[E4 + 1 | 0] = 22272 + ((o4 << 8) + (o4 + 65526 & 55552) | 0) >>> 8, o4 = E4, E4 = c4 >>> 4 | 0, C3[0 | o4] = 87 + ((E4 + 65526 >>> 8 & 217) + E4 | 0), (0 | B4) != (0 | (I7 = I7 + 1 | 0)); ) ;
                          I7 = B4 << 1;
                        } else I7 = 0;
                        return C3[I7 + A8 | 0] = 0, 0 | A8;
                      }
                      iI(), Q3();
                    }, Cc: function(A8, I7, g6, B4, Q4, o4, c4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, Q4 |= 0, o4 |= 0, c4 |= 0;
                      var D4 = 0, a4 = 0, y4 = 0, f4 = 0, e4 = 0, w4 = 0, r4 = 0, t4 = 0, h4 = 0;
                      A: {
                        I: {
                          g: {
                            C: {
                              B: {
                                Q: {
                                  E: {
                                    i: {
                                      o: {
                                        if (B4 |= 0) {
                                          if (Q4) break o;
                                          for (a4 = 1, Q4 = 0; ; ) {
                                            if (!(255 & ((r4 = (65526 + (y4 = (223 & (e4 = i3[g6 + D4 | 0])) - 55 & 255) ^ y4 + 65520) >>> 8 | 0) | (t4 = 65526 + (e4 ^= 48) >>> 8 | 0)))) break E;
                                            if (I7 >>> 0 <= w4 >>> 0) break i;
                                            if (y4 = y4 & r4 | e4 & t4, 255 & f4 ? (C3[A8 + w4 | 0] = Q4 | y4, w4 = w4 + 1 | 0) : Q4 = y4 << 4, f4 = ~f4, (0 | (D4 = D4 + 1 | 0)) == (0 | B4)) break;
                                          }
                                          D4 = B4;
                                          break E;
                                        }
                                        if (A8 = 0, !c4) break A;
                                        break g;
                                      }
                                      for (; ; ) {
                                        o: {
                                          c: {
                                            D: {
                                              a: {
                                                y: {
                                                  if (!(255 & ((e4 = (65526 + (a4 = (223 & (y4 = i3[g6 + D4 | 0])) - 55 & 255) ^ a4 + 65520) >>> 8 | 0) | (t4 = 65526 + (r4 = 48 ^ y4) >>> 8 | 0)))) {
                                                    if (255 & f4) break Q;
                                                    if (a4 = 0, !hA(Q4, y4)) break C;
                                                    if ((D4 = f4 = D4 + 1 | 0) >>> 0 < B4 >>> 0) break y;
                                                    break C;
                                                  }
                                                  if (I7 >>> 0 <= w4 >>> 0) break i;
                                                  if (a4 = a4 & e4 | r4 & t4, !(255 & f4)) break a;
                                                  C3[A8 + w4 | 0] = a4 | h4, w4 = w4 + 1 | 0;
                                                  break o;
                                                }
                                                for (; ; ) {
                                                  if (!(255 & ((r4 = (65526 + (e4 = (223 & (y4 = i3[g6 + D4 | 0])) - 55 & 255) ^ e4 + 65520) >>> 8 | 0) | (h4 = 65526 + (t4 = 48 ^ y4) >>> 8 | 0)))) {
                                                    if (!hA(Q4, y4)) break C;
                                                    if ((D4 = D4 + 1 | 0) >>> 0 < B4 >>> 0) continue;
                                                    break D;
                                                  }
                                                  break;
                                                }
                                                if (I7 >>> 0 <= w4 >>> 0) break c;
                                                a4 = e4 & r4 | t4 & h4;
                                              }
                                              h4 = a4 << 4, f4 = 0;
                                              break o;
                                            }
                                            D4 = B4 >>> 0 > f4 >>> 0 ? B4 : f4;
                                            break C;
                                          }
                                          f4 = 0;
                                          break i;
                                        }
                                        if (f4 = ~f4, a4 = 1, !((D4 = D4 + 1 | 0) >>> 0 < B4 >>> 0)) break;
                                      }
                                      break E;
                                    }
                                    E3[9280] = 68, a4 = 0;
                                  }
                                  if (!(255 & f4)) break B;
                                }
                                E3[9280] = 28, a4 = -1, D4 = D4 - 1 | 0, w4 = 0;
                                break C;
                              }
                              w4 = a4 ? w4 : 0, a4 = a4 - 1 | 0;
                            }
                            if (!c4) {
                              if ((0 | B4) != (0 | D4)) break I;
                              A8 = a4;
                              break A;
                            }
                          }
                          E3[c4 >> 2] = g6 + D4, A8 = a4;
                          break A;
                        }
                        E3[9280] = 28, A8 = -1;
                      }
                      return o4 && (E3[o4 >> 2] = w4), 0 | A8;
                    }, Dc: function(A8, I7) {
                      A8 |= 0;
                      var g6 = 0;
                      return 1 != (-7 & (I7 |= 0)) && (iI(), Q3()), 1 + ((3 & (g6 = (g6 = A8) + c3(A8 = (A8 >>> 0) / 3 | 0, -3) | 0) ? 2 & I7 ? g6 + 1 | 0 : 4 : 0) + (A8 << 2) | 0) | 0;
                    }, Ec: function(A8, I7, g6, B4, E4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, B4 |= 0;
                      var o4 = 0, D4 = 0, a4 = 0, y4 = 0, e4 = 0, w4 = 0, r4 = 0;
                      A: {
                        I: {
                          g: {
                            C: {
                              B: {
                                Q: {
                                  E: {
                                    if (1 == (-7 & (E4 |= 0)) && (a4 = (o4 = (B4 >>> 0) / 3 | 0) << 2, (o4 = c3(o4, -3) + B4 | 0) && (a4 = 2 & E4 ? 2 + ((o4 >>> 1 | 0) + a4 | 0) | 0 : a4 + 4 | 0), !(I7 >>> 0 <= a4 >>> 0))) {
                                      if (!(E4 >>> 0 >= 4)) {
                                        if (!B4) {
                                          E4 = 0;
                                          break C;
                                        }
                                        o4 = 0, E4 = 0;
                                        break E;
                                      }
                                      if (!B4) {
                                        E4 = 0;
                                        break C;
                                      }
                                      for (o4 = 0, E4 = 0; ; ) {
                                        for (e4 = i3[g6 + y4 | 0] | e4 << 8, o4 |= 8; w4 = 65510 + (D4 = e4 >>> (o4 = o4 - 6 | 0) & 63) >>> 8 | 0, r4 = D4 + 65484 >>> 8 | 0, C3[A8 + E4 | 0] = ~(1 + (16321 ^ D4)) >>> 8 & 45 | D4 + 252 & D4 + 65474 >>> 8 & ~r4 | ~(D4 + 32705) >>> 8 & 95 | w4 & D4 + 65 | r4 & D4 + 71 & ~w4, E4 = E4 + 1 | 0, o4 >>> 0 > 5; ) ;
                                        if ((0 | (y4 = y4 + 1 | 0)) == (0 | B4)) break;
                                      }
                                      if (!o4) break B;
                                      y4 = 45, D4 = 32705, B4 = 95;
                                      break Q;
                                    }
                                    iI(), Q3();
                                  }
                                  for (; ; ) {
                                    for (e4 = i3[g6 + y4 | 0] | e4 << 8, o4 |= 8; w4 = 65510 + (D4 = e4 >>> (o4 = o4 - 6 | 0) & 63) >>> 8 | 0, r4 = D4 + 65484 >>> 8 | 0, C3[A8 + E4 | 0] = ~(1 + (16321 ^ D4)) >>> 8 & 43 | D4 + 252 & D4 + 65474 >>> 8 & ~r4 | ~(D4 + 16321) >>> 8 & 47 | w4 & D4 + 65 | r4 & D4 + 71 & ~w4, E4 = E4 + 1 | 0, o4 >>> 0 > 5; ) ;
                                    if ((0 | (y4 = y4 + 1 | 0)) == (0 | B4)) break;
                                  }
                                  if (!o4) break B;
                                  y4 = 43, D4 = 16321, B4 = 47;
                                }
                                D4 = ~((g6 = e4 << 6 - o4 & 63) + D4) >>> 8 & B4 | (o4 = g6 + 65510 >>> 8 | 0) & g6 + 65, B4 = g6 + 65484 >>> 8 | 0, C3[A8 + E4 | 0] = ~(1 + (16321 ^ g6)) >>> 8 & y4 | D4 | g6 + 252 & g6 + 65474 >>> 8 & ~B4 | B4 & g6 + 71 & ~o4, E4 = E4 + 1 | 0;
                              }
                              if (E4 >>> 0 > a4 >>> 0) break g;
                            }
                            if (E4 >>> 0 < a4 >>> 0) break I;
                            a4 = E4;
                            break A;
                          }
                          f3(1036, 1114, 231, 1300), Q3();
                        }
                        VA(A8 + E4 | 0, 61, a4 - E4 | 0);
                      }
                      return VA(A8 + a4 | 0, 0, (I7 >>> 0 > (g6 = a4 + 1 | 0) >>> 0 ? I7 : g6) - a4 | 0), 0 | A8;
                    }, Fc: function(A8, I7, g6, B4, o4, c4, D4, a4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, B4 |= 0, o4 |= 0, c4 |= 0, D4 |= 0;
                      var y4 = 0, f4 = 0, e4 = 0, w4 = 0, r4 = 0, t4 = 0, h4 = 0, k4 = 0;
                      if (1 == (-7 & (a4 |= 0))) {
                        A: {
                          I: {
                            g: {
                              C: {
                                B: {
                                  Q: {
                                    E: {
                                      if (B4) {
                                        i: {
                                          o: {
                                            if (a4 >>> 0 <= 3) {
                                              for (; ; ) {
                                                w4 = f4;
                                                c: {
                                                  D: {
                                                    a: {
                                                      y: {
                                                        for (; ; ) {
                                                          if (y4 = (y4 = (e4 = C3[g6 + w4 | 0]) - 65 | 0) & (~(90 - e4) & ~y4) >>> 8 & 255 | e4 + 4 & (~(e4 + 65488) & ~(57 - e4)) >>> 8 & 255 | e4 + 185 & (~(e4 + 65439) & ~(122 - e4)) >>> 8 & 255 | ~(1 + (16336 ^ e4)) >>> 8 & 63 | ~(1 + (16340 ^ e4)) >>> 8 & 62, 255 != (0 | (y4 |= (y4 - 1 & 1 + (65470 ^ e4)) >>> 8 & 255))) break y;
                                                          if (y4 = 0, !o4) break i;
                                                          if (!hA(o4, e4)) break;
                                                          if ((w4 = w4 + 1 | 0) >>> 0 >= B4 >>> 0) break a;
                                                        }
                                                        f4 = w4;
                                                        break i;
                                                      }
                                                      if (h4 = y4 + (h4 << 6) | 0, r4 >>> 0 > 1) break D;
                                                      r4 = r4 + 6 | 0;
                                                      break c;
                                                    }
                                                    f4 = (A8 = f4 + 1 | 0) >>> 0 < B4 >>> 0 ? B4 : A8;
                                                    break i;
                                                  }
                                                  if (r4 = r4 - 2 | 0, I7 >>> 0 <= t4 >>> 0) break o;
                                                  C3[A8 + t4 | 0] = h4 >>> r4, t4 = t4 + 1 | 0;
                                                }
                                                if (y4 = 0, !((f4 = w4 + 1 | 0) >>> 0 < B4 >>> 0)) break;
                                              }
                                              break i;
                                            }
                                            for (; ; ) {
                                              c: {
                                                if (y4 = (y4 = (e4 = C3[g6 + w4 | 0]) - 65 | 0) & (~(90 - e4) & ~y4) >>> 8 & 255 | e4 + 4 & (~(e4 + 65488) & ~(57 - e4)) >>> 8 & 255 | e4 + 185 & (~(e4 + 65439) & ~(122 - e4)) >>> 8 & 255 | ~(1 + (16288 ^ e4)) >>> 8 & 63 | ~(1 + (16338 ^ e4)) >>> 8 & 62, 255 == (0 | (y4 |= (y4 - 1 & 1 + (65470 ^ e4)) >>> 8 & 255))) {
                                                  if (y4 = 0, !o4) break i;
                                                  if (hA(o4, e4)) {
                                                    if ((w4 = w4 + 1 | 0) >>> 0 >= B4 >>> 0) break c;
                                                    continue;
                                                  }
                                                  f4 = w4;
                                                  break i;
                                                }
                                                if (h4 = y4 + (h4 << 6) | 0, r4 >>> 0 < 2) r4 = r4 + 6 | 0;
                                                else {
                                                  if (r4 = r4 - 2 | 0, I7 >>> 0 <= t4 >>> 0) break o;
                                                  C3[A8 + t4 | 0] = h4 >>> r4, t4 = t4 + 1 | 0;
                                                }
                                                if (y4 = 0, (f4 = w4 + 1 | 0) >>> 0 >= B4 >>> 0) break i;
                                                w4 = f4;
                                                continue;
                                              }
                                              break;
                                            }
                                            f4 = (A8 = f4 + 1 | 0) >>> 0 < B4 >>> 0 ? B4 : A8;
                                            break i;
                                          }
                                          f4 = w4, E3[9280] = 68, y4 = 1;
                                        }
                                        if (r4 >>> 0 > 4) break E;
                                        A8 = f4;
                                      } else A8 = 0;
                                      if (I7 = -1, y4) {
                                        f4 = A8;
                                        break A;
                                      }
                                      if (~(-1 << r4) & h4) {
                                        f4 = A8;
                                        break A;
                                      }
                                      if (2 & a4) {
                                        a4 = A8;
                                        break B;
                                      }
                                      if (r4 >>> 0 < 2) {
                                        a4 = A8;
                                        break B;
                                      }
                                      if (f4 = A8 >>> 0 > B4 >>> 0 ? A8 : B4, w4 = r4 >>> 1 | 0, !o4) break Q;
                                      for (a4 = A8; ; ) {
                                        if ((0 | a4) == (0 | f4)) {
                                          y4 = 68;
                                          break C;
                                        }
                                        if (61 != (0 | (A8 = C3[g6 + a4 | 0]))) {
                                          if (!hA(o4, A8)) {
                                            y4 = 28, f4 = a4;
                                            break C;
                                          }
                                        } else w4 = w4 - 1 | 0;
                                        if (a4 = a4 + 1 | 0, !w4) break;
                                      }
                                      break B;
                                    }
                                    I7 = -1;
                                    break A;
                                  }
                                  if (y4 = 68, A8 >>> 0 >= B4 >>> 0) break C;
                                  if (61 != i3[A8 + g6 | 0]) {
                                    f4 = A8, y4 = 28;
                                    break C;
                                  }
                                  if (a4 = A8 + w4 | 0, 1 != (0 | w4)) {
                                    if ((0 | (r4 = A8 + 1 | 0)) == (0 | f4)) break C;
                                    if (61 != i3[g6 + r4 | 0]) {
                                      f4 = r4, y4 = 28;
                                      break C;
                                    }
                                    if (2 != (0 | w4)) {
                                      if ((0 | (A8 = A8 + 2 | 0)) == (0 | f4)) break C;
                                      if (y4 = 28, f4 = A8, 61 != i3[A8 + g6 | 0]) break C;
                                    }
                                  }
                                }
                                if (I7 = 0, o4) break g;
                                break I;
                              }
                              E3[9280] = y4;
                              break A;
                            }
                            if (!(B4 >>> 0 <= a4 >>> 0)) {
                              for (; ; ) {
                                if (!hA(o4, C3[g6 + a4 | 0])) break I;
                                if ((0 | (a4 = a4 + 1 | 0)) == (0 | B4)) break;
                              }
                              a4 = B4;
                            }
                          }
                          f4 = a4, k4 = t4;
                        }
                        return D4 ? E3[D4 >> 2] = g6 + f4 : (0 | B4) != (0 | f4) && (E3[9280] = 28, I7 = -1), c4 && (E3[c4 >> 2] = k4), 0 | I7;
                      }
                      iI(), Q3();
                    }, Gc: function() {
                      var A8 = 0;
                      return E3[9412] ? A8 = 1 : (QI(), LA(37632, 16), E3[9412] = 1, A8 = 0), 0 | A8;
                    }, Hc: function(A8, I7, g6, B4, o4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, o4 |= 0;
                      var c4, D4 = 0, a4 = 0, y4 = 0;
                      r3 = c4 = r3 - 16 | 0;
                      A: {
                        if (B4 |= 0) {
                          if ((D4 = B4 - 1 | 0) & B4 ? (a4 = ~g6, D4 = D4 - ((g6 >>> 0) % (B4 >>> 0) | 0) | 0) : D4 &= a4 = ~g6, D4 >>> 0 >= a4 >>> 0) break A;
                          if ((g6 = g6 + D4 | 0) >>> 0 >= o4 >>> 0) I7 = -1;
                          else for (A8 && (E3[A8 >> 2] = g6 + 1), A8 = I7 + g6 | 0, I7 = 0, C3[c4 + 15 | 0] = 0, g6 = 0; a4 = o4 = A8 - g6 | 0, y4 = i3[0 | o4] & i3[c4 + 15 | 0], o4 = (g6 ^ D4) - 1 >>> 24 | 0, C3[0 | a4] = y4 | 128 & o4, C3[c4 + 15 | 0] = o4 | i3[c4 + 15 | 0], (0 | B4) != (0 | (g6 = g6 + 1 | 0)); ) ;
                        } else I7 = -1;
                        return r3 = c4 + 16 | 0, 0 | I7;
                      }
                      iI(), Q3();
                    }, Ic: function(A8, I7, g6, C4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0;
                      var B4, Q4 = 0, o4 = 0, c4 = 0, D4 = 0, a4 = 0;
                      if (E3[12 + (B4 = r3 - 16 | 0) >> 2] = 0, C4 - 1 >>> 0 < g6 >>> 0) {
                        for (a4 = (Q4 = g6 - 1 | 0) + I7 | 0, g6 = 0, I7 = 0; D4 = ((128 ^ (o4 = i3[a4 - g6 | 0])) - 1 & E3[B4 + 12 >> 2] - 1 & c4 - 1) >>> 8 & 1, E3[B4 + 12 >> 2] = E3[B4 + 12 >> 2] | 0 - D4 & g6, I7 |= D4, c4 |= o4, (0 | C4) != (0 | (g6 = g6 + 1 | 0)); ) ;
                        E3[A8 >> 2] = Q4 - E3[B4 + 12 >> 2], A8 = (255 & I7) - 1 | 0;
                      } else A8 = -1;
                      return 0 | A8;
                    }, Jc: function() {
                      return 1318;
                    }, Kc: function() {
                      return 26;
                    }, Lc: bI, Mc: dI, Nc: function(A8) {
                      var I7, g6 = 0, C4 = 0, B4 = 0, Q4 = 0, c4 = 0, a4 = 0, y4 = 0, f4 = 0, e4 = 0, w4 = 0, t4 = 0, h4 = 0;
                      r3 = I7 = r3 - 16 | 0;
                      A: {
                        I: {
                          g: {
                            C: {
                              B: {
                                Q: {
                                  E: {
                                    i: {
                                      o: {
                                        c: {
                                          if ((A8 |= 0) >>> 0 <= 244) {
                                            if (3 & (g6 = (Q4 = E3[9281]) >>> (A8 = (y4 = A8 >>> 0 < 11 ? 16 : A8 + 11 & 504) >>> 3 | 0) | 0)) {
                                              A8 = 37164 + (g6 = (C4 = A8 + (1 & ~g6) | 0) << 3) | 0, g6 = E3[g6 + 37172 >> 2], (0 | A8) != (0 | (B4 = E3[g6 + 8 >> 2])) ? (E3[B4 + 12 >> 2] = A8, E3[A8 + 8 >> 2] = B4) : (t4 = 37124, h4 = gI(-2, C4) & Q4, E3[t4 >> 2] = h4), A8 = g6 + 8 | 0, C4 <<= 3, E3[g6 + 4 >> 2] = 3 | C4, E3[4 + (g6 = g6 + C4 | 0) >> 2] = 1 | E3[g6 + 4 >> 2];
                                              break A;
                                            }
                                            if ((f4 = E3[9283]) >>> 0 >= y4 >>> 0) break c;
                                            if (g6) {
                                              g6 = 37164 + (C4 = (A8 = aI((0 - (C4 = 2 << A8) | C4) & g6 << A8)) << 3) | 0, C4 = E3[C4 + 37172 >> 2], (0 | g6) != (0 | (B4 = E3[C4 + 8 >> 2])) ? (E3[B4 + 12 >> 2] = g6, E3[g6 + 8 >> 2] = B4) : (Q4 = gI(-2, A8) & Q4, E3[9281] = Q4), E3[C4 + 4 >> 2] = 3 | y4, c4 = (A8 <<= 3) - y4 | 0, E3[4 + (a4 = C4 + y4 | 0) >> 2] = 1 | c4, E3[A8 + C4 >> 2] = c4, f4 && (A8 = 37164 + (-8 & f4) | 0, B4 = E3[9286], (g6 = 1 << (f4 >>> 3)) & Q4 ? g6 = E3[A8 + 8 >> 2] : (E3[9281] = g6 | Q4, g6 = A8), E3[A8 + 8 >> 2] = B4, E3[g6 + 12 >> 2] = B4, E3[B4 + 12 >> 2] = A8, E3[B4 + 8 >> 2] = g6), A8 = C4 + 8 | 0, E3[9286] = a4, E3[9283] = c4;
                                              break A;
                                            }
                                            if (!(w4 = E3[9282])) break c;
                                            for (C4 = E3[37428 + (aI(w4) << 2) >> 2], c4 = (-8 & E3[C4 + 4 >> 2]) - y4 | 0, g6 = C4; (A8 = E3[g6 + 16 >> 2]) || (A8 = E3[g6 + 20 >> 2]); ) c4 = (g6 = (B4 = (-8 & E3[A8 + 4 >> 2]) - y4 | 0) >>> 0 < c4 >>> 0) ? B4 : c4, C4 = g6 ? A8 : C4, g6 = A8;
                                            if (e4 = E3[C4 + 24 >> 2], (0 | C4) != (0 | (A8 = E3[C4 + 12 >> 2]))) {
                                              g6 = E3[C4 + 8 >> 2], E3[g6 + 12 >> 2] = A8, E3[A8 + 8 >> 2] = g6;
                                              break I;
                                            }
                                            if (g6 = E3[C4 + 20 >> 2]) B4 = C4 + 20 | 0;
                                            else {
                                              if (!(g6 = E3[C4 + 16 >> 2])) break o;
                                              B4 = C4 + 16 | 0;
                                            }
                                            for (; a4 = B4, B4 = (A8 = g6) + 20 | 0, (g6 = E3[A8 + 20 >> 2]) || (B4 = A8 + 16 | 0, g6 = E3[A8 + 16 >> 2]); ) ;
                                            E3[a4 >> 2] = 0;
                                            break I;
                                          }
                                          if (y4 = -1, !(A8 >>> 0 > 4294967231) && (y4 = -8 & (g6 = A8 + 11 | 0), a4 = E3[9282])) {
                                            f4 = 31, c4 = 0 - y4 | 0, A8 >>> 0 <= 16777204 && (f4 = 62 + ((y4 >>> 38 - (A8 = D3(g6 >>> 8 | 0)) & 1) - (A8 << 1) | 0) | 0);
                                            D: {
                                              a: {
                                                if (g6 = E3[37428 + (f4 << 2) >> 2]) for (A8 = 0, C4 = y4 << (31 != (0 | f4) ? 25 - (f4 >>> 1 | 0) : 0); ; ) {
                                                  if (!((Q4 = (-8 & E3[g6 + 4 >> 2]) - y4 | 0) >>> 0 >= c4 >>> 0 || (B4 = g6, c4 = Q4))) {
                                                    c4 = 0, A8 = g6;
                                                    break a;
                                                  }
                                                  if (Q4 = E3[g6 + 20 >> 2], g6 = E3[16 + ((C4 >>> 29 & 4) + g6 | 0) >> 2], A8 = Q4 ? (0 | Q4) == (0 | g6) ? A8 : Q4 : A8, C4 <<= 1, !g6) break;
                                                }
                                                else A8 = 0;
                                                if (!(A8 | B4)) {
                                                  if (B4 = 0, !(A8 = (0 - (A8 = 2 << f4) | A8) & a4)) break c;
                                                  A8 = E3[37428 + (aI(A8) << 2) >> 2];
                                                }
                                                if (!A8) break D;
                                              }
                                              for (; c4 = (g6 = (C4 = (-8 & E3[A8 + 4 >> 2]) - y4 | 0) >>> 0 < c4 >>> 0) ? C4 : c4, B4 = g6 ? A8 : B4, A8 = (g6 = E3[A8 + 16 >> 2]) || E3[A8 + 20 >> 2]; ) ;
                                            }
                                            if (!(!B4 | E3[9283] - y4 >>> 0 <= c4 >>> 0)) {
                                              if (f4 = E3[B4 + 24 >> 2], (0 | B4) != (0 | (A8 = E3[B4 + 12 >> 2]))) {
                                                g6 = E3[B4 + 8 >> 2], E3[g6 + 12 >> 2] = A8, E3[A8 + 8 >> 2] = g6;
                                                break g;
                                              }
                                              if (g6 = E3[B4 + 20 >> 2]) C4 = B4 + 20 | 0;
                                              else {
                                                if (!(g6 = E3[B4 + 16 >> 2])) break i;
                                                C4 = B4 + 16 | 0;
                                              }
                                              for (; Q4 = C4, C4 = (A8 = g6) + 20 | 0, (g6 = E3[A8 + 20 >> 2]) || (C4 = A8 + 16 | 0, g6 = E3[A8 + 16 >> 2]); ) ;
                                              E3[Q4 >> 2] = 0;
                                              break g;
                                            }
                                          }
                                        }
                                        if ((B4 = E3[9283]) >>> 0 >= y4 >>> 0) {
                                          A8 = E3[9286], (g6 = B4 - y4 | 0) >>> 0 >= 16 ? (E3[4 + (C4 = A8 + y4 | 0) >> 2] = 1 | g6, E3[A8 + B4 >> 2] = g6, E3[A8 + 4 >> 2] = 3 | y4) : (E3[A8 + 4 >> 2] = 3 | B4, E3[4 + (g6 = A8 + B4 | 0) >> 2] = 1 | E3[g6 + 4 >> 2], C4 = 0, g6 = 0), E3[9283] = g6, E3[9286] = C4, A8 = A8 + 8 | 0;
                                          break A;
                                        }
                                        if ((C4 = E3[9284]) >>> 0 > y4 >>> 0) {
                                          g6 = C4 - y4 | 0, E3[9284] = g6, C4 = (A8 = E3[9287]) + y4 | 0, E3[9287] = C4, E3[C4 + 4 >> 2] = 1 | g6, E3[A8 + 4 >> 2] = 3 | y4, A8 = A8 + 8 | 0;
                                          break A;
                                        }
                                        if (A8 = 0, c4 = y4 + 47 | 0, E3[9399] ? g6 = E3[9401] : (E3[9402] = -1, E3[9403] = -1, E3[9400] = 4096, E3[9401] = 4096, E3[9399] = I7 + 12 & -16 ^ 1431655768, E3[9404] = 0, E3[9392] = 0, g6 = 4096), (g6 = (Q4 = c4 + g6 | 0) & (a4 = 0 - g6 | 0)) >>> 0 <= y4 >>> 0) break A;
                                        if ((f4 = E3[9391]) && (B4 = (e4 = E3[9389]) + g6 | 0) >>> 0 <= e4 >>> 0 | B4 >>> 0 > f4 >>> 0) break A;
                                        c: {
                                          if (!(4 & i3[37568])) {
                                            D: {
                                              a: {
                                                y: {
                                                  f: {
                                                    if (B4 = E3[9287]) for (A8 = 37572; ; ) {
                                                      if ((f4 = E3[A8 >> 2]) >>> 0 <= B4 >>> 0 & B4 >>> 0 < f4 + E3[A8 + 4 >> 2] >>> 0) break f;
                                                      if (!(A8 = E3[A8 + 8 >> 2])) break;
                                                    }
                                                    if (-1 == (0 | (C4 = uA(0)))) break D;
                                                    if (Q4 = g6, (B4 = (A8 = E3[9400]) - 1 | 0) & C4 && (Q4 = (g6 - C4 | 0) + (C4 + B4 & 0 - A8) | 0), Q4 >>> 0 <= y4 >>> 0) break D;
                                                    if ((B4 = E3[9391]) && (A8 = (a4 = E3[9389]) + Q4 | 0) >>> 0 <= a4 >>> 0 | A8 >>> 0 > B4 >>> 0) break D;
                                                    if ((0 | C4) != (0 | (A8 = uA(Q4)))) break y;
                                                    break c;
                                                  }
                                                  if ((0 | (C4 = uA(Q4 = a4 & Q4 - C4))) == (E3[A8 >> 2] + E3[A8 + 4 >> 2] | 0)) break a;
                                                  A8 = C4;
                                                }
                                                if (-1 == (0 | A8)) break D;
                                                if (y4 + 48 >>> 0 <= Q4 >>> 0) {
                                                  C4 = A8;
                                                  break c;
                                                }
                                                if (-1 == (0 | uA(C4 = (C4 = E3[9401]) + (c4 - Q4 | 0) & 0 - C4))) break D;
                                                Q4 = C4 + Q4 | 0, C4 = A8;
                                                break c;
                                              }
                                              if (-1 != (0 | C4)) break c;
                                            }
                                            E3[9392] = 4 | E3[9392];
                                          }
                                          if (-1 == (0 | (C4 = uA(g6))) | -1 == (0 | (A8 = uA(0))) | A8 >>> 0 <= C4 >>> 0) break B;
                                          if ((Q4 = A8 - C4 | 0) >>> 0 <= y4 + 40 >>> 0) break B;
                                        }
                                        A8 = E3[9389] + Q4 | 0, E3[9389] = A8, A8 >>> 0 > o3[9390] && (E3[9390] = A8);
                                        c: {
                                          if (c4 = E3[9287]) {
                                            for (A8 = 37572; ; ) {
                                              if (((g6 = E3[A8 >> 2]) + (B4 = E3[A8 + 4 >> 2]) | 0) == (0 | C4)) break c;
                                              if (!(A8 = E3[A8 + 8 >> 2])) break;
                                            }
                                            break E;
                                          }
                                          for ((A8 = E3[9285]) >>> 0 <= C4 >>> 0 && A8 || (E3[9285] = C4), A8 = 0, E3[9394] = Q4, E3[9393] = C4, E3[9289] = -1, E3[9290] = E3[9399], E3[9396] = 0; B4 = 37164 + (g6 = A8 << 3) | 0, E3[g6 + 37172 >> 2] = B4, E3[g6 + 37176 >> 2] = B4, 32 != (0 | (A8 = A8 + 1 | 0)); ) ;
                                          B4 = (A8 = Q4 - 40 | 0) - (g6 = -8 - C4 & 7) | 0, E3[9284] = B4, g6 = g6 + C4 | 0, E3[9287] = g6, E3[g6 + 4 >> 2] = 1 | B4, E3[4 + (A8 + C4 | 0) >> 2] = 40, E3[9288] = E3[9403];
                                          break Q;
                                        }
                                        if (8 & E3[A8 + 12 >> 2] | C4 >>> 0 <= c4 >>> 0 | g6 >>> 0 > c4 >>> 0) break E;
                                        E3[A8 + 4 >> 2] = B4 + Q4, g6 = (A8 = -8 - c4 & 7) + c4 | 0, E3[9287] = g6, A8 = (C4 = E3[9284] + Q4 | 0) - A8 | 0, E3[9284] = A8, E3[g6 + 4 >> 2] = 1 | A8, E3[4 + (C4 + c4 | 0) >> 2] = 40, E3[9288] = E3[9403];
                                        break Q;
                                      }
                                      A8 = 0;
                                      break I;
                                    }
                                    A8 = 0;
                                    break g;
                                  }
                                  o3[9285] > C4 >>> 0 && (E3[9285] = C4), B4 = C4 + Q4 | 0, A8 = 37572;
                                  E: {
                                    for (; ; ) {
                                      if ((0 | (g6 = E3[A8 >> 2])) != (0 | B4)) {
                                        if (A8 = E3[A8 + 8 >> 2]) continue;
                                        break E;
                                      }
                                      break;
                                    }
                                    if (!(8 & i3[A8 + 12 | 0])) break C;
                                  }
                                  for (A8 = 37572; !((g6 = E3[A8 >> 2]) >>> 0 <= c4 >>> 0 && (B4 = g6 + E3[A8 + 4 >> 2] | 0) >>> 0 > c4 >>> 0); ) A8 = E3[A8 + 8 >> 2];
                                  for (a4 = (A8 = Q4 - 40 | 0) - (g6 = -8 - C4 & 7) | 0, E3[9284] = a4, g6 = g6 + C4 | 0, E3[9287] = g6, E3[g6 + 4 >> 2] = 1 | a4, E3[4 + (A8 + C4 | 0) >> 2] = 40, E3[9288] = E3[9403], E3[(g6 = (A8 = (B4 + (39 - B4 & 7) | 0) - 47 | 0) >>> 0 < c4 + 16 >>> 0 ? c4 : A8) + 4 >> 2] = 27, A8 = E3[9396], E3[g6 + 16 >> 2] = E3[9395], E3[g6 + 20 >> 2] = A8, A8 = E3[9394], E3[g6 + 8 >> 2] = E3[9393], E3[g6 + 12 >> 2] = A8, E3[9395] = g6 + 8, E3[9394] = Q4, E3[9393] = C4, E3[9396] = 0, A8 = g6 + 24 | 0; E3[A8 + 4 >> 2] = 7, C4 = A8 + 8 | 0, A8 = A8 + 4 | 0, C4 >>> 0 < B4 >>> 0; ) ;
                                  if ((0 | g6) != (0 | c4)) {
                                    E3[g6 + 4 >> 2] = -2 & E3[g6 + 4 >> 2], C4 = g6 - c4 | 0, E3[c4 + 4 >> 2] = 1 | C4, E3[g6 >> 2] = C4;
                                    E: if (C4 >>> 0 <= 255) A8 = 37164 + (-8 & C4) | 0, (g6 = E3[9281]) & (C4 = 1 << (C4 >>> 3)) ? g6 = E3[A8 + 8 >> 2] : (E3[9281] = g6 | C4, g6 = A8), E3[A8 + 8 >> 2] = c4, E3[g6 + 12 >> 2] = c4, B4 = 8, C4 = 12;
                                    else {
                                      A8 = 31, C4 >>> 0 <= 16777215 && (A8 = 62 + ((C4 >>> 38 - (A8 = D3(C4 >>> 8 | 0)) & 1) - (A8 << 1) | 0) | 0), E3[c4 + 28 >> 2] = A8, E3[c4 + 16 >> 2] = 0, E3[c4 + 20 >> 2] = 0, g6 = 37428 + (A8 << 2) | 0;
                                      i: {
                                        if ((B4 = E3[9282]) & (Q4 = 1 << A8)) {
                                          for (A8 = C4 << (31 != (0 | A8) ? 25 - (A8 >>> 1 | 0) : 0), B4 = E3[g6 >> 2]; ; ) {
                                            if ((0 | C4) == (-8 & E3[(g6 = B4) + 4 >> 2])) break i;
                                            if (B4 = A8 >>> 29 | 0, A8 <<= 1, !(B4 = E3[16 + (Q4 = (4 & B4) + g6 | 0) >> 2])) break;
                                          }
                                          E3[Q4 + 16 >> 2] = c4;
                                        } else E3[9282] = B4 | Q4, E3[g6 >> 2] = c4;
                                        E3[c4 + 24 >> 2] = g6, A8 = g6 = c4, B4 = 12, C4 = 8;
                                        break E;
                                      }
                                      A8 = E3[g6 + 8 >> 2], E3[A8 + 12 >> 2] = c4, E3[g6 + 8 >> 2] = c4, E3[c4 + 8 >> 2] = A8, A8 = 0, B4 = 12, C4 = 24;
                                    }
                                    E3[B4 + c4 >> 2] = g6, E3[C4 + c4 >> 2] = A8;
                                  }
                                }
                                if (!((A8 = E3[9284]) >>> 0 <= y4 >>> 0)) {
                                  g6 = A8 - y4 | 0, E3[9284] = g6, C4 = (A8 = E3[9287]) + y4 | 0, E3[9287] = C4, E3[C4 + 4 >> 2] = 1 | g6, E3[A8 + 4 >> 2] = 3 | y4, A8 = A8 + 8 | 0;
                                  break A;
                                }
                              }
                              E3[9280] = 48, A8 = 0;
                              break A;
                            }
                            E3[A8 >> 2] = C4, E3[A8 + 4 >> 2] = E3[A8 + 4 >> 2] + Q4, E3[4 + (f4 = (-8 - C4 & 7) + C4 | 0) >> 2] = 3 | y4, a4 = (Q4 = g6 + (-8 - g6 & 7) | 0) - (c4 = y4 + f4 | 0) | 0;
                            C: if (E3[9287] != (0 | Q4)) if (E3[9286] != (0 | Q4)) {
                              if (1 == (3 & (A8 = E3[Q4 + 4 >> 2]))) {
                                e4 = -8 & A8, C4 = E3[Q4 + 12 >> 2];
                                B: if (A8 >>> 0 <= 255) {
                                  if ((0 | (g6 = E3[Q4 + 8 >> 2])) == (0 | C4)) {
                                    t4 = 37124, h4 = E3[9281] & gI(-2, A8 >>> 3 | 0), E3[t4 >> 2] = h4;
                                    break B;
                                  }
                                  E3[g6 + 12 >> 2] = C4, E3[C4 + 8 >> 2] = g6;
                                } else {
                                  y4 = E3[Q4 + 24 >> 2];
                                  Q: if ((0 | C4) == (0 | Q4)) {
                                    E: {
                                      if (A8 = E3[Q4 + 20 >> 2]) g6 = Q4 + 20 | 0;
                                      else {
                                        if (!(A8 = E3[Q4 + 16 >> 2])) break E;
                                        g6 = Q4 + 16 | 0;
                                      }
                                      for (; B4 = g6, C4 = A8, g6 = A8 + 20 | 0, (A8 = E3[A8 + 20 >> 2]) || (g6 = C4 + 16 | 0, A8 = E3[C4 + 16 >> 2]); ) ;
                                      E3[B4 >> 2] = 0;
                                      break Q;
                                    }
                                    C4 = 0;
                                  } else A8 = E3[Q4 + 8 >> 2], E3[A8 + 12 >> 2] = C4, E3[C4 + 8 >> 2] = A8;
                                  if (y4) {
                                    A8 = E3[Q4 + 28 >> 2];
                                    Q: {
                                      if (E3[(g6 = 37428 + (A8 << 2) | 0) >> 2] == (0 | Q4)) {
                                        if (E3[g6 >> 2] = C4, C4) break Q;
                                        t4 = 37128, h4 = E3[9282] & gI(-2, A8), E3[t4 >> 2] = h4;
                                        break B;
                                      }
                                      if (E3[y4 + (E3[y4 + 16 >> 2] == (0 | Q4) ? 16 : 20) >> 2] = C4, !C4) break B;
                                    }
                                    E3[C4 + 24 >> 2] = y4, (A8 = E3[Q4 + 16 >> 2]) && (E3[C4 + 16 >> 2] = A8, E3[A8 + 24 >> 2] = C4), (A8 = E3[Q4 + 20 >> 2]) && (E3[C4 + 20 >> 2] = A8, E3[A8 + 24 >> 2] = C4);
                                  }
                                }
                                a4 = a4 + e4 | 0, A8 = E3[4 + (Q4 = Q4 + e4 | 0) >> 2];
                              }
                              if (E3[Q4 + 4 >> 2] = -2 & A8, E3[c4 + 4 >> 2] = 1 | a4, E3[c4 + a4 >> 2] = a4, a4 >>> 0 <= 255) A8 = 37164 + (-8 & a4) | 0, (g6 = E3[9281]) & (C4 = 1 << (a4 >>> 3)) ? g6 = E3[A8 + 8 >> 2] : (E3[9281] = g6 | C4, g6 = A8), E3[A8 + 8 >> 2] = c4, E3[g6 + 12 >> 2] = c4, E3[c4 + 12 >> 2] = A8, E3[c4 + 8 >> 2] = g6;
                              else {
                                C4 = 31, a4 >>> 0 <= 16777215 && (C4 = 62 + ((a4 >>> 38 - (A8 = D3(a4 >>> 8 | 0)) & 1) - (A8 << 1) | 0) | 0), E3[c4 + 28 >> 2] = C4, E3[c4 + 16 >> 2] = 0, E3[c4 + 20 >> 2] = 0, A8 = 37428 + (C4 << 2) | 0;
                                B: {
                                  if ((g6 = E3[9282]) & (B4 = 1 << C4)) {
                                    for (C4 = a4 << (31 != (0 | C4) ? 25 - (C4 >>> 1 | 0) : 0), g6 = E3[A8 >> 2]; ; ) {
                                      if ((-8 & E3[(A8 = g6) + 4 >> 2]) == (0 | a4)) break B;
                                      if (g6 = C4 >>> 29 | 0, C4 <<= 1, !(g6 = E3[16 + (B4 = (4 & g6) + A8 | 0) >> 2])) break;
                                    }
                                    E3[B4 + 16 >> 2] = c4;
                                  } else E3[9282] = g6 | B4, E3[A8 >> 2] = c4;
                                  E3[c4 + 24 >> 2] = A8, E3[c4 + 12 >> 2] = c4, E3[c4 + 8 >> 2] = c4;
                                  break C;
                                }
                                g6 = E3[A8 + 8 >> 2], E3[g6 + 12 >> 2] = c4, E3[A8 + 8 >> 2] = c4, E3[c4 + 24 >> 2] = 0, E3[c4 + 12 >> 2] = A8, E3[c4 + 8 >> 2] = g6;
                              }
                            } else E3[9286] = c4, A8 = E3[9283] + a4 | 0, E3[9283] = A8, E3[c4 + 4 >> 2] = 1 | A8, E3[A8 + c4 >> 2] = A8;
                            else E3[9287] = c4, A8 = E3[9284] + a4 | 0, E3[9284] = A8, E3[c4 + 4 >> 2] = 1 | A8;
                            A8 = f4 + 8 | 0;
                            break A;
                          }
                          g: if (f4) {
                            g6 = E3[B4 + 28 >> 2];
                            C: {
                              if (E3[(C4 = 37428 + (g6 << 2) | 0) >> 2] == (0 | B4)) {
                                if (E3[C4 >> 2] = A8, A8) break C;
                                a4 = gI(-2, g6) & a4, E3[9282] = a4;
                                break g;
                              }
                              if (E3[f4 + (E3[f4 + 16 >> 2] == (0 | B4) ? 16 : 20) >> 2] = A8, !A8) break g;
                            }
                            E3[A8 + 24 >> 2] = f4, (g6 = E3[B4 + 16 >> 2]) && (E3[A8 + 16 >> 2] = g6, E3[g6 + 24 >> 2] = A8), (g6 = E3[B4 + 20 >> 2]) && (E3[A8 + 20 >> 2] = g6, E3[g6 + 24 >> 2] = A8);
                          }
                          g: if (c4 >>> 0 <= 15) A8 = c4 + y4 | 0, E3[B4 + 4 >> 2] = 3 | A8, E3[4 + (A8 = A8 + B4 | 0) >> 2] = 1 | E3[A8 + 4 >> 2];
                          else if (E3[B4 + 4 >> 2] = 3 | y4, E3[4 + (Q4 = B4 + y4 | 0) >> 2] = 1 | c4, E3[c4 + Q4 >> 2] = c4, c4 >>> 0 <= 255) A8 = 37164 + (-8 & c4) | 0, (g6 = E3[9281]) & (C4 = 1 << (c4 >>> 3)) ? g6 = E3[A8 + 8 >> 2] : (E3[9281] = g6 | C4, g6 = A8), E3[A8 + 8 >> 2] = Q4, E3[g6 + 12 >> 2] = Q4, E3[Q4 + 12 >> 2] = A8, E3[Q4 + 8 >> 2] = g6;
                          else {
                            A8 = 31, c4 >>> 0 <= 16777215 && (A8 = 62 + ((c4 >>> 38 - (A8 = D3(c4 >>> 8 | 0)) & 1) - (A8 << 1) | 0) | 0), E3[Q4 + 28 >> 2] = A8, E3[Q4 + 16 >> 2] = 0, E3[Q4 + 20 >> 2] = 0, g6 = 37428 + (A8 << 2) | 0;
                            C: {
                              if ((C4 = 1 << A8) & a4) {
                                for (A8 = c4 << (31 != (0 | A8) ? 25 - (A8 >>> 1 | 0) : 0), g6 = E3[g6 >> 2]; ; ) {
                                  if (C4 = g6, (-8 & E3[g6 + 4 >> 2]) == (0 | c4)) break C;
                                  if (a4 = A8 >>> 29 | 0, A8 <<= 1, !(g6 = E3[16 + (a4 = g6 + (4 & a4) | 0) >> 2])) break;
                                }
                                E3[a4 + 16 >> 2] = Q4, E3[Q4 + 24 >> 2] = C4;
                              } else E3[9282] = C4 | a4, E3[g6 >> 2] = Q4, E3[Q4 + 24 >> 2] = g6;
                              E3[Q4 + 12 >> 2] = Q4, E3[Q4 + 8 >> 2] = Q4;
                              break g;
                            }
                            A8 = E3[C4 + 8 >> 2], E3[A8 + 12 >> 2] = Q4, E3[C4 + 8 >> 2] = Q4, E3[Q4 + 24 >> 2] = 0, E3[Q4 + 12 >> 2] = C4, E3[Q4 + 8 >> 2] = A8;
                          }
                          A8 = B4 + 8 | 0;
                          break A;
                        }
                        I: if (e4) {
                          g6 = E3[C4 + 28 >> 2];
                          g: {
                            if (E3[(B4 = 37428 + (g6 << 2) | 0) >> 2] == (0 | C4)) {
                              if (E3[B4 >> 2] = A8, A8) break g;
                              t4 = 37128, h4 = gI(-2, g6) & w4, E3[t4 >> 2] = h4;
                              break I;
                            }
                            if (E3[e4 + (E3[e4 + 16 >> 2] == (0 | C4) ? 16 : 20) >> 2] = A8, !A8) break I;
                          }
                          E3[A8 + 24 >> 2] = e4, (g6 = E3[C4 + 16 >> 2]) && (E3[A8 + 16 >> 2] = g6, E3[g6 + 24 >> 2] = A8), (g6 = E3[C4 + 20 >> 2]) && (E3[A8 + 20 >> 2] = g6, E3[g6 + 24 >> 2] = A8);
                        }
                        c4 >>> 0 <= 15 ? (A8 = c4 + y4 | 0, E3[C4 + 4 >> 2] = 3 | A8, E3[4 + (A8 = A8 + C4 | 0) >> 2] = 1 | E3[A8 + 4 >> 2]) : (E3[C4 + 4 >> 2] = 3 | y4, E3[4 + (a4 = C4 + y4 | 0) >> 2] = 1 | c4, E3[c4 + a4 >> 2] = c4, f4 && (A8 = 37164 + (-8 & f4) | 0, B4 = E3[9286], (g6 = 1 << (f4 >>> 3)) & Q4 ? g6 = E3[A8 + 8 >> 2] : (E3[9281] = g6 | Q4, g6 = A8), E3[A8 + 8 >> 2] = B4, E3[g6 + 12 >> 2] = B4, E3[B4 + 12 >> 2] = A8, E3[B4 + 8 >> 2] = g6), E3[9286] = a4, E3[9283] = c4), A8 = C4 + 8 | 0;
                      }
                      return r3 = I7 + 16 | 0, 0 | A8;
                    }, Oc: function(A8) {
                      var I7 = 0, g6 = 0, C4 = 0, B4 = 0, Q4 = 0, i4 = 0, c4 = 0, a4 = 0, y4 = 0;
                      A: if (A8 |= 0) {
                        Q4 = (C4 = A8 - 8 | 0) + (A8 = -8 & (I7 = E3[A8 - 4 >> 2])) | 0;
                        I: if (!(1 & I7)) {
                          if (!(2 & I7)) break A;
                          if ((C4 = C4 - (I7 = E3[C4 >> 2]) | 0) >>> 0 < o3[9285]) break A;
                          A8 = A8 + I7 | 0;
                          g: {
                            C: {
                              B: {
                                if (E3[9286] != (0 | C4)) {
                                  if (g6 = E3[C4 + 12 >> 2], I7 >>> 0 <= 255) {
                                    if ((0 | (B4 = E3[C4 + 8 >> 2])) != (0 | g6)) break B;
                                    a4 = 37124, y4 = E3[9281] & gI(-2, I7 >>> 3 | 0), E3[a4 >> 2] = y4;
                                    break I;
                                  }
                                  if (c4 = E3[C4 + 24 >> 2], (0 | g6) != (0 | C4)) {
                                    I7 = E3[C4 + 8 >> 2], E3[I7 + 12 >> 2] = g6, E3[g6 + 8 >> 2] = I7;
                                    break g;
                                  }
                                  if (B4 = E3[C4 + 20 >> 2]) I7 = C4 + 20 | 0;
                                  else {
                                    if (!(B4 = E3[C4 + 16 >> 2])) break C;
                                    I7 = C4 + 16 | 0;
                                  }
                                  for (; i4 = I7, I7 = (g6 = B4) + 20 | 0, (B4 = E3[g6 + 20 >> 2]) || (I7 = g6 + 16 | 0, B4 = E3[g6 + 16 >> 2]); ) ;
                                  E3[i4 >> 2] = 0;
                                  break g;
                                }
                                if (3 & ~(I7 = E3[Q4 + 4 >> 2])) break I;
                                return E3[9283] = A8, E3[Q4 + 4 >> 2] = -2 & I7, E3[C4 + 4 >> 2] = 1 | A8, void (E3[Q4 >> 2] = A8);
                              }
                              E3[B4 + 12 >> 2] = g6, E3[g6 + 8 >> 2] = B4;
                              break I;
                            }
                            g6 = 0;
                          }
                          if (c4) {
                            I7 = E3[C4 + 28 >> 2];
                            g: {
                              if (E3[(B4 = 37428 + (I7 << 2) | 0) >> 2] == (0 | C4)) {
                                if (E3[B4 >> 2] = g6, g6) break g;
                                a4 = 37128, y4 = E3[9282] & gI(-2, I7), E3[a4 >> 2] = y4;
                                break I;
                              }
                              if (E3[c4 + (E3[c4 + 16 >> 2] == (0 | C4) ? 16 : 20) >> 2] = g6, !g6) break I;
                            }
                            E3[g6 + 24 >> 2] = c4, (I7 = E3[C4 + 16 >> 2]) && (E3[g6 + 16 >> 2] = I7, E3[I7 + 24 >> 2] = g6), (I7 = E3[C4 + 20 >> 2]) && (E3[g6 + 20 >> 2] = I7, E3[I7 + 24 >> 2] = g6);
                          }
                        }
                        if (!(C4 >>> 0 >= Q4 >>> 0) && 1 & (I7 = E3[Q4 + 4 >> 2])) {
                          I: {
                            g: {
                              C: {
                                B: {
                                  if (!(2 & I7)) {
                                    if ((0 | Q4) == E3[9287]) {
                                      if (E3[9287] = C4, A8 = E3[9284] + A8 | 0, E3[9284] = A8, E3[C4 + 4 >> 2] = 1 | A8, E3[9286] != (0 | C4)) break A;
                                      return E3[9283] = 0, void (E3[9286] = 0);
                                    }
                                    if ((0 | Q4) == E3[9286]) return E3[9286] = C4, A8 = E3[9283] + A8 | 0, E3[9283] = A8, E3[C4 + 4 >> 2] = 1 | A8, void (E3[A8 + C4 >> 2] = A8);
                                    if (A8 = (-8 & I7) + A8 | 0, g6 = E3[Q4 + 12 >> 2], I7 >>> 0 <= 255) {
                                      if ((0 | (B4 = E3[Q4 + 8 >> 2])) == (0 | g6)) {
                                        a4 = 37124, y4 = E3[9281] & gI(-2, I7 >>> 3 | 0), E3[a4 >> 2] = y4;
                                        break g;
                                      }
                                      E3[B4 + 12 >> 2] = g6, E3[g6 + 8 >> 2] = B4;
                                      break g;
                                    }
                                    if (c4 = E3[Q4 + 24 >> 2], (0 | g6) != (0 | Q4)) {
                                      I7 = E3[Q4 + 8 >> 2], E3[I7 + 12 >> 2] = g6, E3[g6 + 8 >> 2] = I7;
                                      break C;
                                    }
                                    if (B4 = E3[Q4 + 20 >> 2]) I7 = Q4 + 20 | 0;
                                    else {
                                      if (!(B4 = E3[Q4 + 16 >> 2])) break B;
                                      I7 = Q4 + 16 | 0;
                                    }
                                    for (; i4 = I7, I7 = (g6 = B4) + 20 | 0, (B4 = E3[g6 + 20 >> 2]) || (I7 = g6 + 16 | 0, B4 = E3[g6 + 16 >> 2]); ) ;
                                    E3[i4 >> 2] = 0;
                                    break C;
                                  }
                                  E3[Q4 + 4 >> 2] = -2 & I7, E3[C4 + 4 >> 2] = 1 | A8, E3[A8 + C4 >> 2] = A8;
                                  break I;
                                }
                                g6 = 0;
                              }
                              if (c4) {
                                I7 = E3[Q4 + 28 >> 2];
                                C: {
                                  if ((0 | Q4) == E3[(B4 = 37428 + (I7 << 2) | 0) >> 2]) {
                                    if (E3[B4 >> 2] = g6, g6) break C;
                                    a4 = 37128, y4 = E3[9282] & gI(-2, I7), E3[a4 >> 2] = y4;
                                    break g;
                                  }
                                  if (E3[c4 + ((0 | Q4) == E3[c4 + 16 >> 2] ? 16 : 20) >> 2] = g6, !g6) break g;
                                }
                                E3[g6 + 24 >> 2] = c4, (I7 = E3[Q4 + 16 >> 2]) && (E3[g6 + 16 >> 2] = I7, E3[I7 + 24 >> 2] = g6), (I7 = E3[Q4 + 20 >> 2]) && (E3[g6 + 20 >> 2] = I7, E3[I7 + 24 >> 2] = g6);
                              }
                            }
                            if (E3[C4 + 4 >> 2] = 1 | A8, E3[A8 + C4 >> 2] = A8, E3[9286] == (0 | C4)) return void (E3[9283] = A8);
                          }
                          if (A8 >>> 0 <= 255) return I7 = 37164 + (-8 & A8) | 0, (B4 = E3[9281]) & (A8 = 1 << (A8 >>> 3)) ? A8 = E3[I7 + 8 >> 2] : (E3[9281] = A8 | B4, A8 = I7), E3[I7 + 8 >> 2] = C4, E3[A8 + 12 >> 2] = C4, E3[C4 + 12 >> 2] = I7, void (E3[C4 + 8 >> 2] = A8);
                          g6 = 31, A8 >>> 0 <= 16777215 && (g6 = 62 + ((A8 >>> 38 - (I7 = D3(A8 >>> 8 | 0)) & 1) - (I7 << 1) | 0) | 0), E3[C4 + 28 >> 2] = g6, E3[C4 + 16 >> 2] = 0, E3[C4 + 20 >> 2] = 0, i4 = 37428 + (g6 << 2) | 0;
                          I: {
                            g: {
                              if ((I7 = E3[9282]) & (B4 = 1 << g6)) {
                                for (g6 = A8 << (31 != (0 | g6) ? 25 - (g6 >>> 1 | 0) : 0), I7 = E3[i4 >> 2]; ; ) {
                                  if (B4 = I7, (-8 & E3[I7 + 4 >> 2]) == (0 | A8)) break g;
                                  if (I7 = g6 >>> 29 | 0, g6 <<= 1, !(I7 = E3[(i4 = 16 + ((4 & I7) + B4 | 0) | 0) >> 2])) break;
                                }
                                g6 = 24, I7 = B4;
                              } else E3[9282] = I7 | B4, g6 = 24, I7 = i4;
                              B4 = C4, Q4 = C4, A8 = 8;
                              break I;
                            }
                            I7 = E3[B4 + 8 >> 2], E3[I7 + 12 >> 2] = C4, g6 = 8, i4 = B4 + 8 | 0, Q4 = 0, A8 = 24;
                          }
                          E3[i4 >> 2] = C4, E3[g6 + C4 >> 2] = I7, E3[C4 + 12 >> 2] = B4, E3[A8 + C4 >> 2] = Q4, A8 = E3[9289] - 1 | 0, E3[9289] = A8 || -1;
                        }
                      }
                    }, Pc: vI };
                  })(A6);
                })(I5);
              }, instantiate: function(A5, I5) {
                return { then: function(g4) {
                  var C2 = new w2.Module(A5);
                  g4({ instance: new w2.Instance(C2, I5) });
                } };
              }, RuntimeError: Error };
              y2 = [];
              var r2, t2, h2, k2, n2, s2, F2, S2 = false;
              function M2() {
                var A5 = e2.buffer;
                B2.HEAP8 = r2 = new Int8Array(A5), B2.HEAP16 = h2 = new Int16Array(A5), B2.HEAPU8 = t2 = new Uint8Array(A5), B2.HEAPU16 = new Uint16Array(A5), B2.HEAP32 = k2 = new Int32Array(A5), B2.HEAPU32 = n2 = new Uint32Array(A5), B2.HEAPF32 = s2 = new Float32Array(A5), B2.HEAPF64 = F2 = new Float64Array(A5);
              }
              var N2 = [], K2 = [], _2 = [], p2 = 0, H2 = null, G2 = null;
              function J2(A5) {
                throw B2.onAbort?.(A5), f2(A5 = "Aborted(" + A5 + ")"), S2 = true, A5 += ". Build with -sASSERTIONS for more info.", new w2.RuntimeError(A5);
              }
              var Y2, U2 = (A5) => A5.startsWith("file://");
              var d2 = { 36304: () => B2.getRandomValue(), 36340: () => {
                if (void 0 === B2.getRandomValue) try {
                  var A5 = "object" == typeof window ? window : self, I5 = void 0 !== A5.crypto ? A5.crypto : A5.msCrypto;
                  I5 = void 0 === I5 ? C2 : I5;
                  var g4 = function() {
                    var A6 = new Uint32Array(1);
                    return I5.getRandomValues(A6), A6[0] >>> 0;
                  };
                  g4(), B2.getRandomValue = g4;
                } catch (A6) {
                  try {
                    var C2 = require("crypto"), Q3 = function() {
                      var A7 = C2.randomBytes(4);
                      return (A7[0] << 24 | A7[1] << 16 | A7[2] << 8 | A7[3]) >>> 0;
                    };
                    Q3(), B2.getRandomValue = Q3;
                  } catch (A7) {
                    throw "No secure random number generator found";
                  }
                }
              } }, b2 = (A5) => {
                for (; A5.length > 0; ) A5.shift()(B2);
              };
              B2.noExitRuntime;
              var P2, v2 = "undefined" != typeof TextDecoder ? new TextDecoder() : void 0, R2 = (A5, I5) => A5 ? ((A6, I6, g4) => {
                for (var C2 = I6 + g4, B3 = I6; A6[B3] && !(B3 >= C2); ) ++B3;
                if (B3 - I6 > 16 && A6.buffer && v2) return v2.decode(A6.subarray(I6, B3));
                for (var Q3 = ""; I6 < B3; ) {
                  var E3 = A6[I6++];
                  if (128 & E3) {
                    var i3 = 63 & A6[I6++];
                    if (192 != (224 & E3)) {
                      var o3 = 63 & A6[I6++];
                      if ((E3 = 224 == (240 & E3) ? (15 & E3) << 12 | i3 << 6 | o3 : (7 & E3) << 18 | i3 << 12 | o3 << 6 | 63 & A6[I6++]) < 65536) Q3 += String.fromCharCode(E3);
                      else {
                        var c3 = E3 - 65536;
                        Q3 += String.fromCharCode(55296 | c3 >> 10, 56320 | 1023 & c3);
                      }
                    } else Q3 += String.fromCharCode((31 & E3) << 6 | i3);
                  } else Q3 += String.fromCharCode(E3);
                }
                return Q3;
              })(t2, A5, I5) : "", L2 = [], x2 = (A5) => {
                var I5 = (A5 - e2.buffer.byteLength + 65535) / 65536;
                try {
                  return e2.grow(I5), M2(), 1;
                } catch (A6) {
                }
              }, u2 = { b: (A5, I5, g4, C2) => {
                J2(`Assertion failed: ${R2(A5)}, at: ` + [I5 ? R2(I5) : "unknown filename", g4, C2 ? R2(C2) : "unknown function"]);
              }, c: () => {
                J2("");
              }, a: (A5, I5, g4) => ((A6, I6, g5) => {
                var C2 = ((A7, I7) => {
                  var g6;
                  for (L2.length = 0; g6 = t2[A7++]; ) {
                    var C3 = 105 != g6;
                    I7 += (C3 &= 112 != g6) && I7 % 8 ? 4 : 0, L2.push(112 == g6 ? n2[I7 >> 2] : 105 == g6 ? k2[I7 >> 2] : F2[I7 >> 3]), I7 += C3 ? 8 : 4;
                  }
                  return L2;
                })(I6, g5);
                return d2[A6](...C2);
              })(A5, I5, g4), d: (A5) => {
                var I5 = t2.length, g4 = 2147483648;
                if ((A5 >>>= 0) > g4) return false;
                for (var C2, B3 = 1; B3 <= 4; B3 *= 2) {
                  var Q3 = I5 * (1 + 0.2 / B3);
                  Q3 = Math.min(Q3, A5 + 100663296);
                  var E3 = Math.min(g4, (C2 = Math.max(A5, Q3)) + (65536 - C2 % 65536) % 65536);
                  if (x2(E3)) return true;
                }
                return false;
              } }, m2 = (function() {
                var A5 = { a: u2 };
                function I5(A6, I6) {
                  var g4;
                  return m2 = A6.exports, e2 = m2.e, M2(), g4 = m2.f, K2.unshift(g4), (function(A7) {
                    if (p2--, B2.monitorRunDependencies?.(p2), 0 == p2 && (null !== H2 && (clearInterval(H2), H2 = null), G2)) {
                      var I7 = G2;
                      G2 = null, I7();
                    }
                  })(), m2;
                }
                if (p2++, B2.monitorRunDependencies?.(p2), B2.instantiateWasm) try {
                  return B2.instantiateWasm(A5, I5);
                } catch (A6) {
                  return f2(`Module.instantiateWasm callback failed with error: ${A6}`), false;
                }
                return Y2 || (Y2 = "<<< WASM_BINARY_FILE >>>"), (function(A6, I6, C2) {
                  (function(A7) {
                    return Promise.resolve().then((() => (function(A8) {
                      if (A8 == Y2 && y2) return new Uint8Array(y2);
                      if (g3) return g3(A8);
                      throw "both async and sync fetching of the wasm failed";
                    })(A7)));
                  })(A6).then(((A7) => w2.instantiate(A7, I6))).then(C2, ((A7) => {
                    f2(`failed to asynchronously prepare wasm: ${A7}`), J2(A7);
                  }));
                })(Y2, A5, (function(A6) {
                  I5(A6.instance);
                })), {};
              })();
              function q2() {
                function A5() {
                  P2 || (P2 = true, B2.calledRun = true, S2 || (b2(K2), B2.onRuntimeInitialized?.(), (function() {
                    if (B2.postRun) for ("function" == typeof B2.postRun && (B2.postRun = [B2.postRun]); B2.postRun.length; ) A6 = B2.postRun.shift(), _2.unshift(A6);
                    var A6;
                    b2(_2);
                  })()));
                }
                p2 > 0 || ((function() {
                  if (B2.preRun) for ("function" == typeof B2.preRun && (B2.preRun = [B2.preRun]); B2.preRun.length; ) A6 = B2.preRun.shift(), N2.unshift(A6);
                  var A6;
                  b2(N2);
                })(), p2 > 0 || (B2.setStatus ? (B2.setStatus("Running..."), setTimeout((function() {
                  setTimeout((function() {
                    B2.setStatus("");
                  }), 1), A5();
                }), 1)) : A5()));
              }
              if (B2._crypto_aead_aegis128l_keybytes = () => (B2._crypto_aead_aegis128l_keybytes = m2.g)(), B2._crypto_aead_aegis128l_nsecbytes = () => (B2._crypto_aead_aegis128l_nsecbytes = m2.h)(), B2._crypto_aead_aegis128l_npubbytes = () => (B2._crypto_aead_aegis128l_npubbytes = m2.i)(), B2._crypto_aead_aegis128l_abytes = () => (B2._crypto_aead_aegis128l_abytes = m2.j)(), B2._crypto_aead_aegis128l_messagebytes_max = () => (B2._crypto_aead_aegis128l_messagebytes_max = m2.k)(), B2._crypto_aead_aegis128l_keygen = (A5) => (B2._crypto_aead_aegis128l_keygen = m2.l)(A5), B2._crypto_aead_aegis128l_encrypt = (A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3) => (B2._crypto_aead_aegis128l_encrypt = m2.m)(A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3), B2._crypto_aead_aegis128l_encrypt_detached = (A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3, y3) => (B2._crypto_aead_aegis128l_encrypt_detached = m2.n)(A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3, y3), B2._crypto_aead_aegis128l_decrypt = (A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3) => (B2._crypto_aead_aegis128l_decrypt = m2.o)(A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3), B2._crypto_aead_aegis128l_decrypt_detached = (A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3) => (B2._crypto_aead_aegis128l_decrypt_detached = m2.p)(A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3), B2._crypto_aead_aegis256_keybytes = () => (B2._crypto_aead_aegis256_keybytes = m2.q)(), B2._crypto_aead_aegis256_nsecbytes = () => (B2._crypto_aead_aegis256_nsecbytes = m2.r)(), B2._crypto_aead_aegis256_npubbytes = () => (B2._crypto_aead_aegis256_npubbytes = m2.s)(), B2._crypto_aead_aegis256_abytes = () => (B2._crypto_aead_aegis256_abytes = m2.t)(), B2._crypto_aead_aegis256_messagebytes_max = () => (B2._crypto_aead_aegis256_messagebytes_max = m2.u)(), B2._crypto_aead_aegis256_keygen = (A5) => (B2._crypto_aead_aegis256_keygen = m2.v)(A5), B2._crypto_aead_aegis256_encrypt = (A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3) => (B2._crypto_aead_aegis256_encrypt = m2.w)(A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3), B2._crypto_aead_aegis256_encrypt_detached = (A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3, y3) => (B2._crypto_aead_aegis256_encrypt_detached = m2.x)(A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3, y3), B2._crypto_aead_aegis256_decrypt = (A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3) => (B2._crypto_aead_aegis256_decrypt = m2.y)(A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3), B2._crypto_aead_aegis256_decrypt_detached = (A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3) => (B2._crypto_aead_aegis256_decrypt_detached = m2.z)(A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3), B2._crypto_aead_aes256gcm_is_available = () => (B2._crypto_aead_aes256gcm_is_available = m2.A)(), B2._crypto_aead_chacha20poly1305_encrypt_detached = (A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3, y3) => (B2._crypto_aead_chacha20poly1305_encrypt_detached = m2.B)(A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3, y3), B2._crypto_aead_chacha20poly1305_encrypt = (A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3) => (B2._crypto_aead_chacha20poly1305_encrypt = m2.C)(A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3), B2._crypto_aead_chacha20poly1305_ietf_encrypt_detached = (A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3, y3) => (B2._crypto_aead_chacha20poly1305_ietf_encrypt_detached = m2.D)(A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3, y3), B2._crypto_aead_chacha20poly1305_ietf_encrypt = (A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3) => (B2._crypto_aead_chacha20poly1305_ietf_encrypt = m2.E)(A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3), B2._crypto_aead_chacha20poly1305_decrypt_detached = (A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3) => (B2._crypto_aead_chacha20poly1305_decrypt_detached = m2.F)(A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3), B2._crypto_aead_chacha20poly1305_decrypt = (A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3) => (B2._crypto_aead_chacha20poly1305_decrypt = m2.G)(A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3), B2._crypto_aead_chacha20poly1305_ietf_decrypt_detached = (A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3) => (B2._crypto_aead_chacha20poly1305_ietf_decrypt_detached = m2.H)(A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3), B2._crypto_aead_chacha20poly1305_ietf_decrypt = (A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3) => (B2._crypto_aead_chacha20poly1305_ietf_decrypt = m2.I)(A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3), B2._crypto_aead_chacha20poly1305_ietf_keybytes = () => (B2._crypto_aead_chacha20poly1305_ietf_keybytes = m2.J)(), B2._crypto_aead_chacha20poly1305_ietf_npubbytes = () => (B2._crypto_aead_chacha20poly1305_ietf_npubbytes = m2.K)(), B2._crypto_aead_chacha20poly1305_ietf_nsecbytes = () => (B2._crypto_aead_chacha20poly1305_ietf_nsecbytes = m2.L)(), B2._crypto_aead_chacha20poly1305_ietf_abytes = () => (B2._crypto_aead_chacha20poly1305_ietf_abytes = m2.M)(), B2._crypto_aead_chacha20poly1305_ietf_messagebytes_max = () => (B2._crypto_aead_chacha20poly1305_ietf_messagebytes_max = m2.N)(), B2._crypto_aead_chacha20poly1305_ietf_keygen = (A5) => (B2._crypto_aead_chacha20poly1305_ietf_keygen = m2.O)(A5), B2._crypto_aead_chacha20poly1305_keybytes = () => (B2._crypto_aead_chacha20poly1305_keybytes = m2.P)(), B2._crypto_aead_chacha20poly1305_npubbytes = () => (B2._crypto_aead_chacha20poly1305_npubbytes = m2.Q)(), B2._crypto_aead_chacha20poly1305_nsecbytes = () => (B2._crypto_aead_chacha20poly1305_nsecbytes = m2.R)(), B2._crypto_aead_chacha20poly1305_abytes = () => (B2._crypto_aead_chacha20poly1305_abytes = m2.S)(), B2._crypto_aead_chacha20poly1305_messagebytes_max = () => (B2._crypto_aead_chacha20poly1305_messagebytes_max = m2.T)(), B2._crypto_aead_chacha20poly1305_keygen = (A5) => (B2._crypto_aead_chacha20poly1305_keygen = m2.U)(A5), B2._crypto_aead_xchacha20poly1305_ietf_encrypt_detached = (A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3, y3) => (B2._crypto_aead_xchacha20poly1305_ietf_encrypt_detached = m2.V)(A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3, y3), B2._crypto_aead_xchacha20poly1305_ietf_encrypt = (A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3) => (B2._crypto_aead_xchacha20poly1305_ietf_encrypt = m2.W)(A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3), B2._crypto_aead_xchacha20poly1305_ietf_decrypt_detached = (A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3) => (B2._crypto_aead_xchacha20poly1305_ietf_decrypt_detached = m2.X)(A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3), B2._crypto_aead_xchacha20poly1305_ietf_decrypt = (A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3) => (B2._crypto_aead_xchacha20poly1305_ietf_decrypt = m2.Y)(A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3, a3), B2._crypto_aead_xchacha20poly1305_ietf_keybytes = () => (B2._crypto_aead_xchacha20poly1305_ietf_keybytes = m2.Z)(), B2._crypto_aead_xchacha20poly1305_ietf_npubbytes = () => (B2._crypto_aead_xchacha20poly1305_ietf_npubbytes = m2._)(), B2._crypto_aead_xchacha20poly1305_ietf_nsecbytes = () => (B2._crypto_aead_xchacha20poly1305_ietf_nsecbytes = m2.$)(), B2._crypto_aead_xchacha20poly1305_ietf_abytes = () => (B2._crypto_aead_xchacha20poly1305_ietf_abytes = m2.aa)(), B2._crypto_aead_xchacha20poly1305_ietf_messagebytes_max = () => (B2._crypto_aead_xchacha20poly1305_ietf_messagebytes_max = m2.ba)(), B2._crypto_aead_xchacha20poly1305_ietf_keygen = (A5) => (B2._crypto_aead_xchacha20poly1305_ietf_keygen = m2.ca)(A5), B2._crypto_auth_bytes = () => (B2._crypto_auth_bytes = m2.da)(), B2._crypto_auth_keybytes = () => (B2._crypto_auth_keybytes = m2.ea)(), B2._crypto_auth = (A5, I5, g4, C2, Q3) => (B2._crypto_auth = m2.fa)(A5, I5, g4, C2, Q3), B2._crypto_auth_verify = (A5, I5, g4, C2, Q3) => (B2._crypto_auth_verify = m2.ga)(A5, I5, g4, C2, Q3), B2._crypto_auth_keygen = (A5) => (B2._crypto_auth_keygen = m2.ha)(A5), B2._crypto_box_seedbytes = () => (B2._crypto_box_seedbytes = m2.ia)(), B2._crypto_box_publickeybytes = () => (B2._crypto_box_publickeybytes = m2.ja)(), B2._crypto_box_secretkeybytes = () => (B2._crypto_box_secretkeybytes = m2.ka)(), B2._crypto_box_beforenmbytes = () => (B2._crypto_box_beforenmbytes = m2.la)(), B2._crypto_box_noncebytes = () => (B2._crypto_box_noncebytes = m2.ma)(), B2._crypto_box_macbytes = () => (B2._crypto_box_macbytes = m2.na)(), B2._crypto_box_messagebytes_max = () => (B2._crypto_box_messagebytes_max = m2.oa)(), B2._crypto_box_seed_keypair = (A5, I5, g4) => (B2._crypto_box_seed_keypair = m2.pa)(A5, I5, g4), B2._crypto_box_keypair = (A5, I5) => (B2._crypto_box_keypair = m2.qa)(A5, I5), B2._crypto_box_beforenm = (A5, I5, g4) => (B2._crypto_box_beforenm = m2.ra)(A5, I5, g4), B2._crypto_box_detached_afternm = (A5, I5, g4, C2, Q3, E3, i3) => (B2._crypto_box_detached_afternm = m2.sa)(A5, I5, g4, C2, Q3, E3, i3), B2._crypto_box_detached = (A5, I5, g4, C2, Q3, E3, i3, o3) => (B2._crypto_box_detached = m2.ta)(A5, I5, g4, C2, Q3, E3, i3, o3), B2._crypto_box_easy_afternm = (A5, I5, g4, C2, Q3, E3) => (B2._crypto_box_easy_afternm = m2.ua)(A5, I5, g4, C2, Q3, E3), B2._crypto_box_easy = (A5, I5, g4, C2, Q3, E3, i3) => (B2._crypto_box_easy = m2.va)(A5, I5, g4, C2, Q3, E3, i3), B2._crypto_box_open_detached_afternm = (A5, I5, g4, C2, Q3, E3, i3) => (B2._crypto_box_open_detached_afternm = m2.wa)(A5, I5, g4, C2, Q3, E3, i3), B2._crypto_box_open_detached = (A5, I5, g4, C2, Q3, E3, i3, o3) => (B2._crypto_box_open_detached = m2.xa)(A5, I5, g4, C2, Q3, E3, i3, o3), B2._crypto_box_open_easy_afternm = (A5, I5, g4, C2, Q3, E3) => (B2._crypto_box_open_easy_afternm = m2.ya)(A5, I5, g4, C2, Q3, E3), B2._crypto_box_open_easy = (A5, I5, g4, C2, Q3, E3, i3) => (B2._crypto_box_open_easy = m2.za)(A5, I5, g4, C2, Q3, E3, i3), B2._crypto_box_seal = (A5, I5, g4, C2, Q3) => (B2._crypto_box_seal = m2.Aa)(A5, I5, g4, C2, Q3), B2._crypto_box_seal_open = (A5, I5, g4, C2, Q3, E3) => (B2._crypto_box_seal_open = m2.Ba)(A5, I5, g4, C2, Q3, E3), B2._crypto_box_sealbytes = () => (B2._crypto_box_sealbytes = m2.Ca)(), B2._crypto_generichash_bytes_min = () => (B2._crypto_generichash_bytes_min = m2.Da)(), B2._crypto_generichash_bytes_max = () => (B2._crypto_generichash_bytes_max = m2.Ea)(), B2._crypto_generichash_bytes = () => (B2._crypto_generichash_bytes = m2.Fa)(), B2._crypto_generichash_keybytes_min = () => (B2._crypto_generichash_keybytes_min = m2.Ga)(), B2._crypto_generichash_keybytes_max = () => (B2._crypto_generichash_keybytes_max = m2.Ha)(), B2._crypto_generichash_keybytes = () => (B2._crypto_generichash_keybytes = m2.Ia)(), B2._crypto_generichash_statebytes = () => (B2._crypto_generichash_statebytes = m2.Ja)(), B2._crypto_generichash = (A5, I5, g4, C2, Q3, E3, i3) => (B2._crypto_generichash = m2.Ka)(A5, I5, g4, C2, Q3, E3, i3), B2._crypto_generichash_init = (A5, I5, g4, C2) => (B2._crypto_generichash_init = m2.La)(A5, I5, g4, C2), B2._crypto_generichash_update = (A5, I5, g4, C2) => (B2._crypto_generichash_update = m2.Ma)(A5, I5, g4, C2), B2._crypto_generichash_final = (A5, I5, g4) => (B2._crypto_generichash_final = m2.Na)(A5, I5, g4), B2._crypto_generichash_keygen = (A5) => (B2._crypto_generichash_keygen = m2.Oa)(A5), B2._crypto_hash_bytes = () => (B2._crypto_hash_bytes = m2.Pa)(), B2._crypto_hash = (A5, I5, g4, C2) => (B2._crypto_hash = m2.Qa)(A5, I5, g4, C2), B2._crypto_kdf_bytes_min = () => (B2._crypto_kdf_bytes_min = m2.Ra)(), B2._crypto_kdf_bytes_max = () => (B2._crypto_kdf_bytes_max = m2.Sa)(), B2._crypto_kdf_contextbytes = () => (B2._crypto_kdf_contextbytes = m2.Ta)(), B2._crypto_kdf_keybytes = () => (B2._crypto_kdf_keybytes = m2.Ua)(), B2._crypto_kdf_derive_from_key = (A5, I5, g4, C2, Q3, E3) => (B2._crypto_kdf_derive_from_key = m2.Va)(A5, I5, g4, C2, Q3, E3), B2._crypto_kdf_keygen = (A5) => (B2._crypto_kdf_keygen = m2.Wa)(A5), B2._crypto_kdf_hkdf_sha256_extract_init = (A5, I5, g4) => (B2._crypto_kdf_hkdf_sha256_extract_init = m2.Xa)(A5, I5, g4), B2._crypto_kdf_hkdf_sha256_extract_update = (A5, I5, g4) => (B2._crypto_kdf_hkdf_sha256_extract_update = m2.Ya)(A5, I5, g4), B2._crypto_kdf_hkdf_sha256_extract_final = (A5, I5) => (B2._crypto_kdf_hkdf_sha256_extract_final = m2.Za)(A5, I5), B2._crypto_kdf_hkdf_sha256_extract = (A5, I5, g4, C2, Q3) => (B2._crypto_kdf_hkdf_sha256_extract = m2._a)(A5, I5, g4, C2, Q3), B2._crypto_kdf_hkdf_sha256_keygen = (A5) => (B2._crypto_kdf_hkdf_sha256_keygen = m2.$a)(A5), B2._crypto_kdf_hkdf_sha256_expand = (A5, I5, g4, C2, Q3) => (B2._crypto_kdf_hkdf_sha256_expand = m2.ab)(A5, I5, g4, C2, Q3), B2._crypto_kdf_hkdf_sha256_keybytes = () => (B2._crypto_kdf_hkdf_sha256_keybytes = m2.bb)(), B2._crypto_kdf_hkdf_sha256_bytes_min = () => (B2._crypto_kdf_hkdf_sha256_bytes_min = m2.cb)(), B2._crypto_kdf_hkdf_sha256_bytes_max = () => (B2._crypto_kdf_hkdf_sha256_bytes_max = m2.db)(), B2._crypto_kdf_hkdf_sha256_statebytes = () => (B2._crypto_kdf_hkdf_sha256_statebytes = m2.eb)(), B2._crypto_kdf_hkdf_sha512_extract_init = (A5, I5, g4) => (B2._crypto_kdf_hkdf_sha512_extract_init = m2.fb)(A5, I5, g4), B2._crypto_kdf_hkdf_sha512_extract_update = (A5, I5, g4) => (B2._crypto_kdf_hkdf_sha512_extract_update = m2.gb)(A5, I5, g4), B2._crypto_kdf_hkdf_sha512_extract_final = (A5, I5) => (B2._crypto_kdf_hkdf_sha512_extract_final = m2.hb)(A5, I5), B2._crypto_kdf_hkdf_sha512_extract = (A5, I5, g4, C2, Q3) => (B2._crypto_kdf_hkdf_sha512_extract = m2.ib)(A5, I5, g4, C2, Q3), B2._crypto_kdf_hkdf_sha512_keygen = (A5) => (B2._crypto_kdf_hkdf_sha512_keygen = m2.jb)(A5), B2._crypto_kdf_hkdf_sha512_expand = (A5, I5, g4, C2, Q3) => (B2._crypto_kdf_hkdf_sha512_expand = m2.kb)(A5, I5, g4, C2, Q3), B2._crypto_kdf_hkdf_sha512_keybytes = () => (B2._crypto_kdf_hkdf_sha512_keybytes = m2.lb)(), B2._crypto_kdf_hkdf_sha512_bytes_min = () => (B2._crypto_kdf_hkdf_sha512_bytes_min = m2.mb)(), B2._crypto_kdf_hkdf_sha512_bytes_max = () => (B2._crypto_kdf_hkdf_sha512_bytes_max = m2.nb)(), B2._crypto_kdf_hkdf_sha512_statebytes = () => (B2._crypto_kdf_hkdf_sha512_statebytes = m2.ob)(), B2._crypto_kx_seed_keypair = (A5, I5, g4) => (B2._crypto_kx_seed_keypair = m2.pb)(A5, I5, g4), B2._crypto_kx_keypair = (A5, I5) => (B2._crypto_kx_keypair = m2.qb)(A5, I5), B2._crypto_kx_client_session_keys = (A5, I5, g4, C2, Q3) => (B2._crypto_kx_client_session_keys = m2.rb)(A5, I5, g4, C2, Q3), B2._crypto_kx_server_session_keys = (A5, I5, g4, C2, Q3) => (B2._crypto_kx_server_session_keys = m2.sb)(A5, I5, g4, C2, Q3), B2._crypto_kx_publickeybytes = () => (B2._crypto_kx_publickeybytes = m2.tb)(), B2._crypto_kx_secretkeybytes = () => (B2._crypto_kx_secretkeybytes = m2.ub)(), B2._crypto_kx_seedbytes = () => (B2._crypto_kx_seedbytes = m2.vb)(), B2._crypto_kx_sessionkeybytes = () => (B2._crypto_kx_sessionkeybytes = m2.wb)(), B2._crypto_scalarmult_base = (A5, I5) => (B2._crypto_scalarmult_base = m2.xb)(A5, I5), B2._crypto_scalarmult = (A5, I5, g4) => (B2._crypto_scalarmult = m2.yb)(A5, I5, g4), B2._crypto_scalarmult_bytes = () => (B2._crypto_scalarmult_bytes = m2.zb)(), B2._crypto_scalarmult_scalarbytes = () => (B2._crypto_scalarmult_scalarbytes = m2.Ab)(), B2._crypto_secretbox_keybytes = () => (B2._crypto_secretbox_keybytes = m2.Bb)(), B2._crypto_secretbox_noncebytes = () => (B2._crypto_secretbox_noncebytes = m2.Cb)(), B2._crypto_secretbox_macbytes = () => (B2._crypto_secretbox_macbytes = m2.Db)(), B2._crypto_secretbox_messagebytes_max = () => (B2._crypto_secretbox_messagebytes_max = m2.Eb)(), B2._crypto_secretbox_keygen = (A5) => (B2._crypto_secretbox_keygen = m2.Fb)(A5), B2._crypto_secretbox_detached = (A5, I5, g4, C2, Q3, E3, i3) => (B2._crypto_secretbox_detached = m2.Gb)(A5, I5, g4, C2, Q3, E3, i3), B2._crypto_secretbox_easy = (A5, I5, g4, C2, Q3, E3) => (B2._crypto_secretbox_easy = m2.Hb)(A5, I5, g4, C2, Q3, E3), B2._crypto_secretbox_open_detached = (A5, I5, g4, C2, Q3, E3, i3) => (B2._crypto_secretbox_open_detached = m2.Ib)(A5, I5, g4, C2, Q3, E3, i3), B2._crypto_secretbox_open_easy = (A5, I5, g4, C2, Q3, E3) => (B2._crypto_secretbox_open_easy = m2.Jb)(A5, I5, g4, C2, Q3, E3), B2._crypto_secretstream_xchacha20poly1305_keygen = (A5) => (B2._crypto_secretstream_xchacha20poly1305_keygen = m2.Kb)(A5), B2._crypto_secretstream_xchacha20poly1305_init_push = (A5, I5, g4) => (B2._crypto_secretstream_xchacha20poly1305_init_push = m2.Lb)(A5, I5, g4), B2._crypto_secretstream_xchacha20poly1305_init_pull = (A5, I5, g4) => (B2._crypto_secretstream_xchacha20poly1305_init_pull = m2.Mb)(A5, I5, g4), B2._crypto_secretstream_xchacha20poly1305_rekey = (A5) => (B2._crypto_secretstream_xchacha20poly1305_rekey = m2.Nb)(A5), B2._crypto_secretstream_xchacha20poly1305_push = (A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3) => (B2._crypto_secretstream_xchacha20poly1305_push = m2.Ob)(A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3), B2._crypto_secretstream_xchacha20poly1305_pull = (A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3) => (B2._crypto_secretstream_xchacha20poly1305_pull = m2.Pb)(A5, I5, g4, C2, Q3, E3, i3, o3, c3, D3), B2._crypto_secretstream_xchacha20poly1305_statebytes = () => (B2._crypto_secretstream_xchacha20poly1305_statebytes = m2.Qb)(), B2._crypto_secretstream_xchacha20poly1305_abytes = () => (B2._crypto_secretstream_xchacha20poly1305_abytes = m2.Rb)(), B2._crypto_secretstream_xchacha20poly1305_headerbytes = () => (B2._crypto_secretstream_xchacha20poly1305_headerbytes = m2.Sb)(), B2._crypto_secretstream_xchacha20poly1305_keybytes = () => (B2._crypto_secretstream_xchacha20poly1305_keybytes = m2.Tb)(), B2._crypto_secretstream_xchacha20poly1305_messagebytes_max = () => (B2._crypto_secretstream_xchacha20poly1305_messagebytes_max = m2.Ub)(), B2._crypto_secretstream_xchacha20poly1305_tag_message = () => (B2._crypto_secretstream_xchacha20poly1305_tag_message = m2.Vb)(), B2._crypto_secretstream_xchacha20poly1305_tag_push = () => (B2._crypto_secretstream_xchacha20poly1305_tag_push = m2.Wb)(), B2._crypto_secretstream_xchacha20poly1305_tag_rekey = () => (B2._crypto_secretstream_xchacha20poly1305_tag_rekey = m2.Xb)(), B2._crypto_secretstream_xchacha20poly1305_tag_final = () => (B2._crypto_secretstream_xchacha20poly1305_tag_final = m2.Yb)(), B2._crypto_shorthash_bytes = () => (B2._crypto_shorthash_bytes = m2.Zb)(), B2._crypto_shorthash_keybytes = () => (B2._crypto_shorthash_keybytes = m2._b)(), B2._crypto_shorthash = (A5, I5, g4, C2, Q3) => (B2._crypto_shorthash = m2.$b)(A5, I5, g4, C2, Q3), B2._crypto_shorthash_keygen = (A5) => (B2._crypto_shorthash_keygen = m2.ac)(A5), B2._crypto_sign_statebytes = () => (B2._crypto_sign_statebytes = m2.bc)(), B2._crypto_sign_bytes = () => (B2._crypto_sign_bytes = m2.cc)(), B2._crypto_sign_seedbytes = () => (B2._crypto_sign_seedbytes = m2.dc)(), B2._crypto_sign_publickeybytes = () => (B2._crypto_sign_publickeybytes = m2.ec)(), B2._crypto_sign_secretkeybytes = () => (B2._crypto_sign_secretkeybytes = m2.fc)(), B2._crypto_sign_messagebytes_max = () => (B2._crypto_sign_messagebytes_max = m2.gc)(), B2._crypto_sign_seed_keypair = (A5, I5, g4) => (B2._crypto_sign_seed_keypair = m2.hc)(A5, I5, g4), B2._crypto_sign_keypair = (A5, I5) => (B2._crypto_sign_keypair = m2.ic)(A5, I5), B2._crypto_sign = (A5, I5, g4, C2, Q3, E3) => (B2._crypto_sign = m2.jc)(A5, I5, g4, C2, Q3, E3), B2._crypto_sign_open = (A5, I5, g4, C2, Q3, E3) => (B2._crypto_sign_open = m2.kc)(A5, I5, g4, C2, Q3, E3), B2._crypto_sign_detached = (A5, I5, g4, C2, Q3, E3) => (B2._crypto_sign_detached = m2.lc)(A5, I5, g4, C2, Q3, E3), B2._crypto_sign_verify_detached = (A5, I5, g4, C2, Q3) => (B2._crypto_sign_verify_detached = m2.mc)(A5, I5, g4, C2, Q3), B2._crypto_sign_init = (A5) => (B2._crypto_sign_init = m2.nc)(A5), B2._crypto_sign_update = (A5, I5, g4, C2) => (B2._crypto_sign_update = m2.oc)(A5, I5, g4, C2), B2._crypto_sign_final_create = (A5, I5, g4, C2) => (B2._crypto_sign_final_create = m2.pc)(A5, I5, g4, C2), B2._crypto_sign_final_verify = (A5, I5, g4) => (B2._crypto_sign_final_verify = m2.qc)(A5, I5, g4), B2._crypto_sign_ed25519_pk_to_curve25519 = (A5, I5) => (B2._crypto_sign_ed25519_pk_to_curve25519 = m2.rc)(A5, I5), B2._crypto_sign_ed25519_sk_to_curve25519 = (A5, I5) => (B2._crypto_sign_ed25519_sk_to_curve25519 = m2.sc)(A5, I5), B2._randombytes_random = () => (B2._randombytes_random = m2.tc)(), B2._randombytes_stir = () => (B2._randombytes_stir = m2.uc)(), B2._randombytes_uniform = (A5) => (B2._randombytes_uniform = m2.vc)(A5), B2._randombytes_buf = (A5, I5) => (B2._randombytes_buf = m2.wc)(A5, I5), B2._randombytes_buf_deterministic = (A5, I5, g4) => (B2._randombytes_buf_deterministic = m2.xc)(A5, I5, g4), B2._randombytes_seedbytes = () => (B2._randombytes_seedbytes = m2.yc)(), B2._randombytes_close = () => (B2._randombytes_close = m2.zc)(), B2._randombytes = (A5, I5, g4) => (B2._randombytes = m2.Ac)(A5, I5, g4), B2._sodium_bin2hex = (A5, I5, g4, C2) => (B2._sodium_bin2hex = m2.Bc)(A5, I5, g4, C2), B2._sodium_hex2bin = (A5, I5, g4, C2, Q3, E3, i3) => (B2._sodium_hex2bin = m2.Cc)(A5, I5, g4, C2, Q3, E3, i3), B2._sodium_base64_encoded_len = (A5, I5) => (B2._sodium_base64_encoded_len = m2.Dc)(A5, I5), B2._sodium_bin2base64 = (A5, I5, g4, C2, Q3) => (B2._sodium_bin2base64 = m2.Ec)(A5, I5, g4, C2, Q3), B2._sodium_base642bin = (A5, I5, g4, C2, Q3, E3, i3, o3) => (B2._sodium_base642bin = m2.Fc)(A5, I5, g4, C2, Q3, E3, i3, o3), B2._sodium_init = () => (B2._sodium_init = m2.Gc)(), B2._sodium_pad = (A5, I5, g4, C2, Q3) => (B2._sodium_pad = m2.Hc)(A5, I5, g4, C2, Q3), B2._sodium_unpad = (A5, I5, g4, C2) => (B2._sodium_unpad = m2.Ic)(A5, I5, g4, C2), B2._sodium_version_string = () => (B2._sodium_version_string = m2.Jc)(), B2._sodium_library_version_major = () => (B2._sodium_library_version_major = m2.Kc)(), B2._sodium_library_version_minor = () => (B2._sodium_library_version_minor = m2.Lc)(), B2._sodium_library_minimal = () => (B2._sodium_library_minimal = m2.Mc)(), B2._malloc = (A5) => (B2._malloc = m2.Nc)(A5), B2._free = (A5) => (B2._free = m2.Oc)(A5), B2.setValue = function(A5, I5, g4 = "i8") {
                switch (g4.endsWith("*") && (g4 = "*"), g4) {
                  case "i1":
                  case "i8":
                    r2[A5] = I5;
                    break;
                  case "i16":
                    h2[A5 >> 1] = I5;
                    break;
                  case "i32":
                    k2[A5 >> 2] = I5;
                    break;
                  case "i64":
                    J2("to do setValue(i64) use WASM_BIGINT");
                  case "float":
                    s2[A5 >> 2] = I5;
                    break;
                  case "double":
                    F2[A5 >> 3] = I5;
                    break;
                  case "*":
                    n2[A5 >> 2] = I5;
                    break;
                  default:
                    J2(`invalid type for setValue: ${g4}`);
                }
              }, B2.getValue = function(A5, I5 = "i8") {
                switch (I5.endsWith("*") && (I5 = "*"), I5) {
                  case "i1":
                  case "i8":
                    return r2[A5];
                  case "i16":
                    return h2[A5 >> 1];
                  case "i32":
                    return k2[A5 >> 2];
                  case "i64":
                    J2("to do getValue(i64) use WASM_BIGINT");
                  case "float":
                    return s2[A5 >> 2];
                  case "double":
                    return F2[A5 >> 3];
                  case "*":
                    return n2[A5 >> 2];
                  default:
                    J2(`invalid type for getValue: ${I5}`);
                }
              }, B2.UTF8ToString = R2, G2 = function A5() {
                P2 || q2(), P2 || (G2 = A5);
              }, B2.preInit) for ("function" == typeof B2.preInit && (B2.preInit = [B2.preInit]); B2.preInit.length > 0; ) B2.preInit.pop()();
              q2();
            }));
          };
          var g2, B = void 0 !== B ? B : {}, Q = "object" == typeof window, E = "function" == typeof importScripts, i = "object" == typeof process && "object" == typeof process.versions && "string" == typeof process.versions.node, o = Object.assign({}, B), c = "";
          if (i) {
            var D = require("fs"), a = require("path");
            c = __dirname + "/", g2 = (A4) => (A4 = U(A4) ? new URL(A4) : a.normalize(A4), D.readFileSync(A4)), !B.thisProgram && process.argv.length > 1 && process.argv[1].replace(/\\/g, "/"), process.argv.slice(2), "undefined" != typeof module2 && (module2.exports = B);
          } else (Q || E) && (E ? c = self.location.href : "undefined" != typeof document && document.currentScript && (c = document.currentScript.src), c = c.startsWith("blob:") ? "" : c.substr(0, c.replace(/[?#].*/, "").lastIndexOf("/") + 1), E && (g2 = (A4) => {
            var I4 = new XMLHttpRequest();
            return I4.open("GET", A4, false), I4.responseType = "arraybuffer", I4.send(null), new Uint8Array(I4.response);
          }));
          B.print;
          var y, f, e = B.printErr || void 0;
          Object.assign(B, o), o = null, B.arguments && B.arguments, B.thisProgram && B.thisProgram, B.quit && B.quit, B.wasmBinary && (y = B.wasmBinary);
          var w, r, t, h, k, n, s, F = false;
          function S() {
            var A4 = f.buffer;
            B.HEAP8 = w = new Int8Array(A4), B.HEAP16 = t = new Int16Array(A4), B.HEAPU8 = r = new Uint8Array(A4), B.HEAPU16 = new Uint16Array(A4), B.HEAP32 = h = new Int32Array(A4), B.HEAPU32 = k = new Uint32Array(A4), B.HEAPF32 = n = new Float32Array(A4), B.HEAPF64 = s = new Float64Array(A4);
          }
          var M = [], N = [], K = [], _ = 0, p = null, H = null;
          function G(A4) {
            throw B.onAbort?.(A4), e(A4 = "Aborted(" + A4 + ")"), F = true, A4 += ". Build with -sASSERTIONS for more info.", new WebAssembly.RuntimeError(A4);
          }
          var J, Y = "data:application/octet-stream;base64,", U = (A4) => A4.startsWith("file://");
          function d(A4) {
            return Promise.resolve().then((() => (function(A5) {
              if (A5 == J && y) return new Uint8Array(y);
              var I4 = (function(A6) {
                if (((A7) => A7.startsWith(Y))(A6)) return (function(A7) {
                  if (void 0 !== i && i) {
                    var I5 = Buffer.from(A7, "base64");
                    return new Uint8Array(I5.buffer, I5.byteOffset, I5.length);
                  }
                  for (var g3 = atob(A7), C2 = new Uint8Array(g3.length), B2 = 0; B2 < g3.length; ++B2) C2[B2] = g3.charCodeAt(B2);
                  return C2;
                })(A6.slice(37));
              })(A5);
              if (I4) return I4;
              if (g2) return g2(A5);
              throw "both async and sync fetching of the wasm failed";
            })(A4)));
          }
          var b = { 36304: () => B.getRandomValue(), 36340: () => {
            if (void 0 === B.getRandomValue) try {
              var A4 = "object" == typeof window ? window : self, I4 = void 0 !== A4.crypto ? A4.crypto : A4.msCrypto;
              I4 = void 0 === I4 ? C2 : I4;
              var g3 = function() {
                var A5 = new Uint32Array(1);
                return I4.getRandomValues(A5), A5[0] >>> 0;
              };
              g3(), B.getRandomValue = g3;
            } catch (A5) {
              try {
                var C2 = require("crypto"), Q2 = function() {
                  var A6 = C2.randomBytes(4);
                  return (A6[0] << 24 | A6[1] << 16 | A6[2] << 8 | A6[3]) >>> 0;
                };
                Q2(), B.getRandomValue = Q2;
              } catch (A6) {
                throw "No secure random number generator found";
              }
            }
          } }, P = (A4) => {
            for (; A4.length > 0; ) A4.shift()(B);
          };
          B.noExitRuntime;
          var v, R = "undefined" != typeof TextDecoder ? new TextDecoder() : void 0, L = (A4, I4) => A4 ? ((A5, I5, g3) => {
            for (var C2 = I5 + g3, B2 = I5; A5[B2] && !(B2 >= C2); ) ++B2;
            if (B2 - I5 > 16 && A5.buffer && R) return R.decode(A5.subarray(I5, B2));
            for (var Q2 = ""; I5 < B2; ) {
              var E2 = A5[I5++];
              if (128 & E2) {
                var i2 = 63 & A5[I5++];
                if (192 != (224 & E2)) {
                  var o2 = 63 & A5[I5++];
                  if ((E2 = 224 == (240 & E2) ? (15 & E2) << 12 | i2 << 6 | o2 : (7 & E2) << 18 | i2 << 12 | o2 << 6 | 63 & A5[I5++]) < 65536) Q2 += String.fromCharCode(E2);
                  else {
                    var c2 = E2 - 65536;
                    Q2 += String.fromCharCode(55296 | c2 >> 10, 56320 | 1023 & c2);
                  }
                } else Q2 += String.fromCharCode((31 & E2) << 6 | i2);
              } else Q2 += String.fromCharCode(E2);
            }
            return Q2;
          })(r, A4, I4) : "", x = [], u = (A4) => {
            var I4 = (A4 - f.buffer.byteLength + 65535) / 65536;
            try {
              return f.grow(I4), S(), 1;
            } catch (A5) {
            }
          }, m = { b: (A4, I4, g3, C2) => {
            G(`Assertion failed: ${L(A4)}, at: ` + [I4 ? L(I4) : "unknown filename", g3, C2 ? L(C2) : "unknown function"]);
          }, c: () => {
            G("");
          }, d: (A4, I4, g3) => r.copyWithin(A4, I4, I4 + g3), a: (A4, I4, g3) => ((A5, I5, g4) => {
            var C2 = ((A6, I6) => {
              var g5;
              for (x.length = 0; g5 = r[A6++]; ) {
                var C3 = 105 != g5;
                I6 += (C3 &= 112 != g5) && I6 % 8 ? 4 : 0, x.push(112 == g5 ? k[I6 >> 2] : 105 == g5 ? h[I6 >> 2] : s[I6 >> 3]), I6 += C3 ? 8 : 4;
              }
              return x;
            })(I5, g4);
            return b[A5](...C2);
          })(A4, I4, g3), e: (A4) => {
            var I4 = r.length, g3 = 2147483648;
            if ((A4 >>>= 0) > g3) return false;
            for (var C2, B2 = 1; B2 <= 4; B2 *= 2) {
              var Q2 = I4 * (1 + 0.2 / B2);
              Q2 = Math.min(Q2, A4 + 100663296);
              var E2 = Math.min(g3, (C2 = Math.max(A4, Q2)) + (65536 - C2 % 65536) % 65536);
              if (u(E2)) return true;
            }
            return false;
          } }, q = (function() {
            var A4, I4 = { a: m };
            function g3(A5, I5) {
              return q = A5.exports, f = q.f, S(), (function(A6) {
                if (_--, B.monitorRunDependencies?.(_), 0 == _ && (null !== p && (clearInterval(p), p = null), H)) {
                  var I6 = H;
                  H = null, I6();
                }
              })(), q;
            }
            if (_++, B.monitorRunDependencies?.(_), B.instantiateWasm) try {
              return B.instantiateWasm(I4, g3);
            } catch (A5) {
              return e(`Module.instantiateWasm callback failed with error: ${A5}`), false;
            }
            return J || (J = "data:application/octet-stream;base64,"), A4 = I4, d(J).then(((I5) => WebAssembly.instantiate(I5, A4))).then((function(A5) {
              g3(A5.instance);
            }), ((A5) => {
              e(`failed to asynchronously prepare wasm: ${A5}`), G(A5);
            })), {};
          })();
          function l() {
            function A4() {
              v || (v = true, B.calledRun = true, F || (P(N), B.onRuntimeInitialized?.(), (function() {
                if (B.postRun) for ("function" == typeof B.postRun && (B.postRun = [B.postRun]); B.postRun.length; ) A5 = B.postRun.shift(), K.unshift(A5);
                var A5;
                P(K);
              })()));
            }
            _ > 0 || ((function() {
              if (B.preRun) for ("function" == typeof B.preRun && (B.preRun = [B.preRun]); B.preRun.length; ) A5 = B.preRun.shift(), M.unshift(A5);
              var A5;
              P(M);
            })(), _ > 0 || (B.setStatus ? (B.setStatus("Running..."), setTimeout((function() {
              setTimeout((function() {
                B.setStatus("");
              }), 1), A4();
            }), 1)) : A4()));
          }
          if (B._crypto_aead_aegis128l_keybytes = () => (B._crypto_aead_aegis128l_keybytes = q.g)(), B._crypto_aead_aegis128l_nsecbytes = () => (B._crypto_aead_aegis128l_nsecbytes = q.h)(), B._crypto_aead_aegis128l_npubbytes = () => (B._crypto_aead_aegis128l_npubbytes = q.i)(), B._crypto_aead_aegis128l_abytes = () => (B._crypto_aead_aegis128l_abytes = q.j)(), B._crypto_aead_aegis128l_messagebytes_max = () => (B._crypto_aead_aegis128l_messagebytes_max = q.k)(), B._crypto_aead_aegis128l_keygen = (A4) => (B._crypto_aead_aegis128l_keygen = q.l)(A4), B._crypto_aead_aegis128l_encrypt = (A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2) => (B._crypto_aead_aegis128l_encrypt = q.m)(A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2), B._crypto_aead_aegis128l_encrypt_detached = (A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2, y2) => (B._crypto_aead_aegis128l_encrypt_detached = q.n)(A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2, y2), B._crypto_aead_aegis128l_decrypt = (A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2) => (B._crypto_aead_aegis128l_decrypt = q.o)(A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2), B._crypto_aead_aegis128l_decrypt_detached = (A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2) => (B._crypto_aead_aegis128l_decrypt_detached = q.p)(A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2), B._crypto_aead_aegis256_keybytes = () => (B._crypto_aead_aegis256_keybytes = q.q)(), B._crypto_aead_aegis256_nsecbytes = () => (B._crypto_aead_aegis256_nsecbytes = q.r)(), B._crypto_aead_aegis256_npubbytes = () => (B._crypto_aead_aegis256_npubbytes = q.s)(), B._crypto_aead_aegis256_abytes = () => (B._crypto_aead_aegis256_abytes = q.t)(), B._crypto_aead_aegis256_messagebytes_max = () => (B._crypto_aead_aegis256_messagebytes_max = q.u)(), B._crypto_aead_aegis256_keygen = (A4) => (B._crypto_aead_aegis256_keygen = q.v)(A4), B._crypto_aead_aegis256_encrypt = (A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2) => (B._crypto_aead_aegis256_encrypt = q.w)(A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2), B._crypto_aead_aegis256_encrypt_detached = (A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2, y2) => (B._crypto_aead_aegis256_encrypt_detached = q.x)(A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2, y2), B._crypto_aead_aegis256_decrypt = (A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2) => (B._crypto_aead_aegis256_decrypt = q.y)(A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2), B._crypto_aead_aegis256_decrypt_detached = (A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2) => (B._crypto_aead_aegis256_decrypt_detached = q.z)(A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2), B._crypto_aead_aes256gcm_is_available = () => (B._crypto_aead_aes256gcm_is_available = q.A)(), B._crypto_aead_chacha20poly1305_encrypt_detached = (A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2, y2) => (B._crypto_aead_chacha20poly1305_encrypt_detached = q.B)(A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2, y2), B._crypto_aead_chacha20poly1305_encrypt = (A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2) => (B._crypto_aead_chacha20poly1305_encrypt = q.C)(A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2), B._crypto_aead_chacha20poly1305_ietf_encrypt_detached = (A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2, y2) => (B._crypto_aead_chacha20poly1305_ietf_encrypt_detached = q.D)(A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2, y2), B._crypto_aead_chacha20poly1305_ietf_encrypt = (A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2) => (B._crypto_aead_chacha20poly1305_ietf_encrypt = q.E)(A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2), B._crypto_aead_chacha20poly1305_decrypt_detached = (A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2) => (B._crypto_aead_chacha20poly1305_decrypt_detached = q.F)(A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2), B._crypto_aead_chacha20poly1305_decrypt = (A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2) => (B._crypto_aead_chacha20poly1305_decrypt = q.G)(A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2), B._crypto_aead_chacha20poly1305_ietf_decrypt_detached = (A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2) => (B._crypto_aead_chacha20poly1305_ietf_decrypt_detached = q.H)(A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2), B._crypto_aead_chacha20poly1305_ietf_decrypt = (A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2) => (B._crypto_aead_chacha20poly1305_ietf_decrypt = q.I)(A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2), B._crypto_aead_chacha20poly1305_ietf_keybytes = () => (B._crypto_aead_chacha20poly1305_ietf_keybytes = q.J)(), B._crypto_aead_chacha20poly1305_ietf_npubbytes = () => (B._crypto_aead_chacha20poly1305_ietf_npubbytes = q.K)(), B._crypto_aead_chacha20poly1305_ietf_nsecbytes = () => (B._crypto_aead_chacha20poly1305_ietf_nsecbytes = q.L)(), B._crypto_aead_chacha20poly1305_ietf_abytes = () => (B._crypto_aead_chacha20poly1305_ietf_abytes = q.M)(), B._crypto_aead_chacha20poly1305_ietf_messagebytes_max = () => (B._crypto_aead_chacha20poly1305_ietf_messagebytes_max = q.N)(), B._crypto_aead_chacha20poly1305_ietf_keygen = (A4) => (B._crypto_aead_chacha20poly1305_ietf_keygen = q.O)(A4), B._crypto_aead_chacha20poly1305_keybytes = () => (B._crypto_aead_chacha20poly1305_keybytes = q.P)(), B._crypto_aead_chacha20poly1305_npubbytes = () => (B._crypto_aead_chacha20poly1305_npubbytes = q.Q)(), B._crypto_aead_chacha20poly1305_nsecbytes = () => (B._crypto_aead_chacha20poly1305_nsecbytes = q.R)(), B._crypto_aead_chacha20poly1305_abytes = () => (B._crypto_aead_chacha20poly1305_abytes = q.S)(), B._crypto_aead_chacha20poly1305_messagebytes_max = () => (B._crypto_aead_chacha20poly1305_messagebytes_max = q.T)(), B._crypto_aead_chacha20poly1305_keygen = (A4) => (B._crypto_aead_chacha20poly1305_keygen = q.U)(A4), B._crypto_aead_xchacha20poly1305_ietf_encrypt_detached = (A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2, y2) => (B._crypto_aead_xchacha20poly1305_ietf_encrypt_detached = q.V)(A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2, y2), B._crypto_aead_xchacha20poly1305_ietf_encrypt = (A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2) => (B._crypto_aead_xchacha20poly1305_ietf_encrypt = q.W)(A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2), B._crypto_aead_xchacha20poly1305_ietf_decrypt_detached = (A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2) => (B._crypto_aead_xchacha20poly1305_ietf_decrypt_detached = q.X)(A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2), B._crypto_aead_xchacha20poly1305_ietf_decrypt = (A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2) => (B._crypto_aead_xchacha20poly1305_ietf_decrypt = q.Y)(A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2, a2), B._crypto_aead_xchacha20poly1305_ietf_keybytes = () => (B._crypto_aead_xchacha20poly1305_ietf_keybytes = q.Z)(), B._crypto_aead_xchacha20poly1305_ietf_npubbytes = () => (B._crypto_aead_xchacha20poly1305_ietf_npubbytes = q._)(), B._crypto_aead_xchacha20poly1305_ietf_nsecbytes = () => (B._crypto_aead_xchacha20poly1305_ietf_nsecbytes = q.$)(), B._crypto_aead_xchacha20poly1305_ietf_abytes = () => (B._crypto_aead_xchacha20poly1305_ietf_abytes = q.aa)(), B._crypto_aead_xchacha20poly1305_ietf_messagebytes_max = () => (B._crypto_aead_xchacha20poly1305_ietf_messagebytes_max = q.ba)(), B._crypto_aead_xchacha20poly1305_ietf_keygen = (A4) => (B._crypto_aead_xchacha20poly1305_ietf_keygen = q.ca)(A4), B._crypto_auth_bytes = () => (B._crypto_auth_bytes = q.da)(), B._crypto_auth_keybytes = () => (B._crypto_auth_keybytes = q.ea)(), B._crypto_auth = (A4, I4, g3, C2, Q2) => (B._crypto_auth = q.fa)(A4, I4, g3, C2, Q2), B._crypto_auth_verify = (A4, I4, g3, C2, Q2) => (B._crypto_auth_verify = q.ga)(A4, I4, g3, C2, Q2), B._crypto_auth_keygen = (A4) => (B._crypto_auth_keygen = q.ha)(A4), B._crypto_box_seedbytes = () => (B._crypto_box_seedbytes = q.ia)(), B._crypto_box_publickeybytes = () => (B._crypto_box_publickeybytes = q.ja)(), B._crypto_box_secretkeybytes = () => (B._crypto_box_secretkeybytes = q.ka)(), B._crypto_box_beforenmbytes = () => (B._crypto_box_beforenmbytes = q.la)(), B._crypto_box_noncebytes = () => (B._crypto_box_noncebytes = q.ma)(), B._crypto_box_macbytes = () => (B._crypto_box_macbytes = q.na)(), B._crypto_box_messagebytes_max = () => (B._crypto_box_messagebytes_max = q.oa)(), B._crypto_box_seed_keypair = (A4, I4, g3) => (B._crypto_box_seed_keypair = q.pa)(A4, I4, g3), B._crypto_box_keypair = (A4, I4) => (B._crypto_box_keypair = q.qa)(A4, I4), B._crypto_box_beforenm = (A4, I4, g3) => (B._crypto_box_beforenm = q.ra)(A4, I4, g3), B._crypto_box_detached_afternm = (A4, I4, g3, C2, Q2, E2, i2) => (B._crypto_box_detached_afternm = q.sa)(A4, I4, g3, C2, Q2, E2, i2), B._crypto_box_detached = (A4, I4, g3, C2, Q2, E2, i2, o2) => (B._crypto_box_detached = q.ta)(A4, I4, g3, C2, Q2, E2, i2, o2), B._crypto_box_easy_afternm = (A4, I4, g3, C2, Q2, E2) => (B._crypto_box_easy_afternm = q.ua)(A4, I4, g3, C2, Q2, E2), B._crypto_box_easy = (A4, I4, g3, C2, Q2, E2, i2) => (B._crypto_box_easy = q.va)(A4, I4, g3, C2, Q2, E2, i2), B._crypto_box_open_detached_afternm = (A4, I4, g3, C2, Q2, E2, i2) => (B._crypto_box_open_detached_afternm = q.wa)(A4, I4, g3, C2, Q2, E2, i2), B._crypto_box_open_detached = (A4, I4, g3, C2, Q2, E2, i2, o2) => (B._crypto_box_open_detached = q.xa)(A4, I4, g3, C2, Q2, E2, i2, o2), B._crypto_box_open_easy_afternm = (A4, I4, g3, C2, Q2, E2) => (B._crypto_box_open_easy_afternm = q.ya)(A4, I4, g3, C2, Q2, E2), B._crypto_box_open_easy = (A4, I4, g3, C2, Q2, E2, i2) => (B._crypto_box_open_easy = q.za)(A4, I4, g3, C2, Q2, E2, i2), B._crypto_box_seal = (A4, I4, g3, C2, Q2) => (B._crypto_box_seal = q.Aa)(A4, I4, g3, C2, Q2), B._crypto_box_seal_open = (A4, I4, g3, C2, Q2, E2) => (B._crypto_box_seal_open = q.Ba)(A4, I4, g3, C2, Q2, E2), B._crypto_box_sealbytes = () => (B._crypto_box_sealbytes = q.Ca)(), B._crypto_generichash_bytes_min = () => (B._crypto_generichash_bytes_min = q.Da)(), B._crypto_generichash_bytes_max = () => (B._crypto_generichash_bytes_max = q.Ea)(), B._crypto_generichash_bytes = () => (B._crypto_generichash_bytes = q.Fa)(), B._crypto_generichash_keybytes_min = () => (B._crypto_generichash_keybytes_min = q.Ga)(), B._crypto_generichash_keybytes_max = () => (B._crypto_generichash_keybytes_max = q.Ha)(), B._crypto_generichash_keybytes = () => (B._crypto_generichash_keybytes = q.Ia)(), B._crypto_generichash_statebytes = () => (B._crypto_generichash_statebytes = q.Ja)(), B._crypto_generichash = (A4, I4, g3, C2, Q2, E2, i2) => (B._crypto_generichash = q.Ka)(A4, I4, g3, C2, Q2, E2, i2), B._crypto_generichash_init = (A4, I4, g3, C2) => (B._crypto_generichash_init = q.La)(A4, I4, g3, C2), B._crypto_generichash_update = (A4, I4, g3, C2) => (B._crypto_generichash_update = q.Ma)(A4, I4, g3, C2), B._crypto_generichash_final = (A4, I4, g3) => (B._crypto_generichash_final = q.Na)(A4, I4, g3), B._crypto_generichash_keygen = (A4) => (B._crypto_generichash_keygen = q.Oa)(A4), B._crypto_hash_bytes = () => (B._crypto_hash_bytes = q.Pa)(), B._crypto_hash = (A4, I4, g3, C2) => (B._crypto_hash = q.Qa)(A4, I4, g3, C2), B._crypto_kdf_bytes_min = () => (B._crypto_kdf_bytes_min = q.Ra)(), B._crypto_kdf_bytes_max = () => (B._crypto_kdf_bytes_max = q.Sa)(), B._crypto_kdf_contextbytes = () => (B._crypto_kdf_contextbytes = q.Ta)(), B._crypto_kdf_keybytes = () => (B._crypto_kdf_keybytes = q.Ua)(), B._crypto_kdf_derive_from_key = (A4, I4, g3, C2, Q2, E2) => (B._crypto_kdf_derive_from_key = q.Va)(A4, I4, g3, C2, Q2, E2), B._crypto_kdf_keygen = (A4) => (B._crypto_kdf_keygen = q.Wa)(A4), B._crypto_kdf_hkdf_sha256_extract_init = (A4, I4, g3) => (B._crypto_kdf_hkdf_sha256_extract_init = q.Xa)(A4, I4, g3), B._crypto_kdf_hkdf_sha256_extract_update = (A4, I4, g3) => (B._crypto_kdf_hkdf_sha256_extract_update = q.Ya)(A4, I4, g3), B._crypto_kdf_hkdf_sha256_extract_final = (A4, I4) => (B._crypto_kdf_hkdf_sha256_extract_final = q.Za)(A4, I4), B._crypto_kdf_hkdf_sha256_extract = (A4, I4, g3, C2, Q2) => (B._crypto_kdf_hkdf_sha256_extract = q._a)(A4, I4, g3, C2, Q2), B._crypto_kdf_hkdf_sha256_keygen = (A4) => (B._crypto_kdf_hkdf_sha256_keygen = q.$a)(A4), B._crypto_kdf_hkdf_sha256_expand = (A4, I4, g3, C2, Q2) => (B._crypto_kdf_hkdf_sha256_expand = q.ab)(A4, I4, g3, C2, Q2), B._crypto_kdf_hkdf_sha256_keybytes = () => (B._crypto_kdf_hkdf_sha256_keybytes = q.bb)(), B._crypto_kdf_hkdf_sha256_bytes_min = () => (B._crypto_kdf_hkdf_sha256_bytes_min = q.cb)(), B._crypto_kdf_hkdf_sha256_bytes_max = () => (B._crypto_kdf_hkdf_sha256_bytes_max = q.db)(), B._crypto_kdf_hkdf_sha256_statebytes = () => (B._crypto_kdf_hkdf_sha256_statebytes = q.eb)(), B._crypto_kdf_hkdf_sha512_extract_init = (A4, I4, g3) => (B._crypto_kdf_hkdf_sha512_extract_init = q.fb)(A4, I4, g3), B._crypto_kdf_hkdf_sha512_extract_update = (A4, I4, g3) => (B._crypto_kdf_hkdf_sha512_extract_update = q.gb)(A4, I4, g3), B._crypto_kdf_hkdf_sha512_extract_final = (A4, I4) => (B._crypto_kdf_hkdf_sha512_extract_final = q.hb)(A4, I4), B._crypto_kdf_hkdf_sha512_extract = (A4, I4, g3, C2, Q2) => (B._crypto_kdf_hkdf_sha512_extract = q.ib)(A4, I4, g3, C2, Q2), B._crypto_kdf_hkdf_sha512_keygen = (A4) => (B._crypto_kdf_hkdf_sha512_keygen = q.jb)(A4), B._crypto_kdf_hkdf_sha512_expand = (A4, I4, g3, C2, Q2) => (B._crypto_kdf_hkdf_sha512_expand = q.kb)(A4, I4, g3, C2, Q2), B._crypto_kdf_hkdf_sha512_keybytes = () => (B._crypto_kdf_hkdf_sha512_keybytes = q.lb)(), B._crypto_kdf_hkdf_sha512_bytes_min = () => (B._crypto_kdf_hkdf_sha512_bytes_min = q.mb)(), B._crypto_kdf_hkdf_sha512_bytes_max = () => (B._crypto_kdf_hkdf_sha512_bytes_max = q.nb)(), B._crypto_kdf_hkdf_sha512_statebytes = () => (B._crypto_kdf_hkdf_sha512_statebytes = q.ob)(), B._crypto_kx_seed_keypair = (A4, I4, g3) => (B._crypto_kx_seed_keypair = q.pb)(A4, I4, g3), B._crypto_kx_keypair = (A4, I4) => (B._crypto_kx_keypair = q.qb)(A4, I4), B._crypto_kx_client_session_keys = (A4, I4, g3, C2, Q2) => (B._crypto_kx_client_session_keys = q.rb)(A4, I4, g3, C2, Q2), B._crypto_kx_server_session_keys = (A4, I4, g3, C2, Q2) => (B._crypto_kx_server_session_keys = q.sb)(A4, I4, g3, C2, Q2), B._crypto_kx_publickeybytes = () => (B._crypto_kx_publickeybytes = q.tb)(), B._crypto_kx_secretkeybytes = () => (B._crypto_kx_secretkeybytes = q.ub)(), B._crypto_kx_seedbytes = () => (B._crypto_kx_seedbytes = q.vb)(), B._crypto_kx_sessionkeybytes = () => (B._crypto_kx_sessionkeybytes = q.wb)(), B._crypto_scalarmult_base = (A4, I4) => (B._crypto_scalarmult_base = q.xb)(A4, I4), B._crypto_scalarmult = (A4, I4, g3) => (B._crypto_scalarmult = q.yb)(A4, I4, g3), B._crypto_scalarmult_bytes = () => (B._crypto_scalarmult_bytes = q.zb)(), B._crypto_scalarmult_scalarbytes = () => (B._crypto_scalarmult_scalarbytes = q.Ab)(), B._crypto_secretbox_keybytes = () => (B._crypto_secretbox_keybytes = q.Bb)(), B._crypto_secretbox_noncebytes = () => (B._crypto_secretbox_noncebytes = q.Cb)(), B._crypto_secretbox_macbytes = () => (B._crypto_secretbox_macbytes = q.Db)(), B._crypto_secretbox_messagebytes_max = () => (B._crypto_secretbox_messagebytes_max = q.Eb)(), B._crypto_secretbox_keygen = (A4) => (B._crypto_secretbox_keygen = q.Fb)(A4), B._crypto_secretbox_detached = (A4, I4, g3, C2, Q2, E2, i2) => (B._crypto_secretbox_detached = q.Gb)(A4, I4, g3, C2, Q2, E2, i2), B._crypto_secretbox_easy = (A4, I4, g3, C2, Q2, E2) => (B._crypto_secretbox_easy = q.Hb)(A4, I4, g3, C2, Q2, E2), B._crypto_secretbox_open_detached = (A4, I4, g3, C2, Q2, E2, i2) => (B._crypto_secretbox_open_detached = q.Ib)(A4, I4, g3, C2, Q2, E2, i2), B._crypto_secretbox_open_easy = (A4, I4, g3, C2, Q2, E2) => (B._crypto_secretbox_open_easy = q.Jb)(A4, I4, g3, C2, Q2, E2), B._crypto_secretstream_xchacha20poly1305_keygen = (A4) => (B._crypto_secretstream_xchacha20poly1305_keygen = q.Kb)(A4), B._crypto_secretstream_xchacha20poly1305_init_push = (A4, I4, g3) => (B._crypto_secretstream_xchacha20poly1305_init_push = q.Lb)(A4, I4, g3), B._crypto_secretstream_xchacha20poly1305_init_pull = (A4, I4, g3) => (B._crypto_secretstream_xchacha20poly1305_init_pull = q.Mb)(A4, I4, g3), B._crypto_secretstream_xchacha20poly1305_rekey = (A4) => (B._crypto_secretstream_xchacha20poly1305_rekey = q.Nb)(A4), B._crypto_secretstream_xchacha20poly1305_push = (A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2) => (B._crypto_secretstream_xchacha20poly1305_push = q.Ob)(A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2), B._crypto_secretstream_xchacha20poly1305_pull = (A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2) => (B._crypto_secretstream_xchacha20poly1305_pull = q.Pb)(A4, I4, g3, C2, Q2, E2, i2, o2, c2, D2), B._crypto_secretstream_xchacha20poly1305_statebytes = () => (B._crypto_secretstream_xchacha20poly1305_statebytes = q.Qb)(), B._crypto_secretstream_xchacha20poly1305_abytes = () => (B._crypto_secretstream_xchacha20poly1305_abytes = q.Rb)(), B._crypto_secretstream_xchacha20poly1305_headerbytes = () => (B._crypto_secretstream_xchacha20poly1305_headerbytes = q.Sb)(), B._crypto_secretstream_xchacha20poly1305_keybytes = () => (B._crypto_secretstream_xchacha20poly1305_keybytes = q.Tb)(), B._crypto_secretstream_xchacha20poly1305_messagebytes_max = () => (B._crypto_secretstream_xchacha20poly1305_messagebytes_max = q.Ub)(), B._crypto_secretstream_xchacha20poly1305_tag_message = () => (B._crypto_secretstream_xchacha20poly1305_tag_message = q.Vb)(), B._crypto_secretstream_xchacha20poly1305_tag_push = () => (B._crypto_secretstream_xchacha20poly1305_tag_push = q.Wb)(), B._crypto_secretstream_xchacha20poly1305_tag_rekey = () => (B._crypto_secretstream_xchacha20poly1305_tag_rekey = q.Xb)(), B._crypto_secretstream_xchacha20poly1305_tag_final = () => (B._crypto_secretstream_xchacha20poly1305_tag_final = q.Yb)(), B._crypto_shorthash_bytes = () => (B._crypto_shorthash_bytes = q.Zb)(), B._crypto_shorthash_keybytes = () => (B._crypto_shorthash_keybytes = q._b)(), B._crypto_shorthash = (A4, I4, g3, C2, Q2) => (B._crypto_shorthash = q.$b)(A4, I4, g3, C2, Q2), B._crypto_shorthash_keygen = (A4) => (B._crypto_shorthash_keygen = q.ac)(A4), B._crypto_sign_statebytes = () => (B._crypto_sign_statebytes = q.bc)(), B._crypto_sign_bytes = () => (B._crypto_sign_bytes = q.cc)(), B._crypto_sign_seedbytes = () => (B._crypto_sign_seedbytes = q.dc)(), B._crypto_sign_publickeybytes = () => (B._crypto_sign_publickeybytes = q.ec)(), B._crypto_sign_secretkeybytes = () => (B._crypto_sign_secretkeybytes = q.fc)(), B._crypto_sign_messagebytes_max = () => (B._crypto_sign_messagebytes_max = q.gc)(), B._crypto_sign_seed_keypair = (A4, I4, g3) => (B._crypto_sign_seed_keypair = q.hc)(A4, I4, g3), B._crypto_sign_keypair = (A4, I4) => (B._crypto_sign_keypair = q.ic)(A4, I4), B._crypto_sign = (A4, I4, g3, C2, Q2, E2) => (B._crypto_sign = q.jc)(A4, I4, g3, C2, Q2, E2), B._crypto_sign_open = (A4, I4, g3, C2, Q2, E2) => (B._crypto_sign_open = q.kc)(A4, I4, g3, C2, Q2, E2), B._crypto_sign_detached = (A4, I4, g3, C2, Q2, E2) => (B._crypto_sign_detached = q.lc)(A4, I4, g3, C2, Q2, E2), B._crypto_sign_verify_detached = (A4, I4, g3, C2, Q2) => (B._crypto_sign_verify_detached = q.mc)(A4, I4, g3, C2, Q2), B._crypto_sign_init = (A4) => (B._crypto_sign_init = q.nc)(A4), B._crypto_sign_update = (A4, I4, g3, C2) => (B._crypto_sign_update = q.oc)(A4, I4, g3, C2), B._crypto_sign_final_create = (A4, I4, g3, C2) => (B._crypto_sign_final_create = q.pc)(A4, I4, g3, C2), B._crypto_sign_final_verify = (A4, I4, g3) => (B._crypto_sign_final_verify = q.qc)(A4, I4, g3), B._crypto_sign_ed25519_pk_to_curve25519 = (A4, I4) => (B._crypto_sign_ed25519_pk_to_curve25519 = q.rc)(A4, I4), B._crypto_sign_ed25519_sk_to_curve25519 = (A4, I4) => (B._crypto_sign_ed25519_sk_to_curve25519 = q.sc)(A4, I4), B._randombytes_random = () => (B._randombytes_random = q.tc)(), B._randombytes_stir = () => (B._randombytes_stir = q.uc)(), B._randombytes_uniform = (A4) => (B._randombytes_uniform = q.vc)(A4), B._randombytes_buf = (A4, I4) => (B._randombytes_buf = q.wc)(A4, I4), B._randombytes_buf_deterministic = (A4, I4, g3) => (B._randombytes_buf_deterministic = q.xc)(A4, I4, g3), B._randombytes_seedbytes = () => (B._randombytes_seedbytes = q.yc)(), B._randombytes_close = () => (B._randombytes_close = q.zc)(), B._randombytes = (A4, I4, g3) => (B._randombytes = q.Ac)(A4, I4, g3), B._sodium_bin2hex = (A4, I4, g3, C2) => (B._sodium_bin2hex = q.Bc)(A4, I4, g3, C2), B._sodium_hex2bin = (A4, I4, g3, C2, Q2, E2, i2) => (B._sodium_hex2bin = q.Cc)(A4, I4, g3, C2, Q2, E2, i2), B._sodium_base64_encoded_len = (A4, I4) => (B._sodium_base64_encoded_len = q.Dc)(A4, I4), B._sodium_bin2base64 = (A4, I4, g3, C2, Q2) => (B._sodium_bin2base64 = q.Ec)(A4, I4, g3, C2, Q2), B._sodium_base642bin = (A4, I4, g3, C2, Q2, E2, i2, o2) => (B._sodium_base642bin = q.Fc)(A4, I4, g3, C2, Q2, E2, i2, o2), B._sodium_init = () => (B._sodium_init = q.Gc)(), B._sodium_pad = (A4, I4, g3, C2, Q2) => (B._sodium_pad = q.Hc)(A4, I4, g3, C2, Q2), B._sodium_unpad = (A4, I4, g3, C2) => (B._sodium_unpad = q.Ic)(A4, I4, g3, C2), B._sodium_version_string = () => (B._sodium_version_string = q.Jc)(), B._sodium_library_version_major = () => (B._sodium_library_version_major = q.Kc)(), B._sodium_library_version_minor = () => (B._sodium_library_version_minor = q.Lc)(), B._sodium_library_minimal = () => (B._sodium_library_minimal = q.Mc)(), B._malloc = (A4) => (B._malloc = q.Nc)(A4), B._free = (A4) => (B._free = q.Oc)(A4), B.setValue = function(A4, I4, g3 = "i8") {
            switch (g3.endsWith("*") && (g3 = "*"), g3) {
              case "i1":
              case "i8":
                w[A4] = I4;
                break;
              case "i16":
                t[A4 >> 1] = I4;
                break;
              case "i32":
                h[A4 >> 2] = I4;
                break;
              case "i64":
                G("to do setValue(i64) use WASM_BIGINT");
              case "float":
                n[A4 >> 2] = I4;
                break;
              case "double":
                s[A4 >> 3] = I4;
                break;
              case "*":
                k[A4 >> 2] = I4;
                break;
              default:
                G(`invalid type for setValue: ${g3}`);
            }
          }, B.getValue = function(A4, I4 = "i8") {
            switch (I4.endsWith("*") && (I4 = "*"), I4) {
              case "i1":
              case "i8":
                return w[A4];
              case "i16":
                return t[A4 >> 1];
              case "i32":
                return h[A4 >> 2];
              case "i64":
                G("to do getValue(i64) use WASM_BIGINT");
              case "float":
                return n[A4 >> 2];
              case "double":
                return s[A4 >> 3];
              case "*":
                return k[A4 >> 2];
              default:
                G(`invalid type for getValue: ${I4}`);
            }
          }, B.UTF8ToString = L, H = function A4() {
            v || l(), v || (H = A4);
          }, B.preInit) for ("function" == typeof B.preInit && (B.preInit = [B.preInit]); B.preInit.length > 0; ) B.preInit.pop()();
          l();
        })).catch((function() {
          return C.useBackupModule();
        })), I2;
      }
      "function" == typeof define && define.amd ? define(["exports"], I) : "object" == typeof exports2 && "string" != typeof exports2.nodeName ? I(exports2) : A.libsodium = I(A.libsodium_mod || (A.commonJsStrict = {}));
    })(exports2);
  }
});

// node_modules/libsodium-wrappers/dist/modules/libsodium-wrappers.js
var require_libsodium_wrappers = __commonJS({
  "node_modules/libsodium-wrappers/dist/modules/libsodium-wrappers.js"(exports2) {
    !(function(e) {
      function a(e2, a2) {
        "use strict";
        var r2, t = "uint8array", _ = a2.ready.then((function() {
          function t2() {
            if (0 !== r2._sodium_init()) throw new Error("libsodium was not correctly initialized.");
            for (var a3 = ["crypto_aead_aegis128l_decrypt", "crypto_aead_aegis128l_decrypt_detached", "crypto_aead_aegis128l_encrypt", "crypto_aead_aegis128l_encrypt_detached", "crypto_aead_aegis128l_keygen", "crypto_aead_aegis256_decrypt", "crypto_aead_aegis256_decrypt_detached", "crypto_aead_aegis256_encrypt", "crypto_aead_aegis256_encrypt_detached", "crypto_aead_aegis256_keygen", "crypto_aead_chacha20poly1305_decrypt", "crypto_aead_chacha20poly1305_decrypt_detached", "crypto_aead_chacha20poly1305_encrypt", "crypto_aead_chacha20poly1305_encrypt_detached", "crypto_aead_chacha20poly1305_ietf_decrypt", "crypto_aead_chacha20poly1305_ietf_decrypt_detached", "crypto_aead_chacha20poly1305_ietf_encrypt", "crypto_aead_chacha20poly1305_ietf_encrypt_detached", "crypto_aead_chacha20poly1305_ietf_keygen", "crypto_aead_chacha20poly1305_keygen", "crypto_aead_xchacha20poly1305_ietf_decrypt", "crypto_aead_xchacha20poly1305_ietf_decrypt_detached", "crypto_aead_xchacha20poly1305_ietf_encrypt", "crypto_aead_xchacha20poly1305_ietf_encrypt_detached", "crypto_aead_xchacha20poly1305_ietf_keygen", "crypto_auth", "crypto_auth_hmacsha256", "crypto_auth_hmacsha256_final", "crypto_auth_hmacsha256_init", "crypto_auth_hmacsha256_keygen", "crypto_auth_hmacsha256_update", "crypto_auth_hmacsha256_verify", "crypto_auth_hmacsha512", "crypto_auth_hmacsha512256", "crypto_auth_hmacsha512256_final", "crypto_auth_hmacsha512256_init", "crypto_auth_hmacsha512256_keygen", "crypto_auth_hmacsha512256_update", "crypto_auth_hmacsha512256_verify", "crypto_auth_hmacsha512_final", "crypto_auth_hmacsha512_init", "crypto_auth_hmacsha512_keygen", "crypto_auth_hmacsha512_update", "crypto_auth_hmacsha512_verify", "crypto_auth_keygen", "crypto_auth_verify", "crypto_box_beforenm", "crypto_box_curve25519xchacha20poly1305_beforenm", "crypto_box_curve25519xchacha20poly1305_detached", "crypto_box_curve25519xchacha20poly1305_detached_afternm", "crypto_box_curve25519xchacha20poly1305_easy", "crypto_box_curve25519xchacha20poly1305_easy_afternm", "crypto_box_curve25519xchacha20poly1305_keypair", "crypto_box_curve25519xchacha20poly1305_open_detached", "crypto_box_curve25519xchacha20poly1305_open_detached_afternm", "crypto_box_curve25519xchacha20poly1305_open_easy", "crypto_box_curve25519xchacha20poly1305_open_easy_afternm", "crypto_box_curve25519xchacha20poly1305_seal", "crypto_box_curve25519xchacha20poly1305_seal_open", "crypto_box_curve25519xchacha20poly1305_seed_keypair", "crypto_box_detached", "crypto_box_easy", "crypto_box_easy_afternm", "crypto_box_keypair", "crypto_box_open_detached", "crypto_box_open_easy", "crypto_box_open_easy_afternm", "crypto_box_seal", "crypto_box_seal_open", "crypto_box_seed_keypair", "crypto_core_ed25519_add", "crypto_core_ed25519_from_hash", "crypto_core_ed25519_from_uniform", "crypto_core_ed25519_is_valid_point", "crypto_core_ed25519_random", "crypto_core_ed25519_scalar_add", "crypto_core_ed25519_scalar_complement", "crypto_core_ed25519_scalar_invert", "crypto_core_ed25519_scalar_mul", "crypto_core_ed25519_scalar_negate", "crypto_core_ed25519_scalar_random", "crypto_core_ed25519_scalar_reduce", "crypto_core_ed25519_scalar_sub", "crypto_core_ed25519_sub", "crypto_core_hchacha20", "crypto_core_hsalsa20", "crypto_core_ristretto255_add", "crypto_core_ristretto255_from_hash", "crypto_core_ristretto255_is_valid_point", "crypto_core_ristretto255_random", "crypto_core_ristretto255_scalar_add", "crypto_core_ristretto255_scalar_complement", "crypto_core_ristretto255_scalar_invert", "crypto_core_ristretto255_scalar_mul", "crypto_core_ristretto255_scalar_negate", "crypto_core_ristretto255_scalar_random", "crypto_core_ristretto255_scalar_reduce", "crypto_core_ristretto255_scalar_sub", "crypto_core_ristretto255_sub", "crypto_generichash", "crypto_generichash_blake2b_salt_personal", "crypto_generichash_final", "crypto_generichash_init", "crypto_generichash_keygen", "crypto_generichash_update", "crypto_hash", "crypto_hash_sha256", "crypto_hash_sha256_final", "crypto_hash_sha256_init", "crypto_hash_sha256_update", "crypto_hash_sha512", "crypto_hash_sha512_final", "crypto_hash_sha512_init", "crypto_hash_sha512_update", "crypto_kdf_derive_from_key", "crypto_kdf_keygen", "crypto_kx_client_session_keys", "crypto_kx_keypair", "crypto_kx_seed_keypair", "crypto_kx_server_session_keys", "crypto_onetimeauth", "crypto_onetimeauth_final", "crypto_onetimeauth_init", "crypto_onetimeauth_keygen", "crypto_onetimeauth_update", "crypto_onetimeauth_verify", "crypto_pwhash", "crypto_pwhash_scryptsalsa208sha256", "crypto_pwhash_scryptsalsa208sha256_ll", "crypto_pwhash_scryptsalsa208sha256_str", "crypto_pwhash_scryptsalsa208sha256_str_verify", "crypto_pwhash_str", "crypto_pwhash_str_needs_rehash", "crypto_pwhash_str_verify", "crypto_scalarmult", "crypto_scalarmult_base", "crypto_scalarmult_ed25519", "crypto_scalarmult_ed25519_base", "crypto_scalarmult_ed25519_base_noclamp", "crypto_scalarmult_ed25519_noclamp", "crypto_scalarmult_ristretto255", "crypto_scalarmult_ristretto255_base", "crypto_secretbox_detached", "crypto_secretbox_easy", "crypto_secretbox_keygen", "crypto_secretbox_open_detached", "crypto_secretbox_open_easy", "crypto_secretstream_xchacha20poly1305_init_pull", "crypto_secretstream_xchacha20poly1305_init_push", "crypto_secretstream_xchacha20poly1305_keygen", "crypto_secretstream_xchacha20poly1305_pull", "crypto_secretstream_xchacha20poly1305_push", "crypto_secretstream_xchacha20poly1305_rekey", "crypto_shorthash", "crypto_shorthash_keygen", "crypto_shorthash_siphashx24", "crypto_sign", "crypto_sign_detached", "crypto_sign_ed25519_pk_to_curve25519", "crypto_sign_ed25519_sk_to_curve25519", "crypto_sign_ed25519_sk_to_pk", "crypto_sign_ed25519_sk_to_seed", "crypto_sign_final_create", "crypto_sign_final_verify", "crypto_sign_init", "crypto_sign_keypair", "crypto_sign_open", "crypto_sign_seed_keypair", "crypto_sign_update", "crypto_sign_verify_detached", "crypto_stream_chacha20", "crypto_stream_chacha20_ietf_xor", "crypto_stream_chacha20_ietf_xor_ic", "crypto_stream_chacha20_keygen", "crypto_stream_chacha20_xor", "crypto_stream_chacha20_xor_ic", "crypto_stream_keygen", "crypto_stream_xchacha20_keygen", "crypto_stream_xchacha20_xor", "crypto_stream_xchacha20_xor_ic", "randombytes_buf", "randombytes_buf_deterministic", "randombytes_close", "randombytes_random", "randombytes_set_implementation", "randombytes_stir", "randombytes_uniform", "sodium_version_string"], t3 = [x, k, S, T, w, Y, B, A, M, I, K, N, L, O, U, C, P, R, X, G, D, F, V, H, W, q, j, z, J, Q, Z, $, ee, ae, re, te, _e, ne, se, ce, he, oe, pe, ye, ie, le, ue, de, ve, ge, be, fe, me, Ee, xe, ke, Se, Te, we, Ye, Be, Ae, Me, Ie, Ke, Ne, Le, Oe, Ue, Ce, Pe, Re, Xe, Ge, De, Fe, Ve, He, We, qe, je, ze, Je, Qe, Ze, $e, ea, aa, ra, ta, _a, na, sa, ca, ha, oa, pa, ya, ia, la, ua, da, va, ga, ba, fa, ma, Ea, xa, ka, Sa, Ta, wa, Ya, Ba, Aa, Ma, Ia, Ka, Na, La, Oa, Ua, Ca, Pa, Ra, Xa, Ga, Da, Fa, Va, Ha, Wa, qa, ja, za, Ja, Qa, Za, $a, er, ar, rr, tr, _r, nr, sr, cr, hr, or, pr, yr, ir, lr, ur, dr, vr, gr, br, fr, mr, Er, xr, kr, Sr, Tr, wr, Yr, Br, Ar, Mr, Ir, Kr, Nr, Lr, Or, Ur, Cr, Pr, Rr, Xr, Gr, Dr, Fr, Vr, Hr, Wr, qr], _3 = 0; _3 < t3.length; _3++) "function" == typeof r2["_" + a3[_3]] && (e2[a3[_3]] = t3[_3]);
            var n3 = ["SODIUM_LIBRARY_VERSION_MAJOR", "SODIUM_LIBRARY_VERSION_MINOR", "crypto_aead_aegis128l_ABYTES", "crypto_aead_aegis128l_KEYBYTES", "crypto_aead_aegis128l_MESSAGEBYTES_MAX", "crypto_aead_aegis128l_NPUBBYTES", "crypto_aead_aegis128l_NSECBYTES", "crypto_aead_aegis256_ABYTES", "crypto_aead_aegis256_KEYBYTES", "crypto_aead_aegis256_MESSAGEBYTES_MAX", "crypto_aead_aegis256_NPUBBYTES", "crypto_aead_aegis256_NSECBYTES", "crypto_aead_aes256gcm_ABYTES", "crypto_aead_aes256gcm_KEYBYTES", "crypto_aead_aes256gcm_MESSAGEBYTES_MAX", "crypto_aead_aes256gcm_NPUBBYTES", "crypto_aead_aes256gcm_NSECBYTES", "crypto_aead_chacha20poly1305_ABYTES", "crypto_aead_chacha20poly1305_IETF_ABYTES", "crypto_aead_chacha20poly1305_IETF_KEYBYTES", "crypto_aead_chacha20poly1305_IETF_MESSAGEBYTES_MAX", "crypto_aead_chacha20poly1305_IETF_NPUBBYTES", "crypto_aead_chacha20poly1305_IETF_NSECBYTES", "crypto_aead_chacha20poly1305_KEYBYTES", "crypto_aead_chacha20poly1305_MESSAGEBYTES_MAX", "crypto_aead_chacha20poly1305_NPUBBYTES", "crypto_aead_chacha20poly1305_NSECBYTES", "crypto_aead_chacha20poly1305_ietf_ABYTES", "crypto_aead_chacha20poly1305_ietf_KEYBYTES", "crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX", "crypto_aead_chacha20poly1305_ietf_NPUBBYTES", "crypto_aead_chacha20poly1305_ietf_NSECBYTES", "crypto_aead_xchacha20poly1305_IETF_ABYTES", "crypto_aead_xchacha20poly1305_IETF_KEYBYTES", "crypto_aead_xchacha20poly1305_IETF_MESSAGEBYTES_MAX", "crypto_aead_xchacha20poly1305_IETF_NPUBBYTES", "crypto_aead_xchacha20poly1305_IETF_NSECBYTES", "crypto_aead_xchacha20poly1305_ietf_ABYTES", "crypto_aead_xchacha20poly1305_ietf_KEYBYTES", "crypto_aead_xchacha20poly1305_ietf_MESSAGEBYTES_MAX", "crypto_aead_xchacha20poly1305_ietf_NPUBBYTES", "crypto_aead_xchacha20poly1305_ietf_NSECBYTES", "crypto_auth_BYTES", "crypto_auth_KEYBYTES", "crypto_auth_hmacsha256_BYTES", "crypto_auth_hmacsha256_KEYBYTES", "crypto_auth_hmacsha512256_BYTES", "crypto_auth_hmacsha512256_KEYBYTES", "crypto_auth_hmacsha512_BYTES", "crypto_auth_hmacsha512_KEYBYTES", "crypto_box_BEFORENMBYTES", "crypto_box_MACBYTES", "crypto_box_MESSAGEBYTES_MAX", "crypto_box_NONCEBYTES", "crypto_box_PUBLICKEYBYTES", "crypto_box_SEALBYTES", "crypto_box_SECRETKEYBYTES", "crypto_box_SEEDBYTES", "crypto_box_curve25519xchacha20poly1305_BEFORENMBYTES", "crypto_box_curve25519xchacha20poly1305_MACBYTES", "crypto_box_curve25519xchacha20poly1305_MESSAGEBYTES_MAX", "crypto_box_curve25519xchacha20poly1305_NONCEBYTES", "crypto_box_curve25519xchacha20poly1305_PUBLICKEYBYTES", "crypto_box_curve25519xchacha20poly1305_SEALBYTES", "crypto_box_curve25519xchacha20poly1305_SECRETKEYBYTES", "crypto_box_curve25519xchacha20poly1305_SEEDBYTES", "crypto_box_curve25519xsalsa20poly1305_BEFORENMBYTES", "crypto_box_curve25519xsalsa20poly1305_MACBYTES", "crypto_box_curve25519xsalsa20poly1305_MESSAGEBYTES_MAX", "crypto_box_curve25519xsalsa20poly1305_NONCEBYTES", "crypto_box_curve25519xsalsa20poly1305_PUBLICKEYBYTES", "crypto_box_curve25519xsalsa20poly1305_SECRETKEYBYTES", "crypto_box_curve25519xsalsa20poly1305_SEEDBYTES", "crypto_core_ed25519_BYTES", "crypto_core_ed25519_HASHBYTES", "crypto_core_ed25519_NONREDUCEDSCALARBYTES", "crypto_core_ed25519_SCALARBYTES", "crypto_core_ed25519_UNIFORMBYTES", "crypto_core_hchacha20_CONSTBYTES", "crypto_core_hchacha20_INPUTBYTES", "crypto_core_hchacha20_KEYBYTES", "crypto_core_hchacha20_OUTPUTBYTES", "crypto_core_hsalsa20_CONSTBYTES", "crypto_core_hsalsa20_INPUTBYTES", "crypto_core_hsalsa20_KEYBYTES", "crypto_core_hsalsa20_OUTPUTBYTES", "crypto_core_ristretto255_BYTES", "crypto_core_ristretto255_HASHBYTES", "crypto_core_ristretto255_NONREDUCEDSCALARBYTES", "crypto_core_ristretto255_SCALARBYTES", "crypto_core_salsa2012_CONSTBYTES", "crypto_core_salsa2012_INPUTBYTES", "crypto_core_salsa2012_KEYBYTES", "crypto_core_salsa2012_OUTPUTBYTES", "crypto_core_salsa208_CONSTBYTES", "crypto_core_salsa208_INPUTBYTES", "crypto_core_salsa208_KEYBYTES", "crypto_core_salsa208_OUTPUTBYTES", "crypto_core_salsa20_CONSTBYTES", "crypto_core_salsa20_INPUTBYTES", "crypto_core_salsa20_KEYBYTES", "crypto_core_salsa20_OUTPUTBYTES", "crypto_generichash_BYTES", "crypto_generichash_BYTES_MAX", "crypto_generichash_BYTES_MIN", "crypto_generichash_KEYBYTES", "crypto_generichash_KEYBYTES_MAX", "crypto_generichash_KEYBYTES_MIN", "crypto_generichash_blake2b_BYTES", "crypto_generichash_blake2b_BYTES_MAX", "crypto_generichash_blake2b_BYTES_MIN", "crypto_generichash_blake2b_KEYBYTES", "crypto_generichash_blake2b_KEYBYTES_MAX", "crypto_generichash_blake2b_KEYBYTES_MIN", "crypto_generichash_blake2b_PERSONALBYTES", "crypto_generichash_blake2b_SALTBYTES", "crypto_hash_BYTES", "crypto_hash_sha256_BYTES", "crypto_hash_sha512_BYTES", "crypto_kdf_BYTES_MAX", "crypto_kdf_BYTES_MIN", "crypto_kdf_CONTEXTBYTES", "crypto_kdf_KEYBYTES", "crypto_kdf_blake2b_BYTES_MAX", "crypto_kdf_blake2b_BYTES_MIN", "crypto_kdf_blake2b_CONTEXTBYTES", "crypto_kdf_blake2b_KEYBYTES", "crypto_kdf_hkdf_sha256_BYTES_MAX", "crypto_kdf_hkdf_sha256_BYTES_MIN", "crypto_kdf_hkdf_sha256_KEYBYTES", "crypto_kdf_hkdf_sha512_BYTES_MAX", "crypto_kdf_hkdf_sha512_BYTES_MIN", "crypto_kdf_hkdf_sha512_KEYBYTES", "crypto_kx_PUBLICKEYBYTES", "crypto_kx_SECRETKEYBYTES", "crypto_kx_SEEDBYTES", "crypto_kx_SESSIONKEYBYTES", "crypto_onetimeauth_BYTES", "crypto_onetimeauth_KEYBYTES", "crypto_onetimeauth_poly1305_BYTES", "crypto_onetimeauth_poly1305_KEYBYTES", "crypto_pwhash_ALG_ARGON2I13", "crypto_pwhash_ALG_ARGON2ID13", "crypto_pwhash_ALG_DEFAULT", "crypto_pwhash_BYTES_MAX", "crypto_pwhash_BYTES_MIN", "crypto_pwhash_MEMLIMIT_INTERACTIVE", "crypto_pwhash_MEMLIMIT_MAX", "crypto_pwhash_MEMLIMIT_MIN", "crypto_pwhash_MEMLIMIT_MODERATE", "crypto_pwhash_MEMLIMIT_SENSITIVE", "crypto_pwhash_OPSLIMIT_INTERACTIVE", "crypto_pwhash_OPSLIMIT_MAX", "crypto_pwhash_OPSLIMIT_MIN", "crypto_pwhash_OPSLIMIT_MODERATE", "crypto_pwhash_OPSLIMIT_SENSITIVE", "crypto_pwhash_PASSWD_MAX", "crypto_pwhash_PASSWD_MIN", "crypto_pwhash_SALTBYTES", "crypto_pwhash_STRBYTES", "crypto_pwhash_argon2i_BYTES_MAX", "crypto_pwhash_argon2i_BYTES_MIN", "crypto_pwhash_argon2i_MEMLIMIT_INTERACTIVE", "crypto_pwhash_argon2i_MEMLIMIT_MAX", "crypto_pwhash_argon2i_MEMLIMIT_MIN", "crypto_pwhash_argon2i_MEMLIMIT_MODERATE", "crypto_pwhash_argon2i_MEMLIMIT_SENSITIVE", "crypto_pwhash_argon2i_OPSLIMIT_INTERACTIVE", "crypto_pwhash_argon2i_OPSLIMIT_MAX", "crypto_pwhash_argon2i_OPSLIMIT_MIN", "crypto_pwhash_argon2i_OPSLIMIT_MODERATE", "crypto_pwhash_argon2i_OPSLIMIT_SENSITIVE", "crypto_pwhash_argon2i_PASSWD_MAX", "crypto_pwhash_argon2i_PASSWD_MIN", "crypto_pwhash_argon2i_SALTBYTES", "crypto_pwhash_argon2i_STRBYTES", "crypto_pwhash_argon2id_BYTES_MAX", "crypto_pwhash_argon2id_BYTES_MIN", "crypto_pwhash_argon2id_MEMLIMIT_INTERACTIVE", "crypto_pwhash_argon2id_MEMLIMIT_MAX", "crypto_pwhash_argon2id_MEMLIMIT_MIN", "crypto_pwhash_argon2id_MEMLIMIT_MODERATE", "crypto_pwhash_argon2id_MEMLIMIT_SENSITIVE", "crypto_pwhash_argon2id_OPSLIMIT_INTERACTIVE", "crypto_pwhash_argon2id_OPSLIMIT_MAX", "crypto_pwhash_argon2id_OPSLIMIT_MIN", "crypto_pwhash_argon2id_OPSLIMIT_MODERATE", "crypto_pwhash_argon2id_OPSLIMIT_SENSITIVE", "crypto_pwhash_argon2id_PASSWD_MAX", "crypto_pwhash_argon2id_PASSWD_MIN", "crypto_pwhash_argon2id_SALTBYTES", "crypto_pwhash_argon2id_STRBYTES", "crypto_pwhash_scryptsalsa208sha256_BYTES_MAX", "crypto_pwhash_scryptsalsa208sha256_BYTES_MIN", "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_INTERACTIVE", "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MAX", "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MIN", "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_SENSITIVE", "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_INTERACTIVE", "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MAX", "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MIN", "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_SENSITIVE", "crypto_pwhash_scryptsalsa208sha256_PASSWD_MAX", "crypto_pwhash_scryptsalsa208sha256_PASSWD_MIN", "crypto_pwhash_scryptsalsa208sha256_SALTBYTES", "crypto_pwhash_scryptsalsa208sha256_STRBYTES", "crypto_scalarmult_BYTES", "crypto_scalarmult_SCALARBYTES", "crypto_scalarmult_curve25519_BYTES", "crypto_scalarmult_curve25519_SCALARBYTES", "crypto_scalarmult_ed25519_BYTES", "crypto_scalarmult_ed25519_SCALARBYTES", "crypto_scalarmult_ristretto255_BYTES", "crypto_scalarmult_ristretto255_SCALARBYTES", "crypto_secretbox_KEYBYTES", "crypto_secretbox_MACBYTES", "crypto_secretbox_MESSAGEBYTES_MAX", "crypto_secretbox_NONCEBYTES", "crypto_secretbox_xchacha20poly1305_KEYBYTES", "crypto_secretbox_xchacha20poly1305_MACBYTES", "crypto_secretbox_xchacha20poly1305_MESSAGEBYTES_MAX", "crypto_secretbox_xchacha20poly1305_NONCEBYTES", "crypto_secretbox_xsalsa20poly1305_KEYBYTES", "crypto_secretbox_xsalsa20poly1305_MACBYTES", "crypto_secretbox_xsalsa20poly1305_MESSAGEBYTES_MAX", "crypto_secretbox_xsalsa20poly1305_NONCEBYTES", "crypto_secretstream_xchacha20poly1305_ABYTES", "crypto_secretstream_xchacha20poly1305_HEADERBYTES", "crypto_secretstream_xchacha20poly1305_KEYBYTES", "crypto_secretstream_xchacha20poly1305_MESSAGEBYTES_MAX", "crypto_secretstream_xchacha20poly1305_TAG_FINAL", "crypto_secretstream_xchacha20poly1305_TAG_MESSAGE", "crypto_secretstream_xchacha20poly1305_TAG_PUSH", "crypto_secretstream_xchacha20poly1305_TAG_REKEY", "crypto_shorthash_BYTES", "crypto_shorthash_KEYBYTES", "crypto_shorthash_siphash24_BYTES", "crypto_shorthash_siphash24_KEYBYTES", "crypto_shorthash_siphashx24_BYTES", "crypto_shorthash_siphashx24_KEYBYTES", "crypto_sign_BYTES", "crypto_sign_MESSAGEBYTES_MAX", "crypto_sign_PUBLICKEYBYTES", "crypto_sign_SECRETKEYBYTES", "crypto_sign_SEEDBYTES", "crypto_sign_ed25519_BYTES", "crypto_sign_ed25519_MESSAGEBYTES_MAX", "crypto_sign_ed25519_PUBLICKEYBYTES", "crypto_sign_ed25519_SECRETKEYBYTES", "crypto_sign_ed25519_SEEDBYTES", "crypto_stream_KEYBYTES", "crypto_stream_MESSAGEBYTES_MAX", "crypto_stream_NONCEBYTES", "crypto_stream_chacha20_IETF_KEYBYTES", "crypto_stream_chacha20_IETF_MESSAGEBYTES_MAX", "crypto_stream_chacha20_IETF_NONCEBYTES", "crypto_stream_chacha20_KEYBYTES", "crypto_stream_chacha20_MESSAGEBYTES_MAX", "crypto_stream_chacha20_NONCEBYTES", "crypto_stream_chacha20_ietf_KEYBYTES", "crypto_stream_chacha20_ietf_MESSAGEBYTES_MAX", "crypto_stream_chacha20_ietf_NONCEBYTES", "crypto_stream_salsa2012_KEYBYTES", "crypto_stream_salsa2012_MESSAGEBYTES_MAX", "crypto_stream_salsa2012_NONCEBYTES", "crypto_stream_salsa208_KEYBYTES", "crypto_stream_salsa208_MESSAGEBYTES_MAX", "crypto_stream_salsa208_NONCEBYTES", "crypto_stream_salsa20_KEYBYTES", "crypto_stream_salsa20_MESSAGEBYTES_MAX", "crypto_stream_salsa20_NONCEBYTES", "crypto_stream_xchacha20_KEYBYTES", "crypto_stream_xchacha20_MESSAGEBYTES_MAX", "crypto_stream_xchacha20_NONCEBYTES", "crypto_stream_xsalsa20_KEYBYTES", "crypto_stream_xsalsa20_MESSAGEBYTES_MAX", "crypto_stream_xsalsa20_NONCEBYTES", "crypto_verify_16_BYTES", "crypto_verify_32_BYTES", "crypto_verify_64_BYTES"];
            for (_3 = 0; _3 < n3.length; _3++) "function" == typeof (c3 = r2["_" + n3[_3].toLowerCase()]) && (e2[n3[_3]] = c3());
            var s3 = ["SODIUM_VERSION_STRING", "crypto_pwhash_STRPREFIX", "crypto_pwhash_argon2i_STRPREFIX", "crypto_pwhash_argon2id_STRPREFIX", "crypto_pwhash_scryptsalsa208sha256_STRPREFIX"];
            for (_3 = 0; _3 < s3.length; _3++) {
              var c3;
              "function" == typeof (c3 = r2["_" + s3[_3].toLowerCase()]) && (e2[s3[_3]] = r2.UTF8ToString(c3()));
            }
          }
          r2 = a2;
          try {
            t2();
            var _2 = new Uint8Array([98, 97, 108, 108, 115]), n2 = e2.randombytes_buf(e2.crypto_secretbox_NONCEBYTES), s2 = e2.randombytes_buf(e2.crypto_secretbox_KEYBYTES), c2 = e2.crypto_secretbox_easy(_2, n2, s2), h2 = e2.crypto_secretbox_open_easy(c2, n2, s2);
            if (e2.memcmp(_2, h2)) return;
          } catch (e3) {
            if (null == r2.useBackupModule) throw new Error("Both wasm and asm failed to load" + e3);
          }
          r2.useBackupModule(), t2();
        }));
        function n(e3) {
          if ("function" == typeof TextEncoder) return new TextEncoder().encode(e3);
          e3 = unescape(encodeURIComponent(e3));
          for (var a3 = new Uint8Array(e3.length), r3 = 0, t2 = e3.length; r3 < t2; r3++) a3[r3] = e3.charCodeAt(r3);
          return a3;
        }
        function s(e3) {
          if ("function" == typeof TextDecoder) return new TextDecoder("utf-8", { fatal: true }).decode(e3);
          var a3 = 8192, r3 = Math.ceil(e3.length / a3);
          if (r3 <= 1) try {
            return decodeURIComponent(escape(String.fromCharCode.apply(null, e3)));
          } catch (e4) {
            throw new TypeError("The encoded data was not valid.");
          }
          for (var t2 = "", _2 = 0, n2 = 0; n2 < r3; n2++) {
            var c2 = Array.prototype.slice.call(e3, n2 * a3 + _2, (n2 + 1) * a3 + _2);
            if (0 != c2.length) {
              var h2, o2 = c2.length, p2 = 0;
              do {
                var y2 = c2[--o2];
                y2 >= 240 ? (p2 = 4, h2 = true) : y2 >= 224 ? (p2 = 3, h2 = true) : y2 >= 192 ? (p2 = 2, h2 = true) : y2 < 128 && (p2 = 1, h2 = true);
              } while (!h2);
              for (var i2 = p2 - (c2.length - o2), l2 = 0; l2 < i2; l2++) _2--, c2.pop();
              t2 += s(c2);
            }
          }
          return t2;
        }
        function c(e3) {
          e3 = E(null, e3, "input");
          for (var a3, r3, t2, _2 = "", n2 = 0; n2 < e3.length; n2++) t2 = 87 + (r3 = 15 & e3[n2]) + (r3 - 10 >> 8 & -39) << 8 | 87 + (a3 = e3[n2] >>> 4) + (a3 - 10 >> 8 & -39), _2 += String.fromCharCode(255 & t2) + String.fromCharCode(t2 >>> 8);
          return _2;
        }
        var h = { ORIGINAL: 1, ORIGINAL_NO_PADDING: 3, URLSAFE: 5, URLSAFE_NO_PADDING: 7 };
        function o(e3) {
          if (null == e3) return h.URLSAFE_NO_PADDING;
          if (e3 !== h.ORIGINAL && e3 !== h.ORIGINAL_NO_PADDING && e3 !== h.URLSAFE && e3 != h.URLSAFE_NO_PADDING) throw new Error("unsupported base64 variant");
          return e3;
        }
        function p(e3, a3) {
          a3 = o(a3), e3 = E(_2, e3, "input");
          var t2, _2 = [], n2 = 0 | Math.floor(e3.length / 3), c2 = e3.length - 3 * n2, h2 = 4 * n2 + (0 !== c2 ? 2 & a3 ? 2 + (c2 >>> 1) : 4 : 0), p2 = new u(h2 + 1), y2 = d(e3);
          return _2.push(y2), _2.push(p2.address), 0 === r2._sodium_bin2base64(p2.address, p2.length, y2, e3.length, a3) && b(_2, "conversion failed"), p2.length = h2, t2 = s(p2.to_Uint8Array()), g(_2), t2;
        }
        function y(e3, a3) {
          var r3 = a3 || t;
          if (!i(r3)) throw new Error(r3 + " output format is not available");
          if (e3 instanceof u) {
            if ("uint8array" === r3) return e3.to_Uint8Array();
            if ("text" === r3) return s(e3.to_Uint8Array());
            if ("hex" === r3) return c(e3.to_Uint8Array());
            if ("base64" === r3) return p(e3.to_Uint8Array(), h.URLSAFE_NO_PADDING);
            throw new Error('What is output format "' + r3 + '"?');
          }
          if ("object" == typeof e3) {
            for (var _2 = Object.keys(e3), n2 = {}, o2 = 0; o2 < _2.length; o2++) n2[_2[o2]] = y(e3[_2[o2]], r3);
            return n2;
          }
          if ("string" == typeof e3) return e3;
          throw new TypeError("Cannot format output");
        }
        function i(e3) {
          for (var a3 = ["uint8array", "text", "hex", "base64"], r3 = 0; r3 < a3.length; r3++) if (a3[r3] === e3) return true;
          return false;
        }
        function l(e3) {
          if (e3) {
            if ("string" != typeof e3) throw new TypeError("When defined, the output format must be a string");
            if (!i(e3)) throw new Error(e3 + " is not a supported output format");
          }
        }
        function u(e3) {
          this.length = e3, this.address = v(e3);
        }
        function d(e3) {
          var a3 = v(e3.length);
          return r2.HEAPU8.set(e3, a3), a3;
        }
        function v(e3) {
          var a3 = r2._malloc(e3);
          if (0 === a3) throw { message: "_malloc() failed", length: e3 };
          return a3;
        }
        function g(e3) {
          if (e3) for (var a3 = 0; a3 < e3.length; a3++) t2 = e3[a3], r2._free(t2);
          var t2;
        }
        function b(e3, a3) {
          throw g(e3), new Error(a3);
        }
        function f(e3, a3) {
          throw g(e3), new TypeError(a3);
        }
        function m(e3, a3, r3) {
          null == a3 && f(e3, r3 + " cannot be null or undefined");
        }
        function E(e3, a3, r3) {
          return m(e3, a3, r3), a3 instanceof Uint8Array ? a3 : "string" == typeof a3 ? n(a3) : void f(e3, "unsupported input type for " + r3);
        }
        function x(e3, a3, t2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var h2 = null;
          null != e3 && (h2 = d(e3 = E(c2, e3, "secret_nonce")), e3.length, c2.push(h2)), a3 = E(c2, a3, "ciphertext");
          var o2, p2 = r2._crypto_aead_aegis128l_abytes(), i2 = a3.length;
          i2 < p2 && f(c2, "ciphertext is too short"), o2 = d(a3), c2.push(o2);
          var v2 = null, m2 = 0;
          null != t2 && (v2 = d(t2 = E(c2, t2, "additional_data")), m2 = t2.length, c2.push(v2)), _2 = E(c2, _2, "public_nonce");
          var x2, k2 = 0 | r2._crypto_aead_aegis128l_npubbytes();
          _2.length !== k2 && f(c2, "invalid public_nonce length"), x2 = d(_2), c2.push(x2), n2 = E(c2, n2, "key");
          var S2, T2 = 0 | r2._crypto_aead_aegis128l_keybytes();
          n2.length !== T2 && f(c2, "invalid key length"), S2 = d(n2), c2.push(S2);
          var w2 = new u(i2 - r2._crypto_aead_aegis128l_abytes() | 0), Y2 = w2.address;
          if (c2.push(Y2), 0 === r2._crypto_aead_aegis128l_decrypt(Y2, null, h2, o2, i2, 0, v2, m2, 0, x2, S2)) {
            var B2 = y(w2, s2);
            return g(c2), B2;
          }
          b(c2, "ciphertext cannot be decrypted using that key");
        }
        function k(e3, a3, t2, _2, n2, s2, c2) {
          var h2 = [];
          l(c2);
          var o2 = null;
          null != e3 && (o2 = d(e3 = E(h2, e3, "secret_nonce")), e3.length, h2.push(o2));
          var p2 = d(a3 = E(h2, a3, "ciphertext")), i2 = a3.length;
          h2.push(p2), t2 = E(h2, t2, "mac");
          var v2, m2 = 0 | r2._crypto_box_macbytes();
          t2.length !== m2 && f(h2, "invalid mac length"), v2 = d(t2), h2.push(v2);
          var x2 = null, k2 = 0;
          null != _2 && (x2 = d(_2 = E(h2, _2, "additional_data")), k2 = _2.length, h2.push(x2)), n2 = E(h2, n2, "public_nonce");
          var S2, T2 = 0 | r2._crypto_aead_aegis128l_npubbytes();
          n2.length !== T2 && f(h2, "invalid public_nonce length"), S2 = d(n2), h2.push(S2), s2 = E(h2, s2, "key");
          var w2, Y2 = 0 | r2._crypto_aead_aegis128l_keybytes();
          s2.length !== Y2 && f(h2, "invalid key length"), w2 = d(s2), h2.push(w2);
          var B2 = new u(0 | i2), A2 = B2.address;
          if (h2.push(A2), 0 === r2._crypto_aead_aegis128l_decrypt_detached(A2, o2, p2, i2, 0, v2, x2, k2, 0, S2, w2)) {
            var M2 = y(B2, c2);
            return g(h2), M2;
          }
          b(h2, "ciphertext cannot be decrypted using that key");
        }
        function S(e3, a3, t2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var h2 = d(e3 = E(c2, e3, "message")), o2 = e3.length;
          c2.push(h2);
          var p2 = null, i2 = 0;
          null != a3 && (p2 = d(a3 = E(c2, a3, "additional_data")), i2 = a3.length, c2.push(p2));
          var v2 = null;
          null != t2 && (v2 = d(t2 = E(c2, t2, "secret_nonce")), t2.length, c2.push(v2)), _2 = E(c2, _2, "public_nonce");
          var m2, x2 = 0 | r2._crypto_aead_aegis128l_npubbytes();
          _2.length !== x2 && f(c2, "invalid public_nonce length"), m2 = d(_2), c2.push(m2), n2 = E(c2, n2, "key");
          var k2, S2 = 0 | r2._crypto_aead_aegis128l_keybytes();
          n2.length !== S2 && f(c2, "invalid key length"), k2 = d(n2), c2.push(k2);
          var T2 = new u(o2 + r2._crypto_aead_aegis128l_abytes() | 0), w2 = T2.address;
          if (c2.push(w2), 0 === r2._crypto_aead_aegis128l_encrypt(w2, null, h2, o2, 0, p2, i2, 0, v2, m2, k2)) {
            var Y2 = y(T2, s2);
            return g(c2), Y2;
          }
          b(c2, "invalid usage");
        }
        function T(e3, a3, t2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var h2 = d(e3 = E(c2, e3, "message")), o2 = e3.length;
          c2.push(h2);
          var p2 = null, i2 = 0;
          null != a3 && (p2 = d(a3 = E(c2, a3, "additional_data")), i2 = a3.length, c2.push(p2));
          var v2 = null;
          null != t2 && (v2 = d(t2 = E(c2, t2, "secret_nonce")), t2.length, c2.push(v2)), _2 = E(c2, _2, "public_nonce");
          var m2, x2 = 0 | r2._crypto_aead_aegis128l_npubbytes();
          _2.length !== x2 && f(c2, "invalid public_nonce length"), m2 = d(_2), c2.push(m2), n2 = E(c2, n2, "key");
          var k2, S2 = 0 | r2._crypto_aead_aegis128l_keybytes();
          n2.length !== S2 && f(c2, "invalid key length"), k2 = d(n2), c2.push(k2);
          var T2 = new u(0 | o2), w2 = T2.address;
          c2.push(w2);
          var Y2 = new u(0 | r2._crypto_aead_aegis128l_abytes()), B2 = Y2.address;
          if (c2.push(B2), 0 === r2._crypto_aead_aegis128l_encrypt_detached(w2, B2, null, h2, o2, 0, p2, i2, 0, v2, m2, k2)) {
            var A2 = y({ ciphertext: T2, mac: Y2 }, s2);
            return g(c2), A2;
          }
          b(c2, "invalid usage");
        }
        function w(e3) {
          var a3 = [];
          l(e3);
          var t2 = new u(0 | r2._crypto_aead_aegis128l_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_aead_aegis128l_keygen(_2);
          var n2 = y(t2, e3);
          return g(a3), n2;
        }
        function Y(e3, a3, t2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var h2 = null;
          null != e3 && (h2 = d(e3 = E(c2, e3, "secret_nonce")), e3.length, c2.push(h2)), a3 = E(c2, a3, "ciphertext");
          var o2, p2 = r2._crypto_aead_aegis256_abytes(), i2 = a3.length;
          i2 < p2 && f(c2, "ciphertext is too short"), o2 = d(a3), c2.push(o2);
          var v2 = null, m2 = 0;
          null != t2 && (v2 = d(t2 = E(c2, t2, "additional_data")), m2 = t2.length, c2.push(v2)), _2 = E(c2, _2, "public_nonce");
          var x2, k2 = 0 | r2._crypto_aead_aegis256_npubbytes();
          _2.length !== k2 && f(c2, "invalid public_nonce length"), x2 = d(_2), c2.push(x2), n2 = E(c2, n2, "key");
          var S2, T2 = 0 | r2._crypto_aead_aegis256_keybytes();
          n2.length !== T2 && f(c2, "invalid key length"), S2 = d(n2), c2.push(S2);
          var w2 = new u(i2 - r2._crypto_aead_aegis256_abytes() | 0), Y2 = w2.address;
          if (c2.push(Y2), 0 === r2._crypto_aead_aegis256_decrypt(Y2, null, h2, o2, i2, 0, v2, m2, 0, x2, S2)) {
            var B2 = y(w2, s2);
            return g(c2), B2;
          }
          b(c2, "ciphertext cannot be decrypted using that key");
        }
        function B(e3, a3, t2, _2, n2, s2, c2) {
          var h2 = [];
          l(c2);
          var o2 = null;
          null != e3 && (o2 = d(e3 = E(h2, e3, "secret_nonce")), e3.length, h2.push(o2));
          var p2 = d(a3 = E(h2, a3, "ciphertext")), i2 = a3.length;
          h2.push(p2), t2 = E(h2, t2, "mac");
          var v2, m2 = 0 | r2._crypto_box_macbytes();
          t2.length !== m2 && f(h2, "invalid mac length"), v2 = d(t2), h2.push(v2);
          var x2 = null, k2 = 0;
          null != _2 && (x2 = d(_2 = E(h2, _2, "additional_data")), k2 = _2.length, h2.push(x2)), n2 = E(h2, n2, "public_nonce");
          var S2, T2 = 0 | r2._crypto_aead_aegis256_npubbytes();
          n2.length !== T2 && f(h2, "invalid public_nonce length"), S2 = d(n2), h2.push(S2), s2 = E(h2, s2, "key");
          var w2, Y2 = 0 | r2._crypto_aead_aegis256_keybytes();
          s2.length !== Y2 && f(h2, "invalid key length"), w2 = d(s2), h2.push(w2);
          var B2 = new u(0 | i2), A2 = B2.address;
          if (h2.push(A2), 0 === r2._crypto_aead_aegis256_decrypt_detached(A2, o2, p2, i2, 0, v2, x2, k2, 0, S2, w2)) {
            var M2 = y(B2, c2);
            return g(h2), M2;
          }
          b(h2, "ciphertext cannot be decrypted using that key");
        }
        function A(e3, a3, t2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var h2 = d(e3 = E(c2, e3, "message")), o2 = e3.length;
          c2.push(h2);
          var p2 = null, i2 = 0;
          null != a3 && (p2 = d(a3 = E(c2, a3, "additional_data")), i2 = a3.length, c2.push(p2));
          var v2 = null;
          null != t2 && (v2 = d(t2 = E(c2, t2, "secret_nonce")), t2.length, c2.push(v2)), _2 = E(c2, _2, "public_nonce");
          var m2, x2 = 0 | r2._crypto_aead_aegis256_npubbytes();
          _2.length !== x2 && f(c2, "invalid public_nonce length"), m2 = d(_2), c2.push(m2), n2 = E(c2, n2, "key");
          var k2, S2 = 0 | r2._crypto_aead_aegis256_keybytes();
          n2.length !== S2 && f(c2, "invalid key length"), k2 = d(n2), c2.push(k2);
          var T2 = new u(o2 + r2._crypto_aead_aegis256_abytes() | 0), w2 = T2.address;
          if (c2.push(w2), 0 === r2._crypto_aead_aegis256_encrypt(w2, null, h2, o2, 0, p2, i2, 0, v2, m2, k2)) {
            var Y2 = y(T2, s2);
            return g(c2), Y2;
          }
          b(c2, "invalid usage");
        }
        function M(e3, a3, t2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var h2 = d(e3 = E(c2, e3, "message")), o2 = e3.length;
          c2.push(h2);
          var p2 = null, i2 = 0;
          null != a3 && (p2 = d(a3 = E(c2, a3, "additional_data")), i2 = a3.length, c2.push(p2));
          var v2 = null;
          null != t2 && (v2 = d(t2 = E(c2, t2, "secret_nonce")), t2.length, c2.push(v2)), _2 = E(c2, _2, "public_nonce");
          var m2, x2 = 0 | r2._crypto_aead_aegis256_npubbytes();
          _2.length !== x2 && f(c2, "invalid public_nonce length"), m2 = d(_2), c2.push(m2), n2 = E(c2, n2, "key");
          var k2, S2 = 0 | r2._crypto_aead_aegis256_keybytes();
          n2.length !== S2 && f(c2, "invalid key length"), k2 = d(n2), c2.push(k2);
          var T2 = new u(0 | o2), w2 = T2.address;
          c2.push(w2);
          var Y2 = new u(0 | r2._crypto_aead_aegis256_abytes()), B2 = Y2.address;
          if (c2.push(B2), 0 === r2._crypto_aead_aegis256_encrypt_detached(w2, B2, null, h2, o2, 0, p2, i2, 0, v2, m2, k2)) {
            var A2 = y({ ciphertext: T2, mac: Y2 }, s2);
            return g(c2), A2;
          }
          b(c2, "invalid usage");
        }
        function I(e3) {
          var a3 = [];
          l(e3);
          var t2 = new u(0 | r2._crypto_aead_aegis256_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_aead_aegis256_keygen(_2);
          var n2 = y(t2, e3);
          return g(a3), n2;
        }
        function K(e3, a3, t2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var h2 = null;
          null != e3 && (h2 = d(e3 = E(c2, e3, "secret_nonce")), e3.length, c2.push(h2)), a3 = E(c2, a3, "ciphertext");
          var o2, p2 = r2._crypto_aead_chacha20poly1305_abytes(), i2 = a3.length;
          i2 < p2 && f(c2, "ciphertext is too short"), o2 = d(a3), c2.push(o2);
          var v2 = null, m2 = 0;
          null != t2 && (v2 = d(t2 = E(c2, t2, "additional_data")), m2 = t2.length, c2.push(v2)), _2 = E(c2, _2, "public_nonce");
          var x2, k2 = 0 | r2._crypto_aead_chacha20poly1305_npubbytes();
          _2.length !== k2 && f(c2, "invalid public_nonce length"), x2 = d(_2), c2.push(x2), n2 = E(c2, n2, "key");
          var S2, T2 = 0 | r2._crypto_aead_chacha20poly1305_keybytes();
          n2.length !== T2 && f(c2, "invalid key length"), S2 = d(n2), c2.push(S2);
          var w2 = new u(i2 - r2._crypto_aead_chacha20poly1305_abytes() | 0), Y2 = w2.address;
          if (c2.push(Y2), 0 === r2._crypto_aead_chacha20poly1305_decrypt(Y2, null, h2, o2, i2, 0, v2, m2, 0, x2, S2)) {
            var B2 = y(w2, s2);
            return g(c2), B2;
          }
          b(c2, "ciphertext cannot be decrypted using that key");
        }
        function N(e3, a3, t2, _2, n2, s2, c2) {
          var h2 = [];
          l(c2);
          var o2 = null;
          null != e3 && (o2 = d(e3 = E(h2, e3, "secret_nonce")), e3.length, h2.push(o2));
          var p2 = d(a3 = E(h2, a3, "ciphertext")), i2 = a3.length;
          h2.push(p2), t2 = E(h2, t2, "mac");
          var v2, m2 = 0 | r2._crypto_box_macbytes();
          t2.length !== m2 && f(h2, "invalid mac length"), v2 = d(t2), h2.push(v2);
          var x2 = null, k2 = 0;
          null != _2 && (x2 = d(_2 = E(h2, _2, "additional_data")), k2 = _2.length, h2.push(x2)), n2 = E(h2, n2, "public_nonce");
          var S2, T2 = 0 | r2._crypto_aead_chacha20poly1305_npubbytes();
          n2.length !== T2 && f(h2, "invalid public_nonce length"), S2 = d(n2), h2.push(S2), s2 = E(h2, s2, "key");
          var w2, Y2 = 0 | r2._crypto_aead_chacha20poly1305_keybytes();
          s2.length !== Y2 && f(h2, "invalid key length"), w2 = d(s2), h2.push(w2);
          var B2 = new u(0 | i2), A2 = B2.address;
          if (h2.push(A2), 0 === r2._crypto_aead_chacha20poly1305_decrypt_detached(A2, o2, p2, i2, 0, v2, x2, k2, 0, S2, w2)) {
            var M2 = y(B2, c2);
            return g(h2), M2;
          }
          b(h2, "ciphertext cannot be decrypted using that key");
        }
        function L(e3, a3, t2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var h2 = d(e3 = E(c2, e3, "message")), o2 = e3.length;
          c2.push(h2);
          var p2 = null, i2 = 0;
          null != a3 && (p2 = d(a3 = E(c2, a3, "additional_data")), i2 = a3.length, c2.push(p2));
          var v2 = null;
          null != t2 && (v2 = d(t2 = E(c2, t2, "secret_nonce")), t2.length, c2.push(v2)), _2 = E(c2, _2, "public_nonce");
          var m2, x2 = 0 | r2._crypto_aead_chacha20poly1305_npubbytes();
          _2.length !== x2 && f(c2, "invalid public_nonce length"), m2 = d(_2), c2.push(m2), n2 = E(c2, n2, "key");
          var k2, S2 = 0 | r2._crypto_aead_chacha20poly1305_keybytes();
          n2.length !== S2 && f(c2, "invalid key length"), k2 = d(n2), c2.push(k2);
          var T2 = new u(o2 + r2._crypto_aead_chacha20poly1305_abytes() | 0), w2 = T2.address;
          if (c2.push(w2), 0 === r2._crypto_aead_chacha20poly1305_encrypt(w2, null, h2, o2, 0, p2, i2, 0, v2, m2, k2)) {
            var Y2 = y(T2, s2);
            return g(c2), Y2;
          }
          b(c2, "invalid usage");
        }
        function O(e3, a3, t2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var h2 = d(e3 = E(c2, e3, "message")), o2 = e3.length;
          c2.push(h2);
          var p2 = null, i2 = 0;
          null != a3 && (p2 = d(a3 = E(c2, a3, "additional_data")), i2 = a3.length, c2.push(p2));
          var v2 = null;
          null != t2 && (v2 = d(t2 = E(c2, t2, "secret_nonce")), t2.length, c2.push(v2)), _2 = E(c2, _2, "public_nonce");
          var m2, x2 = 0 | r2._crypto_aead_chacha20poly1305_npubbytes();
          _2.length !== x2 && f(c2, "invalid public_nonce length"), m2 = d(_2), c2.push(m2), n2 = E(c2, n2, "key");
          var k2, S2 = 0 | r2._crypto_aead_chacha20poly1305_keybytes();
          n2.length !== S2 && f(c2, "invalid key length"), k2 = d(n2), c2.push(k2);
          var T2 = new u(0 | o2), w2 = T2.address;
          c2.push(w2);
          var Y2 = new u(0 | r2._crypto_aead_chacha20poly1305_abytes()), B2 = Y2.address;
          if (c2.push(B2), 0 === r2._crypto_aead_chacha20poly1305_encrypt_detached(w2, B2, null, h2, o2, 0, p2, i2, 0, v2, m2, k2)) {
            var A2 = y({ ciphertext: T2, mac: Y2 }, s2);
            return g(c2), A2;
          }
          b(c2, "invalid usage");
        }
        function U(e3, a3, t2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var h2 = null;
          null != e3 && (h2 = d(e3 = E(c2, e3, "secret_nonce")), e3.length, c2.push(h2)), a3 = E(c2, a3, "ciphertext");
          var o2, p2 = r2._crypto_aead_chacha20poly1305_ietf_abytes(), i2 = a3.length;
          i2 < p2 && f(c2, "ciphertext is too short"), o2 = d(a3), c2.push(o2);
          var v2 = null, m2 = 0;
          null != t2 && (v2 = d(t2 = E(c2, t2, "additional_data")), m2 = t2.length, c2.push(v2)), _2 = E(c2, _2, "public_nonce");
          var x2, k2 = 0 | r2._crypto_aead_chacha20poly1305_ietf_npubbytes();
          _2.length !== k2 && f(c2, "invalid public_nonce length"), x2 = d(_2), c2.push(x2), n2 = E(c2, n2, "key");
          var S2, T2 = 0 | r2._crypto_aead_chacha20poly1305_ietf_keybytes();
          n2.length !== T2 && f(c2, "invalid key length"), S2 = d(n2), c2.push(S2);
          var w2 = new u(i2 - r2._crypto_aead_chacha20poly1305_ietf_abytes() | 0), Y2 = w2.address;
          if (c2.push(Y2), 0 === r2._crypto_aead_chacha20poly1305_ietf_decrypt(Y2, null, h2, o2, i2, 0, v2, m2, 0, x2, S2)) {
            var B2 = y(w2, s2);
            return g(c2), B2;
          }
          b(c2, "ciphertext cannot be decrypted using that key");
        }
        function C(e3, a3, t2, _2, n2, s2, c2) {
          var h2 = [];
          l(c2);
          var o2 = null;
          null != e3 && (o2 = d(e3 = E(h2, e3, "secret_nonce")), e3.length, h2.push(o2));
          var p2 = d(a3 = E(h2, a3, "ciphertext")), i2 = a3.length;
          h2.push(p2), t2 = E(h2, t2, "mac");
          var v2, m2 = 0 | r2._crypto_box_macbytes();
          t2.length !== m2 && f(h2, "invalid mac length"), v2 = d(t2), h2.push(v2);
          var x2 = null, k2 = 0;
          null != _2 && (x2 = d(_2 = E(h2, _2, "additional_data")), k2 = _2.length, h2.push(x2)), n2 = E(h2, n2, "public_nonce");
          var S2, T2 = 0 | r2._crypto_aead_chacha20poly1305_ietf_npubbytes();
          n2.length !== T2 && f(h2, "invalid public_nonce length"), S2 = d(n2), h2.push(S2), s2 = E(h2, s2, "key");
          var w2, Y2 = 0 | r2._crypto_aead_chacha20poly1305_ietf_keybytes();
          s2.length !== Y2 && f(h2, "invalid key length"), w2 = d(s2), h2.push(w2);
          var B2 = new u(0 | i2), A2 = B2.address;
          if (h2.push(A2), 0 === r2._crypto_aead_chacha20poly1305_ietf_decrypt_detached(A2, o2, p2, i2, 0, v2, x2, k2, 0, S2, w2)) {
            var M2 = y(B2, c2);
            return g(h2), M2;
          }
          b(h2, "ciphertext cannot be decrypted using that key");
        }
        function P(e3, a3, t2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var h2 = d(e3 = E(c2, e3, "message")), o2 = e3.length;
          c2.push(h2);
          var p2 = null, i2 = 0;
          null != a3 && (p2 = d(a3 = E(c2, a3, "additional_data")), i2 = a3.length, c2.push(p2));
          var v2 = null;
          null != t2 && (v2 = d(t2 = E(c2, t2, "secret_nonce")), t2.length, c2.push(v2)), _2 = E(c2, _2, "public_nonce");
          var m2, x2 = 0 | r2._crypto_aead_chacha20poly1305_ietf_npubbytes();
          _2.length !== x2 && f(c2, "invalid public_nonce length"), m2 = d(_2), c2.push(m2), n2 = E(c2, n2, "key");
          var k2, S2 = 0 | r2._crypto_aead_chacha20poly1305_ietf_keybytes();
          n2.length !== S2 && f(c2, "invalid key length"), k2 = d(n2), c2.push(k2);
          var T2 = new u(o2 + r2._crypto_aead_chacha20poly1305_ietf_abytes() | 0), w2 = T2.address;
          if (c2.push(w2), 0 === r2._crypto_aead_chacha20poly1305_ietf_encrypt(w2, null, h2, o2, 0, p2, i2, 0, v2, m2, k2)) {
            var Y2 = y(T2, s2);
            return g(c2), Y2;
          }
          b(c2, "invalid usage");
        }
        function R(e3, a3, t2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var h2 = d(e3 = E(c2, e3, "message")), o2 = e3.length;
          c2.push(h2);
          var p2 = null, i2 = 0;
          null != a3 && (p2 = d(a3 = E(c2, a3, "additional_data")), i2 = a3.length, c2.push(p2));
          var v2 = null;
          null != t2 && (v2 = d(t2 = E(c2, t2, "secret_nonce")), t2.length, c2.push(v2)), _2 = E(c2, _2, "public_nonce");
          var m2, x2 = 0 | r2._crypto_aead_chacha20poly1305_ietf_npubbytes();
          _2.length !== x2 && f(c2, "invalid public_nonce length"), m2 = d(_2), c2.push(m2), n2 = E(c2, n2, "key");
          var k2, S2 = 0 | r2._crypto_aead_chacha20poly1305_ietf_keybytes();
          n2.length !== S2 && f(c2, "invalid key length"), k2 = d(n2), c2.push(k2);
          var T2 = new u(0 | o2), w2 = T2.address;
          c2.push(w2);
          var Y2 = new u(0 | r2._crypto_aead_chacha20poly1305_ietf_abytes()), B2 = Y2.address;
          if (c2.push(B2), 0 === r2._crypto_aead_chacha20poly1305_ietf_encrypt_detached(w2, B2, null, h2, o2, 0, p2, i2, 0, v2, m2, k2)) {
            var A2 = y({ ciphertext: T2, mac: Y2 }, s2);
            return g(c2), A2;
          }
          b(c2, "invalid usage");
        }
        function X(e3) {
          var a3 = [];
          l(e3);
          var t2 = new u(0 | r2._crypto_aead_chacha20poly1305_ietf_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_aead_chacha20poly1305_ietf_keygen(_2);
          var n2 = y(t2, e3);
          return g(a3), n2;
        }
        function G(e3) {
          var a3 = [];
          l(e3);
          var t2 = new u(0 | r2._crypto_aead_chacha20poly1305_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_aead_chacha20poly1305_keygen(_2);
          var n2 = y(t2, e3);
          return g(a3), n2;
        }
        function D(e3, a3, t2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var h2 = null;
          null != e3 && (h2 = d(e3 = E(c2, e3, "secret_nonce")), e3.length, c2.push(h2)), a3 = E(c2, a3, "ciphertext");
          var o2, p2 = r2._crypto_aead_xchacha20poly1305_ietf_abytes(), i2 = a3.length;
          i2 < p2 && f(c2, "ciphertext is too short"), o2 = d(a3), c2.push(o2);
          var v2 = null, m2 = 0;
          null != t2 && (v2 = d(t2 = E(c2, t2, "additional_data")), m2 = t2.length, c2.push(v2)), _2 = E(c2, _2, "public_nonce");
          var x2, k2 = 0 | r2._crypto_aead_xchacha20poly1305_ietf_npubbytes();
          _2.length !== k2 && f(c2, "invalid public_nonce length"), x2 = d(_2), c2.push(x2), n2 = E(c2, n2, "key");
          var S2, T2 = 0 | r2._crypto_aead_xchacha20poly1305_ietf_keybytes();
          n2.length !== T2 && f(c2, "invalid key length"), S2 = d(n2), c2.push(S2);
          var w2 = new u(i2 - r2._crypto_aead_xchacha20poly1305_ietf_abytes() | 0), Y2 = w2.address;
          if (c2.push(Y2), 0 === r2._crypto_aead_xchacha20poly1305_ietf_decrypt(Y2, null, h2, o2, i2, 0, v2, m2, 0, x2, S2)) {
            var B2 = y(w2, s2);
            return g(c2), B2;
          }
          b(c2, "ciphertext cannot be decrypted using that key");
        }
        function F(e3, a3, t2, _2, n2, s2, c2) {
          var h2 = [];
          l(c2);
          var o2 = null;
          null != e3 && (o2 = d(e3 = E(h2, e3, "secret_nonce")), e3.length, h2.push(o2));
          var p2 = d(a3 = E(h2, a3, "ciphertext")), i2 = a3.length;
          h2.push(p2), t2 = E(h2, t2, "mac");
          var v2, m2 = 0 | r2._crypto_box_macbytes();
          t2.length !== m2 && f(h2, "invalid mac length"), v2 = d(t2), h2.push(v2);
          var x2 = null, k2 = 0;
          null != _2 && (x2 = d(_2 = E(h2, _2, "additional_data")), k2 = _2.length, h2.push(x2)), n2 = E(h2, n2, "public_nonce");
          var S2, T2 = 0 | r2._crypto_aead_xchacha20poly1305_ietf_npubbytes();
          n2.length !== T2 && f(h2, "invalid public_nonce length"), S2 = d(n2), h2.push(S2), s2 = E(h2, s2, "key");
          var w2, Y2 = 0 | r2._crypto_aead_xchacha20poly1305_ietf_keybytes();
          s2.length !== Y2 && f(h2, "invalid key length"), w2 = d(s2), h2.push(w2);
          var B2 = new u(0 | i2), A2 = B2.address;
          if (h2.push(A2), 0 === r2._crypto_aead_xchacha20poly1305_ietf_decrypt_detached(A2, o2, p2, i2, 0, v2, x2, k2, 0, S2, w2)) {
            var M2 = y(B2, c2);
            return g(h2), M2;
          }
          b(h2, "ciphertext cannot be decrypted using that key");
        }
        function V(e3, a3, t2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var h2 = d(e3 = E(c2, e3, "message")), o2 = e3.length;
          c2.push(h2);
          var p2 = null, i2 = 0;
          null != a3 && (p2 = d(a3 = E(c2, a3, "additional_data")), i2 = a3.length, c2.push(p2));
          var v2 = null;
          null != t2 && (v2 = d(t2 = E(c2, t2, "secret_nonce")), t2.length, c2.push(v2)), _2 = E(c2, _2, "public_nonce");
          var m2, x2 = 0 | r2._crypto_aead_xchacha20poly1305_ietf_npubbytes();
          _2.length !== x2 && f(c2, "invalid public_nonce length"), m2 = d(_2), c2.push(m2), n2 = E(c2, n2, "key");
          var k2, S2 = 0 | r2._crypto_aead_xchacha20poly1305_ietf_keybytes();
          n2.length !== S2 && f(c2, "invalid key length"), k2 = d(n2), c2.push(k2);
          var T2 = new u(o2 + r2._crypto_aead_xchacha20poly1305_ietf_abytes() | 0), w2 = T2.address;
          if (c2.push(w2), 0 === r2._crypto_aead_xchacha20poly1305_ietf_encrypt(w2, null, h2, o2, 0, p2, i2, 0, v2, m2, k2)) {
            var Y2 = y(T2, s2);
            return g(c2), Y2;
          }
          b(c2, "invalid usage");
        }
        function H(e3, a3, t2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var h2 = d(e3 = E(c2, e3, "message")), o2 = e3.length;
          c2.push(h2);
          var p2 = null, i2 = 0;
          null != a3 && (p2 = d(a3 = E(c2, a3, "additional_data")), i2 = a3.length, c2.push(p2));
          var v2 = null;
          null != t2 && (v2 = d(t2 = E(c2, t2, "secret_nonce")), t2.length, c2.push(v2)), _2 = E(c2, _2, "public_nonce");
          var m2, x2 = 0 | r2._crypto_aead_xchacha20poly1305_ietf_npubbytes();
          _2.length !== x2 && f(c2, "invalid public_nonce length"), m2 = d(_2), c2.push(m2), n2 = E(c2, n2, "key");
          var k2, S2 = 0 | r2._crypto_aead_xchacha20poly1305_ietf_keybytes();
          n2.length !== S2 && f(c2, "invalid key length"), k2 = d(n2), c2.push(k2);
          var T2 = new u(0 | o2), w2 = T2.address;
          c2.push(w2);
          var Y2 = new u(0 | r2._crypto_aead_xchacha20poly1305_ietf_abytes()), B2 = Y2.address;
          if (c2.push(B2), 0 === r2._crypto_aead_xchacha20poly1305_ietf_encrypt_detached(w2, B2, null, h2, o2, 0, p2, i2, 0, v2, m2, k2)) {
            var A2 = y({ ciphertext: T2, mac: Y2 }, s2);
            return g(c2), A2;
          }
          b(c2, "invalid usage");
        }
        function W(e3) {
          var a3 = [];
          l(e3);
          var t2 = new u(0 | r2._crypto_aead_xchacha20poly1305_ietf_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_aead_xchacha20poly1305_ietf_keygen(_2);
          var n2 = y(t2, e3);
          return g(a3), n2;
        }
        function q(e3, a3, t2) {
          var _2 = [];
          l(t2);
          var n2 = d(e3 = E(_2, e3, "message")), s2 = e3.length;
          _2.push(n2), a3 = E(_2, a3, "key");
          var c2, h2 = 0 | r2._crypto_auth_keybytes();
          a3.length !== h2 && f(_2, "invalid key length"), c2 = d(a3), _2.push(c2);
          var o2 = new u(0 | r2._crypto_auth_bytes()), p2 = o2.address;
          if (_2.push(p2), !(0 | r2._crypto_auth(p2, n2, s2, 0, c2))) {
            var i2 = y(o2, t2);
            return g(_2), i2;
          }
          b(_2, "invalid usage");
        }
        function j(e3, a3, t2) {
          var _2 = [];
          l(t2);
          var n2 = d(e3 = E(_2, e3, "message")), s2 = e3.length;
          _2.push(n2), a3 = E(_2, a3, "key");
          var c2, h2 = 0 | r2._crypto_auth_hmacsha256_keybytes();
          a3.length !== h2 && f(_2, "invalid key length"), c2 = d(a3), _2.push(c2);
          var o2 = new u(0 | r2._crypto_auth_hmacsha256_bytes()), p2 = o2.address;
          if (_2.push(p2), !(0 | r2._crypto_auth_hmacsha256(p2, n2, s2, 0, c2))) {
            var i2 = y(o2, t2);
            return g(_2), i2;
          }
          b(_2, "invalid usage");
        }
        function z(e3, a3) {
          var t2 = [];
          l(a3), m(t2, e3, "state_address");
          var _2 = new u(0 | r2._crypto_auth_hmacsha256_bytes()), n2 = _2.address;
          if (t2.push(n2), !(0 | r2._crypto_auth_hmacsha256_final(e3, n2))) {
            var s2 = (r2._free(e3), y(_2, a3));
            return g(t2), s2;
          }
          b(t2, "invalid usage");
        }
        function J(e3, a3) {
          var t2 = [];
          l(a3);
          var _2 = null, n2 = 0;
          null != e3 && (_2 = d(e3 = E(t2, e3, "key")), n2 = e3.length, t2.push(_2));
          var s2 = new u(208).address;
          if (!(0 | r2._crypto_auth_hmacsha256_init(s2, _2, n2))) {
            var c2 = s2;
            return g(t2), c2;
          }
          b(t2, "invalid usage");
        }
        function Q(e3) {
          var a3 = [];
          l(e3);
          var t2 = new u(0 | r2._crypto_auth_hmacsha256_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_auth_hmacsha256_keygen(_2);
          var n2 = y(t2, e3);
          return g(a3), n2;
        }
        function Z(e3, a3, t2) {
          var _2 = [];
          l(t2), m(_2, e3, "state_address");
          var n2 = d(a3 = E(_2, a3, "message_chunk")), s2 = a3.length;
          _2.push(n2), 0 | r2._crypto_auth_hmacsha256_update(e3, n2, s2) && b(_2, "invalid usage"), g(_2);
        }
        function $(e3, a3, t2) {
          var _2 = [];
          e3 = E(_2, e3, "tag");
          var n2, s2 = 0 | r2._crypto_auth_hmacsha256_bytes();
          e3.length !== s2 && f(_2, "invalid tag length"), n2 = d(e3), _2.push(n2);
          var c2 = d(a3 = E(_2, a3, "message")), h2 = a3.length;
          _2.push(c2), t2 = E(_2, t2, "key");
          var o2, p2 = 0 | r2._crypto_auth_hmacsha256_keybytes();
          t2.length !== p2 && f(_2, "invalid key length"), o2 = d(t2), _2.push(o2);
          var y2 = !(0 | r2._crypto_auth_hmacsha256_verify(n2, c2, h2, 0, o2));
          return g(_2), y2;
        }
        function ee(e3, a3, t2) {
          var _2 = [];
          l(t2);
          var n2 = d(e3 = E(_2, e3, "message")), s2 = e3.length;
          _2.push(n2), a3 = E(_2, a3, "key");
          var c2, h2 = 0 | r2._crypto_auth_hmacsha512_keybytes();
          a3.length !== h2 && f(_2, "invalid key length"), c2 = d(a3), _2.push(c2);
          var o2 = new u(0 | r2._crypto_auth_hmacsha512_bytes()), p2 = o2.address;
          if (_2.push(p2), !(0 | r2._crypto_auth_hmacsha512(p2, n2, s2, 0, c2))) {
            var i2 = y(o2, t2);
            return g(_2), i2;
          }
          b(_2, "invalid usage");
        }
        function ae(e3, a3, t2) {
          var _2 = [];
          l(t2);
          var n2 = d(e3 = E(_2, e3, "message")), s2 = e3.length;
          _2.push(n2), a3 = E(_2, a3, "key");
          var c2, h2 = 0 | r2._crypto_auth_hmacsha512256_keybytes();
          a3.length !== h2 && f(_2, "invalid key length"), c2 = d(a3), _2.push(c2);
          var o2 = new u(0 | r2._crypto_auth_hmacsha512256_bytes()), p2 = o2.address;
          if (_2.push(p2), !(0 | r2._crypto_auth_hmacsha512256(p2, n2, s2, 0, c2))) {
            var i2 = y(o2, t2);
            return g(_2), i2;
          }
          b(_2, "invalid usage");
        }
        function re(e3, a3) {
          var t2 = [];
          l(a3), m(t2, e3, "state_address");
          var _2 = new u(0 | r2._crypto_auth_hmacsha512256_bytes()), n2 = _2.address;
          if (t2.push(n2), !(0 | r2._crypto_auth_hmacsha512256_final(e3, n2))) {
            var s2 = (r2._free(e3), y(_2, a3));
            return g(t2), s2;
          }
          b(t2, "invalid usage");
        }
        function te(e3, a3) {
          var t2 = [];
          l(a3);
          var _2 = null, n2 = 0;
          null != e3 && (_2 = d(e3 = E(t2, e3, "key")), n2 = e3.length, t2.push(_2));
          var s2 = new u(416).address;
          if (!(0 | r2._crypto_auth_hmacsha512256_init(s2, _2, n2))) {
            var c2 = s2;
            return g(t2), c2;
          }
          b(t2, "invalid usage");
        }
        function _e(e3) {
          var a3 = [];
          l(e3);
          var t2 = new u(0 | r2._crypto_auth_hmacsha512256_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_auth_hmacsha512256_keygen(_2);
          var n2 = y(t2, e3);
          return g(a3), n2;
        }
        function ne(e3, a3, t2) {
          var _2 = [];
          l(t2), m(_2, e3, "state_address");
          var n2 = d(a3 = E(_2, a3, "message_chunk")), s2 = a3.length;
          _2.push(n2), 0 | r2._crypto_auth_hmacsha512256_update(e3, n2, s2) && b(_2, "invalid usage"), g(_2);
        }
        function se(e3, a3, t2) {
          var _2 = [];
          e3 = E(_2, e3, "tag");
          var n2, s2 = 0 | r2._crypto_auth_hmacsha512256_bytes();
          e3.length !== s2 && f(_2, "invalid tag length"), n2 = d(e3), _2.push(n2);
          var c2 = d(a3 = E(_2, a3, "message")), h2 = a3.length;
          _2.push(c2), t2 = E(_2, t2, "key");
          var o2, p2 = 0 | r2._crypto_auth_hmacsha512256_keybytes();
          t2.length !== p2 && f(_2, "invalid key length"), o2 = d(t2), _2.push(o2);
          var y2 = !(0 | r2._crypto_auth_hmacsha512256_verify(n2, c2, h2, 0, o2));
          return g(_2), y2;
        }
        function ce(e3, a3) {
          var t2 = [];
          l(a3), m(t2, e3, "state_address");
          var _2 = new u(0 | r2._crypto_auth_hmacsha512_bytes()), n2 = _2.address;
          if (t2.push(n2), !(0 | r2._crypto_auth_hmacsha512_final(e3, n2))) {
            var s2 = (r2._free(e3), y(_2, a3));
            return g(t2), s2;
          }
          b(t2, "invalid usage");
        }
        function he(e3, a3) {
          var t2 = [];
          l(a3);
          var _2 = null, n2 = 0;
          null != e3 && (_2 = d(e3 = E(t2, e3, "key")), n2 = e3.length, t2.push(_2));
          var s2 = new u(416).address;
          if (!(0 | r2._crypto_auth_hmacsha512_init(s2, _2, n2))) {
            var c2 = s2;
            return g(t2), c2;
          }
          b(t2, "invalid usage");
        }
        function oe(e3) {
          var a3 = [];
          l(e3);
          var t2 = new u(0 | r2._crypto_auth_hmacsha512_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_auth_hmacsha512_keygen(_2);
          var n2 = y(t2, e3);
          return g(a3), n2;
        }
        function pe(e3, a3, t2) {
          var _2 = [];
          l(t2), m(_2, e3, "state_address");
          var n2 = d(a3 = E(_2, a3, "message_chunk")), s2 = a3.length;
          _2.push(n2), 0 | r2._crypto_auth_hmacsha512_update(e3, n2, s2) && b(_2, "invalid usage"), g(_2);
        }
        function ye(e3, a3, t2) {
          var _2 = [];
          e3 = E(_2, e3, "tag");
          var n2, s2 = 0 | r2._crypto_auth_hmacsha512_bytes();
          e3.length !== s2 && f(_2, "invalid tag length"), n2 = d(e3), _2.push(n2);
          var c2 = d(a3 = E(_2, a3, "message")), h2 = a3.length;
          _2.push(c2), t2 = E(_2, t2, "key");
          var o2, p2 = 0 | r2._crypto_auth_hmacsha512_keybytes();
          t2.length !== p2 && f(_2, "invalid key length"), o2 = d(t2), _2.push(o2);
          var y2 = !(0 | r2._crypto_auth_hmacsha512_verify(n2, c2, h2, 0, o2));
          return g(_2), y2;
        }
        function ie(e3) {
          var a3 = [];
          l(e3);
          var t2 = new u(0 | r2._crypto_auth_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_auth_keygen(_2);
          var n2 = y(t2, e3);
          return g(a3), n2;
        }
        function le(e3, a3, t2) {
          var _2 = [];
          e3 = E(_2, e3, "tag");
          var n2, s2 = 0 | r2._crypto_auth_bytes();
          e3.length !== s2 && f(_2, "invalid tag length"), n2 = d(e3), _2.push(n2);
          var c2 = d(a3 = E(_2, a3, "message")), h2 = a3.length;
          _2.push(c2), t2 = E(_2, t2, "key");
          var o2, p2 = 0 | r2._crypto_auth_keybytes();
          t2.length !== p2 && f(_2, "invalid key length"), o2 = d(t2), _2.push(o2);
          var y2 = !(0 | r2._crypto_auth_verify(n2, c2, h2, 0, o2));
          return g(_2), y2;
        }
        function ue(e3, a3, t2) {
          var _2 = [];
          l(t2), e3 = E(_2, e3, "publicKey");
          var n2, s2 = 0 | r2._crypto_box_publickeybytes();
          e3.length !== s2 && f(_2, "invalid publicKey length"), n2 = d(e3), _2.push(n2), a3 = E(_2, a3, "privateKey");
          var c2, h2 = 0 | r2._crypto_box_secretkeybytes();
          a3.length !== h2 && f(_2, "invalid privateKey length"), c2 = d(a3), _2.push(c2);
          var o2 = new u(0 | r2._crypto_box_beforenmbytes()), p2 = o2.address;
          if (_2.push(p2), !(0 | r2._crypto_box_beforenm(p2, n2, c2))) {
            var i2 = y(o2, t2);
            return g(_2), i2;
          }
          b(_2, "invalid usage");
        }
        function de(e3, a3, t2) {
          var _2 = [];
          l(t2), e3 = E(_2, e3, "publicKey");
          var n2, s2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_publickeybytes();
          e3.length !== s2 && f(_2, "invalid publicKey length"), n2 = d(e3), _2.push(n2), a3 = E(_2, a3, "privateKey");
          var c2, h2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_secretkeybytes();
          a3.length !== h2 && f(_2, "invalid privateKey length"), c2 = d(a3), _2.push(c2);
          var o2 = new u(0 | r2._crypto_box_curve25519xchacha20poly1305_beforenmbytes()), p2 = o2.address;
          if (_2.push(p2), !(0 | r2._crypto_box_curve25519xchacha20poly1305_beforenm(p2, n2, c2))) {
            var i2 = y(o2, t2);
            return g(_2), i2;
          }
          b(_2, "invalid usage");
        }
        function ve(e3, a3, t2, _2, n2) {
          var s2 = [];
          l(n2);
          var c2 = d(e3 = E(s2, e3, "message")), h2 = e3.length;
          s2.push(c2), a3 = E(s2, a3, "nonce");
          var o2, p2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_noncebytes();
          a3.length !== p2 && f(s2, "invalid nonce length"), o2 = d(a3), s2.push(o2), t2 = E(s2, t2, "publicKey");
          var i2, v2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_publickeybytes();
          t2.length !== v2 && f(s2, "invalid publicKey length"), i2 = d(t2), s2.push(i2), _2 = E(s2, _2, "privateKey");
          var m2, x2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_secretkeybytes();
          _2.length !== x2 && f(s2, "invalid privateKey length"), m2 = d(_2), s2.push(m2);
          var k2 = new u(0 | h2), S2 = k2.address;
          s2.push(S2);
          var T2 = new u(0 | r2._crypto_box_curve25519xchacha20poly1305_macbytes()), w2 = T2.address;
          if (s2.push(w2), !(0 | r2._crypto_box_curve25519xchacha20poly1305_detached(S2, w2, c2, h2, 0, o2, i2, m2))) {
            var Y2 = y({ ciphertext: k2, mac: T2 }, n2);
            return g(s2), Y2;
          }
          b(s2, "invalid usage");
        }
        function ge(e3, a3, t2, _2) {
          var n2 = [];
          l(_2);
          var s2 = d(e3 = E(n2, e3, "message")), c2 = e3.length;
          n2.push(s2), a3 = E(n2, a3, "nonce");
          var h2, o2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_noncebytes();
          a3.length !== o2 && f(n2, "invalid nonce length"), h2 = d(a3), n2.push(h2), t2 = E(n2, t2, "sharedKey");
          var p2, i2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_beforenmbytes();
          t2.length !== i2 && f(n2, "invalid sharedKey length"), p2 = d(t2), n2.push(p2);
          var v2 = new u(0 | c2), m2 = v2.address;
          n2.push(m2);
          var x2 = new u(0 | r2._crypto_box_curve25519xchacha20poly1305_macbytes()), k2 = x2.address;
          if (n2.push(k2), !(0 | r2._crypto_box_curve25519xchacha20poly1305_detached_afternm(m2, k2, s2, c2, 0, h2, p2))) {
            var S2 = y({ ciphertext: v2, mac: x2 }, _2);
            return g(n2), S2;
          }
          b(n2, "invalid usage");
        }
        function be(e3, a3, t2, _2, n2) {
          var s2 = [];
          l(n2);
          var c2 = d(e3 = E(s2, e3, "message")), h2 = e3.length;
          s2.push(c2), a3 = E(s2, a3, "nonce");
          var o2, p2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_noncebytes();
          a3.length !== p2 && f(s2, "invalid nonce length"), o2 = d(a3), s2.push(o2), t2 = E(s2, t2, "publicKey");
          var i2, v2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_publickeybytes();
          t2.length !== v2 && f(s2, "invalid publicKey length"), i2 = d(t2), s2.push(i2), _2 = E(s2, _2, "privateKey");
          var m2, x2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_secretkeybytes();
          _2.length !== x2 && f(s2, "invalid privateKey length"), m2 = d(_2), s2.push(m2);
          var k2 = new u(h2 + r2._crypto_box_curve25519xchacha20poly1305_macbytes() | 0), S2 = k2.address;
          if (s2.push(S2), !(0 | r2._crypto_box_curve25519xchacha20poly1305_easy(S2, c2, h2, 0, o2, i2, m2))) {
            var T2 = y(k2, n2);
            return g(s2), T2;
          }
          b(s2, "invalid usage");
        }
        function fe(e3, a3, t2, _2) {
          var n2 = [];
          l(_2);
          var s2 = d(e3 = E(n2, e3, "message")), c2 = e3.length;
          n2.push(s2), a3 = E(n2, a3, "nonce");
          var h2, o2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_noncebytes();
          a3.length !== o2 && f(n2, "invalid nonce length"), h2 = d(a3), n2.push(h2), t2 = E(n2, t2, "sharedKey");
          var p2, i2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_beforenmbytes();
          t2.length !== i2 && f(n2, "invalid sharedKey length"), p2 = d(t2), n2.push(p2);
          var v2 = new u(c2 + r2._crypto_box_curve25519xchacha20poly1305_macbytes() | 0), m2 = v2.address;
          if (n2.push(m2), !(0 | r2._crypto_box_curve25519xchacha20poly1305_easy_afternm(m2, s2, c2, 0, h2, p2))) {
            var x2 = y(v2, _2);
            return g(n2), x2;
          }
          b(n2, "invalid usage");
        }
        function me(e3) {
          var a3 = [];
          l(e3);
          var t2 = new u(0 | r2._crypto_box_curve25519xchacha20poly1305_publickeybytes()), _2 = t2.address;
          a3.push(_2);
          var n2 = new u(0 | r2._crypto_box_curve25519xchacha20poly1305_secretkeybytes()), s2 = n2.address;
          a3.push(s2), r2._crypto_box_curve25519xchacha20poly1305_keypair(_2, s2);
          var c2 = y({ publicKey: t2, privateKey: n2, keyType: "curve25519" }, e3);
          return g(a3), c2;
        }
        function Ee(e3, a3, t2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var h2 = d(e3 = E(c2, e3, "ciphertext")), o2 = e3.length;
          c2.push(h2), a3 = E(c2, a3, "mac");
          var p2, i2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_macbytes();
          a3.length !== i2 && f(c2, "invalid mac length"), p2 = d(a3), c2.push(p2), t2 = E(c2, t2, "nonce");
          var v2, m2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_noncebytes();
          t2.length !== m2 && f(c2, "invalid nonce length"), v2 = d(t2), c2.push(v2), _2 = E(c2, _2, "publicKey");
          var x2, k2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_publickeybytes();
          _2.length !== k2 && f(c2, "invalid publicKey length"), x2 = d(_2), c2.push(x2), n2 = E(c2, n2, "privateKey");
          var S2, T2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_secretkeybytes();
          n2.length !== T2 && f(c2, "invalid privateKey length"), S2 = d(n2), c2.push(S2);
          var w2 = new u(0 | o2), Y2 = w2.address;
          if (c2.push(Y2), !(0 | r2._crypto_box_curve25519xchacha20poly1305_open_detached(Y2, h2, p2, o2, 0, v2, x2, S2))) {
            var B2 = y(w2, s2);
            return g(c2), B2;
          }
          b(c2, "incorrect key pair for the given ciphertext");
        }
        function xe(e3, a3, t2, _2, n2) {
          var s2 = [];
          l(n2);
          var c2 = d(e3 = E(s2, e3, "ciphertext")), h2 = e3.length;
          s2.push(c2), a3 = E(s2, a3, "mac");
          var o2, p2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_macbytes();
          a3.length !== p2 && f(s2, "invalid mac length"), o2 = d(a3), s2.push(o2), t2 = E(s2, t2, "nonce");
          var i2, v2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_noncebytes();
          t2.length !== v2 && f(s2, "invalid nonce length"), i2 = d(t2), s2.push(i2), _2 = E(s2, _2, "sharedKey");
          var m2, x2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_beforenmbytes();
          _2.length !== x2 && f(s2, "invalid sharedKey length"), m2 = d(_2), s2.push(m2);
          var k2 = new u(0 | h2), S2 = k2.address;
          if (s2.push(S2), !(0 | r2._crypto_box_curve25519xchacha20poly1305_open_detached_afternm(S2, c2, o2, h2, 0, i2, m2))) {
            var T2 = y(k2, n2);
            return g(s2), T2;
          }
          b(s2, "incorrect secret key for the given ciphertext");
        }
        function ke(e3, a3, t2, _2, n2) {
          var s2 = [];
          l(n2), e3 = E(s2, e3, "ciphertext");
          var c2, h2 = r2._crypto_box_curve25519xchacha20poly1305_macbytes(), o2 = e3.length;
          o2 < h2 && f(s2, "ciphertext is too short"), c2 = d(e3), s2.push(c2), a3 = E(s2, a3, "nonce");
          var p2, i2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_noncebytes();
          a3.length !== i2 && f(s2, "invalid nonce length"), p2 = d(a3), s2.push(p2), t2 = E(s2, t2, "publicKey");
          var v2, m2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_publickeybytes();
          t2.length !== m2 && f(s2, "invalid publicKey length"), v2 = d(t2), s2.push(v2), _2 = E(s2, _2, "privateKey");
          var x2, k2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_secretkeybytes();
          _2.length !== k2 && f(s2, "invalid privateKey length"), x2 = d(_2), s2.push(x2);
          var S2 = new u(o2 - r2._crypto_box_curve25519xchacha20poly1305_macbytes() | 0), T2 = S2.address;
          if (s2.push(T2), !(0 | r2._crypto_box_curve25519xchacha20poly1305_open_easy(T2, c2, o2, 0, p2, v2, x2))) {
            var w2 = y(S2, n2);
            return g(s2), w2;
          }
          b(s2, "incorrect key pair for the given ciphertext");
        }
        function Se(e3, a3, t2, _2) {
          var n2 = [];
          l(_2);
          var s2 = d(e3 = E(n2, e3, "ciphertext")), c2 = e3.length;
          n2.push(s2), a3 = E(n2, a3, "nonce");
          var h2, o2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_noncebytes();
          a3.length !== o2 && f(n2, "invalid nonce length"), h2 = d(a3), n2.push(h2), t2 = E(n2, t2, "sharedKey");
          var p2, i2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_beforenmbytes();
          t2.length !== i2 && f(n2, "invalid sharedKey length"), p2 = d(t2), n2.push(p2);
          var v2 = new u(c2 - r2._crypto_box_curve25519xchacha20poly1305_macbytes() | 0), m2 = v2.address;
          if (n2.push(m2), !(0 | r2._crypto_box_curve25519xchacha20poly1305_open_easy_afternm(m2, s2, c2, 0, h2, p2))) {
            var x2 = y(v2, _2);
            return g(n2), x2;
          }
          b(n2, "incorrect secret key for the given ciphertext");
        }
        function Te(e3, a3, t2) {
          var _2 = [];
          l(t2);
          var n2 = d(e3 = E(_2, e3, "message")), s2 = e3.length;
          _2.push(n2), a3 = E(_2, a3, "publicKey");
          var c2, h2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_publickeybytes();
          a3.length !== h2 && f(_2, "invalid publicKey length"), c2 = d(a3), _2.push(c2);
          var o2 = new u(s2 + r2._crypto_box_curve25519xchacha20poly1305_sealbytes() | 0), p2 = o2.address;
          _2.push(p2), r2._crypto_box_curve25519xchacha20poly1305_seal(p2, n2, s2, 0, c2);
          var i2 = y(o2, t2);
          return g(_2), i2;
        }
        function we(e3, a3, t2, _2) {
          var n2 = [];
          l(_2), e3 = E(n2, e3, "ciphertext");
          var s2, c2 = r2._crypto_box_curve25519xchacha20poly1305_sealbytes(), h2 = e3.length;
          h2 < c2 && f(n2, "ciphertext is too short"), s2 = d(e3), n2.push(s2), a3 = E(n2, a3, "publicKey");
          var o2, p2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_publickeybytes();
          a3.length !== p2 && f(n2, "invalid publicKey length"), o2 = d(a3), n2.push(o2), t2 = E(n2, t2, "secretKey");
          var i2, v2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_secretkeybytes();
          t2.length !== v2 && f(n2, "invalid secretKey length"), i2 = d(t2), n2.push(i2);
          var b2 = new u(h2 - r2._crypto_box_curve25519xchacha20poly1305_sealbytes() | 0), m2 = b2.address;
          n2.push(m2), r2._crypto_box_curve25519xchacha20poly1305_seal_open(m2, s2, h2, 0, o2, i2);
          var x2 = y(b2, _2);
          return g(n2), x2;
        }
        function Ye(e3, a3) {
          var t2 = [];
          l(a3), e3 = E(t2, e3, "seed");
          var _2, n2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_seedbytes();
          e3.length !== n2 && f(t2, "invalid seed length"), _2 = d(e3), t2.push(_2);
          var s2 = new u(0 | r2._crypto_box_curve25519xchacha20poly1305_publickeybytes()), c2 = s2.address;
          t2.push(c2);
          var h2 = new u(0 | r2._crypto_box_curve25519xchacha20poly1305_secretkeybytes()), o2 = h2.address;
          if (t2.push(o2), !(0 | r2._crypto_box_curve25519xchacha20poly1305_seed_keypair(c2, o2, _2))) {
            var p2 = { publicKey: y(s2, a3), privateKey: y(h2, a3), keyType: "x25519" };
            return g(t2), p2;
          }
          b(t2, "invalid usage");
        }
        function Be(e3, a3, t2, _2, n2) {
          var s2 = [];
          l(n2);
          var c2 = d(e3 = E(s2, e3, "message")), h2 = e3.length;
          s2.push(c2), a3 = E(s2, a3, "nonce");
          var o2, p2 = 0 | r2._crypto_box_noncebytes();
          a3.length !== p2 && f(s2, "invalid nonce length"), o2 = d(a3), s2.push(o2), t2 = E(s2, t2, "publicKey");
          var i2, v2 = 0 | r2._crypto_box_publickeybytes();
          t2.length !== v2 && f(s2, "invalid publicKey length"), i2 = d(t2), s2.push(i2), _2 = E(s2, _2, "privateKey");
          var m2, x2 = 0 | r2._crypto_box_secretkeybytes();
          _2.length !== x2 && f(s2, "invalid privateKey length"), m2 = d(_2), s2.push(m2);
          var k2 = new u(0 | h2), S2 = k2.address;
          s2.push(S2);
          var T2 = new u(0 | r2._crypto_box_macbytes()), w2 = T2.address;
          if (s2.push(w2), !(0 | r2._crypto_box_detached(S2, w2, c2, h2, 0, o2, i2, m2))) {
            var Y2 = y({ ciphertext: k2, mac: T2 }, n2);
            return g(s2), Y2;
          }
          b(s2, "invalid usage");
        }
        function Ae(e3, a3, t2, _2, n2) {
          var s2 = [];
          l(n2);
          var c2 = d(e3 = E(s2, e3, "message")), h2 = e3.length;
          s2.push(c2), a3 = E(s2, a3, "nonce");
          var o2, p2 = 0 | r2._crypto_box_noncebytes();
          a3.length !== p2 && f(s2, "invalid nonce length"), o2 = d(a3), s2.push(o2), t2 = E(s2, t2, "publicKey");
          var i2, v2 = 0 | r2._crypto_box_publickeybytes();
          t2.length !== v2 && f(s2, "invalid publicKey length"), i2 = d(t2), s2.push(i2), _2 = E(s2, _2, "privateKey");
          var m2, x2 = 0 | r2._crypto_box_secretkeybytes();
          _2.length !== x2 && f(s2, "invalid privateKey length"), m2 = d(_2), s2.push(m2);
          var k2 = new u(h2 + r2._crypto_box_macbytes() | 0), S2 = k2.address;
          if (s2.push(S2), !(0 | r2._crypto_box_easy(S2, c2, h2, 0, o2, i2, m2))) {
            var T2 = y(k2, n2);
            return g(s2), T2;
          }
          b(s2, "invalid usage");
        }
        function Me(e3, a3, t2, _2) {
          var n2 = [];
          l(_2);
          var s2 = d(e3 = E(n2, e3, "message")), c2 = e3.length;
          n2.push(s2), a3 = E(n2, a3, "nonce");
          var h2, o2 = 0 | r2._crypto_box_noncebytes();
          a3.length !== o2 && f(n2, "invalid nonce length"), h2 = d(a3), n2.push(h2), t2 = E(n2, t2, "sharedKey");
          var p2, i2 = 0 | r2._crypto_box_beforenmbytes();
          t2.length !== i2 && f(n2, "invalid sharedKey length"), p2 = d(t2), n2.push(p2);
          var v2 = new u(c2 + r2._crypto_box_macbytes() | 0), m2 = v2.address;
          if (n2.push(m2), !(0 | r2._crypto_box_easy_afternm(m2, s2, c2, 0, h2, p2))) {
            var x2 = y(v2, _2);
            return g(n2), x2;
          }
          b(n2, "invalid usage");
        }
        function Ie(e3) {
          var a3 = [];
          l(e3);
          var t2 = new u(0 | r2._crypto_box_publickeybytes()), _2 = t2.address;
          a3.push(_2);
          var n2 = new u(0 | r2._crypto_box_secretkeybytes()), s2 = n2.address;
          if (a3.push(s2), !(0 | r2._crypto_box_keypair(_2, s2))) {
            var c2 = { publicKey: y(t2, e3), privateKey: y(n2, e3), keyType: "x25519" };
            return g(a3), c2;
          }
          b(a3, "internal error");
        }
        function Ke(e3, a3, t2, _2, n2, s2) {
          var c2 = [];
          l(s2);
          var h2 = d(e3 = E(c2, e3, "ciphertext")), o2 = e3.length;
          c2.push(h2), a3 = E(c2, a3, "mac");
          var p2, i2 = 0 | r2._crypto_box_macbytes();
          a3.length !== i2 && f(c2, "invalid mac length"), p2 = d(a3), c2.push(p2), t2 = E(c2, t2, "nonce");
          var v2, m2 = 0 | r2._crypto_box_noncebytes();
          t2.length !== m2 && f(c2, "invalid nonce length"), v2 = d(t2), c2.push(v2), _2 = E(c2, _2, "publicKey");
          var x2, k2 = 0 | r2._crypto_box_publickeybytes();
          _2.length !== k2 && f(c2, "invalid publicKey length"), x2 = d(_2), c2.push(x2), n2 = E(c2, n2, "privateKey");
          var S2, T2 = 0 | r2._crypto_box_secretkeybytes();
          n2.length !== T2 && f(c2, "invalid privateKey length"), S2 = d(n2), c2.push(S2);
          var w2 = new u(0 | o2), Y2 = w2.address;
          if (c2.push(Y2), !(0 | r2._crypto_box_open_detached(Y2, h2, p2, o2, 0, v2, x2, S2))) {
            var B2 = y(w2, s2);
            return g(c2), B2;
          }
          b(c2, "incorrect key pair for the given ciphertext");
        }
        function Ne(e3, a3, t2, _2, n2) {
          var s2 = [];
          l(n2), e3 = E(s2, e3, "ciphertext");
          var c2, h2 = r2._crypto_box_macbytes(), o2 = e3.length;
          o2 < h2 && f(s2, "ciphertext is too short"), c2 = d(e3), s2.push(c2), a3 = E(s2, a3, "nonce");
          var p2, i2 = 0 | r2._crypto_box_noncebytes();
          a3.length !== i2 && f(s2, "invalid nonce length"), p2 = d(a3), s2.push(p2), t2 = E(s2, t2, "publicKey");
          var v2, m2 = 0 | r2._crypto_box_publickeybytes();
          t2.length !== m2 && f(s2, "invalid publicKey length"), v2 = d(t2), s2.push(v2), _2 = E(s2, _2, "privateKey");
          var x2, k2 = 0 | r2._crypto_box_secretkeybytes();
          _2.length !== k2 && f(s2, "invalid privateKey length"), x2 = d(_2), s2.push(x2);
          var S2 = new u(o2 - r2._crypto_box_macbytes() | 0), T2 = S2.address;
          if (s2.push(T2), !(0 | r2._crypto_box_open_easy(T2, c2, o2, 0, p2, v2, x2))) {
            var w2 = y(S2, n2);
            return g(s2), w2;
          }
          b(s2, "incorrect key pair for the given ciphertext");
        }
        function Le(e3, a3, t2, _2) {
          var n2 = [];
          l(_2);
          var s2 = d(e3 = E(n2, e3, "ciphertext")), c2 = e3.length;
          n2.push(s2), a3 = E(n2, a3, "nonce");
          var h2, o2 = 0 | r2._crypto_box_noncebytes();
          a3.length !== o2 && f(n2, "invalid nonce length"), h2 = d(a3), n2.push(h2), t2 = E(n2, t2, "sharedKey");
          var p2, i2 = 0 | r2._crypto_box_beforenmbytes();
          t2.length !== i2 && f(n2, "invalid sharedKey length"), p2 = d(t2), n2.push(p2);
          var v2 = new u(c2 - r2._crypto_box_macbytes() | 0), m2 = v2.address;
          if (n2.push(m2), !(0 | r2._crypto_box_open_easy_afternm(m2, s2, c2, 0, h2, p2))) {
            var x2 = y(v2, _2);
            return g(n2), x2;
          }
          b(n2, "incorrect secret key for the given ciphertext");
        }
        function Oe(e3, a3, t2) {
          var _2 = [];
          l(t2);
          var n2 = d(e3 = E(_2, e3, "message")), s2 = e3.length;
          _2.push(n2), a3 = E(_2, a3, "publicKey");
          var c2, h2 = 0 | r2._crypto_box_publickeybytes();
          a3.length !== h2 && f(_2, "invalid publicKey length"), c2 = d(a3), _2.push(c2);
          var o2 = new u(s2 + r2._crypto_box_sealbytes() | 0), p2 = o2.address;
          if (_2.push(p2), !(0 | r2._crypto_box_seal(p2, n2, s2, 0, c2))) {
            var i2 = y(o2, t2);
            return g(_2), i2;
          }
          b(_2, "invalid usage");
        }
        function Ue(e3, a3, t2, _2) {
          var n2 = [];
          l(_2), e3 = E(n2, e3, "ciphertext");
          var s2, c2 = r2._crypto_box_sealbytes(), h2 = e3.length;
          h2 < c2 && f(n2, "ciphertext is too short"), s2 = d(e3), n2.push(s2), a3 = E(n2, a3, "publicKey");
          var o2, p2 = 0 | r2._crypto_box_publickeybytes();
          a3.length !== p2 && f(n2, "invalid publicKey length"), o2 = d(a3), n2.push(o2), t2 = E(n2, t2, "privateKey");
          var i2, v2 = 0 | r2._crypto_box_secretkeybytes();
          t2.length !== v2 && f(n2, "invalid privateKey length"), i2 = d(t2), n2.push(i2);
          var m2 = new u(h2 - r2._crypto_box_sealbytes() | 0), x2 = m2.address;
          if (n2.push(x2), !(0 | r2._crypto_box_seal_open(x2, s2, h2, 0, o2, i2))) {
            var k2 = y(m2, _2);
            return g(n2), k2;
          }
          b(n2, "incorrect key pair for the given ciphertext");
        }
        function Ce(e3, a3) {
          var t2 = [];
          l(a3), e3 = E(t2, e3, "seed");
          var _2, n2 = 0 | r2._crypto_box_seedbytes();
          e3.length !== n2 && f(t2, "invalid seed length"), _2 = d(e3), t2.push(_2);
          var s2 = new u(0 | r2._crypto_box_publickeybytes()), c2 = s2.address;
          t2.push(c2);
          var h2 = new u(0 | r2._crypto_box_secretkeybytes()), o2 = h2.address;
          if (t2.push(o2), !(0 | r2._crypto_box_seed_keypair(c2, o2, _2))) {
            var p2 = { publicKey: y(s2, a3), privateKey: y(h2, a3), keyType: "x25519" };
            return g(t2), p2;
          }
          b(t2, "invalid usage");
        }
        function Pe(e3, a3, t2) {
          var _2 = [];
          l(t2), e3 = E(_2, e3, "p");
          var n2, s2 = 0 | r2._crypto_core_ed25519_bytes();
          e3.length !== s2 && f(_2, "invalid p length"), n2 = d(e3), _2.push(n2), a3 = E(_2, a3, "q");
          var c2, h2 = 0 | r2._crypto_core_ed25519_bytes();
          a3.length !== h2 && f(_2, "invalid q length"), c2 = d(a3), _2.push(c2);
          var o2 = new u(0 | r2._crypto_core_ed25519_bytes()), p2 = o2.address;
          if (_2.push(p2), !(0 | r2._crypto_core_ed25519_add(p2, n2, c2))) {
            var i2 = y(o2, t2);
            return g(_2), i2;
          }
          b(_2, "input is an invalid element");
        }
        function Re(e3, a3) {
          var t2 = [];
          l(a3);
          var _2 = d(e3 = E(t2, e3, "r"));
          e3.length, t2.push(_2);
          var n2 = new u(0 | r2._crypto_core_ed25519_bytes()), s2 = n2.address;
          if (t2.push(s2), !(0 | r2._crypto_core_ed25519_from_hash(s2, _2))) {
            var c2 = y(n2, a3);
            return g(t2), c2;
          }
          b(t2, "invalid usage");
        }
        function Xe(e3, a3) {
          var t2 = [];
          l(a3);
          var _2 = d(e3 = E(t2, e3, "r"));
          e3.length, t2.push(_2);
          var n2 = new u(0 | r2._crypto_core_ed25519_bytes()), s2 = n2.address;
          if (t2.push(s2), !(0 | r2._crypto_core_ed25519_from_uniform(s2, _2))) {
            var c2 = y(n2, a3);
            return g(t2), c2;
          }
          b(t2, "invalid usage");
        }
        function Ge(e3, a3) {
          var t2 = [];
          l(a3), e3 = E(t2, e3, "repr");
          var _2, n2 = 0 | r2._crypto_core_ed25519_bytes();
          e3.length !== n2 && f(t2, "invalid repr length"), _2 = d(e3), t2.push(_2);
          var s2 = 1 == (0 | r2._crypto_core_ed25519_is_valid_point(_2));
          return g(t2), s2;
        }
        function De(e3) {
          var a3 = [];
          l(e3);
          var t2 = new u(0 | r2._crypto_core_ed25519_bytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_core_ed25519_random(_2);
          var n2 = y(t2, e3);
          return g(a3), n2;
        }
        function Fe(e3, a3, t2) {
          var _2 = [];
          l(t2), e3 = E(_2, e3, "x");
          var n2, s2 = 0 | r2._crypto_core_ed25519_scalarbytes();
          e3.length !== s2 && f(_2, "invalid x length"), n2 = d(e3), _2.push(n2), a3 = E(_2, a3, "y");
          var c2, h2 = 0 | r2._crypto_core_ed25519_scalarbytes();
          a3.length !== h2 && f(_2, "invalid y length"), c2 = d(a3), _2.push(c2);
          var o2 = new u(0 | r2._crypto_core_ed25519_scalarbytes()), p2 = o2.address;
          _2.push(p2), r2._crypto_core_ed25519_scalar_add(p2, n2, c2);
          var i2 = y(o2, t2);
          return g(_2), i2;
        }
        function Ve(e3, a3) {
          var t2 = [];
          l(a3), e3 = E(t2, e3, "s");
          var _2, n2 = 0 | r2._crypto_core_ed25519_scalarbytes();
          e3.length !== n2 && f(t2, "invalid s length"), _2 = d(e3), t2.push(_2);
          var s2 = new u(0 | r2._crypto_core_ed25519_scalarbytes()), c2 = s2.address;
          t2.push(c2), r2._crypto_core_ed25519_scalar_complement(c2, _2);
          var h2 = y(s2, a3);
          return g(t2), h2;
        }
        function He(e3, a3) {
          var t2 = [];
          l(a3), e3 = E(t2, e3, "s");
          var _2, n2 = 0 | r2._crypto_core_ed25519_scalarbytes();
          e3.length !== n2 && f(t2, "invalid s length"), _2 = d(e3), t2.push(_2);
          var s2 = new u(0 | r2._crypto_core_ed25519_scalarbytes()), c2 = s2.address;
          if (t2.push(c2), !(0 | r2._crypto_core_ed25519_scalar_invert(c2, _2))) {
            var h2 = y(s2, a3);
            return g(t2), h2;
          }
          b(t2, "invalid reciprocate");
        }
        function We(e3, a3, t2) {
          var _2 = [];
          l(t2), e3 = E(_2, e3, "x");
          var n2, s2 = 0 | r2._crypto_core_ed25519_scalarbytes();
          e3.length !== s2 && f(_2, "invalid x length"), n2 = d(e3), _2.push(n2), a3 = E(_2, a3, "y");
          var c2, h2 = 0 | r2._crypto_core_ed25519_scalarbytes();
          a3.length !== h2 && f(_2, "invalid y length"), c2 = d(a3), _2.push(c2);
          var o2 = new u(0 | r2._crypto_core_ed25519_scalarbytes()), p2 = o2.address;
          _2.push(p2), r2._crypto_core_ed25519_scalar_mul(p2, n2, c2);
          var i2 = y(o2, t2);
          return g(_2), i2;
        }
        function qe(e3, a3) {
          var t2 = [];
          l(a3), e3 = E(t2, e3, "s");
          var _2, n2 = 0 | r2._crypto_core_ed25519_scalarbytes();
          e3.length !== n2 && f(t2, "invalid s length"), _2 = d(e3), t2.push(_2);
          var s2 = new u(0 | r2._crypto_core_ed25519_scalarbytes()), c2 = s2.address;
          t2.push(c2), r2._crypto_core_ed25519_scalar_negate(c2, _2);
          var h2 = y(s2, a3);
          return g(t2), h2;
        }
        function je(e3) {
          var a3 = [];
          l(e3);
          var t2 = new u(0 | r2._crypto_core_ed25519_scalarbytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_core_ed25519_scalar_random(_2);
          var n2 = y(t2, e3);
          return g(a3), n2;
        }
        function ze(e3, a3) {
          var t2 = [];
          l(a3), e3 = E(t2, e3, "sample");
          var _2, n2 = 0 | r2._crypto_core_ed25519_nonreducedscalarbytes();
          e3.length !== n2 && f(t2, "invalid sample length"), _2 = d(e3), t2.push(_2);
          var s2 = new u(0 | r2._crypto_core_ed25519_scalarbytes()), c2 = s2.address;
          t2.push(c2), r2._crypto_core_ed25519_scalar_reduce(c2, _2);
          var h2 = y(s2, a3);
          return g(t2), h2;
        }
        function Je(e3, a3, t2) {
          var _2 = [];
          l(t2), e3 = E(_2, e3, "x");
          var n2, s2 = 0 | r2._crypto_core_ed25519_scalarbytes();
          e3.length !== s2 && f(_2, "invalid x length"), n2 = d(e3), _2.push(n2), a3 = E(_2, a3, "y");
          var c2, h2 = 0 | r2._crypto_core_ed25519_scalarbytes();
          a3.length !== h2 && f(_2, "invalid y length"), c2 = d(a3), _2.push(c2);
          var o2 = new u(0 | r2._crypto_core_ed25519_scalarbytes()), p2 = o2.address;
          _2.push(p2), r2._crypto_core_ed25519_scalar_sub(p2, n2, c2);
          var i2 = y(o2, t2);
          return g(_2), i2;
        }
        function Qe(e3, a3, t2) {
          var _2 = [];
          l(t2), e3 = E(_2, e3, "p");
          var n2, s2 = 0 | r2._crypto_core_ed25519_bytes();
          e3.length !== s2 && f(_2, "invalid p length"), n2 = d(e3), _2.push(n2), a3 = E(_2, a3, "q");
          var c2, h2 = 0 | r2._crypto_core_ed25519_bytes();
          a3.length !== h2 && f(_2, "invalid q length"), c2 = d(a3), _2.push(c2);
          var o2 = new u(0 | r2._crypto_core_ed25519_bytes()), p2 = o2.address;
          if (_2.push(p2), !(0 | r2._crypto_core_ed25519_sub(p2, n2, c2))) {
            var i2 = y(o2, t2);
            return g(_2), i2;
          }
          b(_2, "input is an invalid element");
        }
        function Ze(e3, a3, t2, _2) {
          var n2 = [];
          l(_2), e3 = E(n2, e3, "input");
          var s2, c2 = 0 | r2._crypto_core_hchacha20_inputbytes();
          e3.length !== c2 && f(n2, "invalid input length"), s2 = d(e3), n2.push(s2), a3 = E(n2, a3, "privateKey");
          var h2, o2 = 0 | r2._crypto_core_hchacha20_keybytes();
          a3.length !== o2 && f(n2, "invalid privateKey length"), h2 = d(a3), n2.push(h2);
          var p2 = null;
          null != t2 && (p2 = d(t2 = E(n2, t2, "constant")), t2.length, n2.push(p2));
          var i2 = new u(0 | r2._crypto_core_hchacha20_outputbytes()), v2 = i2.address;
          if (n2.push(v2), !(0 | r2._crypto_core_hchacha20(v2, s2, h2, p2))) {
            var m2 = y(i2, _2);
            return g(n2), m2;
          }
          b(n2, "invalid usage");
        }
        function $e(e3, a3, t2, _2) {
          var n2 = [];
          l(_2), e3 = E(n2, e3, "input");
          var s2, c2 = 0 | r2._crypto_core_hsalsa20_inputbytes();
          e3.length !== c2 && f(n2, "invalid input length"), s2 = d(e3), n2.push(s2), a3 = E(n2, a3, "privateKey");
          var h2, o2 = 0 | r2._crypto_core_hsalsa20_keybytes();
          a3.length !== o2 && f(n2, "invalid privateKey length"), h2 = d(a3), n2.push(h2);
          var p2 = null;
          null != t2 && (p2 = d(t2 = E(n2, t2, "constant")), t2.length, n2.push(p2));
          var i2 = new u(0 | r2._crypto_core_hsalsa20_outputbytes()), v2 = i2.address;
          if (n2.push(v2), !(0 | r2._crypto_core_hsalsa20(v2, s2, h2, p2))) {
            var m2 = y(i2, _2);
            return g(n2), m2;
          }
          b(n2, "invalid usage");
        }
        function ea(e3, a3, t2) {
          var _2 = [];
          l(t2), e3 = E(_2, e3, "p");
          var n2, s2 = 0 | r2._crypto_core_ristretto255_bytes();
          e3.length !== s2 && f(_2, "invalid p length"), n2 = d(e3), _2.push(n2), a3 = E(_2, a3, "q");
          var c2, h2 = 0 | r2._crypto_core_ristretto255_bytes();
          a3.length !== h2 && f(_2, "invalid q length"), c2 = d(a3), _2.push(c2);
          var o2 = new u(0 | r2._crypto_core_ristretto255_bytes()), p2 = o2.address;
          if (_2.push(p2), !(0 | r2._crypto_core_ristretto255_add(p2, n2, c2))) {
            var i2 = y(o2, t2);
            return g(_2), i2;
          }
          b(_2, "input is an invalid element");
        }
        function aa(e3, a3) {
          var t2 = [];
          l(a3);
          var _2 = d(e3 = E(t2, e3, "r"));
          e3.length, t2.push(_2);
          var n2 = new u(0 | r2._crypto_core_ristretto255_bytes()), s2 = n2.address;
          if (t2.push(s2), !(0 | r2._crypto_core_ristretto255_from_hash(s2, _2))) {
            var c2 = y(n2, a3);
            return g(t2), c2;
          }
          b(t2, "invalid usage");
        }
        function ra(e3, a3) {
          var t2 = [];
          l(a3), e3 = E(t2, e3, "repr");
          var _2, n2 = 0 | r2._crypto_core_ristretto255_bytes();
          e3.length !== n2 && f(t2, "invalid repr length"), _2 = d(e3), t2.push(_2);
          var s2 = 1 == (0 | r2._crypto_core_ristretto255_is_valid_point(_2));
          return g(t2), s2;
        }
        function ta(e3) {
          var a3 = [];
          l(e3);
          var t2 = new u(0 | r2._crypto_core_ristretto255_bytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_core_ristretto255_random(_2);
          var n2 = y(t2, e3);
          return g(a3), n2;
        }
        function _a(e3, a3, t2) {
          var _2 = [];
          l(t2), e3 = E(_2, e3, "x");
          var n2, s2 = 0 | r2._crypto_core_ristretto255_scalarbytes();
          e3.length !== s2 && f(_2, "invalid x length"), n2 = d(e3), _2.push(n2), a3 = E(_2, a3, "y");
          var c2, h2 = 0 | r2._crypto_core_ristretto255_scalarbytes();
          a3.length !== h2 && f(_2, "invalid y length"), c2 = d(a3), _2.push(c2);
          var o2 = new u(0 | r2._crypto_core_ristretto255_scalarbytes()), p2 = o2.address;
          _2.push(p2), r2._crypto_core_ristretto255_scalar_add(p2, n2, c2);
          var i2 = y(o2, t2);
          return g(_2), i2;
        }
        function na(e3, a3) {
          var t2 = [];
          l(a3), e3 = E(t2, e3, "s");
          var _2, n2 = 0 | r2._crypto_core_ristretto255_scalarbytes();
          e3.length !== n2 && f(t2, "invalid s length"), _2 = d(e3), t2.push(_2);
          var s2 = new u(0 | r2._crypto_core_ristretto255_scalarbytes()), c2 = s2.address;
          t2.push(c2), r2._crypto_core_ristretto255_scalar_complement(c2, _2);
          var h2 = y(s2, a3);
          return g(t2), h2;
        }
        function sa(e3, a3) {
          var t2 = [];
          l(a3), e3 = E(t2, e3, "s");
          var _2, n2 = 0 | r2._crypto_core_ristretto255_scalarbytes();
          e3.length !== n2 && f(t2, "invalid s length"), _2 = d(e3), t2.push(_2);
          var s2 = new u(0 | r2._crypto_core_ristretto255_scalarbytes()), c2 = s2.address;
          if (t2.push(c2), !(0 | r2._crypto_core_ristretto255_scalar_invert(c2, _2))) {
            var h2 = y(s2, a3);
            return g(t2), h2;
          }
          b(t2, "invalid reciprocate");
        }
        function ca(e3, a3, t2) {
          var _2 = [];
          l(t2), e3 = E(_2, e3, "x");
          var n2, s2 = 0 | r2._crypto_core_ristretto255_scalarbytes();
          e3.length !== s2 && f(_2, "invalid x length"), n2 = d(e3), _2.push(n2), a3 = E(_2, a3, "y");
          var c2, h2 = 0 | r2._crypto_core_ristretto255_scalarbytes();
          a3.length !== h2 && f(_2, "invalid y length"), c2 = d(a3), _2.push(c2);
          var o2 = new u(0 | r2._crypto_core_ristretto255_scalarbytes()), p2 = o2.address;
          _2.push(p2), r2._crypto_core_ristretto255_scalar_mul(p2, n2, c2);
          var i2 = y(o2, t2);
          return g(_2), i2;
        }
        function ha(e3, a3) {
          var t2 = [];
          l(a3), e3 = E(t2, e3, "s");
          var _2, n2 = 0 | r2._crypto_core_ristretto255_scalarbytes();
          e3.length !== n2 && f(t2, "invalid s length"), _2 = d(e3), t2.push(_2);
          var s2 = new u(0 | r2._crypto_core_ristretto255_scalarbytes()), c2 = s2.address;
          t2.push(c2), r2._crypto_core_ristretto255_scalar_negate(c2, _2);
          var h2 = y(s2, a3);
          return g(t2), h2;
        }
        function oa(e3) {
          var a3 = [];
          l(e3);
          var t2 = new u(0 | r2._crypto_core_ristretto255_scalarbytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_core_ristretto255_scalar_random(_2);
          var n2 = y(t2, e3);
          return g(a3), n2;
        }
        function pa(e3, a3) {
          var t2 = [];
          l(a3), e3 = E(t2, e3, "sample");
          var _2, n2 = 0 | r2._crypto_core_ristretto255_nonreducedscalarbytes();
          e3.length !== n2 && f(t2, "invalid sample length"), _2 = d(e3), t2.push(_2);
          var s2 = new u(0 | r2._crypto_core_ristretto255_scalarbytes()), c2 = s2.address;
          t2.push(c2), r2._crypto_core_ristretto255_scalar_reduce(c2, _2);
          var h2 = y(s2, a3);
          return g(t2), h2;
        }
        function ya(e3, a3, t2) {
          var _2 = [];
          l(t2), e3 = E(_2, e3, "x");
          var n2, s2 = 0 | r2._crypto_core_ristretto255_scalarbytes();
          e3.length !== s2 && f(_2, "invalid x length"), n2 = d(e3), _2.push(n2), a3 = E(_2, a3, "y");
          var c2, h2 = 0 | r2._crypto_core_ristretto255_scalarbytes();
          a3.length !== h2 && f(_2, "invalid y length"), c2 = d(a3), _2.push(c2);
          var o2 = new u(0 | r2._crypto_core_ristretto255_scalarbytes()), p2 = o2.address;
          _2.push(p2), r2._crypto_core_ristretto255_scalar_sub(p2, n2, c2);
          var i2 = y(o2, t2);
          return g(_2), i2;
        }
        function ia(e3, a3, t2) {
          var _2 = [];
          l(t2), e3 = E(_2, e3, "p");
          var n2, s2 = 0 | r2._crypto_core_ristretto255_bytes();
          e3.length !== s2 && f(_2, "invalid p length"), n2 = d(e3), _2.push(n2), a3 = E(_2, a3, "q");
          var c2, h2 = 0 | r2._crypto_core_ristretto255_bytes();
          a3.length !== h2 && f(_2, "invalid q length"), c2 = d(a3), _2.push(c2);
          var o2 = new u(0 | r2._crypto_core_ristretto255_bytes()), p2 = o2.address;
          if (_2.push(p2), !(0 | r2._crypto_core_ristretto255_sub(p2, n2, c2))) {
            var i2 = y(o2, t2);
            return g(_2), i2;
          }
          b(_2, "input is an invalid element");
        }
        function la(e3, a3, t2, _2) {
          var n2 = [];
          l(_2), m(n2, e3, "hash_length"), ("number" != typeof e3 || (0 | e3) !== e3 || e3 < 0) && f(n2, "hash_length must be an unsigned integer");
          var s2 = d(a3 = E(n2, a3, "message")), c2 = a3.length;
          n2.push(s2);
          var h2 = null, o2 = 0;
          null != t2 && (h2 = d(t2 = E(n2, t2, "key")), o2 = t2.length, n2.push(h2));
          var p2 = new u(e3 |= 0), i2 = p2.address;
          if (n2.push(i2), !(0 | r2._crypto_generichash(i2, e3, s2, c2, 0, h2, o2))) {
            var v2 = y(p2, _2);
            return g(n2), v2;
          }
          b(n2, "invalid usage");
        }
        function ua(e3, a3, t2, _2, n2) {
          var s2 = [];
          l(n2), m(s2, e3, "subkey_len"), ("number" != typeof e3 || (0 | e3) !== e3 || e3 < 0) && f(s2, "subkey_len must be an unsigned integer");
          var c2 = null, h2 = 0;
          null != a3 && (c2 = d(a3 = E(s2, a3, "key")), h2 = a3.length, s2.push(c2));
          var o2 = null, p2 = 0;
          null != t2 && (t2 = E(s2, t2, "id"), p2 = 0 | r2._crypto_generichash_blake2b_saltbytes(), t2.length !== p2 && f(s2, "invalid id length"), o2 = d(t2), s2.push(o2));
          var i2 = null, v2 = 0;
          null != _2 && (_2 = E(s2, _2, "ctx"), v2 = 0 | r2._crypto_generichash_blake2b_personalbytes(), _2.length !== v2 && f(s2, "invalid ctx length"), i2 = d(_2), s2.push(i2));
          var x2 = new u(0 | e3), k2 = x2.address;
          if (s2.push(k2), !(0 | r2._crypto_generichash_blake2b_salt_personal(k2, e3, null, 0, 0, c2, h2, o2, i2))) {
            var S2 = y(x2, n2);
            return g(s2), S2;
          }
          b(s2, "invalid usage");
        }
        function da(e3, a3, t2) {
          var _2 = [];
          l(t2), m(_2, e3, "state_address"), m(_2, a3, "hash_length"), ("number" != typeof a3 || (0 | a3) !== a3 || a3 < 0) && f(_2, "hash_length must be an unsigned integer");
          var n2 = new u(a3 |= 0), s2 = n2.address;
          if (_2.push(s2), !(0 | r2._crypto_generichash_final(e3, s2, a3))) {
            var c2 = (r2._free(e3), y(n2, t2));
            return g(_2), c2;
          }
          b(_2, "invalid usage");
        }
        function va(e3, a3, t2) {
          var _2 = [];
          l(t2);
          var n2 = null, s2 = 0;
          null != e3 && (n2 = d(e3 = E(_2, e3, "key")), s2 = e3.length, _2.push(n2)), m(_2, a3, "hash_length"), ("number" != typeof a3 || (0 | a3) !== a3 || a3 < 0) && f(_2, "hash_length must be an unsigned integer");
          var c2 = new u(357).address;
          if (!(0 | r2._crypto_generichash_init(c2, n2, s2, a3))) {
            var h2 = c2;
            return g(_2), h2;
          }
          b(_2, "invalid usage");
        }
        function ga(e3) {
          var a3 = [];
          l(e3);
          var t2 = new u(0 | r2._crypto_generichash_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_generichash_keygen(_2);
          var n2 = y(t2, e3);
          return g(a3), n2;
        }
        function ba(e3, a3, t2) {
          var _2 = [];
          l(t2), m(_2, e3, "state_address");
          var n2 = d(a3 = E(_2, a3, "message_chunk")), s2 = a3.length;
          _2.push(n2), 0 | r2._crypto_generichash_update(e3, n2, s2) && b(_2, "invalid usage"), g(_2);
        }
        function fa(e3, a3) {
          var t2 = [];
          l(a3);
          var _2 = d(e3 = E(t2, e3, "message")), n2 = e3.length;
          t2.push(_2);
          var s2 = new u(0 | r2._crypto_hash_bytes()), c2 = s2.address;
          if (t2.push(c2), !(0 | r2._crypto_hash(c2, _2, n2, 0))) {
            var h2 = y(s2, a3);
            return g(t2), h2;
          }
          b(t2, "invalid usage");
        }
        function ma(e3, a3) {
          var t2 = [];
          l(a3);
          var _2 = d(e3 = E(t2, e3, "message")), n2 = e3.length;
          t2.push(_2);
          var s2 = new u(0 | r2._crypto_hash_sha256_bytes()), c2 = s2.address;
          if (t2.push(c2), !(0 | r2._crypto_hash_sha256(c2, _2, n2, 0))) {
            var h2 = y(s2, a3);
            return g(t2), h2;
          }
          b(t2, "invalid usage");
        }
        function Ea(e3, a3) {
          var t2 = [];
          l(a3), m(t2, e3, "state_address");
          var _2 = new u(0 | r2._crypto_hash_sha256_bytes()), n2 = _2.address;
          if (t2.push(n2), !(0 | r2._crypto_hash_sha256_final(e3, n2))) {
            var s2 = (r2._free(e3), y(_2, a3));
            return g(t2), s2;
          }
          b(t2, "invalid usage");
        }
        function xa(e3) {
          var a3 = [];
          l(e3);
          var t2 = new u(104).address;
          if (!(0 | r2._crypto_hash_sha256_init(t2))) {
            var _2 = t2;
            return g(a3), _2;
          }
          b(a3, "invalid usage");
        }
        function ka(e3, a3, t2) {
          var _2 = [];
          l(t2), m(_2, e3, "state_address");
          var n2 = d(a3 = E(_2, a3, "message_chunk")), s2 = a3.length;
          _2.push(n2), 0 | r2._crypto_hash_sha256_update(e3, n2, s2) && b(_2, "invalid usage"), g(_2);
        }
        function Sa(e3, a3) {
          var t2 = [];
          l(a3);
          var _2 = d(e3 = E(t2, e3, "message")), n2 = e3.length;
          t2.push(_2);
          var s2 = new u(0 | r2._crypto_hash_sha512_bytes()), c2 = s2.address;
          if (t2.push(c2), !(0 | r2._crypto_hash_sha512(c2, _2, n2, 0))) {
            var h2 = y(s2, a3);
            return g(t2), h2;
          }
          b(t2, "invalid usage");
        }
        function Ta(e3, a3) {
          var t2 = [];
          l(a3), m(t2, e3, "state_address");
          var _2 = new u(0 | r2._crypto_hash_sha512_bytes()), n2 = _2.address;
          if (t2.push(n2), !(0 | r2._crypto_hash_sha512_final(e3, n2))) {
            var s2 = (r2._free(e3), y(_2, a3));
            return g(t2), s2;
          }
          b(t2, "invalid usage");
        }
        function wa(e3) {
          var a3 = [];
          l(e3);
          var t2 = new u(208).address;
          if (!(0 | r2._crypto_hash_sha512_init(t2))) {
            var _2 = t2;
            return g(a3), _2;
          }
          b(a3, "invalid usage");
        }
        function Ya(e3, a3, t2) {
          var _2 = [];
          l(t2), m(_2, e3, "state_address");
          var n2 = d(a3 = E(_2, a3, "message_chunk")), s2 = a3.length;
          _2.push(n2), 0 | r2._crypto_hash_sha512_update(e3, n2, s2) && b(_2, "invalid usage"), g(_2);
        }
        function Ba(e3, a3, t2, _2, s2) {
          var c2 = [];
          l(s2), m(c2, e3, "subkey_len"), ("number" != typeof e3 || (0 | e3) !== e3 || e3 < 0) && f(c2, "subkey_len must be an unsigned integer"), m(c2, a3, "subkey_id");
          var h2, o2 = 0;
          if ("bigint" == typeof a3 && a3 >= BigInt(0)) {
            const e4 = a3 >> BigInt(32);
            e4 > BigInt(4294967295) && f(c2, "subkey_id cannot be more than 64 bits"), o2 = Number(e4), h2 = Number(a3 & BigInt(4294967295));
          } else "number" == typeof a3 && (0 | a3) === a3 && a3 >= 0 ? h2 = a3 : f(c2, "subkey_id must be an unsigned integer or bigint");
          "string" != typeof t2 && f(c2, "ctx must be a string"), t2 = n(t2 + "\0"), null != i2 && t2.length - 1 !== i2 && f(c2, "invalid ctx length");
          var p2 = d(t2), i2 = t2.length - 1;
          c2.push(p2), _2 = E(c2, _2, "key");
          var v2, b2 = 0 | r2._crypto_kdf_keybytes();
          _2.length !== b2 && f(c2, "invalid key length"), v2 = d(_2), c2.push(v2);
          var x2 = new u(0 | e3), k2 = x2.address;
          c2.push(k2), r2._crypto_kdf_derive_from_key(k2, e3, h2, o2, p2, v2);
          var S2 = y(x2, s2);
          return g(c2), S2;
        }
        function Aa(e3) {
          var a3 = [];
          l(e3);
          var t2 = new u(0 | r2._crypto_kdf_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_kdf_keygen(_2);
          var n2 = y(t2, e3);
          return g(a3), n2;
        }
        function Ma(e3, a3, t2, _2) {
          var n2 = [];
          l(_2), e3 = E(n2, e3, "clientPublicKey");
          var s2, c2 = 0 | r2._crypto_kx_publickeybytes();
          e3.length !== c2 && f(n2, "invalid clientPublicKey length"), s2 = d(e3), n2.push(s2), a3 = E(n2, a3, "clientSecretKey");
          var h2, o2 = 0 | r2._crypto_kx_secretkeybytes();
          a3.length !== o2 && f(n2, "invalid clientSecretKey length"), h2 = d(a3), n2.push(h2), t2 = E(n2, t2, "serverPublicKey");
          var p2, i2 = 0 | r2._crypto_kx_publickeybytes();
          t2.length !== i2 && f(n2, "invalid serverPublicKey length"), p2 = d(t2), n2.push(p2);
          var v2 = new u(0 | r2._crypto_kx_sessionkeybytes()), m2 = v2.address;
          n2.push(m2);
          var x2 = new u(0 | r2._crypto_kx_sessionkeybytes()), k2 = x2.address;
          if (n2.push(k2), !(0 | r2._crypto_kx_client_session_keys(m2, k2, s2, h2, p2))) {
            var S2 = y({ sharedRx: v2, sharedTx: x2 }, _2);
            return g(n2), S2;
          }
          b(n2, "invalid usage");
        }
        function Ia(e3) {
          var a3 = [];
          l(e3);
          var t2 = new u(0 | r2._crypto_kx_publickeybytes()), _2 = t2.address;
          a3.push(_2);
          var n2 = new u(0 | r2._crypto_kx_secretkeybytes()), s2 = n2.address;
          if (a3.push(s2), !(0 | r2._crypto_kx_keypair(_2, s2))) {
            var c2 = { publicKey: y(t2, e3), privateKey: y(n2, e3), keyType: "x25519" };
            return g(a3), c2;
          }
          b(a3, "internal error");
        }
        function Ka(e3, a3) {
          var t2 = [];
          l(a3), e3 = E(t2, e3, "seed");
          var _2, n2 = 0 | r2._crypto_kx_seedbytes();
          e3.length !== n2 && f(t2, "invalid seed length"), _2 = d(e3), t2.push(_2);
          var s2 = new u(0 | r2._crypto_kx_publickeybytes()), c2 = s2.address;
          t2.push(c2);
          var h2 = new u(0 | r2._crypto_kx_secretkeybytes()), o2 = h2.address;
          if (t2.push(o2), !(0 | r2._crypto_kx_seed_keypair(c2, o2, _2))) {
            var p2 = { publicKey: y(s2, a3), privateKey: y(h2, a3), keyType: "x25519" };
            return g(t2), p2;
          }
          b(t2, "internal error");
        }
        function Na(e3, a3, t2, _2) {
          var n2 = [];
          l(_2), e3 = E(n2, e3, "serverPublicKey");
          var s2, c2 = 0 | r2._crypto_kx_publickeybytes();
          e3.length !== c2 && f(n2, "invalid serverPublicKey length"), s2 = d(e3), n2.push(s2), a3 = E(n2, a3, "serverSecretKey");
          var h2, o2 = 0 | r2._crypto_kx_secretkeybytes();
          a3.length !== o2 && f(n2, "invalid serverSecretKey length"), h2 = d(a3), n2.push(h2), t2 = E(n2, t2, "clientPublicKey");
          var p2, i2 = 0 | r2._crypto_kx_publickeybytes();
          t2.length !== i2 && f(n2, "invalid clientPublicKey length"), p2 = d(t2), n2.push(p2);
          var v2 = new u(0 | r2._crypto_kx_sessionkeybytes()), m2 = v2.address;
          n2.push(m2);
          var x2 = new u(0 | r2._crypto_kx_sessionkeybytes()), k2 = x2.address;
          if (n2.push(k2), !(0 | r2._crypto_kx_server_session_keys(m2, k2, s2, h2, p2))) {
            var S2 = y({ sharedRx: v2, sharedTx: x2 }, _2);
            return g(n2), S2;
          }
          b(n2, "invalid usage");
        }
        function La(e3, a3, t2) {
          var _2 = [];
          l(t2);
          var n2 = d(e3 = E(_2, e3, "message")), s2 = e3.length;
          _2.push(n2), a3 = E(_2, a3, "key");
          var c2, h2 = 0 | r2._crypto_onetimeauth_keybytes();
          a3.length !== h2 && f(_2, "invalid key length"), c2 = d(a3), _2.push(c2);
          var o2 = new u(0 | r2._crypto_onetimeauth_bytes()), p2 = o2.address;
          if (_2.push(p2), !(0 | r2._crypto_onetimeauth(p2, n2, s2, 0, c2))) {
            var i2 = y(o2, t2);
            return g(_2), i2;
          }
          b(_2, "invalid usage");
        }
        function Oa(e3, a3) {
          var t2 = [];
          l(a3), m(t2, e3, "state_address");
          var _2 = new u(0 | r2._crypto_onetimeauth_bytes()), n2 = _2.address;
          if (t2.push(n2), !(0 | r2._crypto_onetimeauth_final(e3, n2))) {
            var s2 = (r2._free(e3), y(_2, a3));
            return g(t2), s2;
          }
          b(t2, "invalid usage");
        }
        function Ua(e3, a3) {
          var t2 = [];
          l(a3);
          var _2 = null;
          null != e3 && (_2 = d(e3 = E(t2, e3, "key")), e3.length, t2.push(_2));
          var n2 = new u(144).address;
          if (!(0 | r2._crypto_onetimeauth_init(n2, _2))) {
            var s2 = n2;
            return g(t2), s2;
          }
          b(t2, "invalid usage");
        }
        function Ca(e3) {
          var a3 = [];
          l(e3);
          var t2 = new u(0 | r2._crypto_onetimeauth_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_onetimeauth_keygen(_2);
          var n2 = y(t2, e3);
          return g(a3), n2;
        }
        function Pa(e3, a3, t2) {
          var _2 = [];
          l(t2), m(_2, e3, "state_address");
          var n2 = d(a3 = E(_2, a3, "message_chunk")), s2 = a3.length;
          _2.push(n2), 0 | r2._crypto_onetimeauth_update(e3, n2, s2) && b(_2, "invalid usage"), g(_2);
        }
        function Ra(e3, a3, t2) {
          var _2 = [];
          e3 = E(_2, e3, "hash");
          var n2, s2 = 0 | r2._crypto_onetimeauth_bytes();
          e3.length !== s2 && f(_2, "invalid hash length"), n2 = d(e3), _2.push(n2);
          var c2 = d(a3 = E(_2, a3, "message")), h2 = a3.length;
          _2.push(c2), t2 = E(_2, t2, "key");
          var o2, p2 = 0 | r2._crypto_onetimeauth_keybytes();
          t2.length !== p2 && f(_2, "invalid key length"), o2 = d(t2), _2.push(o2);
          var y2 = !(0 | r2._crypto_onetimeauth_verify(n2, c2, h2, 0, o2));
          return g(_2), y2;
        }
        function Xa(e3, a3, t2, _2, n2, s2, c2) {
          var h2 = [];
          l(c2), m(h2, e3, "keyLength"), ("number" != typeof e3 || (0 | e3) !== e3 || e3 < 0) && f(h2, "keyLength must be an unsigned integer");
          var o2 = d(a3 = E(h2, a3, "password")), p2 = a3.length;
          h2.push(o2), t2 = E(h2, t2, "salt");
          var i2, v2 = 0 | r2._crypto_pwhash_saltbytes();
          t2.length !== v2 && f(h2, "invalid salt length"), i2 = d(t2), h2.push(i2), m(h2, _2, "opsLimit"), ("number" != typeof _2 || (0 | _2) !== _2 || _2 < 0) && f(h2, "opsLimit must be an unsigned integer"), m(h2, n2, "memLimit"), ("number" != typeof n2 || (0 | n2) !== n2 || n2 < 0) && f(h2, "memLimit must be an unsigned integer"), m(h2, s2, "algorithm"), ("number" != typeof s2 || (0 | s2) !== s2 || s2 < 0) && f(h2, "algorithm must be an unsigned integer");
          var x2 = new u(0 | e3), k2 = x2.address;
          if (h2.push(k2), !(0 | r2._crypto_pwhash(k2, e3, 0, o2, p2, 0, i2, _2, 0, n2, s2))) {
            var S2 = y(x2, c2);
            return g(h2), S2;
          }
          b(h2, "invalid usage");
        }
        function Ga(e3, a3, t2, _2, n2, s2) {
          var c2 = [];
          l(s2), m(c2, e3, "keyLength"), ("number" != typeof e3 || (0 | e3) !== e3 || e3 < 0) && f(c2, "keyLength must be an unsigned integer");
          var h2 = d(a3 = E(c2, a3, "password")), o2 = a3.length;
          c2.push(h2), t2 = E(c2, t2, "salt");
          var p2, i2 = 0 | r2._crypto_pwhash_scryptsalsa208sha256_saltbytes();
          t2.length !== i2 && f(c2, "invalid salt length"), p2 = d(t2), c2.push(p2), m(c2, _2, "opsLimit"), ("number" != typeof _2 || (0 | _2) !== _2 || _2 < 0) && f(c2, "opsLimit must be an unsigned integer"), m(c2, n2, "memLimit"), ("number" != typeof n2 || (0 | n2) !== n2 || n2 < 0) && f(c2, "memLimit must be an unsigned integer");
          var v2 = new u(0 | e3), x2 = v2.address;
          if (c2.push(x2), !(0 | r2._crypto_pwhash_scryptsalsa208sha256(x2, e3, 0, h2, o2, 0, p2, _2, 0, n2))) {
            var k2 = y(v2, s2);
            return g(c2), k2;
          }
          b(c2, "invalid usage");
        }
        function Da(e3, a3, t2, _2, n2, s2, c2) {
          var h2 = [];
          l(c2);
          var o2 = d(e3 = E(h2, e3, "password")), p2 = e3.length;
          h2.push(o2);
          var i2 = d(a3 = E(h2, a3, "salt")), v2 = a3.length;
          h2.push(i2), m(h2, t2, "opsLimit"), ("number" != typeof t2 || (0 | t2) !== t2 || t2 < 0) && f(h2, "opsLimit must be an unsigned integer"), m(h2, _2, "r"), ("number" != typeof _2 || (0 | _2) !== _2 || _2 < 0) && f(h2, "r must be an unsigned integer"), m(h2, n2, "p"), ("number" != typeof n2 || (0 | n2) !== n2 || n2 < 0) && f(h2, "p must be an unsigned integer"), m(h2, s2, "keyLength"), ("number" != typeof s2 || (0 | s2) !== s2 || s2 < 0) && f(h2, "keyLength must be an unsigned integer");
          var x2 = new u(0 | s2), k2 = x2.address;
          if (h2.push(k2), !(0 | r2._crypto_pwhash_scryptsalsa208sha256_ll(o2, p2, i2, v2, t2, 0, _2, n2, k2, s2))) {
            var S2 = y(x2, c2);
            return g(h2), S2;
          }
          b(h2, "invalid usage");
        }
        function Fa(e3, a3, t2, _2) {
          var n2 = [];
          l(_2);
          var s2 = d(e3 = E(n2, e3, "password")), c2 = e3.length;
          n2.push(s2), m(n2, a3, "opsLimit"), ("number" != typeof a3 || (0 | a3) !== a3 || a3 < 0) && f(n2, "opsLimit must be an unsigned integer"), m(n2, t2, "memLimit"), ("number" != typeof t2 || (0 | t2) !== t2 || t2 < 0) && f(n2, "memLimit must be an unsigned integer");
          var h2 = new u(0 | r2._crypto_pwhash_scryptsalsa208sha256_strbytes()).address;
          if (n2.push(h2), !(0 | r2._crypto_pwhash_scryptsalsa208sha256_str(h2, s2, c2, 0, a3, 0, t2))) {
            var o2 = r2.UTF8ToString(h2);
            return g(n2), o2;
          }
          b(n2, "invalid usage");
        }
        function Va(e3, a3, t2) {
          var _2 = [];
          l(t2), "string" != typeof e3 && f(_2, "hashed_password must be a string"), e3 = n(e3 + "\0"), null != c2 && e3.length - 1 !== c2 && f(_2, "invalid hashed_password length");
          var s2 = d(e3), c2 = e3.length - 1;
          _2.push(s2);
          var h2 = d(a3 = E(_2, a3, "password")), o2 = a3.length;
          _2.push(h2);
          var p2 = !(0 | r2._crypto_pwhash_scryptsalsa208sha256_str_verify(s2, h2, o2, 0));
          return g(_2), p2;
        }
        function Ha(e3, a3, t2, _2) {
          var n2 = [];
          l(_2);
          var s2 = d(e3 = E(n2, e3, "password")), c2 = e3.length;
          n2.push(s2), m(n2, a3, "opsLimit"), ("number" != typeof a3 || (0 | a3) !== a3 || a3 < 0) && f(n2, "opsLimit must be an unsigned integer"), m(n2, t2, "memLimit"), ("number" != typeof t2 || (0 | t2) !== t2 || t2 < 0) && f(n2, "memLimit must be an unsigned integer");
          var h2 = new u(0 | r2._crypto_pwhash_strbytes()).address;
          if (n2.push(h2), !(0 | r2._crypto_pwhash_str(h2, s2, c2, 0, a3, 0, t2))) {
            var o2 = r2.UTF8ToString(h2);
            return g(n2), o2;
          }
          b(n2, "invalid usage");
        }
        function Wa(e3, a3, t2, _2) {
          var s2 = [];
          l(_2), "string" != typeof e3 && f(s2, "hashed_password must be a string"), e3 = n(e3 + "\0"), null != h2 && e3.length - 1 !== h2 && f(s2, "invalid hashed_password length");
          var c2 = d(e3), h2 = e3.length - 1;
          s2.push(c2), m(s2, a3, "opsLimit"), ("number" != typeof a3 || (0 | a3) !== a3 || a3 < 0) && f(s2, "opsLimit must be an unsigned integer"), m(s2, t2, "memLimit"), ("number" != typeof t2 || (0 | t2) !== t2 || t2 < 0) && f(s2, "memLimit must be an unsigned integer");
          var o2 = !!(0 | r2._crypto_pwhash_str_needs_rehash(c2, a3, 0, t2));
          return g(s2), o2;
        }
        function qa(e3, a3, t2) {
          var _2 = [];
          l(t2), "string" != typeof e3 && f(_2, "hashed_password must be a string"), e3 = n(e3 + "\0"), null != c2 && e3.length - 1 !== c2 && f(_2, "invalid hashed_password length");
          var s2 = d(e3), c2 = e3.length - 1;
          _2.push(s2);
          var h2 = d(a3 = E(_2, a3, "password")), o2 = a3.length;
          _2.push(h2);
          var p2 = !(0 | r2._crypto_pwhash_str_verify(s2, h2, o2, 0));
          return g(_2), p2;
        }
        function ja(e3, a3, t2) {
          var _2 = [];
          l(t2), e3 = E(_2, e3, "privateKey");
          var n2, s2 = 0 | r2._crypto_scalarmult_scalarbytes();
          e3.length !== s2 && f(_2, "invalid privateKey length"), n2 = d(e3), _2.push(n2), a3 = E(_2, a3, "publicKey");
          var c2, h2 = 0 | r2._crypto_scalarmult_bytes();
          a3.length !== h2 && f(_2, "invalid publicKey length"), c2 = d(a3), _2.push(c2);
          var o2 = new u(0 | r2._crypto_scalarmult_bytes()), p2 = o2.address;
          if (_2.push(p2), !(0 | r2._crypto_scalarmult(p2, n2, c2))) {
            var i2 = y(o2, t2);
            return g(_2), i2;
          }
          b(_2, "weak public key");
        }
        function za(e3, a3) {
          var t2 = [];
          l(a3), e3 = E(t2, e3, "privateKey");
          var _2, n2 = 0 | r2._crypto_scalarmult_scalarbytes();
          e3.length !== n2 && f(t2, "invalid privateKey length"), _2 = d(e3), t2.push(_2);
          var s2 = new u(0 | r2._crypto_scalarmult_bytes()), c2 = s2.address;
          if (t2.push(c2), !(0 | r2._crypto_scalarmult_base(c2, _2))) {
            var h2 = y(s2, a3);
            return g(t2), h2;
          }
          b(t2, "unknown error");
        }
        function Ja(e3, a3, t2) {
          var _2 = [];
          l(t2), e3 = E(_2, e3, "n");
          var n2, s2 = 0 | r2._crypto_scalarmult_ed25519_scalarbytes();
          e3.length !== s2 && f(_2, "invalid n length"), n2 = d(e3), _2.push(n2), a3 = E(_2, a3, "p");
          var c2, h2 = 0 | r2._crypto_scalarmult_ed25519_bytes();
          a3.length !== h2 && f(_2, "invalid p length"), c2 = d(a3), _2.push(c2);
          var o2 = new u(0 | r2._crypto_scalarmult_ed25519_bytes()), p2 = o2.address;
          if (_2.push(p2), !(0 | r2._crypto_scalarmult_ed25519(p2, n2, c2))) {
            var i2 = y(o2, t2);
            return g(_2), i2;
          }
          b(_2, "invalid point or scalar is 0");
        }
        function Qa(e3, a3) {
          var t2 = [];
          l(a3), e3 = E(t2, e3, "scalar");
          var _2, n2 = 0 | r2._crypto_scalarmult_ed25519_scalarbytes();
          e3.length !== n2 && f(t2, "invalid scalar length"), _2 = d(e3), t2.push(_2);
          var s2 = new u(0 | r2._crypto_scalarmult_ed25519_bytes()), c2 = s2.address;
          if (t2.push(c2), !(0 | r2._crypto_scalarmult_ed25519_base(c2, _2))) {
            var h2 = y(s2, a3);
            return g(t2), h2;
          }
          b(t2, "scalar is 0");
        }
        function Za(e3, a3) {
          var t2 = [];
          l(a3), e3 = E(t2, e3, "scalar");
          var _2, n2 = 0 | r2._crypto_scalarmult_ed25519_scalarbytes();
          e3.length !== n2 && f(t2, "invalid scalar length"), _2 = d(e3), t2.push(_2);
          var s2 = new u(0 | r2._crypto_scalarmult_ed25519_bytes()), c2 = s2.address;
          if (t2.push(c2), !(0 | r2._crypto_scalarmult_ed25519_base_noclamp(c2, _2))) {
            var h2 = y(s2, a3);
            return g(t2), h2;
          }
          b(t2, "scalar is 0");
        }
        function $a(e3, a3, t2) {
          var _2 = [];
          l(t2), e3 = E(_2, e3, "n");
          var n2, s2 = 0 | r2._crypto_scalarmult_ed25519_scalarbytes();
          e3.length !== s2 && f(_2, "invalid n length"), n2 = d(e3), _2.push(n2), a3 = E(_2, a3, "p");
          var c2, h2 = 0 | r2._crypto_scalarmult_ed25519_bytes();
          a3.length !== h2 && f(_2, "invalid p length"), c2 = d(a3), _2.push(c2);
          var o2 = new u(0 | r2._crypto_scalarmult_ed25519_bytes()), p2 = o2.address;
          if (_2.push(p2), !(0 | r2._crypto_scalarmult_ed25519_noclamp(p2, n2, c2))) {
            var i2 = y(o2, t2);
            return g(_2), i2;
          }
          b(_2, "invalid point or scalar is 0");
        }
        function er(e3, a3, t2) {
          var _2 = [];
          l(t2), e3 = E(_2, e3, "scalar");
          var n2, s2 = 0 | r2._crypto_scalarmult_ristretto255_scalarbytes();
          e3.length !== s2 && f(_2, "invalid scalar length"), n2 = d(e3), _2.push(n2), a3 = E(_2, a3, "element");
          var c2, h2 = 0 | r2._crypto_scalarmult_ristretto255_bytes();
          a3.length !== h2 && f(_2, "invalid element length"), c2 = d(a3), _2.push(c2);
          var o2 = new u(0 | r2._crypto_scalarmult_ristretto255_bytes()), p2 = o2.address;
          if (_2.push(p2), !(0 | r2._crypto_scalarmult_ristretto255(p2, n2, c2))) {
            var i2 = y(o2, t2);
            return g(_2), i2;
          }
          b(_2, "result is identity element");
        }
        function ar(e3, a3) {
          var t2 = [];
          l(a3), e3 = E(t2, e3, "scalar");
          var _2, n2 = 0 | r2._crypto_core_ristretto255_scalarbytes();
          e3.length !== n2 && f(t2, "invalid scalar length"), _2 = d(e3), t2.push(_2);
          var s2 = new u(0 | r2._crypto_core_ristretto255_bytes()), c2 = s2.address;
          if (t2.push(c2), !(0 | r2._crypto_scalarmult_ristretto255_base(c2, _2))) {
            var h2 = y(s2, a3);
            return g(t2), h2;
          }
          b(t2, "scalar is 0");
        }
        function rr(e3, a3, t2, _2) {
          var n2 = [];
          l(_2);
          var s2 = d(e3 = E(n2, e3, "message")), c2 = e3.length;
          n2.push(s2), a3 = E(n2, a3, "nonce");
          var h2, o2 = 0 | r2._crypto_secretbox_noncebytes();
          a3.length !== o2 && f(n2, "invalid nonce length"), h2 = d(a3), n2.push(h2), t2 = E(n2, t2, "key");
          var p2, i2 = 0 | r2._crypto_secretbox_keybytes();
          t2.length !== i2 && f(n2, "invalid key length"), p2 = d(t2), n2.push(p2);
          var v2 = new u(0 | c2), m2 = v2.address;
          n2.push(m2);
          var x2 = new u(0 | r2._crypto_secretbox_macbytes()), k2 = x2.address;
          if (n2.push(k2), !(0 | r2._crypto_secretbox_detached(m2, k2, s2, c2, 0, h2, p2))) {
            var S2 = y({ mac: x2, cipher: v2 }, _2);
            return g(n2), S2;
          }
          b(n2, "invalid usage");
        }
        function tr(e3, a3, t2, _2) {
          var n2 = [];
          l(_2);
          var s2 = d(e3 = E(n2, e3, "message")), c2 = e3.length;
          n2.push(s2), a3 = E(n2, a3, "nonce");
          var h2, o2 = 0 | r2._crypto_secretbox_noncebytes();
          a3.length !== o2 && f(n2, "invalid nonce length"), h2 = d(a3), n2.push(h2), t2 = E(n2, t2, "key");
          var p2, i2 = 0 | r2._crypto_secretbox_keybytes();
          t2.length !== i2 && f(n2, "invalid key length"), p2 = d(t2), n2.push(p2);
          var v2 = new u(c2 + r2._crypto_secretbox_macbytes() | 0), m2 = v2.address;
          if (n2.push(m2), !(0 | r2._crypto_secretbox_easy(m2, s2, c2, 0, h2, p2))) {
            var x2 = y(v2, _2);
            return g(n2), x2;
          }
          b(n2, "invalid usage");
        }
        function _r(e3) {
          var a3 = [];
          l(e3);
          var t2 = new u(0 | r2._crypto_secretbox_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_secretbox_keygen(_2);
          var n2 = y(t2, e3);
          return g(a3), n2;
        }
        function nr(e3, a3, t2, _2, n2) {
          var s2 = [];
          l(n2);
          var c2 = d(e3 = E(s2, e3, "ciphertext")), h2 = e3.length;
          s2.push(c2), a3 = E(s2, a3, "mac");
          var o2, p2 = 0 | r2._crypto_secretbox_macbytes();
          a3.length !== p2 && f(s2, "invalid mac length"), o2 = d(a3), s2.push(o2), t2 = E(s2, t2, "nonce");
          var i2, v2 = 0 | r2._crypto_secretbox_noncebytes();
          t2.length !== v2 && f(s2, "invalid nonce length"), i2 = d(t2), s2.push(i2), _2 = E(s2, _2, "key");
          var m2, x2 = 0 | r2._crypto_secretbox_keybytes();
          _2.length !== x2 && f(s2, "invalid key length"), m2 = d(_2), s2.push(m2);
          var k2 = new u(0 | h2), S2 = k2.address;
          if (s2.push(S2), !(0 | r2._crypto_secretbox_open_detached(S2, c2, o2, h2, 0, i2, m2))) {
            var T2 = y(k2, n2);
            return g(s2), T2;
          }
          b(s2, "wrong secret key for the given ciphertext");
        }
        function sr(e3, a3, t2, _2) {
          var n2 = [];
          l(_2), e3 = E(n2, e3, "ciphertext");
          var s2, c2 = r2._crypto_secretbox_macbytes(), h2 = e3.length;
          h2 < c2 && f(n2, "ciphertext is too short"), s2 = d(e3), n2.push(s2), a3 = E(n2, a3, "nonce");
          var o2, p2 = 0 | r2._crypto_secretbox_noncebytes();
          a3.length !== p2 && f(n2, "invalid nonce length"), o2 = d(a3), n2.push(o2), t2 = E(n2, t2, "key");
          var i2, v2 = 0 | r2._crypto_secretbox_keybytes();
          t2.length !== v2 && f(n2, "invalid key length"), i2 = d(t2), n2.push(i2);
          var m2 = new u(h2 - r2._crypto_secretbox_macbytes() | 0), x2 = m2.address;
          if (n2.push(x2), !(0 | r2._crypto_secretbox_open_easy(x2, s2, h2, 0, o2, i2))) {
            var k2 = y(m2, _2);
            return g(n2), k2;
          }
          b(n2, "wrong secret key for the given ciphertext");
        }
        function cr(e3, a3, t2) {
          var _2 = [];
          l(t2), e3 = E(_2, e3, "header");
          var n2, s2 = 0 | r2._crypto_secretstream_xchacha20poly1305_headerbytes();
          e3.length !== s2 && f(_2, "invalid header length"), n2 = d(e3), _2.push(n2), a3 = E(_2, a3, "key");
          var c2, h2 = 0 | r2._crypto_secretstream_xchacha20poly1305_keybytes();
          a3.length !== h2 && f(_2, "invalid key length"), c2 = d(a3), _2.push(c2);
          var o2 = new u(52).address;
          if (!(0 | r2._crypto_secretstream_xchacha20poly1305_init_pull(o2, n2, c2))) {
            var p2 = o2;
            return g(_2), p2;
          }
          b(_2, "invalid usage");
        }
        function hr(e3, a3) {
          var t2 = [];
          l(a3), e3 = E(t2, e3, "key");
          var _2, n2 = 0 | r2._crypto_secretstream_xchacha20poly1305_keybytes();
          e3.length !== n2 && f(t2, "invalid key length"), _2 = d(e3), t2.push(_2);
          var s2 = new u(52).address, c2 = new u(0 | r2._crypto_secretstream_xchacha20poly1305_headerbytes()), h2 = c2.address;
          if (t2.push(h2), !(0 | r2._crypto_secretstream_xchacha20poly1305_init_push(s2, h2, _2))) {
            var o2 = { state: s2, header: y(c2, a3) };
            return g(t2), o2;
          }
          b(t2, "invalid usage");
        }
        function or(e3) {
          var a3 = [];
          l(e3);
          var t2 = new u(0 | r2._crypto_secretstream_xchacha20poly1305_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_secretstream_xchacha20poly1305_keygen(_2);
          var n2 = y(t2, e3);
          return g(a3), n2;
        }
        function pr(e3, a3, t2, _2) {
          var n2 = [];
          l(_2), m(n2, e3, "state_address"), a3 = E(n2, a3, "cipher");
          var s2, c2 = r2._crypto_secretstream_xchacha20poly1305_abytes(), h2 = a3.length;
          h2 < c2 && f(n2, "cipher is too short"), s2 = d(a3), n2.push(s2);
          var o2 = null, p2 = 0;
          null != t2 && (o2 = d(t2 = E(n2, t2, "ad")), p2 = t2.length, n2.push(o2));
          var i2 = new u(h2 - r2._crypto_secretstream_xchacha20poly1305_abytes() | 0), b2 = i2.address;
          n2.push(b2);
          var x2, k2 = (x2 = v(1), n2.push(x2), (k2 = 0 === r2._crypto_secretstream_xchacha20poly1305_pull(e3, b2, 0, x2, s2, h2, 0, o2, p2) && { tag: r2.HEAPU8[x2], message: i2 }) && { message: y(k2.message, _2), tag: k2.tag });
          return g(n2), k2;
        }
        function yr(e3, a3, t2, _2, n2) {
          var s2 = [];
          l(n2), m(s2, e3, "state_address");
          var c2 = d(a3 = E(s2, a3, "message_chunk")), h2 = a3.length;
          s2.push(c2);
          var o2 = null, p2 = 0;
          null != t2 && (o2 = d(t2 = E(s2, t2, "ad")), p2 = t2.length, s2.push(o2)), m(s2, _2, "tag"), ("number" != typeof _2 || (0 | _2) !== _2 || _2 < 0) && f(s2, "tag must be an unsigned integer");
          var i2 = new u(h2 + r2._crypto_secretstream_xchacha20poly1305_abytes() | 0), v2 = i2.address;
          if (s2.push(v2), !(0 | r2._crypto_secretstream_xchacha20poly1305_push(e3, v2, 0, c2, h2, 0, o2, p2, 0, _2))) {
            var x2 = y(i2, n2);
            return g(s2), x2;
          }
          b(s2, "invalid usage");
        }
        function ir(e3, a3) {
          var t2 = [];
          return l(a3), m(t2, e3, "state_address"), r2._crypto_secretstream_xchacha20poly1305_rekey(e3), g(t2), true;
        }
        function lr(e3, a3, t2) {
          var _2 = [];
          l(t2);
          var n2 = d(e3 = E(_2, e3, "message")), s2 = e3.length;
          _2.push(n2), a3 = E(_2, a3, "key");
          var c2, h2 = 0 | r2._crypto_shorthash_keybytes();
          a3.length !== h2 && f(_2, "invalid key length"), c2 = d(a3), _2.push(c2);
          var o2 = new u(0 | r2._crypto_shorthash_bytes()), p2 = o2.address;
          if (_2.push(p2), !(0 | r2._crypto_shorthash(p2, n2, s2, 0, c2))) {
            var i2 = y(o2, t2);
            return g(_2), i2;
          }
          b(_2, "invalid usage");
        }
        function ur(e3) {
          var a3 = [];
          l(e3);
          var t2 = new u(0 | r2._crypto_shorthash_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_shorthash_keygen(_2);
          var n2 = y(t2, e3);
          return g(a3), n2;
        }
        function dr(e3, a3, t2) {
          var _2 = [];
          l(t2);
          var n2 = d(e3 = E(_2, e3, "message")), s2 = e3.length;
          _2.push(n2), a3 = E(_2, a3, "key");
          var c2, h2 = 0 | r2._crypto_shorthash_siphashx24_keybytes();
          a3.length !== h2 && f(_2, "invalid key length"), c2 = d(a3), _2.push(c2);
          var o2 = new u(0 | r2._crypto_shorthash_siphashx24_bytes()), p2 = o2.address;
          if (_2.push(p2), !(0 | r2._crypto_shorthash_siphashx24(p2, n2, s2, 0, c2))) {
            var i2 = y(o2, t2);
            return g(_2), i2;
          }
          b(_2, "invalid usage");
        }
        function vr(e3, a3, t2) {
          var _2 = [];
          l(t2);
          var n2 = d(e3 = E(_2, e3, "message")), s2 = e3.length;
          _2.push(n2), a3 = E(_2, a3, "privateKey");
          var c2, h2 = 0 | r2._crypto_sign_secretkeybytes();
          a3.length !== h2 && f(_2, "invalid privateKey length"), c2 = d(a3), _2.push(c2);
          var o2 = new u(e3.length + r2._crypto_sign_bytes() | 0), p2 = o2.address;
          if (_2.push(p2), !(0 | r2._crypto_sign(p2, null, n2, s2, 0, c2))) {
            var i2 = y(o2, t2);
            return g(_2), i2;
          }
          b(_2, "invalid usage");
        }
        function gr(e3, a3, t2) {
          var _2 = [];
          l(t2);
          var n2 = d(e3 = E(_2, e3, "message")), s2 = e3.length;
          _2.push(n2), a3 = E(_2, a3, "privateKey");
          var c2, h2 = 0 | r2._crypto_sign_secretkeybytes();
          a3.length !== h2 && f(_2, "invalid privateKey length"), c2 = d(a3), _2.push(c2);
          var o2 = new u(0 | r2._crypto_sign_bytes()), p2 = o2.address;
          if (_2.push(p2), !(0 | r2._crypto_sign_detached(p2, null, n2, s2, 0, c2))) {
            var i2 = y(o2, t2);
            return g(_2), i2;
          }
          b(_2, "invalid usage");
        }
        function br(e3, a3) {
          var t2 = [];
          l(a3), e3 = E(t2, e3, "edPk");
          var _2, n2 = 0 | r2._crypto_sign_publickeybytes();
          e3.length !== n2 && f(t2, "invalid edPk length"), _2 = d(e3), t2.push(_2);
          var s2 = new u(0 | r2._crypto_scalarmult_scalarbytes()), c2 = s2.address;
          if (t2.push(c2), !(0 | r2._crypto_sign_ed25519_pk_to_curve25519(c2, _2))) {
            var h2 = y(s2, a3);
            return g(t2), h2;
          }
          b(t2, "invalid key");
        }
        function fr(e3, a3) {
          var t2 = [];
          l(a3), e3 = E(t2, e3, "edSk");
          var _2, n2 = 0 | r2._crypto_sign_secretkeybytes();
          e3.length !== n2 && f(t2, "invalid edSk length"), _2 = d(e3), t2.push(_2);
          var s2 = new u(0 | r2._crypto_scalarmult_scalarbytes()), c2 = s2.address;
          if (t2.push(c2), !(0 | r2._crypto_sign_ed25519_sk_to_curve25519(c2, _2))) {
            var h2 = y(s2, a3);
            return g(t2), h2;
          }
          b(t2, "invalid key");
        }
        function mr(e3, a3) {
          var t2 = [];
          l(a3), e3 = E(t2, e3, "privateKey");
          var _2, n2 = 0 | r2._crypto_sign_secretkeybytes();
          e3.length !== n2 && f(t2, "invalid privateKey length"), _2 = d(e3), t2.push(_2);
          var s2 = new u(0 | r2._crypto_sign_publickeybytes()), c2 = s2.address;
          if (t2.push(c2), !(0 | r2._crypto_sign_ed25519_sk_to_pk(c2, _2))) {
            var h2 = y(s2, a3);
            return g(t2), h2;
          }
          b(t2, "invalid key");
        }
        function Er(e3, a3) {
          var t2 = [];
          l(a3), e3 = E(t2, e3, "privateKey");
          var _2, n2 = 0 | r2._crypto_sign_secretkeybytes();
          e3.length !== n2 && f(t2, "invalid privateKey length"), _2 = d(e3), t2.push(_2);
          var s2 = new u(0 | r2._crypto_sign_seedbytes()), c2 = s2.address;
          if (t2.push(c2), !(0 | r2._crypto_sign_ed25519_sk_to_seed(c2, _2))) {
            var h2 = y(s2, a3);
            return g(t2), h2;
          }
          b(t2, "invalid key");
        }
        function xr(e3, a3, t2) {
          var _2 = [];
          l(t2), m(_2, e3, "state_address"), a3 = E(_2, a3, "privateKey");
          var n2, s2 = 0 | r2._crypto_sign_secretkeybytes();
          a3.length !== s2 && f(_2, "invalid privateKey length"), n2 = d(a3), _2.push(n2);
          var c2 = new u(0 | r2._crypto_sign_bytes()), h2 = c2.address;
          if (_2.push(h2), !(0 | r2._crypto_sign_final_create(e3, h2, null, n2))) {
            var o2 = (r2._free(e3), y(c2, t2));
            return g(_2), o2;
          }
          b(_2, "invalid usage");
        }
        function kr(e3, a3, t2, _2) {
          var n2 = [];
          l(_2), m(n2, e3, "state_address"), a3 = E(n2, a3, "signature");
          var s2, c2 = 0 | r2._crypto_sign_bytes();
          a3.length !== c2 && f(n2, "invalid signature length"), s2 = d(a3), n2.push(s2), t2 = E(n2, t2, "publicKey");
          var h2, o2 = 0 | r2._crypto_sign_publickeybytes();
          t2.length !== o2 && f(n2, "invalid publicKey length"), h2 = d(t2), n2.push(h2);
          var p2 = !(0 | r2._crypto_sign_final_verify(e3, s2, h2));
          return g(n2), p2;
        }
        function Sr(e3) {
          var a3 = [];
          l(e3);
          var t2 = new u(208).address;
          if (!(0 | r2._crypto_sign_init(t2))) {
            var _2 = t2;
            return g(a3), _2;
          }
          b(a3, "internal error");
        }
        function Tr(e3) {
          var a3 = [];
          l(e3);
          var t2 = new u(0 | r2._crypto_sign_publickeybytes()), _2 = t2.address;
          a3.push(_2);
          var n2 = new u(0 | r2._crypto_sign_secretkeybytes()), s2 = n2.address;
          if (a3.push(s2), !(0 | r2._crypto_sign_keypair(_2, s2))) {
            var c2 = { publicKey: y(t2, e3), privateKey: y(n2, e3), keyType: "ed25519" };
            return g(a3), c2;
          }
          b(a3, "internal error");
        }
        function wr(e3, a3, t2) {
          var _2 = [];
          l(t2), e3 = E(_2, e3, "signedMessage");
          var n2, s2 = r2._crypto_sign_bytes(), c2 = e3.length;
          c2 < s2 && f(_2, "signedMessage is too short"), n2 = d(e3), _2.push(n2), a3 = E(_2, a3, "publicKey");
          var h2, o2 = 0 | r2._crypto_sign_publickeybytes();
          a3.length !== o2 && f(_2, "invalid publicKey length"), h2 = d(a3), _2.push(h2);
          var p2 = new u(c2 - r2._crypto_sign_bytes() | 0), i2 = p2.address;
          if (_2.push(i2), !(0 | r2._crypto_sign_open(i2, null, n2, c2, 0, h2))) {
            var v2 = y(p2, t2);
            return g(_2), v2;
          }
          b(_2, "incorrect signature for the given public key");
        }
        function Yr(e3, a3) {
          var t2 = [];
          l(a3), e3 = E(t2, e3, "seed");
          var _2, n2 = 0 | r2._crypto_sign_seedbytes();
          e3.length !== n2 && f(t2, "invalid seed length"), _2 = d(e3), t2.push(_2);
          var s2 = new u(0 | r2._crypto_sign_publickeybytes()), c2 = s2.address;
          t2.push(c2);
          var h2 = new u(0 | r2._crypto_sign_secretkeybytes()), o2 = h2.address;
          if (t2.push(o2), !(0 | r2._crypto_sign_seed_keypair(c2, o2, _2))) {
            var p2 = { publicKey: y(s2, a3), privateKey: y(h2, a3), keyType: "ed25519" };
            return g(t2), p2;
          }
          b(t2, "invalid usage");
        }
        function Br(e3, a3, t2) {
          var _2 = [];
          l(t2), m(_2, e3, "state_address");
          var n2 = d(a3 = E(_2, a3, "message_chunk")), s2 = a3.length;
          _2.push(n2), 0 | r2._crypto_sign_update(e3, n2, s2, 0) && b(_2, "invalid usage"), g(_2);
        }
        function Ar(e3, a3, t2) {
          var _2 = [];
          e3 = E(_2, e3, "signature");
          var n2, s2 = 0 | r2._crypto_sign_bytes();
          e3.length !== s2 && f(_2, "invalid signature length"), n2 = d(e3), _2.push(n2);
          var c2 = d(a3 = E(_2, a3, "message")), h2 = a3.length;
          _2.push(c2), t2 = E(_2, t2, "publicKey");
          var o2, p2 = 0 | r2._crypto_sign_publickeybytes();
          t2.length !== p2 && f(_2, "invalid publicKey length"), o2 = d(t2), _2.push(o2);
          var y2 = !(0 | r2._crypto_sign_verify_detached(n2, c2, h2, 0, o2));
          return g(_2), y2;
        }
        function Mr(e3, a3, t2, _2) {
          var n2 = [];
          l(_2), m(n2, e3, "outLength"), ("number" != typeof e3 || (0 | e3) !== e3 || e3 < 0) && f(n2, "outLength must be an unsigned integer"), a3 = E(n2, a3, "key");
          var s2, c2 = 0 | r2._crypto_stream_chacha20_keybytes();
          a3.length !== c2 && f(n2, "invalid key length"), s2 = d(a3), n2.push(s2), t2 = E(n2, t2, "nonce");
          var h2, o2 = 0 | r2._crypto_stream_chacha20_noncebytes();
          t2.length !== o2 && f(n2, "invalid nonce length"), h2 = d(t2), n2.push(h2);
          var p2 = new u(0 | e3), i2 = p2.address;
          n2.push(i2), r2._crypto_stream_chacha20(i2, e3, 0, h2, s2);
          var v2 = y(p2, _2);
          return g(n2), v2;
        }
        function Ir(e3, a3, t2, _2) {
          var n2 = [];
          l(_2);
          var s2 = d(e3 = E(n2, e3, "input_message")), c2 = e3.length;
          n2.push(s2), a3 = E(n2, a3, "nonce");
          var h2, o2 = 0 | r2._crypto_stream_chacha20_ietf_noncebytes();
          a3.length !== o2 && f(n2, "invalid nonce length"), h2 = d(a3), n2.push(h2), t2 = E(n2, t2, "key");
          var p2, i2 = 0 | r2._crypto_stream_chacha20_ietf_keybytes();
          t2.length !== i2 && f(n2, "invalid key length"), p2 = d(t2), n2.push(p2);
          var v2 = new u(0 | c2), m2 = v2.address;
          if (n2.push(m2), 0 === r2._crypto_stream_chacha20_ietf_xor(m2, s2, c2, 0, h2, p2)) {
            var x2 = y(v2, _2);
            return g(n2), x2;
          }
          b(n2, "invalid usage");
        }
        function Kr(e3, a3, t2, _2, n2) {
          var s2 = [];
          l(n2);
          var c2 = d(e3 = E(s2, e3, "input_message")), h2 = e3.length;
          s2.push(c2), a3 = E(s2, a3, "nonce");
          var o2, p2 = 0 | r2._crypto_stream_chacha20_ietf_noncebytes();
          a3.length !== p2 && f(s2, "invalid nonce length"), o2 = d(a3), s2.push(o2), m(s2, t2, "nonce_increment"), ("number" != typeof t2 || (0 | t2) !== t2 || t2 < 0) && f(s2, "nonce_increment must be an unsigned integer"), _2 = E(s2, _2, "key");
          var i2, v2 = 0 | r2._crypto_stream_chacha20_ietf_keybytes();
          _2.length !== v2 && f(s2, "invalid key length"), i2 = d(_2), s2.push(i2);
          var x2 = new u(0 | h2), k2 = x2.address;
          if (s2.push(k2), 0 === r2._crypto_stream_chacha20_ietf_xor_ic(k2, c2, h2, 0, o2, t2, i2)) {
            var S2 = y(x2, n2);
            return g(s2), S2;
          }
          b(s2, "invalid usage");
        }
        function Nr(e3) {
          var a3 = [];
          l(e3);
          var t2 = new u(0 | r2._crypto_stream_chacha20_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_stream_chacha20_keygen(_2);
          var n2 = y(t2, e3);
          return g(a3), n2;
        }
        function Lr(e3, a3, t2, _2) {
          var n2 = [];
          l(_2);
          var s2 = d(e3 = E(n2, e3, "input_message")), c2 = e3.length;
          n2.push(s2), a3 = E(n2, a3, "nonce");
          var h2, o2 = 0 | r2._crypto_stream_chacha20_noncebytes();
          a3.length !== o2 && f(n2, "invalid nonce length"), h2 = d(a3), n2.push(h2), t2 = E(n2, t2, "key");
          var p2, i2 = 0 | r2._crypto_stream_chacha20_keybytes();
          t2.length !== i2 && f(n2, "invalid key length"), p2 = d(t2), n2.push(p2);
          var v2 = new u(0 | c2), m2 = v2.address;
          if (n2.push(m2), 0 === r2._crypto_stream_chacha20_xor(m2, s2, c2, 0, h2, p2)) {
            var x2 = y(v2, _2);
            return g(n2), x2;
          }
          b(n2, "invalid usage");
        }
        function Or(e3, a3, t2, _2, n2) {
          var s2 = [];
          l(n2);
          var c2 = d(e3 = E(s2, e3, "input_message")), h2 = e3.length;
          s2.push(c2), a3 = E(s2, a3, "nonce");
          var o2, p2 = 0 | r2._crypto_stream_chacha20_noncebytes();
          a3.length !== p2 && f(s2, "invalid nonce length"), o2 = d(a3), s2.push(o2), m(s2, t2, "nonce_increment"), ("number" != typeof t2 || (0 | t2) !== t2 || t2 < 0) && f(s2, "nonce_increment must be an unsigned integer"), _2 = E(s2, _2, "key");
          var i2, v2 = 0 | r2._crypto_stream_chacha20_keybytes();
          _2.length !== v2 && f(s2, "invalid key length"), i2 = d(_2), s2.push(i2);
          var x2 = new u(0 | h2), k2 = x2.address;
          if (s2.push(k2), 0 === r2._crypto_stream_chacha20_xor_ic(k2, c2, h2, 0, o2, t2, 0, i2)) {
            var S2 = y(x2, n2);
            return g(s2), S2;
          }
          b(s2, "invalid usage");
        }
        function Ur(e3) {
          var a3 = [];
          l(e3);
          var t2 = new u(0 | r2._crypto_stream_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_stream_keygen(_2);
          var n2 = y(t2, e3);
          return g(a3), n2;
        }
        function Cr(e3) {
          var a3 = [];
          l(e3);
          var t2 = new u(0 | r2._crypto_stream_xchacha20_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_stream_xchacha20_keygen(_2);
          var n2 = y(t2, e3);
          return g(a3), n2;
        }
        function Pr(e3, a3, t2, _2) {
          var n2 = [];
          l(_2);
          var s2 = d(e3 = E(n2, e3, "input_message")), c2 = e3.length;
          n2.push(s2), a3 = E(n2, a3, "nonce");
          var h2, o2 = 0 | r2._crypto_stream_xchacha20_noncebytes();
          a3.length !== o2 && f(n2, "invalid nonce length"), h2 = d(a3), n2.push(h2), t2 = E(n2, t2, "key");
          var p2, i2 = 0 | r2._crypto_stream_xchacha20_keybytes();
          t2.length !== i2 && f(n2, "invalid key length"), p2 = d(t2), n2.push(p2);
          var v2 = new u(0 | c2), m2 = v2.address;
          if (n2.push(m2), 0 === r2._crypto_stream_xchacha20_xor(m2, s2, c2, 0, h2, p2)) {
            var x2 = y(v2, _2);
            return g(n2), x2;
          }
          b(n2, "invalid usage");
        }
        function Rr(e3, a3, t2, _2, n2) {
          var s2 = [];
          l(n2);
          var c2 = d(e3 = E(s2, e3, "input_message")), h2 = e3.length;
          s2.push(c2), a3 = E(s2, a3, "nonce");
          var o2, p2 = 0 | r2._crypto_stream_xchacha20_noncebytes();
          a3.length !== p2 && f(s2, "invalid nonce length"), o2 = d(a3), s2.push(o2), m(s2, t2, "nonce_increment"), ("number" != typeof t2 || (0 | t2) !== t2 || t2 < 0) && f(s2, "nonce_increment must be an unsigned integer"), _2 = E(s2, _2, "key");
          var i2, v2 = 0 | r2._crypto_stream_xchacha20_keybytes();
          _2.length !== v2 && f(s2, "invalid key length"), i2 = d(_2), s2.push(i2);
          var x2 = new u(0 | h2), k2 = x2.address;
          if (s2.push(k2), 0 === r2._crypto_stream_xchacha20_xor_ic(k2, c2, h2, 0, o2, t2, 0, i2)) {
            var S2 = y(x2, n2);
            return g(s2), S2;
          }
          b(s2, "invalid usage");
        }
        function Xr(e3, a3) {
          var t2 = [];
          l(a3), m(t2, e3, "length"), ("number" != typeof e3 || (0 | e3) !== e3 || e3 < 0) && f(t2, "length must be an unsigned integer");
          var _2 = new u(0 | e3), n2 = _2.address;
          t2.push(n2), r2._randombytes_buf(n2, e3);
          var s2 = y(_2, a3);
          return g(t2), s2;
        }
        function Gr(e3, a3, t2) {
          var _2 = [];
          l(t2), m(_2, e3, "length"), ("number" != typeof e3 || (0 | e3) !== e3 || e3 < 0) && f(_2, "length must be an unsigned integer"), a3 = E(_2, a3, "seed");
          var n2, s2 = 0 | r2._randombytes_seedbytes();
          a3.length !== s2 && f(_2, "invalid seed length"), n2 = d(a3), _2.push(n2);
          var c2 = new u(0 | e3), h2 = c2.address;
          _2.push(h2), r2._randombytes_buf_deterministic(h2, e3, n2);
          var o2 = y(c2, t2);
          return g(_2), o2;
        }
        function Dr(e3) {
          l(e3), r2._randombytes_close();
        }
        function Fr(e3) {
          l(e3);
          var a3 = r2._randombytes_random() >>> 0;
          return g([]), a3;
        }
        function Vr(e3, a3) {
          var t2 = [];
          l(a3);
          for (var _2 = r2._malloc(24), n2 = 0; n2 < 6; n2++) r2.setValue(_2 + 4 * n2, r2.Runtime.addFunction(e3[["implementation_name", "random", "stir", "uniform", "buf", "close"][n2]]), "i32");
          0 | r2._randombytes_set_implementation(_2) && b(t2, "unsupported implementation"), g(t2);
        }
        function Hr(e3) {
          l(e3), r2._randombytes_stir();
        }
        function Wr(e3, a3) {
          var t2 = [];
          l(a3), m(t2, e3, "upper_bound"), ("number" != typeof e3 || (0 | e3) !== e3 || e3 < 0) && f(t2, "upper_bound must be an unsigned integer");
          var _2 = r2._randombytes_uniform(e3) >>> 0;
          return g(t2), _2;
        }
        function qr() {
          var e3 = r2._sodium_version_string(), a3 = r2.UTF8ToString(e3);
          return g([]), a3;
        }
        return u.prototype.to_Uint8Array = function() {
          var e3 = new Uint8Array(this.length);
          return e3.set(r2.HEAPU8.subarray(this.address, this.address + this.length)), e3;
        }, e2.add = function(e3, a3) {
          if (!(e3 instanceof Uint8Array && a3 instanceof Uint8Array)) throw new TypeError("Only Uint8Array instances can added");
          var r3 = e3.length, t2 = 0, _2 = 0;
          if (a3.length != e3.length) throw new TypeError("Arguments must have the same length");
          for (_2 = 0; _2 < r3; _2++) t2 >>= 8, t2 += e3[_2] + a3[_2], e3[_2] = 255 & t2;
        }, e2.base64_variants = h, e2.compare = function(e3, a3) {
          if (!(e3 instanceof Uint8Array && a3 instanceof Uint8Array)) throw new TypeError("Only Uint8Array instances can be compared");
          if (e3.length !== a3.length) throw new TypeError("Only instances of identical length can be compared");
          for (var r3 = 0, t2 = 1, _2 = e3.length; _2-- > 0; ) r3 |= a3[_2] - e3[_2] >> 8 & t2, t2 &= (a3[_2] ^ e3[_2]) - 1 >> 8;
          return r3 + r3 + t2 - 1;
        }, e2.from_base64 = function(e3, a3) {
          a3 = o(a3);
          var t2, _2 = [], n2 = new u(3 * (e3 = E(_2, e3, "input")).length / 4), s2 = d(e3), c2 = v(4), h2 = v(4);
          return _2.push(s2), _2.push(n2.address), _2.push(n2.result_bin_len_p), _2.push(n2.b64_end_p), 0 !== r2._sodium_base642bin(n2.address, n2.length, s2, e3.length, 0, c2, h2, a3) && b(_2, "invalid input"), r2.getValue(h2, "i32") - s2 !== e3.length && b(_2, "incomplete input"), n2.length = r2.getValue(c2, "i32"), t2 = n2.to_Uint8Array(), g(_2), t2;
        }, e2.from_hex = function(e3) {
          var a3, t2 = [], _2 = new u((e3 = E(t2, e3, "input")).length / 2), n2 = d(e3), s2 = v(4);
          return t2.push(n2), t2.push(_2.address), t2.push(_2.hex_end_p), 0 !== r2._sodium_hex2bin(_2.address, _2.length, n2, e3.length, 0, 0, s2) && b(t2, "invalid input"), r2.getValue(s2, "i32") - n2 !== e3.length && b(t2, "incomplete input"), a3 = _2.to_Uint8Array(), g(t2), a3;
        }, e2.from_string = n, e2.increment = function(e3) {
          if (!(e3 instanceof Uint8Array)) throw new TypeError("Only Uint8Array instances can be incremented");
          for (var a3 = 256, r3 = 0, t2 = e3.length; r3 < t2; r3++) a3 >>= 8, a3 += e3[r3], e3[r3] = 255 & a3;
        }, e2.is_zero = function(e3) {
          if (!(e3 instanceof Uint8Array)) throw new TypeError("Only Uint8Array instances can be checked");
          for (var a3 = 0, r3 = 0, t2 = e3.length; r3 < t2; r3++) a3 |= e3[r3];
          return 0 === a3;
        }, e2.libsodium = a2, e2.memcmp = function(e3, a3) {
          if (!(e3 instanceof Uint8Array && a3 instanceof Uint8Array)) throw new TypeError("Only Uint8Array instances can be compared");
          if (e3.length !== a3.length) throw new TypeError("Only instances of identical length can be compared");
          for (var r3 = 0, t2 = 0, _2 = e3.length; t2 < _2; t2++) r3 |= e3[t2] ^ a3[t2];
          return 0 === r3;
        }, e2.memzero = function(e3) {
          if (!(e3 instanceof Uint8Array)) throw new TypeError("Only Uint8Array instances can be wiped");
          for (var a3 = 0, r3 = e3.length; a3 < r3; a3++) e3[a3] = 0;
        }, e2.output_formats = function() {
          return ["uint8array", "text", "hex", "base64"];
        }, e2.pad = function(e3, a3) {
          if (!(e3 instanceof Uint8Array)) throw new TypeError("buffer must be a Uint8Array");
          if ((a3 |= 0) <= 0) throw new Error("block size must be > 0");
          var t2, _2 = [], n2 = v(4), s2 = 1, c2 = 0, h2 = 0 | e3.length, o2 = new u(h2 + a3);
          _2.push(n2), _2.push(o2.address);
          for (var p2 = o2.address, y2 = o2.address + h2 + a3; p2 < y2; p2++) r2.HEAPU8[p2] = e3[c2], c2 += s2 = 1 & ~((65535 & ((h2 -= s2) >>> 48 | h2 >>> 32 | h2 >>> 16 | h2)) - 1 >> 16);
          return 0 !== r2._sodium_pad(n2, o2.address, e3.length, a3, o2.length) && b(_2, "internal error"), o2.length = r2.getValue(n2, "i32"), t2 = o2.to_Uint8Array(), g(_2), t2;
        }, e2.unpad = function(e3, a3) {
          if (!(e3 instanceof Uint8Array)) throw new TypeError("buffer must be a Uint8Array");
          if ((a3 |= 0) <= 0) throw new Error("block size must be > 0");
          var t2 = [], _2 = d(e3), n2 = v(4);
          return t2.push(_2), t2.push(n2), 0 !== r2._sodium_unpad(n2, _2, e3.length, a3) && b(t2, "unsupported/invalid padding"), e3 = (e3 = new Uint8Array(e3)).subarray(0, r2.getValue(n2, "i32")), g(t2), e3;
        }, e2.ready = _, e2.symbols = function() {
          return Object.keys(e2).sort();
        }, e2.to_base64 = p, e2.to_hex = c, e2.to_string = s, e2;
      }
      var r = "object" == typeof e.sodium && "function" == typeof e.sodium.onload ? e.sodium.onload : null;
      "function" == typeof define && define.amd ? define(["exports", "libsodium"], a) : "object" == typeof exports2 && "string" != typeof exports2.nodeName ? a(exports2, require_libsodium()) : e.sodium = a(e.commonJsStrict = {}, e.libsodium), r && e.sodium.ready.then((function() {
        r(e.sodium);
      }));
    })(exports2);
  }
});

// node_modules/debug/src/common.js
var require_common = __commonJS({
  "node_modules/debug/src/common.js"(exports2, module2) {
    function setup(env) {
      createDebug.debug = createDebug;
      createDebug.default = createDebug;
      createDebug.coerce = coerce;
      createDebug.disable = disable;
      createDebug.enable = enable;
      createDebug.enabled = enabled;
      createDebug.humanize = require_ms();
      createDebug.destroy = destroy;
      Object.keys(env).forEach((key) => {
        createDebug[key] = env[key];
      });
      createDebug.names = [];
      createDebug.skips = [];
      createDebug.formatters = {};
      function selectColor(namespace) {
        let hash = 0;
        for (let i = 0; i < namespace.length; i++) {
          hash = (hash << 5) - hash + namespace.charCodeAt(i);
          hash |= 0;
        }
        return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
      }
      createDebug.selectColor = selectColor;
      function createDebug(namespace) {
        let prevTime;
        let enableOverride = null;
        let namespacesCache;
        let enabledCache;
        function debug(...args) {
          if (!debug.enabled) {
            return;
          }
          const self2 = debug;
          const curr = Number(/* @__PURE__ */ new Date());
          const ms = curr - (prevTime || curr);
          self2.diff = ms;
          self2.prev = prevTime;
          self2.curr = curr;
          prevTime = curr;
          args[0] = createDebug.coerce(args[0]);
          if (typeof args[0] !== "string") {
            args.unshift("%O");
          }
          let index = 0;
          args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {
            if (match === "%%") {
              return "%";
            }
            index++;
            const formatter = createDebug.formatters[format];
            if (typeof formatter === "function") {
              const val = args[index];
              match = formatter.call(self2, val);
              args.splice(index, 1);
              index--;
            }
            return match;
          });
          createDebug.formatArgs.call(self2, args);
          const logFn = self2.log || createDebug.log;
          logFn.apply(self2, args);
        }
        debug.namespace = namespace;
        debug.useColors = createDebug.useColors();
        debug.color = createDebug.selectColor(namespace);
        debug.extend = extend;
        debug.destroy = createDebug.destroy;
        Object.defineProperty(debug, "enabled", {
          enumerable: true,
          configurable: false,
          get: () => {
            if (enableOverride !== null) {
              return enableOverride;
            }
            if (namespacesCache !== createDebug.namespaces) {
              namespacesCache = createDebug.namespaces;
              enabledCache = createDebug.enabled(namespace);
            }
            return enabledCache;
          },
          set: (v) => {
            enableOverride = v;
          }
        });
        if (typeof createDebug.init === "function") {
          createDebug.init(debug);
        }
        return debug;
      }
      function extend(namespace, delimiter) {
        const newDebug = createDebug(this.namespace + (typeof delimiter === "undefined" ? ":" : delimiter) + namespace);
        newDebug.log = this.log;
        return newDebug;
      }
      function enable(namespaces) {
        createDebug.save(namespaces);
        createDebug.namespaces = namespaces;
        createDebug.names = [];
        createDebug.skips = [];
        const split = (typeof namespaces === "string" ? namespaces : "").trim().replace(/\s+/g, ",").split(",").filter(Boolean);
        for (const ns of split) {
          if (ns[0] === "-") {
            createDebug.skips.push(ns.slice(1));
          } else {
            createDebug.names.push(ns);
          }
        }
      }
      function matchesTemplate(search, template) {
        let searchIndex = 0;
        let templateIndex = 0;
        let starIndex = -1;
        let matchIndex = 0;
        while (searchIndex < search.length) {
          if (templateIndex < template.length && (template[templateIndex] === search[searchIndex] || template[templateIndex] === "*")) {
            if (template[templateIndex] === "*") {
              starIndex = templateIndex;
              matchIndex = searchIndex;
              templateIndex++;
            } else {
              searchIndex++;
              templateIndex++;
            }
          } else if (starIndex !== -1) {
            templateIndex = starIndex + 1;
            matchIndex++;
            searchIndex = matchIndex;
          } else {
            return false;
          }
        }
        while (templateIndex < template.length && template[templateIndex] === "*") {
          templateIndex++;
        }
        return templateIndex === template.length;
      }
      function disable() {
        const namespaces = [
          ...createDebug.names,
          ...createDebug.skips.map((namespace) => "-" + namespace)
        ].join(",");
        createDebug.enable("");
        return namespaces;
      }
      function enabled(name3) {
        for (const skip of createDebug.skips) {
          if (matchesTemplate(name3, skip)) {
            return false;
          }
        }
        for (const ns of createDebug.names) {
          if (matchesTemplate(name3, ns)) {
            return true;
          }
        }
        return false;
      }
      function coerce(val) {
        if (val instanceof Error) {
          return val.stack || val.message;
        }
        return val;
      }
      function destroy() {
        console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
      }
      createDebug.enable(createDebug.load());
      return createDebug;
    }
    module2.exports = setup;
  }
});

// node_modules/debug/src/browser.js
var require_browser = __commonJS({
  "node_modules/debug/src/browser.js"(exports2, module2) {
    exports2.formatArgs = formatArgs;
    exports2.save = save;
    exports2.load = load;
    exports2.useColors = useColors;
    exports2.storage = localstorage();
    exports2.destroy = /* @__PURE__ */ (() => {
      let warned = false;
      return () => {
        if (!warned) {
          warned = true;
          console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
        }
      };
    })();
    exports2.colors = [
      "#0000CC",
      "#0000FF",
      "#0033CC",
      "#0033FF",
      "#0066CC",
      "#0066FF",
      "#0099CC",
      "#0099FF",
      "#00CC00",
      "#00CC33",
      "#00CC66",
      "#00CC99",
      "#00CCCC",
      "#00CCFF",
      "#3300CC",
      "#3300FF",
      "#3333CC",
      "#3333FF",
      "#3366CC",
      "#3366FF",
      "#3399CC",
      "#3399FF",
      "#33CC00",
      "#33CC33",
      "#33CC66",
      "#33CC99",
      "#33CCCC",
      "#33CCFF",
      "#6600CC",
      "#6600FF",
      "#6633CC",
      "#6633FF",
      "#66CC00",
      "#66CC33",
      "#9900CC",
      "#9900FF",
      "#9933CC",
      "#9933FF",
      "#99CC00",
      "#99CC33",
      "#CC0000",
      "#CC0033",
      "#CC0066",
      "#CC0099",
      "#CC00CC",
      "#CC00FF",
      "#CC3300",
      "#CC3333",
      "#CC3366",
      "#CC3399",
      "#CC33CC",
      "#CC33FF",
      "#CC6600",
      "#CC6633",
      "#CC9900",
      "#CC9933",
      "#CCCC00",
      "#CCCC33",
      "#FF0000",
      "#FF0033",
      "#FF0066",
      "#FF0099",
      "#FF00CC",
      "#FF00FF",
      "#FF3300",
      "#FF3333",
      "#FF3366",
      "#FF3399",
      "#FF33CC",
      "#FF33FF",
      "#FF6600",
      "#FF6633",
      "#FF9900",
      "#FF9933",
      "#FFCC00",
      "#FFCC33"
    ];
    function useColors() {
      if (typeof window !== "undefined" && window.process && (window.process.type === "renderer" || window.process.__nwjs)) {
        return true;
      }
      if (typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
        return false;
      }
      let m;
      return typeof document !== "undefined" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773
      typeof window !== "undefined" && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?
      // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
      typeof navigator !== "undefined" && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)) && parseInt(m[1], 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker
      typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
    }
    function formatArgs(args) {
      args[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + args[0] + (this.useColors ? "%c " : " ") + "+" + module2.exports.humanize(this.diff);
      if (!this.useColors) {
        return;
      }
      const c = "color: " + this.color;
      args.splice(1, 0, c, "color: inherit");
      let index = 0;
      let lastC = 0;
      args[0].replace(/%[a-zA-Z%]/g, (match) => {
        if (match === "%%") {
          return;
        }
        index++;
        if (match === "%c") {
          lastC = index;
        }
      });
      args.splice(lastC, 0, c);
    }
    exports2.log = console.debug || console.log || (() => {
    });
    function save(namespaces) {
      try {
        if (namespaces) {
          exports2.storage.setItem("debug", namespaces);
        } else {
          exports2.storage.removeItem("debug");
        }
      } catch (error) {
      }
    }
    function load() {
      let r;
      try {
        r = exports2.storage.getItem("debug") || exports2.storage.getItem("DEBUG");
      } catch (error) {
      }
      if (!r && typeof process !== "undefined" && "env" in process) {
        r = process.env.DEBUG;
      }
      return r;
    }
    function localstorage() {
      try {
        return localStorage;
      } catch (error) {
      }
    }
    module2.exports = require_common()(exports2);
    var { formatters } = module2.exports;
    formatters.j = function(v) {
      try {
        return JSON.stringify(v);
      } catch (error) {
        return "[UnexpectedJSONParseError]: " + error.message;
      }
    };
  }
});

// node_modules/has-flag/index.js
var require_has_flag = __commonJS({
  "node_modules/has-flag/index.js"(exports2, module2) {
    "use strict";
    module2.exports = (flag, argv = process.argv) => {
      const prefix = flag.startsWith("-") ? "" : flag.length === 1 ? "-" : "--";
      const position = argv.indexOf(prefix + flag);
      const terminatorPosition = argv.indexOf("--");
      return position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);
    };
  }
});

// node_modules/supports-color/index.js
var require_supports_color = __commonJS({
  "node_modules/supports-color/index.js"(exports2, module2) {
    "use strict";
    var os = require("os");
    var tty = require("tty");
    var hasFlag = require_has_flag();
    var { env } = process;
    var forceColor;
    if (hasFlag("no-color") || hasFlag("no-colors") || hasFlag("color=false") || hasFlag("color=never")) {
      forceColor = 0;
    } else if (hasFlag("color") || hasFlag("colors") || hasFlag("color=true") || hasFlag("color=always")) {
      forceColor = 1;
    }
    if ("FORCE_COLOR" in env) {
      if (env.FORCE_COLOR === "true") {
        forceColor = 1;
      } else if (env.FORCE_COLOR === "false") {
        forceColor = 0;
      } else {
        forceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);
      }
    }
    function translateLevel(level) {
      if (level === 0) {
        return false;
      }
      return {
        level,
        hasBasic: true,
        has256: level >= 2,
        has16m: level >= 3
      };
    }
    function supportsColor(haveStream, streamIsTTY) {
      if (forceColor === 0) {
        return 0;
      }
      if (hasFlag("color=16m") || hasFlag("color=full") || hasFlag("color=truecolor")) {
        return 3;
      }
      if (hasFlag("color=256")) {
        return 2;
      }
      if (haveStream && !streamIsTTY && forceColor === void 0) {
        return 0;
      }
      const min = forceColor || 0;
      if (env.TERM === "dumb") {
        return min;
      }
      if (process.platform === "win32") {
        const osRelease = os.release().split(".");
        if (Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {
          return Number(osRelease[2]) >= 14931 ? 3 : 2;
        }
        return 1;
      }
      if ("CI" in env) {
        if (["TRAVIS", "CIRCLECI", "APPVEYOR", "GITLAB_CI", "GITHUB_ACTIONS", "BUILDKITE"].some((sign) => sign in env) || env.CI_NAME === "codeship") {
          return 1;
        }
        return min;
      }
      if ("TEAMCITY_VERSION" in env) {
        return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;
      }
      if (env.COLORTERM === "truecolor") {
        return 3;
      }
      if ("TERM_PROGRAM" in env) {
        const version3 = parseInt((env.TERM_PROGRAM_VERSION || "").split(".")[0], 10);
        switch (env.TERM_PROGRAM) {
          case "iTerm.app":
            return version3 >= 3 ? 3 : 2;
          case "Apple_Terminal":
            return 2;
        }
      }
      if (/-256(color)?$/i.test(env.TERM)) {
        return 2;
      }
      if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {
        return 1;
      }
      if ("COLORTERM" in env) {
        return 1;
      }
      return min;
    }
    function getSupportLevel(stream) {
      const level = supportsColor(stream, stream && stream.isTTY);
      return translateLevel(level);
    }
    module2.exports = {
      supportsColor: getSupportLevel,
      stdout: translateLevel(supportsColor(true, tty.isatty(1))),
      stderr: translateLevel(supportsColor(true, tty.isatty(2)))
    };
  }
});

// node_modules/debug/src/node.js
var require_node = __commonJS({
  "node_modules/debug/src/node.js"(exports2, module2) {
    var tty = require("tty");
    var util = require("util");
    exports2.init = init;
    exports2.log = log;
    exports2.formatArgs = formatArgs;
    exports2.save = save;
    exports2.load = load;
    exports2.useColors = useColors;
    exports2.destroy = util.deprecate(
      () => {
      },
      "Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."
    );
    exports2.colors = [6, 2, 3, 4, 5, 1];
    try {
      const supportsColor = require_supports_color();
      if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {
        exports2.colors = [
          20,
          21,
          26,
          27,
          32,
          33,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          56,
          57,
          62,
          63,
          68,
          69,
          74,
          75,
          76,
          77,
          78,
          79,
          80,
          81,
          92,
          93,
          98,
          99,
          112,
          113,
          128,
          129,
          134,
          135,
          148,
          149,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          178,
          179,
          184,
          185,
          196,
          197,
          198,
          199,
          200,
          201,
          202,
          203,
          204,
          205,
          206,
          207,
          208,
          209,
          214,
          215,
          220,
          221
        ];
      }
    } catch (error) {
    }
    exports2.inspectOpts = Object.keys(process.env).filter((key) => {
      return /^debug_/i.test(key);
    }).reduce((obj, key) => {
      const prop = key.substring(6).toLowerCase().replace(/_([a-z])/g, (_, k) => {
        return k.toUpperCase();
      });
      let val = process.env[key];
      if (/^(yes|on|true|enabled)$/i.test(val)) {
        val = true;
      } else if (/^(no|off|false|disabled)$/i.test(val)) {
        val = false;
      } else if (val === "null") {
        val = null;
      } else {
        val = Number(val);
      }
      obj[prop] = val;
      return obj;
    }, {});
    function useColors() {
      return "colors" in exports2.inspectOpts ? Boolean(exports2.inspectOpts.colors) : tty.isatty(process.stderr.fd);
    }
    function formatArgs(args) {
      const { namespace: name3, useColors: useColors2 } = this;
      if (useColors2) {
        const c = this.color;
        const colorCode = "\x1B[3" + (c < 8 ? c : "8;5;" + c);
        const prefix = `  ${colorCode};1m${name3} \x1B[0m`;
        args[0] = prefix + args[0].split("\n").join("\n" + prefix);
        args.push(colorCode + "m+" + module2.exports.humanize(this.diff) + "\x1B[0m");
      } else {
        args[0] = getDate() + name3 + " " + args[0];
      }
    }
    function getDate() {
      if (exports2.inspectOpts.hideDate) {
        return "";
      }
      return (/* @__PURE__ */ new Date()).toISOString() + " ";
    }
    function log(...args) {
      return process.stderr.write(util.formatWithOptions(exports2.inspectOpts, ...args) + "\n");
    }
    function save(namespaces) {
      if (namespaces) {
        process.env.DEBUG = namespaces;
      } else {
        delete process.env.DEBUG;
      }
    }
    function load() {
      return process.env.DEBUG;
    }
    function init(debug) {
      debug.inspectOpts = {};
      const keys = Object.keys(exports2.inspectOpts);
      for (let i = 0; i < keys.length; i++) {
        debug.inspectOpts[keys[i]] = exports2.inspectOpts[keys[i]];
      }
    }
    module2.exports = require_common()(exports2);
    var { formatters } = module2.exports;
    formatters.o = function(v) {
      this.inspectOpts.colors = this.useColors;
      return util.inspect(v, this.inspectOpts).split("\n").map((str) => str.trim()).join(" ");
    };
    formatters.O = function(v) {
      this.inspectOpts.colors = this.useColors;
      return util.inspect(v, this.inspectOpts);
    };
  }
});

// node_modules/debug/src/index.js
var require_src = __commonJS({
  "node_modules/debug/src/index.js"(exports2, module2) {
    if (typeof process === "undefined" || process.type === "renderer" || process.browser === true || process.__nwjs) {
      module2.exports = require_browser();
    } else {
      module2.exports = require_node();
    }
  }
});

// node_modules/agent-base/dist/helpers.js
var require_helpers = __commonJS({
  "node_modules/agent-base/dist/helpers.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? (function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    }));
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? (function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.req = exports2.json = exports2.toBuffer = void 0;
    var http2 = __importStar(require("http"));
    var https2 = __importStar(require("https"));
    async function toBuffer(stream) {
      let length = 0;
      const chunks = [];
      for await (const chunk of stream) {
        length += chunk.length;
        chunks.push(chunk);
      }
      return Buffer.concat(chunks, length);
    }
    exports2.toBuffer = toBuffer;
    async function json(stream) {
      const buf = await toBuffer(stream);
      const str = buf.toString("utf8");
      try {
        return JSON.parse(str);
      } catch (_err) {
        const err = _err;
        err.message += ` (input: ${str})`;
        throw err;
      }
    }
    exports2.json = json;
    function req(url, opts = {}) {
      const href = typeof url === "string" ? url : url.href;
      const req2 = (href.startsWith("https:") ? https2 : http2).request(url, opts);
      const promise = new Promise((resolve, reject) => {
        req2.once("response", resolve).once("error", reject).end();
      });
      req2.then = promise.then.bind(promise);
      return req2;
    }
    exports2.req = req;
  }
});

// node_modules/agent-base/dist/index.js
var require_dist = __commonJS({
  "node_modules/agent-base/dist/index.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? (function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    }));
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? (function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    var __exportStar = exports2 && exports2.__exportStar || function(m, exports3) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports3, p)) __createBinding(exports3, m, p);
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.Agent = void 0;
    var net = __importStar(require("net"));
    var http2 = __importStar(require("http"));
    var https_1 = require("https");
    __exportStar(require_helpers(), exports2);
    var INTERNAL = Symbol("AgentBaseInternalState");
    var Agent = class extends http2.Agent {
      constructor(opts) {
        super(opts);
        this[INTERNAL] = {};
      }
      /**
       * Determine whether this is an `http` or `https` request.
       */
      isSecureEndpoint(options) {
        if (options) {
          if (typeof options.secureEndpoint === "boolean") {
            return options.secureEndpoint;
          }
          if (typeof options.protocol === "string") {
            return options.protocol === "https:";
          }
        }
        const { stack } = new Error();
        if (typeof stack !== "string")
          return false;
        return stack.split("\n").some((l) => l.indexOf("(https.js:") !== -1 || l.indexOf("node:https:") !== -1);
      }
      // In order to support async signatures in `connect()` and Node's native
      // connection pooling in `http.Agent`, the array of sockets for each origin
      // has to be updated synchronously. This is so the length of the array is
      // accurate when `addRequest()` is next called. We achieve this by creating a
      // fake socket and adding it to `sockets[origin]` and incrementing
      // `totalSocketCount`.
      incrementSockets(name3) {
        if (this.maxSockets === Infinity && this.maxTotalSockets === Infinity) {
          return null;
        }
        if (!this.sockets[name3]) {
          this.sockets[name3] = [];
        }
        const fakeSocket = new net.Socket({ writable: false });
        this.sockets[name3].push(fakeSocket);
        this.totalSocketCount++;
        return fakeSocket;
      }
      decrementSockets(name3, socket) {
        if (!this.sockets[name3] || socket === null) {
          return;
        }
        const sockets = this.sockets[name3];
        const index = sockets.indexOf(socket);
        if (index !== -1) {
          sockets.splice(index, 1);
          this.totalSocketCount--;
          if (sockets.length === 0) {
            delete this.sockets[name3];
          }
        }
      }
      // In order to properly update the socket pool, we need to call `getName()` on
      // the core `https.Agent` if it is a secureEndpoint.
      getName(options) {
        const secureEndpoint = this.isSecureEndpoint(options);
        if (secureEndpoint) {
          return https_1.Agent.prototype.getName.call(this, options);
        }
        return super.getName(options);
      }
      createSocket(req, options, cb) {
        const connectOpts = {
          ...options,
          secureEndpoint: this.isSecureEndpoint(options)
        };
        const name3 = this.getName(connectOpts);
        const fakeSocket = this.incrementSockets(name3);
        Promise.resolve().then(() => this.connect(req, connectOpts)).then((socket) => {
          this.decrementSockets(name3, fakeSocket);
          if (socket instanceof http2.Agent) {
            try {
              return socket.addRequest(req, connectOpts);
            } catch (err) {
              return cb(err);
            }
          }
          this[INTERNAL].currentSocket = socket;
          super.createSocket(req, options, cb);
        }, (err) => {
          this.decrementSockets(name3, fakeSocket);
          cb(err);
        });
      }
      createConnection() {
        const socket = this[INTERNAL].currentSocket;
        this[INTERNAL].currentSocket = void 0;
        if (!socket) {
          throw new Error("No socket was returned in the `connect()` function");
        }
        return socket;
      }
      get defaultPort() {
        return this[INTERNAL].defaultPort ?? (this.protocol === "https:" ? 443 : 80);
      }
      set defaultPort(v) {
        if (this[INTERNAL]) {
          this[INTERNAL].defaultPort = v;
        }
      }
      get protocol() {
        return this[INTERNAL].protocol ?? (this.isSecureEndpoint() ? "https:" : "http:");
      }
      set protocol(v) {
        if (this[INTERNAL]) {
          this[INTERNAL].protocol = v;
        }
      }
    };
    exports2.Agent = Agent;
  }
});

// node_modules/https-proxy-agent/dist/parse-proxy-response.js
var require_parse_proxy_response = __commonJS({
  "node_modules/https-proxy-agent/dist/parse-proxy-response.js"(exports2) {
    "use strict";
    var __importDefault = exports2 && exports2.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.parseProxyResponse = void 0;
    var debug_1 = __importDefault(require_src());
    var debug = (0, debug_1.default)("https-proxy-agent:parse-proxy-response");
    function parseProxyResponse(socket) {
      return new Promise((resolve, reject) => {
        let buffersLength = 0;
        const buffers = [];
        function read() {
          const b = socket.read();
          if (b)
            ondata(b);
          else
            socket.once("readable", read);
        }
        function cleanup() {
          socket.removeListener("end", onend);
          socket.removeListener("error", onerror);
          socket.removeListener("readable", read);
        }
        function onend() {
          cleanup();
          debug("onend");
          reject(new Error("Proxy connection ended before receiving CONNECT response"));
        }
        function onerror(err) {
          cleanup();
          debug("onerror %o", err);
          reject(err);
        }
        function ondata(b) {
          buffers.push(b);
          buffersLength += b.length;
          const buffered = Buffer.concat(buffers, buffersLength);
          const endOfHeaders = buffered.indexOf("\r\n\r\n");
          if (endOfHeaders === -1) {
            debug("have not received end of HTTP headers yet...");
            read();
            return;
          }
          const headerParts = buffered.slice(0, endOfHeaders).toString("ascii").split("\r\n");
          const firstLine = headerParts.shift();
          if (!firstLine) {
            socket.destroy();
            return reject(new Error("No header received from proxy CONNECT response"));
          }
          const firstLineParts = firstLine.split(" ");
          const statusCode = +firstLineParts[1];
          const statusText = firstLineParts.slice(2).join(" ");
          const headers = {};
          for (const header of headerParts) {
            if (!header)
              continue;
            const firstColon = header.indexOf(":");
            if (firstColon === -1) {
              socket.destroy();
              return reject(new Error(`Invalid header from proxy CONNECT response: "${header}"`));
            }
            const key = header.slice(0, firstColon).toLowerCase();
            const value = header.slice(firstColon + 1).trimStart();
            const current = headers[key];
            if (typeof current === "string") {
              headers[key] = [current, value];
            } else if (Array.isArray(current)) {
              current.push(value);
            } else {
              headers[key] = value;
            }
          }
          debug("got proxy server response: %o %o", firstLine, headers);
          cleanup();
          resolve({
            connect: {
              statusCode,
              statusText,
              headers
            },
            buffered
          });
        }
        socket.on("error", onerror);
        socket.on("end", onend);
        read();
      });
    }
    exports2.parseProxyResponse = parseProxyResponse;
  }
});

// node_modules/https-proxy-agent/dist/index.js
var require_dist2 = __commonJS({
  "node_modules/https-proxy-agent/dist/index.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? (function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    }));
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? (function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    var __importDefault = exports2 && exports2.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.HttpsProxyAgent = void 0;
    var net = __importStar(require("net"));
    var tls = __importStar(require("tls"));
    var assert_1 = __importDefault(require("assert"));
    var debug_1 = __importDefault(require_src());
    var agent_base_1 = require_dist();
    var url_1 = require("url");
    var parse_proxy_response_1 = require_parse_proxy_response();
    var debug = (0, debug_1.default)("https-proxy-agent");
    var setServernameFromNonIpHost = (options) => {
      if (options.servername === void 0 && options.host && !net.isIP(options.host)) {
        return {
          ...options,
          servername: options.host
        };
      }
      return options;
    };
    var HttpsProxyAgent2 = class extends agent_base_1.Agent {
      constructor(proxy, opts) {
        super(opts);
        this.options = { path: void 0 };
        this.proxy = typeof proxy === "string" ? new url_1.URL(proxy) : proxy;
        this.proxyHeaders = opts?.headers ?? {};
        debug("Creating new HttpsProxyAgent instance: %o", this.proxy.href);
        const host = (this.proxy.hostname || this.proxy.host).replace(/^\[|\]$/g, "");
        const port = this.proxy.port ? parseInt(this.proxy.port, 10) : this.proxy.protocol === "https:" ? 443 : 80;
        this.connectOpts = {
          // Attempt to negotiate http/1.1 for proxy servers that support http/2
          ALPNProtocols: ["http/1.1"],
          ...opts ? omit2(opts, "headers") : null,
          host,
          port
        };
      }
      /**
       * Called when the node-core HTTP client library is creating a
       * new HTTP request.
       */
      async connect(req, opts) {
        const { proxy } = this;
        if (!opts.host) {
          throw new TypeError('No "host" provided');
        }
        let socket;
        if (proxy.protocol === "https:") {
          debug("Creating `tls.Socket`: %o", this.connectOpts);
          socket = tls.connect(setServernameFromNonIpHost(this.connectOpts));
        } else {
          debug("Creating `net.Socket`: %o", this.connectOpts);
          socket = net.connect(this.connectOpts);
        }
        const headers = typeof this.proxyHeaders === "function" ? this.proxyHeaders() : { ...this.proxyHeaders };
        const host = net.isIPv6(opts.host) ? `[${opts.host}]` : opts.host;
        let payload = `CONNECT ${host}:${opts.port} HTTP/1.1\r
`;
        if (proxy.username || proxy.password) {
          const auth2 = `${decodeURIComponent(proxy.username)}:${decodeURIComponent(proxy.password)}`;
          headers["Proxy-Authorization"] = `Basic ${Buffer.from(auth2).toString("base64")}`;
        }
        headers.Host = `${host}:${opts.port}`;
        if (!headers["Proxy-Connection"]) {
          headers["Proxy-Connection"] = this.keepAlive ? "Keep-Alive" : "close";
        }
        for (const name3 of Object.keys(headers)) {
          payload += `${name3}: ${headers[name3]}\r
`;
        }
        const proxyResponsePromise = (0, parse_proxy_response_1.parseProxyResponse)(socket);
        socket.write(`${payload}\r
`);
        const { connect, buffered } = await proxyResponsePromise;
        req.emit("proxyConnect", connect);
        this.emit("proxyConnect", connect, req);
        if (connect.statusCode === 200) {
          req.once("socket", resume);
          if (opts.secureEndpoint) {
            debug("Upgrading socket connection to TLS");
            return tls.connect({
              ...omit2(setServernameFromNonIpHost(opts), "host", "path", "port"),
              socket
            });
          }
          return socket;
        }
        socket.destroy();
        const fakeSocket = new net.Socket({ writable: false });
        fakeSocket.readable = true;
        req.once("socket", (s) => {
          debug("Replaying proxy buffer for failed request");
          (0, assert_1.default)(s.listenerCount("data") > 0);
          s.push(buffered);
          s.push(null);
        });
        return fakeSocket;
      }
    };
    HttpsProxyAgent2.protocols = ["http", "https"];
    exports2.HttpsProxyAgent = HttpsProxyAgent2;
    function resume(socket) {
      socket.resume();
    }
    function omit2(obj, ...keys) {
      const ret = {};
      let key;
      for (key in obj) {
        if (!keys.includes(key)) {
          ret[key] = obj[key];
        }
      }
      return ret;
    }
  }
});

// node_modules/http-proxy-agent/dist/index.js
var require_dist3 = __commonJS({
  "node_modules/http-proxy-agent/dist/index.js"(exports2) {
    "use strict";
    var __createBinding = exports2 && exports2.__createBinding || (Object.create ? (function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    }));
    var __setModuleDefault = exports2 && exports2.__setModuleDefault || (Object.create ? (function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports2 && exports2.__importStar || function(mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    var __importDefault = exports2 && exports2.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.HttpProxyAgent = void 0;
    var net = __importStar(require("net"));
    var tls = __importStar(require("tls"));
    var debug_1 = __importDefault(require_src());
    var events_1 = require("events");
    var agent_base_1 = require_dist();
    var url_1 = require("url");
    var debug = (0, debug_1.default)("http-proxy-agent");
    var HttpProxyAgent2 = class extends agent_base_1.Agent {
      constructor(proxy, opts) {
        super(opts);
        this.proxy = typeof proxy === "string" ? new url_1.URL(proxy) : proxy;
        this.proxyHeaders = opts?.headers ?? {};
        debug("Creating new HttpProxyAgent instance: %o", this.proxy.href);
        const host = (this.proxy.hostname || this.proxy.host).replace(/^\[|\]$/g, "");
        const port = this.proxy.port ? parseInt(this.proxy.port, 10) : this.proxy.protocol === "https:" ? 443 : 80;
        this.connectOpts = {
          ...opts ? omit2(opts, "headers") : null,
          host,
          port
        };
      }
      addRequest(req, opts) {
        req._header = null;
        this.setRequestProps(req, opts);
        super.addRequest(req, opts);
      }
      setRequestProps(req, opts) {
        const { proxy } = this;
        const protocol = opts.secureEndpoint ? "https:" : "http:";
        const hostname = req.getHeader("host") || "localhost";
        const base = `${protocol}//${hostname}`;
        const url = new url_1.URL(req.path, base);
        if (opts.port !== 80) {
          url.port = String(opts.port);
        }
        req.path = String(url);
        const headers = typeof this.proxyHeaders === "function" ? this.proxyHeaders() : { ...this.proxyHeaders };
        if (proxy.username || proxy.password) {
          const auth2 = `${decodeURIComponent(proxy.username)}:${decodeURIComponent(proxy.password)}`;
          headers["Proxy-Authorization"] = `Basic ${Buffer.from(auth2).toString("base64")}`;
        }
        if (!headers["Proxy-Connection"]) {
          headers["Proxy-Connection"] = this.keepAlive ? "Keep-Alive" : "close";
        }
        for (const name3 of Object.keys(headers)) {
          const value = headers[name3];
          if (value) {
            req.setHeader(name3, value);
          }
        }
      }
      async connect(req, opts) {
        req._header = null;
        if (!req.path.includes("://")) {
          this.setRequestProps(req, opts);
        }
        let first;
        let endOfHeaders;
        debug("Regenerating stored HTTP header string for request");
        req._implicitHeader();
        if (req.outputData && req.outputData.length > 0) {
          debug("Patching connection write() output buffer with updated header");
          first = req.outputData[0].data;
          endOfHeaders = first.indexOf("\r\n\r\n") + 4;
          req.outputData[0].data = req._header + first.substring(endOfHeaders);
          debug("Output buffer: %o", req.outputData[0].data);
        }
        let socket;
        if (this.proxy.protocol === "https:") {
          debug("Creating `tls.Socket`: %o", this.connectOpts);
          socket = tls.connect(this.connectOpts);
        } else {
          debug("Creating `net.Socket`: %o", this.connectOpts);
          socket = net.connect(this.connectOpts);
        }
        await (0, events_1.once)(socket, "connect");
        return socket;
      }
    };
    HttpProxyAgent2.protocols = ["http", "https"];
    exports2.HttpProxyAgent = HttpProxyAgent2;
    function omit2(obj, ...keys) {
      const ret = {};
      let key;
      for (key in obj) {
        if (!keys.includes(key)) {
          ret[key] = obj[key];
        }
      }
      return ret;
    }
  }
});

// node_modules/webidl-conversions/lib/index.js
var require_lib2 = __commonJS({
  "node_modules/webidl-conversions/lib/index.js"(exports2, module2) {
    "use strict";
    var conversions = {};
    module2.exports = conversions;
    function sign(x) {
      return x < 0 ? -1 : 1;
    }
    function evenRound(x) {
      if (x % 1 === 0.5 && (x & 1) === 0) {
        return Math.floor(x);
      } else {
        return Math.round(x);
      }
    }
    function createNumberConversion(bitLength, typeOpts) {
      if (!typeOpts.unsigned) {
        --bitLength;
      }
      const lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);
      const upperBound = Math.pow(2, bitLength) - 1;
      const moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);
      const moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);
      return function(V, opts) {
        if (!opts) opts = {};
        let x = +V;
        if (opts.enforceRange) {
          if (!Number.isFinite(x)) {
            throw new TypeError("Argument is not a finite number");
          }
          x = sign(x) * Math.floor(Math.abs(x));
          if (x < lowerBound || x > upperBound) {
            throw new TypeError("Argument is not in byte range");
          }
          return x;
        }
        if (!isNaN(x) && opts.clamp) {
          x = evenRound(x);
          if (x < lowerBound) x = lowerBound;
          if (x > upperBound) x = upperBound;
          return x;
        }
        if (!Number.isFinite(x) || x === 0) {
          return 0;
        }
        x = sign(x) * Math.floor(Math.abs(x));
        x = x % moduloVal;
        if (!typeOpts.unsigned && x >= moduloBound) {
          return x - moduloVal;
        } else if (typeOpts.unsigned) {
          if (x < 0) {
            x += moduloVal;
          } else if (x === -0) {
            return 0;
          }
        }
        return x;
      };
    }
    conversions["void"] = function() {
      return void 0;
    };
    conversions["boolean"] = function(val) {
      return !!val;
    };
    conversions["byte"] = createNumberConversion(8, { unsigned: false });
    conversions["octet"] = createNumberConversion(8, { unsigned: true });
    conversions["short"] = createNumberConversion(16, { unsigned: false });
    conversions["unsigned short"] = createNumberConversion(16, { unsigned: true });
    conversions["long"] = createNumberConversion(32, { unsigned: false });
    conversions["unsigned long"] = createNumberConversion(32, { unsigned: true });
    conversions["long long"] = createNumberConversion(32, { unsigned: false, moduloBitLength: 64 });
    conversions["unsigned long long"] = createNumberConversion(32, { unsigned: true, moduloBitLength: 64 });
    conversions["double"] = function(V) {
      const x = +V;
      if (!Number.isFinite(x)) {
        throw new TypeError("Argument is not a finite floating-point value");
      }
      return x;
    };
    conversions["unrestricted double"] = function(V) {
      const x = +V;
      if (isNaN(x)) {
        throw new TypeError("Argument is NaN");
      }
      return x;
    };
    conversions["float"] = conversions["double"];
    conversions["unrestricted float"] = conversions["unrestricted double"];
    conversions["DOMString"] = function(V, opts) {
      if (!opts) opts = {};
      if (opts.treatNullAsEmptyString && V === null) {
        return "";
      }
      return String(V);
    };
    conversions["ByteString"] = function(V, opts) {
      const x = String(V);
      let c = void 0;
      for (let i = 0; (c = x.codePointAt(i)) !== void 0; ++i) {
        if (c > 255) {
          throw new TypeError("Argument is not a valid bytestring");
        }
      }
      return x;
    };
    conversions["USVString"] = function(V) {
      const S = String(V);
      const n = S.length;
      const U = [];
      for (let i = 0; i < n; ++i) {
        const c = S.charCodeAt(i);
        if (c < 55296 || c > 57343) {
          U.push(String.fromCodePoint(c));
        } else if (56320 <= c && c <= 57343) {
          U.push(String.fromCodePoint(65533));
        } else {
          if (i === n - 1) {
            U.push(String.fromCodePoint(65533));
          } else {
            const d = S.charCodeAt(i + 1);
            if (56320 <= d && d <= 57343) {
              const a = c & 1023;
              const b = d & 1023;
              U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));
              ++i;
            } else {
              U.push(String.fromCodePoint(65533));
            }
          }
        }
      }
      return U.join("");
    };
    conversions["Date"] = function(V, opts) {
      if (!(V instanceof Date)) {
        throw new TypeError("Argument is not a Date object");
      }
      if (isNaN(V)) {
        return void 0;
      }
      return V;
    };
    conversions["RegExp"] = function(V, opts) {
      if (!(V instanceof RegExp)) {
        V = new RegExp(V);
      }
      return V;
    };
  }
});

// node_modules/whatwg-url/lib/utils.js
var require_utils3 = __commonJS({
  "node_modules/whatwg-url/lib/utils.js"(exports2, module2) {
    "use strict";
    module2.exports.mixin = function mixin(target, source) {
      const keys = Object.getOwnPropertyNames(source);
      for (let i = 0; i < keys.length; ++i) {
        Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));
      }
    };
    module2.exports.wrapperSymbol = Symbol("wrapper");
    module2.exports.implSymbol = Symbol("impl");
    module2.exports.wrapperForImpl = function(impl) {
      return impl[module2.exports.wrapperSymbol];
    };
    module2.exports.implForWrapper = function(wrapper) {
      return wrapper[module2.exports.implSymbol];
    };
  }
});

// node_modules/tr46/lib/mappingTable.json
var require_mappingTable = __commonJS({
  "node_modules/tr46/lib/mappingTable.json"(exports2, module2) {
    module2.exports = [[[0, 44], "disallowed_STD3_valid"], [[45, 46], "valid"], [[47, 47], "disallowed_STD3_valid"], [[48, 57], "valid"], [[58, 64], "disallowed_STD3_valid"], [[65, 65], "mapped", [97]], [[66, 66], "mapped", [98]], [[67, 67], "mapped", [99]], [[68, 68], "mapped", [100]], [[69, 69], "mapped", [101]], [[70, 70], "mapped", [102]], [[71, 71], "mapped", [103]], [[72, 72], "mapped", [104]], [[73, 73], "mapped", [105]], [[74, 74], "mapped", [106]], [[75, 75], "mapped", [107]], [[76, 76], "mapped", [108]], [[77, 77], "mapped", [109]], [[78, 78], "mapped", [110]], [[79, 79], "mapped", [111]], [[80, 80], "mapped", [112]], [[81, 81], "mapped", [113]], [[82, 82], "mapped", [114]], [[83, 83], "mapped", [115]], [[84, 84], "mapped", [116]], [[85, 85], "mapped", [117]], [[86, 86], "mapped", [118]], [[87, 87], "mapped", [119]], [[88, 88], "mapped", [120]], [[89, 89], "mapped", [121]], [[90, 90], "mapped", [122]], [[91, 96], "disallowed_STD3_valid"], [[97, 122], "valid"], [[123, 127], "disallowed_STD3_valid"], [[128, 159], "disallowed"], [[160, 160], "disallowed_STD3_mapped", [32]], [[161, 167], "valid", [], "NV8"], [[168, 168], "disallowed_STD3_mapped", [32, 776]], [[169, 169], "valid", [], "NV8"], [[170, 170], "mapped", [97]], [[171, 172], "valid", [], "NV8"], [[173, 173], "ignored"], [[174, 174], "valid", [], "NV8"], [[175, 175], "disallowed_STD3_mapped", [32, 772]], [[176, 177], "valid", [], "NV8"], [[178, 178], "mapped", [50]], [[179, 179], "mapped", [51]], [[180, 180], "disallowed_STD3_mapped", [32, 769]], [[181, 181], "mapped", [956]], [[182, 182], "valid", [], "NV8"], [[183, 183], "valid"], [[184, 184], "disallowed_STD3_mapped", [32, 807]], [[185, 185], "mapped", [49]], [[186, 186], "mapped", [111]], [[187, 187], "valid", [], "NV8"], [[188, 188], "mapped", [49, 8260, 52]], [[189, 189], "mapped", [49, 8260, 50]], [[190, 190], "mapped", [51, 8260, 52]], [[191, 191], "valid", [], "NV8"], [[192, 192], "mapped", [224]], [[193, 193], "mapped", [225]], [[194, 194], "mapped", [226]], [[195, 195], "mapped", [227]], [[196, 196], "mapped", [228]], [[197, 197], "mapped", [229]], [[198, 198], "mapped", [230]], [[199, 199], "mapped", [231]], [[200, 200], "mapped", [232]], [[201, 201], "mapped", [233]], [[202, 202], "mapped", [234]], [[203, 203], "mapped", [235]], [[204, 204], "mapped", [236]], [[205, 205], "mapped", [237]], [[206, 206], "mapped", [238]], [[207, 207], "mapped", [239]], [[208, 208], "mapped", [240]], [[209, 209], "mapped", [241]], [[210, 210], "mapped", [242]], [[211, 211], "mapped", [243]], [[212, 212], "mapped", [244]], [[213, 213], "mapped", [245]], [[214, 214], "mapped", [246]], [[215, 215], "valid", [], "NV8"], [[216, 216], "mapped", [248]], [[217, 217], "mapped", [249]], [[218, 218], "mapped", [250]], [[219, 219], "mapped", [251]], [[220, 220], "mapped", [252]], [[221, 221], "mapped", [253]], [[222, 222], "mapped", [254]], [[223, 223], "deviation", [115, 115]], [[224, 246], "valid"], [[247, 247], "valid", [], "NV8"], [[248, 255], "valid"], [[256, 256], "mapped", [257]], [[257, 257], "valid"], [[258, 258], "mapped", [259]], [[259, 259], "valid"], [[260, 260], "mapped", [261]], [[261, 261], "valid"], [[262, 262], "mapped", [263]], [[263, 263], "valid"], [[264, 264], "mapped", [265]], [[265, 265], "valid"], [[266, 266], "mapped", [267]], [[267, 267], "valid"], [[268, 268], "mapped", [269]], [[269, 269], "valid"], [[270, 270], "mapped", [271]], [[271, 271], "valid"], [[272, 272], "mapped", [273]], [[273, 273], "valid"], [[274, 274], "mapped", [275]], [[275, 275], "valid"], [[276, 276], "mapped", [277]], [[277, 277], "valid"], [[278, 278], "mapped", [279]], [[279, 279], "valid"], [[280, 280], "mapped", [281]], [[281, 281], "valid"], [[282, 282], "mapped", [283]], [[283, 283], "valid"], [[284, 284], "mapped", [285]], [[285, 285], "valid"], [[286, 286], "mapped", [287]], [[287, 287], "valid"], [[288, 288], "mapped", [289]], [[289, 289], "valid"], [[290, 290], "mapped", [291]], [[291, 291], "valid"], [[292, 292], "mapped", [293]], [[293, 293], "valid"], [[294, 294], "mapped", [295]], [[295, 295], "valid"], [[296, 296], "mapped", [297]], [[297, 297], "valid"], [[298, 298], "mapped", [299]], [[299, 299], "valid"], [[300, 300], "mapped", [301]], [[301, 301], "valid"], [[302, 302], "mapped", [303]], [[303, 303], "valid"], [[304, 304], "mapped", [105, 775]], [[305, 305], "valid"], [[306, 307], "mapped", [105, 106]], [[308, 308], "mapped", [309]], [[309, 309], "valid"], [[310, 310], "mapped", [311]], [[311, 312], "valid"], [[313, 313], "mapped", [314]], [[314, 314], "valid"], [[315, 315], "mapped", [316]], [[316, 316], "valid"], [[317, 317], "mapped", [318]], [[318, 318], "valid"], [[319, 320], "mapped", [108, 183]], [[321, 321], "mapped", [322]], [[322, 322], "valid"], [[323, 323], "mapped", [324]], [[324, 324], "valid"], [[325, 325], "mapped", [326]], [[326, 326], "valid"], [[327, 327], "mapped", [328]], [[328, 328], "valid"], [[329, 329], "mapped", [700, 110]], [[330, 330], "mapped", [331]], [[331, 331], "valid"], [[332, 332], "mapped", [333]], [[333, 333], "valid"], [[334, 334], "mapped", [335]], [[335, 335], "valid"], [[336, 336], "mapped", [337]], [[337, 337], "valid"], [[338, 338], "mapped", [339]], [[339, 339], "valid"], [[340, 340], "mapped", [341]], [[341, 341], "valid"], [[342, 342], "mapped", [343]], [[343, 343], "valid"], [[344, 344], "mapped", [345]], [[345, 345], "valid"], [[346, 346], "mapped", [347]], [[347, 347], "valid"], [[348, 348], "mapped", [349]], [[349, 349], "valid"], [[350, 350], "mapped", [351]], [[351, 351], "valid"], [[352, 352], "mapped", [353]], [[353, 353], "valid"], [[354, 354], "mapped", [355]], [[355, 355], "valid"], [[356, 356], "mapped", [357]], [[357, 357], "valid"], [[358, 358], "mapped", [359]], [[359, 359], "valid"], [[360, 360], "mapped", [361]], [[361, 361], "valid"], [[362, 362], "mapped", [363]], [[363, 363], "valid"], [[364, 364], "mapped", [365]], [[365, 365], "valid"], [[366, 366], "mapped", [367]], [[367, 367], "valid"], [[368, 368], "mapped", [369]], [[369, 369], "valid"], [[370, 370], "mapped", [371]], [[371, 371], "valid"], [[372, 372], "mapped", [373]], [[373, 373], "valid"], [[374, 374], "mapped", [375]], [[375, 375], "valid"], [[376, 376], "mapped", [255]], [[377, 377], "mapped", [378]], [[378, 378], "valid"], [[379, 379], "mapped", [380]], [[380, 380], "valid"], [[381, 381], "mapped", [382]], [[382, 382], "valid"], [[383, 383], "mapped", [115]], [[384, 384], "valid"], [[385, 385], "mapped", [595]], [[386, 386], "mapped", [387]], [[387, 387], "valid"], [[388, 388], "mapped", [389]], [[389, 389], "valid"], [[390, 390], "mapped", [596]], [[391, 391], "mapped", [392]], [[392, 392], "valid"], [[393, 393], "mapped", [598]], [[394, 394], "mapped", [599]], [[395, 395], "mapped", [396]], [[396, 397], "valid"], [[398, 398], "mapped", [477]], [[399, 399], "mapped", [601]], [[400, 400], "mapped", [603]], [[401, 401], "mapped", [402]], [[402, 402], "valid"], [[403, 403], "mapped", [608]], [[404, 404], "mapped", [611]], [[405, 405], "valid"], [[406, 406], "mapped", [617]], [[407, 407], "mapped", [616]], [[408, 408], "mapped", [409]], [[409, 411], "valid"], [[412, 412], "mapped", [623]], [[413, 413], "mapped", [626]], [[414, 414], "valid"], [[415, 415], "mapped", [629]], [[416, 416], "mapped", [417]], [[417, 417], "valid"], [[418, 418], "mapped", [419]], [[419, 419], "valid"], [[420, 420], "mapped", [421]], [[421, 421], "valid"], [[422, 422], "mapped", [640]], [[423, 423], "mapped", [424]], [[424, 424], "valid"], [[425, 425], "mapped", [643]], [[426, 427], "valid"], [[428, 428], "mapped", [429]], [[429, 429], "valid"], [[430, 430], "mapped", [648]], [[431, 431], "mapped", [432]], [[432, 432], "valid"], [[433, 433], "mapped", [650]], [[434, 434], "mapped", [651]], [[435, 435], "mapped", [436]], [[436, 436], "valid"], [[437, 437], "mapped", [438]], [[438, 438], "valid"], [[439, 439], "mapped", [658]], [[440, 440], "mapped", [441]], [[441, 443], "valid"], [[444, 444], "mapped", [445]], [[445, 451], "valid"], [[452, 454], "mapped", [100, 382]], [[455, 457], "mapped", [108, 106]], [[458, 460], "mapped", [110, 106]], [[461, 461], "mapped", [462]], [[462, 462], "valid"], [[463, 463], "mapped", [464]], [[464, 464], "valid"], [[465, 465], "mapped", [466]], [[466, 466], "valid"], [[467, 467], "mapped", [468]], [[468, 468], "valid"], [[469, 469], "mapped", [470]], [[470, 470], "valid"], [[471, 471], "mapped", [472]], [[472, 472], "valid"], [[473, 473], "mapped", [474]], [[474, 474], "valid"], [[475, 475], "mapped", [476]], [[476, 477], "valid"], [[478, 478], "mapped", [479]], [[479, 479], "valid"], [[480, 480], "mapped", [481]], [[481, 481], "valid"], [[482, 482], "mapped", [483]], [[483, 483], "valid"], [[484, 484], "mapped", [485]], [[485, 485], "valid"], [[486, 486], "mapped", [487]], [[487, 487], "valid"], [[488, 488], "mapped", [489]], [[489, 489], "valid"], [[490, 490], "mapped", [491]], [[491, 491], "valid"], [[492, 492], "mapped", [493]], [[493, 493], "valid"], [[494, 494], "mapped", [495]], [[495, 496], "valid"], [[497, 499], "mapped", [100, 122]], [[500, 500], "mapped", [501]], [[501, 501], "valid"], [[502, 502], "mapped", [405]], [[503, 503], "mapped", [447]], [[504, 504], "mapped", [505]], [[505, 505], "valid"], [[506, 506], "mapped", [507]], [[507, 507], "valid"], [[508, 508], "mapped", [509]], [[509, 509], "valid"], [[510, 510], "mapped", [511]], [[511, 511], "valid"], [[512, 512], "mapped", [513]], [[513, 513], "valid"], [[514, 514], "mapped", [515]], [[515, 515], "valid"], [[516, 516], "mapped", [517]], [[517, 517], "valid"], [[518, 518], "mapped", [519]], [[519, 519], "valid"], [[520, 520], "mapped", [521]], [[521, 521], "valid"], [[522, 522], "mapped", [523]], [[523, 523], "valid"], [[524, 524], "mapped", [525]], [[525, 525], "valid"], [[526, 526], "mapped", [527]], [[527, 527], "valid"], [[528, 528], "mapped", [529]], [[529, 529], "valid"], [[530, 530], "mapped", [531]], [[531, 531], "valid"], [[532, 532], "mapped", [533]], [[533, 533], "valid"], [[534, 534], "mapped", [535]], [[535, 535], "valid"], [[536, 536], "mapped", [537]], [[537, 537], "valid"], [[538, 538], "mapped", [539]], [[539, 539], "valid"], [[540, 540], "mapped", [541]], [[541, 541], "valid"], [[542, 542], "mapped", [543]], [[543, 543], "valid"], [[544, 544], "mapped", [414]], [[545, 545], "valid"], [[546, 546], "mapped", [547]], [[547, 547], "valid"], [[548, 548], "mapped", [549]], [[549, 549], "valid"], [[550, 550], "mapped", [551]], [[551, 551], "valid"], [[552, 552], "mapped", [553]], [[553, 553], "valid"], [[554, 554], "mapped", [555]], [[555, 555], "valid"], [[556, 556], "mapped", [557]], [[557, 557], "valid"], [[558, 558], "mapped", [559]], [[559, 559], "valid"], [[560, 560], "mapped", [561]], [[561, 561], "valid"], [[562, 562], "mapped", [563]], [[563, 563], "valid"], [[564, 566], "valid"], [[567, 569], "valid"], [[570, 570], "mapped", [11365]], [[571, 571], "mapped", [572]], [[572, 572], "valid"], [[573, 573], "mapped", [410]], [[574, 574], "mapped", [11366]], [[575, 576], "valid"], [[577, 577], "mapped", [578]], [[578, 578], "valid"], [[579, 579], "mapped", [384]], [[580, 580], "mapped", [649]], [[581, 581], "mapped", [652]], [[582, 582], "mapped", [583]], [[583, 583], "valid"], [[584, 584], "mapped", [585]], [[585, 585], "valid"], [[586, 586], "mapped", [587]], [[587, 587], "valid"], [[588, 588], "mapped", [589]], [[589, 589], "valid"], [[590, 590], "mapped", [591]], [[591, 591], "valid"], [[592, 680], "valid"], [[681, 685], "valid"], [[686, 687], "valid"], [[688, 688], "mapped", [104]], [[689, 689], "mapped", [614]], [[690, 690], "mapped", [106]], [[691, 691], "mapped", [114]], [[692, 692], "mapped", [633]], [[693, 693], "mapped", [635]], [[694, 694], "mapped", [641]], [[695, 695], "mapped", [119]], [[696, 696], "mapped", [121]], [[697, 705], "valid"], [[706, 709], "valid", [], "NV8"], [[710, 721], "valid"], [[722, 727], "valid", [], "NV8"], [[728, 728], "disallowed_STD3_mapped", [32, 774]], [[729, 729], "disallowed_STD3_mapped", [32, 775]], [[730, 730], "disallowed_STD3_mapped", [32, 778]], [[731, 731], "disallowed_STD3_mapped", [32, 808]], [[732, 732], "disallowed_STD3_mapped", [32, 771]], [[733, 733], "disallowed_STD3_mapped", [32, 779]], [[734, 734], "valid", [], "NV8"], [[735, 735], "valid", [], "NV8"], [[736, 736], "mapped", [611]], [[737, 737], "mapped", [108]], [[738, 738], "mapped", [115]], [[739, 739], "mapped", [120]], [[740, 740], "mapped", [661]], [[741, 745], "valid", [], "NV8"], [[746, 747], "valid", [], "NV8"], [[748, 748], "valid"], [[749, 749], "valid", [], "NV8"], [[750, 750], "valid"], [[751, 767], "valid", [], "NV8"], [[768, 831], "valid"], [[832, 832], "mapped", [768]], [[833, 833], "mapped", [769]], [[834, 834], "valid"], [[835, 835], "mapped", [787]], [[836, 836], "mapped", [776, 769]], [[837, 837], "mapped", [953]], [[838, 846], "valid"], [[847, 847], "ignored"], [[848, 855], "valid"], [[856, 860], "valid"], [[861, 863], "valid"], [[864, 865], "valid"], [[866, 866], "valid"], [[867, 879], "valid"], [[880, 880], "mapped", [881]], [[881, 881], "valid"], [[882, 882], "mapped", [883]], [[883, 883], "valid"], [[884, 884], "mapped", [697]], [[885, 885], "valid"], [[886, 886], "mapped", [887]], [[887, 887], "valid"], [[888, 889], "disallowed"], [[890, 890], "disallowed_STD3_mapped", [32, 953]], [[891, 893], "valid"], [[894, 894], "disallowed_STD3_mapped", [59]], [[895, 895], "mapped", [1011]], [[896, 899], "disallowed"], [[900, 900], "disallowed_STD3_mapped", [32, 769]], [[901, 901], "disallowed_STD3_mapped", [32, 776, 769]], [[902, 902], "mapped", [940]], [[903, 903], "mapped", [183]], [[904, 904], "mapped", [941]], [[905, 905], "mapped", [942]], [[906, 906], "mapped", [943]], [[907, 907], "disallowed"], [[908, 908], "mapped", [972]], [[909, 909], "disallowed"], [[910, 910], "mapped", [973]], [[911, 911], "mapped", [974]], [[912, 912], "valid"], [[913, 913], "mapped", [945]], [[914, 914], "mapped", [946]], [[915, 915], "mapped", [947]], [[916, 916], "mapped", [948]], [[917, 917], "mapped", [949]], [[918, 918], "mapped", [950]], [[919, 919], "mapped", [951]], [[920, 920], "mapped", [952]], [[921, 921], "mapped", [953]], [[922, 922], "mapped", [954]], [[923, 923], "mapped", [955]], [[924, 924], "mapped", [956]], [[925, 925], "mapped", [957]], [[926, 926], "mapped", [958]], [[927, 927], "mapped", [959]], [[928, 928], "mapped", [960]], [[929, 929], "mapped", [961]], [[930, 930], "disallowed"], [[931, 931], "mapped", [963]], [[932, 932], "mapped", [964]], [[933, 933], "mapped", [965]], [[934, 934], "mapped", [966]], [[935, 935], "mapped", [967]], [[936, 936], "mapped", [968]], [[937, 937], "mapped", [969]], [[938, 938], "mapped", [970]], [[939, 939], "mapped", [971]], [[940, 961], "valid"], [[962, 962], "deviation", [963]], [[963, 974], "valid"], [[975, 975], "mapped", [983]], [[976, 976], "mapped", [946]], [[977, 977], "mapped", [952]], [[978, 978], "mapped", [965]], [[979, 979], "mapped", [973]], [[980, 980], "mapped", [971]], [[981, 981], "mapped", [966]], [[982, 982], "mapped", [960]], [[983, 983], "valid"], [[984, 984], "mapped", [985]], [[985, 985], "valid"], [[986, 986], "mapped", [987]], [[987, 987], "valid"], [[988, 988], "mapped", [989]], [[989, 989], "valid"], [[990, 990], "mapped", [991]], [[991, 991], "valid"], [[992, 992], "mapped", [993]], [[993, 993], "valid"], [[994, 994], "mapped", [995]], [[995, 995], "valid"], [[996, 996], "mapped", [997]], [[997, 997], "valid"], [[998, 998], "mapped", [999]], [[999, 999], "valid"], [[1e3, 1e3], "mapped", [1001]], [[1001, 1001], "valid"], [[1002, 1002], "mapped", [1003]], [[1003, 1003], "valid"], [[1004, 1004], "mapped", [1005]], [[1005, 1005], "valid"], [[1006, 1006], "mapped", [1007]], [[1007, 1007], "valid"], [[1008, 1008], "mapped", [954]], [[1009, 1009], "mapped", [961]], [[1010, 1010], "mapped", [963]], [[1011, 1011], "valid"], [[1012, 1012], "mapped", [952]], [[1013, 1013], "mapped", [949]], [[1014, 1014], "valid", [], "NV8"], [[1015, 1015], "mapped", [1016]], [[1016, 1016], "valid"], [[1017, 1017], "mapped", [963]], [[1018, 1018], "mapped", [1019]], [[1019, 1019], "valid"], [[1020, 1020], "valid"], [[1021, 1021], "mapped", [891]], [[1022, 1022], "mapped", [892]], [[1023, 1023], "mapped", [893]], [[1024, 1024], "mapped", [1104]], [[1025, 1025], "mapped", [1105]], [[1026, 1026], "mapped", [1106]], [[1027, 1027], "mapped", [1107]], [[1028, 1028], "mapped", [1108]], [[1029, 1029], "mapped", [1109]], [[1030, 1030], "mapped", [1110]], [[1031, 1031], "mapped", [1111]], [[1032, 1032], "mapped", [1112]], [[1033, 1033], "mapped", [1113]], [[1034, 1034], "mapped", [1114]], [[1035, 1035], "mapped", [1115]], [[1036, 1036], "mapped", [1116]], [[1037, 1037], "mapped", [1117]], [[1038, 1038], "mapped", [1118]], [[1039, 1039], "mapped", [1119]], [[1040, 1040], "mapped", [1072]], [[1041, 1041], "mapped", [1073]], [[1042, 1042], "mapped", [1074]], [[1043, 1043], "mapped", [1075]], [[1044, 1044], "mapped", [1076]], [[1045, 1045], "mapped", [1077]], [[1046, 1046], "mapped", [1078]], [[1047, 1047], "mapped", [1079]], [[1048, 1048], "mapped", [1080]], [[1049, 1049], "mapped", [1081]], [[1050, 1050], "mapped", [1082]], [[1051, 1051], "mapped", [1083]], [[1052, 1052], "mapped", [1084]], [[1053, 1053], "mapped", [1085]], [[1054, 1054], "mapped", [1086]], [[1055, 1055], "mapped", [1087]], [[1056, 1056], "mapped", [1088]], [[1057, 1057], "mapped", [1089]], [[1058, 1058], "mapped", [1090]], [[1059, 1059], "mapped", [1091]], [[1060, 1060], "mapped", [1092]], [[1061, 1061], "mapped", [1093]], [[1062, 1062], "mapped", [1094]], [[1063, 1063], "mapped", [1095]], [[1064, 1064], "mapped", [1096]], [[1065, 1065], "mapped", [1097]], [[1066, 1066], "mapped", [1098]], [[1067, 1067], "mapped", [1099]], [[1068, 1068], "mapped", [1100]], [[1069, 1069], "mapped", [1101]], [[1070, 1070], "mapped", [1102]], [[1071, 1071], "mapped", [1103]], [[1072, 1103], "valid"], [[1104, 1104], "valid"], [[1105, 1116], "valid"], [[1117, 1117], "valid"], [[1118, 1119], "valid"], [[1120, 1120], "mapped", [1121]], [[1121, 1121], "valid"], [[1122, 1122], "mapped", [1123]], [[1123, 1123], "valid"], [[1124, 1124], "mapped", [1125]], [[1125, 1125], "valid"], [[1126, 1126], "mapped", [1127]], [[1127, 1127], "valid"], [[1128, 1128], "mapped", [1129]], [[1129, 1129], "valid"], [[1130, 1130], "mapped", [1131]], [[1131, 1131], "valid"], [[1132, 1132], "mapped", [1133]], [[1133, 1133], "valid"], [[1134, 1134], "mapped", [1135]], [[1135, 1135], "valid"], [[1136, 1136], "mapped", [1137]], [[1137, 1137], "valid"], [[1138, 1138], "mapped", [1139]], [[1139, 1139], "valid"], [[1140, 1140], "mapped", [1141]], [[1141, 1141], "valid"], [[1142, 1142], "mapped", [1143]], [[1143, 1143], "valid"], [[1144, 1144], "mapped", [1145]], [[1145, 1145], "valid"], [[1146, 1146], "mapped", [1147]], [[1147, 1147], "valid"], [[1148, 1148], "mapped", [1149]], [[1149, 1149], "valid"], [[1150, 1150], "mapped", [1151]], [[1151, 1151], "valid"], [[1152, 1152], "mapped", [1153]], [[1153, 1153], "valid"], [[1154, 1154], "valid", [], "NV8"], [[1155, 1158], "valid"], [[1159, 1159], "valid"], [[1160, 1161], "valid", [], "NV8"], [[1162, 1162], "mapped", [1163]], [[1163, 1163], "valid"], [[1164, 1164], "mapped", [1165]], [[1165, 1165], "valid"], [[1166, 1166], "mapped", [1167]], [[1167, 1167], "valid"], [[1168, 1168], "mapped", [1169]], [[1169, 1169], "valid"], [[1170, 1170], "mapped", [1171]], [[1171, 1171], "valid"], [[1172, 1172], "mapped", [1173]], [[1173, 1173], "valid"], [[1174, 1174], "mapped", [1175]], [[1175, 1175], "valid"], [[1176, 1176], "mapped", [1177]], [[1177, 1177], "valid"], [[1178, 1178], "mapped", [1179]], [[1179, 1179], "valid"], [[1180, 1180], "mapped", [1181]], [[1181, 1181], "valid"], [[1182, 1182], "mapped", [1183]], [[1183, 1183], "valid"], [[1184, 1184], "mapped", [1185]], [[1185, 1185], "valid"], [[1186, 1186], "mapped", [1187]], [[1187, 1187], "valid"], [[1188, 1188], "mapped", [1189]], [[1189, 1189], "valid"], [[1190, 1190], "mapped", [1191]], [[1191, 1191], "valid"], [[1192, 1192], "mapped", [1193]], [[1193, 1193], "valid"], [[1194, 1194], "mapped", [1195]], [[1195, 1195], "valid"], [[1196, 1196], "mapped", [1197]], [[1197, 1197], "valid"], [[1198, 1198], "mapped", [1199]], [[1199, 1199], "valid"], [[1200, 1200], "mapped", [1201]], [[1201, 1201], "valid"], [[1202, 1202], "mapped", [1203]], [[1203, 1203], "valid"], [[1204, 1204], "mapped", [1205]], [[1205, 1205], "valid"], [[1206, 1206], "mapped", [1207]], [[1207, 1207], "valid"], [[1208, 1208], "mapped", [1209]], [[1209, 1209], "valid"], [[1210, 1210], "mapped", [1211]], [[1211, 1211], "valid"], [[1212, 1212], "mapped", [1213]], [[1213, 1213], "valid"], [[1214, 1214], "mapped", [1215]], [[1215, 1215], "valid"], [[1216, 1216], "disallowed"], [[1217, 1217], "mapped", [1218]], [[1218, 1218], "valid"], [[1219, 1219], "mapped", [1220]], [[1220, 1220], "valid"], [[1221, 1221], "mapped", [1222]], [[1222, 1222], "valid"], [[1223, 1223], "mapped", [1224]], [[1224, 1224], "valid"], [[1225, 1225], "mapped", [1226]], [[1226, 1226], "valid"], [[1227, 1227], "mapped", [1228]], [[1228, 1228], "valid"], [[1229, 1229], "mapped", [1230]], [[1230, 1230], "valid"], [[1231, 1231], "valid"], [[1232, 1232], "mapped", [1233]], [[1233, 1233], "valid"], [[1234, 1234], "mapped", [1235]], [[1235, 1235], "valid"], [[1236, 1236], "mapped", [1237]], [[1237, 1237], "valid"], [[1238, 1238], "mapped", [1239]], [[1239, 1239], "valid"], [[1240, 1240], "mapped", [1241]], [[1241, 1241], "valid"], [[1242, 1242], "mapped", [1243]], [[1243, 1243], "valid"], [[1244, 1244], "mapped", [1245]], [[1245, 1245], "valid"], [[1246, 1246], "mapped", [1247]], [[1247, 1247], "valid"], [[1248, 1248], "mapped", [1249]], [[1249, 1249], "valid"], [[1250, 1250], "mapped", [1251]], [[1251, 1251], "valid"], [[1252, 1252], "mapped", [1253]], [[1253, 1253], "valid"], [[1254, 1254], "mapped", [1255]], [[1255, 1255], "valid"], [[1256, 1256], "mapped", [1257]], [[1257, 1257], "valid"], [[1258, 1258], "mapped", [1259]], [[1259, 1259], "valid"], [[1260, 1260], "mapped", [1261]], [[1261, 1261], "valid"], [[1262, 1262], "mapped", [1263]], [[1263, 1263], "valid"], [[1264, 1264], "mapped", [1265]], [[1265, 1265], "valid"], [[1266, 1266], "mapped", [1267]], [[1267, 1267], "valid"], [[1268, 1268], "mapped", [1269]], [[1269, 1269], "valid"], [[1270, 1270], "mapped", [1271]], [[1271, 1271], "valid"], [[1272, 1272], "mapped", [1273]], [[1273, 1273], "valid"], [[1274, 1274], "mapped", [1275]], [[1275, 1275], "valid"], [[1276, 1276], "mapped", [1277]], [[1277, 1277], "valid"], [[1278, 1278], "mapped", [1279]], [[1279, 1279], "valid"], [[1280, 1280], "mapped", [1281]], [[1281, 1281], "valid"], [[1282, 1282], "mapped", [1283]], [[1283, 1283], "valid"], [[1284, 1284], "mapped", [1285]], [[1285, 1285], "valid"], [[1286, 1286], "mapped", [1287]], [[1287, 1287], "valid"], [[1288, 1288], "mapped", [1289]], [[1289, 1289], "valid"], [[1290, 1290], "mapped", [1291]], [[1291, 1291], "valid"], [[1292, 1292], "mapped", [1293]], [[1293, 1293], "valid"], [[1294, 1294], "mapped", [1295]], [[1295, 1295], "valid"], [[1296, 1296], "mapped", [1297]], [[1297, 1297], "valid"], [[1298, 1298], "mapped", [1299]], [[1299, 1299], "valid"], [[1300, 1300], "mapped", [1301]], [[1301, 1301], "valid"], [[1302, 1302], "mapped", [1303]], [[1303, 1303], "valid"], [[1304, 1304], "mapped", [1305]], [[1305, 1305], "valid"], [[1306, 1306], "mapped", [1307]], [[1307, 1307], "valid"], [[1308, 1308], "mapped", [1309]], [[1309, 1309], "valid"], [[1310, 1310], "mapped", [1311]], [[1311, 1311], "valid"], [[1312, 1312], "mapped", [1313]], [[1313, 1313], "valid"], [[1314, 1314], "mapped", [1315]], [[1315, 1315], "valid"], [[1316, 1316], "mapped", [1317]], [[1317, 1317], "valid"], [[1318, 1318], "mapped", [1319]], [[1319, 1319], "valid"], [[1320, 1320], "mapped", [1321]], [[1321, 1321], "valid"], [[1322, 1322], "mapped", [1323]], [[1323, 1323], "valid"], [[1324, 1324], "mapped", [1325]], [[1325, 1325], "valid"], [[1326, 1326], "mapped", [1327]], [[1327, 1327], "valid"], [[1328, 1328], "disallowed"], [[1329, 1329], "mapped", [1377]], [[1330, 1330], "mapped", [1378]], [[1331, 1331], "mapped", [1379]], [[1332, 1332], "mapped", [1380]], [[1333, 1333], "mapped", [1381]], [[1334, 1334], "mapped", [1382]], [[1335, 1335], "mapped", [1383]], [[1336, 1336], "mapped", [1384]], [[1337, 1337], "mapped", [1385]], [[1338, 1338], "mapped", [1386]], [[1339, 1339], "mapped", [1387]], [[1340, 1340], "mapped", [1388]], [[1341, 1341], "mapped", [1389]], [[1342, 1342], "mapped", [1390]], [[1343, 1343], "mapped", [1391]], [[1344, 1344], "mapped", [1392]], [[1345, 1345], "mapped", [1393]], [[1346, 1346], "mapped", [1394]], [[1347, 1347], "mapped", [1395]], [[1348, 1348], "mapped", [1396]], [[1349, 1349], "mapped", [1397]], [[1350, 1350], "mapped", [1398]], [[1351, 1351], "mapped", [1399]], [[1352, 1352], "mapped", [1400]], [[1353, 1353], "mapped", [1401]], [[1354, 1354], "mapped", [1402]], [[1355, 1355], "mapped", [1403]], [[1356, 1356], "mapped", [1404]], [[1357, 1357], "mapped", [1405]], [[1358, 1358], "mapped", [1406]], [[1359, 1359], "mapped", [1407]], [[1360, 1360], "mapped", [1408]], [[1361, 1361], "mapped", [1409]], [[1362, 1362], "mapped", [1410]], [[1363, 1363], "mapped", [1411]], [[1364, 1364], "mapped", [1412]], [[1365, 1365], "mapped", [1413]], [[1366, 1366], "mapped", [1414]], [[1367, 1368], "disallowed"], [[1369, 1369], "valid"], [[1370, 1375], "valid", [], "NV8"], [[1376, 1376], "disallowed"], [[1377, 1414], "valid"], [[1415, 1415], "mapped", [1381, 1410]], [[1416, 1416], "disallowed"], [[1417, 1417], "valid", [], "NV8"], [[1418, 1418], "valid", [], "NV8"], [[1419, 1420], "disallowed"], [[1421, 1422], "valid", [], "NV8"], [[1423, 1423], "valid", [], "NV8"], [[1424, 1424], "disallowed"], [[1425, 1441], "valid"], [[1442, 1442], "valid"], [[1443, 1455], "valid"], [[1456, 1465], "valid"], [[1466, 1466], "valid"], [[1467, 1469], "valid"], [[1470, 1470], "valid", [], "NV8"], [[1471, 1471], "valid"], [[1472, 1472], "valid", [], "NV8"], [[1473, 1474], "valid"], [[1475, 1475], "valid", [], "NV8"], [[1476, 1476], "valid"], [[1477, 1477], "valid"], [[1478, 1478], "valid", [], "NV8"], [[1479, 1479], "valid"], [[1480, 1487], "disallowed"], [[1488, 1514], "valid"], [[1515, 1519], "disallowed"], [[1520, 1524], "valid"], [[1525, 1535], "disallowed"], [[1536, 1539], "disallowed"], [[1540, 1540], "disallowed"], [[1541, 1541], "disallowed"], [[1542, 1546], "valid", [], "NV8"], [[1547, 1547], "valid", [], "NV8"], [[1548, 1548], "valid", [], "NV8"], [[1549, 1551], "valid", [], "NV8"], [[1552, 1557], "valid"], [[1558, 1562], "valid"], [[1563, 1563], "valid", [], "NV8"], [[1564, 1564], "disallowed"], [[1565, 1565], "disallowed"], [[1566, 1566], "valid", [], "NV8"], [[1567, 1567], "valid", [], "NV8"], [[1568, 1568], "valid"], [[1569, 1594], "valid"], [[1595, 1599], "valid"], [[1600, 1600], "valid", [], "NV8"], [[1601, 1618], "valid"], [[1619, 1621], "valid"], [[1622, 1624], "valid"], [[1625, 1630], "valid"], [[1631, 1631], "valid"], [[1632, 1641], "valid"], [[1642, 1645], "valid", [], "NV8"], [[1646, 1647], "valid"], [[1648, 1652], "valid"], [[1653, 1653], "mapped", [1575, 1652]], [[1654, 1654], "mapped", [1608, 1652]], [[1655, 1655], "mapped", [1735, 1652]], [[1656, 1656], "mapped", [1610, 1652]], [[1657, 1719], "valid"], [[1720, 1721], "valid"], [[1722, 1726], "valid"], [[1727, 1727], "valid"], [[1728, 1742], "valid"], [[1743, 1743], "valid"], [[1744, 1747], "valid"], [[1748, 1748], "valid", [], "NV8"], [[1749, 1756], "valid"], [[1757, 1757], "disallowed"], [[1758, 1758], "valid", [], "NV8"], [[1759, 1768], "valid"], [[1769, 1769], "valid", [], "NV8"], [[1770, 1773], "valid"], [[1774, 1775], "valid"], [[1776, 1785], "valid"], [[1786, 1790], "valid"], [[1791, 1791], "valid"], [[1792, 1805], "valid", [], "NV8"], [[1806, 1806], "disallowed"], [[1807, 1807], "disallowed"], [[1808, 1836], "valid"], [[1837, 1839], "valid"], [[1840, 1866], "valid"], [[1867, 1868], "disallowed"], [[1869, 1871], "valid"], [[1872, 1901], "valid"], [[1902, 1919], "valid"], [[1920, 1968], "valid"], [[1969, 1969], "valid"], [[1970, 1983], "disallowed"], [[1984, 2037], "valid"], [[2038, 2042], "valid", [], "NV8"], [[2043, 2047], "disallowed"], [[2048, 2093], "valid"], [[2094, 2095], "disallowed"], [[2096, 2110], "valid", [], "NV8"], [[2111, 2111], "disallowed"], [[2112, 2139], "valid"], [[2140, 2141], "disallowed"], [[2142, 2142], "valid", [], "NV8"], [[2143, 2207], "disallowed"], [[2208, 2208], "valid"], [[2209, 2209], "valid"], [[2210, 2220], "valid"], [[2221, 2226], "valid"], [[2227, 2228], "valid"], [[2229, 2274], "disallowed"], [[2275, 2275], "valid"], [[2276, 2302], "valid"], [[2303, 2303], "valid"], [[2304, 2304], "valid"], [[2305, 2307], "valid"], [[2308, 2308], "valid"], [[2309, 2361], "valid"], [[2362, 2363], "valid"], [[2364, 2381], "valid"], [[2382, 2382], "valid"], [[2383, 2383], "valid"], [[2384, 2388], "valid"], [[2389, 2389], "valid"], [[2390, 2391], "valid"], [[2392, 2392], "mapped", [2325, 2364]], [[2393, 2393], "mapped", [2326, 2364]], [[2394, 2394], "mapped", [2327, 2364]], [[2395, 2395], "mapped", [2332, 2364]], [[2396, 2396], "mapped", [2337, 2364]], [[2397, 2397], "mapped", [2338, 2364]], [[2398, 2398], "mapped", [2347, 2364]], [[2399, 2399], "mapped", [2351, 2364]], [[2400, 2403], "valid"], [[2404, 2405], "valid", [], "NV8"], [[2406, 2415], "valid"], [[2416, 2416], "valid", [], "NV8"], [[2417, 2418], "valid"], [[2419, 2423], "valid"], [[2424, 2424], "valid"], [[2425, 2426], "valid"], [[2427, 2428], "valid"], [[2429, 2429], "valid"], [[2430, 2431], "valid"], [[2432, 2432], "valid"], [[2433, 2435], "valid"], [[2436, 2436], "disallowed"], [[2437, 2444], "valid"], [[2445, 2446], "disallowed"], [[2447, 2448], "valid"], [[2449, 2450], "disallowed"], [[2451, 2472], "valid"], [[2473, 2473], "disallowed"], [[2474, 2480], "valid"], [[2481, 2481], "disallowed"], [[2482, 2482], "valid"], [[2483, 2485], "disallowed"], [[2486, 2489], "valid"], [[2490, 2491], "disallowed"], [[2492, 2492], "valid"], [[2493, 2493], "valid"], [[2494, 2500], "valid"], [[2501, 2502], "disallowed"], [[2503, 2504], "valid"], [[2505, 2506], "disallowed"], [[2507, 2509], "valid"], [[2510, 2510], "valid"], [[2511, 2518], "disallowed"], [[2519, 2519], "valid"], [[2520, 2523], "disallowed"], [[2524, 2524], "mapped", [2465, 2492]], [[2525, 2525], "mapped", [2466, 2492]], [[2526, 2526], "disallowed"], [[2527, 2527], "mapped", [2479, 2492]], [[2528, 2531], "valid"], [[2532, 2533], "disallowed"], [[2534, 2545], "valid"], [[2546, 2554], "valid", [], "NV8"], [[2555, 2555], "valid", [], "NV8"], [[2556, 2560], "disallowed"], [[2561, 2561], "valid"], [[2562, 2562], "valid"], [[2563, 2563], "valid"], [[2564, 2564], "disallowed"], [[2565, 2570], "valid"], [[2571, 2574], "disallowed"], [[2575, 2576], "valid"], [[2577, 2578], "disallowed"], [[2579, 2600], "valid"], [[2601, 2601], "disallowed"], [[2602, 2608], "valid"], [[2609, 2609], "disallowed"], [[2610, 2610], "valid"], [[2611, 2611], "mapped", [2610, 2620]], [[2612, 2612], "disallowed"], [[2613, 2613], "valid"], [[2614, 2614], "mapped", [2616, 2620]], [[2615, 2615], "disallowed"], [[2616, 2617], "valid"], [[2618, 2619], "disallowed"], [[2620, 2620], "valid"], [[2621, 2621], "disallowed"], [[2622, 2626], "valid"], [[2627, 2630], "disallowed"], [[2631, 2632], "valid"], [[2633, 2634], "disallowed"], [[2635, 2637], "valid"], [[2638, 2640], "disallowed"], [[2641, 2641], "valid"], [[2642, 2648], "disallowed"], [[2649, 2649], "mapped", [2582, 2620]], [[2650, 2650], "mapped", [2583, 2620]], [[2651, 2651], "mapped", [2588, 2620]], [[2652, 2652], "valid"], [[2653, 2653], "disallowed"], [[2654, 2654], "mapped", [2603, 2620]], [[2655, 2661], "disallowed"], [[2662, 2676], "valid"], [[2677, 2677], "valid"], [[2678, 2688], "disallowed"], [[2689, 2691], "valid"], [[2692, 2692], "disallowed"], [[2693, 2699], "valid"], [[2700, 2700], "valid"], [[2701, 2701], "valid"], [[2702, 2702], "disallowed"], [[2703, 2705], "valid"], [[2706, 2706], "disallowed"], [[2707, 2728], "valid"], [[2729, 2729], "disallowed"], [[2730, 2736], "valid"], [[2737, 2737], "disallowed"], [[2738, 2739], "valid"], [[2740, 2740], "disallowed"], [[2741, 2745], "valid"], [[2746, 2747], "disallowed"], [[2748, 2757], "valid"], [[2758, 2758], "disallowed"], [[2759, 2761], "valid"], [[2762, 2762], "disallowed"], [[2763, 2765], "valid"], [[2766, 2767], "disallowed"], [[2768, 2768], "valid"], [[2769, 2783], "disallowed"], [[2784, 2784], "valid"], [[2785, 2787], "valid"], [[2788, 2789], "disallowed"], [[2790, 2799], "valid"], [[2800, 2800], "valid", [], "NV8"], [[2801, 2801], "valid", [], "NV8"], [[2802, 2808], "disallowed"], [[2809, 2809], "valid"], [[2810, 2816], "disallowed"], [[2817, 2819], "valid"], [[2820, 2820], "disallowed"], [[2821, 2828], "valid"], [[2829, 2830], "disallowed"], [[2831, 2832], "valid"], [[2833, 2834], "disallowed"], [[2835, 2856], "valid"], [[2857, 2857], "disallowed"], [[2858, 2864], "valid"], [[2865, 2865], "disallowed"], [[2866, 2867], "valid"], [[2868, 2868], "disallowed"], [[2869, 2869], "valid"], [[2870, 2873], "valid"], [[2874, 2875], "disallowed"], [[2876, 2883], "valid"], [[2884, 2884], "valid"], [[2885, 2886], "disallowed"], [[2887, 2888], "valid"], [[2889, 2890], "disallowed"], [[2891, 2893], "valid"], [[2894, 2901], "disallowed"], [[2902, 2903], "valid"], [[2904, 2907], "disallowed"], [[2908, 2908], "mapped", [2849, 2876]], [[2909, 2909], "mapped", [2850, 2876]], [[2910, 2910], "disallowed"], [[2911, 2913], "valid"], [[2914, 2915], "valid"], [[2916, 2917], "disallowed"], [[2918, 2927], "valid"], [[2928, 2928], "valid", [], "NV8"], [[2929, 2929], "valid"], [[2930, 2935], "valid", [], "NV8"], [[2936, 2945], "disallowed"], [[2946, 2947], "valid"], [[2948, 2948], "disallowed"], [[2949, 2954], "valid"], [[2955, 2957], "disallowed"], [[2958, 2960], "valid"], [[2961, 2961], "disallowed"], [[2962, 2965], "valid"], [[2966, 2968], "disallowed"], [[2969, 2970], "valid"], [[2971, 2971], "disallowed"], [[2972, 2972], "valid"], [[2973, 2973], "disallowed"], [[2974, 2975], "valid"], [[2976, 2978], "disallowed"], [[2979, 2980], "valid"], [[2981, 2983], "disallowed"], [[2984, 2986], "valid"], [[2987, 2989], "disallowed"], [[2990, 2997], "valid"], [[2998, 2998], "valid"], [[2999, 3001], "valid"], [[3002, 3005], "disallowed"], [[3006, 3010], "valid"], [[3011, 3013], "disallowed"], [[3014, 3016], "valid"], [[3017, 3017], "disallowed"], [[3018, 3021], "valid"], [[3022, 3023], "disallowed"], [[3024, 3024], "valid"], [[3025, 3030], "disallowed"], [[3031, 3031], "valid"], [[3032, 3045], "disallowed"], [[3046, 3046], "valid"], [[3047, 3055], "valid"], [[3056, 3058], "valid", [], "NV8"], [[3059, 3066], "valid", [], "NV8"], [[3067, 3071], "disallowed"], [[3072, 3072], "valid"], [[3073, 3075], "valid"], [[3076, 3076], "disallowed"], [[3077, 3084], "valid"], [[3085, 3085], "disallowed"], [[3086, 3088], "valid"], [[3089, 3089], "disallowed"], [[3090, 3112], "valid"], [[3113, 3113], "disallowed"], [[3114, 3123], "valid"], [[3124, 3124], "valid"], [[3125, 3129], "valid"], [[3130, 3132], "disallowed"], [[3133, 3133], "valid"], [[3134, 3140], "valid"], [[3141, 3141], "disallowed"], [[3142, 3144], "valid"], [[3145, 3145], "disallowed"], [[3146, 3149], "valid"], [[3150, 3156], "disallowed"], [[3157, 3158], "valid"], [[3159, 3159], "disallowed"], [[3160, 3161], "valid"], [[3162, 3162], "valid"], [[3163, 3167], "disallowed"], [[3168, 3169], "valid"], [[3170, 3171], "valid"], [[3172, 3173], "disallowed"], [[3174, 3183], "valid"], [[3184, 3191], "disallowed"], [[3192, 3199], "valid", [], "NV8"], [[3200, 3200], "disallowed"], [[3201, 3201], "valid"], [[3202, 3203], "valid"], [[3204, 3204], "disallowed"], [[3205, 3212], "valid"], [[3213, 3213], "disallowed"], [[3214, 3216], "valid"], [[3217, 3217], "disallowed"], [[3218, 3240], "valid"], [[3241, 3241], "disallowed"], [[3242, 3251], "valid"], [[3252, 3252], "disallowed"], [[3253, 3257], "valid"], [[3258, 3259], "disallowed"], [[3260, 3261], "valid"], [[3262, 3268], "valid"], [[3269, 3269], "disallowed"], [[3270, 3272], "valid"], [[3273, 3273], "disallowed"], [[3274, 3277], "valid"], [[3278, 3284], "disallowed"], [[3285, 3286], "valid"], [[3287, 3293], "disallowed"], [[3294, 3294], "valid"], [[3295, 3295], "disallowed"], [[3296, 3297], "valid"], [[3298, 3299], "valid"], [[3300, 3301], "disallowed"], [[3302, 3311], "valid"], [[3312, 3312], "disallowed"], [[3313, 3314], "valid"], [[3315, 3328], "disallowed"], [[3329, 3329], "valid"], [[3330, 3331], "valid"], [[3332, 3332], "disallowed"], [[3333, 3340], "valid"], [[3341, 3341], "disallowed"], [[3342, 3344], "valid"], [[3345, 3345], "disallowed"], [[3346, 3368], "valid"], [[3369, 3369], "valid"], [[3370, 3385], "valid"], [[3386, 3386], "valid"], [[3387, 3388], "disallowed"], [[3389, 3389], "valid"], [[3390, 3395], "valid"], [[3396, 3396], "valid"], [[3397, 3397], "disallowed"], [[3398, 3400], "valid"], [[3401, 3401], "disallowed"], [[3402, 3405], "valid"], [[3406, 3406], "valid"], [[3407, 3414], "disallowed"], [[3415, 3415], "valid"], [[3416, 3422], "disallowed"], [[3423, 3423], "valid"], [[3424, 3425], "valid"], [[3426, 3427], "valid"], [[3428, 3429], "disallowed"], [[3430, 3439], "valid"], [[3440, 3445], "valid", [], "NV8"], [[3446, 3448], "disallowed"], [[3449, 3449], "valid", [], "NV8"], [[3450, 3455], "valid"], [[3456, 3457], "disallowed"], [[3458, 3459], "valid"], [[3460, 3460], "disallowed"], [[3461, 3478], "valid"], [[3479, 3481], "disallowed"], [[3482, 3505], "valid"], [[3506, 3506], "disallowed"], [[3507, 3515], "valid"], [[3516, 3516], "disallowed"], [[3517, 3517], "valid"], [[3518, 3519], "disallowed"], [[3520, 3526], "valid"], [[3527, 3529], "disallowed"], [[3530, 3530], "valid"], [[3531, 3534], "disallowed"], [[3535, 3540], "valid"], [[3541, 3541], "disallowed"], [[3542, 3542], "valid"], [[3543, 3543], "disallowed"], [[3544, 3551], "valid"], [[3552, 3557], "disallowed"], [[3558, 3567], "valid"], [[3568, 3569], "disallowed"], [[3570, 3571], "valid"], [[3572, 3572], "valid", [], "NV8"], [[3573, 3584], "disallowed"], [[3585, 3634], "valid"], [[3635, 3635], "mapped", [3661, 3634]], [[3636, 3642], "valid"], [[3643, 3646], "disallowed"], [[3647, 3647], "valid", [], "NV8"], [[3648, 3662], "valid"], [[3663, 3663], "valid", [], "NV8"], [[3664, 3673], "valid"], [[3674, 3675], "valid", [], "NV8"], [[3676, 3712], "disallowed"], [[3713, 3714], "valid"], [[3715, 3715], "disallowed"], [[3716, 3716], "valid"], [[3717, 3718], "disallowed"], [[3719, 3720], "valid"], [[3721, 3721], "disallowed"], [[3722, 3722], "valid"], [[3723, 3724], "disallowed"], [[3725, 3725], "valid"], [[3726, 3731], "disallowed"], [[3732, 3735], "valid"], [[3736, 3736], "disallowed"], [[3737, 3743], "valid"], [[3744, 3744], "disallowed"], [[3745, 3747], "valid"], [[3748, 3748], "disallowed"], [[3749, 3749], "valid"], [[3750, 3750], "disallowed"], [[3751, 3751], "valid"], [[3752, 3753], "disallowed"], [[3754, 3755], "valid"], [[3756, 3756], "disallowed"], [[3757, 3762], "valid"], [[3763, 3763], "mapped", [3789, 3762]], [[3764, 3769], "valid"], [[3770, 3770], "disallowed"], [[3771, 3773], "valid"], [[3774, 3775], "disallowed"], [[3776, 3780], "valid"], [[3781, 3781], "disallowed"], [[3782, 3782], "valid"], [[3783, 3783], "disallowed"], [[3784, 3789], "valid"], [[3790, 3791], "disallowed"], [[3792, 3801], "valid"], [[3802, 3803], "disallowed"], [[3804, 3804], "mapped", [3755, 3737]], [[3805, 3805], "mapped", [3755, 3745]], [[3806, 3807], "valid"], [[3808, 3839], "disallowed"], [[3840, 3840], "valid"], [[3841, 3850], "valid", [], "NV8"], [[3851, 3851], "valid"], [[3852, 3852], "mapped", [3851]], [[3853, 3863], "valid", [], "NV8"], [[3864, 3865], "valid"], [[3866, 3871], "valid", [], "NV8"], [[3872, 3881], "valid"], [[3882, 3892], "valid", [], "NV8"], [[3893, 3893], "valid"], [[3894, 3894], "valid", [], "NV8"], [[3895, 3895], "valid"], [[3896, 3896], "valid", [], "NV8"], [[3897, 3897], "valid"], [[3898, 3901], "valid", [], "NV8"], [[3902, 3906], "valid"], [[3907, 3907], "mapped", [3906, 4023]], [[3908, 3911], "valid"], [[3912, 3912], "disallowed"], [[3913, 3916], "valid"], [[3917, 3917], "mapped", [3916, 4023]], [[3918, 3921], "valid"], [[3922, 3922], "mapped", [3921, 4023]], [[3923, 3926], "valid"], [[3927, 3927], "mapped", [3926, 4023]], [[3928, 3931], "valid"], [[3932, 3932], "mapped", [3931, 4023]], [[3933, 3944], "valid"], [[3945, 3945], "mapped", [3904, 4021]], [[3946, 3946], "valid"], [[3947, 3948], "valid"], [[3949, 3952], "disallowed"], [[3953, 3954], "valid"], [[3955, 3955], "mapped", [3953, 3954]], [[3956, 3956], "valid"], [[3957, 3957], "mapped", [3953, 3956]], [[3958, 3958], "mapped", [4018, 3968]], [[3959, 3959], "mapped", [4018, 3953, 3968]], [[3960, 3960], "mapped", [4019, 3968]], [[3961, 3961], "mapped", [4019, 3953, 3968]], [[3962, 3968], "valid"], [[3969, 3969], "mapped", [3953, 3968]], [[3970, 3972], "valid"], [[3973, 3973], "valid", [], "NV8"], [[3974, 3979], "valid"], [[3980, 3983], "valid"], [[3984, 3986], "valid"], [[3987, 3987], "mapped", [3986, 4023]], [[3988, 3989], "valid"], [[3990, 3990], "valid"], [[3991, 3991], "valid"], [[3992, 3992], "disallowed"], [[3993, 3996], "valid"], [[3997, 3997], "mapped", [3996, 4023]], [[3998, 4001], "valid"], [[4002, 4002], "mapped", [4001, 4023]], [[4003, 4006], "valid"], [[4007, 4007], "mapped", [4006, 4023]], [[4008, 4011], "valid"], [[4012, 4012], "mapped", [4011, 4023]], [[4013, 4013], "valid"], [[4014, 4016], "valid"], [[4017, 4023], "valid"], [[4024, 4024], "valid"], [[4025, 4025], "mapped", [3984, 4021]], [[4026, 4028], "valid"], [[4029, 4029], "disallowed"], [[4030, 4037], "valid", [], "NV8"], [[4038, 4038], "valid"], [[4039, 4044], "valid", [], "NV8"], [[4045, 4045], "disallowed"], [[4046, 4046], "valid", [], "NV8"], [[4047, 4047], "valid", [], "NV8"], [[4048, 4049], "valid", [], "NV8"], [[4050, 4052], "valid", [], "NV8"], [[4053, 4056], "valid", [], "NV8"], [[4057, 4058], "valid", [], "NV8"], [[4059, 4095], "disallowed"], [[4096, 4129], "valid"], [[4130, 4130], "valid"], [[4131, 4135], "valid"], [[4136, 4136], "valid"], [[4137, 4138], "valid"], [[4139, 4139], "valid"], [[4140, 4146], "valid"], [[4147, 4149], "valid"], [[4150, 4153], "valid"], [[4154, 4159], "valid"], [[4160, 4169], "valid"], [[4170, 4175], "valid", [], "NV8"], [[4176, 4185], "valid"], [[4186, 4249], "valid"], [[4250, 4253], "valid"], [[4254, 4255], "valid", [], "NV8"], [[4256, 4293], "disallowed"], [[4294, 4294], "disallowed"], [[4295, 4295], "mapped", [11559]], [[4296, 4300], "disallowed"], [[4301, 4301], "mapped", [11565]], [[4302, 4303], "disallowed"], [[4304, 4342], "valid"], [[4343, 4344], "valid"], [[4345, 4346], "valid"], [[4347, 4347], "valid", [], "NV8"], [[4348, 4348], "mapped", [4316]], [[4349, 4351], "valid"], [[4352, 4441], "valid", [], "NV8"], [[4442, 4446], "valid", [], "NV8"], [[4447, 4448], "disallowed"], [[4449, 4514], "valid", [], "NV8"], [[4515, 4519], "valid", [], "NV8"], [[4520, 4601], "valid", [], "NV8"], [[4602, 4607], "valid", [], "NV8"], [[4608, 4614], "valid"], [[4615, 4615], "valid"], [[4616, 4678], "valid"], [[4679, 4679], "valid"], [[4680, 4680], "valid"], [[4681, 4681], "disallowed"], [[4682, 4685], "valid"], [[4686, 4687], "disallowed"], [[4688, 4694], "valid"], [[4695, 4695], "disallowed"], [[4696, 4696], "valid"], [[4697, 4697], "disallowed"], [[4698, 4701], "valid"], [[4702, 4703], "disallowed"], [[4704, 4742], "valid"], [[4743, 4743], "valid"], [[4744, 4744], "valid"], [[4745, 4745], "disallowed"], [[4746, 4749], "valid"], [[4750, 4751], "disallowed"], [[4752, 4782], "valid"], [[4783, 4783], "valid"], [[4784, 4784], "valid"], [[4785, 4785], "disallowed"], [[4786, 4789], "valid"], [[4790, 4791], "disallowed"], [[4792, 4798], "valid"], [[4799, 4799], "disallowed"], [[4800, 4800], "valid"], [[4801, 4801], "disallowed"], [[4802, 4805], "valid"], [[4806, 4807], "disallowed"], [[4808, 4814], "valid"], [[4815, 4815], "valid"], [[4816, 4822], "valid"], [[4823, 4823], "disallowed"], [[4824, 4846], "valid"], [[4847, 4847], "valid"], [[4848, 4878], "valid"], [[4879, 4879], "valid"], [[4880, 4880], "valid"], [[4881, 4881], "disallowed"], [[4882, 4885], "valid"], [[4886, 4887], "disallowed"], [[4888, 4894], "valid"], [[4895, 4895], "valid"], [[4896, 4934], "valid"], [[4935, 4935], "valid"], [[4936, 4954], "valid"], [[4955, 4956], "disallowed"], [[4957, 4958], "valid"], [[4959, 4959], "valid"], [[4960, 4960], "valid", [], "NV8"], [[4961, 4988], "valid", [], "NV8"], [[4989, 4991], "disallowed"], [[4992, 5007], "valid"], [[5008, 5017], "valid", [], "NV8"], [[5018, 5023], "disallowed"], [[5024, 5108], "valid"], [[5109, 5109], "valid"], [[5110, 5111], "disallowed"], [[5112, 5112], "mapped", [5104]], [[5113, 5113], "mapped", [5105]], [[5114, 5114], "mapped", [5106]], [[5115, 5115], "mapped", [5107]], [[5116, 5116], "mapped", [5108]], [[5117, 5117], "mapped", [5109]], [[5118, 5119], "disallowed"], [[5120, 5120], "valid", [], "NV8"], [[5121, 5740], "valid"], [[5741, 5742], "valid", [], "NV8"], [[5743, 5750], "valid"], [[5751, 5759], "valid"], [[5760, 5760], "disallowed"], [[5761, 5786], "valid"], [[5787, 5788], "valid", [], "NV8"], [[5789, 5791], "disallowed"], [[5792, 5866], "valid"], [[5867, 5872], "valid", [], "NV8"], [[5873, 5880], "valid"], [[5881, 5887], "disallowed"], [[5888, 5900], "valid"], [[5901, 5901], "disallowed"], [[5902, 5908], "valid"], [[5909, 5919], "disallowed"], [[5920, 5940], "valid"], [[5941, 5942], "valid", [], "NV8"], [[5943, 5951], "disallowed"], [[5952, 5971], "valid"], [[5972, 5983], "disallowed"], [[5984, 5996], "valid"], [[5997, 5997], "disallowed"], [[5998, 6e3], "valid"], [[6001, 6001], "disallowed"], [[6002, 6003], "valid"], [[6004, 6015], "disallowed"], [[6016, 6067], "valid"], [[6068, 6069], "disallowed"], [[6070, 6099], "valid"], [[6100, 6102], "valid", [], "NV8"], [[6103, 6103], "valid"], [[6104, 6107], "valid", [], "NV8"], [[6108, 6108], "valid"], [[6109, 6109], "valid"], [[6110, 6111], "disallowed"], [[6112, 6121], "valid"], [[6122, 6127], "disallowed"], [[6128, 6137], "valid", [], "NV8"], [[6138, 6143], "disallowed"], [[6144, 6149], "valid", [], "NV8"], [[6150, 6150], "disallowed"], [[6151, 6154], "valid", [], "NV8"], [[6155, 6157], "ignored"], [[6158, 6158], "disallowed"], [[6159, 6159], "disallowed"], [[6160, 6169], "valid"], [[6170, 6175], "disallowed"], [[6176, 6263], "valid"], [[6264, 6271], "disallowed"], [[6272, 6313], "valid"], [[6314, 6314], "valid"], [[6315, 6319], "disallowed"], [[6320, 6389], "valid"], [[6390, 6399], "disallowed"], [[6400, 6428], "valid"], [[6429, 6430], "valid"], [[6431, 6431], "disallowed"], [[6432, 6443], "valid"], [[6444, 6447], "disallowed"], [[6448, 6459], "valid"], [[6460, 6463], "disallowed"], [[6464, 6464], "valid", [], "NV8"], [[6465, 6467], "disallowed"], [[6468, 6469], "valid", [], "NV8"], [[6470, 6509], "valid"], [[6510, 6511], "disallowed"], [[6512, 6516], "valid"], [[6517, 6527], "disallowed"], [[6528, 6569], "valid"], [[6570, 6571], "valid"], [[6572, 6575], "disallowed"], [[6576, 6601], "valid"], [[6602, 6607], "disallowed"], [[6608, 6617], "valid"], [[6618, 6618], "valid", [], "XV8"], [[6619, 6621], "disallowed"], [[6622, 6623], "valid", [], "NV8"], [[6624, 6655], "valid", [], "NV8"], [[6656, 6683], "valid"], [[6684, 6685], "disallowed"], [[6686, 6687], "valid", [], "NV8"], [[6688, 6750], "valid"], [[6751, 6751], "disallowed"], [[6752, 6780], "valid"], [[6781, 6782], "disallowed"], [[6783, 6793], "valid"], [[6794, 6799], "disallowed"], [[6800, 6809], "valid"], [[6810, 6815], "disallowed"], [[6816, 6822], "valid", [], "NV8"], [[6823, 6823], "valid"], [[6824, 6829], "valid", [], "NV8"], [[6830, 6831], "disallowed"], [[6832, 6845], "valid"], [[6846, 6846], "valid", [], "NV8"], [[6847, 6911], "disallowed"], [[6912, 6987], "valid"], [[6988, 6991], "disallowed"], [[6992, 7001], "valid"], [[7002, 7018], "valid", [], "NV8"], [[7019, 7027], "valid"], [[7028, 7036], "valid", [], "NV8"], [[7037, 7039], "disallowed"], [[7040, 7082], "valid"], [[7083, 7085], "valid"], [[7086, 7097], "valid"], [[7098, 7103], "valid"], [[7104, 7155], "valid"], [[7156, 7163], "disallowed"], [[7164, 7167], "valid", [], "NV8"], [[7168, 7223], "valid"], [[7224, 7226], "disallowed"], [[7227, 7231], "valid", [], "NV8"], [[7232, 7241], "valid"], [[7242, 7244], "disallowed"], [[7245, 7293], "valid"], [[7294, 7295], "valid", [], "NV8"], [[7296, 7359], "disallowed"], [[7360, 7367], "valid", [], "NV8"], [[7368, 7375], "disallowed"], [[7376, 7378], "valid"], [[7379, 7379], "valid", [], "NV8"], [[7380, 7410], "valid"], [[7411, 7414], "valid"], [[7415, 7415], "disallowed"], [[7416, 7417], "valid"], [[7418, 7423], "disallowed"], [[7424, 7467], "valid"], [[7468, 7468], "mapped", [97]], [[7469, 7469], "mapped", [230]], [[7470, 7470], "mapped", [98]], [[7471, 7471], "valid"], [[7472, 7472], "mapped", [100]], [[7473, 7473], "mapped", [101]], [[7474, 7474], "mapped", [477]], [[7475, 7475], "mapped", [103]], [[7476, 7476], "mapped", [104]], [[7477, 7477], "mapped", [105]], [[7478, 7478], "mapped", [106]], [[7479, 7479], "mapped", [107]], [[7480, 7480], "mapped", [108]], [[7481, 7481], "mapped", [109]], [[7482, 7482], "mapped", [110]], [[7483, 7483], "valid"], [[7484, 7484], "mapped", [111]], [[7485, 7485], "mapped", [547]], [[7486, 7486], "mapped", [112]], [[7487, 7487], "mapped", [114]], [[7488, 7488], "mapped", [116]], [[7489, 7489], "mapped", [117]], [[7490, 7490], "mapped", [119]], [[7491, 7491], "mapped", [97]], [[7492, 7492], "mapped", [592]], [[7493, 7493], "mapped", [593]], [[7494, 7494], "mapped", [7426]], [[7495, 7495], "mapped", [98]], [[7496, 7496], "mapped", [100]], [[7497, 7497], "mapped", [101]], [[7498, 7498], "mapped", [601]], [[7499, 7499], "mapped", [603]], [[7500, 7500], "mapped", [604]], [[7501, 7501], "mapped", [103]], [[7502, 7502], "valid"], [[7503, 7503], "mapped", [107]], [[7504, 7504], "mapped", [109]], [[7505, 7505], "mapped", [331]], [[7506, 7506], "mapped", [111]], [[7507, 7507], "mapped", [596]], [[7508, 7508], "mapped", [7446]], [[7509, 7509], "mapped", [7447]], [[7510, 7510], "mapped", [112]], [[7511, 7511], "mapped", [116]], [[7512, 7512], "mapped", [117]], [[7513, 7513], "mapped", [7453]], [[7514, 7514], "mapped", [623]], [[7515, 7515], "mapped", [118]], [[7516, 7516], "mapped", [7461]], [[7517, 7517], "mapped", [946]], [[7518, 7518], "mapped", [947]], [[7519, 7519], "mapped", [948]], [[7520, 7520], "mapped", [966]], [[7521, 7521], "mapped", [967]], [[7522, 7522], "mapped", [105]], [[7523, 7523], "mapped", [114]], [[7524, 7524], "mapped", [117]], [[7525, 7525], "mapped", [118]], [[7526, 7526], "mapped", [946]], [[7527, 7527], "mapped", [947]], [[7528, 7528], "mapped", [961]], [[7529, 7529], "mapped", [966]], [[7530, 7530], "mapped", [967]], [[7531, 7531], "valid"], [[7532, 7543], "valid"], [[7544, 7544], "mapped", [1085]], [[7545, 7578], "valid"], [[7579, 7579], "mapped", [594]], [[7580, 7580], "mapped", [99]], [[7581, 7581], "mapped", [597]], [[7582, 7582], "mapped", [240]], [[7583, 7583], "mapped", [604]], [[7584, 7584], "mapped", [102]], [[7585, 7585], "mapped", [607]], [[7586, 7586], "mapped", [609]], [[7587, 7587], "mapped", [613]], [[7588, 7588], "mapped", [616]], [[7589, 7589], "mapped", [617]], [[7590, 7590], "mapped", [618]], [[7591, 7591], "mapped", [7547]], [[7592, 7592], "mapped", [669]], [[7593, 7593], "mapped", [621]], [[7594, 7594], "mapped", [7557]], [[7595, 7595], "mapped", [671]], [[7596, 7596], "mapped", [625]], [[7597, 7597], "mapped", [624]], [[7598, 7598], "mapped", [626]], [[7599, 7599], "mapped", [627]], [[7600, 7600], "mapped", [628]], [[7601, 7601], "mapped", [629]], [[7602, 7602], "mapped", [632]], [[7603, 7603], "mapped", [642]], [[7604, 7604], "mapped", [643]], [[7605, 7605], "mapped", [427]], [[7606, 7606], "mapped", [649]], [[7607, 7607], "mapped", [650]], [[7608, 7608], "mapped", [7452]], [[7609, 7609], "mapped", [651]], [[7610, 7610], "mapped", [652]], [[7611, 7611], "mapped", [122]], [[7612, 7612], "mapped", [656]], [[7613, 7613], "mapped", [657]], [[7614, 7614], "mapped", [658]], [[7615, 7615], "mapped", [952]], [[7616, 7619], "valid"], [[7620, 7626], "valid"], [[7627, 7654], "valid"], [[7655, 7669], "valid"], [[7670, 7675], "disallowed"], [[7676, 7676], "valid"], [[7677, 7677], "valid"], [[7678, 7679], "valid"], [[7680, 7680], "mapped", [7681]], [[7681, 7681], "valid"], [[7682, 7682], "mapped", [7683]], [[7683, 7683], "valid"], [[7684, 7684], "mapped", [7685]], [[7685, 7685], "valid"], [[7686, 7686], "mapped", [7687]], [[7687, 7687], "valid"], [[7688, 7688], "mapped", [7689]], [[7689, 7689], "valid"], [[7690, 7690], "mapped", [7691]], [[7691, 7691], "valid"], [[7692, 7692], "mapped", [7693]], [[7693, 7693], "valid"], [[7694, 7694], "mapped", [7695]], [[7695, 7695], "valid"], [[7696, 7696], "mapped", [7697]], [[7697, 7697], "valid"], [[7698, 7698], "mapped", [7699]], [[7699, 7699], "valid"], [[7700, 7700], "mapped", [7701]], [[7701, 7701], "valid"], [[7702, 7702], "mapped", [7703]], [[7703, 7703], "valid"], [[7704, 7704], "mapped", [7705]], [[7705, 7705], "valid"], [[7706, 7706], "mapped", [7707]], [[7707, 7707], "valid"], [[7708, 7708], "mapped", [7709]], [[7709, 7709], "valid"], [[7710, 7710], "mapped", [7711]], [[7711, 7711], "valid"], [[7712, 7712], "mapped", [7713]], [[7713, 7713], "valid"], [[7714, 7714], "mapped", [7715]], [[7715, 7715], "valid"], [[7716, 7716], "mapped", [7717]], [[7717, 7717], "valid"], [[7718, 7718], "mapped", [7719]], [[7719, 7719], "valid"], [[7720, 7720], "mapped", [7721]], [[7721, 7721], "valid"], [[7722, 7722], "mapped", [7723]], [[7723, 7723], "valid"], [[7724, 7724], "mapped", [7725]], [[7725, 7725], "valid"], [[7726, 7726], "mapped", [7727]], [[7727, 7727], "valid"], [[7728, 7728], "mapped", [7729]], [[7729, 7729], "valid"], [[7730, 7730], "mapped", [7731]], [[7731, 7731], "valid"], [[7732, 7732], "mapped", [7733]], [[7733, 7733], "valid"], [[7734, 7734], "mapped", [7735]], [[7735, 7735], "valid"], [[7736, 7736], "mapped", [7737]], [[7737, 7737], "valid"], [[7738, 7738], "mapped", [7739]], [[7739, 7739], "valid"], [[7740, 7740], "mapped", [7741]], [[7741, 7741], "valid"], [[7742, 7742], "mapped", [7743]], [[7743, 7743], "valid"], [[7744, 7744], "mapped", [7745]], [[7745, 7745], "valid"], [[7746, 7746], "mapped", [7747]], [[7747, 7747], "valid"], [[7748, 7748], "mapped", [7749]], [[7749, 7749], "valid"], [[7750, 7750], "mapped", [7751]], [[7751, 7751], "valid"], [[7752, 7752], "mapped", [7753]], [[7753, 7753], "valid"], [[7754, 7754], "mapped", [7755]], [[7755, 7755], "valid"], [[7756, 7756], "mapped", [7757]], [[7757, 7757], "valid"], [[7758, 7758], "mapped", [7759]], [[7759, 7759], "valid"], [[7760, 7760], "mapped", [7761]], [[7761, 7761], "valid"], [[7762, 7762], "mapped", [7763]], [[7763, 7763], "valid"], [[7764, 7764], "mapped", [7765]], [[7765, 7765], "valid"], [[7766, 7766], "mapped", [7767]], [[7767, 7767], "valid"], [[7768, 7768], "mapped", [7769]], [[7769, 7769], "valid"], [[7770, 7770], "mapped", [7771]], [[7771, 7771], "valid"], [[7772, 7772], "mapped", [7773]], [[7773, 7773], "valid"], [[7774, 7774], "mapped", [7775]], [[7775, 7775], "valid"], [[7776, 7776], "mapped", [7777]], [[7777, 7777], "valid"], [[7778, 7778], "mapped", [7779]], [[7779, 7779], "valid"], [[7780, 7780], "mapped", [7781]], [[7781, 7781], "valid"], [[7782, 7782], "mapped", [7783]], [[7783, 7783], "valid"], [[7784, 7784], "mapped", [7785]], [[7785, 7785], "valid"], [[7786, 7786], "mapped", [7787]], [[7787, 7787], "valid"], [[7788, 7788], "mapped", [7789]], [[7789, 7789], "valid"], [[7790, 7790], "mapped", [7791]], [[7791, 7791], "valid"], [[7792, 7792], "mapped", [7793]], [[7793, 7793], "valid"], [[7794, 7794], "mapped", [7795]], [[7795, 7795], "valid"], [[7796, 7796], "mapped", [7797]], [[7797, 7797], "valid"], [[7798, 7798], "mapped", [7799]], [[7799, 7799], "valid"], [[7800, 7800], "mapped", [7801]], [[7801, 7801], "valid"], [[7802, 7802], "mapped", [7803]], [[7803, 7803], "valid"], [[7804, 7804], "mapped", [7805]], [[7805, 7805], "valid"], [[7806, 7806], "mapped", [7807]], [[7807, 7807], "valid"], [[7808, 7808], "mapped", [7809]], [[7809, 7809], "valid"], [[7810, 7810], "mapped", [7811]], [[7811, 7811], "valid"], [[7812, 7812], "mapped", [7813]], [[7813, 7813], "valid"], [[7814, 7814], "mapped", [7815]], [[7815, 7815], "valid"], [[7816, 7816], "mapped", [7817]], [[7817, 7817], "valid"], [[7818, 7818], "mapped", [7819]], [[7819, 7819], "valid"], [[7820, 7820], "mapped", [7821]], [[7821, 7821], "valid"], [[7822, 7822], "mapped", [7823]], [[7823, 7823], "valid"], [[7824, 7824], "mapped", [7825]], [[7825, 7825], "valid"], [[7826, 7826], "mapped", [7827]], [[7827, 7827], "valid"], [[7828, 7828], "mapped", [7829]], [[7829, 7833], "valid"], [[7834, 7834], "mapped", [97, 702]], [[7835, 7835], "mapped", [7777]], [[7836, 7837], "valid"], [[7838, 7838], "mapped", [115, 115]], [[7839, 7839], "valid"], [[7840, 7840], "mapped", [7841]], [[7841, 7841], "valid"], [[7842, 7842], "mapped", [7843]], [[7843, 7843], "valid"], [[7844, 7844], "mapped", [7845]], [[7845, 7845], "valid"], [[7846, 7846], "mapped", [7847]], [[7847, 7847], "valid"], [[7848, 7848], "mapped", [7849]], [[7849, 7849], "valid"], [[7850, 7850], "mapped", [7851]], [[7851, 7851], "valid"], [[7852, 7852], "mapped", [7853]], [[7853, 7853], "valid"], [[7854, 7854], "mapped", [7855]], [[7855, 7855], "valid"], [[7856, 7856], "mapped", [7857]], [[7857, 7857], "valid"], [[7858, 7858], "mapped", [7859]], [[7859, 7859], "valid"], [[7860, 7860], "mapped", [7861]], [[7861, 7861], "valid"], [[7862, 7862], "mapped", [7863]], [[7863, 7863], "valid"], [[7864, 7864], "mapped", [7865]], [[7865, 7865], "valid"], [[7866, 7866], "mapped", [7867]], [[7867, 7867], "valid"], [[7868, 7868], "mapped", [7869]], [[7869, 7869], "valid"], [[7870, 7870], "mapped", [7871]], [[7871, 7871], "valid"], [[7872, 7872], "mapped", [7873]], [[7873, 7873], "valid"], [[7874, 7874], "mapped", [7875]], [[7875, 7875], "valid"], [[7876, 7876], "mapped", [7877]], [[7877, 7877], "valid"], [[7878, 7878], "mapped", [7879]], [[7879, 7879], "valid"], [[7880, 7880], "mapped", [7881]], [[7881, 7881], "valid"], [[7882, 7882], "mapped", [7883]], [[7883, 7883], "valid"], [[7884, 7884], "mapped", [7885]], [[7885, 7885], "valid"], [[7886, 7886], "mapped", [7887]], [[7887, 7887], "valid"], [[7888, 7888], "mapped", [7889]], [[7889, 7889], "valid"], [[7890, 7890], "mapped", [7891]], [[7891, 7891], "valid"], [[7892, 7892], "mapped", [7893]], [[7893, 7893], "valid"], [[7894, 7894], "mapped", [7895]], [[7895, 7895], "valid"], [[7896, 7896], "mapped", [7897]], [[7897, 7897], "valid"], [[7898, 7898], "mapped", [7899]], [[7899, 7899], "valid"], [[7900, 7900], "mapped", [7901]], [[7901, 7901], "valid"], [[7902, 7902], "mapped", [7903]], [[7903, 7903], "valid"], [[7904, 7904], "mapped", [7905]], [[7905, 7905], "valid"], [[7906, 7906], "mapped", [7907]], [[7907, 7907], "valid"], [[7908, 7908], "mapped", [7909]], [[7909, 7909], "valid"], [[7910, 7910], "mapped", [7911]], [[7911, 7911], "valid"], [[7912, 7912], "mapped", [7913]], [[7913, 7913], "valid"], [[7914, 7914], "mapped", [7915]], [[7915, 7915], "valid"], [[7916, 7916], "mapped", [7917]], [[7917, 7917], "valid"], [[7918, 7918], "mapped", [7919]], [[7919, 7919], "valid"], [[7920, 7920], "mapped", [7921]], [[7921, 7921], "valid"], [[7922, 7922], "mapped", [7923]], [[7923, 7923], "valid"], [[7924, 7924], "mapped", [7925]], [[7925, 7925], "valid"], [[7926, 7926], "mapped", [7927]], [[7927, 7927], "valid"], [[7928, 7928], "mapped", [7929]], [[7929, 7929], "valid"], [[7930, 7930], "mapped", [7931]], [[7931, 7931], "valid"], [[7932, 7932], "mapped", [7933]], [[7933, 7933], "valid"], [[7934, 7934], "mapped", [7935]], [[7935, 7935], "valid"], [[7936, 7943], "valid"], [[7944, 7944], "mapped", [7936]], [[7945, 7945], "mapped", [7937]], [[7946, 7946], "mapped", [7938]], [[7947, 7947], "mapped", [7939]], [[7948, 7948], "mapped", [7940]], [[7949, 7949], "mapped", [7941]], [[7950, 7950], "mapped", [7942]], [[7951, 7951], "mapped", [7943]], [[7952, 7957], "valid"], [[7958, 7959], "disallowed"], [[7960, 7960], "mapped", [7952]], [[7961, 7961], "mapped", [7953]], [[7962, 7962], "mapped", [7954]], [[7963, 7963], "mapped", [7955]], [[7964, 7964], "mapped", [7956]], [[7965, 7965], "mapped", [7957]], [[7966, 7967], "disallowed"], [[7968, 7975], "valid"], [[7976, 7976], "mapped", [7968]], [[7977, 7977], "mapped", [7969]], [[7978, 7978], "mapped", [7970]], [[7979, 7979], "mapped", [7971]], [[7980, 7980], "mapped", [7972]], [[7981, 7981], "mapped", [7973]], [[7982, 7982], "mapped", [7974]], [[7983, 7983], "mapped", [7975]], [[7984, 7991], "valid"], [[7992, 7992], "mapped", [7984]], [[7993, 7993], "mapped", [7985]], [[7994, 7994], "mapped", [7986]], [[7995, 7995], "mapped", [7987]], [[7996, 7996], "mapped", [7988]], [[7997, 7997], "mapped", [7989]], [[7998, 7998], "mapped", [7990]], [[7999, 7999], "mapped", [7991]], [[8e3, 8005], "valid"], [[8006, 8007], "disallowed"], [[8008, 8008], "mapped", [8e3]], [[8009, 8009], "mapped", [8001]], [[8010, 8010], "mapped", [8002]], [[8011, 8011], "mapped", [8003]], [[8012, 8012], "mapped", [8004]], [[8013, 8013], "mapped", [8005]], [[8014, 8015], "disallowed"], [[8016, 8023], "valid"], [[8024, 8024], "disallowed"], [[8025, 8025], "mapped", [8017]], [[8026, 8026], "disallowed"], [[8027, 8027], "mapped", [8019]], [[8028, 8028], "disallowed"], [[8029, 8029], "mapped", [8021]], [[8030, 8030], "disallowed"], [[8031, 8031], "mapped", [8023]], [[8032, 8039], "valid"], [[8040, 8040], "mapped", [8032]], [[8041, 8041], "mapped", [8033]], [[8042, 8042], "mapped", [8034]], [[8043, 8043], "mapped", [8035]], [[8044, 8044], "mapped", [8036]], [[8045, 8045], "mapped", [8037]], [[8046, 8046], "mapped", [8038]], [[8047, 8047], "mapped", [8039]], [[8048, 8048], "valid"], [[8049, 8049], "mapped", [940]], [[8050, 8050], "valid"], [[8051, 8051], "mapped", [941]], [[8052, 8052], "valid"], [[8053, 8053], "mapped", [942]], [[8054, 8054], "valid"], [[8055, 8055], "mapped", [943]], [[8056, 8056], "valid"], [[8057, 8057], "mapped", [972]], [[8058, 8058], "valid"], [[8059, 8059], "mapped", [973]], [[8060, 8060], "valid"], [[8061, 8061], "mapped", [974]], [[8062, 8063], "disallowed"], [[8064, 8064], "mapped", [7936, 953]], [[8065, 8065], "mapped", [7937, 953]], [[8066, 8066], "mapped", [7938, 953]], [[8067, 8067], "mapped", [7939, 953]], [[8068, 8068], "mapped", [7940, 953]], [[8069, 8069], "mapped", [7941, 953]], [[8070, 8070], "mapped", [7942, 953]], [[8071, 8071], "mapped", [7943, 953]], [[8072, 8072], "mapped", [7936, 953]], [[8073, 8073], "mapped", [7937, 953]], [[8074, 8074], "mapped", [7938, 953]], [[8075, 8075], "mapped", [7939, 953]], [[8076, 8076], "mapped", [7940, 953]], [[8077, 8077], "mapped", [7941, 953]], [[8078, 8078], "mapped", [7942, 953]], [[8079, 8079], "mapped", [7943, 953]], [[8080, 8080], "mapped", [7968, 953]], [[8081, 8081], "mapped", [7969, 953]], [[8082, 8082], "mapped", [7970, 953]], [[8083, 8083], "mapped", [7971, 953]], [[8084, 8084], "mapped", [7972, 953]], [[8085, 8085], "mapped", [7973, 953]], [[8086, 8086], "mapped", [7974, 953]], [[8087, 8087], "mapped", [7975, 953]], [[8088, 8088], "mapped", [7968, 953]], [[8089, 8089], "mapped", [7969, 953]], [[8090, 8090], "mapped", [7970, 953]], [[8091, 8091], "mapped", [7971, 953]], [[8092, 8092], "mapped", [7972, 953]], [[8093, 8093], "mapped", [7973, 953]], [[8094, 8094], "mapped", [7974, 953]], [[8095, 8095], "mapped", [7975, 953]], [[8096, 8096], "mapped", [8032, 953]], [[8097, 8097], "mapped", [8033, 953]], [[8098, 8098], "mapped", [8034, 953]], [[8099, 8099], "mapped", [8035, 953]], [[8100, 8100], "mapped", [8036, 953]], [[8101, 8101], "mapped", [8037, 953]], [[8102, 8102], "mapped", [8038, 953]], [[8103, 8103], "mapped", [8039, 953]], [[8104, 8104], "mapped", [8032, 953]], [[8105, 8105], "mapped", [8033, 953]], [[8106, 8106], "mapped", [8034, 953]], [[8107, 8107], "mapped", [8035, 953]], [[8108, 8108], "mapped", [8036, 953]], [[8109, 8109], "mapped", [8037, 953]], [[8110, 8110], "mapped", [8038, 953]], [[8111, 8111], "mapped", [8039, 953]], [[8112, 8113], "valid"], [[8114, 8114], "mapped", [8048, 953]], [[8115, 8115], "mapped", [945, 953]], [[8116, 8116], "mapped", [940, 953]], [[8117, 8117], "disallowed"], [[8118, 8118], "valid"], [[8119, 8119], "mapped", [8118, 953]], [[8120, 8120], "mapped", [8112]], [[8121, 8121], "mapped", [8113]], [[8122, 8122], "mapped", [8048]], [[8123, 8123], "mapped", [940]], [[8124, 8124], "mapped", [945, 953]], [[8125, 8125], "disallowed_STD3_mapped", [32, 787]], [[8126, 8126], "mapped", [953]], [[8127, 8127], "disallowed_STD3_mapped", [32, 787]], [[8128, 8128], "disallowed_STD3_mapped", [32, 834]], [[8129, 8129], "disallowed_STD3_mapped", [32, 776, 834]], [[8130, 8130], "mapped", [8052, 953]], [[8131, 8131], "mapped", [951, 953]], [[8132, 8132], "mapped", [942, 953]], [[8133, 8133], "disallowed"], [[8134, 8134], "valid"], [[8135, 8135], "mapped", [8134, 953]], [[8136, 8136], "mapped", [8050]], [[8137, 8137], "mapped", [941]], [[8138, 8138], "mapped", [8052]], [[8139, 8139], "mapped", [942]], [[8140, 8140], "mapped", [951, 953]], [[8141, 8141], "disallowed_STD3_mapped", [32, 787, 768]], [[8142, 8142], "disallowed_STD3_mapped", [32, 787, 769]], [[8143, 8143], "disallowed_STD3_mapped", [32, 787, 834]], [[8144, 8146], "valid"], [[8147, 8147], "mapped", [912]], [[8148, 8149], "disallowed"], [[8150, 8151], "valid"], [[8152, 8152], "mapped", [8144]], [[8153, 8153], "mapped", [8145]], [[8154, 8154], "mapped", [8054]], [[8155, 8155], "mapped", [943]], [[8156, 8156], "disallowed"], [[8157, 8157], "disallowed_STD3_mapped", [32, 788, 768]], [[8158, 8158], "disallowed_STD3_mapped", [32, 788, 769]], [[8159, 8159], "disallowed_STD3_mapped", [32, 788, 834]], [[8160, 8162], "valid"], [[8163, 8163], "mapped", [944]], [[8164, 8167], "valid"], [[8168, 8168], "mapped", [8160]], [[8169, 8169], "mapped", [8161]], [[8170, 8170], "mapped", [8058]], [[8171, 8171], "mapped", [973]], [[8172, 8172], "mapped", [8165]], [[8173, 8173], "disallowed_STD3_mapped", [32, 776, 768]], [[8174, 8174], "disallowed_STD3_mapped", [32, 776, 769]], [[8175, 8175], "disallowed_STD3_mapped", [96]], [[8176, 8177], "disallowed"], [[8178, 8178], "mapped", [8060, 953]], [[8179, 8179], "mapped", [969, 953]], [[8180, 8180], "mapped", [974, 953]], [[8181, 8181], "disallowed"], [[8182, 8182], "valid"], [[8183, 8183], "mapped", [8182, 953]], [[8184, 8184], "mapped", [8056]], [[8185, 8185], "mapped", [972]], [[8186, 8186], "mapped", [8060]], [[8187, 8187], "mapped", [974]], [[8188, 8188], "mapped", [969, 953]], [[8189, 8189], "disallowed_STD3_mapped", [32, 769]], [[8190, 8190], "disallowed_STD3_mapped", [32, 788]], [[8191, 8191], "disallowed"], [[8192, 8202], "disallowed_STD3_mapped", [32]], [[8203, 8203], "ignored"], [[8204, 8205], "deviation", []], [[8206, 8207], "disallowed"], [[8208, 8208], "valid", [], "NV8"], [[8209, 8209], "mapped", [8208]], [[8210, 8214], "valid", [], "NV8"], [[8215, 8215], "disallowed_STD3_mapped", [32, 819]], [[8216, 8227], "valid", [], "NV8"], [[8228, 8230], "disallowed"], [[8231, 8231], "valid", [], "NV8"], [[8232, 8238], "disallowed"], [[8239, 8239], "disallowed_STD3_mapped", [32]], [[8240, 8242], "valid", [], "NV8"], [[8243, 8243], "mapped", [8242, 8242]], [[8244, 8244], "mapped", [8242, 8242, 8242]], [[8245, 8245], "valid", [], "NV8"], [[8246, 8246], "mapped", [8245, 8245]], [[8247, 8247], "mapped", [8245, 8245, 8245]], [[8248, 8251], "valid", [], "NV8"], [[8252, 8252], "disallowed_STD3_mapped", [33, 33]], [[8253, 8253], "valid", [], "NV8"], [[8254, 8254], "disallowed_STD3_mapped", [32, 773]], [[8255, 8262], "valid", [], "NV8"], [[8263, 8263], "disallowed_STD3_mapped", [63, 63]], [[8264, 8264], "disallowed_STD3_mapped", [63, 33]], [[8265, 8265], "disallowed_STD3_mapped", [33, 63]], [[8266, 8269], "valid", [], "NV8"], [[8270, 8274], "valid", [], "NV8"], [[8275, 8276], "valid", [], "NV8"], [[8277, 8278], "valid", [], "NV8"], [[8279, 8279], "mapped", [8242, 8242, 8242, 8242]], [[8280, 8286], "valid", [], "NV8"], [[8287, 8287], "disallowed_STD3_mapped", [32]], [[8288, 8288], "ignored"], [[8289, 8291], "disallowed"], [[8292, 8292], "ignored"], [[8293, 8293], "disallowed"], [[8294, 8297], "disallowed"], [[8298, 8303], "disallowed"], [[8304, 8304], "mapped", [48]], [[8305, 8305], "mapped", [105]], [[8306, 8307], "disallowed"], [[8308, 8308], "mapped", [52]], [[8309, 8309], "mapped", [53]], [[8310, 8310], "mapped", [54]], [[8311, 8311], "mapped", [55]], [[8312, 8312], "mapped", [56]], [[8313, 8313], "mapped", [57]], [[8314, 8314], "disallowed_STD3_mapped", [43]], [[8315, 8315], "mapped", [8722]], [[8316, 8316], "disallowed_STD3_mapped", [61]], [[8317, 8317], "disallowed_STD3_mapped", [40]], [[8318, 8318], "disallowed_STD3_mapped", [41]], [[8319, 8319], "mapped", [110]], [[8320, 8320], "mapped", [48]], [[8321, 8321], "mapped", [49]], [[8322, 8322], "mapped", [50]], [[8323, 8323], "mapped", [51]], [[8324, 8324], "mapped", [52]], [[8325, 8325], "mapped", [53]], [[8326, 8326], "mapped", [54]], [[8327, 8327], "mapped", [55]], [[8328, 8328], "mapped", [56]], [[8329, 8329], "mapped", [57]], [[8330, 8330], "disallowed_STD3_mapped", [43]], [[8331, 8331], "mapped", [8722]], [[8332, 8332], "disallowed_STD3_mapped", [61]], [[8333, 8333], "disallowed_STD3_mapped", [40]], [[8334, 8334], "disallowed_STD3_mapped", [41]], [[8335, 8335], "disallowed"], [[8336, 8336], "mapped", [97]], [[8337, 8337], "mapped", [101]], [[8338, 8338], "mapped", [111]], [[8339, 8339], "mapped", [120]], [[8340, 8340], "mapped", [601]], [[8341, 8341], "mapped", [104]], [[8342, 8342], "mapped", [107]], [[8343, 8343], "mapped", [108]], [[8344, 8344], "mapped", [109]], [[8345, 8345], "mapped", [110]], [[8346, 8346], "mapped", [112]], [[8347, 8347], "mapped", [115]], [[8348, 8348], "mapped", [116]], [[8349, 8351], "disallowed"], [[8352, 8359], "valid", [], "NV8"], [[8360, 8360], "mapped", [114, 115]], [[8361, 8362], "valid", [], "NV8"], [[8363, 8363], "valid", [], "NV8"], [[8364, 8364], "valid", [], "NV8"], [[8365, 8367], "valid", [], "NV8"], [[8368, 8369], "valid", [], "NV8"], [[8370, 8373], "valid", [], "NV8"], [[8374, 8376], "valid", [], "NV8"], [[8377, 8377], "valid", [], "NV8"], [[8378, 8378], "valid", [], "NV8"], [[8379, 8381], "valid", [], "NV8"], [[8382, 8382], "valid", [], "NV8"], [[8383, 8399], "disallowed"], [[8400, 8417], "valid", [], "NV8"], [[8418, 8419], "valid", [], "NV8"], [[8420, 8426], "valid", [], "NV8"], [[8427, 8427], "valid", [], "NV8"], [[8428, 8431], "valid", [], "NV8"], [[8432, 8432], "valid", [], "NV8"], [[8433, 8447], "disallowed"], [[8448, 8448], "disallowed_STD3_mapped", [97, 47, 99]], [[8449, 8449], "disallowed_STD3_mapped", [97, 47, 115]], [[8450, 8450], "mapped", [99]], [[8451, 8451], "mapped", [176, 99]], [[8452, 8452], "valid", [], "NV8"], [[8453, 8453], "disallowed_STD3_mapped", [99, 47, 111]], [[8454, 8454], "disallowed_STD3_mapped", [99, 47, 117]], [[8455, 8455], "mapped", [603]], [[8456, 8456], "valid", [], "NV8"], [[8457, 8457], "mapped", [176, 102]], [[8458, 8458], "mapped", [103]], [[8459, 8462], "mapped", [104]], [[8463, 8463], "mapped", [295]], [[8464, 8465], "mapped", [105]], [[8466, 8467], "mapped", [108]], [[8468, 8468], "valid", [], "NV8"], [[8469, 8469], "mapped", [110]], [[8470, 8470], "mapped", [110, 111]], [[8471, 8472], "valid", [], "NV8"], [[8473, 8473], "mapped", [112]], [[8474, 8474], "mapped", [113]], [[8475, 8477], "mapped", [114]], [[8478, 8479], "valid", [], "NV8"], [[8480, 8480], "mapped", [115, 109]], [[8481, 8481], "mapped", [116, 101, 108]], [[8482, 8482], "mapped", [116, 109]], [[8483, 8483], "valid", [], "NV8"], [[8484, 8484], "mapped", [122]], [[8485, 8485], "valid", [], "NV8"], [[8486, 8486], "mapped", [969]], [[8487, 8487], "valid", [], "NV8"], [[8488, 8488], "mapped", [122]], [[8489, 8489], "valid", [], "NV8"], [[8490, 8490], "mapped", [107]], [[8491, 8491], "mapped", [229]], [[8492, 8492], "mapped", [98]], [[8493, 8493], "mapped", [99]], [[8494, 8494], "valid", [], "NV8"], [[8495, 8496], "mapped", [101]], [[8497, 8497], "mapped", [102]], [[8498, 8498], "disallowed"], [[8499, 8499], "mapped", [109]], [[8500, 8500], "mapped", [111]], [[8501, 8501], "mapped", [1488]], [[8502, 8502], "mapped", [1489]], [[8503, 8503], "mapped", [1490]], [[8504, 8504], "mapped", [1491]], [[8505, 8505], "mapped", [105]], [[8506, 8506], "valid", [], "NV8"], [[8507, 8507], "mapped", [102, 97, 120]], [[8508, 8508], "mapped", [960]], [[8509, 8510], "mapped", [947]], [[8511, 8511], "mapped", [960]], [[8512, 8512], "mapped", [8721]], [[8513, 8516], "valid", [], "NV8"], [[8517, 8518], "mapped", [100]], [[8519, 8519], "mapped", [101]], [[8520, 8520], "mapped", [105]], [[8521, 8521], "mapped", [106]], [[8522, 8523], "valid", [], "NV8"], [[8524, 8524], "valid", [], "NV8"], [[8525, 8525], "valid", [], "NV8"], [[8526, 8526], "valid"], [[8527, 8527], "valid", [], "NV8"], [[8528, 8528], "mapped", [49, 8260, 55]], [[8529, 8529], "mapped", [49, 8260, 57]], [[8530, 8530], "mapped", [49, 8260, 49, 48]], [[8531, 8531], "mapped", [49, 8260, 51]], [[8532, 8532], "mapped", [50, 8260, 51]], [[8533, 8533], "mapped", [49, 8260, 53]], [[8534, 8534], "mapped", [50, 8260, 53]], [[8535, 8535], "mapped", [51, 8260, 53]], [[8536, 8536], "mapped", [52, 8260, 53]], [[8537, 8537], "mapped", [49, 8260, 54]], [[8538, 8538], "mapped", [53, 8260, 54]], [[8539, 8539], "mapped", [49, 8260, 56]], [[8540, 8540], "mapped", [51, 8260, 56]], [[8541, 8541], "mapped", [53, 8260, 56]], [[8542, 8542], "mapped", [55, 8260, 56]], [[8543, 8543], "mapped", [49, 8260]], [[8544, 8544], "mapped", [105]], [[8545, 8545], "mapped", [105, 105]], [[8546, 8546], "mapped", [105, 105, 105]], [[8547, 8547], "mapped", [105, 118]], [[8548, 8548], "mapped", [118]], [[8549, 8549], "mapped", [118, 105]], [[8550, 8550], "mapped", [118, 105, 105]], [[8551, 8551], "mapped", [118, 105, 105, 105]], [[8552, 8552], "mapped", [105, 120]], [[8553, 8553], "mapped", [120]], [[8554, 8554], "mapped", [120, 105]], [[8555, 8555], "mapped", [120, 105, 105]], [[8556, 8556], "mapped", [108]], [[8557, 8557], "mapped", [99]], [[8558, 8558], "mapped", [100]], [[8559, 8559], "mapped", [109]], [[8560, 8560], "mapped", [105]], [[8561, 8561], "mapped", [105, 105]], [[8562, 8562], "mapped", [105, 105, 105]], [[8563, 8563], "mapped", [105, 118]], [[8564, 8564], "mapped", [118]], [[8565, 8565], "mapped", [118, 105]], [[8566, 8566], "mapped", [118, 105, 105]], [[8567, 8567], "mapped", [118, 105, 105, 105]], [[8568, 8568], "mapped", [105, 120]], [[8569, 8569], "mapped", [120]], [[8570, 8570], "mapped", [120, 105]], [[8571, 8571], "mapped", [120, 105, 105]], [[8572, 8572], "mapped", [108]], [[8573, 8573], "mapped", [99]], [[8574, 8574], "mapped", [100]], [[8575, 8575], "mapped", [109]], [[8576, 8578], "valid", [], "NV8"], [[8579, 8579], "disallowed"], [[8580, 8580], "valid"], [[8581, 8584], "valid", [], "NV8"], [[8585, 8585], "mapped", [48, 8260, 51]], [[8586, 8587], "valid", [], "NV8"], [[8588, 8591], "disallowed"], [[8592, 8682], "valid", [], "NV8"], [[8683, 8691], "valid", [], "NV8"], [[8692, 8703], "valid", [], "NV8"], [[8704, 8747], "valid", [], "NV8"], [[8748, 8748], "mapped", [8747, 8747]], [[8749, 8749], "mapped", [8747, 8747, 8747]], [[8750, 8750], "valid", [], "NV8"], [[8751, 8751], "mapped", [8750, 8750]], [[8752, 8752], "mapped", [8750, 8750, 8750]], [[8753, 8799], "valid", [], "NV8"], [[8800, 8800], "disallowed_STD3_valid"], [[8801, 8813], "valid", [], "NV8"], [[8814, 8815], "disallowed_STD3_valid"], [[8816, 8945], "valid", [], "NV8"], [[8946, 8959], "valid", [], "NV8"], [[8960, 8960], "valid", [], "NV8"], [[8961, 8961], "valid", [], "NV8"], [[8962, 9e3], "valid", [], "NV8"], [[9001, 9001], "mapped", [12296]], [[9002, 9002], "mapped", [12297]], [[9003, 9082], "valid", [], "NV8"], [[9083, 9083], "valid", [], "NV8"], [[9084, 9084], "valid", [], "NV8"], [[9085, 9114], "valid", [], "NV8"], [[9115, 9166], "valid", [], "NV8"], [[9167, 9168], "valid", [], "NV8"], [[9169, 9179], "valid", [], "NV8"], [[9180, 9191], "valid", [], "NV8"], [[9192, 9192], "valid", [], "NV8"], [[9193, 9203], "valid", [], "NV8"], [[9204, 9210], "valid", [], "NV8"], [[9211, 9215], "disallowed"], [[9216, 9252], "valid", [], "NV8"], [[9253, 9254], "valid", [], "NV8"], [[9255, 9279], "disallowed"], [[9280, 9290], "valid", [], "NV8"], [[9291, 9311], "disallowed"], [[9312, 9312], "mapped", [49]], [[9313, 9313], "mapped", [50]], [[9314, 9314], "mapped", [51]], [[9315, 9315], "mapped", [52]], [[9316, 9316], "mapped", [53]], [[9317, 9317], "mapped", [54]], [[9318, 9318], "mapped", [55]], [[9319, 9319], "mapped", [56]], [[9320, 9320], "mapped", [57]], [[9321, 9321], "mapped", [49, 48]], [[9322, 9322], "mapped", [49, 49]], [[9323, 9323], "mapped", [49, 50]], [[9324, 9324], "mapped", [49, 51]], [[9325, 9325], "mapped", [49, 52]], [[9326, 9326], "mapped", [49, 53]], [[9327, 9327], "mapped", [49, 54]], [[9328, 9328], "mapped", [49, 55]], [[9329, 9329], "mapped", [49, 56]], [[9330, 9330], "mapped", [49, 57]], [[9331, 9331], "mapped", [50, 48]], [[9332, 9332], "disallowed_STD3_mapped", [40, 49, 41]], [[9333, 9333], "disallowed_STD3_mapped", [40, 50, 41]], [[9334, 9334], "disallowed_STD3_mapped", [40, 51, 41]], [[9335, 9335], "disallowed_STD3_mapped", [40, 52, 41]], [[9336, 9336], "disallowed_STD3_mapped", [40, 53, 41]], [[9337, 9337], "disallowed_STD3_mapped", [40, 54, 41]], [[9338, 9338], "disallowed_STD3_mapped", [40, 55, 41]], [[9339, 9339], "disallowed_STD3_mapped", [40, 56, 41]], [[9340, 9340], "disallowed_STD3_mapped", [40, 57, 41]], [[9341, 9341], "disallowed_STD3_mapped", [40, 49, 48, 41]], [[9342, 9342], "disallowed_STD3_mapped", [40, 49, 49, 41]], [[9343, 9343], "disallowed_STD3_mapped", [40, 49, 50, 41]], [[9344, 9344], "disallowed_STD3_mapped", [40, 49, 51, 41]], [[9345, 9345], "disallowed_STD3_mapped", [40, 49, 52, 41]], [[9346, 9346], "disallowed_STD3_mapped", [40, 49, 53, 41]], [[9347, 9347], "disallowed_STD3_mapped", [40, 49, 54, 41]], [[9348, 9348], "disallowed_STD3_mapped", [40, 49, 55, 41]], [[9349, 9349], "disallowed_STD3_mapped", [40, 49, 56, 41]], [[9350, 9350], "disallowed_STD3_mapped", [40, 49, 57, 41]], [[9351, 9351], "disallowed_STD3_mapped", [40, 50, 48, 41]], [[9352, 9371], "disallowed"], [[9372, 9372], "disallowed_STD3_mapped", [40, 97, 41]], [[9373, 9373], "disallowed_STD3_mapped", [40, 98, 41]], [[9374, 9374], "disallowed_STD3_mapped", [40, 99, 41]], [[9375, 9375], "disallowed_STD3_mapped", [40, 100, 41]], [[9376, 9376], "disallowed_STD3_mapped", [40, 101, 41]], [[9377, 9377], "disallowed_STD3_mapped", [40, 102, 41]], [[9378, 9378], "disallowed_STD3_mapped", [40, 103, 41]], [[9379, 9379], "disallowed_STD3_mapped", [40, 104, 41]], [[9380, 9380], "disallowed_STD3_mapped", [40, 105, 41]], [[9381, 9381], "disallowed_STD3_mapped", [40, 106, 41]], [[9382, 9382], "disallowed_STD3_mapped", [40, 107, 41]], [[9383, 9383], "disallowed_STD3_mapped", [40, 108, 41]], [[9384, 9384], "disallowed_STD3_mapped", [40, 109, 41]], [[9385, 9385], "disallowed_STD3_mapped", [40, 110, 41]], [[9386, 9386], "disallowed_STD3_mapped", [40, 111, 41]], [[9387, 9387], "disallowed_STD3_mapped", [40, 112, 41]], [[9388, 9388], "disallowed_STD3_mapped", [40, 113, 41]], [[9389, 9389], "disallowed_STD3_mapped", [40, 114, 41]], [[9390, 9390], "disallowed_STD3_mapped", [40, 115, 41]], [[9391, 9391], "disallowed_STD3_mapped", [40, 116, 41]], [[9392, 9392], "disallowed_STD3_mapped", [40, 117, 41]], [[9393, 9393], "disallowed_STD3_mapped", [40, 118, 41]], [[9394, 9394], "disallowed_STD3_mapped", [40, 119, 41]], [[9395, 9395], "disallowed_STD3_mapped", [40, 120, 41]], [[9396, 9396], "disallowed_STD3_mapped", [40, 121, 41]], [[9397, 9397], "disallowed_STD3_mapped", [40, 122, 41]], [[9398, 9398], "mapped", [97]], [[9399, 9399], "mapped", [98]], [[9400, 9400], "mapped", [99]], [[9401, 9401], "mapped", [100]], [[9402, 9402], "mapped", [101]], [[9403, 9403], "mapped", [102]], [[9404, 9404], "mapped", [103]], [[9405, 9405], "mapped", [104]], [[9406, 9406], "mapped", [105]], [[9407, 9407], "mapped", [106]], [[9408, 9408], "mapped", [107]], [[9409, 9409], "mapped", [108]], [[9410, 9410], "mapped", [109]], [[9411, 9411], "mapped", [110]], [[9412, 9412], "mapped", [111]], [[9413, 9413], "mapped", [112]], [[9414, 9414], "mapped", [113]], [[9415, 9415], "mapped", [114]], [[9416, 9416], "mapped", [115]], [[9417, 9417], "mapped", [116]], [[9418, 9418], "mapped", [117]], [[9419, 9419], "mapped", [118]], [[9420, 9420], "mapped", [119]], [[9421, 9421], "mapped", [120]], [[9422, 9422], "mapped", [121]], [[9423, 9423], "mapped", [122]], [[9424, 9424], "mapped", [97]], [[9425, 9425], "mapped", [98]], [[9426, 9426], "mapped", [99]], [[9427, 9427], "mapped", [100]], [[9428, 9428], "mapped", [101]], [[9429, 9429], "mapped", [102]], [[9430, 9430], "mapped", [103]], [[9431, 9431], "mapped", [104]], [[9432, 9432], "mapped", [105]], [[9433, 9433], "mapped", [106]], [[9434, 9434], "mapped", [107]], [[9435, 9435], "mapped", [108]], [[9436, 9436], "mapped", [109]], [[9437, 9437], "mapped", [110]], [[9438, 9438], "mapped", [111]], [[9439, 9439], "mapped", [112]], [[9440, 9440], "mapped", [113]], [[9441, 9441], "mapped", [114]], [[9442, 9442], "mapped", [115]], [[9443, 9443], "mapped", [116]], [[9444, 9444], "mapped", [117]], [[9445, 9445], "mapped", [118]], [[9446, 9446], "mapped", [119]], [[9447, 9447], "mapped", [120]], [[9448, 9448], "mapped", [121]], [[9449, 9449], "mapped", [122]], [[9450, 9450], "mapped", [48]], [[9451, 9470], "valid", [], "NV8"], [[9471, 9471], "valid", [], "NV8"], [[9472, 9621], "valid", [], "NV8"], [[9622, 9631], "valid", [], "NV8"], [[9632, 9711], "valid", [], "NV8"], [[9712, 9719], "valid", [], "NV8"], [[9720, 9727], "valid", [], "NV8"], [[9728, 9747], "valid", [], "NV8"], [[9748, 9749], "valid", [], "NV8"], [[9750, 9751], "valid", [], "NV8"], [[9752, 9752], "valid", [], "NV8"], [[9753, 9753], "valid", [], "NV8"], [[9754, 9839], "valid", [], "NV8"], [[9840, 9841], "valid", [], "NV8"], [[9842, 9853], "valid", [], "NV8"], [[9854, 9855], "valid", [], "NV8"], [[9856, 9865], "valid", [], "NV8"], [[9866, 9873], "valid", [], "NV8"], [[9874, 9884], "valid", [], "NV8"], [[9885, 9885], "valid", [], "NV8"], [[9886, 9887], "valid", [], "NV8"], [[9888, 9889], "valid", [], "NV8"], [[9890, 9905], "valid", [], "NV8"], [[9906, 9906], "valid", [], "NV8"], [[9907, 9916], "valid", [], "NV8"], [[9917, 9919], "valid", [], "NV8"], [[9920, 9923], "valid", [], "NV8"], [[9924, 9933], "valid", [], "NV8"], [[9934, 9934], "valid", [], "NV8"], [[9935, 9953], "valid", [], "NV8"], [[9954, 9954], "valid", [], "NV8"], [[9955, 9955], "valid", [], "NV8"], [[9956, 9959], "valid", [], "NV8"], [[9960, 9983], "valid", [], "NV8"], [[9984, 9984], "valid", [], "NV8"], [[9985, 9988], "valid", [], "NV8"], [[9989, 9989], "valid", [], "NV8"], [[9990, 9993], "valid", [], "NV8"], [[9994, 9995], "valid", [], "NV8"], [[9996, 10023], "valid", [], "NV8"], [[10024, 10024], "valid", [], "NV8"], [[10025, 10059], "valid", [], "NV8"], [[10060, 10060], "valid", [], "NV8"], [[10061, 10061], "valid", [], "NV8"], [[10062, 10062], "valid", [], "NV8"], [[10063, 10066], "valid", [], "NV8"], [[10067, 10069], "valid", [], "NV8"], [[10070, 10070], "valid", [], "NV8"], [[10071, 10071], "valid", [], "NV8"], [[10072, 10078], "valid", [], "NV8"], [[10079, 10080], "valid", [], "NV8"], [[10081, 10087], "valid", [], "NV8"], [[10088, 10101], "valid", [], "NV8"], [[10102, 10132], "valid", [], "NV8"], [[10133, 10135], "valid", [], "NV8"], [[10136, 10159], "valid", [], "NV8"], [[10160, 10160], "valid", [], "NV8"], [[10161, 10174], "valid", [], "NV8"], [[10175, 10175], "valid", [], "NV8"], [[10176, 10182], "valid", [], "NV8"], [[10183, 10186], "valid", [], "NV8"], [[10187, 10187], "valid", [], "NV8"], [[10188, 10188], "valid", [], "NV8"], [[10189, 10189], "valid", [], "NV8"], [[10190, 10191], "valid", [], "NV8"], [[10192, 10219], "valid", [], "NV8"], [[10220, 10223], "valid", [], "NV8"], [[10224, 10239], "valid", [], "NV8"], [[10240, 10495], "valid", [], "NV8"], [[10496, 10763], "valid", [], "NV8"], [[10764, 10764], "mapped", [8747, 8747, 8747, 8747]], [[10765, 10867], "valid", [], "NV8"], [[10868, 10868], "disallowed_STD3_mapped", [58, 58, 61]], [[10869, 10869], "disallowed_STD3_mapped", [61, 61]], [[10870, 10870], "disallowed_STD3_mapped", [61, 61, 61]], [[10871, 10971], "valid", [], "NV8"], [[10972, 10972], "mapped", [10973, 824]], [[10973, 11007], "valid", [], "NV8"], [[11008, 11021], "valid", [], "NV8"], [[11022, 11027], "valid", [], "NV8"], [[11028, 11034], "valid", [], "NV8"], [[11035, 11039], "valid", [], "NV8"], [[11040, 11043], "valid", [], "NV8"], [[11044, 11084], "valid", [], "NV8"], [[11085, 11087], "valid", [], "NV8"], [[11088, 11092], "valid", [], "NV8"], [[11093, 11097], "valid", [], "NV8"], [[11098, 11123], "valid", [], "NV8"], [[11124, 11125], "disallowed"], [[11126, 11157], "valid", [], "NV8"], [[11158, 11159], "disallowed"], [[11160, 11193], "valid", [], "NV8"], [[11194, 11196], "disallowed"], [[11197, 11208], "valid", [], "NV8"], [[11209, 11209], "disallowed"], [[11210, 11217], "valid", [], "NV8"], [[11218, 11243], "disallowed"], [[11244, 11247], "valid", [], "NV8"], [[11248, 11263], "disallowed"], [[11264, 11264], "mapped", [11312]], [[11265, 11265], "mapped", [11313]], [[11266, 11266], "mapped", [11314]], [[11267, 11267], "mapped", [11315]], [[11268, 11268], "mapped", [11316]], [[11269, 11269], "mapped", [11317]], [[11270, 11270], "mapped", [11318]], [[11271, 11271], "mapped", [11319]], [[11272, 11272], "mapped", [11320]], [[11273, 11273], "mapped", [11321]], [[11274, 11274], "mapped", [11322]], [[11275, 11275], "mapped", [11323]], [[11276, 11276], "mapped", [11324]], [[11277, 11277], "mapped", [11325]], [[11278, 11278], "mapped", [11326]], [[11279, 11279], "mapped", [11327]], [[11280, 11280], "mapped", [11328]], [[11281, 11281], "mapped", [11329]], [[11282, 11282], "mapped", [11330]], [[11283, 11283], "mapped", [11331]], [[11284, 11284], "mapped", [11332]], [[11285, 11285], "mapped", [11333]], [[11286, 11286], "mapped", [11334]], [[11287, 11287], "mapped", [11335]], [[11288, 11288], "mapped", [11336]], [[11289, 11289], "mapped", [11337]], [[11290, 11290], "mapped", [11338]], [[11291, 11291], "mapped", [11339]], [[11292, 11292], "mapped", [11340]], [[11293, 11293], "mapped", [11341]], [[11294, 11294], "mapped", [11342]], [[11295, 11295], "mapped", [11343]], [[11296, 11296], "mapped", [11344]], [[11297, 11297], "mapped", [11345]], [[11298, 11298], "mapped", [11346]], [[11299, 11299], "mapped", [11347]], [[11300, 11300], "mapped", [11348]], [[11301, 11301], "mapped", [11349]], [[11302, 11302], "mapped", [11350]], [[11303, 11303], "mapped", [11351]], [[11304, 11304], "mapped", [11352]], [[11305, 11305], "mapped", [11353]], [[11306, 11306], "mapped", [11354]], [[11307, 11307], "mapped", [11355]], [[11308, 11308], "mapped", [11356]], [[11309, 11309], "mapped", [11357]], [[11310, 11310], "mapped", [11358]], [[11311, 11311], "disallowed"], [[11312, 11358], "valid"], [[11359, 11359], "disallowed"], [[11360, 11360], "mapped", [11361]], [[11361, 11361], "valid"], [[11362, 11362], "mapped", [619]], [[11363, 11363], "mapped", [7549]], [[11364, 11364], "mapped", [637]], [[11365, 11366], "valid"], [[11367, 11367], "mapped", [11368]], [[11368, 11368], "valid"], [[11369, 11369], "mapped", [11370]], [[11370, 11370], "valid"], [[11371, 11371], "mapped", [11372]], [[11372, 11372], "valid"], [[11373, 11373], "mapped", [593]], [[11374, 11374], "mapped", [625]], [[11375, 11375], "mapped", [592]], [[11376, 11376], "mapped", [594]], [[11377, 11377], "valid"], [[11378, 11378], "mapped", [11379]], [[11379, 11379], "valid"], [[11380, 11380], "valid"], [[11381, 11381], "mapped", [11382]], [[11382, 11383], "valid"], [[11384, 11387], "valid"], [[11388, 11388], "mapped", [106]], [[11389, 11389], "mapped", [118]], [[11390, 11390], "mapped", [575]], [[11391, 11391], "mapped", [576]], [[11392, 11392], "mapped", [11393]], [[11393, 11393], "valid"], [[11394, 11394], "mapped", [11395]], [[11395, 11395], "valid"], [[11396, 11396], "mapped", [11397]], [[11397, 11397], "valid"], [[11398, 11398], "mapped", [11399]], [[11399, 11399], "valid"], [[11400, 11400], "mapped", [11401]], [[11401, 11401], "valid"], [[11402, 11402], "mapped", [11403]], [[11403, 11403], "valid"], [[11404, 11404], "mapped", [11405]], [[11405, 11405], "valid"], [[11406, 11406], "mapped", [11407]], [[11407, 11407], "valid"], [[11408, 11408], "mapped", [11409]], [[11409, 11409], "valid"], [[11410, 11410], "mapped", [11411]], [[11411, 11411], "valid"], [[11412, 11412], "mapped", [11413]], [[11413, 11413], "valid"], [[11414, 11414], "mapped", [11415]], [[11415, 11415], "valid"], [[11416, 11416], "mapped", [11417]], [[11417, 11417], "valid"], [[11418, 11418], "mapped", [11419]], [[11419, 11419], "valid"], [[11420, 11420], "mapped", [11421]], [[11421, 11421], "valid"], [[11422, 11422], "mapped", [11423]], [[11423, 11423], "valid"], [[11424, 11424], "mapped", [11425]], [[11425, 11425], "valid"], [[11426, 11426], "mapped", [11427]], [[11427, 11427], "valid"], [[11428, 11428], "mapped", [11429]], [[11429, 11429], "valid"], [[11430, 11430], "mapped", [11431]], [[11431, 11431], "valid"], [[11432, 11432], "mapped", [11433]], [[11433, 11433], "valid"], [[11434, 11434], "mapped", [11435]], [[11435, 11435], "valid"], [[11436, 11436], "mapped", [11437]], [[11437, 11437], "valid"], [[11438, 11438], "mapped", [11439]], [[11439, 11439], "valid"], [[11440, 11440], "mapped", [11441]], [[11441, 11441], "valid"], [[11442, 11442], "mapped", [11443]], [[11443, 11443], "valid"], [[11444, 11444], "mapped", [11445]], [[11445, 11445], "valid"], [[11446, 11446], "mapped", [11447]], [[11447, 11447], "valid"], [[11448, 11448], "mapped", [11449]], [[11449, 11449], "valid"], [[11450, 11450], "mapped", [11451]], [[11451, 11451], "valid"], [[11452, 11452], "mapped", [11453]], [[11453, 11453], "valid"], [[11454, 11454], "mapped", [11455]], [[11455, 11455], "valid"], [[11456, 11456], "mapped", [11457]], [[11457, 11457], "valid"], [[11458, 11458], "mapped", [11459]], [[11459, 11459], "valid"], [[11460, 11460], "mapped", [11461]], [[11461, 11461], "valid"], [[11462, 11462], "mapped", [11463]], [[11463, 11463], "valid"], [[11464, 11464], "mapped", [11465]], [[11465, 11465], "valid"], [[11466, 11466], "mapped", [11467]], [[11467, 11467], "valid"], [[11468, 11468], "mapped", [11469]], [[11469, 11469], "valid"], [[11470, 11470], "mapped", [11471]], [[11471, 11471], "valid"], [[11472, 11472], "mapped", [11473]], [[11473, 11473], "valid"], [[11474, 11474], "mapped", [11475]], [[11475, 11475], "valid"], [[11476, 11476], "mapped", [11477]], [[11477, 11477], "valid"], [[11478, 11478], "mapped", [11479]], [[11479, 11479], "valid"], [[11480, 11480], "mapped", [11481]], [[11481, 11481], "valid"], [[11482, 11482], "mapped", [11483]], [[11483, 11483], "valid"], [[11484, 11484], "mapped", [11485]], [[11485, 11485], "valid"], [[11486, 11486], "mapped", [11487]], [[11487, 11487], "valid"], [[11488, 11488], "mapped", [11489]], [[11489, 11489], "valid"], [[11490, 11490], "mapped", [11491]], [[11491, 11492], "valid"], [[11493, 11498], "valid", [], "NV8"], [[11499, 11499], "mapped", [11500]], [[11500, 11500], "valid"], [[11501, 11501], "mapped", [11502]], [[11502, 11505], "valid"], [[11506, 11506], "mapped", [11507]], [[11507, 11507], "valid"], [[11508, 11512], "disallowed"], [[11513, 11519], "valid", [], "NV8"], [[11520, 11557], "valid"], [[11558, 11558], "disallowed"], [[11559, 11559], "valid"], [[11560, 11564], "disallowed"], [[11565, 11565], "valid"], [[11566, 11567], "disallowed"], [[11568, 11621], "valid"], [[11622, 11623], "valid"], [[11624, 11630], "disallowed"], [[11631, 11631], "mapped", [11617]], [[11632, 11632], "valid", [], "NV8"], [[11633, 11646], "disallowed"], [[11647, 11647], "valid"], [[11648, 11670], "valid"], [[11671, 11679], "disallowed"], [[11680, 11686], "valid"], [[11687, 11687], "disallowed"], [[11688, 11694], "valid"], [[11695, 11695], "disallowed"], [[11696, 11702], "valid"], [[11703, 11703], "disallowed"], [[11704, 11710], "valid"], [[11711, 11711], "disallowed"], [[11712, 11718], "valid"], [[11719, 11719], "disallowed"], [[11720, 11726], "valid"], [[11727, 11727], "disallowed"], [[11728, 11734], "valid"], [[11735, 11735], "disallowed"], [[11736, 11742], "valid"], [[11743, 11743], "disallowed"], [[11744, 11775], "valid"], [[11776, 11799], "valid", [], "NV8"], [[11800, 11803], "valid", [], "NV8"], [[11804, 11805], "valid", [], "NV8"], [[11806, 11822], "valid", [], "NV8"], [[11823, 11823], "valid"], [[11824, 11824], "valid", [], "NV8"], [[11825, 11825], "valid", [], "NV8"], [[11826, 11835], "valid", [], "NV8"], [[11836, 11842], "valid", [], "NV8"], [[11843, 11903], "disallowed"], [[11904, 11929], "valid", [], "NV8"], [[11930, 11930], "disallowed"], [[11931, 11934], "valid", [], "NV8"], [[11935, 11935], "mapped", [27597]], [[11936, 12018], "valid", [], "NV8"], [[12019, 12019], "mapped", [40863]], [[12020, 12031], "disallowed"], [[12032, 12032], "mapped", [19968]], [[12033, 12033], "mapped", [20008]], [[12034, 12034], "mapped", [20022]], [[12035, 12035], "mapped", [20031]], [[12036, 12036], "mapped", [20057]], [[12037, 12037], "mapped", [20101]], [[12038, 12038], "mapped", [20108]], [[12039, 12039], "mapped", [20128]], [[12040, 12040], "mapped", [20154]], [[12041, 12041], "mapped", [20799]], [[12042, 12042], "mapped", [20837]], [[12043, 12043], "mapped", [20843]], [[12044, 12044], "mapped", [20866]], [[12045, 12045], "mapped", [20886]], [[12046, 12046], "mapped", [20907]], [[12047, 12047], "mapped", [20960]], [[12048, 12048], "mapped", [20981]], [[12049, 12049], "mapped", [20992]], [[12050, 12050], "mapped", [21147]], [[12051, 12051], "mapped", [21241]], [[12052, 12052], "mapped", [21269]], [[12053, 12053], "mapped", [21274]], [[12054, 12054], "mapped", [21304]], [[12055, 12055], "mapped", [21313]], [[12056, 12056], "mapped", [21340]], [[12057, 12057], "mapped", [21353]], [[12058, 12058], "mapped", [21378]], [[12059, 12059], "mapped", [21430]], [[12060, 12060], "mapped", [21448]], [[12061, 12061], "mapped", [21475]], [[12062, 12062], "mapped", [22231]], [[12063, 12063], "mapped", [22303]], [[12064, 12064], "mapped", [22763]], [[12065, 12065], "mapped", [22786]], [[12066, 12066], "mapped", [22794]], [[12067, 12067], "mapped", [22805]], [[12068, 12068], "mapped", [22823]], [[12069, 12069], "mapped", [22899]], [[12070, 12070], "mapped", [23376]], [[12071, 12071], "mapped", [23424]], [[12072, 12072], "mapped", [23544]], [[12073, 12073], "mapped", [23567]], [[12074, 12074], "mapped", [23586]], [[12075, 12075], "mapped", [23608]], [[12076, 12076], "mapped", [23662]], [[12077, 12077], "mapped", [23665]], [[12078, 12078], "mapped", [24027]], [[12079, 12079], "mapped", [24037]], [[12080, 12080], "mapped", [24049]], [[12081, 12081], "mapped", [24062]], [[12082, 12082], "mapped", [24178]], [[12083, 12083], "mapped", [24186]], [[12084, 12084], "mapped", [24191]], [[12085, 12085], "mapped", [24308]], [[12086, 12086], "mapped", [24318]], [[12087, 12087], "mapped", [24331]], [[12088, 12088], "mapped", [24339]], [[12089, 12089], "mapped", [24400]], [[12090, 12090], "mapped", [24417]], [[12091, 12091], "mapped", [24435]], [[12092, 12092], "mapped", [24515]], [[12093, 12093], "mapped", [25096]], [[12094, 12094], "mapped", [25142]], [[12095, 12095], "mapped", [25163]], [[12096, 12096], "mapped", [25903]], [[12097, 12097], "mapped", [25908]], [[12098, 12098], "mapped", [25991]], [[12099, 12099], "mapped", [26007]], [[12100, 12100], "mapped", [26020]], [[12101, 12101], "mapped", [26041]], [[12102, 12102], "mapped", [26080]], [[12103, 12103], "mapped", [26085]], [[12104, 12104], "mapped", [26352]], [[12105, 12105], "mapped", [26376]], [[12106, 12106], "mapped", [26408]], [[12107, 12107], "mapped", [27424]], [[12108, 12108], "mapped", [27490]], [[12109, 12109], "mapped", [27513]], [[12110, 12110], "mapped", [27571]], [[12111, 12111], "mapped", [27595]], [[12112, 12112], "mapped", [27604]], [[12113, 12113], "mapped", [27611]], [[12114, 12114], "mapped", [27663]], [[12115, 12115], "mapped", [27668]], [[12116, 12116], "mapped", [27700]], [[12117, 12117], "mapped", [28779]], [[12118, 12118], "mapped", [29226]], [[12119, 12119], "mapped", [29238]], [[12120, 12120], "mapped", [29243]], [[12121, 12121], "mapped", [29247]], [[12122, 12122], "mapped", [29255]], [[12123, 12123], "mapped", [29273]], [[12124, 12124], "mapped", [29275]], [[12125, 12125], "mapped", [29356]], [[12126, 12126], "mapped", [29572]], [[12127, 12127], "mapped", [29577]], [[12128, 12128], "mapped", [29916]], [[12129, 12129], "mapped", [29926]], [[12130, 12130], "mapped", [29976]], [[12131, 12131], "mapped", [29983]], [[12132, 12132], "mapped", [29992]], [[12133, 12133], "mapped", [3e4]], [[12134, 12134], "mapped", [30091]], [[12135, 12135], "mapped", [30098]], [[12136, 12136], "mapped", [30326]], [[12137, 12137], "mapped", [30333]], [[12138, 12138], "mapped", [30382]], [[12139, 12139], "mapped", [30399]], [[12140, 12140], "mapped", [30446]], [[12141, 12141], "mapped", [30683]], [[12142, 12142], "mapped", [30690]], [[12143, 12143], "mapped", [30707]], [[12144, 12144], "mapped", [31034]], [[12145, 12145], "mapped", [31160]], [[12146, 12146], "mapped", [31166]], [[12147, 12147], "mapped", [31348]], [[12148, 12148], "mapped", [31435]], [[12149, 12149], "mapped", [31481]], [[12150, 12150], "mapped", [31859]], [[12151, 12151], "mapped", [31992]], [[12152, 12152], "mapped", [32566]], [[12153, 12153], "mapped", [32593]], [[12154, 12154], "mapped", [32650]], [[12155, 12155], "mapped", [32701]], [[12156, 12156], "mapped", [32769]], [[12157, 12157], "mapped", [32780]], [[12158, 12158], "mapped", [32786]], [[12159, 12159], "mapped", [32819]], [[12160, 12160], "mapped", [32895]], [[12161, 12161], "mapped", [32905]], [[12162, 12162], "mapped", [33251]], [[12163, 12163], "mapped", [33258]], [[12164, 12164], "mapped", [33267]], [[12165, 12165], "mapped", [33276]], [[12166, 12166], "mapped", [33292]], [[12167, 12167], "mapped", [33307]], [[12168, 12168], "mapped", [33311]], [[12169, 12169], "mapped", [33390]], [[12170, 12170], "mapped", [33394]], [[12171, 12171], "mapped", [33400]], [[12172, 12172], "mapped", [34381]], [[12173, 12173], "mapped", [34411]], [[12174, 12174], "mapped", [34880]], [[12175, 12175], "mapped", [34892]], [[12176, 12176], "mapped", [34915]], [[12177, 12177], "mapped", [35198]], [[12178, 12178], "mapped", [35211]], [[12179, 12179], "mapped", [35282]], [[12180, 12180], "mapped", [35328]], [[12181, 12181], "mapped", [35895]], [[12182, 12182], "mapped", [35910]], [[12183, 12183], "mapped", [35925]], [[12184, 12184], "mapped", [35960]], [[12185, 12185], "mapped", [35997]], [[12186, 12186], "mapped", [36196]], [[12187, 12187], "mapped", [36208]], [[12188, 12188], "mapped", [36275]], [[12189, 12189], "mapped", [36523]], [[12190, 12190], "mapped", [36554]], [[12191, 12191], "mapped", [36763]], [[12192, 12192], "mapped", [36784]], [[12193, 12193], "mapped", [36789]], [[12194, 12194], "mapped", [37009]], [[12195, 12195], "mapped", [37193]], [[12196, 12196], "mapped", [37318]], [[12197, 12197], "mapped", [37324]], [[12198, 12198], "mapped", [37329]], [[12199, 12199], "mapped", [38263]], [[12200, 12200], "mapped", [38272]], [[12201, 12201], "mapped", [38428]], [[12202, 12202], "mapped", [38582]], [[12203, 12203], "mapped", [38585]], [[12204, 12204], "mapped", [38632]], [[12205, 12205], "mapped", [38737]], [[12206, 12206], "mapped", [38750]], [[12207, 12207], "mapped", [38754]], [[12208, 12208], "mapped", [38761]], [[12209, 12209], "mapped", [38859]], [[12210, 12210], "mapped", [38893]], [[12211, 12211], "mapped", [38899]], [[12212, 12212], "mapped", [38913]], [[12213, 12213], "mapped", [39080]], [[12214, 12214], "mapped", [39131]], [[12215, 12215], "mapped", [39135]], [[12216, 12216], "mapped", [39318]], [[12217, 12217], "mapped", [39321]], [[12218, 12218], "mapped", [39340]], [[12219, 12219], "mapped", [39592]], [[12220, 12220], "mapped", [39640]], [[12221, 12221], "mapped", [39647]], [[12222, 12222], "mapped", [39717]], [[12223, 12223], "mapped", [39727]], [[12224, 12224], "mapped", [39730]], [[12225, 12225], "mapped", [39740]], [[12226, 12226], "mapped", [39770]], [[12227, 12227], "mapped", [40165]], [[12228, 12228], "mapped", [40565]], [[12229, 12229], "mapped", [40575]], [[12230, 12230], "mapped", [40613]], [[12231, 12231], "mapped", [40635]], [[12232, 12232], "mapped", [40643]], [[12233, 12233], "mapped", [40653]], [[12234, 12234], "mapped", [40657]], [[12235, 12235], "mapped", [40697]], [[12236, 12236], "mapped", [40701]], [[12237, 12237], "mapped", [40718]], [[12238, 12238], "mapped", [40723]], [[12239, 12239], "mapped", [40736]], [[12240, 12240], "mapped", [40763]], [[12241, 12241], "mapped", [40778]], [[12242, 12242], "mapped", [40786]], [[12243, 12243], "mapped", [40845]], [[12244, 12244], "mapped", [40860]], [[12245, 12245], "mapped", [40864]], [[12246, 12271], "disallowed"], [[12272, 12283], "disallowed"], [[12284, 12287], "disallowed"], [[12288, 12288], "disallowed_STD3_mapped", [32]], [[12289, 12289], "valid", [], "NV8"], [[12290, 12290], "mapped", [46]], [[12291, 12292], "valid", [], "NV8"], [[12293, 12295], "valid"], [[12296, 12329], "valid", [], "NV8"], [[12330, 12333], "valid"], [[12334, 12341], "valid", [], "NV8"], [[12342, 12342], "mapped", [12306]], [[12343, 12343], "valid", [], "NV8"], [[12344, 12344], "mapped", [21313]], [[12345, 12345], "mapped", [21316]], [[12346, 12346], "mapped", [21317]], [[12347, 12347], "valid", [], "NV8"], [[12348, 12348], "valid"], [[12349, 12349], "valid", [], "NV8"], [[12350, 12350], "valid", [], "NV8"], [[12351, 12351], "valid", [], "NV8"], [[12352, 12352], "disallowed"], [[12353, 12436], "valid"], [[12437, 12438], "valid"], [[12439, 12440], "disallowed"], [[12441, 12442], "valid"], [[12443, 12443], "disallowed_STD3_mapped", [32, 12441]], [[12444, 12444], "disallowed_STD3_mapped", [32, 12442]], [[12445, 12446], "valid"], [[12447, 12447], "mapped", [12424, 12426]], [[12448, 12448], "valid", [], "NV8"], [[12449, 12542], "valid"], [[12543, 12543], "mapped", [12467, 12488]], [[12544, 12548], "disallowed"], [[12549, 12588], "valid"], [[12589, 12589], "valid"], [[12590, 12592], "disallowed"], [[12593, 12593], "mapped", [4352]], [[12594, 12594], "mapped", [4353]], [[12595, 12595], "mapped", [4522]], [[12596, 12596], "mapped", [4354]], [[12597, 12597], "mapped", [4524]], [[12598, 12598], "mapped", [4525]], [[12599, 12599], "mapped", [4355]], [[12600, 12600], "mapped", [4356]], [[12601, 12601], "mapped", [4357]], [[12602, 12602], "mapped", [4528]], [[12603, 12603], "mapped", [4529]], [[12604, 12604], "mapped", [4530]], [[12605, 12605], "mapped", [4531]], [[12606, 12606], "mapped", [4532]], [[12607, 12607], "mapped", [4533]], [[12608, 12608], "mapped", [4378]], [[12609, 12609], "mapped", [4358]], [[12610, 12610], "mapped", [4359]], [[12611, 12611], "mapped", [4360]], [[12612, 12612], "mapped", [4385]], [[12613, 12613], "mapped", [4361]], [[12614, 12614], "mapped", [4362]], [[12615, 12615], "mapped", [4363]], [[12616, 12616], "mapped", [4364]], [[12617, 12617], "mapped", [4365]], [[12618, 12618], "mapped", [4366]], [[12619, 12619], "mapped", [4367]], [[12620, 12620], "mapped", [4368]], [[12621, 12621], "mapped", [4369]], [[12622, 12622], "mapped", [4370]], [[12623, 12623], "mapped", [4449]], [[12624, 12624], "mapped", [4450]], [[12625, 12625], "mapped", [4451]], [[12626, 12626], "mapped", [4452]], [[12627, 12627], "mapped", [4453]], [[12628, 12628], "mapped", [4454]], [[12629, 12629], "mapped", [4455]], [[12630, 12630], "mapped", [4456]], [[12631, 12631], "mapped", [4457]], [[12632, 12632], "mapped", [4458]], [[12633, 12633], "mapped", [4459]], [[12634, 12634], "mapped", [4460]], [[12635, 12635], "mapped", [4461]], [[12636, 12636], "mapped", [4462]], [[12637, 12637], "mapped", [4463]], [[12638, 12638], "mapped", [4464]], [[12639, 12639], "mapped", [4465]], [[12640, 12640], "mapped", [4466]], [[12641, 12641], "mapped", [4467]], [[12642, 12642], "mapped", [4468]], [[12643, 12643], "mapped", [4469]], [[12644, 12644], "disallowed"], [[12645, 12645], "mapped", [4372]], [[12646, 12646], "mapped", [4373]], [[12647, 12647], "mapped", [4551]], [[12648, 12648], "mapped", [4552]], [[12649, 12649], "mapped", [4556]], [[12650, 12650], "mapped", [4558]], [[12651, 12651], "mapped", [4563]], [[12652, 12652], "mapped", [4567]], [[12653, 12653], "mapped", [4569]], [[12654, 12654], "mapped", [4380]], [[12655, 12655], "mapped", [4573]], [[12656, 12656], "mapped", [4575]], [[12657, 12657], "mapped", [4381]], [[12658, 12658], "mapped", [4382]], [[12659, 12659], "mapped", [4384]], [[12660, 12660], "mapped", [4386]], [[12661, 12661], "mapped", [4387]], [[12662, 12662], "mapped", [4391]], [[12663, 12663], "mapped", [4393]], [[12664, 12664], "mapped", [4395]], [[12665, 12665], "mapped", [4396]], [[12666, 12666], "mapped", [4397]], [[12667, 12667], "mapped", [4398]], [[12668, 12668], "mapped", [4399]], [[12669, 12669], "mapped", [4402]], [[12670, 12670], "mapped", [4406]], [[12671, 12671], "mapped", [4416]], [[12672, 12672], "mapped", [4423]], [[12673, 12673], "mapped", [4428]], [[12674, 12674], "mapped", [4593]], [[12675, 12675], "mapped", [4594]], [[12676, 12676], "mapped", [4439]], [[12677, 12677], "mapped", [4440]], [[12678, 12678], "mapped", [4441]], [[12679, 12679], "mapped", [4484]], [[12680, 12680], "mapped", [4485]], [[12681, 12681], "mapped", [4488]], [[12682, 12682], "mapped", [4497]], [[12683, 12683], "mapped", [4498]], [[12684, 12684], "mapped", [4500]], [[12685, 12685], "mapped", [4510]], [[12686, 12686], "mapped", [4513]], [[12687, 12687], "disallowed"], [[12688, 12689], "valid", [], "NV8"], [[12690, 12690], "mapped", [19968]], [[12691, 12691], "mapped", [20108]], [[12692, 12692], "mapped", [19977]], [[12693, 12693], "mapped", [22235]], [[12694, 12694], "mapped", [19978]], [[12695, 12695], "mapped", [20013]], [[12696, 12696], "mapped", [19979]], [[12697, 12697], "mapped", [30002]], [[12698, 12698], "mapped", [20057]], [[12699, 12699], "mapped", [19993]], [[12700, 12700], "mapped", [19969]], [[12701, 12701], "mapped", [22825]], [[12702, 12702], "mapped", [22320]], [[12703, 12703], "mapped", [20154]], [[12704, 12727], "valid"], [[12728, 12730], "valid"], [[12731, 12735], "disallowed"], [[12736, 12751], "valid", [], "NV8"], [[12752, 12771], "valid", [], "NV8"], [[12772, 12783], "disallowed"], [[12784, 12799], "valid"], [[12800, 12800], "disallowed_STD3_mapped", [40, 4352, 41]], [[12801, 12801], "disallowed_STD3_mapped", [40, 4354, 41]], [[12802, 12802], "disallowed_STD3_mapped", [40, 4355, 41]], [[12803, 12803], "disallowed_STD3_mapped", [40, 4357, 41]], [[12804, 12804], "disallowed_STD3_mapped", [40, 4358, 41]], [[12805, 12805], "disallowed_STD3_mapped", [40, 4359, 41]], [[12806, 12806], "disallowed_STD3_mapped", [40, 4361, 41]], [[12807, 12807], "disallowed_STD3_mapped", [40, 4363, 41]], [[12808, 12808], "disallowed_STD3_mapped", [40, 4364, 41]], [[12809, 12809], "disallowed_STD3_mapped", [40, 4366, 41]], [[12810, 12810], "disallowed_STD3_mapped", [40, 4367, 41]], [[12811, 12811], "disallowed_STD3_mapped", [40, 4368, 41]], [[12812, 12812], "disallowed_STD3_mapped", [40, 4369, 41]], [[12813, 12813], "disallowed_STD3_mapped", [40, 4370, 41]], [[12814, 12814], "disallowed_STD3_mapped", [40, 44032, 41]], [[12815, 12815], "disallowed_STD3_mapped", [40, 45208, 41]], [[12816, 12816], "disallowed_STD3_mapped", [40, 45796, 41]], [[12817, 12817], "disallowed_STD3_mapped", [40, 46972, 41]], [[12818, 12818], "disallowed_STD3_mapped", [40, 47560, 41]], [[12819, 12819], "disallowed_STD3_mapped", [40, 48148, 41]], [[12820, 12820], "disallowed_STD3_mapped", [40, 49324, 41]], [[12821, 12821], "disallowed_STD3_mapped", [40, 50500, 41]], [[12822, 12822], "disallowed_STD3_mapped", [40, 51088, 41]], [[12823, 12823], "disallowed_STD3_mapped", [40, 52264, 41]], [[12824, 12824], "disallowed_STD3_mapped", [40, 52852, 41]], [[12825, 12825], "disallowed_STD3_mapped", [40, 53440, 41]], [[12826, 12826], "disallowed_STD3_mapped", [40, 54028, 41]], [[12827, 12827], "disallowed_STD3_mapped", [40, 54616, 41]], [[12828, 12828], "disallowed_STD3_mapped", [40, 51452, 41]], [[12829, 12829], "disallowed_STD3_mapped", [40, 50724, 51204, 41]], [[12830, 12830], "disallowed_STD3_mapped", [40, 50724, 54980, 41]], [[12831, 12831], "disallowed"], [[12832, 12832], "disallowed_STD3_mapped", [40, 19968, 41]], [[12833, 12833], "disallowed_STD3_mapped", [40, 20108, 41]], [[12834, 12834], "disallowed_STD3_mapped", [40, 19977, 41]], [[12835, 12835], "disallowed_STD3_mapped", [40, 22235, 41]], [[12836, 12836], "disallowed_STD3_mapped", [40, 20116, 41]], [[12837, 12837], "disallowed_STD3_mapped", [40, 20845, 41]], [[12838, 12838], "disallowed_STD3_mapped", [40, 19971, 41]], [[12839, 12839], "disallowed_STD3_mapped", [40, 20843, 41]], [[12840, 12840], "disallowed_STD3_mapped", [40, 20061, 41]], [[12841, 12841], "disallowed_STD3_mapped", [40, 21313, 41]], [[12842, 12842], "disallowed_STD3_mapped", [40, 26376, 41]], [[12843, 12843], "disallowed_STD3_mapped", [40, 28779, 41]], [[12844, 12844], "disallowed_STD3_mapped", [40, 27700, 41]], [[12845, 12845], "disallowed_STD3_mapped", [40, 26408, 41]], [[12846, 12846], "disallowed_STD3_mapped", [40, 37329, 41]], [[12847, 12847], "disallowed_STD3_mapped", [40, 22303, 41]], [[12848, 12848], "disallowed_STD3_mapped", [40, 26085, 41]], [[12849, 12849], "disallowed_STD3_mapped", [40, 26666, 41]], [[12850, 12850], "disallowed_STD3_mapped", [40, 26377, 41]], [[12851, 12851], "disallowed_STD3_mapped", [40, 31038, 41]], [[12852, 12852], "disallowed_STD3_mapped", [40, 21517, 41]], [[12853, 12853], "disallowed_STD3_mapped", [40, 29305, 41]], [[12854, 12854], "disallowed_STD3_mapped", [40, 36001, 41]], [[12855, 12855], "disallowed_STD3_mapped", [40, 31069, 41]], [[12856, 12856], "disallowed_STD3_mapped", [40, 21172, 41]], [[12857, 12857], "disallowed_STD3_mapped", [40, 20195, 41]], [[12858, 12858], "disallowed_STD3_mapped", [40, 21628, 41]], [[12859, 12859], "disallowed_STD3_mapped", [40, 23398, 41]], [[12860, 12860], "disallowed_STD3_mapped", [40, 30435, 41]], [[12861, 12861], "disallowed_STD3_mapped", [40, 20225, 41]], [[12862, 12862], "disallowed_STD3_mapped", [40, 36039, 41]], [[12863, 12863], "disallowed_STD3_mapped", [40, 21332, 41]], [[12864, 12864], "disallowed_STD3_mapped", [40, 31085, 41]], [[12865, 12865], "disallowed_STD3_mapped", [40, 20241, 41]], [[12866, 12866], "disallowed_STD3_mapped", [40, 33258, 41]], [[12867, 12867], "disallowed_STD3_mapped", [40, 33267, 41]], [[12868, 12868], "mapped", [21839]], [[12869, 12869], "mapped", [24188]], [[12870, 12870], "mapped", [25991]], [[12871, 12871], "mapped", [31631]], [[12872, 12879], "valid", [], "NV8"], [[12880, 12880], "mapped", [112, 116, 101]], [[12881, 12881], "mapped", [50, 49]], [[12882, 12882], "mapped", [50, 50]], [[12883, 12883], "mapped", [50, 51]], [[12884, 12884], "mapped", [50, 52]], [[12885, 12885], "mapped", [50, 53]], [[12886, 12886], "mapped", [50, 54]], [[12887, 12887], "mapped", [50, 55]], [[12888, 12888], "mapped", [50, 56]], [[12889, 12889], "mapped", [50, 57]], [[12890, 12890], "mapped", [51, 48]], [[12891, 12891], "mapped", [51, 49]], [[12892, 12892], "mapped", [51, 50]], [[12893, 12893], "mapped", [51, 51]], [[12894, 12894], "mapped", [51, 52]], [[12895, 12895], "mapped", [51, 53]], [[12896, 12896], "mapped", [4352]], [[12897, 12897], "mapped", [4354]], [[12898, 12898], "mapped", [4355]], [[12899, 12899], "mapped", [4357]], [[12900, 12900], "mapped", [4358]], [[12901, 12901], "mapped", [4359]], [[12902, 12902], "mapped", [4361]], [[12903, 12903], "mapped", [4363]], [[12904, 12904], "mapped", [4364]], [[12905, 12905], "mapped", [4366]], [[12906, 12906], "mapped", [4367]], [[12907, 12907], "mapped", [4368]], [[12908, 12908], "mapped", [4369]], [[12909, 12909], "mapped", [4370]], [[12910, 12910], "mapped", [44032]], [[12911, 12911], "mapped", [45208]], [[12912, 12912], "mapped", [45796]], [[12913, 12913], "mapped", [46972]], [[12914, 12914], "mapped", [47560]], [[12915, 12915], "mapped", [48148]], [[12916, 12916], "mapped", [49324]], [[12917, 12917], "mapped", [50500]], [[12918, 12918], "mapped", [51088]], [[12919, 12919], "mapped", [52264]], [[12920, 12920], "mapped", [52852]], [[12921, 12921], "mapped", [53440]], [[12922, 12922], "mapped", [54028]], [[12923, 12923], "mapped", [54616]], [[12924, 12924], "mapped", [52280, 44256]], [[12925, 12925], "mapped", [51452, 51032]], [[12926, 12926], "mapped", [50864]], [[12927, 12927], "valid", [], "NV8"], [[12928, 12928], "mapped", [19968]], [[12929, 12929], "mapped", [20108]], [[12930, 12930], "mapped", [19977]], [[12931, 12931], "mapped", [22235]], [[12932, 12932], "mapped", [20116]], [[12933, 12933], "mapped", [20845]], [[12934, 12934], "mapped", [19971]], [[12935, 12935], "mapped", [20843]], [[12936, 12936], "mapped", [20061]], [[12937, 12937], "mapped", [21313]], [[12938, 12938], "mapped", [26376]], [[12939, 12939], "mapped", [28779]], [[12940, 12940], "mapped", [27700]], [[12941, 12941], "mapped", [26408]], [[12942, 12942], "mapped", [37329]], [[12943, 12943], "mapped", [22303]], [[12944, 12944], "mapped", [26085]], [[12945, 12945], "mapped", [26666]], [[12946, 12946], "mapped", [26377]], [[12947, 12947], "mapped", [31038]], [[12948, 12948], "mapped", [21517]], [[12949, 12949], "mapped", [29305]], [[12950, 12950], "mapped", [36001]], [[12951, 12951], "mapped", [31069]], [[12952, 12952], "mapped", [21172]], [[12953, 12953], "mapped", [31192]], [[12954, 12954], "mapped", [30007]], [[12955, 12955], "mapped", [22899]], [[12956, 12956], "mapped", [36969]], [[12957, 12957], "mapped", [20778]], [[12958, 12958], "mapped", [21360]], [[12959, 12959], "mapped", [27880]], [[12960, 12960], "mapped", [38917]], [[12961, 12961], "mapped", [20241]], [[12962, 12962], "mapped", [20889]], [[12963, 12963], "mapped", [27491]], [[12964, 12964], "mapped", [19978]], [[12965, 12965], "mapped", [20013]], [[12966, 12966], "mapped", [19979]], [[12967, 12967], "mapped", [24038]], [[12968, 12968], "mapped", [21491]], [[12969, 12969], "mapped", [21307]], [[12970, 12970], "mapped", [23447]], [[12971, 12971], "mapped", [23398]], [[12972, 12972], "mapped", [30435]], [[12973, 12973], "mapped", [20225]], [[12974, 12974], "mapped", [36039]], [[12975, 12975], "mapped", [21332]], [[12976, 12976], "mapped", [22812]], [[12977, 12977], "mapped", [51, 54]], [[12978, 12978], "mapped", [51, 55]], [[12979, 12979], "mapped", [51, 56]], [[12980, 12980], "mapped", [51, 57]], [[12981, 12981], "mapped", [52, 48]], [[12982, 12982], "mapped", [52, 49]], [[12983, 12983], "mapped", [52, 50]], [[12984, 12984], "mapped", [52, 51]], [[12985, 12985], "mapped", [52, 52]], [[12986, 12986], "mapped", [52, 53]], [[12987, 12987], "mapped", [52, 54]], [[12988, 12988], "mapped", [52, 55]], [[12989, 12989], "mapped", [52, 56]], [[12990, 12990], "mapped", [52, 57]], [[12991, 12991], "mapped", [53, 48]], [[12992, 12992], "mapped", [49, 26376]], [[12993, 12993], "mapped", [50, 26376]], [[12994, 12994], "mapped", [51, 26376]], [[12995, 12995], "mapped", [52, 26376]], [[12996, 12996], "mapped", [53, 26376]], [[12997, 12997], "mapped", [54, 26376]], [[12998, 12998], "mapped", [55, 26376]], [[12999, 12999], "mapped", [56, 26376]], [[13e3, 13e3], "mapped", [57, 26376]], [[13001, 13001], "mapped", [49, 48, 26376]], [[13002, 13002], "mapped", [49, 49, 26376]], [[13003, 13003], "mapped", [49, 50, 26376]], [[13004, 13004], "mapped", [104, 103]], [[13005, 13005], "mapped", [101, 114, 103]], [[13006, 13006], "mapped", [101, 118]], [[13007, 13007], "mapped", [108, 116, 100]], [[13008, 13008], "mapped", [12450]], [[13009, 13009], "mapped", [12452]], [[13010, 13010], "mapped", [12454]], [[13011, 13011], "mapped", [12456]], [[13012, 13012], "mapped", [12458]], [[13013, 13013], "mapped", [12459]], [[13014, 13014], "mapped", [12461]], [[13015, 13015], "mapped", [12463]], [[13016, 13016], "mapped", [12465]], [[13017, 13017], "mapped", [12467]], [[13018, 13018], "mapped", [12469]], [[13019, 13019], "mapped", [12471]], [[13020, 13020], "mapped", [12473]], [[13021, 13021], "mapped", [12475]], [[13022, 13022], "mapped", [12477]], [[13023, 13023], "mapped", [12479]], [[13024, 13024], "mapped", [12481]], [[13025, 13025], "mapped", [12484]], [[13026, 13026], "mapped", [12486]], [[13027, 13027], "mapped", [12488]], [[13028, 13028], "mapped", [12490]], [[13029, 13029], "mapped", [12491]], [[13030, 13030], "mapped", [12492]], [[13031, 13031], "mapped", [12493]], [[13032, 13032], "mapped", [12494]], [[13033, 13033], "mapped", [12495]], [[13034, 13034], "mapped", [12498]], [[13035, 13035], "mapped", [12501]], [[13036, 13036], "mapped", [12504]], [[13037, 13037], "mapped", [12507]], [[13038, 13038], "mapped", [12510]], [[13039, 13039], "mapped", [12511]], [[13040, 13040], "mapped", [12512]], [[13041, 13041], "mapped", [12513]], [[13042, 13042], "mapped", [12514]], [[13043, 13043], "mapped", [12516]], [[13044, 13044], "mapped", [12518]], [[13045, 13045], "mapped", [12520]], [[13046, 13046], "mapped", [12521]], [[13047, 13047], "mapped", [12522]], [[13048, 13048], "mapped", [12523]], [[13049, 13049], "mapped", [12524]], [[13050, 13050], "mapped", [12525]], [[13051, 13051], "mapped", [12527]], [[13052, 13052], "mapped", [12528]], [[13053, 13053], "mapped", [12529]], [[13054, 13054], "mapped", [12530]], [[13055, 13055], "disallowed"], [[13056, 13056], "mapped", [12450, 12497, 12540, 12488]], [[13057, 13057], "mapped", [12450, 12523, 12501, 12449]], [[13058, 13058], "mapped", [12450, 12531, 12506, 12450]], [[13059, 13059], "mapped", [12450, 12540, 12523]], [[13060, 13060], "mapped", [12452, 12491, 12531, 12464]], [[13061, 13061], "mapped", [12452, 12531, 12481]], [[13062, 13062], "mapped", [12454, 12457, 12531]], [[13063, 13063], "mapped", [12456, 12473, 12463, 12540, 12489]], [[13064, 13064], "mapped", [12456, 12540, 12459, 12540]], [[13065, 13065], "mapped", [12458, 12531, 12473]], [[13066, 13066], "mapped", [12458, 12540, 12512]], [[13067, 13067], "mapped", [12459, 12452, 12522]], [[13068, 13068], "mapped", [12459, 12521, 12483, 12488]], [[13069, 13069], "mapped", [12459, 12525, 12522, 12540]], [[13070, 13070], "mapped", [12460, 12525, 12531]], [[13071, 13071], "mapped", [12460, 12531, 12510]], [[13072, 13072], "mapped", [12462, 12460]], [[13073, 13073], "mapped", [12462, 12491, 12540]], [[13074, 13074], "mapped", [12461, 12517, 12522, 12540]], [[13075, 13075], "mapped", [12462, 12523, 12480, 12540]], [[13076, 13076], "mapped", [12461, 12525]], [[13077, 13077], "mapped", [12461, 12525, 12464, 12521, 12512]], [[13078, 13078], "mapped", [12461, 12525, 12513, 12540, 12488, 12523]], [[13079, 13079], "mapped", [12461, 12525, 12527, 12483, 12488]], [[13080, 13080], "mapped", [12464, 12521, 12512]], [[13081, 13081], "mapped", [12464, 12521, 12512, 12488, 12531]], [[13082, 13082], "mapped", [12463, 12523, 12476, 12452, 12525]], [[13083, 13083], "mapped", [12463, 12525, 12540, 12493]], [[13084, 13084], "mapped", [12465, 12540, 12473]], [[13085, 13085], "mapped", [12467, 12523, 12490]], [[13086, 13086], "mapped", [12467, 12540, 12509]], [[13087, 13087], "mapped", [12469, 12452, 12463, 12523]], [[13088, 13088], "mapped", [12469, 12531, 12481, 12540, 12512]], [[13089, 13089], "mapped", [12471, 12522, 12531, 12464]], [[13090, 13090], "mapped", [12475, 12531, 12481]], [[13091, 13091], "mapped", [12475, 12531, 12488]], [[13092, 13092], "mapped", [12480, 12540, 12473]], [[13093, 13093], "mapped", [12487, 12471]], [[13094, 13094], "mapped", [12489, 12523]], [[13095, 13095], "mapped", [12488, 12531]], [[13096, 13096], "mapped", [12490, 12494]], [[13097, 13097], "mapped", [12494, 12483, 12488]], [[13098, 13098], "mapped", [12495, 12452, 12484]], [[13099, 13099], "mapped", [12497, 12540, 12475, 12531, 12488]], [[13100, 13100], "mapped", [12497, 12540, 12484]], [[13101, 13101], "mapped", [12496, 12540, 12524, 12523]], [[13102, 13102], "mapped", [12500, 12450, 12473, 12488, 12523]], [[13103, 13103], "mapped", [12500, 12463, 12523]], [[13104, 13104], "mapped", [12500, 12467]], [[13105, 13105], "mapped", [12499, 12523]], [[13106, 13106], "mapped", [12501, 12449, 12521, 12483, 12489]], [[13107, 13107], "mapped", [12501, 12451, 12540, 12488]], [[13108, 13108], "mapped", [12502, 12483, 12471, 12455, 12523]], [[13109, 13109], "mapped", [12501, 12521, 12531]], [[13110, 13110], "mapped", [12504, 12463, 12479, 12540, 12523]], [[13111, 13111], "mapped", [12506, 12477]], [[13112, 13112], "mapped", [12506, 12491, 12498]], [[13113, 13113], "mapped", [12504, 12523, 12484]], [[13114, 13114], "mapped", [12506, 12531, 12473]], [[13115, 13115], "mapped", [12506, 12540, 12472]], [[13116, 13116], "mapped", [12505, 12540, 12479]], [[13117, 13117], "mapped", [12509, 12452, 12531, 12488]], [[13118, 13118], "mapped", [12508, 12523, 12488]], [[13119, 13119], "mapped", [12507, 12531]], [[13120, 13120], "mapped", [12509, 12531, 12489]], [[13121, 13121], "mapped", [12507, 12540, 12523]], [[13122, 13122], "mapped", [12507, 12540, 12531]], [[13123, 13123], "mapped", [12510, 12452, 12463, 12525]], [[13124, 13124], "mapped", [12510, 12452, 12523]], [[13125, 13125], "mapped", [12510, 12483, 12495]], [[13126, 13126], "mapped", [12510, 12523, 12463]], [[13127, 13127], "mapped", [12510, 12531, 12471, 12519, 12531]], [[13128, 13128], "mapped", [12511, 12463, 12525, 12531]], [[13129, 13129], "mapped", [12511, 12522]], [[13130, 13130], "mapped", [12511, 12522, 12496, 12540, 12523]], [[13131, 13131], "mapped", [12513, 12460]], [[13132, 13132], "mapped", [12513, 12460, 12488, 12531]], [[13133, 13133], "mapped", [12513, 12540, 12488, 12523]], [[13134, 13134], "mapped", [12516, 12540, 12489]], [[13135, 13135], "mapped", [12516, 12540, 12523]], [[13136, 13136], "mapped", [12518, 12450, 12531]], [[13137, 13137], "mapped", [12522, 12483, 12488, 12523]], [[13138, 13138], "mapped", [12522, 12521]], [[13139, 13139], "mapped", [12523, 12500, 12540]], [[13140, 13140], "mapped", [12523, 12540, 12502, 12523]], [[13141, 13141], "mapped", [12524, 12512]], [[13142, 13142], "mapped", [12524, 12531, 12488, 12466, 12531]], [[13143, 13143], "mapped", [12527, 12483, 12488]], [[13144, 13144], "mapped", [48, 28857]], [[13145, 13145], "mapped", [49, 28857]], [[13146, 13146], "mapped", [50, 28857]], [[13147, 13147], "mapped", [51, 28857]], [[13148, 13148], "mapped", [52, 28857]], [[13149, 13149], "mapped", [53, 28857]], [[13150, 13150], "mapped", [54, 28857]], [[13151, 13151], "mapped", [55, 28857]], [[13152, 13152], "mapped", [56, 28857]], [[13153, 13153], "mapped", [57, 28857]], [[13154, 13154], "mapped", [49, 48, 28857]], [[13155, 13155], "mapped", [49, 49, 28857]], [[13156, 13156], "mapped", [49, 50, 28857]], [[13157, 13157], "mapped", [49, 51, 28857]], [[13158, 13158], "mapped", [49, 52, 28857]], [[13159, 13159], "mapped", [49, 53, 28857]], [[13160, 13160], "mapped", [49, 54, 28857]], [[13161, 13161], "mapped", [49, 55, 28857]], [[13162, 13162], "mapped", [49, 56, 28857]], [[13163, 13163], "mapped", [49, 57, 28857]], [[13164, 13164], "mapped", [50, 48, 28857]], [[13165, 13165], "mapped", [50, 49, 28857]], [[13166, 13166], "mapped", [50, 50, 28857]], [[13167, 13167], "mapped", [50, 51, 28857]], [[13168, 13168], "mapped", [50, 52, 28857]], [[13169, 13169], "mapped", [104, 112, 97]], [[13170, 13170], "mapped", [100, 97]], [[13171, 13171], "mapped", [97, 117]], [[13172, 13172], "mapped", [98, 97, 114]], [[13173, 13173], "mapped", [111, 118]], [[13174, 13174], "mapped", [112, 99]], [[13175, 13175], "mapped", [100, 109]], [[13176, 13176], "mapped", [100, 109, 50]], [[13177, 13177], "mapped", [100, 109, 51]], [[13178, 13178], "mapped", [105, 117]], [[13179, 13179], "mapped", [24179, 25104]], [[13180, 13180], "mapped", [26157, 21644]], [[13181, 13181], "mapped", [22823, 27491]], [[13182, 13182], "mapped", [26126, 27835]], [[13183, 13183], "mapped", [26666, 24335, 20250, 31038]], [[13184, 13184], "mapped", [112, 97]], [[13185, 13185], "mapped", [110, 97]], [[13186, 13186], "mapped", [956, 97]], [[13187, 13187], "mapped", [109, 97]], [[13188, 13188], "mapped", [107, 97]], [[13189, 13189], "mapped", [107, 98]], [[13190, 13190], "mapped", [109, 98]], [[13191, 13191], "mapped", [103, 98]], [[13192, 13192], "mapped", [99, 97, 108]], [[13193, 13193], "mapped", [107, 99, 97, 108]], [[13194, 13194], "mapped", [112, 102]], [[13195, 13195], "mapped", [110, 102]], [[13196, 13196], "mapped", [956, 102]], [[13197, 13197], "mapped", [956, 103]], [[13198, 13198], "mapped", [109, 103]], [[13199, 13199], "mapped", [107, 103]], [[13200, 13200], "mapped", [104, 122]], [[13201, 13201], "mapped", [107, 104, 122]], [[13202, 13202], "mapped", [109, 104, 122]], [[13203, 13203], "mapped", [103, 104, 122]], [[13204, 13204], "mapped", [116, 104, 122]], [[13205, 13205], "mapped", [956, 108]], [[13206, 13206], "mapped", [109, 108]], [[13207, 13207], "mapped", [100, 108]], [[13208, 13208], "mapped", [107, 108]], [[13209, 13209], "mapped", [102, 109]], [[13210, 13210], "mapped", [110, 109]], [[13211, 13211], "mapped", [956, 109]], [[13212, 13212], "mapped", [109, 109]], [[13213, 13213], "mapped", [99, 109]], [[13214, 13214], "mapped", [107, 109]], [[13215, 13215], "mapped", [109, 109, 50]], [[13216, 13216], "mapped", [99, 109, 50]], [[13217, 13217], "mapped", [109, 50]], [[13218, 13218], "mapped", [107, 109, 50]], [[13219, 13219], "mapped", [109, 109, 51]], [[13220, 13220], "mapped", [99, 109, 51]], [[13221, 13221], "mapped", [109, 51]], [[13222, 13222], "mapped", [107, 109, 51]], [[13223, 13223], "mapped", [109, 8725, 115]], [[13224, 13224], "mapped", [109, 8725, 115, 50]], [[13225, 13225], "mapped", [112, 97]], [[13226, 13226], "mapped", [107, 112, 97]], [[13227, 13227], "mapped", [109, 112, 97]], [[13228, 13228], "mapped", [103, 112, 97]], [[13229, 13229], "mapped", [114, 97, 100]], [[13230, 13230], "mapped", [114, 97, 100, 8725, 115]], [[13231, 13231], "mapped", [114, 97, 100, 8725, 115, 50]], [[13232, 13232], "mapped", [112, 115]], [[13233, 13233], "mapped", [110, 115]], [[13234, 13234], "mapped", [956, 115]], [[13235, 13235], "mapped", [109, 115]], [[13236, 13236], "mapped", [112, 118]], [[13237, 13237], "mapped", [110, 118]], [[13238, 13238], "mapped", [956, 118]], [[13239, 13239], "mapped", [109, 118]], [[13240, 13240], "mapped", [107, 118]], [[13241, 13241], "mapped", [109, 118]], [[13242, 13242], "mapped", [112, 119]], [[13243, 13243], "mapped", [110, 119]], [[13244, 13244], "mapped", [956, 119]], [[13245, 13245], "mapped", [109, 119]], [[13246, 13246], "mapped", [107, 119]], [[13247, 13247], "mapped", [109, 119]], [[13248, 13248], "mapped", [107, 969]], [[13249, 13249], "mapped", [109, 969]], [[13250, 13250], "disallowed"], [[13251, 13251], "mapped", [98, 113]], [[13252, 13252], "mapped", [99, 99]], [[13253, 13253], "mapped", [99, 100]], [[13254, 13254], "mapped", [99, 8725, 107, 103]], [[13255, 13255], "disallowed"], [[13256, 13256], "mapped", [100, 98]], [[13257, 13257], "mapped", [103, 121]], [[13258, 13258], "mapped", [104, 97]], [[13259, 13259], "mapped", [104, 112]], [[13260, 13260], "mapped", [105, 110]], [[13261, 13261], "mapped", [107, 107]], [[13262, 13262], "mapped", [107, 109]], [[13263, 13263], "mapped", [107, 116]], [[13264, 13264], "mapped", [108, 109]], [[13265, 13265], "mapped", [108, 110]], [[13266, 13266], "mapped", [108, 111, 103]], [[13267, 13267], "mapped", [108, 120]], [[13268, 13268], "mapped", [109, 98]], [[13269, 13269], "mapped", [109, 105, 108]], [[13270, 13270], "mapped", [109, 111, 108]], [[13271, 13271], "mapped", [112, 104]], [[13272, 13272], "disallowed"], [[13273, 13273], "mapped", [112, 112, 109]], [[13274, 13274], "mapped", [112, 114]], [[13275, 13275], "mapped", [115, 114]], [[13276, 13276], "mapped", [115, 118]], [[13277, 13277], "mapped", [119, 98]], [[13278, 13278], "mapped", [118, 8725, 109]], [[13279, 13279], "mapped", [97, 8725, 109]], [[13280, 13280], "mapped", [49, 26085]], [[13281, 13281], "mapped", [50, 26085]], [[13282, 13282], "mapped", [51, 26085]], [[13283, 13283], "mapped", [52, 26085]], [[13284, 13284], "mapped", [53, 26085]], [[13285, 13285], "mapped", [54, 26085]], [[13286, 13286], "mapped", [55, 26085]], [[13287, 13287], "mapped", [56, 26085]], [[13288, 13288], "mapped", [57, 26085]], [[13289, 13289], "mapped", [49, 48, 26085]], [[13290, 13290], "mapped", [49, 49, 26085]], [[13291, 13291], "mapped", [49, 50, 26085]], [[13292, 13292], "mapped", [49, 51, 26085]], [[13293, 13293], "mapped", [49, 52, 26085]], [[13294, 13294], "mapped", [49, 53, 26085]], [[13295, 13295], "mapped", [49, 54, 26085]], [[13296, 13296], "mapped", [49, 55, 26085]], [[13297, 13297], "mapped", [49, 56, 26085]], [[13298, 13298], "mapped", [49, 57, 26085]], [[13299, 13299], "mapped", [50, 48, 26085]], [[13300, 13300], "mapped", [50, 49, 26085]], [[13301, 13301], "mapped", [50, 50, 26085]], [[13302, 13302], "mapped", [50, 51, 26085]], [[13303, 13303], "mapped", [50, 52, 26085]], [[13304, 13304], "mapped", [50, 53, 26085]], [[13305, 13305], "mapped", [50, 54, 26085]], [[13306, 13306], "mapped", [50, 55, 26085]], [[13307, 13307], "mapped", [50, 56, 26085]], [[13308, 13308], "mapped", [50, 57, 26085]], [[13309, 13309], "mapped", [51, 48, 26085]], [[13310, 13310], "mapped", [51, 49, 26085]], [[13311, 13311], "mapped", [103, 97, 108]], [[13312, 19893], "valid"], [[19894, 19903], "disallowed"], [[19904, 19967], "valid", [], "NV8"], [[19968, 40869], "valid"], [[40870, 40891], "valid"], [[40892, 40899], "valid"], [[40900, 40907], "valid"], [[40908, 40908], "valid"], [[40909, 40917], "valid"], [[40918, 40959], "disallowed"], [[40960, 42124], "valid"], [[42125, 42127], "disallowed"], [[42128, 42145], "valid", [], "NV8"], [[42146, 42147], "valid", [], "NV8"], [[42148, 42163], "valid", [], "NV8"], [[42164, 42164], "valid", [], "NV8"], [[42165, 42176], "valid", [], "NV8"], [[42177, 42177], "valid", [], "NV8"], [[42178, 42180], "valid", [], "NV8"], [[42181, 42181], "valid", [], "NV8"], [[42182, 42182], "valid", [], "NV8"], [[42183, 42191], "disallowed"], [[42192, 42237], "valid"], [[42238, 42239], "valid", [], "NV8"], [[42240, 42508], "valid"], [[42509, 42511], "valid", [], "NV8"], [[42512, 42539], "valid"], [[42540, 42559], "disallowed"], [[42560, 42560], "mapped", [42561]], [[42561, 42561], "valid"], [[42562, 42562], "mapped", [42563]], [[42563, 42563], "valid"], [[42564, 42564], "mapped", [42565]], [[42565, 42565], "valid"], [[42566, 42566], "mapped", [42567]], [[42567, 42567], "valid"], [[42568, 42568], "mapped", [42569]], [[42569, 42569], "valid"], [[42570, 42570], "mapped", [42571]], [[42571, 42571], "valid"], [[42572, 42572], "mapped", [42573]], [[42573, 42573], "valid"], [[42574, 42574], "mapped", [42575]], [[42575, 42575], "valid"], [[42576, 42576], "mapped", [42577]], [[42577, 42577], "valid"], [[42578, 42578], "mapped", [42579]], [[42579, 42579], "valid"], [[42580, 42580], "mapped", [42581]], [[42581, 42581], "valid"], [[42582, 42582], "mapped", [42583]], [[42583, 42583], "valid"], [[42584, 42584], "mapped", [42585]], [[42585, 42585], "valid"], [[42586, 42586], "mapped", [42587]], [[42587, 42587], "valid"], [[42588, 42588], "mapped", [42589]], [[42589, 42589], "valid"], [[42590, 42590], "mapped", [42591]], [[42591, 42591], "valid"], [[42592, 42592], "mapped", [42593]], [[42593, 42593], "valid"], [[42594, 42594], "mapped", [42595]], [[42595, 42595], "valid"], [[42596, 42596], "mapped", [42597]], [[42597, 42597], "valid"], [[42598, 42598], "mapped", [42599]], [[42599, 42599], "valid"], [[42600, 42600], "mapped", [42601]], [[42601, 42601], "valid"], [[42602, 42602], "mapped", [42603]], [[42603, 42603], "valid"], [[42604, 42604], "mapped", [42605]], [[42605, 42607], "valid"], [[42608, 42611], "valid", [], "NV8"], [[42612, 42619], "valid"], [[42620, 42621], "valid"], [[42622, 42622], "valid", [], "NV8"], [[42623, 42623], "valid"], [[42624, 42624], "mapped", [42625]], [[42625, 42625], "valid"], [[42626, 42626], "mapped", [42627]], [[42627, 42627], "valid"], [[42628, 42628], "mapped", [42629]], [[42629, 42629], "valid"], [[42630, 42630], "mapped", [42631]], [[42631, 42631], "valid"], [[42632, 42632], "mapped", [42633]], [[42633, 42633], "valid"], [[42634, 42634], "mapped", [42635]], [[42635, 42635], "valid"], [[42636, 42636], "mapped", [42637]], [[42637, 42637], "valid"], [[42638, 42638], "mapped", [42639]], [[42639, 42639], "valid"], [[42640, 42640], "mapped", [42641]], [[42641, 42641], "valid"], [[42642, 42642], "mapped", [42643]], [[42643, 42643], "valid"], [[42644, 42644], "mapped", [42645]], [[42645, 42645], "valid"], [[42646, 42646], "mapped", [42647]], [[42647, 42647], "valid"], [[42648, 42648], "mapped", [42649]], [[42649, 42649], "valid"], [[42650, 42650], "mapped", [42651]], [[42651, 42651], "valid"], [[42652, 42652], "mapped", [1098]], [[42653, 42653], "mapped", [1100]], [[42654, 42654], "valid"], [[42655, 42655], "valid"], [[42656, 42725], "valid"], [[42726, 42735], "valid", [], "NV8"], [[42736, 42737], "valid"], [[42738, 42743], "valid", [], "NV8"], [[42744, 42751], "disallowed"], [[42752, 42774], "valid", [], "NV8"], [[42775, 42778], "valid"], [[42779, 42783], "valid"], [[42784, 42785], "valid", [], "NV8"], [[42786, 42786], "mapped", [42787]], [[42787, 42787], "valid"], [[42788, 42788], "mapped", [42789]], [[42789, 42789], "valid"], [[42790, 42790], "mapped", [42791]], [[42791, 42791], "valid"], [[42792, 42792], "mapped", [42793]], [[42793, 42793], "valid"], [[42794, 42794], "mapped", [42795]], [[42795, 42795], "valid"], [[42796, 42796], "mapped", [42797]], [[42797, 42797], "valid"], [[42798, 42798], "mapped", [42799]], [[42799, 42801], "valid"], [[42802, 42802], "mapped", [42803]], [[42803, 42803], "valid"], [[42804, 42804], "mapped", [42805]], [[42805, 42805], "valid"], [[42806, 42806], "mapped", [42807]], [[42807, 42807], "valid"], [[42808, 42808], "mapped", [42809]], [[42809, 42809], "valid"], [[42810, 42810], "mapped", [42811]], [[42811, 42811], "valid"], [[42812, 42812], "mapped", [42813]], [[42813, 42813], "valid"], [[42814, 42814], "mapped", [42815]], [[42815, 42815], "valid"], [[42816, 42816], "mapped", [42817]], [[42817, 42817], "valid"], [[42818, 42818], "mapped", [42819]], [[42819, 42819], "valid"], [[42820, 42820], "mapped", [42821]], [[42821, 42821], "valid"], [[42822, 42822], "mapped", [42823]], [[42823, 42823], "valid"], [[42824, 42824], "mapped", [42825]], [[42825, 42825], "valid"], [[42826, 42826], "mapped", [42827]], [[42827, 42827], "valid"], [[42828, 42828], "mapped", [42829]], [[42829, 42829], "valid"], [[42830, 42830], "mapped", [42831]], [[42831, 42831], "valid"], [[42832, 42832], "mapped", [42833]], [[42833, 42833], "valid"], [[42834, 42834], "mapped", [42835]], [[42835, 42835], "valid"], [[42836, 42836], "mapped", [42837]], [[42837, 42837], "valid"], [[42838, 42838], "mapped", [42839]], [[42839, 42839], "valid"], [[42840, 42840], "mapped", [42841]], [[42841, 42841], "valid"], [[42842, 42842], "mapped", [42843]], [[42843, 42843], "valid"], [[42844, 42844], "mapped", [42845]], [[42845, 42845], "valid"], [[42846, 42846], "mapped", [42847]], [[42847, 42847], "valid"], [[42848, 42848], "mapped", [42849]], [[42849, 42849], "valid"], [[42850, 42850], "mapped", [42851]], [[42851, 42851], "valid"], [[42852, 42852], "mapped", [42853]], [[42853, 42853], "valid"], [[42854, 42854], "mapped", [42855]], [[42855, 42855], "valid"], [[42856, 42856], "mapped", [42857]], [[42857, 42857], "valid"], [[42858, 42858], "mapped", [42859]], [[42859, 42859], "valid"], [[42860, 42860], "mapped", [42861]], [[42861, 42861], "valid"], [[42862, 42862], "mapped", [42863]], [[42863, 42863], "valid"], [[42864, 42864], "mapped", [42863]], [[42865, 42872], "valid"], [[42873, 42873], "mapped", [42874]], [[42874, 42874], "valid"], [[42875, 42875], "mapped", [42876]], [[42876, 42876], "valid"], [[42877, 42877], "mapped", [7545]], [[42878, 42878], "mapped", [42879]], [[42879, 42879], "valid"], [[42880, 42880], "mapped", [42881]], [[42881, 42881], "valid"], [[42882, 42882], "mapped", [42883]], [[42883, 42883], "valid"], [[42884, 42884], "mapped", [42885]], [[42885, 42885], "valid"], [[42886, 42886], "mapped", [42887]], [[42887, 42888], "valid"], [[42889, 42890], "valid", [], "NV8"], [[42891, 42891], "mapped", [42892]], [[42892, 42892], "valid"], [[42893, 42893], "mapped", [613]], [[42894, 42894], "valid"], [[42895, 42895], "valid"], [[42896, 42896], "mapped", [42897]], [[42897, 42897], "valid"], [[42898, 42898], "mapped", [42899]], [[42899, 42899], "valid"], [[42900, 42901], "valid"], [[42902, 42902], "mapped", [42903]], [[42903, 42903], "valid"], [[42904, 42904], "mapped", [42905]], [[42905, 42905], "valid"], [[42906, 42906], "mapped", [42907]], [[42907, 42907], "valid"], [[42908, 42908], "mapped", [42909]], [[42909, 42909], "valid"], [[42910, 42910], "mapped", [42911]], [[42911, 42911], "valid"], [[42912, 42912], "mapped", [42913]], [[42913, 42913], "valid"], [[42914, 42914], "mapped", [42915]], [[42915, 42915], "valid"], [[42916, 42916], "mapped", [42917]], [[42917, 42917], "valid"], [[42918, 42918], "mapped", [42919]], [[42919, 42919], "valid"], [[42920, 42920], "mapped", [42921]], [[42921, 42921], "valid"], [[42922, 42922], "mapped", [614]], [[42923, 42923], "mapped", [604]], [[42924, 42924], "mapped", [609]], [[42925, 42925], "mapped", [620]], [[42926, 42927], "disallowed"], [[42928, 42928], "mapped", [670]], [[42929, 42929], "mapped", [647]], [[42930, 42930], "mapped", [669]], [[42931, 42931], "mapped", [43859]], [[42932, 42932], "mapped", [42933]], [[42933, 42933], "valid"], [[42934, 42934], "mapped", [42935]], [[42935, 42935], "valid"], [[42936, 42998], "disallowed"], [[42999, 42999], "valid"], [[43e3, 43e3], "mapped", [295]], [[43001, 43001], "mapped", [339]], [[43002, 43002], "valid"], [[43003, 43007], "valid"], [[43008, 43047], "valid"], [[43048, 43051], "valid", [], "NV8"], [[43052, 43055], "disallowed"], [[43056, 43065], "valid", [], "NV8"], [[43066, 43071], "disallowed"], [[43072, 43123], "valid"], [[43124, 43127], "valid", [], "NV8"], [[43128, 43135], "disallowed"], [[43136, 43204], "valid"], [[43205, 43213], "disallowed"], [[43214, 43215], "valid", [], "NV8"], [[43216, 43225], "valid"], [[43226, 43231], "disallowed"], [[43232, 43255], "valid"], [[43256, 43258], "valid", [], "NV8"], [[43259, 43259], "valid"], [[43260, 43260], "valid", [], "NV8"], [[43261, 43261], "valid"], [[43262, 43263], "disallowed"], [[43264, 43309], "valid"], [[43310, 43311], "valid", [], "NV8"], [[43312, 43347], "valid"], [[43348, 43358], "disallowed"], [[43359, 43359], "valid", [], "NV8"], [[43360, 43388], "valid", [], "NV8"], [[43389, 43391], "disallowed"], [[43392, 43456], "valid"], [[43457, 43469], "valid", [], "NV8"], [[43470, 43470], "disallowed"], [[43471, 43481], "valid"], [[43482, 43485], "disallowed"], [[43486, 43487], "valid", [], "NV8"], [[43488, 43518], "valid"], [[43519, 43519], "disallowed"], [[43520, 43574], "valid"], [[43575, 43583], "disallowed"], [[43584, 43597], "valid"], [[43598, 43599], "disallowed"], [[43600, 43609], "valid"], [[43610, 43611], "disallowed"], [[43612, 43615], "valid", [], "NV8"], [[43616, 43638], "valid"], [[43639, 43641], "valid", [], "NV8"], [[43642, 43643], "valid"], [[43644, 43647], "valid"], [[43648, 43714], "valid"], [[43715, 43738], "disallowed"], [[43739, 43741], "valid"], [[43742, 43743], "valid", [], "NV8"], [[43744, 43759], "valid"], [[43760, 43761], "valid", [], "NV8"], [[43762, 43766], "valid"], [[43767, 43776], "disallowed"], [[43777, 43782], "valid"], [[43783, 43784], "disallowed"], [[43785, 43790], "valid"], [[43791, 43792], "disallowed"], [[43793, 43798], "valid"], [[43799, 43807], "disallowed"], [[43808, 43814], "valid"], [[43815, 43815], "disallowed"], [[43816, 43822], "valid"], [[43823, 43823], "disallowed"], [[43824, 43866], "valid"], [[43867, 43867], "valid", [], "NV8"], [[43868, 43868], "mapped", [42791]], [[43869, 43869], "mapped", [43831]], [[43870, 43870], "mapped", [619]], [[43871, 43871], "mapped", [43858]], [[43872, 43875], "valid"], [[43876, 43877], "valid"], [[43878, 43887], "disallowed"], [[43888, 43888], "mapped", [5024]], [[43889, 43889], "mapped", [5025]], [[43890, 43890], "mapped", [5026]], [[43891, 43891], "mapped", [5027]], [[43892, 43892], "mapped", [5028]], [[43893, 43893], "mapped", [5029]], [[43894, 43894], "mapped", [5030]], [[43895, 43895], "mapped", [5031]], [[43896, 43896], "mapped", [5032]], [[43897, 43897], "mapped", [5033]], [[43898, 43898], "mapped", [5034]], [[43899, 43899], "mapped", [5035]], [[43900, 43900], "mapped", [5036]], [[43901, 43901], "mapped", [5037]], [[43902, 43902], "mapped", [5038]], [[43903, 43903], "mapped", [5039]], [[43904, 43904], "mapped", [5040]], [[43905, 43905], "mapped", [5041]], [[43906, 43906], "mapped", [5042]], [[43907, 43907], "mapped", [5043]], [[43908, 43908], "mapped", [5044]], [[43909, 43909], "mapped", [5045]], [[43910, 43910], "mapped", [5046]], [[43911, 43911], "mapped", [5047]], [[43912, 43912], "mapped", [5048]], [[43913, 43913], "mapped", [5049]], [[43914, 43914], "mapped", [5050]], [[43915, 43915], "mapped", [5051]], [[43916, 43916], "mapped", [5052]], [[43917, 43917], "mapped", [5053]], [[43918, 43918], "mapped", [5054]], [[43919, 43919], "mapped", [5055]], [[43920, 43920], "mapped", [5056]], [[43921, 43921], "mapped", [5057]], [[43922, 43922], "mapped", [5058]], [[43923, 43923], "mapped", [5059]], [[43924, 43924], "mapped", [5060]], [[43925, 43925], "mapped", [5061]], [[43926, 43926], "mapped", [5062]], [[43927, 43927], "mapped", [5063]], [[43928, 43928], "mapped", [5064]], [[43929, 43929], "mapped", [5065]], [[43930, 43930], "mapped", [5066]], [[43931, 43931], "mapped", [5067]], [[43932, 43932], "mapped", [5068]], [[43933, 43933], "mapped", [5069]], [[43934, 43934], "mapped", [5070]], [[43935, 43935], "mapped", [5071]], [[43936, 43936], "mapped", [5072]], [[43937, 43937], "mapped", [5073]], [[43938, 43938], "mapped", [5074]], [[43939, 43939], "mapped", [5075]], [[43940, 43940], "mapped", [5076]], [[43941, 43941], "mapped", [5077]], [[43942, 43942], "mapped", [5078]], [[43943, 43943], "mapped", [5079]], [[43944, 43944], "mapped", [5080]], [[43945, 43945], "mapped", [5081]], [[43946, 43946], "mapped", [5082]], [[43947, 43947], "mapped", [5083]], [[43948, 43948], "mapped", [5084]], [[43949, 43949], "mapped", [5085]], [[43950, 43950], "mapped", [5086]], [[43951, 43951], "mapped", [5087]], [[43952, 43952], "mapped", [5088]], [[43953, 43953], "mapped", [5089]], [[43954, 43954], "mapped", [5090]], [[43955, 43955], "mapped", [5091]], [[43956, 43956], "mapped", [5092]], [[43957, 43957], "mapped", [5093]], [[43958, 43958], "mapped", [5094]], [[43959, 43959], "mapped", [5095]], [[43960, 43960], "mapped", [5096]], [[43961, 43961], "mapped", [5097]], [[43962, 43962], "mapped", [5098]], [[43963, 43963], "mapped", [5099]], [[43964, 43964], "mapped", [5100]], [[43965, 43965], "mapped", [5101]], [[43966, 43966], "mapped", [5102]], [[43967, 43967], "mapped", [5103]], [[43968, 44010], "valid"], [[44011, 44011], "valid", [], "NV8"], [[44012, 44013], "valid"], [[44014, 44015], "disallowed"], [[44016, 44025], "valid"], [[44026, 44031], "disallowed"], [[44032, 55203], "valid"], [[55204, 55215], "disallowed"], [[55216, 55238], "valid", [], "NV8"], [[55239, 55242], "disallowed"], [[55243, 55291], "valid", [], "NV8"], [[55292, 55295], "disallowed"], [[55296, 57343], "disallowed"], [[57344, 63743], "disallowed"], [[63744, 63744], "mapped", [35912]], [[63745, 63745], "mapped", [26356]], [[63746, 63746], "mapped", [36554]], [[63747, 63747], "mapped", [36040]], [[63748, 63748], "mapped", [28369]], [[63749, 63749], "mapped", [20018]], [[63750, 63750], "mapped", [21477]], [[63751, 63752], "mapped", [40860]], [[63753, 63753], "mapped", [22865]], [[63754, 63754], "mapped", [37329]], [[63755, 63755], "mapped", [21895]], [[63756, 63756], "mapped", [22856]], [[63757, 63757], "mapped", [25078]], [[63758, 63758], "mapped", [30313]], [[63759, 63759], "mapped", [32645]], [[63760, 63760], "mapped", [34367]], [[63761, 63761], "mapped", [34746]], [[63762, 63762], "mapped", [35064]], [[63763, 63763], "mapped", [37007]], [[63764, 63764], "mapped", [27138]], [[63765, 63765], "mapped", [27931]], [[63766, 63766], "mapped", [28889]], [[63767, 63767], "mapped", [29662]], [[63768, 63768], "mapped", [33853]], [[63769, 63769], "mapped", [37226]], [[63770, 63770], "mapped", [39409]], [[63771, 63771], "mapped", [20098]], [[63772, 63772], "mapped", [21365]], [[63773, 63773], "mapped", [27396]], [[63774, 63774], "mapped", [29211]], [[63775, 63775], "mapped", [34349]], [[63776, 63776], "mapped", [40478]], [[63777, 63777], "mapped", [23888]], [[63778, 63778], "mapped", [28651]], [[63779, 63779], "mapped", [34253]], [[63780, 63780], "mapped", [35172]], [[63781, 63781], "mapped", [25289]], [[63782, 63782], "mapped", [33240]], [[63783, 63783], "mapped", [34847]], [[63784, 63784], "mapped", [24266]], [[63785, 63785], "mapped", [26391]], [[63786, 63786], "mapped", [28010]], [[63787, 63787], "mapped", [29436]], [[63788, 63788], "mapped", [37070]], [[63789, 63789], "mapped", [20358]], [[63790, 63790], "mapped", [20919]], [[63791, 63791], "mapped", [21214]], [[63792, 63792], "mapped", [25796]], [[63793, 63793], "mapped", [27347]], [[63794, 63794], "mapped", [29200]], [[63795, 63795], "mapped", [30439]], [[63796, 63796], "mapped", [32769]], [[63797, 63797], "mapped", [34310]], [[63798, 63798], "mapped", [34396]], [[63799, 63799], "mapped", [36335]], [[63800, 63800], "mapped", [38706]], [[63801, 63801], "mapped", [39791]], [[63802, 63802], "mapped", [40442]], [[63803, 63803], "mapped", [30860]], [[63804, 63804], "mapped", [31103]], [[63805, 63805], "mapped", [32160]], [[63806, 63806], "mapped", [33737]], [[63807, 63807], "mapped", [37636]], [[63808, 63808], "mapped", [40575]], [[63809, 63809], "mapped", [35542]], [[63810, 63810], "mapped", [22751]], [[63811, 63811], "mapped", [24324]], [[63812, 63812], "mapped", [31840]], [[63813, 63813], "mapped", [32894]], [[63814, 63814], "mapped", [29282]], [[63815, 63815], "mapped", [30922]], [[63816, 63816], "mapped", [36034]], [[63817, 63817], "mapped", [38647]], [[63818, 63818], "mapped", [22744]], [[63819, 63819], "mapped", [23650]], [[63820, 63820], "mapped", [27155]], [[63821, 63821], "mapped", [28122]], [[63822, 63822], "mapped", [28431]], [[63823, 63823], "mapped", [32047]], [[63824, 63824], "mapped", [32311]], [[63825, 63825], "mapped", [38475]], [[63826, 63826], "mapped", [21202]], [[63827, 63827], "mapped", [32907]], [[63828, 63828], "mapped", [20956]], [[63829, 63829], "mapped", [20940]], [[63830, 63830], "mapped", [31260]], [[63831, 63831], "mapped", [32190]], [[63832, 63832], "mapped", [33777]], [[63833, 63833], "mapped", [38517]], [[63834, 63834], "mapped", [35712]], [[63835, 63835], "mapped", [25295]], [[63836, 63836], "mapped", [27138]], [[63837, 63837], "mapped", [35582]], [[63838, 63838], "mapped", [20025]], [[63839, 63839], "mapped", [23527]], [[63840, 63840], "mapped", [24594]], [[63841, 63841], "mapped", [29575]], [[63842, 63842], "mapped", [30064]], [[63843, 63843], "mapped", [21271]], [[63844, 63844], "mapped", [30971]], [[63845, 63845], "mapped", [20415]], [[63846, 63846], "mapped", [24489]], [[63847, 63847], "mapped", [19981]], [[63848, 63848], "mapped", [27852]], [[63849, 63849], "mapped", [25976]], [[63850, 63850], "mapped", [32034]], [[63851, 63851], "mapped", [21443]], [[63852, 63852], "mapped", [22622]], [[63853, 63853], "mapped", [30465]], [[63854, 63854], "mapped", [33865]], [[63855, 63855], "mapped", [35498]], [[63856, 63856], "mapped", [27578]], [[63857, 63857], "mapped", [36784]], [[63858, 63858], "mapped", [27784]], [[63859, 63859], "mapped", [25342]], [[63860, 63860], "mapped", [33509]], [[63861, 63861], "mapped", [25504]], [[63862, 63862], "mapped", [30053]], [[63863, 63863], "mapped", [20142]], [[63864, 63864], "mapped", [20841]], [[63865, 63865], "mapped", [20937]], [[63866, 63866], "mapped", [26753]], [[63867, 63867], "mapped", [31975]], [[63868, 63868], "mapped", [33391]], [[63869, 63869], "mapped", [35538]], [[63870, 63870], "mapped", [37327]], [[63871, 63871], "mapped", [21237]], [[63872, 63872], "mapped", [21570]], [[63873, 63873], "mapped", [22899]], [[63874, 63874], "mapped", [24300]], [[63875, 63875], "mapped", [26053]], [[63876, 63876], "mapped", [28670]], [[63877, 63877], "mapped", [31018]], [[63878, 63878], "mapped", [38317]], [[63879, 63879], "mapped", [39530]], [[63880, 63880], "mapped", [40599]], [[63881, 63881], "mapped", [40654]], [[63882, 63882], "mapped", [21147]], [[63883, 63883], "mapped", [26310]], [[63884, 63884], "mapped", [27511]], [[63885, 63885], "mapped", [36706]], [[63886, 63886], "mapped", [24180]], [[63887, 63887], "mapped", [24976]], [[63888, 63888], "mapped", [25088]], [[63889, 63889], "mapped", [25754]], [[63890, 63890], "mapped", [28451]], [[63891, 63891], "mapped", [29001]], [[63892, 63892], "mapped", [29833]], [[63893, 63893], "mapped", [31178]], [[63894, 63894], "mapped", [32244]], [[63895, 63895], "mapped", [32879]], [[63896, 63896], "mapped", [36646]], [[63897, 63897], "mapped", [34030]], [[63898, 63898], "mapped", [36899]], [[63899, 63899], "mapped", [37706]], [[63900, 63900], "mapped", [21015]], [[63901, 63901], "mapped", [21155]], [[63902, 63902], "mapped", [21693]], [[63903, 63903], "mapped", [28872]], [[63904, 63904], "mapped", [35010]], [[63905, 63905], "mapped", [35498]], [[63906, 63906], "mapped", [24265]], [[63907, 63907], "mapped", [24565]], [[63908, 63908], "mapped", [25467]], [[63909, 63909], "mapped", [27566]], [[63910, 63910], "mapped", [31806]], [[63911, 63911], "mapped", [29557]], [[63912, 63912], "mapped", [20196]], [[63913, 63913], "mapped", [22265]], [[63914, 63914], "mapped", [23527]], [[63915, 63915], "mapped", [23994]], [[63916, 63916], "mapped", [24604]], [[63917, 63917], "mapped", [29618]], [[63918, 63918], "mapped", [29801]], [[63919, 63919], "mapped", [32666]], [[63920, 63920], "mapped", [32838]], [[63921, 63921], "mapped", [37428]], [[63922, 63922], "mapped", [38646]], [[63923, 63923], "mapped", [38728]], [[63924, 63924], "mapped", [38936]], [[63925, 63925], "mapped", [20363]], [[63926, 63926], "mapped", [31150]], [[63927, 63927], "mapped", [37300]], [[63928, 63928], "mapped", [38584]], [[63929, 63929], "mapped", [24801]], [[63930, 63930], "mapped", [20102]], [[63931, 63931], "mapped", [20698]], [[63932, 63932], "mapped", [23534]], [[63933, 63933], "mapped", [23615]], [[63934, 63934], "mapped", [26009]], [[63935, 63935], "mapped", [27138]], [[63936, 63936], "mapped", [29134]], [[63937, 63937], "mapped", [30274]], [[63938, 63938], "mapped", [34044]], [[63939, 63939], "mapped", [36988]], [[63940, 63940], "mapped", [40845]], [[63941, 63941], "mapped", [26248]], [[63942, 63942], "mapped", [38446]], [[63943, 63943], "mapped", [21129]], [[63944, 63944], "mapped", [26491]], [[63945, 63945], "mapped", [26611]], [[63946, 63946], "mapped", [27969]], [[63947, 63947], "mapped", [28316]], [[63948, 63948], "mapped", [29705]], [[63949, 63949], "mapped", [30041]], [[63950, 63950], "mapped", [30827]], [[63951, 63951], "mapped", [32016]], [[63952, 63952], "mapped", [39006]], [[63953, 63953], "mapped", [20845]], [[63954, 63954], "mapped", [25134]], [[63955, 63955], "mapped", [38520]], [[63956, 63956], "mapped", [20523]], [[63957, 63957], "mapped", [23833]], [[63958, 63958], "mapped", [28138]], [[63959, 63959], "mapped", [36650]], [[63960, 63960], "mapped", [24459]], [[63961, 63961], "mapped", [24900]], [[63962, 63962], "mapped", [26647]], [[63963, 63963], "mapped", [29575]], [[63964, 63964], "mapped", [38534]], [[63965, 63965], "mapped", [21033]], [[63966, 63966], "mapped", [21519]], [[63967, 63967], "mapped", [23653]], [[63968, 63968], "mapped", [26131]], [[63969, 63969], "mapped", [26446]], [[63970, 63970], "mapped", [26792]], [[63971, 63971], "mapped", [27877]], [[63972, 63972], "mapped", [29702]], [[63973, 63973], "mapped", [30178]], [[63974, 63974], "mapped", [32633]], [[63975, 63975], "mapped", [35023]], [[63976, 63976], "mapped", [35041]], [[63977, 63977], "mapped", [37324]], [[63978, 63978], "mapped", [38626]], [[63979, 63979], "mapped", [21311]], [[63980, 63980], "mapped", [28346]], [[63981, 63981], "mapped", [21533]], [[63982, 63982], "mapped", [29136]], [[63983, 63983], "mapped", [29848]], [[63984, 63984], "mapped", [34298]], [[63985, 63985], "mapped", [38563]], [[63986, 63986], "mapped", [40023]], [[63987, 63987], "mapped", [40607]], [[63988, 63988], "mapped", [26519]], [[63989, 63989], "mapped", [28107]], [[63990, 63990], "mapped", [33256]], [[63991, 63991], "mapped", [31435]], [[63992, 63992], "mapped", [31520]], [[63993, 63993], "mapped", [31890]], [[63994, 63994], "mapped", [29376]], [[63995, 63995], "mapped", [28825]], [[63996, 63996], "mapped", [35672]], [[63997, 63997], "mapped", [20160]], [[63998, 63998], "mapped", [33590]], [[63999, 63999], "mapped", [21050]], [[64e3, 64e3], "mapped", [20999]], [[64001, 64001], "mapped", [24230]], [[64002, 64002], "mapped", [25299]], [[64003, 64003], "mapped", [31958]], [[64004, 64004], "mapped", [23429]], [[64005, 64005], "mapped", [27934]], [[64006, 64006], "mapped", [26292]], [[64007, 64007], "mapped", [36667]], [[64008, 64008], "mapped", [34892]], [[64009, 64009], "mapped", [38477]], [[64010, 64010], "mapped", [35211]], [[64011, 64011], "mapped", [24275]], [[64012, 64012], "mapped", [20800]], [[64013, 64013], "mapped", [21952]], [[64014, 64015], "valid"], [[64016, 64016], "mapped", [22618]], [[64017, 64017], "valid"], [[64018, 64018], "mapped", [26228]], [[64019, 64020], "valid"], [[64021, 64021], "mapped", [20958]], [[64022, 64022], "mapped", [29482]], [[64023, 64023], "mapped", [30410]], [[64024, 64024], "mapped", [31036]], [[64025, 64025], "mapped", [31070]], [[64026, 64026], "mapped", [31077]], [[64027, 64027], "mapped", [31119]], [[64028, 64028], "mapped", [38742]], [[64029, 64029], "mapped", [31934]], [[64030, 64030], "mapped", [32701]], [[64031, 64031], "valid"], [[64032, 64032], "mapped", [34322]], [[64033, 64033], "valid"], [[64034, 64034], "mapped", [35576]], [[64035, 64036], "valid"], [[64037, 64037], "mapped", [36920]], [[64038, 64038], "mapped", [37117]], [[64039, 64041], "valid"], [[64042, 64042], "mapped", [39151]], [[64043, 64043], "mapped", [39164]], [[64044, 64044], "mapped", [39208]], [[64045, 64045], "mapped", [40372]], [[64046, 64046], "mapped", [37086]], [[64047, 64047], "mapped", [38583]], [[64048, 64048], "mapped", [20398]], [[64049, 64049], "mapped", [20711]], [[64050, 64050], "mapped", [20813]], [[64051, 64051], "mapped", [21193]], [[64052, 64052], "mapped", [21220]], [[64053, 64053], "mapped", [21329]], [[64054, 64054], "mapped", [21917]], [[64055, 64055], "mapped", [22022]], [[64056, 64056], "mapped", [22120]], [[64057, 64057], "mapped", [22592]], [[64058, 64058], "mapped", [22696]], [[64059, 64059], "mapped", [23652]], [[64060, 64060], "mapped", [23662]], [[64061, 64061], "mapped", [24724]], [[64062, 64062], "mapped", [24936]], [[64063, 64063], "mapped", [24974]], [[64064, 64064], "mapped", [25074]], [[64065, 64065], "mapped", [25935]], [[64066, 64066], "mapped", [26082]], [[64067, 64067], "mapped", [26257]], [[64068, 64068], "mapped", [26757]], [[64069, 64069], "mapped", [28023]], [[64070, 64070], "mapped", [28186]], [[64071, 64071], "mapped", [28450]], [[64072, 64072], "mapped", [29038]], [[64073, 64073], "mapped", [29227]], [[64074, 64074], "mapped", [29730]], [[64075, 64075], "mapped", [30865]], [[64076, 64076], "mapped", [31038]], [[64077, 64077], "mapped", [31049]], [[64078, 64078], "mapped", [31048]], [[64079, 64079], "mapped", [31056]], [[64080, 64080], "mapped", [31062]], [[64081, 64081], "mapped", [31069]], [[64082, 64082], "mapped", [31117]], [[64083, 64083], "mapped", [31118]], [[64084, 64084], "mapped", [31296]], [[64085, 64085], "mapped", [31361]], [[64086, 64086], "mapped", [31680]], [[64087, 64087], "mapped", [32244]], [[64088, 64088], "mapped", [32265]], [[64089, 64089], "mapped", [32321]], [[64090, 64090], "mapped", [32626]], [[64091, 64091], "mapped", [32773]], [[64092, 64092], "mapped", [33261]], [[64093, 64094], "mapped", [33401]], [[64095, 64095], "mapped", [33879]], [[64096, 64096], "mapped", [35088]], [[64097, 64097], "mapped", [35222]], [[64098, 64098], "mapped", [35585]], [[64099, 64099], "mapped", [35641]], [[64100, 64100], "mapped", [36051]], [[64101, 64101], "mapped", [36104]], [[64102, 64102], "mapped", [36790]], [[64103, 64103], "mapped", [36920]], [[64104, 64104], "mapped", [38627]], [[64105, 64105], "mapped", [38911]], [[64106, 64106], "mapped", [38971]], [[64107, 64107], "mapped", [24693]], [[64108, 64108], "mapped", [148206]], [[64109, 64109], "mapped", [33304]], [[64110, 64111], "disallowed"], [[64112, 64112], "mapped", [20006]], [[64113, 64113], "mapped", [20917]], [[64114, 64114], "mapped", [20840]], [[64115, 64115], "mapped", [20352]], [[64116, 64116], "mapped", [20805]], [[64117, 64117], "mapped", [20864]], [[64118, 64118], "mapped", [21191]], [[64119, 64119], "mapped", [21242]], [[64120, 64120], "mapped", [21917]], [[64121, 64121], "mapped", [21845]], [[64122, 64122], "mapped", [21913]], [[64123, 64123], "mapped", [21986]], [[64124, 64124], "mapped", [22618]], [[64125, 64125], "mapped", [22707]], [[64126, 64126], "mapped", [22852]], [[64127, 64127], "mapped", [22868]], [[64128, 64128], "mapped", [23138]], [[64129, 64129], "mapped", [23336]], [[64130, 64130], "mapped", [24274]], [[64131, 64131], "mapped", [24281]], [[64132, 64132], "mapped", [24425]], [[64133, 64133], "mapped", [24493]], [[64134, 64134], "mapped", [24792]], [[64135, 64135], "mapped", [24910]], [[64136, 64136], "mapped", [24840]], [[64137, 64137], "mapped", [24974]], [[64138, 64138], "mapped", [24928]], [[64139, 64139], "mapped", [25074]], [[64140, 64140], "mapped", [25140]], [[64141, 64141], "mapped", [25540]], [[64142, 64142], "mapped", [25628]], [[64143, 64143], "mapped", [25682]], [[64144, 64144], "mapped", [25942]], [[64145, 64145], "mapped", [26228]], [[64146, 64146], "mapped", [26391]], [[64147, 64147], "mapped", [26395]], [[64148, 64148], "mapped", [26454]], [[64149, 64149], "mapped", [27513]], [[64150, 64150], "mapped", [27578]], [[64151, 64151], "mapped", [27969]], [[64152, 64152], "mapped", [28379]], [[64153, 64153], "mapped", [28363]], [[64154, 64154], "mapped", [28450]], [[64155, 64155], "mapped", [28702]], [[64156, 64156], "mapped", [29038]], [[64157, 64157], "mapped", [30631]], [[64158, 64158], "mapped", [29237]], [[64159, 64159], "mapped", [29359]], [[64160, 64160], "mapped", [29482]], [[64161, 64161], "mapped", [29809]], [[64162, 64162], "mapped", [29958]], [[64163, 64163], "mapped", [30011]], [[64164, 64164], "mapped", [30237]], [[64165, 64165], "mapped", [30239]], [[64166, 64166], "mapped", [30410]], [[64167, 64167], "mapped", [30427]], [[64168, 64168], "mapped", [30452]], [[64169, 64169], "mapped", [30538]], [[64170, 64170], "mapped", [30528]], [[64171, 64171], "mapped", [30924]], [[64172, 64172], "mapped", [31409]], [[64173, 64173], "mapped", [31680]], [[64174, 64174], "mapped", [31867]], [[64175, 64175], "mapped", [32091]], [[64176, 64176], "mapped", [32244]], [[64177, 64177], "mapped", [32574]], [[64178, 64178], "mapped", [32773]], [[64179, 64179], "mapped", [33618]], [[64180, 64180], "mapped", [33775]], [[64181, 64181], "mapped", [34681]], [[64182, 64182], "mapped", [35137]], [[64183, 64183], "mapped", [35206]], [[64184, 64184], "mapped", [35222]], [[64185, 64185], "mapped", [35519]], [[64186, 64186], "mapped", [35576]], [[64187, 64187], "mapped", [35531]], [[64188, 64188], "mapped", [35585]], [[64189, 64189], "mapped", [35582]], [[64190, 64190], "mapped", [35565]], [[64191, 64191], "mapped", [35641]], [[64192, 64192], "mapped", [35722]], [[64193, 64193], "mapped", [36104]], [[64194, 64194], "mapped", [36664]], [[64195, 64195], "mapped", [36978]], [[64196, 64196], "mapped", [37273]], [[64197, 64197], "mapped", [37494]], [[64198, 64198], "mapped", [38524]], [[64199, 64199], "mapped", [38627]], [[64200, 64200], "mapped", [38742]], [[64201, 64201], "mapped", [38875]], [[64202, 64202], "mapped", [38911]], [[64203, 64203], "mapped", [38923]], [[64204, 64204], "mapped", [38971]], [[64205, 64205], "mapped", [39698]], [[64206, 64206], "mapped", [40860]], [[64207, 64207], "mapped", [141386]], [[64208, 64208], "mapped", [141380]], [[64209, 64209], "mapped", [144341]], [[64210, 64210], "mapped", [15261]], [[64211, 64211], "mapped", [16408]], [[64212, 64212], "mapped", [16441]], [[64213, 64213], "mapped", [152137]], [[64214, 64214], "mapped", [154832]], [[64215, 64215], "mapped", [163539]], [[64216, 64216], "mapped", [40771]], [[64217, 64217], "mapped", [40846]], [[64218, 64255], "disallowed"], [[64256, 64256], "mapped", [102, 102]], [[64257, 64257], "mapped", [102, 105]], [[64258, 64258], "mapped", [102, 108]], [[64259, 64259], "mapped", [102, 102, 105]], [[64260, 64260], "mapped", [102, 102, 108]], [[64261, 64262], "mapped", [115, 116]], [[64263, 64274], "disallowed"], [[64275, 64275], "mapped", [1396, 1398]], [[64276, 64276], "mapped", [1396, 1381]], [[64277, 64277], "mapped", [1396, 1387]], [[64278, 64278], "mapped", [1406, 1398]], [[64279, 64279], "mapped", [1396, 1389]], [[64280, 64284], "disallowed"], [[64285, 64285], "mapped", [1497, 1460]], [[64286, 64286], "valid"], [[64287, 64287], "mapped", [1522, 1463]], [[64288, 64288], "mapped", [1506]], [[64289, 64289], "mapped", [1488]], [[64290, 64290], "mapped", [1491]], [[64291, 64291], "mapped", [1492]], [[64292, 64292], "mapped", [1499]], [[64293, 64293], "mapped", [1500]], [[64294, 64294], "mapped", [1501]], [[64295, 64295], "mapped", [1512]], [[64296, 64296], "mapped", [1514]], [[64297, 64297], "disallowed_STD3_mapped", [43]], [[64298, 64298], "mapped", [1513, 1473]], [[64299, 64299], "mapped", [1513, 1474]], [[64300, 64300], "mapped", [1513, 1468, 1473]], [[64301, 64301], "mapped", [1513, 1468, 1474]], [[64302, 64302], "mapped", [1488, 1463]], [[64303, 64303], "mapped", [1488, 1464]], [[64304, 64304], "mapped", [1488, 1468]], [[64305, 64305], "mapped", [1489, 1468]], [[64306, 64306], "mapped", [1490, 1468]], [[64307, 64307], "mapped", [1491, 1468]], [[64308, 64308], "mapped", [1492, 1468]], [[64309, 64309], "mapped", [1493, 1468]], [[64310, 64310], "mapped", [1494, 1468]], [[64311, 64311], "disallowed"], [[64312, 64312], "mapped", [1496, 1468]], [[64313, 64313], "mapped", [1497, 1468]], [[64314, 64314], "mapped", [1498, 1468]], [[64315, 64315], "mapped", [1499, 1468]], [[64316, 64316], "mapped", [1500, 1468]], [[64317, 64317], "disallowed"], [[64318, 64318], "mapped", [1502, 1468]], [[64319, 64319], "disallowed"], [[64320, 64320], "mapped", [1504, 1468]], [[64321, 64321], "mapped", [1505, 1468]], [[64322, 64322], "disallowed"], [[64323, 64323], "mapped", [1507, 1468]], [[64324, 64324], "mapped", [1508, 1468]], [[64325, 64325], "disallowed"], [[64326, 64326], "mapped", [1510, 1468]], [[64327, 64327], "mapped", [1511, 1468]], [[64328, 64328], "mapped", [1512, 1468]], [[64329, 64329], "mapped", [1513, 1468]], [[64330, 64330], "mapped", [1514, 1468]], [[64331, 64331], "mapped", [1493, 1465]], [[64332, 64332], "mapped", [1489, 1471]], [[64333, 64333], "mapped", [1499, 1471]], [[64334, 64334], "mapped", [1508, 1471]], [[64335, 64335], "mapped", [1488, 1500]], [[64336, 64337], "mapped", [1649]], [[64338, 64341], "mapped", [1659]], [[64342, 64345], "mapped", [1662]], [[64346, 64349], "mapped", [1664]], [[64350, 64353], "mapped", [1658]], [[64354, 64357], "mapped", [1663]], [[64358, 64361], "mapped", [1657]], [[64362, 64365], "mapped", [1700]], [[64366, 64369], "mapped", [1702]], [[64370, 64373], "mapped", [1668]], [[64374, 64377], "mapped", [1667]], [[64378, 64381], "mapped", [1670]], [[64382, 64385], "mapped", [1671]], [[64386, 64387], "mapped", [1677]], [[64388, 64389], "mapped", [1676]], [[64390, 64391], "mapped", [1678]], [[64392, 64393], "mapped", [1672]], [[64394, 64395], "mapped", [1688]], [[64396, 64397], "mapped", [1681]], [[64398, 64401], "mapped", [1705]], [[64402, 64405], "mapped", [1711]], [[64406, 64409], "mapped", [1715]], [[64410, 64413], "mapped", [1713]], [[64414, 64415], "mapped", [1722]], [[64416, 64419], "mapped", [1723]], [[64420, 64421], "mapped", [1728]], [[64422, 64425], "mapped", [1729]], [[64426, 64429], "mapped", [1726]], [[64430, 64431], "mapped", [1746]], [[64432, 64433], "mapped", [1747]], [[64434, 64449], "valid", [], "NV8"], [[64450, 64466], "disallowed"], [[64467, 64470], "mapped", [1709]], [[64471, 64472], "mapped", [1735]], [[64473, 64474], "mapped", [1734]], [[64475, 64476], "mapped", [1736]], [[64477, 64477], "mapped", [1735, 1652]], [[64478, 64479], "mapped", [1739]], [[64480, 64481], "mapped", [1733]], [[64482, 64483], "mapped", [1737]], [[64484, 64487], "mapped", [1744]], [[64488, 64489], "mapped", [1609]], [[64490, 64491], "mapped", [1574, 1575]], [[64492, 64493], "mapped", [1574, 1749]], [[64494, 64495], "mapped", [1574, 1608]], [[64496, 64497], "mapped", [1574, 1735]], [[64498, 64499], "mapped", [1574, 1734]], [[64500, 64501], "mapped", [1574, 1736]], [[64502, 64504], "mapped", [1574, 1744]], [[64505, 64507], "mapped", [1574, 1609]], [[64508, 64511], "mapped", [1740]], [[64512, 64512], "mapped", [1574, 1580]], [[64513, 64513], "mapped", [1574, 1581]], [[64514, 64514], "mapped", [1574, 1605]], [[64515, 64515], "mapped", [1574, 1609]], [[64516, 64516], "mapped", [1574, 1610]], [[64517, 64517], "mapped", [1576, 1580]], [[64518, 64518], "mapped", [1576, 1581]], [[64519, 64519], "mapped", [1576, 1582]], [[64520, 64520], "mapped", [1576, 1605]], [[64521, 64521], "mapped", [1576, 1609]], [[64522, 64522], "mapped", [1576, 1610]], [[64523, 64523], "mapped", [1578, 1580]], [[64524, 64524], "mapped", [1578, 1581]], [[64525, 64525], "mapped", [1578, 1582]], [[64526, 64526], "mapped", [1578, 1605]], [[64527, 64527], "mapped", [1578, 1609]], [[64528, 64528], "mapped", [1578, 1610]], [[64529, 64529], "mapped", [1579, 1580]], [[64530, 64530], "mapped", [1579, 1605]], [[64531, 64531], "mapped", [1579, 1609]], [[64532, 64532], "mapped", [1579, 1610]], [[64533, 64533], "mapped", [1580, 1581]], [[64534, 64534], "mapped", [1580, 1605]], [[64535, 64535], "mapped", [1581, 1580]], [[64536, 64536], "mapped", [1581, 1605]], [[64537, 64537], "mapped", [1582, 1580]], [[64538, 64538], "mapped", [1582, 1581]], [[64539, 64539], "mapped", [1582, 1605]], [[64540, 64540], "mapped", [1587, 1580]], [[64541, 64541], "mapped", [1587, 1581]], [[64542, 64542], "mapped", [1587, 1582]], [[64543, 64543], "mapped", [1587, 1605]], [[64544, 64544], "mapped", [1589, 1581]], [[64545, 64545], "mapped", [1589, 1605]], [[64546, 64546], "mapped", [1590, 1580]], [[64547, 64547], "mapped", [1590, 1581]], [[64548, 64548], "mapped", [1590, 1582]], [[64549, 64549], "mapped", [1590, 1605]], [[64550, 64550], "mapped", [1591, 1581]], [[64551, 64551], "mapped", [1591, 1605]], [[64552, 64552], "mapped", [1592, 1605]], [[64553, 64553], "mapped", [1593, 1580]], [[64554, 64554], "mapped", [1593, 1605]], [[64555, 64555], "mapped", [1594, 1580]], [[64556, 64556], "mapped", [1594, 1605]], [[64557, 64557], "mapped", [1601, 1580]], [[64558, 64558], "mapped", [1601, 1581]], [[64559, 64559], "mapped", [1601, 1582]], [[64560, 64560], "mapped", [1601, 1605]], [[64561, 64561], "mapped", [1601, 1609]], [[64562, 64562], "mapped", [1601, 1610]], [[64563, 64563], "mapped", [1602, 1581]], [[64564, 64564], "mapped", [1602, 1605]], [[64565, 64565], "mapped", [1602, 1609]], [[64566, 64566], "mapped", [1602, 1610]], [[64567, 64567], "mapped", [1603, 1575]], [[64568, 64568], "mapped", [1603, 1580]], [[64569, 64569], "mapped", [1603, 1581]], [[64570, 64570], "mapped", [1603, 1582]], [[64571, 64571], "mapped", [1603, 1604]], [[64572, 64572], "mapped", [1603, 1605]], [[64573, 64573], "mapped", [1603, 1609]], [[64574, 64574], "mapped", [1603, 1610]], [[64575, 64575], "mapped", [1604, 1580]], [[64576, 64576], "mapped", [1604, 1581]], [[64577, 64577], "mapped", [1604, 1582]], [[64578, 64578], "mapped", [1604, 1605]], [[64579, 64579], "mapped", [1604, 1609]], [[64580, 64580], "mapped", [1604, 1610]], [[64581, 64581], "mapped", [1605, 1580]], [[64582, 64582], "mapped", [1605, 1581]], [[64583, 64583], "mapped", [1605, 1582]], [[64584, 64584], "mapped", [1605, 1605]], [[64585, 64585], "mapped", [1605, 1609]], [[64586, 64586], "mapped", [1605, 1610]], [[64587, 64587], "mapped", [1606, 1580]], [[64588, 64588], "mapped", [1606, 1581]], [[64589, 64589], "mapped", [1606, 1582]], [[64590, 64590], "mapped", [1606, 1605]], [[64591, 64591], "mapped", [1606, 1609]], [[64592, 64592], "mapped", [1606, 1610]], [[64593, 64593], "mapped", [1607, 1580]], [[64594, 64594], "mapped", [1607, 1605]], [[64595, 64595], "mapped", [1607, 1609]], [[64596, 64596], "mapped", [1607, 1610]], [[64597, 64597], "mapped", [1610, 1580]], [[64598, 64598], "mapped", [1610, 1581]], [[64599, 64599], "mapped", [1610, 1582]], [[64600, 64600], "mapped", [1610, 1605]], [[64601, 64601], "mapped", [1610, 1609]], [[64602, 64602], "mapped", [1610, 1610]], [[64603, 64603], "mapped", [1584, 1648]], [[64604, 64604], "mapped", [1585, 1648]], [[64605, 64605], "mapped", [1609, 1648]], [[64606, 64606], "disallowed_STD3_mapped", [32, 1612, 1617]], [[64607, 64607], "disallowed_STD3_mapped", [32, 1613, 1617]], [[64608, 64608], "disallowed_STD3_mapped", [32, 1614, 1617]], [[64609, 64609], "disallowed_STD3_mapped", [32, 1615, 1617]], [[64610, 64610], "disallowed_STD3_mapped", [32, 1616, 1617]], [[64611, 64611], "disallowed_STD3_mapped", [32, 1617, 1648]], [[64612, 64612], "mapped", [1574, 1585]], [[64613, 64613], "mapped", [1574, 1586]], [[64614, 64614], "mapped", [1574, 1605]], [[64615, 64615], "mapped", [1574, 1606]], [[64616, 64616], "mapped", [1574, 1609]], [[64617, 64617], "mapped", [1574, 1610]], [[64618, 64618], "mapped", [1576, 1585]], [[64619, 64619], "mapped", [1576, 1586]], [[64620, 64620], "mapped", [1576, 1605]], [[64621, 64621], "mapped", [1576, 1606]], [[64622, 64622], "mapped", [1576, 1609]], [[64623, 64623], "mapped", [1576, 1610]], [[64624, 64624], "mapped", [1578, 1585]], [[64625, 64625], "mapped", [1578, 1586]], [[64626, 64626], "mapped", [1578, 1605]], [[64627, 64627], "mapped", [1578, 1606]], [[64628, 64628], "mapped", [1578, 1609]], [[64629, 64629], "mapped", [1578, 1610]], [[64630, 64630], "mapped", [1579, 1585]], [[64631, 64631], "mapped", [1579, 1586]], [[64632, 64632], "mapped", [1579, 1605]], [[64633, 64633], "mapped", [1579, 1606]], [[64634, 64634], "mapped", [1579, 1609]], [[64635, 64635], "mapped", [1579, 1610]], [[64636, 64636], "mapped", [1601, 1609]], [[64637, 64637], "mapped", [1601, 1610]], [[64638, 64638], "mapped", [1602, 1609]], [[64639, 64639], "mapped", [1602, 1610]], [[64640, 64640], "mapped", [1603, 1575]], [[64641, 64641], "mapped", [1603, 1604]], [[64642, 64642], "mapped", [1603, 1605]], [[64643, 64643], "mapped", [1603, 1609]], [[64644, 64644], "mapped", [1603, 1610]], [[64645, 64645], "mapped", [1604, 1605]], [[64646, 64646], "mapped", [1604, 1609]], [[64647, 64647], "mapped", [1604, 1610]], [[64648, 64648], "mapped", [1605, 1575]], [[64649, 64649], "mapped", [1605, 1605]], [[64650, 64650], "mapped", [1606, 1585]], [[64651, 64651], "mapped", [1606, 1586]], [[64652, 64652], "mapped", [1606, 1605]], [[64653, 64653], "mapped", [1606, 1606]], [[64654, 64654], "mapped", [1606, 1609]], [[64655, 64655], "mapped", [1606, 1610]], [[64656, 64656], "mapped", [1609, 1648]], [[64657, 64657], "mapped", [1610, 1585]], [[64658, 64658], "mapped", [1610, 1586]], [[64659, 64659], "mapped", [1610, 1605]], [[64660, 64660], "mapped", [1610, 1606]], [[64661, 64661], "mapped", [1610, 1609]], [[64662, 64662], "mapped", [1610, 1610]], [[64663, 64663], "mapped", [1574, 1580]], [[64664, 64664], "mapped", [1574, 1581]], [[64665, 64665], "mapped", [1574, 1582]], [[64666, 64666], "mapped", [1574, 1605]], [[64667, 64667], "mapped", [1574, 1607]], [[64668, 64668], "mapped", [1576, 1580]], [[64669, 64669], "mapped", [1576, 1581]], [[64670, 64670], "mapped", [1576, 1582]], [[64671, 64671], "mapped", [1576, 1605]], [[64672, 64672], "mapped", [1576, 1607]], [[64673, 64673], "mapped", [1578, 1580]], [[64674, 64674], "mapped", [1578, 1581]], [[64675, 64675], "mapped", [1578, 1582]], [[64676, 64676], "mapped", [1578, 1605]], [[64677, 64677], "mapped", [1578, 1607]], [[64678, 64678], "mapped", [1579, 1605]], [[64679, 64679], "mapped", [1580, 1581]], [[64680, 64680], "mapped", [1580, 1605]], [[64681, 64681], "mapped", [1581, 1580]], [[64682, 64682], "mapped", [1581, 1605]], [[64683, 64683], "mapped", [1582, 1580]], [[64684, 64684], "mapped", [1582, 1605]], [[64685, 64685], "mapped", [1587, 1580]], [[64686, 64686], "mapped", [1587, 1581]], [[64687, 64687], "mapped", [1587, 1582]], [[64688, 64688], "mapped", [1587, 1605]], [[64689, 64689], "mapped", [1589, 1581]], [[64690, 64690], "mapped", [1589, 1582]], [[64691, 64691], "mapped", [1589, 1605]], [[64692, 64692], "mapped", [1590, 1580]], [[64693, 64693], "mapped", [1590, 1581]], [[64694, 64694], "mapped", [1590, 1582]], [[64695, 64695], "mapped", [1590, 1605]], [[64696, 64696], "mapped", [1591, 1581]], [[64697, 64697], "mapped", [1592, 1605]], [[64698, 64698], "mapped", [1593, 1580]], [[64699, 64699], "mapped", [1593, 1605]], [[64700, 64700], "mapped", [1594, 1580]], [[64701, 64701], "mapped", [1594, 1605]], [[64702, 64702], "mapped", [1601, 1580]], [[64703, 64703], "mapped", [1601, 1581]], [[64704, 64704], "mapped", [1601, 1582]], [[64705, 64705], "mapped", [1601, 1605]], [[64706, 64706], "mapped", [1602, 1581]], [[64707, 64707], "mapped", [1602, 1605]], [[64708, 64708], "mapped", [1603, 1580]], [[64709, 64709], "mapped", [1603, 1581]], [[64710, 64710], "mapped", [1603, 1582]], [[64711, 64711], "mapped", [1603, 1604]], [[64712, 64712], "mapped", [1603, 1605]], [[64713, 64713], "mapped", [1604, 1580]], [[64714, 64714], "mapped", [1604, 1581]], [[64715, 64715], "mapped", [1604, 1582]], [[64716, 64716], "mapped", [1604, 1605]], [[64717, 64717], "mapped", [1604, 1607]], [[64718, 64718], "mapped", [1605, 1580]], [[64719, 64719], "mapped", [1605, 1581]], [[64720, 64720], "mapped", [1605, 1582]], [[64721, 64721], "mapped", [1605, 1605]], [[64722, 64722], "mapped", [1606, 1580]], [[64723, 64723], "mapped", [1606, 1581]], [[64724, 64724], "mapped", [1606, 1582]], [[64725, 64725], "mapped", [1606, 1605]], [[64726, 64726], "mapped", [1606, 1607]], [[64727, 64727], "mapped", [1607, 1580]], [[64728, 64728], "mapped", [1607, 1605]], [[64729, 64729], "mapped", [1607, 1648]], [[64730, 64730], "mapped", [1610, 1580]], [[64731, 64731], "mapped", [1610, 1581]], [[64732, 64732], "mapped", [1610, 1582]], [[64733, 64733], "mapped", [1610, 1605]], [[64734, 64734], "mapped", [1610, 1607]], [[64735, 64735], "mapped", [1574, 1605]], [[64736, 64736], "mapped", [1574, 1607]], [[64737, 64737], "mapped", [1576, 1605]], [[64738, 64738], "mapped", [1576, 1607]], [[64739, 64739], "mapped", [1578, 1605]], [[64740, 64740], "mapped", [1578, 1607]], [[64741, 64741], "mapped", [1579, 1605]], [[64742, 64742], "mapped", [1579, 1607]], [[64743, 64743], "mapped", [1587, 1605]], [[64744, 64744], "mapped", [1587, 1607]], [[64745, 64745], "mapped", [1588, 1605]], [[64746, 64746], "mapped", [1588, 1607]], [[64747, 64747], "mapped", [1603, 1604]], [[64748, 64748], "mapped", [1603, 1605]], [[64749, 64749], "mapped", [1604, 1605]], [[64750, 64750], "mapped", [1606, 1605]], [[64751, 64751], "mapped", [1606, 1607]], [[64752, 64752], "mapped", [1610, 1605]], [[64753, 64753], "mapped", [1610, 1607]], [[64754, 64754], "mapped", [1600, 1614, 1617]], [[64755, 64755], "mapped", [1600, 1615, 1617]], [[64756, 64756], "mapped", [1600, 1616, 1617]], [[64757, 64757], "mapped", [1591, 1609]], [[64758, 64758], "mapped", [1591, 1610]], [[64759, 64759], "mapped", [1593, 1609]], [[64760, 64760], "mapped", [1593, 1610]], [[64761, 64761], "mapped", [1594, 1609]], [[64762, 64762], "mapped", [1594, 1610]], [[64763, 64763], "mapped", [1587, 1609]], [[64764, 64764], "mapped", [1587, 1610]], [[64765, 64765], "mapped", [1588, 1609]], [[64766, 64766], "mapped", [1588, 1610]], [[64767, 64767], "mapped", [1581, 1609]], [[64768, 64768], "mapped", [1581, 1610]], [[64769, 64769], "mapped", [1580, 1609]], [[64770, 64770], "mapped", [1580, 1610]], [[64771, 64771], "mapped", [1582, 1609]], [[64772, 64772], "mapped", [1582, 1610]], [[64773, 64773], "mapped", [1589, 1609]], [[64774, 64774], "mapped", [1589, 1610]], [[64775, 64775], "mapped", [1590, 1609]], [[64776, 64776], "mapped", [1590, 1610]], [[64777, 64777], "mapped", [1588, 1580]], [[64778, 64778], "mapped", [1588, 1581]], [[64779, 64779], "mapped", [1588, 1582]], [[64780, 64780], "mapped", [1588, 1605]], [[64781, 64781], "mapped", [1588, 1585]], [[64782, 64782], "mapped", [1587, 1585]], [[64783, 64783], "mapped", [1589, 1585]], [[64784, 64784], "mapped", [1590, 1585]], [[64785, 64785], "mapped", [1591, 1609]], [[64786, 64786], "mapped", [1591, 1610]], [[64787, 64787], "mapped", [1593, 1609]], [[64788, 64788], "mapped", [1593, 1610]], [[64789, 64789], "mapped", [1594, 1609]], [[64790, 64790], "mapped", [1594, 1610]], [[64791, 64791], "mapped", [1587, 1609]], [[64792, 64792], "mapped", [1587, 1610]], [[64793, 64793], "mapped", [1588, 1609]], [[64794, 64794], "mapped", [1588, 1610]], [[64795, 64795], "mapped", [1581, 1609]], [[64796, 64796], "mapped", [1581, 1610]], [[64797, 64797], "mapped", [1580, 1609]], [[64798, 64798], "mapped", [1580, 1610]], [[64799, 64799], "mapped", [1582, 1609]], [[64800, 64800], "mapped", [1582, 1610]], [[64801, 64801], "mapped", [1589, 1609]], [[64802, 64802], "mapped", [1589, 1610]], [[64803, 64803], "mapped", [1590, 1609]], [[64804, 64804], "mapped", [1590, 1610]], [[64805, 64805], "mapped", [1588, 1580]], [[64806, 64806], "mapped", [1588, 1581]], [[64807, 64807], "mapped", [1588, 1582]], [[64808, 64808], "mapped", [1588, 1605]], [[64809, 64809], "mapped", [1588, 1585]], [[64810, 64810], "mapped", [1587, 1585]], [[64811, 64811], "mapped", [1589, 1585]], [[64812, 64812], "mapped", [1590, 1585]], [[64813, 64813], "mapped", [1588, 1580]], [[64814, 64814], "mapped", [1588, 1581]], [[64815, 64815], "mapped", [1588, 1582]], [[64816, 64816], "mapped", [1588, 1605]], [[64817, 64817], "mapped", [1587, 1607]], [[64818, 64818], "mapped", [1588, 1607]], [[64819, 64819], "mapped", [1591, 1605]], [[64820, 64820], "mapped", [1587, 1580]], [[64821, 64821], "mapped", [1587, 1581]], [[64822, 64822], "mapped", [1587, 1582]], [[64823, 64823], "mapped", [1588, 1580]], [[64824, 64824], "mapped", [1588, 1581]], [[64825, 64825], "mapped", [1588, 1582]], [[64826, 64826], "mapped", [1591, 1605]], [[64827, 64827], "mapped", [1592, 1605]], [[64828, 64829], "mapped", [1575, 1611]], [[64830, 64831], "valid", [], "NV8"], [[64832, 64847], "disallowed"], [[64848, 64848], "mapped", [1578, 1580, 1605]], [[64849, 64850], "mapped", [1578, 1581, 1580]], [[64851, 64851], "mapped", [1578, 1581, 1605]], [[64852, 64852], "mapped", [1578, 1582, 1605]], [[64853, 64853], "mapped", [1578, 1605, 1580]], [[64854, 64854], "mapped", [1578, 1605, 1581]], [[64855, 64855], "mapped", [1578, 1605, 1582]], [[64856, 64857], "mapped", [1580, 1605, 1581]], [[64858, 64858], "mapped", [1581, 1605, 1610]], [[64859, 64859], "mapped", [1581, 1605, 1609]], [[64860, 64860], "mapped", [1587, 1581, 1580]], [[64861, 64861], "mapped", [1587, 1580, 1581]], [[64862, 64862], "mapped", [1587, 1580, 1609]], [[64863, 64864], "mapped", [1587, 1605, 1581]], [[64865, 64865], "mapped", [1587, 1605, 1580]], [[64866, 64867], "mapped", [1587, 1605, 1605]], [[64868, 64869], "mapped", [1589, 1581, 1581]], [[64870, 64870], "mapped", [1589, 1605, 1605]], [[64871, 64872], "mapped", [1588, 1581, 1605]], [[64873, 64873], "mapped", [1588, 1580, 1610]], [[64874, 64875], "mapped", [1588, 1605, 1582]], [[64876, 64877], "mapped", [1588, 1605, 1605]], [[64878, 64878], "mapped", [1590, 1581, 1609]], [[64879, 64880], "mapped", [1590, 1582, 1605]], [[64881, 64882], "mapped", [1591, 1605, 1581]], [[64883, 64883], "mapped", [1591, 1605, 1605]], [[64884, 64884], "mapped", [1591, 1605, 1610]], [[64885, 64885], "mapped", [1593, 1580, 1605]], [[64886, 64887], "mapped", [1593, 1605, 1605]], [[64888, 64888], "mapped", [1593, 1605, 1609]], [[64889, 64889], "mapped", [1594, 1605, 1605]], [[64890, 64890], "mapped", [1594, 1605, 1610]], [[64891, 64891], "mapped", [1594, 1605, 1609]], [[64892, 64893], "mapped", [1601, 1582, 1605]], [[64894, 64894], "mapped", [1602, 1605, 1581]], [[64895, 64895], "mapped", [1602, 1605, 1605]], [[64896, 64896], "mapped", [1604, 1581, 1605]], [[64897, 64897], "mapped", [1604, 1581, 1610]], [[64898, 64898], "mapped", [1604, 1581, 1609]], [[64899, 64900], "mapped", [1604, 1580, 1580]], [[64901, 64902], "mapped", [1604, 1582, 1605]], [[64903, 64904], "mapped", [1604, 1605, 1581]], [[64905, 64905], "mapped", [1605, 1581, 1580]], [[64906, 64906], "mapped", [1605, 1581, 1605]], [[64907, 64907], "mapped", [1605, 1581, 1610]], [[64908, 64908], "mapped", [1605, 1580, 1581]], [[64909, 64909], "mapped", [1605, 1580, 1605]], [[64910, 64910], "mapped", [1605, 1582, 1580]], [[64911, 64911], "mapped", [1605, 1582, 1605]], [[64912, 64913], "disallowed"], [[64914, 64914], "mapped", [1605, 1580, 1582]], [[64915, 64915], "mapped", [1607, 1605, 1580]], [[64916, 64916], "mapped", [1607, 1605, 1605]], [[64917, 64917], "mapped", [1606, 1581, 1605]], [[64918, 64918], "mapped", [1606, 1581, 1609]], [[64919, 64920], "mapped", [1606, 1580, 1605]], [[64921, 64921], "mapped", [1606, 1580, 1609]], [[64922, 64922], "mapped", [1606, 1605, 1610]], [[64923, 64923], "mapped", [1606, 1605, 1609]], [[64924, 64925], "mapped", [1610, 1605, 1605]], [[64926, 64926], "mapped", [1576, 1582, 1610]], [[64927, 64927], "mapped", [1578, 1580, 1610]], [[64928, 64928], "mapped", [1578, 1580, 1609]], [[64929, 64929], "mapped", [1578, 1582, 1610]], [[64930, 64930], "mapped", [1578, 1582, 1609]], [[64931, 64931], "mapped", [1578, 1605, 1610]], [[64932, 64932], "mapped", [1578, 1605, 1609]], [[64933, 64933], "mapped", [1580, 1605, 1610]], [[64934, 64934], "mapped", [1580, 1581, 1609]], [[64935, 64935], "mapped", [1580, 1605, 1609]], [[64936, 64936], "mapped", [1587, 1582, 1609]], [[64937, 64937], "mapped", [1589, 1581, 1610]], [[64938, 64938], "mapped", [1588, 1581, 1610]], [[64939, 64939], "mapped", [1590, 1581, 1610]], [[64940, 64940], "mapped", [1604, 1580, 1610]], [[64941, 64941], "mapped", [1604, 1605, 1610]], [[64942, 64942], "mapped", [1610, 1581, 1610]], [[64943, 64943], "mapped", [1610, 1580, 1610]], [[64944, 64944], "mapped", [1610, 1605, 1610]], [[64945, 64945], "mapped", [1605, 1605, 1610]], [[64946, 64946], "mapped", [1602, 1605, 1610]], [[64947, 64947], "mapped", [1606, 1581, 1610]], [[64948, 64948], "mapped", [1602, 1605, 1581]], [[64949, 64949], "mapped", [1604, 1581, 1605]], [[64950, 64950], "mapped", [1593, 1605, 1610]], [[64951, 64951], "mapped", [1603, 1605, 1610]], [[64952, 64952], "mapped", [1606, 1580, 1581]], [[64953, 64953], "mapped", [1605, 1582, 1610]], [[64954, 64954], "mapped", [1604, 1580, 1605]], [[64955, 64955], "mapped", [1603, 1605, 1605]], [[64956, 64956], "mapped", [1604, 1580, 1605]], [[64957, 64957], "mapped", [1606, 1580, 1581]], [[64958, 64958], "mapped", [1580, 1581, 1610]], [[64959, 64959], "mapped", [1581, 1580, 1610]], [[64960, 64960], "mapped", [1605, 1580, 1610]], [[64961, 64961], "mapped", [1601, 1605, 1610]], [[64962, 64962], "mapped", [1576, 1581, 1610]], [[64963, 64963], "mapped", [1603, 1605, 1605]], [[64964, 64964], "mapped", [1593, 1580, 1605]], [[64965, 64965], "mapped", [1589, 1605, 1605]], [[64966, 64966], "mapped", [1587, 1582, 1610]], [[64967, 64967], "mapped", [1606, 1580, 1610]], [[64968, 64975], "disallowed"], [[64976, 65007], "disallowed"], [[65008, 65008], "mapped", [1589, 1604, 1746]], [[65009, 65009], "mapped", [1602, 1604, 1746]], [[65010, 65010], "mapped", [1575, 1604, 1604, 1607]], [[65011, 65011], "mapped", [1575, 1603, 1576, 1585]], [[65012, 65012], "mapped", [1605, 1581, 1605, 1583]], [[65013, 65013], "mapped", [1589, 1604, 1593, 1605]], [[65014, 65014], "mapped", [1585, 1587, 1608, 1604]], [[65015, 65015], "mapped", [1593, 1604, 1610, 1607]], [[65016, 65016], "mapped", [1608, 1587, 1604, 1605]], [[65017, 65017], "mapped", [1589, 1604, 1609]], [[65018, 65018], "disallowed_STD3_mapped", [1589, 1604, 1609, 32, 1575, 1604, 1604, 1607, 32, 1593, 1604, 1610, 1607, 32, 1608, 1587, 1604, 1605]], [[65019, 65019], "disallowed_STD3_mapped", [1580, 1604, 32, 1580, 1604, 1575, 1604, 1607]], [[65020, 65020], "mapped", [1585, 1740, 1575, 1604]], [[65021, 65021], "valid", [], "NV8"], [[65022, 65023], "disallowed"], [[65024, 65039], "ignored"], [[65040, 65040], "disallowed_STD3_mapped", [44]], [[65041, 65041], "mapped", [12289]], [[65042, 65042], "disallowed"], [[65043, 65043], "disallowed_STD3_mapped", [58]], [[65044, 65044], "disallowed_STD3_mapped", [59]], [[65045, 65045], "disallowed_STD3_mapped", [33]], [[65046, 65046], "disallowed_STD3_mapped", [63]], [[65047, 65047], "mapped", [12310]], [[65048, 65048], "mapped", [12311]], [[65049, 65049], "disallowed"], [[65050, 65055], "disallowed"], [[65056, 65059], "valid"], [[65060, 65062], "valid"], [[65063, 65069], "valid"], [[65070, 65071], "valid"], [[65072, 65072], "disallowed"], [[65073, 65073], "mapped", [8212]], [[65074, 65074], "mapped", [8211]], [[65075, 65076], "disallowed_STD3_mapped", [95]], [[65077, 65077], "disallowed_STD3_mapped", [40]], [[65078, 65078], "disallowed_STD3_mapped", [41]], [[65079, 65079], "disallowed_STD3_mapped", [123]], [[65080, 65080], "disallowed_STD3_mapped", [125]], [[65081, 65081], "mapped", [12308]], [[65082, 65082], "mapped", [12309]], [[65083, 65083], "mapped", [12304]], [[65084, 65084], "mapped", [12305]], [[65085, 65085], "mapped", [12298]], [[65086, 65086], "mapped", [12299]], [[65087, 65087], "mapped", [12296]], [[65088, 65088], "mapped", [12297]], [[65089, 65089], "mapped", [12300]], [[65090, 65090], "mapped", [12301]], [[65091, 65091], "mapped", [12302]], [[65092, 65092], "mapped", [12303]], [[65093, 65094], "valid", [], "NV8"], [[65095, 65095], "disallowed_STD3_mapped", [91]], [[65096, 65096], "disallowed_STD3_mapped", [93]], [[65097, 65100], "disallowed_STD3_mapped", [32, 773]], [[65101, 65103], "disallowed_STD3_mapped", [95]], [[65104, 65104], "disallowed_STD3_mapped", [44]], [[65105, 65105], "mapped", [12289]], [[65106, 65106], "disallowed"], [[65107, 65107], "disallowed"], [[65108, 65108], "disallowed_STD3_mapped", [59]], [[65109, 65109], "disallowed_STD3_mapped", [58]], [[65110, 65110], "disallowed_STD3_mapped", [63]], [[65111, 65111], "disallowed_STD3_mapped", [33]], [[65112, 65112], "mapped", [8212]], [[65113, 65113], "disallowed_STD3_mapped", [40]], [[65114, 65114], "disallowed_STD3_mapped", [41]], [[65115, 65115], "disallowed_STD3_mapped", [123]], [[65116, 65116], "disallowed_STD3_mapped", [125]], [[65117, 65117], "mapped", [12308]], [[65118, 65118], "mapped", [12309]], [[65119, 65119], "disallowed_STD3_mapped", [35]], [[65120, 65120], "disallowed_STD3_mapped", [38]], [[65121, 65121], "disallowed_STD3_mapped", [42]], [[65122, 65122], "disallowed_STD3_mapped", [43]], [[65123, 65123], "mapped", [45]], [[65124, 65124], "disallowed_STD3_mapped", [60]], [[65125, 65125], "disallowed_STD3_mapped", [62]], [[65126, 65126], "disallowed_STD3_mapped", [61]], [[65127, 65127], "disallowed"], [[65128, 65128], "disallowed_STD3_mapped", [92]], [[65129, 65129], "disallowed_STD3_mapped", [36]], [[65130, 65130], "disallowed_STD3_mapped", [37]], [[65131, 65131], "disallowed_STD3_mapped", [64]], [[65132, 65135], "disallowed"], [[65136, 65136], "disallowed_STD3_mapped", [32, 1611]], [[65137, 65137], "mapped", [1600, 1611]], [[65138, 65138], "disallowed_STD3_mapped", [32, 1612]], [[65139, 65139], "valid"], [[65140, 65140], "disallowed_STD3_mapped", [32, 1613]], [[65141, 65141], "disallowed"], [[65142, 65142], "disallowed_STD3_mapped", [32, 1614]], [[65143, 65143], "mapped", [1600, 1614]], [[65144, 65144], "disallowed_STD3_mapped", [32, 1615]], [[65145, 65145], "mapped", [1600, 1615]], [[65146, 65146], "disallowed_STD3_mapped", [32, 1616]], [[65147, 65147], "mapped", [1600, 1616]], [[65148, 65148], "disallowed_STD3_mapped", [32, 1617]], [[65149, 65149], "mapped", [1600, 1617]], [[65150, 65150], "disallowed_STD3_mapped", [32, 1618]], [[65151, 65151], "mapped", [1600, 1618]], [[65152, 65152], "mapped", [1569]], [[65153, 65154], "mapped", [1570]], [[65155, 65156], "mapped", [1571]], [[65157, 65158], "mapped", [1572]], [[65159, 65160], "mapped", [1573]], [[65161, 65164], "mapped", [1574]], [[65165, 65166], "mapped", [1575]], [[65167, 65170], "mapped", [1576]], [[65171, 65172], "mapped", [1577]], [[65173, 65176], "mapped", [1578]], [[65177, 65180], "mapped", [1579]], [[65181, 65184], "mapped", [1580]], [[65185, 65188], "mapped", [1581]], [[65189, 65192], "mapped", [1582]], [[65193, 65194], "mapped", [1583]], [[65195, 65196], "mapped", [1584]], [[65197, 65198], "mapped", [1585]], [[65199, 65200], "mapped", [1586]], [[65201, 65204], "mapped", [1587]], [[65205, 65208], "mapped", [1588]], [[65209, 65212], "mapped", [1589]], [[65213, 65216], "mapped", [1590]], [[65217, 65220], "mapped", [1591]], [[65221, 65224], "mapped", [1592]], [[65225, 65228], "mapped", [1593]], [[65229, 65232], "mapped", [1594]], [[65233, 65236], "mapped", [1601]], [[65237, 65240], "mapped", [1602]], [[65241, 65244], "mapped", [1603]], [[65245, 65248], "mapped", [1604]], [[65249, 65252], "mapped", [1605]], [[65253, 65256], "mapped", [1606]], [[65257, 65260], "mapped", [1607]], [[65261, 65262], "mapped", [1608]], [[65263, 65264], "mapped", [1609]], [[65265, 65268], "mapped", [1610]], [[65269, 65270], "mapped", [1604, 1570]], [[65271, 65272], "mapped", [1604, 1571]], [[65273, 65274], "mapped", [1604, 1573]], [[65275, 65276], "mapped", [1604, 1575]], [[65277, 65278], "disallowed"], [[65279, 65279], "ignored"], [[65280, 65280], "disallowed"], [[65281, 65281], "disallowed_STD3_mapped", [33]], [[65282, 65282], "disallowed_STD3_mapped", [34]], [[65283, 65283], "disallowed_STD3_mapped", [35]], [[65284, 65284], "disallowed_STD3_mapped", [36]], [[65285, 65285], "disallowed_STD3_mapped", [37]], [[65286, 65286], "disallowed_STD3_mapped", [38]], [[65287, 65287], "disallowed_STD3_mapped", [39]], [[65288, 65288], "disallowed_STD3_mapped", [40]], [[65289, 65289], "disallowed_STD3_mapped", [41]], [[65290, 65290], "disallowed_STD3_mapped", [42]], [[65291, 65291], "disallowed_STD3_mapped", [43]], [[65292, 65292], "disallowed_STD3_mapped", [44]], [[65293, 65293], "mapped", [45]], [[65294, 65294], "mapped", [46]], [[65295, 65295], "disallowed_STD3_mapped", [47]], [[65296, 65296], "mapped", [48]], [[65297, 65297], "mapped", [49]], [[65298, 65298], "mapped", [50]], [[65299, 65299], "mapped", [51]], [[65300, 65300], "mapped", [52]], [[65301, 65301], "mapped", [53]], [[65302, 65302], "mapped", [54]], [[65303, 65303], "mapped", [55]], [[65304, 65304], "mapped", [56]], [[65305, 65305], "mapped", [57]], [[65306, 65306], "disallowed_STD3_mapped", [58]], [[65307, 65307], "disallowed_STD3_mapped", [59]], [[65308, 65308], "disallowed_STD3_mapped", [60]], [[65309, 65309], "disallowed_STD3_mapped", [61]], [[65310, 65310], "disallowed_STD3_mapped", [62]], [[65311, 65311], "disallowed_STD3_mapped", [63]], [[65312, 65312], "disallowed_STD3_mapped", [64]], [[65313, 65313], "mapped", [97]], [[65314, 65314], "mapped", [98]], [[65315, 65315], "mapped", [99]], [[65316, 65316], "mapped", [100]], [[65317, 65317], "mapped", [101]], [[65318, 65318], "mapped", [102]], [[65319, 65319], "mapped", [103]], [[65320, 65320], "mapped", [104]], [[65321, 65321], "mapped", [105]], [[65322, 65322], "mapped", [106]], [[65323, 65323], "mapped", [107]], [[65324, 65324], "mapped", [108]], [[65325, 65325], "mapped", [109]], [[65326, 65326], "mapped", [110]], [[65327, 65327], "mapped", [111]], [[65328, 65328], "mapped", [112]], [[65329, 65329], "mapped", [113]], [[65330, 65330], "mapped", [114]], [[65331, 65331], "mapped", [115]], [[65332, 65332], "mapped", [116]], [[65333, 65333], "mapped", [117]], [[65334, 65334], "mapped", [118]], [[65335, 65335], "mapped", [119]], [[65336, 65336], "mapped", [120]], [[65337, 65337], "mapped", [121]], [[65338, 65338], "mapped", [122]], [[65339, 65339], "disallowed_STD3_mapped", [91]], [[65340, 65340], "disallowed_STD3_mapped", [92]], [[65341, 65341], "disallowed_STD3_mapped", [93]], [[65342, 65342], "disallowed_STD3_mapped", [94]], [[65343, 65343], "disallowed_STD3_mapped", [95]], [[65344, 65344], "disallowed_STD3_mapped", [96]], [[65345, 65345], "mapped", [97]], [[65346, 65346], "mapped", [98]], [[65347, 65347], "mapped", [99]], [[65348, 65348], "mapped", [100]], [[65349, 65349], "mapped", [101]], [[65350, 65350], "mapped", [102]], [[65351, 65351], "mapped", [103]], [[65352, 65352], "mapped", [104]], [[65353, 65353], "mapped", [105]], [[65354, 65354], "mapped", [106]], [[65355, 65355], "mapped", [107]], [[65356, 65356], "mapped", [108]], [[65357, 65357], "mapped", [109]], [[65358, 65358], "mapped", [110]], [[65359, 65359], "mapped", [111]], [[65360, 65360], "mapped", [112]], [[65361, 65361], "mapped", [113]], [[65362, 65362], "mapped", [114]], [[65363, 65363], "mapped", [115]], [[65364, 65364], "mapped", [116]], [[65365, 65365], "mapped", [117]], [[65366, 65366], "mapped", [118]], [[65367, 65367], "mapped", [119]], [[65368, 65368], "mapped", [120]], [[65369, 65369], "mapped", [121]], [[65370, 65370], "mapped", [122]], [[65371, 65371], "disallowed_STD3_mapped", [123]], [[65372, 65372], "disallowed_STD3_mapped", [124]], [[65373, 65373], "disallowed_STD3_mapped", [125]], [[65374, 65374], "disallowed_STD3_mapped", [126]], [[65375, 65375], "mapped", [10629]], [[65376, 65376], "mapped", [10630]], [[65377, 65377], "mapped", [46]], [[65378, 65378], "mapped", [12300]], [[65379, 65379], "mapped", [12301]], [[65380, 65380], "mapped", [12289]], [[65381, 65381], "mapped", [12539]], [[65382, 65382], "mapped", [12530]], [[65383, 65383], "mapped", [12449]], [[65384, 65384], "mapped", [12451]], [[65385, 65385], "mapped", [12453]], [[65386, 65386], "mapped", [12455]], [[65387, 65387], "mapped", [12457]], [[65388, 65388], "mapped", [12515]], [[65389, 65389], "mapped", [12517]], [[65390, 65390], "mapped", [12519]], [[65391, 65391], "mapped", [12483]], [[65392, 65392], "mapped", [12540]], [[65393, 65393], "mapped", [12450]], [[65394, 65394], "mapped", [12452]], [[65395, 65395], "mapped", [12454]], [[65396, 65396], "mapped", [12456]], [[65397, 65397], "mapped", [12458]], [[65398, 65398], "mapped", [12459]], [[65399, 65399], "mapped", [12461]], [[65400, 65400], "mapped", [12463]], [[65401, 65401], "mapped", [12465]], [[65402, 65402], "mapped", [12467]], [[65403, 65403], "mapped", [12469]], [[65404, 65404], "mapped", [12471]], [[65405, 65405], "mapped", [12473]], [[65406, 65406], "mapped", [12475]], [[65407, 65407], "mapped", [12477]], [[65408, 65408], "mapped", [12479]], [[65409, 65409], "mapped", [12481]], [[65410, 65410], "mapped", [12484]], [[65411, 65411], "mapped", [12486]], [[65412, 65412], "mapped", [12488]], [[65413, 65413], "mapped", [12490]], [[65414, 65414], "mapped", [12491]], [[65415, 65415], "mapped", [12492]], [[65416, 65416], "mapped", [12493]], [[65417, 65417], "mapped", [12494]], [[65418, 65418], "mapped", [12495]], [[65419, 65419], "mapped", [12498]], [[65420, 65420], "mapped", [12501]], [[65421, 65421], "mapped", [12504]], [[65422, 65422], "mapped", [12507]], [[65423, 65423], "mapped", [12510]], [[65424, 65424], "mapped", [12511]], [[65425, 65425], "mapped", [12512]], [[65426, 65426], "mapped", [12513]], [[65427, 65427], "mapped", [12514]], [[65428, 65428], "mapped", [12516]], [[65429, 65429], "mapped", [12518]], [[65430, 65430], "mapped", [12520]], [[65431, 65431], "mapped", [12521]], [[65432, 65432], "mapped", [12522]], [[65433, 65433], "mapped", [12523]], [[65434, 65434], "mapped", [12524]], [[65435, 65435], "mapped", [12525]], [[65436, 65436], "mapped", [12527]], [[65437, 65437], "mapped", [12531]], [[65438, 65438], "mapped", [12441]], [[65439, 65439], "mapped", [12442]], [[65440, 65440], "disallowed"], [[65441, 65441], "mapped", [4352]], [[65442, 65442], "mapped", [4353]], [[65443, 65443], "mapped", [4522]], [[65444, 65444], "mapped", [4354]], [[65445, 65445], "mapped", [4524]], [[65446, 65446], "mapped", [4525]], [[65447, 65447], "mapped", [4355]], [[65448, 65448], "mapped", [4356]], [[65449, 65449], "mapped", [4357]], [[65450, 65450], "mapped", [4528]], [[65451, 65451], "mapped", [4529]], [[65452, 65452], "mapped", [4530]], [[65453, 65453], "mapped", [4531]], [[65454, 65454], "mapped", [4532]], [[65455, 65455], "mapped", [4533]], [[65456, 65456], "mapped", [4378]], [[65457, 65457], "mapped", [4358]], [[65458, 65458], "mapped", [4359]], [[65459, 65459], "mapped", [4360]], [[65460, 65460], "mapped", [4385]], [[65461, 65461], "mapped", [4361]], [[65462, 65462], "mapped", [4362]], [[65463, 65463], "mapped", [4363]], [[65464, 65464], "mapped", [4364]], [[65465, 65465], "mapped", [4365]], [[65466, 65466], "mapped", [4366]], [[65467, 65467], "mapped", [4367]], [[65468, 65468], "mapped", [4368]], [[65469, 65469], "mapped", [4369]], [[65470, 65470], "mapped", [4370]], [[65471, 65473], "disallowed"], [[65474, 65474], "mapped", [4449]], [[65475, 65475], "mapped", [4450]], [[65476, 65476], "mapped", [4451]], [[65477, 65477], "mapped", [4452]], [[65478, 65478], "mapped", [4453]], [[65479, 65479], "mapped", [4454]], [[65480, 65481], "disallowed"], [[65482, 65482], "mapped", [4455]], [[65483, 65483], "mapped", [4456]], [[65484, 65484], "mapped", [4457]], [[65485, 65485], "mapped", [4458]], [[65486, 65486], "mapped", [4459]], [[65487, 65487], "mapped", [4460]], [[65488, 65489], "disallowed"], [[65490, 65490], "mapped", [4461]], [[65491, 65491], "mapped", [4462]], [[65492, 65492], "mapped", [4463]], [[65493, 65493], "mapped", [4464]], [[65494, 65494], "mapped", [4465]], [[65495, 65495], "mapped", [4466]], [[65496, 65497], "disallowed"], [[65498, 65498], "mapped", [4467]], [[65499, 65499], "mapped", [4468]], [[65500, 65500], "mapped", [4469]], [[65501, 65503], "disallowed"], [[65504, 65504], "mapped", [162]], [[65505, 65505], "mapped", [163]], [[65506, 65506], "mapped", [172]], [[65507, 65507], "disallowed_STD3_mapped", [32, 772]], [[65508, 65508], "mapped", [166]], [[65509, 65509], "mapped", [165]], [[65510, 65510], "mapped", [8361]], [[65511, 65511], "disallowed"], [[65512, 65512], "mapped", [9474]], [[65513, 65513], "mapped", [8592]], [[65514, 65514], "mapped", [8593]], [[65515, 65515], "mapped", [8594]], [[65516, 65516], "mapped", [8595]], [[65517, 65517], "mapped", [9632]], [[65518, 65518], "mapped", [9675]], [[65519, 65528], "disallowed"], [[65529, 65531], "disallowed"], [[65532, 65532], "disallowed"], [[65533, 65533], "disallowed"], [[65534, 65535], "disallowed"], [[65536, 65547], "valid"], [[65548, 65548], "disallowed"], [[65549, 65574], "valid"], [[65575, 65575], "disallowed"], [[65576, 65594], "valid"], [[65595, 65595], "disallowed"], [[65596, 65597], "valid"], [[65598, 65598], "disallowed"], [[65599, 65613], "valid"], [[65614, 65615], "disallowed"], [[65616, 65629], "valid"], [[65630, 65663], "disallowed"], [[65664, 65786], "valid"], [[65787, 65791], "disallowed"], [[65792, 65794], "valid", [], "NV8"], [[65795, 65798], "disallowed"], [[65799, 65843], "valid", [], "NV8"], [[65844, 65846], "disallowed"], [[65847, 65855], "valid", [], "NV8"], [[65856, 65930], "valid", [], "NV8"], [[65931, 65932], "valid", [], "NV8"], [[65933, 65935], "disallowed"], [[65936, 65947], "valid", [], "NV8"], [[65948, 65951], "disallowed"], [[65952, 65952], "valid", [], "NV8"], [[65953, 65999], "disallowed"], [[66e3, 66044], "valid", [], "NV8"], [[66045, 66045], "valid"], [[66046, 66175], "disallowed"], [[66176, 66204], "valid"], [[66205, 66207], "disallowed"], [[66208, 66256], "valid"], [[66257, 66271], "disallowed"], [[66272, 66272], "valid"], [[66273, 66299], "valid", [], "NV8"], [[66300, 66303], "disallowed"], [[66304, 66334], "valid"], [[66335, 66335], "valid"], [[66336, 66339], "valid", [], "NV8"], [[66340, 66351], "disallowed"], [[66352, 66368], "valid"], [[66369, 66369], "valid", [], "NV8"], [[66370, 66377], "valid"], [[66378, 66378], "valid", [], "NV8"], [[66379, 66383], "disallowed"], [[66384, 66426], "valid"], [[66427, 66431], "disallowed"], [[66432, 66461], "valid"], [[66462, 66462], "disallowed"], [[66463, 66463], "valid", [], "NV8"], [[66464, 66499], "valid"], [[66500, 66503], "disallowed"], [[66504, 66511], "valid"], [[66512, 66517], "valid", [], "NV8"], [[66518, 66559], "disallowed"], [[66560, 66560], "mapped", [66600]], [[66561, 66561], "mapped", [66601]], [[66562, 66562], "mapped", [66602]], [[66563, 66563], "mapped", [66603]], [[66564, 66564], "mapped", [66604]], [[66565, 66565], "mapped", [66605]], [[66566, 66566], "mapped", [66606]], [[66567, 66567], "mapped", [66607]], [[66568, 66568], "mapped", [66608]], [[66569, 66569], "mapped", [66609]], [[66570, 66570], "mapped", [66610]], [[66571, 66571], "mapped", [66611]], [[66572, 66572], "mapped", [66612]], [[66573, 66573], "mapped", [66613]], [[66574, 66574], "mapped", [66614]], [[66575, 66575], "mapped", [66615]], [[66576, 66576], "mapped", [66616]], [[66577, 66577], "mapped", [66617]], [[66578, 66578], "mapped", [66618]], [[66579, 66579], "mapped", [66619]], [[66580, 66580], "mapped", [66620]], [[66581, 66581], "mapped", [66621]], [[66582, 66582], "mapped", [66622]], [[66583, 66583], "mapped", [66623]], [[66584, 66584], "mapped", [66624]], [[66585, 66585], "mapped", [66625]], [[66586, 66586], "mapped", [66626]], [[66587, 66587], "mapped", [66627]], [[66588, 66588], "mapped", [66628]], [[66589, 66589], "mapped", [66629]], [[66590, 66590], "mapped", [66630]], [[66591, 66591], "mapped", [66631]], [[66592, 66592], "mapped", [66632]], [[66593, 66593], "mapped", [66633]], [[66594, 66594], "mapped", [66634]], [[66595, 66595], "mapped", [66635]], [[66596, 66596], "mapped", [66636]], [[66597, 66597], "mapped", [66637]], [[66598, 66598], "mapped", [66638]], [[66599, 66599], "mapped", [66639]], [[66600, 66637], "valid"], [[66638, 66717], "valid"], [[66718, 66719], "disallowed"], [[66720, 66729], "valid"], [[66730, 66815], "disallowed"], [[66816, 66855], "valid"], [[66856, 66863], "disallowed"], [[66864, 66915], "valid"], [[66916, 66926], "disallowed"], [[66927, 66927], "valid", [], "NV8"], [[66928, 67071], "disallowed"], [[67072, 67382], "valid"], [[67383, 67391], "disallowed"], [[67392, 67413], "valid"], [[67414, 67423], "disallowed"], [[67424, 67431], "valid"], [[67432, 67583], "disallowed"], [[67584, 67589], "valid"], [[67590, 67591], "disallowed"], [[67592, 67592], "valid"], [[67593, 67593], "disallowed"], [[67594, 67637], "valid"], [[67638, 67638], "disallowed"], [[67639, 67640], "valid"], [[67641, 67643], "disallowed"], [[67644, 67644], "valid"], [[67645, 67646], "disallowed"], [[67647, 67647], "valid"], [[67648, 67669], "valid"], [[67670, 67670], "disallowed"], [[67671, 67679], "valid", [], "NV8"], [[67680, 67702], "valid"], [[67703, 67711], "valid", [], "NV8"], [[67712, 67742], "valid"], [[67743, 67750], "disallowed"], [[67751, 67759], "valid", [], "NV8"], [[67760, 67807], "disallowed"], [[67808, 67826], "valid"], [[67827, 67827], "disallowed"], [[67828, 67829], "valid"], [[67830, 67834], "disallowed"], [[67835, 67839], "valid", [], "NV8"], [[67840, 67861], "valid"], [[67862, 67865], "valid", [], "NV8"], [[67866, 67867], "valid", [], "NV8"], [[67868, 67870], "disallowed"], [[67871, 67871], "valid", [], "NV8"], [[67872, 67897], "valid"], [[67898, 67902], "disallowed"], [[67903, 67903], "valid", [], "NV8"], [[67904, 67967], "disallowed"], [[67968, 68023], "valid"], [[68024, 68027], "disallowed"], [[68028, 68029], "valid", [], "NV8"], [[68030, 68031], "valid"], [[68032, 68047], "valid", [], "NV8"], [[68048, 68049], "disallowed"], [[68050, 68095], "valid", [], "NV8"], [[68096, 68099], "valid"], [[68100, 68100], "disallowed"], [[68101, 68102], "valid"], [[68103, 68107], "disallowed"], [[68108, 68115], "valid"], [[68116, 68116], "disallowed"], [[68117, 68119], "valid"], [[68120, 68120], "disallowed"], [[68121, 68147], "valid"], [[68148, 68151], "disallowed"], [[68152, 68154], "valid"], [[68155, 68158], "disallowed"], [[68159, 68159], "valid"], [[68160, 68167], "valid", [], "NV8"], [[68168, 68175], "disallowed"], [[68176, 68184], "valid", [], "NV8"], [[68185, 68191], "disallowed"], [[68192, 68220], "valid"], [[68221, 68223], "valid", [], "NV8"], [[68224, 68252], "valid"], [[68253, 68255], "valid", [], "NV8"], [[68256, 68287], "disallowed"], [[68288, 68295], "valid"], [[68296, 68296], "valid", [], "NV8"], [[68297, 68326], "valid"], [[68327, 68330], "disallowed"], [[68331, 68342], "valid", [], "NV8"], [[68343, 68351], "disallowed"], [[68352, 68405], "valid"], [[68406, 68408], "disallowed"], [[68409, 68415], "valid", [], "NV8"], [[68416, 68437], "valid"], [[68438, 68439], "disallowed"], [[68440, 68447], "valid", [], "NV8"], [[68448, 68466], "valid"], [[68467, 68471], "disallowed"], [[68472, 68479], "valid", [], "NV8"], [[68480, 68497], "valid"], [[68498, 68504], "disallowed"], [[68505, 68508], "valid", [], "NV8"], [[68509, 68520], "disallowed"], [[68521, 68527], "valid", [], "NV8"], [[68528, 68607], "disallowed"], [[68608, 68680], "valid"], [[68681, 68735], "disallowed"], [[68736, 68736], "mapped", [68800]], [[68737, 68737], "mapped", [68801]], [[68738, 68738], "mapped", [68802]], [[68739, 68739], "mapped", [68803]], [[68740, 68740], "mapped", [68804]], [[68741, 68741], "mapped", [68805]], [[68742, 68742], "mapped", [68806]], [[68743, 68743], "mapped", [68807]], [[68744, 68744], "mapped", [68808]], [[68745, 68745], "mapped", [68809]], [[68746, 68746], "mapped", [68810]], [[68747, 68747], "mapped", [68811]], [[68748, 68748], "mapped", [68812]], [[68749, 68749], "mapped", [68813]], [[68750, 68750], "mapped", [68814]], [[68751, 68751], "mapped", [68815]], [[68752, 68752], "mapped", [68816]], [[68753, 68753], "mapped", [68817]], [[68754, 68754], "mapped", [68818]], [[68755, 68755], "mapped", [68819]], [[68756, 68756], "mapped", [68820]], [[68757, 68757], "mapped", [68821]], [[68758, 68758], "mapped", [68822]], [[68759, 68759], "mapped", [68823]], [[68760, 68760], "mapped", [68824]], [[68761, 68761], "mapped", [68825]], [[68762, 68762], "mapped", [68826]], [[68763, 68763], "mapped", [68827]], [[68764, 68764], "mapped", [68828]], [[68765, 68765], "mapped", [68829]], [[68766, 68766], "mapped", [68830]], [[68767, 68767], "mapped", [68831]], [[68768, 68768], "mapped", [68832]], [[68769, 68769], "mapped", [68833]], [[68770, 68770], "mapped", [68834]], [[68771, 68771], "mapped", [68835]], [[68772, 68772], "mapped", [68836]], [[68773, 68773], "mapped", [68837]], [[68774, 68774], "mapped", [68838]], [[68775, 68775], "mapped", [68839]], [[68776, 68776], "mapped", [68840]], [[68777, 68777], "mapped", [68841]], [[68778, 68778], "mapped", [68842]], [[68779, 68779], "mapped", [68843]], [[68780, 68780], "mapped", [68844]], [[68781, 68781], "mapped", [68845]], [[68782, 68782], "mapped", [68846]], [[68783, 68783], "mapped", [68847]], [[68784, 68784], "mapped", [68848]], [[68785, 68785], "mapped", [68849]], [[68786, 68786], "mapped", [68850]], [[68787, 68799], "disallowed"], [[68800, 68850], "valid"], [[68851, 68857], "disallowed"], [[68858, 68863], "valid", [], "NV8"], [[68864, 69215], "disallowed"], [[69216, 69246], "valid", [], "NV8"], [[69247, 69631], "disallowed"], [[69632, 69702], "valid"], [[69703, 69709], "valid", [], "NV8"], [[69710, 69713], "disallowed"], [[69714, 69733], "valid", [], "NV8"], [[69734, 69743], "valid"], [[69744, 69758], "disallowed"], [[69759, 69759], "valid"], [[69760, 69818], "valid"], [[69819, 69820], "valid", [], "NV8"], [[69821, 69821], "disallowed"], [[69822, 69825], "valid", [], "NV8"], [[69826, 69839], "disallowed"], [[69840, 69864], "valid"], [[69865, 69871], "disallowed"], [[69872, 69881], "valid"], [[69882, 69887], "disallowed"], [[69888, 69940], "valid"], [[69941, 69941], "disallowed"], [[69942, 69951], "valid"], [[69952, 69955], "valid", [], "NV8"], [[69956, 69967], "disallowed"], [[69968, 70003], "valid"], [[70004, 70005], "valid", [], "NV8"], [[70006, 70006], "valid"], [[70007, 70015], "disallowed"], [[70016, 70084], "valid"], [[70085, 70088], "valid", [], "NV8"], [[70089, 70089], "valid", [], "NV8"], [[70090, 70092], "valid"], [[70093, 70093], "valid", [], "NV8"], [[70094, 70095], "disallowed"], [[70096, 70105], "valid"], [[70106, 70106], "valid"], [[70107, 70107], "valid", [], "NV8"], [[70108, 70108], "valid"], [[70109, 70111], "valid", [], "NV8"], [[70112, 70112], "disallowed"], [[70113, 70132], "valid", [], "NV8"], [[70133, 70143], "disallowed"], [[70144, 70161], "valid"], [[70162, 70162], "disallowed"], [[70163, 70199], "valid"], [[70200, 70205], "valid", [], "NV8"], [[70206, 70271], "disallowed"], [[70272, 70278], "valid"], [[70279, 70279], "disallowed"], [[70280, 70280], "valid"], [[70281, 70281], "disallowed"], [[70282, 70285], "valid"], [[70286, 70286], "disallowed"], [[70287, 70301], "valid"], [[70302, 70302], "disallowed"], [[70303, 70312], "valid"], [[70313, 70313], "valid", [], "NV8"], [[70314, 70319], "disallowed"], [[70320, 70378], "valid"], [[70379, 70383], "disallowed"], [[70384, 70393], "valid"], [[70394, 70399], "disallowed"], [[70400, 70400], "valid"], [[70401, 70403], "valid"], [[70404, 70404], "disallowed"], [[70405, 70412], "valid"], [[70413, 70414], "disallowed"], [[70415, 70416], "valid"], [[70417, 70418], "disallowed"], [[70419, 70440], "valid"], [[70441, 70441], "disallowed"], [[70442, 70448], "valid"], [[70449, 70449], "disallowed"], [[70450, 70451], "valid"], [[70452, 70452], "disallowed"], [[70453, 70457], "valid"], [[70458, 70459], "disallowed"], [[70460, 70468], "valid"], [[70469, 70470], "disallowed"], [[70471, 70472], "valid"], [[70473, 70474], "disallowed"], [[70475, 70477], "valid"], [[70478, 70479], "disallowed"], [[70480, 70480], "valid"], [[70481, 70486], "disallowed"], [[70487, 70487], "valid"], [[70488, 70492], "disallowed"], [[70493, 70499], "valid"], [[70500, 70501], "disallowed"], [[70502, 70508], "valid"], [[70509, 70511], "disallowed"], [[70512, 70516], "valid"], [[70517, 70783], "disallowed"], [[70784, 70853], "valid"], [[70854, 70854], "valid", [], "NV8"], [[70855, 70855], "valid"], [[70856, 70863], "disallowed"], [[70864, 70873], "valid"], [[70874, 71039], "disallowed"], [[71040, 71093], "valid"], [[71094, 71095], "disallowed"], [[71096, 71104], "valid"], [[71105, 71113], "valid", [], "NV8"], [[71114, 71127], "valid", [], "NV8"], [[71128, 71133], "valid"], [[71134, 71167], "disallowed"], [[71168, 71232], "valid"], [[71233, 71235], "valid", [], "NV8"], [[71236, 71236], "valid"], [[71237, 71247], "disallowed"], [[71248, 71257], "valid"], [[71258, 71295], "disallowed"], [[71296, 71351], "valid"], [[71352, 71359], "disallowed"], [[71360, 71369], "valid"], [[71370, 71423], "disallowed"], [[71424, 71449], "valid"], [[71450, 71452], "disallowed"], [[71453, 71467], "valid"], [[71468, 71471], "disallowed"], [[71472, 71481], "valid"], [[71482, 71487], "valid", [], "NV8"], [[71488, 71839], "disallowed"], [[71840, 71840], "mapped", [71872]], [[71841, 71841], "mapped", [71873]], [[71842, 71842], "mapped", [71874]], [[71843, 71843], "mapped", [71875]], [[71844, 71844], "mapped", [71876]], [[71845, 71845], "mapped", [71877]], [[71846, 71846], "mapped", [71878]], [[71847, 71847], "mapped", [71879]], [[71848, 71848], "mapped", [71880]], [[71849, 71849], "mapped", [71881]], [[71850, 71850], "mapped", [71882]], [[71851, 71851], "mapped", [71883]], [[71852, 71852], "mapped", [71884]], [[71853, 71853], "mapped", [71885]], [[71854, 71854], "mapped", [71886]], [[71855, 71855], "mapped", [71887]], [[71856, 71856], "mapped", [71888]], [[71857, 71857], "mapped", [71889]], [[71858, 71858], "mapped", [71890]], [[71859, 71859], "mapped", [71891]], [[71860, 71860], "mapped", [71892]], [[71861, 71861], "mapped", [71893]], [[71862, 71862], "mapped", [71894]], [[71863, 71863], "mapped", [71895]], [[71864, 71864], "mapped", [71896]], [[71865, 71865], "mapped", [71897]], [[71866, 71866], "mapped", [71898]], [[71867, 71867], "mapped", [71899]], [[71868, 71868], "mapped", [71900]], [[71869, 71869], "mapped", [71901]], [[71870, 71870], "mapped", [71902]], [[71871, 71871], "mapped", [71903]], [[71872, 71913], "valid"], [[71914, 71922], "valid", [], "NV8"], [[71923, 71934], "disallowed"], [[71935, 71935], "valid"], [[71936, 72383], "disallowed"], [[72384, 72440], "valid"], [[72441, 73727], "disallowed"], [[73728, 74606], "valid"], [[74607, 74648], "valid"], [[74649, 74649], "valid"], [[74650, 74751], "disallowed"], [[74752, 74850], "valid", [], "NV8"], [[74851, 74862], "valid", [], "NV8"], [[74863, 74863], "disallowed"], [[74864, 74867], "valid", [], "NV8"], [[74868, 74868], "valid", [], "NV8"], [[74869, 74879], "disallowed"], [[74880, 75075], "valid"], [[75076, 77823], "disallowed"], [[77824, 78894], "valid"], [[78895, 82943], "disallowed"], [[82944, 83526], "valid"], [[83527, 92159], "disallowed"], [[92160, 92728], "valid"], [[92729, 92735], "disallowed"], [[92736, 92766], "valid"], [[92767, 92767], "disallowed"], [[92768, 92777], "valid"], [[92778, 92781], "disallowed"], [[92782, 92783], "valid", [], "NV8"], [[92784, 92879], "disallowed"], [[92880, 92909], "valid"], [[92910, 92911], "disallowed"], [[92912, 92916], "valid"], [[92917, 92917], "valid", [], "NV8"], [[92918, 92927], "disallowed"], [[92928, 92982], "valid"], [[92983, 92991], "valid", [], "NV8"], [[92992, 92995], "valid"], [[92996, 92997], "valid", [], "NV8"], [[92998, 93007], "disallowed"], [[93008, 93017], "valid"], [[93018, 93018], "disallowed"], [[93019, 93025], "valid", [], "NV8"], [[93026, 93026], "disallowed"], [[93027, 93047], "valid"], [[93048, 93052], "disallowed"], [[93053, 93071], "valid"], [[93072, 93951], "disallowed"], [[93952, 94020], "valid"], [[94021, 94031], "disallowed"], [[94032, 94078], "valid"], [[94079, 94094], "disallowed"], [[94095, 94111], "valid"], [[94112, 110591], "disallowed"], [[110592, 110593], "valid"], [[110594, 113663], "disallowed"], [[113664, 113770], "valid"], [[113771, 113775], "disallowed"], [[113776, 113788], "valid"], [[113789, 113791], "disallowed"], [[113792, 113800], "valid"], [[113801, 113807], "disallowed"], [[113808, 113817], "valid"], [[113818, 113819], "disallowed"], [[113820, 113820], "valid", [], "NV8"], [[113821, 113822], "valid"], [[113823, 113823], "valid", [], "NV8"], [[113824, 113827], "ignored"], [[113828, 118783], "disallowed"], [[118784, 119029], "valid", [], "NV8"], [[119030, 119039], "disallowed"], [[119040, 119078], "valid", [], "NV8"], [[119079, 119080], "disallowed"], [[119081, 119081], "valid", [], "NV8"], [[119082, 119133], "valid", [], "NV8"], [[119134, 119134], "mapped", [119127, 119141]], [[119135, 119135], "mapped", [119128, 119141]], [[119136, 119136], "mapped", [119128, 119141, 119150]], [[119137, 119137], "mapped", [119128, 119141, 119151]], [[119138, 119138], "mapped", [119128, 119141, 119152]], [[119139, 119139], "mapped", [119128, 119141, 119153]], [[119140, 119140], "mapped", [119128, 119141, 119154]], [[119141, 119154], "valid", [], "NV8"], [[119155, 119162], "disallowed"], [[119163, 119226], "valid", [], "NV8"], [[119227, 119227], "mapped", [119225, 119141]], [[119228, 119228], "mapped", [119226, 119141]], [[119229, 119229], "mapped", [119225, 119141, 119150]], [[119230, 119230], "mapped", [119226, 119141, 119150]], [[119231, 119231], "mapped", [119225, 119141, 119151]], [[119232, 119232], "mapped", [119226, 119141, 119151]], [[119233, 119261], "valid", [], "NV8"], [[119262, 119272], "valid", [], "NV8"], [[119273, 119295], "disallowed"], [[119296, 119365], "valid", [], "NV8"], [[119366, 119551], "disallowed"], [[119552, 119638], "valid", [], "NV8"], [[119639, 119647], "disallowed"], [[119648, 119665], "valid", [], "NV8"], [[119666, 119807], "disallowed"], [[119808, 119808], "mapped", [97]], [[119809, 119809], "mapped", [98]], [[119810, 119810], "mapped", [99]], [[119811, 119811], "mapped", [100]], [[119812, 119812], "mapped", [101]], [[119813, 119813], "mapped", [102]], [[119814, 119814], "mapped", [103]], [[119815, 119815], "mapped", [104]], [[119816, 119816], "mapped", [105]], [[119817, 119817], "mapped", [106]], [[119818, 119818], "mapped", [107]], [[119819, 119819], "mapped", [108]], [[119820, 119820], "mapped", [109]], [[119821, 119821], "mapped", [110]], [[119822, 119822], "mapped", [111]], [[119823, 119823], "mapped", [112]], [[119824, 119824], "mapped", [113]], [[119825, 119825], "mapped", [114]], [[119826, 119826], "mapped", [115]], [[119827, 119827], "mapped", [116]], [[119828, 119828], "mapped", [117]], [[119829, 119829], "mapped", [118]], [[119830, 119830], "mapped", [119]], [[119831, 119831], "mapped", [120]], [[119832, 119832], "mapped", [121]], [[119833, 119833], "mapped", [122]], [[119834, 119834], "mapped", [97]], [[119835, 119835], "mapped", [98]], [[119836, 119836], "mapped", [99]], [[119837, 119837], "mapped", [100]], [[119838, 119838], "mapped", [101]], [[119839, 119839], "mapped", [102]], [[119840, 119840], "mapped", [103]], [[119841, 119841], "mapped", [104]], [[119842, 119842], "mapped", [105]], [[119843, 119843], "mapped", [106]], [[119844, 119844], "mapped", [107]], [[119845, 119845], "mapped", [108]], [[119846, 119846], "mapped", [109]], [[119847, 119847], "mapped", [110]], [[119848, 119848], "mapped", [111]], [[119849, 119849], "mapped", [112]], [[119850, 119850], "mapped", [113]], [[119851, 119851], "mapped", [114]], [[119852, 119852], "mapped", [115]], [[119853, 119853], "mapped", [116]], [[119854, 119854], "mapped", [117]], [[119855, 119855], "mapped", [118]], [[119856, 119856], "mapped", [119]], [[119857, 119857], "mapped", [120]], [[119858, 119858], "mapped", [121]], [[119859, 119859], "mapped", [122]], [[119860, 119860], "mapped", [97]], [[119861, 119861], "mapped", [98]], [[119862, 119862], "mapped", [99]], [[119863, 119863], "mapped", [100]], [[119864, 119864], "mapped", [101]], [[119865, 119865], "mapped", [102]], [[119866, 119866], "mapped", [103]], [[119867, 119867], "mapped", [104]], [[119868, 119868], "mapped", [105]], [[119869, 119869], "mapped", [106]], [[119870, 119870], "mapped", [107]], [[119871, 119871], "mapped", [108]], [[119872, 119872], "mapped", [109]], [[119873, 119873], "mapped", [110]], [[119874, 119874], "mapped", [111]], [[119875, 119875], "mapped", [112]], [[119876, 119876], "mapped", [113]], [[119877, 119877], "mapped", [114]], [[119878, 119878], "mapped", [115]], [[119879, 119879], "mapped", [116]], [[119880, 119880], "mapped", [117]], [[119881, 119881], "mapped", [118]], [[119882, 119882], "mapped", [119]], [[119883, 119883], "mapped", [120]], [[119884, 119884], "mapped", [121]], [[119885, 119885], "mapped", [122]], [[119886, 119886], "mapped", [97]], [[119887, 119887], "mapped", [98]], [[119888, 119888], "mapped", [99]], [[119889, 119889], "mapped", [100]], [[119890, 119890], "mapped", [101]], [[119891, 119891], "mapped", [102]], [[119892, 119892], "mapped", [103]], [[119893, 119893], "disallowed"], [[119894, 119894], "mapped", [105]], [[119895, 119895], "mapped", [106]], [[119896, 119896], "mapped", [107]], [[119897, 119897], "mapped", [108]], [[119898, 119898], "mapped", [109]], [[119899, 119899], "mapped", [110]], [[119900, 119900], "mapped", [111]], [[119901, 119901], "mapped", [112]], [[119902, 119902], "mapped", [113]], [[119903, 119903], "mapped", [114]], [[119904, 119904], "mapped", [115]], [[119905, 119905], "mapped", [116]], [[119906, 119906], "mapped", [117]], [[119907, 119907], "mapped", [118]], [[119908, 119908], "mapped", [119]], [[119909, 119909], "mapped", [120]], [[119910, 119910], "mapped", [121]], [[119911, 119911], "mapped", [122]], [[119912, 119912], "mapped", [97]], [[119913, 119913], "mapped", [98]], [[119914, 119914], "mapped", [99]], [[119915, 119915], "mapped", [100]], [[119916, 119916], "mapped", [101]], [[119917, 119917], "mapped", [102]], [[119918, 119918], "mapped", [103]], [[119919, 119919], "mapped", [104]], [[119920, 119920], "mapped", [105]], [[119921, 119921], "mapped", [106]], [[119922, 119922], "mapped", [107]], [[119923, 119923], "mapped", [108]], [[119924, 119924], "mapped", [109]], [[119925, 119925], "mapped", [110]], [[119926, 119926], "mapped", [111]], [[119927, 119927], "mapped", [112]], [[119928, 119928], "mapped", [113]], [[119929, 119929], "mapped", [114]], [[119930, 119930], "mapped", [115]], [[119931, 119931], "mapped", [116]], [[119932, 119932], "mapped", [117]], [[119933, 119933], "mapped", [118]], [[119934, 119934], "mapped", [119]], [[119935, 119935], "mapped", [120]], [[119936, 119936], "mapped", [121]], [[119937, 119937], "mapped", [122]], [[119938, 119938], "mapped", [97]], [[119939, 119939], "mapped", [98]], [[119940, 119940], "mapped", [99]], [[119941, 119941], "mapped", [100]], [[119942, 119942], "mapped", [101]], [[119943, 119943], "mapped", [102]], [[119944, 119944], "mapped", [103]], [[119945, 119945], "mapped", [104]], [[119946, 119946], "mapped", [105]], [[119947, 119947], "mapped", [106]], [[119948, 119948], "mapped", [107]], [[119949, 119949], "mapped", [108]], [[119950, 119950], "mapped", [109]], [[119951, 119951], "mapped", [110]], [[119952, 119952], "mapped", [111]], [[119953, 119953], "mapped", [112]], [[119954, 119954], "mapped", [113]], [[119955, 119955], "mapped", [114]], [[119956, 119956], "mapped", [115]], [[119957, 119957], "mapped", [116]], [[119958, 119958], "mapped", [117]], [[119959, 119959], "mapped", [118]], [[119960, 119960], "mapped", [119]], [[119961, 119961], "mapped", [120]], [[119962, 119962], "mapped", [121]], [[119963, 119963], "mapped", [122]], [[119964, 119964], "mapped", [97]], [[119965, 119965], "disallowed"], [[119966, 119966], "mapped", [99]], [[119967, 119967], "mapped", [100]], [[119968, 119969], "disallowed"], [[119970, 119970], "mapped", [103]], [[119971, 119972], "disallowed"], [[119973, 119973], "mapped", [106]], [[119974, 119974], "mapped", [107]], [[119975, 119976], "disallowed"], [[119977, 119977], "mapped", [110]], [[119978, 119978], "mapped", [111]], [[119979, 119979], "mapped", [112]], [[119980, 119980], "mapped", [113]], [[119981, 119981], "disallowed"], [[119982, 119982], "mapped", [115]], [[119983, 119983], "mapped", [116]], [[119984, 119984], "mapped", [117]], [[119985, 119985], "mapped", [118]], [[119986, 119986], "mapped", [119]], [[119987, 119987], "mapped", [120]], [[119988, 119988], "mapped", [121]], [[119989, 119989], "mapped", [122]], [[119990, 119990], "mapped", [97]], [[119991, 119991], "mapped", [98]], [[119992, 119992], "mapped", [99]], [[119993, 119993], "mapped", [100]], [[119994, 119994], "disallowed"], [[119995, 119995], "mapped", [102]], [[119996, 119996], "disallowed"], [[119997, 119997], "mapped", [104]], [[119998, 119998], "mapped", [105]], [[119999, 119999], "mapped", [106]], [[12e4, 12e4], "mapped", [107]], [[120001, 120001], "mapped", [108]], [[120002, 120002], "mapped", [109]], [[120003, 120003], "mapped", [110]], [[120004, 120004], "disallowed"], [[120005, 120005], "mapped", [112]], [[120006, 120006], "mapped", [113]], [[120007, 120007], "mapped", [114]], [[120008, 120008], "mapped", [115]], [[120009, 120009], "mapped", [116]], [[120010, 120010], "mapped", [117]], [[120011, 120011], "mapped", [118]], [[120012, 120012], "mapped", [119]], [[120013, 120013], "mapped", [120]], [[120014, 120014], "mapped", [121]], [[120015, 120015], "mapped", [122]], [[120016, 120016], "mapped", [97]], [[120017, 120017], "mapped", [98]], [[120018, 120018], "mapped", [99]], [[120019, 120019], "mapped", [100]], [[120020, 120020], "mapped", [101]], [[120021, 120021], "mapped", [102]], [[120022, 120022], "mapped", [103]], [[120023, 120023], "mapped", [104]], [[120024, 120024], "mapped", [105]], [[120025, 120025], "mapped", [106]], [[120026, 120026], "mapped", [107]], [[120027, 120027], "mapped", [108]], [[120028, 120028], "mapped", [109]], [[120029, 120029], "mapped", [110]], [[120030, 120030], "mapped", [111]], [[120031, 120031], "mapped", [112]], [[120032, 120032], "mapped", [113]], [[120033, 120033], "mapped", [114]], [[120034, 120034], "mapped", [115]], [[120035, 120035], "mapped", [116]], [[120036, 120036], "mapped", [117]], [[120037, 120037], "mapped", [118]], [[120038, 120038], "mapped", [119]], [[120039, 120039], "mapped", [120]], [[120040, 120040], "mapped", [121]], [[120041, 120041], "mapped", [122]], [[120042, 120042], "mapped", [97]], [[120043, 120043], "mapped", [98]], [[120044, 120044], "mapped", [99]], [[120045, 120045], "mapped", [100]], [[120046, 120046], "mapped", [101]], [[120047, 120047], "mapped", [102]], [[120048, 120048], "mapped", [103]], [[120049, 120049], "mapped", [104]], [[120050, 120050], "mapped", [105]], [[120051, 120051], "mapped", [106]], [[120052, 120052], "mapped", [107]], [[120053, 120053], "mapped", [108]], [[120054, 120054], "mapped", [109]], [[120055, 120055], "mapped", [110]], [[120056, 120056], "mapped", [111]], [[120057, 120057], "mapped", [112]], [[120058, 120058], "mapped", [113]], [[120059, 120059], "mapped", [114]], [[120060, 120060], "mapped", [115]], [[120061, 120061], "mapped", [116]], [[120062, 120062], "mapped", [117]], [[120063, 120063], "mapped", [118]], [[120064, 120064], "mapped", [119]], [[120065, 120065], "mapped", [120]], [[120066, 120066], "mapped", [121]], [[120067, 120067], "mapped", [122]], [[120068, 120068], "mapped", [97]], [[120069, 120069], "mapped", [98]], [[120070, 120070], "disallowed"], [[120071, 120071], "mapped", [100]], [[120072, 120072], "mapped", [101]], [[120073, 120073], "mapped", [102]], [[120074, 120074], "mapped", [103]], [[120075, 120076], "disallowed"], [[120077, 120077], "mapped", [106]], [[120078, 120078], "mapped", [107]], [[120079, 120079], "mapped", [108]], [[120080, 120080], "mapped", [109]], [[120081, 120081], "mapped", [110]], [[120082, 120082], "mapped", [111]], [[120083, 120083], "mapped", [112]], [[120084, 120084], "mapped", [113]], [[120085, 120085], "disallowed"], [[120086, 120086], "mapped", [115]], [[120087, 120087], "mapped", [116]], [[120088, 120088], "mapped", [117]], [[120089, 120089], "mapped", [118]], [[120090, 120090], "mapped", [119]], [[120091, 120091], "mapped", [120]], [[120092, 120092], "mapped", [121]], [[120093, 120093], "disallowed"], [[120094, 120094], "mapped", [97]], [[120095, 120095], "mapped", [98]], [[120096, 120096], "mapped", [99]], [[120097, 120097], "mapped", [100]], [[120098, 120098], "mapped", [101]], [[120099, 120099], "mapped", [102]], [[120100, 120100], "mapped", [103]], [[120101, 120101], "mapped", [104]], [[120102, 120102], "mapped", [105]], [[120103, 120103], "mapped", [106]], [[120104, 120104], "mapped", [107]], [[120105, 120105], "mapped", [108]], [[120106, 120106], "mapped", [109]], [[120107, 120107], "mapped", [110]], [[120108, 120108], "mapped", [111]], [[120109, 120109], "mapped", [112]], [[120110, 120110], "mapped", [113]], [[120111, 120111], "mapped", [114]], [[120112, 120112], "mapped", [115]], [[120113, 120113], "mapped", [116]], [[120114, 120114], "mapped", [117]], [[120115, 120115], "mapped", [118]], [[120116, 120116], "mapped", [119]], [[120117, 120117], "mapped", [120]], [[120118, 120118], "mapped", [121]], [[120119, 120119], "mapped", [122]], [[120120, 120120], "mapped", [97]], [[120121, 120121], "mapped", [98]], [[120122, 120122], "disallowed"], [[120123, 120123], "mapped", [100]], [[120124, 120124], "mapped", [101]], [[120125, 120125], "mapped", [102]], [[120126, 120126], "mapped", [103]], [[120127, 120127], "disallowed"], [[120128, 120128], "mapped", [105]], [[120129, 120129], "mapped", [106]], [[120130, 120130], "mapped", [107]], [[120131, 120131], "mapped", [108]], [[120132, 120132], "mapped", [109]], [[120133, 120133], "disallowed"], [[120134, 120134], "mapped", [111]], [[120135, 120137], "disallowed"], [[120138, 120138], "mapped", [115]], [[120139, 120139], "mapped", [116]], [[120140, 120140], "mapped", [117]], [[120141, 120141], "mapped", [118]], [[120142, 120142], "mapped", [119]], [[120143, 120143], "mapped", [120]], [[120144, 120144], "mapped", [121]], [[120145, 120145], "disallowed"], [[120146, 120146], "mapped", [97]], [[120147, 120147], "mapped", [98]], [[120148, 120148], "mapped", [99]], [[120149, 120149], "mapped", [100]], [[120150, 120150], "mapped", [101]], [[120151, 120151], "mapped", [102]], [[120152, 120152], "mapped", [103]], [[120153, 120153], "mapped", [104]], [[120154, 120154], "mapped", [105]], [[120155, 120155], "mapped", [106]], [[120156, 120156], "mapped", [107]], [[120157, 120157], "mapped", [108]], [[120158, 120158], "mapped", [109]], [[120159, 120159], "mapped", [110]], [[120160, 120160], "mapped", [111]], [[120161, 120161], "mapped", [112]], [[120162, 120162], "mapped", [113]], [[120163, 120163], "mapped", [114]], [[120164, 120164], "mapped", [115]], [[120165, 120165], "mapped", [116]], [[120166, 120166], "mapped", [117]], [[120167, 120167], "mapped", [118]], [[120168, 120168], "mapped", [119]], [[120169, 120169], "mapped", [120]], [[120170, 120170], "mapped", [121]], [[120171, 120171], "mapped", [122]], [[120172, 120172], "mapped", [97]], [[120173, 120173], "mapped", [98]], [[120174, 120174], "mapped", [99]], [[120175, 120175], "mapped", [100]], [[120176, 120176], "mapped", [101]], [[120177, 120177], "mapped", [102]], [[120178, 120178], "mapped", [103]], [[120179, 120179], "mapped", [104]], [[120180, 120180], "mapped", [105]], [[120181, 120181], "mapped", [106]], [[120182, 120182], "mapped", [107]], [[120183, 120183], "mapped", [108]], [[120184, 120184], "mapped", [109]], [[120185, 120185], "mapped", [110]], [[120186, 120186], "mapped", [111]], [[120187, 120187], "mapped", [112]], [[120188, 120188], "mapped", [113]], [[120189, 120189], "mapped", [114]], [[120190, 120190], "mapped", [115]], [[120191, 120191], "mapped", [116]], [[120192, 120192], "mapped", [117]], [[120193, 120193], "mapped", [118]], [[120194, 120194], "mapped", [119]], [[120195, 120195], "mapped", [120]], [[120196, 120196], "mapped", [121]], [[120197, 120197], "mapped", [122]], [[120198, 120198], "mapped", [97]], [[120199, 120199], "mapped", [98]], [[120200, 120200], "mapped", [99]], [[120201, 120201], "mapped", [100]], [[120202, 120202], "mapped", [101]], [[120203, 120203], "mapped", [102]], [[120204, 120204], "mapped", [103]], [[120205, 120205], "mapped", [104]], [[120206, 120206], "mapped", [105]], [[120207, 120207], "mapped", [106]], [[120208, 120208], "mapped", [107]], [[120209, 120209], "mapped", [108]], [[120210, 120210], "mapped", [109]], [[120211, 120211], "mapped", [110]], [[120212, 120212], "mapped", [111]], [[120213, 120213], "mapped", [112]], [[120214, 120214], "mapped", [113]], [[120215, 120215], "mapped", [114]], [[120216, 120216], "mapped", [115]], [[120217, 120217], "mapped", [116]], [[120218, 120218], "mapped", [117]], [[120219, 120219], "mapped", [118]], [[120220, 120220], "mapped", [119]], [[120221, 120221], "mapped", [120]], [[120222, 120222], "mapped", [121]], [[120223, 120223], "mapped", [122]], [[120224, 120224], "mapped", [97]], [[120225, 120225], "mapped", [98]], [[120226, 120226], "mapped", [99]], [[120227, 120227], "mapped", [100]], [[120228, 120228], "mapped", [101]], [[120229, 120229], "mapped", [102]], [[120230, 120230], "mapped", [103]], [[120231, 120231], "mapped", [104]], [[120232, 120232], "mapped", [105]], [[120233, 120233], "mapped", [106]], [[120234, 120234], "mapped", [107]], [[120235, 120235], "mapped", [108]], [[120236, 120236], "mapped", [109]], [[120237, 120237], "mapped", [110]], [[120238, 120238], "mapped", [111]], [[120239, 120239], "mapped", [112]], [[120240, 120240], "mapped", [113]], [[120241, 120241], "mapped", [114]], [[120242, 120242], "mapped", [115]], [[120243, 120243], "mapped", [116]], [[120244, 120244], "mapped", [117]], [[120245, 120245], "mapped", [118]], [[120246, 120246], "mapped", [119]], [[120247, 120247], "mapped", [120]], [[120248, 120248], "mapped", [121]], [[120249, 120249], "mapped", [122]], [[120250, 120250], "mapped", [97]], [[120251, 120251], "mapped", [98]], [[120252, 120252], "mapped", [99]], [[120253, 120253], "mapped", [100]], [[120254, 120254], "mapped", [101]], [[120255, 120255], "mapped", [102]], [[120256, 120256], "mapped", [103]], [[120257, 120257], "mapped", [104]], [[120258, 120258], "mapped", [105]], [[120259, 120259], "mapped", [106]], [[120260, 120260], "mapped", [107]], [[120261, 120261], "mapped", [108]], [[120262, 120262], "mapped", [109]], [[120263, 120263], "mapped", [110]], [[120264, 120264], "mapped", [111]], [[120265, 120265], "mapped", [112]], [[120266, 120266], "mapped", [113]], [[120267, 120267], "mapped", [114]], [[120268, 120268], "mapped", [115]], [[120269, 120269], "mapped", [116]], [[120270, 120270], "mapped", [117]], [[120271, 120271], "mapped", [118]], [[120272, 120272], "mapped", [119]], [[120273, 120273], "mapped", [120]], [[120274, 120274], "mapped", [121]], [[120275, 120275], "mapped", [122]], [[120276, 120276], "mapped", [97]], [[120277, 120277], "mapped", [98]], [[120278, 120278], "mapped", [99]], [[120279, 120279], "mapped", [100]], [[120280, 120280], "mapped", [101]], [[120281, 120281], "mapped", [102]], [[120282, 120282], "mapped", [103]], [[120283, 120283], "mapped", [104]], [[120284, 120284], "mapped", [105]], [[120285, 120285], "mapped", [106]], [[120286, 120286], "mapped", [107]], [[120287, 120287], "mapped", [108]], [[120288, 120288], "mapped", [109]], [[120289, 120289], "mapped", [110]], [[120290, 120290], "mapped", [111]], [[120291, 120291], "mapped", [112]], [[120292, 120292], "mapped", [113]], [[120293, 120293], "mapped", [114]], [[120294, 120294], "mapped", [115]], [[120295, 120295], "mapped", [116]], [[120296, 120296], "mapped", [117]], [[120297, 120297], "mapped", [118]], [[120298, 120298], "mapped", [119]], [[120299, 120299], "mapped", [120]], [[120300, 120300], "mapped", [121]], [[120301, 120301], "mapped", [122]], [[120302, 120302], "mapped", [97]], [[120303, 120303], "mapped", [98]], [[120304, 120304], "mapped", [99]], [[120305, 120305], "mapped", [100]], [[120306, 120306], "mapped", [101]], [[120307, 120307], "mapped", [102]], [[120308, 120308], "mapped", [103]], [[120309, 120309], "mapped", [104]], [[120310, 120310], "mapped", [105]], [[120311, 120311], "mapped", [106]], [[120312, 120312], "mapped", [107]], [[120313, 120313], "mapped", [108]], [[120314, 120314], "mapped", [109]], [[120315, 120315], "mapped", [110]], [[120316, 120316], "mapped", [111]], [[120317, 120317], "mapped", [112]], [[120318, 120318], "mapped", [113]], [[120319, 120319], "mapped", [114]], [[120320, 120320], "mapped", [115]], [[120321, 120321], "mapped", [116]], [[120322, 120322], "mapped", [117]], [[120323, 120323], "mapped", [118]], [[120324, 120324], "mapped", [119]], [[120325, 120325], "mapped", [120]], [[120326, 120326], "mapped", [121]], [[120327, 120327], "mapped", [122]], [[120328, 120328], "mapped", [97]], [[120329, 120329], "mapped", [98]], [[120330, 120330], "mapped", [99]], [[120331, 120331], "mapped", [100]], [[120332, 120332], "mapped", [101]], [[120333, 120333], "mapped", [102]], [[120334, 120334], "mapped", [103]], [[120335, 120335], "mapped", [104]], [[120336, 120336], "mapped", [105]], [[120337, 120337], "mapped", [106]], [[120338, 120338], "mapped", [107]], [[120339, 120339], "mapped", [108]], [[120340, 120340], "mapped", [109]], [[120341, 120341], "mapped", [110]], [[120342, 120342], "mapped", [111]], [[120343, 120343], "mapped", [112]], [[120344, 120344], "mapped", [113]], [[120345, 120345], "mapped", [114]], [[120346, 120346], "mapped", [115]], [[120347, 120347], "mapped", [116]], [[120348, 120348], "mapped", [117]], [[120349, 120349], "mapped", [118]], [[120350, 120350], "mapped", [119]], [[120351, 120351], "mapped", [120]], [[120352, 120352], "mapped", [121]], [[120353, 120353], "mapped", [122]], [[120354, 120354], "mapped", [97]], [[120355, 120355], "mapped", [98]], [[120356, 120356], "mapped", [99]], [[120357, 120357], "mapped", [100]], [[120358, 120358], "mapped", [101]], [[120359, 120359], "mapped", [102]], [[120360, 120360], "mapped", [103]], [[120361, 120361], "mapped", [104]], [[120362, 120362], "mapped", [105]], [[120363, 120363], "mapped", [106]], [[120364, 120364], "mapped", [107]], [[120365, 120365], "mapped", [108]], [[120366, 120366], "mapped", [109]], [[120367, 120367], "mapped", [110]], [[120368, 120368], "mapped", [111]], [[120369, 120369], "mapped", [112]], [[120370, 120370], "mapped", [113]], [[120371, 120371], "mapped", [114]], [[120372, 120372], "mapped", [115]], [[120373, 120373], "mapped", [116]], [[120374, 120374], "mapped", [117]], [[120375, 120375], "mapped", [118]], [[120376, 120376], "mapped", [119]], [[120377, 120377], "mapped", [120]], [[120378, 120378], "mapped", [121]], [[120379, 120379], "mapped", [122]], [[120380, 120380], "mapped", [97]], [[120381, 120381], "mapped", [98]], [[120382, 120382], "mapped", [99]], [[120383, 120383], "mapped", [100]], [[120384, 120384], "mapped", [101]], [[120385, 120385], "mapped", [102]], [[120386, 120386], "mapped", [103]], [[120387, 120387], "mapped", [104]], [[120388, 120388], "mapped", [105]], [[120389, 120389], "mapped", [106]], [[120390, 120390], "mapped", [107]], [[120391, 120391], "mapped", [108]], [[120392, 120392], "mapped", [109]], [[120393, 120393], "mapped", [110]], [[120394, 120394], "mapped", [111]], [[120395, 120395], "mapped", [112]], [[120396, 120396], "mapped", [113]], [[120397, 120397], "mapped", [114]], [[120398, 120398], "mapped", [115]], [[120399, 120399], "mapped", [116]], [[120400, 120400], "mapped", [117]], [[120401, 120401], "mapped", [118]], [[120402, 120402], "mapped", [119]], [[120403, 120403], "mapped", [120]], [[120404, 120404], "mapped", [121]], [[120405, 120405], "mapped", [122]], [[120406, 120406], "mapped", [97]], [[120407, 120407], "mapped", [98]], [[120408, 120408], "mapped", [99]], [[120409, 120409], "mapped", [100]], [[120410, 120410], "mapped", [101]], [[120411, 120411], "mapped", [102]], [[120412, 120412], "mapped", [103]], [[120413, 120413], "mapped", [104]], [[120414, 120414], "mapped", [105]], [[120415, 120415], "mapped", [106]], [[120416, 120416], "mapped", [107]], [[120417, 120417], "mapped", [108]], [[120418, 120418], "mapped", [109]], [[120419, 120419], "mapped", [110]], [[120420, 120420], "mapped", [111]], [[120421, 120421], "mapped", [112]], [[120422, 120422], "mapped", [113]], [[120423, 120423], "mapped", [114]], [[120424, 120424], "mapped", [115]], [[120425, 120425], "mapped", [116]], [[120426, 120426], "mapped", [117]], [[120427, 120427], "mapped", [118]], [[120428, 120428], "mapped", [119]], [[120429, 120429], "mapped", [120]], [[120430, 120430], "mapped", [121]], [[120431, 120431], "mapped", [122]], [[120432, 120432], "mapped", [97]], [[120433, 120433], "mapped", [98]], [[120434, 120434], "mapped", [99]], [[120435, 120435], "mapped", [100]], [[120436, 120436], "mapped", [101]], [[120437, 120437], "mapped", [102]], [[120438, 120438], "mapped", [103]], [[120439, 120439], "mapped", [104]], [[120440, 120440], "mapped", [105]], [[120441, 120441], "mapped", [106]], [[120442, 120442], "mapped", [107]], [[120443, 120443], "mapped", [108]], [[120444, 120444], "mapped", [109]], [[120445, 120445], "mapped", [110]], [[120446, 120446], "mapped", [111]], [[120447, 120447], "mapped", [112]], [[120448, 120448], "mapped", [113]], [[120449, 120449], "mapped", [114]], [[120450, 120450], "mapped", [115]], [[120451, 120451], "mapped", [116]], [[120452, 120452], "mapped", [117]], [[120453, 120453], "mapped", [118]], [[120454, 120454], "mapped", [119]], [[120455, 120455], "mapped", [120]], [[120456, 120456], "mapped", [121]], [[120457, 120457], "mapped", [122]], [[120458, 120458], "mapped", [97]], [[120459, 120459], "mapped", [98]], [[120460, 120460], "mapped", [99]], [[120461, 120461], "mapped", [100]], [[120462, 120462], "mapped", [101]], [[120463, 120463], "mapped", [102]], [[120464, 120464], "mapped", [103]], [[120465, 120465], "mapped", [104]], [[120466, 120466], "mapped", [105]], [[120467, 120467], "mapped", [106]], [[120468, 120468], "mapped", [107]], [[120469, 120469], "mapped", [108]], [[120470, 120470], "mapped", [109]], [[120471, 120471], "mapped", [110]], [[120472, 120472], "mapped", [111]], [[120473, 120473], "mapped", [112]], [[120474, 120474], "mapped", [113]], [[120475, 120475], "mapped", [114]], [[120476, 120476], "mapped", [115]], [[120477, 120477], "mapped", [116]], [[120478, 120478], "mapped", [117]], [[120479, 120479], "mapped", [118]], [[120480, 120480], "mapped", [119]], [[120481, 120481], "mapped", [120]], [[120482, 120482], "mapped", [121]], [[120483, 120483], "mapped", [122]], [[120484, 120484], "mapped", [305]], [[120485, 120485], "mapped", [567]], [[120486, 120487], "disallowed"], [[120488, 120488], "mapped", [945]], [[120489, 120489], "mapped", [946]], [[120490, 120490], "mapped", [947]], [[120491, 120491], "mapped", [948]], [[120492, 120492], "mapped", [949]], [[120493, 120493], "mapped", [950]], [[120494, 120494], "mapped", [951]], [[120495, 120495], "mapped", [952]], [[120496, 120496], "mapped", [953]], [[120497, 120497], "mapped", [954]], [[120498, 120498], "mapped", [955]], [[120499, 120499], "mapped", [956]], [[120500, 120500], "mapped", [957]], [[120501, 120501], "mapped", [958]], [[120502, 120502], "mapped", [959]], [[120503, 120503], "mapped", [960]], [[120504, 120504], "mapped", [961]], [[120505, 120505], "mapped", [952]], [[120506, 120506], "mapped", [963]], [[120507, 120507], "mapped", [964]], [[120508, 120508], "mapped", [965]], [[120509, 120509], "mapped", [966]], [[120510, 120510], "mapped", [967]], [[120511, 120511], "mapped", [968]], [[120512, 120512], "mapped", [969]], [[120513, 120513], "mapped", [8711]], [[120514, 120514], "mapped", [945]], [[120515, 120515], "mapped", [946]], [[120516, 120516], "mapped", [947]], [[120517, 120517], "mapped", [948]], [[120518, 120518], "mapped", [949]], [[120519, 120519], "mapped", [950]], [[120520, 120520], "mapped", [951]], [[120521, 120521], "mapped", [952]], [[120522, 120522], "mapped", [953]], [[120523, 120523], "mapped", [954]], [[120524, 120524], "mapped", [955]], [[120525, 120525], "mapped", [956]], [[120526, 120526], "mapped", [957]], [[120527, 120527], "mapped", [958]], [[120528, 120528], "mapped", [959]], [[120529, 120529], "mapped", [960]], [[120530, 120530], "mapped", [961]], [[120531, 120532], "mapped", [963]], [[120533, 120533], "mapped", [964]], [[120534, 120534], "mapped", [965]], [[120535, 120535], "mapped", [966]], [[120536, 120536], "mapped", [967]], [[120537, 120537], "mapped", [968]], [[120538, 120538], "mapped", [969]], [[120539, 120539], "mapped", [8706]], [[120540, 120540], "mapped", [949]], [[120541, 120541], "mapped", [952]], [[120542, 120542], "mapped", [954]], [[120543, 120543], "mapped", [966]], [[120544, 120544], "mapped", [961]], [[120545, 120545], "mapped", [960]], [[120546, 120546], "mapped", [945]], [[120547, 120547], "mapped", [946]], [[120548, 120548], "mapped", [947]], [[120549, 120549], "mapped", [948]], [[120550, 120550], "mapped", [949]], [[120551, 120551], "mapped", [950]], [[120552, 120552], "mapped", [951]], [[120553, 120553], "mapped", [952]], [[120554, 120554], "mapped", [953]], [[120555, 120555], "mapped", [954]], [[120556, 120556], "mapped", [955]], [[120557, 120557], "mapped", [956]], [[120558, 120558], "mapped", [957]], [[120559, 120559], "mapped", [958]], [[120560, 120560], "mapped", [959]], [[120561, 120561], "mapped", [960]], [[120562, 120562], "mapped", [961]], [[120563, 120563], "mapped", [952]], [[120564, 120564], "mapped", [963]], [[120565, 120565], "mapped", [964]], [[120566, 120566], "mapped", [965]], [[120567, 120567], "mapped", [966]], [[120568, 120568], "mapped", [967]], [[120569, 120569], "mapped", [968]], [[120570, 120570], "mapped", [969]], [[120571, 120571], "mapped", [8711]], [[120572, 120572], "mapped", [945]], [[120573, 120573], "mapped", [946]], [[120574, 120574], "mapped", [947]], [[120575, 120575], "mapped", [948]], [[120576, 120576], "mapped", [949]], [[120577, 120577], "mapped", [950]], [[120578, 120578], "mapped", [951]], [[120579, 120579], "mapped", [952]], [[120580, 120580], "mapped", [953]], [[120581, 120581], "mapped", [954]], [[120582, 120582], "mapped", [955]], [[120583, 120583], "mapped", [956]], [[120584, 120584], "mapped", [957]], [[120585, 120585], "mapped", [958]], [[120586, 120586], "mapped", [959]], [[120587, 120587], "mapped", [960]], [[120588, 120588], "mapped", [961]], [[120589, 120590], "mapped", [963]], [[120591, 120591], "mapped", [964]], [[120592, 120592], "mapped", [965]], [[120593, 120593], "mapped", [966]], [[120594, 120594], "mapped", [967]], [[120595, 120595], "mapped", [968]], [[120596, 120596], "mapped", [969]], [[120597, 120597], "mapped", [8706]], [[120598, 120598], "mapped", [949]], [[120599, 120599], "mapped", [952]], [[120600, 120600], "mapped", [954]], [[120601, 120601], "mapped", [966]], [[120602, 120602], "mapped", [961]], [[120603, 120603], "mapped", [960]], [[120604, 120604], "mapped", [945]], [[120605, 120605], "mapped", [946]], [[120606, 120606], "mapped", [947]], [[120607, 120607], "mapped", [948]], [[120608, 120608], "mapped", [949]], [[120609, 120609], "mapped", [950]], [[120610, 120610], "mapped", [951]], [[120611, 120611], "mapped", [952]], [[120612, 120612], "mapped", [953]], [[120613, 120613], "mapped", [954]], [[120614, 120614], "mapped", [955]], [[120615, 120615], "mapped", [956]], [[120616, 120616], "mapped", [957]], [[120617, 120617], "mapped", [958]], [[120618, 120618], "mapped", [959]], [[120619, 120619], "mapped", [960]], [[120620, 120620], "mapped", [961]], [[120621, 120621], "mapped", [952]], [[120622, 120622], "mapped", [963]], [[120623, 120623], "mapped", [964]], [[120624, 120624], "mapped", [965]], [[120625, 120625], "mapped", [966]], [[120626, 120626], "mapped", [967]], [[120627, 120627], "mapped", [968]], [[120628, 120628], "mapped", [969]], [[120629, 120629], "mapped", [8711]], [[120630, 120630], "mapped", [945]], [[120631, 120631], "mapped", [946]], [[120632, 120632], "mapped", [947]], [[120633, 120633], "mapped", [948]], [[120634, 120634], "mapped", [949]], [[120635, 120635], "mapped", [950]], [[120636, 120636], "mapped", [951]], [[120637, 120637], "mapped", [952]], [[120638, 120638], "mapped", [953]], [[120639, 120639], "mapped", [954]], [[120640, 120640], "mapped", [955]], [[120641, 120641], "mapped", [956]], [[120642, 120642], "mapped", [957]], [[120643, 120643], "mapped", [958]], [[120644, 120644], "mapped", [959]], [[120645, 120645], "mapped", [960]], [[120646, 120646], "mapped", [961]], [[120647, 120648], "mapped", [963]], [[120649, 120649], "mapped", [964]], [[120650, 120650], "mapped", [965]], [[120651, 120651], "mapped", [966]], [[120652, 120652], "mapped", [967]], [[120653, 120653], "mapped", [968]], [[120654, 120654], "mapped", [969]], [[120655, 120655], "mapped", [8706]], [[120656, 120656], "mapped", [949]], [[120657, 120657], "mapped", [952]], [[120658, 120658], "mapped", [954]], [[120659, 120659], "mapped", [966]], [[120660, 120660], "mapped", [961]], [[120661, 120661], "mapped", [960]], [[120662, 120662], "mapped", [945]], [[120663, 120663], "mapped", [946]], [[120664, 120664], "mapped", [947]], [[120665, 120665], "mapped", [948]], [[120666, 120666], "mapped", [949]], [[120667, 120667], "mapped", [950]], [[120668, 120668], "mapped", [951]], [[120669, 120669], "mapped", [952]], [[120670, 120670], "mapped", [953]], [[120671, 120671], "mapped", [954]], [[120672, 120672], "mapped", [955]], [[120673, 120673], "mapped", [956]], [[120674, 120674], "mapped", [957]], [[120675, 120675], "mapped", [958]], [[120676, 120676], "mapped", [959]], [[120677, 120677], "mapped", [960]], [[120678, 120678], "mapped", [961]], [[120679, 120679], "mapped", [952]], [[120680, 120680], "mapped", [963]], [[120681, 120681], "mapped", [964]], [[120682, 120682], "mapped", [965]], [[120683, 120683], "mapped", [966]], [[120684, 120684], "mapped", [967]], [[120685, 120685], "mapped", [968]], [[120686, 120686], "mapped", [969]], [[120687, 120687], "mapped", [8711]], [[120688, 120688], "mapped", [945]], [[120689, 120689], "mapped", [946]], [[120690, 120690], "mapped", [947]], [[120691, 120691], "mapped", [948]], [[120692, 120692], "mapped", [949]], [[120693, 120693], "mapped", [950]], [[120694, 120694], "mapped", [951]], [[120695, 120695], "mapped", [952]], [[120696, 120696], "mapped", [953]], [[120697, 120697], "mapped", [954]], [[120698, 120698], "mapped", [955]], [[120699, 120699], "mapped", [956]], [[120700, 120700], "mapped", [957]], [[120701, 120701], "mapped", [958]], [[120702, 120702], "mapped", [959]], [[120703, 120703], "mapped", [960]], [[120704, 120704], "mapped", [961]], [[120705, 120706], "mapped", [963]], [[120707, 120707], "mapped", [964]], [[120708, 120708], "mapped", [965]], [[120709, 120709], "mapped", [966]], [[120710, 120710], "mapped", [967]], [[120711, 120711], "mapped", [968]], [[120712, 120712], "mapped", [969]], [[120713, 120713], "mapped", [8706]], [[120714, 120714], "mapped", [949]], [[120715, 120715], "mapped", [952]], [[120716, 120716], "mapped", [954]], [[120717, 120717], "mapped", [966]], [[120718, 120718], "mapped", [961]], [[120719, 120719], "mapped", [960]], [[120720, 120720], "mapped", [945]], [[120721, 120721], "mapped", [946]], [[120722, 120722], "mapped", [947]], [[120723, 120723], "mapped", [948]], [[120724, 120724], "mapped", [949]], [[120725, 120725], "mapped", [950]], [[120726, 120726], "mapped", [951]], [[120727, 120727], "mapped", [952]], [[120728, 120728], "mapped", [953]], [[120729, 120729], "mapped", [954]], [[120730, 120730], "mapped", [955]], [[120731, 120731], "mapped", [956]], [[120732, 120732], "mapped", [957]], [[120733, 120733], "mapped", [958]], [[120734, 120734], "mapped", [959]], [[120735, 120735], "mapped", [960]], [[120736, 120736], "mapped", [961]], [[120737, 120737], "mapped", [952]], [[120738, 120738], "mapped", [963]], [[120739, 120739], "mapped", [964]], [[120740, 120740], "mapped", [965]], [[120741, 120741], "mapped", [966]], [[120742, 120742], "mapped", [967]], [[120743, 120743], "mapped", [968]], [[120744, 120744], "mapped", [969]], [[120745, 120745], "mapped", [8711]], [[120746, 120746], "mapped", [945]], [[120747, 120747], "mapped", [946]], [[120748, 120748], "mapped", [947]], [[120749, 120749], "mapped", [948]], [[120750, 120750], "mapped", [949]], [[120751, 120751], "mapped", [950]], [[120752, 120752], "mapped", [951]], [[120753, 120753], "mapped", [952]], [[120754, 120754], "mapped", [953]], [[120755, 120755], "mapped", [954]], [[120756, 120756], "mapped", [955]], [[120757, 120757], "mapped", [956]], [[120758, 120758], "mapped", [957]], [[120759, 120759], "mapped", [958]], [[120760, 120760], "mapped", [959]], [[120761, 120761], "mapped", [960]], [[120762, 120762], "mapped", [961]], [[120763, 120764], "mapped", [963]], [[120765, 120765], "mapped", [964]], [[120766, 120766], "mapped", [965]], [[120767, 120767], "mapped", [966]], [[120768, 120768], "mapped", [967]], [[120769, 120769], "mapped", [968]], [[120770, 120770], "mapped", [969]], [[120771, 120771], "mapped", [8706]], [[120772, 120772], "mapped", [949]], [[120773, 120773], "mapped", [952]], [[120774, 120774], "mapped", [954]], [[120775, 120775], "mapped", [966]], [[120776, 120776], "mapped", [961]], [[120777, 120777], "mapped", [960]], [[120778, 120779], "mapped", [989]], [[120780, 120781], "disallowed"], [[120782, 120782], "mapped", [48]], [[120783, 120783], "mapped", [49]], [[120784, 120784], "mapped", [50]], [[120785, 120785], "mapped", [51]], [[120786, 120786], "mapped", [52]], [[120787, 120787], "mapped", [53]], [[120788, 120788], "mapped", [54]], [[120789, 120789], "mapped", [55]], [[120790, 120790], "mapped", [56]], [[120791, 120791], "mapped", [57]], [[120792, 120792], "mapped", [48]], [[120793, 120793], "mapped", [49]], [[120794, 120794], "mapped", [50]], [[120795, 120795], "mapped", [51]], [[120796, 120796], "mapped", [52]], [[120797, 120797], "mapped", [53]], [[120798, 120798], "mapped", [54]], [[120799, 120799], "mapped", [55]], [[120800, 120800], "mapped", [56]], [[120801, 120801], "mapped", [57]], [[120802, 120802], "mapped", [48]], [[120803, 120803], "mapped", [49]], [[120804, 120804], "mapped", [50]], [[120805, 120805], "mapped", [51]], [[120806, 120806], "mapped", [52]], [[120807, 120807], "mapped", [53]], [[120808, 120808], "mapped", [54]], [[120809, 120809], "mapped", [55]], [[120810, 120810], "mapped", [56]], [[120811, 120811], "mapped", [57]], [[120812, 120812], "mapped", [48]], [[120813, 120813], "mapped", [49]], [[120814, 120814], "mapped", [50]], [[120815, 120815], "mapped", [51]], [[120816, 120816], "mapped", [52]], [[120817, 120817], "mapped", [53]], [[120818, 120818], "mapped", [54]], [[120819, 120819], "mapped", [55]], [[120820, 120820], "mapped", [56]], [[120821, 120821], "mapped", [57]], [[120822, 120822], "mapped", [48]], [[120823, 120823], "mapped", [49]], [[120824, 120824], "mapped", [50]], [[120825, 120825], "mapped", [51]], [[120826, 120826], "mapped", [52]], [[120827, 120827], "mapped", [53]], [[120828, 120828], "mapped", [54]], [[120829, 120829], "mapped", [55]], [[120830, 120830], "mapped", [56]], [[120831, 120831], "mapped", [57]], [[120832, 121343], "valid", [], "NV8"], [[121344, 121398], "valid"], [[121399, 121402], "valid", [], "NV8"], [[121403, 121452], "valid"], [[121453, 121460], "valid", [], "NV8"], [[121461, 121461], "valid"], [[121462, 121475], "valid", [], "NV8"], [[121476, 121476], "valid"], [[121477, 121483], "valid", [], "NV8"], [[121484, 121498], "disallowed"], [[121499, 121503], "valid"], [[121504, 121504], "disallowed"], [[121505, 121519], "valid"], [[121520, 124927], "disallowed"], [[124928, 125124], "valid"], [[125125, 125126], "disallowed"], [[125127, 125135], "valid", [], "NV8"], [[125136, 125142], "valid"], [[125143, 126463], "disallowed"], [[126464, 126464], "mapped", [1575]], [[126465, 126465], "mapped", [1576]], [[126466, 126466], "mapped", [1580]], [[126467, 126467], "mapped", [1583]], [[126468, 126468], "disallowed"], [[126469, 126469], "mapped", [1608]], [[126470, 126470], "mapped", [1586]], [[126471, 126471], "mapped", [1581]], [[126472, 126472], "mapped", [1591]], [[126473, 126473], "mapped", [1610]], [[126474, 126474], "mapped", [1603]], [[126475, 126475], "mapped", [1604]], [[126476, 126476], "mapped", [1605]], [[126477, 126477], "mapped", [1606]], [[126478, 126478], "mapped", [1587]], [[126479, 126479], "mapped", [1593]], [[126480, 126480], "mapped", [1601]], [[126481, 126481], "mapped", [1589]], [[126482, 126482], "mapped", [1602]], [[126483, 126483], "mapped", [1585]], [[126484, 126484], "mapped", [1588]], [[126485, 126485], "mapped", [1578]], [[126486, 126486], "mapped", [1579]], [[126487, 126487], "mapped", [1582]], [[126488, 126488], "mapped", [1584]], [[126489, 126489], "mapped", [1590]], [[126490, 126490], "mapped", [1592]], [[126491, 126491], "mapped", [1594]], [[126492, 126492], "mapped", [1646]], [[126493, 126493], "mapped", [1722]], [[126494, 126494], "mapped", [1697]], [[126495, 126495], "mapped", [1647]], [[126496, 126496], "disallowed"], [[126497, 126497], "mapped", [1576]], [[126498, 126498], "mapped", [1580]], [[126499, 126499], "disallowed"], [[126500, 126500], "mapped", [1607]], [[126501, 126502], "disallowed"], [[126503, 126503], "mapped", [1581]], [[126504, 126504], "disallowed"], [[126505, 126505], "mapped", [1610]], [[126506, 126506], "mapped", [1603]], [[126507, 126507], "mapped", [1604]], [[126508, 126508], "mapped", [1605]], [[126509, 126509], "mapped", [1606]], [[126510, 126510], "mapped", [1587]], [[126511, 126511], "mapped", [1593]], [[126512, 126512], "mapped", [1601]], [[126513, 126513], "mapped", [1589]], [[126514, 126514], "mapped", [1602]], [[126515, 126515], "disallowed"], [[126516, 126516], "mapped", [1588]], [[126517, 126517], "mapped", [1578]], [[126518, 126518], "mapped", [1579]], [[126519, 126519], "mapped", [1582]], [[126520, 126520], "disallowed"], [[126521, 126521], "mapped", [1590]], [[126522, 126522], "disallowed"], [[126523, 126523], "mapped", [1594]], [[126524, 126529], "disallowed"], [[126530, 126530], "mapped", [1580]], [[126531, 126534], "disallowed"], [[126535, 126535], "mapped", [1581]], [[126536, 126536], "disallowed"], [[126537, 126537], "mapped", [1610]], [[126538, 126538], "disallowed"], [[126539, 126539], "mapped", [1604]], [[126540, 126540], "disallowed"], [[126541, 126541], "mapped", [1606]], [[126542, 126542], "mapped", [1587]], [[126543, 126543], "mapped", [1593]], [[126544, 126544], "disallowed"], [[126545, 126545], "mapped", [1589]], [[126546, 126546], "mapped", [1602]], [[126547, 126547], "disallowed"], [[126548, 126548], "mapped", [1588]], [[126549, 126550], "disallowed"], [[126551, 126551], "mapped", [1582]], [[126552, 126552], "disallowed"], [[126553, 126553], "mapped", [1590]], [[126554, 126554], "disallowed"], [[126555, 126555], "mapped", [1594]], [[126556, 126556], "disallowed"], [[126557, 126557], "mapped", [1722]], [[126558, 126558], "disallowed"], [[126559, 126559], "mapped", [1647]], [[126560, 126560], "disallowed"], [[126561, 126561], "mapped", [1576]], [[126562, 126562], "mapped", [1580]], [[126563, 126563], "disallowed"], [[126564, 126564], "mapped", [1607]], [[126565, 126566], "disallowed"], [[126567, 126567], "mapped", [1581]], [[126568, 126568], "mapped", [1591]], [[126569, 126569], "mapped", [1610]], [[126570, 126570], "mapped", [1603]], [[126571, 126571], "disallowed"], [[126572, 126572], "mapped", [1605]], [[126573, 126573], "mapped", [1606]], [[126574, 126574], "mapped", [1587]], [[126575, 126575], "mapped", [1593]], [[126576, 126576], "mapped", [1601]], [[126577, 126577], "mapped", [1589]], [[126578, 126578], "mapped", [1602]], [[126579, 126579], "disallowed"], [[126580, 126580], "mapped", [1588]], [[126581, 126581], "mapped", [1578]], [[126582, 126582], "mapped", [1579]], [[126583, 126583], "mapped", [1582]], [[126584, 126584], "disallowed"], [[126585, 126585], "mapped", [1590]], [[126586, 126586], "mapped", [1592]], [[126587, 126587], "mapped", [1594]], [[126588, 126588], "mapped", [1646]], [[126589, 126589], "disallowed"], [[126590, 126590], "mapped", [1697]], [[126591, 126591], "disallowed"], [[126592, 126592], "mapped", [1575]], [[126593, 126593], "mapped", [1576]], [[126594, 126594], "mapped", [1580]], [[126595, 126595], "mapped", [1583]], [[126596, 126596], "mapped", [1607]], [[126597, 126597], "mapped", [1608]], [[126598, 126598], "mapped", [1586]], [[126599, 126599], "mapped", [1581]], [[126600, 126600], "mapped", [1591]], [[126601, 126601], "mapped", [1610]], [[126602, 126602], "disallowed"], [[126603, 126603], "mapped", [1604]], [[126604, 126604], "mapped", [1605]], [[126605, 126605], "mapped", [1606]], [[126606, 126606], "mapped", [1587]], [[126607, 126607], "mapped", [1593]], [[126608, 126608], "mapped", [1601]], [[126609, 126609], "mapped", [1589]], [[126610, 126610], "mapped", [1602]], [[126611, 126611], "mapped", [1585]], [[126612, 126612], "mapped", [1588]], [[126613, 126613], "mapped", [1578]], [[126614, 126614], "mapped", [1579]], [[126615, 126615], "mapped", [1582]], [[126616, 126616], "mapped", [1584]], [[126617, 126617], "mapped", [1590]], [[126618, 126618], "mapped", [1592]], [[126619, 126619], "mapped", [1594]], [[126620, 126624], "disallowed"], [[126625, 126625], "mapped", [1576]], [[126626, 126626], "mapped", [1580]], [[126627, 126627], "mapped", [1583]], [[126628, 126628], "disallowed"], [[126629, 126629], "mapped", [1608]], [[126630, 126630], "mapped", [1586]], [[126631, 126631], "mapped", [1581]], [[126632, 126632], "mapped", [1591]], [[126633, 126633], "mapped", [1610]], [[126634, 126634], "disallowed"], [[126635, 126635], "mapped", [1604]], [[126636, 126636], "mapped", [1605]], [[126637, 126637], "mapped", [1606]], [[126638, 126638], "mapped", [1587]], [[126639, 126639], "mapped", [1593]], [[126640, 126640], "mapped", [1601]], [[126641, 126641], "mapped", [1589]], [[126642, 126642], "mapped", [1602]], [[126643, 126643], "mapped", [1585]], [[126644, 126644], "mapped", [1588]], [[126645, 126645], "mapped", [1578]], [[126646, 126646], "mapped", [1579]], [[126647, 126647], "mapped", [1582]], [[126648, 126648], "mapped", [1584]], [[126649, 126649], "mapped", [1590]], [[126650, 126650], "mapped", [1592]], [[126651, 126651], "mapped", [1594]], [[126652, 126703], "disallowed"], [[126704, 126705], "valid", [], "NV8"], [[126706, 126975], "disallowed"], [[126976, 127019], "valid", [], "NV8"], [[127020, 127023], "disallowed"], [[127024, 127123], "valid", [], "NV8"], [[127124, 127135], "disallowed"], [[127136, 127150], "valid", [], "NV8"], [[127151, 127152], "disallowed"], [[127153, 127166], "valid", [], "NV8"], [[127167, 127167], "valid", [], "NV8"], [[127168, 127168], "disallowed"], [[127169, 127183], "valid", [], "NV8"], [[127184, 127184], "disallowed"], [[127185, 127199], "valid", [], "NV8"], [[127200, 127221], "valid", [], "NV8"], [[127222, 127231], "disallowed"], [[127232, 127232], "disallowed"], [[127233, 127233], "disallowed_STD3_mapped", [48, 44]], [[127234, 127234], "disallowed_STD3_mapped", [49, 44]], [[127235, 127235], "disallowed_STD3_mapped", [50, 44]], [[127236, 127236], "disallowed_STD3_mapped", [51, 44]], [[127237, 127237], "disallowed_STD3_mapped", [52, 44]], [[127238, 127238], "disallowed_STD3_mapped", [53, 44]], [[127239, 127239], "disallowed_STD3_mapped", [54, 44]], [[127240, 127240], "disallowed_STD3_mapped", [55, 44]], [[127241, 127241], "disallowed_STD3_mapped", [56, 44]], [[127242, 127242], "disallowed_STD3_mapped", [57, 44]], [[127243, 127244], "valid", [], "NV8"], [[127245, 127247], "disallowed"], [[127248, 127248], "disallowed_STD3_mapped", [40, 97, 41]], [[127249, 127249], "disallowed_STD3_mapped", [40, 98, 41]], [[127250, 127250], "disallowed_STD3_mapped", [40, 99, 41]], [[127251, 127251], "disallowed_STD3_mapped", [40, 100, 41]], [[127252, 127252], "disallowed_STD3_mapped", [40, 101, 41]], [[127253, 127253], "disallowed_STD3_mapped", [40, 102, 41]], [[127254, 127254], "disallowed_STD3_mapped", [40, 103, 41]], [[127255, 127255], "disallowed_STD3_mapped", [40, 104, 41]], [[127256, 127256], "disallowed_STD3_mapped", [40, 105, 41]], [[127257, 127257], "disallowed_STD3_mapped", [40, 106, 41]], [[127258, 127258], "disallowed_STD3_mapped", [40, 107, 41]], [[127259, 127259], "disallowed_STD3_mapped", [40, 108, 41]], [[127260, 127260], "disallowed_STD3_mapped", [40, 109, 41]], [[127261, 127261], "disallowed_STD3_mapped", [40, 110, 41]], [[127262, 127262], "disallowed_STD3_mapped", [40, 111, 41]], [[127263, 127263], "disallowed_STD3_mapped", [40, 112, 41]], [[127264, 127264], "disallowed_STD3_mapped", [40, 113, 41]], [[127265, 127265], "disallowed_STD3_mapped", [40, 114, 41]], [[127266, 127266], "disallowed_STD3_mapped", [40, 115, 41]], [[127267, 127267], "disallowed_STD3_mapped", [40, 116, 41]], [[127268, 127268], "disallowed_STD3_mapped", [40, 117, 41]], [[127269, 127269], "disallowed_STD3_mapped", [40, 118, 41]], [[127270, 127270], "disallowed_STD3_mapped", [40, 119, 41]], [[127271, 127271], "disallowed_STD3_mapped", [40, 120, 41]], [[127272, 127272], "disallowed_STD3_mapped", [40, 121, 41]], [[127273, 127273], "disallowed_STD3_mapped", [40, 122, 41]], [[127274, 127274], "mapped", [12308, 115, 12309]], [[127275, 127275], "mapped", [99]], [[127276, 127276], "mapped", [114]], [[127277, 127277], "mapped", [99, 100]], [[127278, 127278], "mapped", [119, 122]], [[127279, 127279], "disallowed"], [[127280, 127280], "mapped", [97]], [[127281, 127281], "mapped", [98]], [[127282, 127282], "mapped", [99]], [[127283, 127283], "mapped", [100]], [[127284, 127284], "mapped", [101]], [[127285, 127285], "mapped", [102]], [[127286, 127286], "mapped", [103]], [[127287, 127287], "mapped", [104]], [[127288, 127288], "mapped", [105]], [[127289, 127289], "mapped", [106]], [[127290, 127290], "mapped", [107]], [[127291, 127291], "mapped", [108]], [[127292, 127292], "mapped", [109]], [[127293, 127293], "mapped", [110]], [[127294, 127294], "mapped", [111]], [[127295, 127295], "mapped", [112]], [[127296, 127296], "mapped", [113]], [[127297, 127297], "mapped", [114]], [[127298, 127298], "mapped", [115]], [[127299, 127299], "mapped", [116]], [[127300, 127300], "mapped", [117]], [[127301, 127301], "mapped", [118]], [[127302, 127302], "mapped", [119]], [[127303, 127303], "mapped", [120]], [[127304, 127304], "mapped", [121]], [[127305, 127305], "mapped", [122]], [[127306, 127306], "mapped", [104, 118]], [[127307, 127307], "mapped", [109, 118]], [[127308, 127308], "mapped", [115, 100]], [[127309, 127309], "mapped", [115, 115]], [[127310, 127310], "mapped", [112, 112, 118]], [[127311, 127311], "mapped", [119, 99]], [[127312, 127318], "valid", [], "NV8"], [[127319, 127319], "valid", [], "NV8"], [[127320, 127326], "valid", [], "NV8"], [[127327, 127327], "valid", [], "NV8"], [[127328, 127337], "valid", [], "NV8"], [[127338, 127338], "mapped", [109, 99]], [[127339, 127339], "mapped", [109, 100]], [[127340, 127343], "disallowed"], [[127344, 127352], "valid", [], "NV8"], [[127353, 127353], "valid", [], "NV8"], [[127354, 127354], "valid", [], "NV8"], [[127355, 127356], "valid", [], "NV8"], [[127357, 127358], "valid", [], "NV8"], [[127359, 127359], "valid", [], "NV8"], [[127360, 127369], "valid", [], "NV8"], [[127370, 127373], "valid", [], "NV8"], [[127374, 127375], "valid", [], "NV8"], [[127376, 127376], "mapped", [100, 106]], [[127377, 127386], "valid", [], "NV8"], [[127387, 127461], "disallowed"], [[127462, 127487], "valid", [], "NV8"], [[127488, 127488], "mapped", [12411, 12363]], [[127489, 127489], "mapped", [12467, 12467]], [[127490, 127490], "mapped", [12469]], [[127491, 127503], "disallowed"], [[127504, 127504], "mapped", [25163]], [[127505, 127505], "mapped", [23383]], [[127506, 127506], "mapped", [21452]], [[127507, 127507], "mapped", [12487]], [[127508, 127508], "mapped", [20108]], [[127509, 127509], "mapped", [22810]], [[127510, 127510], "mapped", [35299]], [[127511, 127511], "mapped", [22825]], [[127512, 127512], "mapped", [20132]], [[127513, 127513], "mapped", [26144]], [[127514, 127514], "mapped", [28961]], [[127515, 127515], "mapped", [26009]], [[127516, 127516], "mapped", [21069]], [[127517, 127517], "mapped", [24460]], [[127518, 127518], "mapped", [20877]], [[127519, 127519], "mapped", [26032]], [[127520, 127520], "mapped", [21021]], [[127521, 127521], "mapped", [32066]], [[127522, 127522], "mapped", [29983]], [[127523, 127523], "mapped", [36009]], [[127524, 127524], "mapped", [22768]], [[127525, 127525], "mapped", [21561]], [[127526, 127526], "mapped", [28436]], [[127527, 127527], "mapped", [25237]], [[127528, 127528], "mapped", [25429]], [[127529, 127529], "mapped", [19968]], [[127530, 127530], "mapped", [19977]], [[127531, 127531], "mapped", [36938]], [[127532, 127532], "mapped", [24038]], [[127533, 127533], "mapped", [20013]], [[127534, 127534], "mapped", [21491]], [[127535, 127535], "mapped", [25351]], [[127536, 127536], "mapped", [36208]], [[127537, 127537], "mapped", [25171]], [[127538, 127538], "mapped", [31105]], [[127539, 127539], "mapped", [31354]], [[127540, 127540], "mapped", [21512]], [[127541, 127541], "mapped", [28288]], [[127542, 127542], "mapped", [26377]], [[127543, 127543], "mapped", [26376]], [[127544, 127544], "mapped", [30003]], [[127545, 127545], "mapped", [21106]], [[127546, 127546], "mapped", [21942]], [[127547, 127551], "disallowed"], [[127552, 127552], "mapped", [12308, 26412, 12309]], [[127553, 127553], "mapped", [12308, 19977, 12309]], [[127554, 127554], "mapped", [12308, 20108, 12309]], [[127555, 127555], "mapped", [12308, 23433, 12309]], [[127556, 127556], "mapped", [12308, 28857, 12309]], [[127557, 127557], "mapped", [12308, 25171, 12309]], [[127558, 127558], "mapped", [12308, 30423, 12309]], [[127559, 127559], "mapped", [12308, 21213, 12309]], [[127560, 127560], "mapped", [12308, 25943, 12309]], [[127561, 127567], "disallowed"], [[127568, 127568], "mapped", [24471]], [[127569, 127569], "mapped", [21487]], [[127570, 127743], "disallowed"], [[127744, 127776], "valid", [], "NV8"], [[127777, 127788], "valid", [], "NV8"], [[127789, 127791], "valid", [], "NV8"], [[127792, 127797], "valid", [], "NV8"], [[127798, 127798], "valid", [], "NV8"], [[127799, 127868], "valid", [], "NV8"], [[127869, 127869], "valid", [], "NV8"], [[127870, 127871], "valid", [], "NV8"], [[127872, 127891], "valid", [], "NV8"], [[127892, 127903], "valid", [], "NV8"], [[127904, 127940], "valid", [], "NV8"], [[127941, 127941], "valid", [], "NV8"], [[127942, 127946], "valid", [], "NV8"], [[127947, 127950], "valid", [], "NV8"], [[127951, 127955], "valid", [], "NV8"], [[127956, 127967], "valid", [], "NV8"], [[127968, 127984], "valid", [], "NV8"], [[127985, 127991], "valid", [], "NV8"], [[127992, 127999], "valid", [], "NV8"], [[128e3, 128062], "valid", [], "NV8"], [[128063, 128063], "valid", [], "NV8"], [[128064, 128064], "valid", [], "NV8"], [[128065, 128065], "valid", [], "NV8"], [[128066, 128247], "valid", [], "NV8"], [[128248, 128248], "valid", [], "NV8"], [[128249, 128252], "valid", [], "NV8"], [[128253, 128254], "valid", [], "NV8"], [[128255, 128255], "valid", [], "NV8"], [[128256, 128317], "valid", [], "NV8"], [[128318, 128319], "valid", [], "NV8"], [[128320, 128323], "valid", [], "NV8"], [[128324, 128330], "valid", [], "NV8"], [[128331, 128335], "valid", [], "NV8"], [[128336, 128359], "valid", [], "NV8"], [[128360, 128377], "valid", [], "NV8"], [[128378, 128378], "disallowed"], [[128379, 128419], "valid", [], "NV8"], [[128420, 128420], "disallowed"], [[128421, 128506], "valid", [], "NV8"], [[128507, 128511], "valid", [], "NV8"], [[128512, 128512], "valid", [], "NV8"], [[128513, 128528], "valid", [], "NV8"], [[128529, 128529], "valid", [], "NV8"], [[128530, 128532], "valid", [], "NV8"], [[128533, 128533], "valid", [], "NV8"], [[128534, 128534], "valid", [], "NV8"], [[128535, 128535], "valid", [], "NV8"], [[128536, 128536], "valid", [], "NV8"], [[128537, 128537], "valid", [], "NV8"], [[128538, 128538], "valid", [], "NV8"], [[128539, 128539], "valid", [], "NV8"], [[128540, 128542], "valid", [], "NV8"], [[128543, 128543], "valid", [], "NV8"], [[128544, 128549], "valid", [], "NV8"], [[128550, 128551], "valid", [], "NV8"], [[128552, 128555], "valid", [], "NV8"], [[128556, 128556], "valid", [], "NV8"], [[128557, 128557], "valid", [], "NV8"], [[128558, 128559], "valid", [], "NV8"], [[128560, 128563], "valid", [], "NV8"], [[128564, 128564], "valid", [], "NV8"], [[128565, 128576], "valid", [], "NV8"], [[128577, 128578], "valid", [], "NV8"], [[128579, 128580], "valid", [], "NV8"], [[128581, 128591], "valid", [], "NV8"], [[128592, 128639], "valid", [], "NV8"], [[128640, 128709], "valid", [], "NV8"], [[128710, 128719], "valid", [], "NV8"], [[128720, 128720], "valid", [], "NV8"], [[128721, 128735], "disallowed"], [[128736, 128748], "valid", [], "NV8"], [[128749, 128751], "disallowed"], [[128752, 128755], "valid", [], "NV8"], [[128756, 128767], "disallowed"], [[128768, 128883], "valid", [], "NV8"], [[128884, 128895], "disallowed"], [[128896, 128980], "valid", [], "NV8"], [[128981, 129023], "disallowed"], [[129024, 129035], "valid", [], "NV8"], [[129036, 129039], "disallowed"], [[129040, 129095], "valid", [], "NV8"], [[129096, 129103], "disallowed"], [[129104, 129113], "valid", [], "NV8"], [[129114, 129119], "disallowed"], [[129120, 129159], "valid", [], "NV8"], [[129160, 129167], "disallowed"], [[129168, 129197], "valid", [], "NV8"], [[129198, 129295], "disallowed"], [[129296, 129304], "valid", [], "NV8"], [[129305, 129407], "disallowed"], [[129408, 129412], "valid", [], "NV8"], [[129413, 129471], "disallowed"], [[129472, 129472], "valid", [], "NV8"], [[129473, 131069], "disallowed"], [[131070, 131071], "disallowed"], [[131072, 173782], "valid"], [[173783, 173823], "disallowed"], [[173824, 177972], "valid"], [[177973, 177983], "disallowed"], [[177984, 178205], "valid"], [[178206, 178207], "disallowed"], [[178208, 183969], "valid"], [[183970, 194559], "disallowed"], [[194560, 194560], "mapped", [20029]], [[194561, 194561], "mapped", [20024]], [[194562, 194562], "mapped", [20033]], [[194563, 194563], "mapped", [131362]], [[194564, 194564], "mapped", [20320]], [[194565, 194565], "mapped", [20398]], [[194566, 194566], "mapped", [20411]], [[194567, 194567], "mapped", [20482]], [[194568, 194568], "mapped", [20602]], [[194569, 194569], "mapped", [20633]], [[194570, 194570], "mapped", [20711]], [[194571, 194571], "mapped", [20687]], [[194572, 194572], "mapped", [13470]], [[194573, 194573], "mapped", [132666]], [[194574, 194574], "mapped", [20813]], [[194575, 194575], "mapped", [20820]], [[194576, 194576], "mapped", [20836]], [[194577, 194577], "mapped", [20855]], [[194578, 194578], "mapped", [132380]], [[194579, 194579], "mapped", [13497]], [[194580, 194580], "mapped", [20839]], [[194581, 194581], "mapped", [20877]], [[194582, 194582], "mapped", [132427]], [[194583, 194583], "mapped", [20887]], [[194584, 194584], "mapped", [20900]], [[194585, 194585], "mapped", [20172]], [[194586, 194586], "mapped", [20908]], [[194587, 194587], "mapped", [20917]], [[194588, 194588], "mapped", [168415]], [[194589, 194589], "mapped", [20981]], [[194590, 194590], "mapped", [20995]], [[194591, 194591], "mapped", [13535]], [[194592, 194592], "mapped", [21051]], [[194593, 194593], "mapped", [21062]], [[194594, 194594], "mapped", [21106]], [[194595, 194595], "mapped", [21111]], [[194596, 194596], "mapped", [13589]], [[194597, 194597], "mapped", [21191]], [[194598, 194598], "mapped", [21193]], [[194599, 194599], "mapped", [21220]], [[194600, 194600], "mapped", [21242]], [[194601, 194601], "mapped", [21253]], [[194602, 194602], "mapped", [21254]], [[194603, 194603], "mapped", [21271]], [[194604, 194604], "mapped", [21321]], [[194605, 194605], "mapped", [21329]], [[194606, 194606], "mapped", [21338]], [[194607, 194607], "mapped", [21363]], [[194608, 194608], "mapped", [21373]], [[194609, 194611], "mapped", [21375]], [[194612, 194612], "mapped", [133676]], [[194613, 194613], "mapped", [28784]], [[194614, 194614], "mapped", [21450]], [[194615, 194615], "mapped", [21471]], [[194616, 194616], "mapped", [133987]], [[194617, 194617], "mapped", [21483]], [[194618, 194618], "mapped", [21489]], [[194619, 194619], "mapped", [21510]], [[194620, 194620], "mapped", [21662]], [[194621, 194621], "mapped", [21560]], [[194622, 194622], "mapped", [21576]], [[194623, 194623], "mapped", [21608]], [[194624, 194624], "mapped", [21666]], [[194625, 194625], "mapped", [21750]], [[194626, 194626], "mapped", [21776]], [[194627, 194627], "mapped", [21843]], [[194628, 194628], "mapped", [21859]], [[194629, 194630], "mapped", [21892]], [[194631, 194631], "mapped", [21913]], [[194632, 194632], "mapped", [21931]], [[194633, 194633], "mapped", [21939]], [[194634, 194634], "mapped", [21954]], [[194635, 194635], "mapped", [22294]], [[194636, 194636], "mapped", [22022]], [[194637, 194637], "mapped", [22295]], [[194638, 194638], "mapped", [22097]], [[194639, 194639], "mapped", [22132]], [[194640, 194640], "mapped", [20999]], [[194641, 194641], "mapped", [22766]], [[194642, 194642], "mapped", [22478]], [[194643, 194643], "mapped", [22516]], [[194644, 194644], "mapped", [22541]], [[194645, 194645], "mapped", [22411]], [[194646, 194646], "mapped", [22578]], [[194647, 194647], "mapped", [22577]], [[194648, 194648], "mapped", [22700]], [[194649, 194649], "mapped", [136420]], [[194650, 194650], "mapped", [22770]], [[194651, 194651], "mapped", [22775]], [[194652, 194652], "mapped", [22790]], [[194653, 194653], "mapped", [22810]], [[194654, 194654], "mapped", [22818]], [[194655, 194655], "mapped", [22882]], [[194656, 194656], "mapped", [136872]], [[194657, 194657], "mapped", [136938]], [[194658, 194658], "mapped", [23020]], [[194659, 194659], "mapped", [23067]], [[194660, 194660], "mapped", [23079]], [[194661, 194661], "mapped", [23e3]], [[194662, 194662], "mapped", [23142]], [[194663, 194663], "mapped", [14062]], [[194664, 194664], "disallowed"], [[194665, 194665], "mapped", [23304]], [[194666, 194667], "mapped", [23358]], [[194668, 194668], "mapped", [137672]], [[194669, 194669], "mapped", [23491]], [[194670, 194670], "mapped", [23512]], [[194671, 194671], "mapped", [23527]], [[194672, 194672], "mapped", [23539]], [[194673, 194673], "mapped", [138008]], [[194674, 194674], "mapped", [23551]], [[194675, 194675], "mapped", [23558]], [[194676, 194676], "disallowed"], [[194677, 194677], "mapped", [23586]], [[194678, 194678], "mapped", [14209]], [[194679, 194679], "mapped", [23648]], [[194680, 194680], "mapped", [23662]], [[194681, 194681], "mapped", [23744]], [[194682, 194682], "mapped", [23693]], [[194683, 194683], "mapped", [138724]], [[194684, 194684], "mapped", [23875]], [[194685, 194685], "mapped", [138726]], [[194686, 194686], "mapped", [23918]], [[194687, 194687], "mapped", [23915]], [[194688, 194688], "mapped", [23932]], [[194689, 194689], "mapped", [24033]], [[194690, 194690], "mapped", [24034]], [[194691, 194691], "mapped", [14383]], [[194692, 194692], "mapped", [24061]], [[194693, 194693], "mapped", [24104]], [[194694, 194694], "mapped", [24125]], [[194695, 194695], "mapped", [24169]], [[194696, 194696], "mapped", [14434]], [[194697, 194697], "mapped", [139651]], [[194698, 194698], "mapped", [14460]], [[194699, 194699], "mapped", [24240]], [[194700, 194700], "mapped", [24243]], [[194701, 194701], "mapped", [24246]], [[194702, 194702], "mapped", [24266]], [[194703, 194703], "mapped", [172946]], [[194704, 194704], "mapped", [24318]], [[194705, 194706], "mapped", [140081]], [[194707, 194707], "mapped", [33281]], [[194708, 194709], "mapped", [24354]], [[194710, 194710], "mapped", [14535]], [[194711, 194711], "mapped", [144056]], [[194712, 194712], "mapped", [156122]], [[194713, 194713], "mapped", [24418]], [[194714, 194714], "mapped", [24427]], [[194715, 194715], "mapped", [14563]], [[194716, 194716], "mapped", [24474]], [[194717, 194717], "mapped", [24525]], [[194718, 194718], "mapped", [24535]], [[194719, 194719], "mapped", [24569]], [[194720, 194720], "mapped", [24705]], [[194721, 194721], "mapped", [14650]], [[194722, 194722], "mapped", [14620]], [[194723, 194723], "mapped", [24724]], [[194724, 194724], "mapped", [141012]], [[194725, 194725], "mapped", [24775]], [[194726, 194726], "mapped", [24904]], [[194727, 194727], "mapped", [24908]], [[194728, 194728], "mapped", [24910]], [[194729, 194729], "mapped", [24908]], [[194730, 194730], "mapped", [24954]], [[194731, 194731], "mapped", [24974]], [[194732, 194732], "mapped", [25010]], [[194733, 194733], "mapped", [24996]], [[194734, 194734], "mapped", [25007]], [[194735, 194735], "mapped", [25054]], [[194736, 194736], "mapped", [25074]], [[194737, 194737], "mapped", [25078]], [[194738, 194738], "mapped", [25104]], [[194739, 194739], "mapped", [25115]], [[194740, 194740], "mapped", [25181]], [[194741, 194741], "mapped", [25265]], [[194742, 194742], "mapped", [25300]], [[194743, 194743], "mapped", [25424]], [[194744, 194744], "mapped", [142092]], [[194745, 194745], "mapped", [25405]], [[194746, 194746], "mapped", [25340]], [[194747, 194747], "mapped", [25448]], [[194748, 194748], "mapped", [25475]], [[194749, 194749], "mapped", [25572]], [[194750, 194750], "mapped", [142321]], [[194751, 194751], "mapped", [25634]], [[194752, 194752], "mapped", [25541]], [[194753, 194753], "mapped", [25513]], [[194754, 194754], "mapped", [14894]], [[194755, 194755], "mapped", [25705]], [[194756, 194756], "mapped", [25726]], [[194757, 194757], "mapped", [25757]], [[194758, 194758], "mapped", [25719]], [[194759, 194759], "mapped", [14956]], [[194760, 194760], "mapped", [25935]], [[194761, 194761], "mapped", [25964]], [[194762, 194762], "mapped", [143370]], [[194763, 194763], "mapped", [26083]], [[194764, 194764], "mapped", [26360]], [[194765, 194765], "mapped", [26185]], [[194766, 194766], "mapped", [15129]], [[194767, 194767], "mapped", [26257]], [[194768, 194768], "mapped", [15112]], [[194769, 194769], "mapped", [15076]], [[194770, 194770], "mapped", [20882]], [[194771, 194771], "mapped", [20885]], [[194772, 194772], "mapped", [26368]], [[194773, 194773], "mapped", [26268]], [[194774, 194774], "mapped", [32941]], [[194775, 194775], "mapped", [17369]], [[194776, 194776], "mapped", [26391]], [[194777, 194777], "mapped", [26395]], [[194778, 194778], "mapped", [26401]], [[194779, 194779], "mapped", [26462]], [[194780, 194780], "mapped", [26451]], [[194781, 194781], "mapped", [144323]], [[194782, 194782], "mapped", [15177]], [[194783, 194783], "mapped", [26618]], [[194784, 194784], "mapped", [26501]], [[194785, 194785], "mapped", [26706]], [[194786, 194786], "mapped", [26757]], [[194787, 194787], "mapped", [144493]], [[194788, 194788], "mapped", [26766]], [[194789, 194789], "mapped", [26655]], [[194790, 194790], "mapped", [26900]], [[194791, 194791], "mapped", [15261]], [[194792, 194792], "mapped", [26946]], [[194793, 194793], "mapped", [27043]], [[194794, 194794], "mapped", [27114]], [[194795, 194795], "mapped", [27304]], [[194796, 194796], "mapped", [145059]], [[194797, 194797], "mapped", [27355]], [[194798, 194798], "mapped", [15384]], [[194799, 194799], "mapped", [27425]], [[194800, 194800], "mapped", [145575]], [[194801, 194801], "mapped", [27476]], [[194802, 194802], "mapped", [15438]], [[194803, 194803], "mapped", [27506]], [[194804, 194804], "mapped", [27551]], [[194805, 194805], "mapped", [27578]], [[194806, 194806], "mapped", [27579]], [[194807, 194807], "mapped", [146061]], [[194808, 194808], "mapped", [138507]], [[194809, 194809], "mapped", [146170]], [[194810, 194810], "mapped", [27726]], [[194811, 194811], "mapped", [146620]], [[194812, 194812], "mapped", [27839]], [[194813, 194813], "mapped", [27853]], [[194814, 194814], "mapped", [27751]], [[194815, 194815], "mapped", [27926]], [[194816, 194816], "mapped", [27966]], [[194817, 194817], "mapped", [28023]], [[194818, 194818], "mapped", [27969]], [[194819, 194819], "mapped", [28009]], [[194820, 194820], "mapped", [28024]], [[194821, 194821], "mapped", [28037]], [[194822, 194822], "mapped", [146718]], [[194823, 194823], "mapped", [27956]], [[194824, 194824], "mapped", [28207]], [[194825, 194825], "mapped", [28270]], [[194826, 194826], "mapped", [15667]], [[194827, 194827], "mapped", [28363]], [[194828, 194828], "mapped", [28359]], [[194829, 194829], "mapped", [147153]], [[194830, 194830], "mapped", [28153]], [[194831, 194831], "mapped", [28526]], [[194832, 194832], "mapped", [147294]], [[194833, 194833], "mapped", [147342]], [[194834, 194834], "mapped", [28614]], [[194835, 194835], "mapped", [28729]], [[194836, 194836], "mapped", [28702]], [[194837, 194837], "mapped", [28699]], [[194838, 194838], "mapped", [15766]], [[194839, 194839], "mapped", [28746]], [[194840, 194840], "mapped", [28797]], [[194841, 194841], "mapped", [28791]], [[194842, 194842], "mapped", [28845]], [[194843, 194843], "mapped", [132389]], [[194844, 194844], "mapped", [28997]], [[194845, 194845], "mapped", [148067]], [[194846, 194846], "mapped", [29084]], [[194847, 194847], "disallowed"], [[194848, 194848], "mapped", [29224]], [[194849, 194849], "mapped", [29237]], [[194850, 194850], "mapped", [29264]], [[194851, 194851], "mapped", [149e3]], [[194852, 194852], "mapped", [29312]], [[194853, 194853], "mapped", [29333]], [[194854, 194854], "mapped", [149301]], [[194855, 194855], "mapped", [149524]], [[194856, 194856], "mapped", [29562]], [[194857, 194857], "mapped", [29579]], [[194858, 194858], "mapped", [16044]], [[194859, 194859], "mapped", [29605]], [[194860, 194861], "mapped", [16056]], [[194862, 194862], "mapped", [29767]], [[194863, 194863], "mapped", [29788]], [[194864, 194864], "mapped", [29809]], [[194865, 194865], "mapped", [29829]], [[194866, 194866], "mapped", [29898]], [[194867, 194867], "mapped", [16155]], [[194868, 194868], "mapped", [29988]], [[194869, 194869], "mapped", [150582]], [[194870, 194870], "mapped", [30014]], [[194871, 194871], "mapped", [150674]], [[194872, 194872], "mapped", [30064]], [[194873, 194873], "mapped", [139679]], [[194874, 194874], "mapped", [30224]], [[194875, 194875], "mapped", [151457]], [[194876, 194876], "mapped", [151480]], [[194877, 194877], "mapped", [151620]], [[194878, 194878], "mapped", [16380]], [[194879, 194879], "mapped", [16392]], [[194880, 194880], "mapped", [30452]], [[194881, 194881], "mapped", [151795]], [[194882, 194882], "mapped", [151794]], [[194883, 194883], "mapped", [151833]], [[194884, 194884], "mapped", [151859]], [[194885, 194885], "mapped", [30494]], [[194886, 194887], "mapped", [30495]], [[194888, 194888], "mapped", [30538]], [[194889, 194889], "mapped", [16441]], [[194890, 194890], "mapped", [30603]], [[194891, 194891], "mapped", [16454]], [[194892, 194892], "mapped", [16534]], [[194893, 194893], "mapped", [152605]], [[194894, 194894], "mapped", [30798]], [[194895, 194895], "mapped", [30860]], [[194896, 194896], "mapped", [30924]], [[194897, 194897], "mapped", [16611]], [[194898, 194898], "mapped", [153126]], [[194899, 194899], "mapped", [31062]], [[194900, 194900], "mapped", [153242]], [[194901, 194901], "mapped", [153285]], [[194902, 194902], "mapped", [31119]], [[194903, 194903], "mapped", [31211]], [[194904, 194904], "mapped", [16687]], [[194905, 194905], "mapped", [31296]], [[194906, 194906], "mapped", [31306]], [[194907, 194907], "mapped", [31311]], [[194908, 194908], "mapped", [153980]], [[194909, 194910], "mapped", [154279]], [[194911, 194911], "disallowed"], [[194912, 194912], "mapped", [16898]], [[194913, 194913], "mapped", [154539]], [[194914, 194914], "mapped", [31686]], [[194915, 194915], "mapped", [31689]], [[194916, 194916], "mapped", [16935]], [[194917, 194917], "mapped", [154752]], [[194918, 194918], "mapped", [31954]], [[194919, 194919], "mapped", [17056]], [[194920, 194920], "mapped", [31976]], [[194921, 194921], "mapped", [31971]], [[194922, 194922], "mapped", [32e3]], [[194923, 194923], "mapped", [155526]], [[194924, 194924], "mapped", [32099]], [[194925, 194925], "mapped", [17153]], [[194926, 194926], "mapped", [32199]], [[194927, 194927], "mapped", [32258]], [[194928, 194928], "mapped", [32325]], [[194929, 194929], "mapped", [17204]], [[194930, 194930], "mapped", [156200]], [[194931, 194931], "mapped", [156231]], [[194932, 194932], "mapped", [17241]], [[194933, 194933], "mapped", [156377]], [[194934, 194934], "mapped", [32634]], [[194935, 194935], "mapped", [156478]], [[194936, 194936], "mapped", [32661]], [[194937, 194937], "mapped", [32762]], [[194938, 194938], "mapped", [32773]], [[194939, 194939], "mapped", [156890]], [[194940, 194940], "mapped", [156963]], [[194941, 194941], "mapped", [32864]], [[194942, 194942], "mapped", [157096]], [[194943, 194943], "mapped", [32880]], [[194944, 194944], "mapped", [144223]], [[194945, 194945], "mapped", [17365]], [[194946, 194946], "mapped", [32946]], [[194947, 194947], "mapped", [33027]], [[194948, 194948], "mapped", [17419]], [[194949, 194949], "mapped", [33086]], [[194950, 194950], "mapped", [23221]], [[194951, 194951], "mapped", [157607]], [[194952, 194952], "mapped", [157621]], [[194953, 194953], "mapped", [144275]], [[194954, 194954], "mapped", [144284]], [[194955, 194955], "mapped", [33281]], [[194956, 194956], "mapped", [33284]], [[194957, 194957], "mapped", [36766]], [[194958, 194958], "mapped", [17515]], [[194959, 194959], "mapped", [33425]], [[194960, 194960], "mapped", [33419]], [[194961, 194961], "mapped", [33437]], [[194962, 194962], "mapped", [21171]], [[194963, 194963], "mapped", [33457]], [[194964, 194964], "mapped", [33459]], [[194965, 194965], "mapped", [33469]], [[194966, 194966], "mapped", [33510]], [[194967, 194967], "mapped", [158524]], [[194968, 194968], "mapped", [33509]], [[194969, 194969], "mapped", [33565]], [[194970, 194970], "mapped", [33635]], [[194971, 194971], "mapped", [33709]], [[194972, 194972], "mapped", [33571]], [[194973, 194973], "mapped", [33725]], [[194974, 194974], "mapped", [33767]], [[194975, 194975], "mapped", [33879]], [[194976, 194976], "mapped", [33619]], [[194977, 194977], "mapped", [33738]], [[194978, 194978], "mapped", [33740]], [[194979, 194979], "mapped", [33756]], [[194980, 194980], "mapped", [158774]], [[194981, 194981], "mapped", [159083]], [[194982, 194982], "mapped", [158933]], [[194983, 194983], "mapped", [17707]], [[194984, 194984], "mapped", [34033]], [[194985, 194985], "mapped", [34035]], [[194986, 194986], "mapped", [34070]], [[194987, 194987], "mapped", [160714]], [[194988, 194988], "mapped", [34148]], [[194989, 194989], "mapped", [159532]], [[194990, 194990], "mapped", [17757]], [[194991, 194991], "mapped", [17761]], [[194992, 194992], "mapped", [159665]], [[194993, 194993], "mapped", [159954]], [[194994, 194994], "mapped", [17771]], [[194995, 194995], "mapped", [34384]], [[194996, 194996], "mapped", [34396]], [[194997, 194997], "mapped", [34407]], [[194998, 194998], "mapped", [34409]], [[194999, 194999], "mapped", [34473]], [[195e3, 195e3], "mapped", [34440]], [[195001, 195001], "mapped", [34574]], [[195002, 195002], "mapped", [34530]], [[195003, 195003], "mapped", [34681]], [[195004, 195004], "mapped", [34600]], [[195005, 195005], "mapped", [34667]], [[195006, 195006], "mapped", [34694]], [[195007, 195007], "disallowed"], [[195008, 195008], "mapped", [34785]], [[195009, 195009], "mapped", [34817]], [[195010, 195010], "mapped", [17913]], [[195011, 195011], "mapped", [34912]], [[195012, 195012], "mapped", [34915]], [[195013, 195013], "mapped", [161383]], [[195014, 195014], "mapped", [35031]], [[195015, 195015], "mapped", [35038]], [[195016, 195016], "mapped", [17973]], [[195017, 195017], "mapped", [35066]], [[195018, 195018], "mapped", [13499]], [[195019, 195019], "mapped", [161966]], [[195020, 195020], "mapped", [162150]], [[195021, 195021], "mapped", [18110]], [[195022, 195022], "mapped", [18119]], [[195023, 195023], "mapped", [35488]], [[195024, 195024], "mapped", [35565]], [[195025, 195025], "mapped", [35722]], [[195026, 195026], "mapped", [35925]], [[195027, 195027], "mapped", [162984]], [[195028, 195028], "mapped", [36011]], [[195029, 195029], "mapped", [36033]], [[195030, 195030], "mapped", [36123]], [[195031, 195031], "mapped", [36215]], [[195032, 195032], "mapped", [163631]], [[195033, 195033], "mapped", [133124]], [[195034, 195034], "mapped", [36299]], [[195035, 195035], "mapped", [36284]], [[195036, 195036], "mapped", [36336]], [[195037, 195037], "mapped", [133342]], [[195038, 195038], "mapped", [36564]], [[195039, 195039], "mapped", [36664]], [[195040, 195040], "mapped", [165330]], [[195041, 195041], "mapped", [165357]], [[195042, 195042], "mapped", [37012]], [[195043, 195043], "mapped", [37105]], [[195044, 195044], "mapped", [37137]], [[195045, 195045], "mapped", [165678]], [[195046, 195046], "mapped", [37147]], [[195047, 195047], "mapped", [37432]], [[195048, 195048], "mapped", [37591]], [[195049, 195049], "mapped", [37592]], [[195050, 195050], "mapped", [37500]], [[195051, 195051], "mapped", [37881]], [[195052, 195052], "mapped", [37909]], [[195053, 195053], "mapped", [166906]], [[195054, 195054], "mapped", [38283]], [[195055, 195055], "mapped", [18837]], [[195056, 195056], "mapped", [38327]], [[195057, 195057], "mapped", [167287]], [[195058, 195058], "mapped", [18918]], [[195059, 195059], "mapped", [38595]], [[195060, 195060], "mapped", [23986]], [[195061, 195061], "mapped", [38691]], [[195062, 195062], "mapped", [168261]], [[195063, 195063], "mapped", [168474]], [[195064, 195064], "mapped", [19054]], [[195065, 195065], "mapped", [19062]], [[195066, 195066], "mapped", [38880]], [[195067, 195067], "mapped", [168970]], [[195068, 195068], "mapped", [19122]], [[195069, 195069], "mapped", [169110]], [[195070, 195071], "mapped", [38923]], [[195072, 195072], "mapped", [38953]], [[195073, 195073], "mapped", [169398]], [[195074, 195074], "mapped", [39138]], [[195075, 195075], "mapped", [19251]], [[195076, 195076], "mapped", [39209]], [[195077, 195077], "mapped", [39335]], [[195078, 195078], "mapped", [39362]], [[195079, 195079], "mapped", [39422]], [[195080, 195080], "mapped", [19406]], [[195081, 195081], "mapped", [170800]], [[195082, 195082], "mapped", [39698]], [[195083, 195083], "mapped", [4e4]], [[195084, 195084], "mapped", [40189]], [[195085, 195085], "mapped", [19662]], [[195086, 195086], "mapped", [19693]], [[195087, 195087], "mapped", [40295]], [[195088, 195088], "mapped", [172238]], [[195089, 195089], "mapped", [19704]], [[195090, 195090], "mapped", [172293]], [[195091, 195091], "mapped", [172558]], [[195092, 195092], "mapped", [172689]], [[195093, 195093], "mapped", [40635]], [[195094, 195094], "mapped", [19798]], [[195095, 195095], "mapped", [40697]], [[195096, 195096], "mapped", [40702]], [[195097, 195097], "mapped", [40709]], [[195098, 195098], "mapped", [40719]], [[195099, 195099], "mapped", [40726]], [[195100, 195100], "mapped", [40763]], [[195101, 195101], "mapped", [173568]], [[195102, 196605], "disallowed"], [[196606, 196607], "disallowed"], [[196608, 262141], "disallowed"], [[262142, 262143], "disallowed"], [[262144, 327677], "disallowed"], [[327678, 327679], "disallowed"], [[327680, 393213], "disallowed"], [[393214, 393215], "disallowed"], [[393216, 458749], "disallowed"], [[458750, 458751], "disallowed"], [[458752, 524285], "disallowed"], [[524286, 524287], "disallowed"], [[524288, 589821], "disallowed"], [[589822, 589823], "disallowed"], [[589824, 655357], "disallowed"], [[655358, 655359], "disallowed"], [[655360, 720893], "disallowed"], [[720894, 720895], "disallowed"], [[720896, 786429], "disallowed"], [[786430, 786431], "disallowed"], [[786432, 851965], "disallowed"], [[851966, 851967], "disallowed"], [[851968, 917501], "disallowed"], [[917502, 917503], "disallowed"], [[917504, 917504], "disallowed"], [[917505, 917505], "disallowed"], [[917506, 917535], "disallowed"], [[917536, 917631], "disallowed"], [[917632, 917759], "disallowed"], [[917760, 917999], "ignored"], [[918e3, 983037], "disallowed"], [[983038, 983039], "disallowed"], [[983040, 1048573], "disallowed"], [[1048574, 1048575], "disallowed"], [[1048576, 1114109], "disallowed"], [[1114110, 1114111], "disallowed"]];
  }
});

// node_modules/tr46/index.js
var require_tr46 = __commonJS({
  "node_modules/tr46/index.js"(exports2, module2) {
    "use strict";
    var punycode = require("punycode");
    var mappingTable = require_mappingTable();
    var PROCESSING_OPTIONS = {
      TRANSITIONAL: 0,
      NONTRANSITIONAL: 1
    };
    function normalize(str) {
      return str.split("\0").map(function(s) {
        return s.normalize("NFC");
      }).join("\0");
    }
    function findStatus(val) {
      var start = 0;
      var end = mappingTable.length - 1;
      while (start <= end) {
        var mid = Math.floor((start + end) / 2);
        var target = mappingTable[mid];
        if (target[0][0] <= val && target[0][1] >= val) {
          return target;
        } else if (target[0][0] > val) {
          end = mid - 1;
        } else {
          start = mid + 1;
        }
      }
      return null;
    }
    var regexAstralSymbols = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;
    function countSymbols(string) {
      return string.replace(regexAstralSymbols, "_").length;
    }
    function mapChars(domain_name, useSTD3, processing_option) {
      var hasError = false;
      var processed = "";
      var len = countSymbols(domain_name);
      for (var i = 0; i < len; ++i) {
        var codePoint = domain_name.codePointAt(i);
        var status = findStatus(codePoint);
        switch (status[1]) {
          case "disallowed":
            hasError = true;
            processed += String.fromCodePoint(codePoint);
            break;
          case "ignored":
            break;
          case "mapped":
            processed += String.fromCodePoint.apply(String, status[2]);
            break;
          case "deviation":
            if (processing_option === PROCESSING_OPTIONS.TRANSITIONAL) {
              processed += String.fromCodePoint.apply(String, status[2]);
            } else {
              processed += String.fromCodePoint(codePoint);
            }
            break;
          case "valid":
            processed += String.fromCodePoint(codePoint);
            break;
          case "disallowed_STD3_mapped":
            if (useSTD3) {
              hasError = true;
              processed += String.fromCodePoint(codePoint);
            } else {
              processed += String.fromCodePoint.apply(String, status[2]);
            }
            break;
          case "disallowed_STD3_valid":
            if (useSTD3) {
              hasError = true;
            }
            processed += String.fromCodePoint(codePoint);
            break;
        }
      }
      return {
        string: processed,
        error: hasError
      };
    }
    var combiningMarksRegex = /[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;
    function validateLabel(label, processing_option) {
      if (label.substr(0, 4) === "xn--") {
        label = punycode.toUnicode(label);
        processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL;
      }
      var error = false;
      if (normalize(label) !== label || label[3] === "-" && label[4] === "-" || label[0] === "-" || label[label.length - 1] === "-" || label.indexOf(".") !== -1 || label.search(combiningMarksRegex) === 0) {
        error = true;
      }
      var len = countSymbols(label);
      for (var i = 0; i < len; ++i) {
        var status = findStatus(label.codePointAt(i));
        if (processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== "valid" || processing === PROCESSING_OPTIONS.NONTRANSITIONAL && status[1] !== "valid" && status[1] !== "deviation") {
          error = true;
          break;
        }
      }
      return {
        label,
        error
      };
    }
    function processing(domain_name, useSTD3, processing_option) {
      var result = mapChars(domain_name, useSTD3, processing_option);
      result.string = normalize(result.string);
      var labels = result.string.split(".");
      for (var i = 0; i < labels.length; ++i) {
        try {
          var validation = validateLabel(labels[i]);
          labels[i] = validation.label;
          result.error = result.error || validation.error;
        } catch (e) {
          result.error = true;
        }
      }
      return {
        string: labels.join("."),
        error: result.error
      };
    }
    module2.exports.toASCII = function(domain_name, useSTD3, processing_option, verifyDnsLength) {
      var result = processing(domain_name, useSTD3, processing_option);
      var labels = result.string.split(".");
      labels = labels.map(function(l) {
        try {
          return punycode.toASCII(l);
        } catch (e) {
          result.error = true;
          return l;
        }
      });
      if (verifyDnsLength) {
        var total = labels.slice(0, labels.length - 1).join(".").length;
        if (total.length > 253 || total.length === 0) {
          result.error = true;
        }
        for (var i = 0; i < labels.length; ++i) {
          if (labels.length > 63 || labels.length === 0) {
            result.error = true;
            break;
          }
        }
      }
      if (result.error) return null;
      return labels.join(".");
    };
    module2.exports.toUnicode = function(domain_name, useSTD3) {
      var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);
      return {
        domain: result.string,
        error: result.error
      };
    };
    module2.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;
  }
});

// node_modules/whatwg-url/lib/url-state-machine.js
var require_url_state_machine = __commonJS({
  "node_modules/whatwg-url/lib/url-state-machine.js"(exports2, module2) {
    "use strict";
    var punycode = require("punycode");
    var tr46 = require_tr46();
    var specialSchemes = {
      ftp: 21,
      file: null,
      gopher: 70,
      http: 80,
      https: 443,
      ws: 80,
      wss: 443
    };
    var failure = Symbol("failure");
    function countSymbols(str) {
      return punycode.ucs2.decode(str).length;
    }
    function at(input, idx) {
      const c = input[idx];
      return isNaN(c) ? void 0 : String.fromCodePoint(c);
    }
    function isASCIIDigit(c) {
      return c >= 48 && c <= 57;
    }
    function isASCIIAlpha(c) {
      return c >= 65 && c <= 90 || c >= 97 && c <= 122;
    }
    function isASCIIAlphanumeric(c) {
      return isASCIIAlpha(c) || isASCIIDigit(c);
    }
    function isASCIIHex(c) {
      return isASCIIDigit(c) || c >= 65 && c <= 70 || c >= 97 && c <= 102;
    }
    function isSingleDot(buffer) {
      return buffer === "." || buffer.toLowerCase() === "%2e";
    }
    function isDoubleDot(buffer) {
      buffer = buffer.toLowerCase();
      return buffer === ".." || buffer === "%2e." || buffer === ".%2e" || buffer === "%2e%2e";
    }
    function isWindowsDriveLetterCodePoints(cp1, cp2) {
      return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);
    }
    function isWindowsDriveLetterString(string) {
      return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === ":" || string[1] === "|");
    }
    function isNormalizedWindowsDriveLetterString(string) {
      return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === ":";
    }
    function containsForbiddenHostCodePoint(string) {
      return string.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/) !== -1;
    }
    function containsForbiddenHostCodePointExcludingPercent(string) {
      return string.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/) !== -1;
    }
    function isSpecialScheme(scheme) {
      return specialSchemes[scheme] !== void 0;
    }
    function isSpecial(url) {
      return isSpecialScheme(url.scheme);
    }
    function defaultPort(scheme) {
      return specialSchemes[scheme];
    }
    function percentEncode(c) {
      let hex = c.toString(16).toUpperCase();
      if (hex.length === 1) {
        hex = "0" + hex;
      }
      return "%" + hex;
    }
    function utf8PercentEncode(c) {
      const buf = new Buffer(c);
      let str = "";
      for (let i = 0; i < buf.length; ++i) {
        str += percentEncode(buf[i]);
      }
      return str;
    }
    function utf8PercentDecode(str) {
      const input = new Buffer(str);
      const output = [];
      for (let i = 0; i < input.length; ++i) {
        if (input[i] !== 37) {
          output.push(input[i]);
        } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {
          output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));
          i += 2;
        } else {
          output.push(input[i]);
        }
      }
      return new Buffer(output).toString();
    }
    function isC0ControlPercentEncode(c) {
      return c <= 31 || c > 126;
    }
    var extraPathPercentEncodeSet = /* @__PURE__ */ new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);
    function isPathPercentEncode(c) {
      return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);
    }
    var extraUserinfoPercentEncodeSet = /* @__PURE__ */ new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);
    function isUserinfoPercentEncode(c) {
      return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);
    }
    function percentEncodeChar(c, encodeSetPredicate) {
      const cStr = String.fromCodePoint(c);
      if (encodeSetPredicate(c)) {
        return utf8PercentEncode(cStr);
      }
      return cStr;
    }
    function parseIPv4Number(input) {
      let R = 10;
      if (input.length >= 2 && input.charAt(0) === "0" && input.charAt(1).toLowerCase() === "x") {
        input = input.substring(2);
        R = 16;
      } else if (input.length >= 2 && input.charAt(0) === "0") {
        input = input.substring(1);
        R = 8;
      }
      if (input === "") {
        return 0;
      }
      const regex = R === 10 ? /[^0-9]/ : R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/;
      if (regex.test(input)) {
        return failure;
      }
      return parseInt(input, R);
    }
    function parseIPv4(input) {
      const parts = input.split(".");
      if (parts[parts.length - 1] === "") {
        if (parts.length > 1) {
          parts.pop();
        }
      }
      if (parts.length > 4) {
        return input;
      }
      const numbers = [];
      for (const part of parts) {
        if (part === "") {
          return input;
        }
        const n = parseIPv4Number(part);
        if (n === failure) {
          return input;
        }
        numbers.push(n);
      }
      for (let i = 0; i < numbers.length - 1; ++i) {
        if (numbers[i] > 255) {
          return failure;
        }
      }
      if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {
        return failure;
      }
      let ipv4 = numbers.pop();
      let counter = 0;
      for (const n of numbers) {
        ipv4 += n * Math.pow(256, 3 - counter);
        ++counter;
      }
      return ipv4;
    }
    function serializeIPv4(address) {
      let output = "";
      let n = address;
      for (let i = 1; i <= 4; ++i) {
        output = String(n % 256) + output;
        if (i !== 4) {
          output = "." + output;
        }
        n = Math.floor(n / 256);
      }
      return output;
    }
    function parseIPv6(input) {
      const address = [0, 0, 0, 0, 0, 0, 0, 0];
      let pieceIndex = 0;
      let compress = null;
      let pointer = 0;
      input = punycode.ucs2.decode(input);
      if (input[pointer] === 58) {
        if (input[pointer + 1] !== 58) {
          return failure;
        }
        pointer += 2;
        ++pieceIndex;
        compress = pieceIndex;
      }
      while (pointer < input.length) {
        if (pieceIndex === 8) {
          return failure;
        }
        if (input[pointer] === 58) {
          if (compress !== null) {
            return failure;
          }
          ++pointer;
          ++pieceIndex;
          compress = pieceIndex;
          continue;
        }
        let value = 0;
        let length = 0;
        while (length < 4 && isASCIIHex(input[pointer])) {
          value = value * 16 + parseInt(at(input, pointer), 16);
          ++pointer;
          ++length;
        }
        if (input[pointer] === 46) {
          if (length === 0) {
            return failure;
          }
          pointer -= length;
          if (pieceIndex > 6) {
            return failure;
          }
          let numbersSeen = 0;
          while (input[pointer] !== void 0) {
            let ipv4Piece = null;
            if (numbersSeen > 0) {
              if (input[pointer] === 46 && numbersSeen < 4) {
                ++pointer;
              } else {
                return failure;
              }
            }
            if (!isASCIIDigit(input[pointer])) {
              return failure;
            }
            while (isASCIIDigit(input[pointer])) {
              const number = parseInt(at(input, pointer));
              if (ipv4Piece === null) {
                ipv4Piece = number;
              } else if (ipv4Piece === 0) {
                return failure;
              } else {
                ipv4Piece = ipv4Piece * 10 + number;
              }
              if (ipv4Piece > 255) {
                return failure;
              }
              ++pointer;
            }
            address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;
            ++numbersSeen;
            if (numbersSeen === 2 || numbersSeen === 4) {
              ++pieceIndex;
            }
          }
          if (numbersSeen !== 4) {
            return failure;
          }
          break;
        } else if (input[pointer] === 58) {
          ++pointer;
          if (input[pointer] === void 0) {
            return failure;
          }
        } else if (input[pointer] !== void 0) {
          return failure;
        }
        address[pieceIndex] = value;
        ++pieceIndex;
      }
      if (compress !== null) {
        let swaps = pieceIndex - compress;
        pieceIndex = 7;
        while (pieceIndex !== 0 && swaps > 0) {
          const temp = address[compress + swaps - 1];
          address[compress + swaps - 1] = address[pieceIndex];
          address[pieceIndex] = temp;
          --pieceIndex;
          --swaps;
        }
      } else if (compress === null && pieceIndex !== 8) {
        return failure;
      }
      return address;
    }
    function serializeIPv6(address) {
      let output = "";
      const seqResult = findLongestZeroSequence(address);
      const compress = seqResult.idx;
      let ignore0 = false;
      for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {
        if (ignore0 && address[pieceIndex] === 0) {
          continue;
        } else if (ignore0) {
          ignore0 = false;
        }
        if (compress === pieceIndex) {
          const separator = pieceIndex === 0 ? "::" : ":";
          output += separator;
          ignore0 = true;
          continue;
        }
        output += address[pieceIndex].toString(16);
        if (pieceIndex !== 7) {
          output += ":";
        }
      }
      return output;
    }
    function parseHost(input, isSpecialArg) {
      if (input[0] === "[") {
        if (input[input.length - 1] !== "]") {
          return failure;
        }
        return parseIPv6(input.substring(1, input.length - 1));
      }
      if (!isSpecialArg) {
        return parseOpaqueHost(input);
      }
      const domain = utf8PercentDecode(input);
      const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);
      if (asciiDomain === null) {
        return failure;
      }
      if (containsForbiddenHostCodePoint(asciiDomain)) {
        return failure;
      }
      const ipv4Host = parseIPv4(asciiDomain);
      if (typeof ipv4Host === "number" || ipv4Host === failure) {
        return ipv4Host;
      }
      return asciiDomain;
    }
    function parseOpaqueHost(input) {
      if (containsForbiddenHostCodePointExcludingPercent(input)) {
        return failure;
      }
      let output = "";
      const decoded = punycode.ucs2.decode(input);
      for (let i = 0; i < decoded.length; ++i) {
        output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);
      }
      return output;
    }
    function findLongestZeroSequence(arr) {
      let maxIdx = null;
      let maxLen = 1;
      let currStart = null;
      let currLen = 0;
      for (let i = 0; i < arr.length; ++i) {
        if (arr[i] !== 0) {
          if (currLen > maxLen) {
            maxIdx = currStart;
            maxLen = currLen;
          }
          currStart = null;
          currLen = 0;
        } else {
          if (currStart === null) {
            currStart = i;
          }
          ++currLen;
        }
      }
      if (currLen > maxLen) {
        maxIdx = currStart;
        maxLen = currLen;
      }
      return {
        idx: maxIdx,
        len: maxLen
      };
    }
    function serializeHost(host) {
      if (typeof host === "number") {
        return serializeIPv4(host);
      }
      if (host instanceof Array) {
        return "[" + serializeIPv6(host) + "]";
      }
      return host;
    }
    function trimControlChars(url) {
      return url.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g, "");
    }
    function trimTabAndNewline(url) {
      return url.replace(/\u0009|\u000A|\u000D/g, "");
    }
    function shortenPath(url) {
      const path = url.path;
      if (path.length === 0) {
        return;
      }
      if (url.scheme === "file" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {
        return;
      }
      path.pop();
    }
    function includesCredentials(url) {
      return url.username !== "" || url.password !== "";
    }
    function cannotHaveAUsernamePasswordPort(url) {
      return url.host === null || url.host === "" || url.cannotBeABaseURL || url.scheme === "file";
    }
    function isNormalizedWindowsDriveLetter(string) {
      return /^[A-Za-z]:$/.test(string);
    }
    function URLStateMachine(input, base, encodingOverride, url, stateOverride) {
      this.pointer = 0;
      this.input = input;
      this.base = base || null;
      this.encodingOverride = encodingOverride || "utf-8";
      this.stateOverride = stateOverride;
      this.url = url;
      this.failure = false;
      this.parseError = false;
      if (!this.url) {
        this.url = {
          scheme: "",
          username: "",
          password: "",
          host: null,
          port: null,
          path: [],
          query: null,
          fragment: null,
          cannotBeABaseURL: false
        };
        const res2 = trimControlChars(this.input);
        if (res2 !== this.input) {
          this.parseError = true;
        }
        this.input = res2;
      }
      const res = trimTabAndNewline(this.input);
      if (res !== this.input) {
        this.parseError = true;
      }
      this.input = res;
      this.state = stateOverride || "scheme start";
      this.buffer = "";
      this.atFlag = false;
      this.arrFlag = false;
      this.passwordTokenSeenFlag = false;
      this.input = punycode.ucs2.decode(this.input);
      for (; this.pointer <= this.input.length; ++this.pointer) {
        const c = this.input[this.pointer];
        const cStr = isNaN(c) ? void 0 : String.fromCodePoint(c);
        const ret = this["parse " + this.state](c, cStr);
        if (!ret) {
          break;
        } else if (ret === failure) {
          this.failure = true;
          break;
        }
      }
    }
    URLStateMachine.prototype["parse scheme start"] = function parseSchemeStart(c, cStr) {
      if (isASCIIAlpha(c)) {
        this.buffer += cStr.toLowerCase();
        this.state = "scheme";
      } else if (!this.stateOverride) {
        this.state = "no scheme";
        --this.pointer;
      } else {
        this.parseError = true;
        return failure;
      }
      return true;
    };
    URLStateMachine.prototype["parse scheme"] = function parseScheme(c, cStr) {
      if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {
        this.buffer += cStr.toLowerCase();
      } else if (c === 58) {
        if (this.stateOverride) {
          if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {
            return false;
          }
          if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {
            return false;
          }
          if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === "file") {
            return false;
          }
          if (this.url.scheme === "file" && (this.url.host === "" || this.url.host === null)) {
            return false;
          }
        }
        this.url.scheme = this.buffer;
        this.buffer = "";
        if (this.stateOverride) {
          return false;
        }
        if (this.url.scheme === "file") {
          if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {
            this.parseError = true;
          }
          this.state = "file";
        } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {
          this.state = "special relative or authority";
        } else if (isSpecial(this.url)) {
          this.state = "special authority slashes";
        } else if (this.input[this.pointer + 1] === 47) {
          this.state = "path or authority";
          ++this.pointer;
        } else {
          this.url.cannotBeABaseURL = true;
          this.url.path.push("");
          this.state = "cannot-be-a-base-URL path";
        }
      } else if (!this.stateOverride) {
        this.buffer = "";
        this.state = "no scheme";
        this.pointer = -1;
      } else {
        this.parseError = true;
        return failure;
      }
      return true;
    };
    URLStateMachine.prototype["parse no scheme"] = function parseNoScheme(c) {
      if (this.base === null || this.base.cannotBeABaseURL && c !== 35) {
        return failure;
      } else if (this.base.cannotBeABaseURL && c === 35) {
        this.url.scheme = this.base.scheme;
        this.url.path = this.base.path.slice();
        this.url.query = this.base.query;
        this.url.fragment = "";
        this.url.cannotBeABaseURL = true;
        this.state = "fragment";
      } else if (this.base.scheme === "file") {
        this.state = "file";
        --this.pointer;
      } else {
        this.state = "relative";
        --this.pointer;
      }
      return true;
    };
    URLStateMachine.prototype["parse special relative or authority"] = function parseSpecialRelativeOrAuthority(c) {
      if (c === 47 && this.input[this.pointer + 1] === 47) {
        this.state = "special authority ignore slashes";
        ++this.pointer;
      } else {
        this.parseError = true;
        this.state = "relative";
        --this.pointer;
      }
      return true;
    };
    URLStateMachine.prototype["parse path or authority"] = function parsePathOrAuthority(c) {
      if (c === 47) {
        this.state = "authority";
      } else {
        this.state = "path";
        --this.pointer;
      }
      return true;
    };
    URLStateMachine.prototype["parse relative"] = function parseRelative(c) {
      this.url.scheme = this.base.scheme;
      if (isNaN(c)) {
        this.url.username = this.base.username;
        this.url.password = this.base.password;
        this.url.host = this.base.host;
        this.url.port = this.base.port;
        this.url.path = this.base.path.slice();
        this.url.query = this.base.query;
      } else if (c === 47) {
        this.state = "relative slash";
      } else if (c === 63) {
        this.url.username = this.base.username;
        this.url.password = this.base.password;
        this.url.host = this.base.host;
        this.url.port = this.base.port;
        this.url.path = this.base.path.slice();
        this.url.query = "";
        this.state = "query";
      } else if (c === 35) {
        this.url.username = this.base.username;
        this.url.password = this.base.password;
        this.url.host = this.base.host;
        this.url.port = this.base.port;
        this.url.path = this.base.path.slice();
        this.url.query = this.base.query;
        this.url.fragment = "";
        this.state = "fragment";
      } else if (isSpecial(this.url) && c === 92) {
        this.parseError = true;
        this.state = "relative slash";
      } else {
        this.url.username = this.base.username;
        this.url.password = this.base.password;
        this.url.host = this.base.host;
        this.url.port = this.base.port;
        this.url.path = this.base.path.slice(0, this.base.path.length - 1);
        this.state = "path";
        --this.pointer;
      }
      return true;
    };
    URLStateMachine.prototype["parse relative slash"] = function parseRelativeSlash(c) {
      if (isSpecial(this.url) && (c === 47 || c === 92)) {
        if (c === 92) {
          this.parseError = true;
        }
        this.state = "special authority ignore slashes";
      } else if (c === 47) {
        this.state = "authority";
      } else {
        this.url.username = this.base.username;
        this.url.password = this.base.password;
        this.url.host = this.base.host;
        this.url.port = this.base.port;
        this.state = "path";
        --this.pointer;
      }
      return true;
    };
    URLStateMachine.prototype["parse special authority slashes"] = function parseSpecialAuthoritySlashes(c) {
      if (c === 47 && this.input[this.pointer + 1] === 47) {
        this.state = "special authority ignore slashes";
        ++this.pointer;
      } else {
        this.parseError = true;
        this.state = "special authority ignore slashes";
        --this.pointer;
      }
      return true;
    };
    URLStateMachine.prototype["parse special authority ignore slashes"] = function parseSpecialAuthorityIgnoreSlashes(c) {
      if (c !== 47 && c !== 92) {
        this.state = "authority";
        --this.pointer;
      } else {
        this.parseError = true;
      }
      return true;
    };
    URLStateMachine.prototype["parse authority"] = function parseAuthority(c, cStr) {
      if (c === 64) {
        this.parseError = true;
        if (this.atFlag) {
          this.buffer = "%40" + this.buffer;
        }
        this.atFlag = true;
        const len = countSymbols(this.buffer);
        for (let pointer = 0; pointer < len; ++pointer) {
          const codePoint = this.buffer.codePointAt(pointer);
          if (codePoint === 58 && !this.passwordTokenSeenFlag) {
            this.passwordTokenSeenFlag = true;
            continue;
          }
          const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);
          if (this.passwordTokenSeenFlag) {
            this.url.password += encodedCodePoints;
          } else {
            this.url.username += encodedCodePoints;
          }
        }
        this.buffer = "";
      } else if (isNaN(c) || c === 47 || c === 63 || c === 35 || isSpecial(this.url) && c === 92) {
        if (this.atFlag && this.buffer === "") {
          this.parseError = true;
          return failure;
        }
        this.pointer -= countSymbols(this.buffer) + 1;
        this.buffer = "";
        this.state = "host";
      } else {
        this.buffer += cStr;
      }
      return true;
    };
    URLStateMachine.prototype["parse hostname"] = URLStateMachine.prototype["parse host"] = function parseHostName(c, cStr) {
      if (this.stateOverride && this.url.scheme === "file") {
        --this.pointer;
        this.state = "file host";
      } else if (c === 58 && !this.arrFlag) {
        if (this.buffer === "") {
          this.parseError = true;
          return failure;
        }
        const host = parseHost(this.buffer, isSpecial(this.url));
        if (host === failure) {
          return failure;
        }
        this.url.host = host;
        this.buffer = "";
        this.state = "port";
        if (this.stateOverride === "hostname") {
          return false;
        }
      } else if (isNaN(c) || c === 47 || c === 63 || c === 35 || isSpecial(this.url) && c === 92) {
        --this.pointer;
        if (isSpecial(this.url) && this.buffer === "") {
          this.parseError = true;
          return failure;
        } else if (this.stateOverride && this.buffer === "" && (includesCredentials(this.url) || this.url.port !== null)) {
          this.parseError = true;
          return false;
        }
        const host = parseHost(this.buffer, isSpecial(this.url));
        if (host === failure) {
          return failure;
        }
        this.url.host = host;
        this.buffer = "";
        this.state = "path start";
        if (this.stateOverride) {
          return false;
        }
      } else {
        if (c === 91) {
          this.arrFlag = true;
        } else if (c === 93) {
          this.arrFlag = false;
        }
        this.buffer += cStr;
      }
      return true;
    };
    URLStateMachine.prototype["parse port"] = function parsePort(c, cStr) {
      if (isASCIIDigit(c)) {
        this.buffer += cStr;
      } else if (isNaN(c) || c === 47 || c === 63 || c === 35 || isSpecial(this.url) && c === 92 || this.stateOverride) {
        if (this.buffer !== "") {
          const port = parseInt(this.buffer);
          if (port > Math.pow(2, 16) - 1) {
            this.parseError = true;
            return failure;
          }
          this.url.port = port === defaultPort(this.url.scheme) ? null : port;
          this.buffer = "";
        }
        if (this.stateOverride) {
          return false;
        }
        this.state = "path start";
        --this.pointer;
      } else {
        this.parseError = true;
        return failure;
      }
      return true;
    };
    var fileOtherwiseCodePoints = /* @__PURE__ */ new Set([47, 92, 63, 35]);
    URLStateMachine.prototype["parse file"] = function parseFile(c) {
      this.url.scheme = "file";
      if (c === 47 || c === 92) {
        if (c === 92) {
          this.parseError = true;
        }
        this.state = "file slash";
      } else if (this.base !== null && this.base.scheme === "file") {
        if (isNaN(c)) {
          this.url.host = this.base.host;
          this.url.path = this.base.path.slice();
          this.url.query = this.base.query;
        } else if (c === 63) {
          this.url.host = this.base.host;
          this.url.path = this.base.path.slice();
          this.url.query = "";
          this.state = "query";
        } else if (c === 35) {
          this.url.host = this.base.host;
          this.url.path = this.base.path.slice();
          this.url.query = this.base.query;
          this.url.fragment = "";
          this.state = "fragment";
        } else {
          if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points
          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) || this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points
          !fileOtherwiseCodePoints.has(this.input[this.pointer + 2])) {
            this.url.host = this.base.host;
            this.url.path = this.base.path.slice();
            shortenPath(this.url);
          } else {
            this.parseError = true;
          }
          this.state = "path";
          --this.pointer;
        }
      } else {
        this.state = "path";
        --this.pointer;
      }
      return true;
    };
    URLStateMachine.prototype["parse file slash"] = function parseFileSlash(c) {
      if (c === 47 || c === 92) {
        if (c === 92) {
          this.parseError = true;
        }
        this.state = "file host";
      } else {
        if (this.base !== null && this.base.scheme === "file") {
          if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {
            this.url.path.push(this.base.path[0]);
          } else {
            this.url.host = this.base.host;
          }
        }
        this.state = "path";
        --this.pointer;
      }
      return true;
    };
    URLStateMachine.prototype["parse file host"] = function parseFileHost(c, cStr) {
      if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {
        --this.pointer;
        if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {
          this.parseError = true;
          this.state = "path";
        } else if (this.buffer === "") {
          this.url.host = "";
          if (this.stateOverride) {
            return false;
          }
          this.state = "path start";
        } else {
          let host = parseHost(this.buffer, isSpecial(this.url));
          if (host === failure) {
            return failure;
          }
          if (host === "localhost") {
            host = "";
          }
          this.url.host = host;
          if (this.stateOverride) {
            return false;
          }
          this.buffer = "";
          this.state = "path start";
        }
      } else {
        this.buffer += cStr;
      }
      return true;
    };
    URLStateMachine.prototype["parse path start"] = function parsePathStart(c) {
      if (isSpecial(this.url)) {
        if (c === 92) {
          this.parseError = true;
        }
        this.state = "path";
        if (c !== 47 && c !== 92) {
          --this.pointer;
        }
      } else if (!this.stateOverride && c === 63) {
        this.url.query = "";
        this.state = "query";
      } else if (!this.stateOverride && c === 35) {
        this.url.fragment = "";
        this.state = "fragment";
      } else if (c !== void 0) {
        this.state = "path";
        if (c !== 47) {
          --this.pointer;
        }
      }
      return true;
    };
    URLStateMachine.prototype["parse path"] = function parsePath(c) {
      if (isNaN(c) || c === 47 || isSpecial(this.url) && c === 92 || !this.stateOverride && (c === 63 || c === 35)) {
        if (isSpecial(this.url) && c === 92) {
          this.parseError = true;
        }
        if (isDoubleDot(this.buffer)) {
          shortenPath(this.url);
          if (c !== 47 && !(isSpecial(this.url) && c === 92)) {
            this.url.path.push("");
          }
        } else if (isSingleDot(this.buffer) && c !== 47 && !(isSpecial(this.url) && c === 92)) {
          this.url.path.push("");
        } else if (!isSingleDot(this.buffer)) {
          if (this.url.scheme === "file" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {
            if (this.url.host !== "" && this.url.host !== null) {
              this.parseError = true;
              this.url.host = "";
            }
            this.buffer = this.buffer[0] + ":";
          }
          this.url.path.push(this.buffer);
        }
        this.buffer = "";
        if (this.url.scheme === "file" && (c === void 0 || c === 63 || c === 35)) {
          while (this.url.path.length > 1 && this.url.path[0] === "") {
            this.parseError = true;
            this.url.path.shift();
          }
        }
        if (c === 63) {
          this.url.query = "";
          this.state = "query";
        }
        if (c === 35) {
          this.url.fragment = "";
          this.state = "fragment";
        }
      } else {
        if (c === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2]))) {
          this.parseError = true;
        }
        this.buffer += percentEncodeChar(c, isPathPercentEncode);
      }
      return true;
    };
    URLStateMachine.prototype["parse cannot-be-a-base-URL path"] = function parseCannotBeABaseURLPath(c) {
      if (c === 63) {
        this.url.query = "";
        this.state = "query";
      } else if (c === 35) {
        this.url.fragment = "";
        this.state = "fragment";
      } else {
        if (!isNaN(c) && c !== 37) {
          this.parseError = true;
        }
        if (c === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2]))) {
          this.parseError = true;
        }
        if (!isNaN(c)) {
          this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);
        }
      }
      return true;
    };
    URLStateMachine.prototype["parse query"] = function parseQuery(c, cStr) {
      if (isNaN(c) || !this.stateOverride && c === 35) {
        if (!isSpecial(this.url) || this.url.scheme === "ws" || this.url.scheme === "wss") {
          this.encodingOverride = "utf-8";
        }
        const buffer = new Buffer(this.buffer);
        for (let i = 0; i < buffer.length; ++i) {
          if (buffer[i] < 33 || buffer[i] > 126 || buffer[i] === 34 || buffer[i] === 35 || buffer[i] === 60 || buffer[i] === 62) {
            this.url.query += percentEncode(buffer[i]);
          } else {
            this.url.query += String.fromCodePoint(buffer[i]);
          }
        }
        this.buffer = "";
        if (c === 35) {
          this.url.fragment = "";
          this.state = "fragment";
        }
      } else {
        if (c === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2]))) {
          this.parseError = true;
        }
        this.buffer += cStr;
      }
      return true;
    };
    URLStateMachine.prototype["parse fragment"] = function parseFragment(c) {
      if (isNaN(c)) {
      } else if (c === 0) {
        this.parseError = true;
      } else {
        if (c === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2]))) {
          this.parseError = true;
        }
        this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);
      }
      return true;
    };
    function serializeURL(url, excludeFragment) {
      let output = url.scheme + ":";
      if (url.host !== null) {
        output += "//";
        if (url.username !== "" || url.password !== "") {
          output += url.username;
          if (url.password !== "") {
            output += ":" + url.password;
          }
          output += "@";
        }
        output += serializeHost(url.host);
        if (url.port !== null) {
          output += ":" + url.port;
        }
      } else if (url.host === null && url.scheme === "file") {
        output += "//";
      }
      if (url.cannotBeABaseURL) {
        output += url.path[0];
      } else {
        for (const string of url.path) {
          output += "/" + string;
        }
      }
      if (url.query !== null) {
        output += "?" + url.query;
      }
      if (!excludeFragment && url.fragment !== null) {
        output += "#" + url.fragment;
      }
      return output;
    }
    function serializeOrigin(tuple) {
      let result = tuple.scheme + "://";
      result += serializeHost(tuple.host);
      if (tuple.port !== null) {
        result += ":" + tuple.port;
      }
      return result;
    }
    module2.exports.serializeURL = serializeURL;
    module2.exports.serializeURLOrigin = function(url) {
      switch (url.scheme) {
        case "blob":
          try {
            return module2.exports.serializeURLOrigin(module2.exports.parseURL(url.path[0]));
          } catch (e) {
            return "null";
          }
        case "ftp":
        case "gopher":
        case "http":
        case "https":
        case "ws":
        case "wss":
          return serializeOrigin({
            scheme: url.scheme,
            host: url.host,
            port: url.port
          });
        case "file":
          return "file://";
        default:
          return "null";
      }
    };
    module2.exports.basicURLParse = function(input, options) {
      if (options === void 0) {
        options = {};
      }
      const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);
      if (usm.failure) {
        return "failure";
      }
      return usm.url;
    };
    module2.exports.setTheUsername = function(url, username) {
      url.username = "";
      const decoded = punycode.ucs2.decode(username);
      for (let i = 0; i < decoded.length; ++i) {
        url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);
      }
    };
    module2.exports.setThePassword = function(url, password) {
      url.password = "";
      const decoded = punycode.ucs2.decode(password);
      for (let i = 0; i < decoded.length; ++i) {
        url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);
      }
    };
    module2.exports.serializeHost = serializeHost;
    module2.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;
    module2.exports.serializeInteger = function(integer) {
      return String(integer);
    };
    module2.exports.parseURL = function(input, options) {
      if (options === void 0) {
        options = {};
      }
      return module2.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });
    };
  }
});

// node_modules/whatwg-url/lib/URL-impl.js
var require_URL_impl = __commonJS({
  "node_modules/whatwg-url/lib/URL-impl.js"(exports2) {
    "use strict";
    var usm = require_url_state_machine();
    exports2.implementation = class URLImpl {
      constructor(constructorArgs) {
        const url = constructorArgs[0];
        const base = constructorArgs[1];
        let parsedBase = null;
        if (base !== void 0) {
          parsedBase = usm.basicURLParse(base);
          if (parsedBase === "failure") {
            throw new TypeError("Invalid base URL");
          }
        }
        const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });
        if (parsedURL === "failure") {
          throw new TypeError("Invalid URL");
        }
        this._url = parsedURL;
      }
      get href() {
        return usm.serializeURL(this._url);
      }
      set href(v) {
        const parsedURL = usm.basicURLParse(v);
        if (parsedURL === "failure") {
          throw new TypeError("Invalid URL");
        }
        this._url = parsedURL;
      }
      get origin() {
        return usm.serializeURLOrigin(this._url);
      }
      get protocol() {
        return this._url.scheme + ":";
      }
      set protocol(v) {
        usm.basicURLParse(v + ":", { url: this._url, stateOverride: "scheme start" });
      }
      get username() {
        return this._url.username;
      }
      set username(v) {
        if (usm.cannotHaveAUsernamePasswordPort(this._url)) {
          return;
        }
        usm.setTheUsername(this._url, v);
      }
      get password() {
        return this._url.password;
      }
      set password(v) {
        if (usm.cannotHaveAUsernamePasswordPort(this._url)) {
          return;
        }
        usm.setThePassword(this._url, v);
      }
      get host() {
        const url = this._url;
        if (url.host === null) {
          return "";
        }
        if (url.port === null) {
          return usm.serializeHost(url.host);
        }
        return usm.serializeHost(url.host) + ":" + usm.serializeInteger(url.port);
      }
      set host(v) {
        if (this._url.cannotBeABaseURL) {
          return;
        }
        usm.basicURLParse(v, { url: this._url, stateOverride: "host" });
      }
      get hostname() {
        if (this._url.host === null) {
          return "";
        }
        return usm.serializeHost(this._url.host);
      }
      set hostname(v) {
        if (this._url.cannotBeABaseURL) {
          return;
        }
        usm.basicURLParse(v, { url: this._url, stateOverride: "hostname" });
      }
      get port() {
        if (this._url.port === null) {
          return "";
        }
        return usm.serializeInteger(this._url.port);
      }
      set port(v) {
        if (usm.cannotHaveAUsernamePasswordPort(this._url)) {
          return;
        }
        if (v === "") {
          this._url.port = null;
        } else {
          usm.basicURLParse(v, { url: this._url, stateOverride: "port" });
        }
      }
      get pathname() {
        if (this._url.cannotBeABaseURL) {
          return this._url.path[0];
        }
        if (this._url.path.length === 0) {
          return "";
        }
        return "/" + this._url.path.join("/");
      }
      set pathname(v) {
        if (this._url.cannotBeABaseURL) {
          return;
        }
        this._url.path = [];
        usm.basicURLParse(v, { url: this._url, stateOverride: "path start" });
      }
      get search() {
        if (this._url.query === null || this._url.query === "") {
          return "";
        }
        return "?" + this._url.query;
      }
      set search(v) {
        const url = this._url;
        if (v === "") {
          url.query = null;
          return;
        }
        const input = v[0] === "?" ? v.substring(1) : v;
        url.query = "";
        usm.basicURLParse(input, { url, stateOverride: "query" });
      }
      get hash() {
        if (this._url.fragment === null || this._url.fragment === "") {
          return "";
        }
        return "#" + this._url.fragment;
      }
      set hash(v) {
        if (v === "") {
          this._url.fragment = null;
          return;
        }
        const input = v[0] === "#" ? v.substring(1) : v;
        this._url.fragment = "";
        usm.basicURLParse(input, { url: this._url, stateOverride: "fragment" });
      }
      toJSON() {
        return this.href;
      }
    };
  }
});

// node_modules/whatwg-url/lib/URL.js
var require_URL = __commonJS({
  "node_modules/whatwg-url/lib/URL.js"(exports2, module2) {
    "use strict";
    var conversions = require_lib2();
    var utils = require_utils3();
    var Impl = require_URL_impl();
    var impl = utils.implSymbol;
    function URL2(url) {
      if (!this || this[impl] || !(this instanceof URL2)) {
        throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");
      }
      if (arguments.length < 1) {
        throw new TypeError("Failed to construct 'URL': 1 argument required, but only " + arguments.length + " present.");
      }
      const args = [];
      for (let i = 0; i < arguments.length && i < 2; ++i) {
        args[i] = arguments[i];
      }
      args[0] = conversions["USVString"](args[0]);
      if (args[1] !== void 0) {
        args[1] = conversions["USVString"](args[1]);
      }
      module2.exports.setup(this, args);
    }
    URL2.prototype.toJSON = function toJSON() {
      if (!this || !module2.exports.is(this)) {
        throw new TypeError("Illegal invocation");
      }
      const args = [];
      for (let i = 0; i < arguments.length && i < 0; ++i) {
        args[i] = arguments[i];
      }
      return this[impl].toJSON.apply(this[impl], args);
    };
    Object.defineProperty(URL2.prototype, "href", {
      get() {
        return this[impl].href;
      },
      set(V) {
        V = conversions["USVString"](V);
        this[impl].href = V;
      },
      enumerable: true,
      configurable: true
    });
    URL2.prototype.toString = function() {
      if (!this || !module2.exports.is(this)) {
        throw new TypeError("Illegal invocation");
      }
      return this.href;
    };
    Object.defineProperty(URL2.prototype, "origin", {
      get() {
        return this[impl].origin;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(URL2.prototype, "protocol", {
      get() {
        return this[impl].protocol;
      },
      set(V) {
        V = conversions["USVString"](V);
        this[impl].protocol = V;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(URL2.prototype, "username", {
      get() {
        return this[impl].username;
      },
      set(V) {
        V = conversions["USVString"](V);
        this[impl].username = V;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(URL2.prototype, "password", {
      get() {
        return this[impl].password;
      },
      set(V) {
        V = conversions["USVString"](V);
        this[impl].password = V;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(URL2.prototype, "host", {
      get() {
        return this[impl].host;
      },
      set(V) {
        V = conversions["USVString"](V);
        this[impl].host = V;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(URL2.prototype, "hostname", {
      get() {
        return this[impl].hostname;
      },
      set(V) {
        V = conversions["USVString"](V);
        this[impl].hostname = V;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(URL2.prototype, "port", {
      get() {
        return this[impl].port;
      },
      set(V) {
        V = conversions["USVString"](V);
        this[impl].port = V;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(URL2.prototype, "pathname", {
      get() {
        return this[impl].pathname;
      },
      set(V) {
        V = conversions["USVString"](V);
        this[impl].pathname = V;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(URL2.prototype, "search", {
      get() {
        return this[impl].search;
      },
      set(V) {
        V = conversions["USVString"](V);
        this[impl].search = V;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(URL2.prototype, "hash", {
      get() {
        return this[impl].hash;
      },
      set(V) {
        V = conversions["USVString"](V);
        this[impl].hash = V;
      },
      enumerable: true,
      configurable: true
    });
    module2.exports = {
      is(obj) {
        return !!obj && obj[impl] instanceof Impl.implementation;
      },
      create(constructorArgs, privateData) {
        let obj = Object.create(URL2.prototype);
        this.setup(obj, constructorArgs, privateData);
        return obj;
      },
      setup(obj, constructorArgs, privateData) {
        if (!privateData) privateData = {};
        privateData.wrapper = obj;
        obj[impl] = new Impl.implementation(constructorArgs, privateData);
        obj[impl][utils.wrapperSymbol] = obj;
      },
      interface: URL2,
      expose: {
        Window: { URL: URL2 },
        Worker: { URL: URL2 }
      }
    };
  }
});

// node_modules/whatwg-url/lib/public-api.js
var require_public_api = __commonJS({
  "node_modules/whatwg-url/lib/public-api.js"(exports2) {
    "use strict";
    exports2.URL = require_URL().interface;
    exports2.serializeURL = require_url_state_machine().serializeURL;
    exports2.serializeURLOrigin = require_url_state_machine().serializeURLOrigin;
    exports2.basicURLParse = require_url_state_machine().basicURLParse;
    exports2.setTheUsername = require_url_state_machine().setTheUsername;
    exports2.setThePassword = require_url_state_machine().setThePassword;
    exports2.serializeHost = require_url_state_machine().serializeHost;
    exports2.serializeInteger = require_url_state_machine().serializeInteger;
    exports2.parseURL = require_url_state_machine().parseURL;
  }
});

// node_modules/node-fetch/lib/index.js
var require_lib3 = __commonJS({
  "node_modules/node-fetch/lib/index.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    function _interopDefault(ex) {
      return ex && typeof ex === "object" && "default" in ex ? ex["default"] : ex;
    }
    var Stream = _interopDefault(require("stream"));
    var http2 = _interopDefault(require("http"));
    var Url = _interopDefault(require("url"));
    var whatwgUrl = _interopDefault(require_public_api());
    var https2 = _interopDefault(require("https"));
    var zlib = _interopDefault(require("zlib"));
    var Readable = Stream.Readable;
    var BUFFER = Symbol("buffer");
    var TYPE = Symbol("type");
    var Blob2 = class _Blob {
      constructor() {
        this[TYPE] = "";
        const blobParts = arguments[0];
        const options = arguments[1];
        const buffers = [];
        let size = 0;
        if (blobParts) {
          const a = blobParts;
          const length = Number(a.length);
          for (let i = 0; i < length; i++) {
            const element = a[i];
            let buffer;
            if (element instanceof Buffer) {
              buffer = element;
            } else if (ArrayBuffer.isView(element)) {
              buffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);
            } else if (element instanceof ArrayBuffer) {
              buffer = Buffer.from(element);
            } else if (element instanceof _Blob) {
              buffer = element[BUFFER];
            } else {
              buffer = Buffer.from(typeof element === "string" ? element : String(element));
            }
            size += buffer.length;
            buffers.push(buffer);
          }
        }
        this[BUFFER] = Buffer.concat(buffers);
        let type = options && options.type !== void 0 && String(options.type).toLowerCase();
        if (type && !/[^\u0020-\u007E]/.test(type)) {
          this[TYPE] = type;
        }
      }
      get size() {
        return this[BUFFER].length;
      }
      get type() {
        return this[TYPE];
      }
      text() {
        return Promise.resolve(this[BUFFER].toString());
      }
      arrayBuffer() {
        const buf = this[BUFFER];
        const ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
        return Promise.resolve(ab);
      }
      stream() {
        const readable = new Readable();
        readable._read = function() {
        };
        readable.push(this[BUFFER]);
        readable.push(null);
        return readable;
      }
      toString() {
        return "[object Blob]";
      }
      slice() {
        const size = this.size;
        const start = arguments[0];
        const end = arguments[1];
        let relativeStart, relativeEnd;
        if (start === void 0) {
          relativeStart = 0;
        } else if (start < 0) {
          relativeStart = Math.max(size + start, 0);
        } else {
          relativeStart = Math.min(start, size);
        }
        if (end === void 0) {
          relativeEnd = size;
        } else if (end < 0) {
          relativeEnd = Math.max(size + end, 0);
        } else {
          relativeEnd = Math.min(end, size);
        }
        const span = Math.max(relativeEnd - relativeStart, 0);
        const buffer = this[BUFFER];
        const slicedBuffer = buffer.slice(relativeStart, relativeStart + span);
        const blob = new _Blob([], { type: arguments[2] });
        blob[BUFFER] = slicedBuffer;
        return blob;
      }
    };
    Object.defineProperties(Blob2.prototype, {
      size: { enumerable: true },
      type: { enumerable: true },
      slice: { enumerable: true }
    });
    Object.defineProperty(Blob2.prototype, Symbol.toStringTag, {
      value: "Blob",
      writable: false,
      enumerable: false,
      configurable: true
    });
    function FetchError(message, type, systemError) {
      Error.call(this, message);
      this.message = message;
      this.type = type;
      if (systemError) {
        this.code = this.errno = systemError.code;
      }
      Error.captureStackTrace(this, this.constructor);
    }
    FetchError.prototype = Object.create(Error.prototype);
    FetchError.prototype.constructor = FetchError;
    FetchError.prototype.name = "FetchError";
    var convert;
    try {
      convert = require("encoding").convert;
    } catch (e) {
    }
    var INTERNALS = Symbol("Body internals");
    var PassThrough = Stream.PassThrough;
    function Body(body) {
      var _this = this;
      var _ref = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, _ref$size = _ref.size;
      let size = _ref$size === void 0 ? 0 : _ref$size;
      var _ref$timeout = _ref.timeout;
      let timeout = _ref$timeout === void 0 ? 0 : _ref$timeout;
      if (body == null) {
        body = null;
      } else if (isURLSearchParams(body)) {
        body = Buffer.from(body.toString());
      } else if (isBlob(body)) ;
      else if (Buffer.isBuffer(body)) ;
      else if (Object.prototype.toString.call(body) === "[object ArrayBuffer]") {
        body = Buffer.from(body);
      } else if (ArrayBuffer.isView(body)) {
        body = Buffer.from(body.buffer, body.byteOffset, body.byteLength);
      } else if (body instanceof Stream) ;
      else {
        body = Buffer.from(String(body));
      }
      this[INTERNALS] = {
        body,
        disturbed: false,
        error: null
      };
      this.size = size;
      this.timeout = timeout;
      if (body instanceof Stream) {
        body.on("error", function(err) {
          const error = err.name === "AbortError" ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, "system", err);
          _this[INTERNALS].error = error;
        });
      }
    }
    Body.prototype = {
      get body() {
        return this[INTERNALS].body;
      },
      get bodyUsed() {
        return this[INTERNALS].disturbed;
      },
      /**
       * Decode response as ArrayBuffer
       *
       * @return  Promise
       */
      arrayBuffer() {
        return consumeBody.call(this).then(function(buf) {
          return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
        });
      },
      /**
       * Return raw response as Blob
       *
       * @return Promise
       */
      blob() {
        let ct = this.headers && this.headers.get("content-type") || "";
        return consumeBody.call(this).then(function(buf) {
          return Object.assign(
            // Prevent copying
            new Blob2([], {
              type: ct.toLowerCase()
            }),
            {
              [BUFFER]: buf
            }
          );
        });
      },
      /**
       * Decode response as json
       *
       * @return  Promise
       */
      json() {
        var _this2 = this;
        return consumeBody.call(this).then(function(buffer) {
          try {
            return JSON.parse(buffer.toString());
          } catch (err) {
            return Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, "invalid-json"));
          }
        });
      },
      /**
       * Decode response as text
       *
       * @return  Promise
       */
      text() {
        return consumeBody.call(this).then(function(buffer) {
          return buffer.toString();
        });
      },
      /**
       * Decode response as buffer (non-spec api)
       *
       * @return  Promise
       */
      buffer() {
        return consumeBody.call(this);
      },
      /**
       * Decode response as text, while automatically detecting the encoding and
       * trying to decode to UTF-8 (non-spec api)
       *
       * @return  Promise
       */
      textConverted() {
        var _this3 = this;
        return consumeBody.call(this).then(function(buffer) {
          return convertBody(buffer, _this3.headers);
        });
      }
    };
    Object.defineProperties(Body.prototype, {
      body: { enumerable: true },
      bodyUsed: { enumerable: true },
      arrayBuffer: { enumerable: true },
      blob: { enumerable: true },
      json: { enumerable: true },
      text: { enumerable: true }
    });
    Body.mixIn = function(proto) {
      for (const name3 of Object.getOwnPropertyNames(Body.prototype)) {
        if (!(name3 in proto)) {
          const desc = Object.getOwnPropertyDescriptor(Body.prototype, name3);
          Object.defineProperty(proto, name3, desc);
        }
      }
    };
    function consumeBody() {
      var _this4 = this;
      if (this[INTERNALS].disturbed) {
        return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));
      }
      this[INTERNALS].disturbed = true;
      if (this[INTERNALS].error) {
        return Body.Promise.reject(this[INTERNALS].error);
      }
      let body = this.body;
      if (body === null) {
        return Body.Promise.resolve(Buffer.alloc(0));
      }
      if (isBlob(body)) {
        body = body.stream();
      }
      if (Buffer.isBuffer(body)) {
        return Body.Promise.resolve(body);
      }
      if (!(body instanceof Stream)) {
        return Body.Promise.resolve(Buffer.alloc(0));
      }
      let accum = [];
      let accumBytes = 0;
      let abort = false;
      return new Body.Promise(function(resolve, reject) {
        let resTimeout;
        if (_this4.timeout) {
          resTimeout = setTimeout(function() {
            abort = true;
            reject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, "body-timeout"));
          }, _this4.timeout);
        }
        body.on("error", function(err) {
          if (err.name === "AbortError") {
            abort = true;
            reject(err);
          } else {
            reject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, "system", err));
          }
        });
        body.on("data", function(chunk) {
          if (abort || chunk === null) {
            return;
          }
          if (_this4.size && accumBytes + chunk.length > _this4.size) {
            abort = true;
            reject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, "max-size"));
            return;
          }
          accumBytes += chunk.length;
          accum.push(chunk);
        });
        body.on("end", function() {
          if (abort) {
            return;
          }
          clearTimeout(resTimeout);
          try {
            resolve(Buffer.concat(accum, accumBytes));
          } catch (err) {
            reject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, "system", err));
          }
        });
      });
    }
    function convertBody(buffer, headers) {
      if (typeof convert !== "function") {
        throw new Error("The package `encoding` must be installed to use the textConverted() function");
      }
      const ct = headers.get("content-type");
      let charset = "utf-8";
      let res, str;
      if (ct) {
        res = /charset=([^;]*)/i.exec(ct);
      }
      str = buffer.slice(0, 1024).toString();
      if (!res && str) {
        res = /<meta.+?charset=(['"])(.+?)\1/i.exec(str);
      }
      if (!res && str) {
        res = /<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(str);
        if (!res) {
          res = /<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(str);
          if (res) {
            res.pop();
          }
        }
        if (res) {
          res = /charset=(.*)/i.exec(res.pop());
        }
      }
      if (!res && str) {
        res = /<\?xml.+?encoding=(['"])(.+?)\1/i.exec(str);
      }
      if (res) {
        charset = res.pop();
        if (charset === "gb2312" || charset === "gbk") {
          charset = "gb18030";
        }
      }
      return convert(buffer, "UTF-8", charset).toString();
    }
    function isURLSearchParams(obj) {
      if (typeof obj !== "object" || typeof obj.append !== "function" || typeof obj.delete !== "function" || typeof obj.get !== "function" || typeof obj.getAll !== "function" || typeof obj.has !== "function" || typeof obj.set !== "function") {
        return false;
      }
      return obj.constructor.name === "URLSearchParams" || Object.prototype.toString.call(obj) === "[object URLSearchParams]" || typeof obj.sort === "function";
    }
    function isBlob(obj) {
      return typeof obj === "object" && typeof obj.arrayBuffer === "function" && typeof obj.type === "string" && typeof obj.stream === "function" && typeof obj.constructor === "function" && typeof obj.constructor.name === "string" && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);
    }
    function clone(instance) {
      let p1, p2;
      let body = instance.body;
      if (instance.bodyUsed) {
        throw new Error("cannot clone body after it is used");
      }
      if (body instanceof Stream && typeof body.getBoundary !== "function") {
        p1 = new PassThrough();
        p2 = new PassThrough();
        body.pipe(p1);
        body.pipe(p2);
        instance[INTERNALS].body = p1;
        body = p2;
      }
      return body;
    }
    function extractContentType(body) {
      if (body === null) {
        return null;
      } else if (typeof body === "string") {
        return "text/plain;charset=UTF-8";
      } else if (isURLSearchParams(body)) {
        return "application/x-www-form-urlencoded;charset=UTF-8";
      } else if (isBlob(body)) {
        return body.type || null;
      } else if (Buffer.isBuffer(body)) {
        return null;
      } else if (Object.prototype.toString.call(body) === "[object ArrayBuffer]") {
        return null;
      } else if (ArrayBuffer.isView(body)) {
        return null;
      } else if (typeof body.getBoundary === "function") {
        return `multipart/form-data;boundary=${body.getBoundary()}`;
      } else if (body instanceof Stream) {
        return null;
      } else {
        return "text/plain;charset=UTF-8";
      }
    }
    function getTotalBytes(instance) {
      const body = instance.body;
      if (body === null) {
        return 0;
      } else if (isBlob(body)) {
        return body.size;
      } else if (Buffer.isBuffer(body)) {
        return body.length;
      } else if (body && typeof body.getLengthSync === "function") {
        if (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x
        body.hasKnownLength && body.hasKnownLength()) {
          return body.getLengthSync();
        }
        return null;
      } else {
        return null;
      }
    }
    function writeToStream(dest, instance) {
      const body = instance.body;
      if (body === null) {
        dest.end();
      } else if (isBlob(body)) {
        body.stream().pipe(dest);
      } else if (Buffer.isBuffer(body)) {
        dest.write(body);
        dest.end();
      } else {
        body.pipe(dest);
      }
    }
    Body.Promise = global.Promise;
    var invalidTokenRegex = /[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/;
    var invalidHeaderCharRegex = /[^\t\x20-\x7e\x80-\xff]/;
    function validateName(name3) {
      name3 = `${name3}`;
      if (invalidTokenRegex.test(name3) || name3 === "") {
        throw new TypeError(`${name3} is not a legal HTTP header name`);
      }
    }
    function validateValue(value) {
      value = `${value}`;
      if (invalidHeaderCharRegex.test(value)) {
        throw new TypeError(`${value} is not a legal HTTP header value`);
      }
    }
    function find(map, name3) {
      name3 = name3.toLowerCase();
      for (const key in map) {
        if (key.toLowerCase() === name3) {
          return key;
        }
      }
      return void 0;
    }
    var MAP = Symbol("map");
    var Headers = class _Headers {
      /**
       * Headers class
       *
       * @param   Object  headers  Response headers
       * @return  Void
       */
      constructor() {
        let init = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : void 0;
        this[MAP] = /* @__PURE__ */ Object.create(null);
        if (init instanceof _Headers) {
          const rawHeaders = init.raw();
          const headerNames = Object.keys(rawHeaders);
          for (const headerName of headerNames) {
            for (const value of rawHeaders[headerName]) {
              this.append(headerName, value);
            }
          }
          return;
        }
        if (init == null) ;
        else if (typeof init === "object") {
          const method = init[Symbol.iterator];
          if (method != null) {
            if (typeof method !== "function") {
              throw new TypeError("Header pairs must be iterable");
            }
            const pairs = [];
            for (const pair of init) {
              if (typeof pair !== "object" || typeof pair[Symbol.iterator] !== "function") {
                throw new TypeError("Each header pair must be iterable");
              }
              pairs.push(Array.from(pair));
            }
            for (const pair of pairs) {
              if (pair.length !== 2) {
                throw new TypeError("Each header pair must be a name/value tuple");
              }
              this.append(pair[0], pair[1]);
            }
          } else {
            for (const key of Object.keys(init)) {
              const value = init[key];
              this.append(key, value);
            }
          }
        } else {
          throw new TypeError("Provided initializer must be an object");
        }
      }
      /**
       * Return combined header value given name
       *
       * @param   String  name  Header name
       * @return  Mixed
       */
      get(name3) {
        name3 = `${name3}`;
        validateName(name3);
        const key = find(this[MAP], name3);
        if (key === void 0) {
          return null;
        }
        return this[MAP][key].join(", ");
      }
      /**
       * Iterate over all headers
       *
       * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)
       * @param   Boolean   thisArg   `this` context for callback function
       * @return  Void
       */
      forEach(callback) {
        let thisArg = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : void 0;
        let pairs = getHeaders(this);
        let i = 0;
        while (i < pairs.length) {
          var _pairs$i = pairs[i];
          const name3 = _pairs$i[0], value = _pairs$i[1];
          callback.call(thisArg, value, name3, this);
          pairs = getHeaders(this);
          i++;
        }
      }
      /**
       * Overwrite header values given name
       *
       * @param   String  name   Header name
       * @param   String  value  Header value
       * @return  Void
       */
      set(name3, value) {
        name3 = `${name3}`;
        value = `${value}`;
        validateName(name3);
        validateValue(value);
        const key = find(this[MAP], name3);
        this[MAP][key !== void 0 ? key : name3] = [value];
      }
      /**
       * Append a value onto existing header
       *
       * @param   String  name   Header name
       * @param   String  value  Header value
       * @return  Void
       */
      append(name3, value) {
        name3 = `${name3}`;
        value = `${value}`;
        validateName(name3);
        validateValue(value);
        const key = find(this[MAP], name3);
        if (key !== void 0) {
          this[MAP][key].push(value);
        } else {
          this[MAP][name3] = [value];
        }
      }
      /**
       * Check for header name existence
       *
       * @param   String   name  Header name
       * @return  Boolean
       */
      has(name3) {
        name3 = `${name3}`;
        validateName(name3);
        return find(this[MAP], name3) !== void 0;
      }
      /**
       * Delete all header values given name
       *
       * @param   String  name  Header name
       * @return  Void
       */
      delete(name3) {
        name3 = `${name3}`;
        validateName(name3);
        const key = find(this[MAP], name3);
        if (key !== void 0) {
          delete this[MAP][key];
        }
      }
      /**
       * Return raw headers (non-spec api)
       *
       * @return  Object
       */
      raw() {
        return this[MAP];
      }
      /**
       * Get an iterator on keys.
       *
       * @return  Iterator
       */
      keys() {
        return createHeadersIterator(this, "key");
      }
      /**
       * Get an iterator on values.
       *
       * @return  Iterator
       */
      values() {
        return createHeadersIterator(this, "value");
      }
      /**
       * Get an iterator on entries.
       *
       * This is the default iterator of the Headers object.
       *
       * @return  Iterator
       */
      [Symbol.iterator]() {
        return createHeadersIterator(this, "key+value");
      }
    };
    Headers.prototype.entries = Headers.prototype[Symbol.iterator];
    Object.defineProperty(Headers.prototype, Symbol.toStringTag, {
      value: "Headers",
      writable: false,
      enumerable: false,
      configurable: true
    });
    Object.defineProperties(Headers.prototype, {
      get: { enumerable: true },
      forEach: { enumerable: true },
      set: { enumerable: true },
      append: { enumerable: true },
      has: { enumerable: true },
      delete: { enumerable: true },
      keys: { enumerable: true },
      values: { enumerable: true },
      entries: { enumerable: true }
    });
    function getHeaders(headers) {
      let kind = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "key+value";
      const keys = Object.keys(headers[MAP]).sort();
      return keys.map(kind === "key" ? function(k) {
        return k.toLowerCase();
      } : kind === "value" ? function(k) {
        return headers[MAP][k].join(", ");
      } : function(k) {
        return [k.toLowerCase(), headers[MAP][k].join(", ")];
      });
    }
    var INTERNAL = Symbol("internal");
    function createHeadersIterator(target, kind) {
      const iterator2 = Object.create(HeadersIteratorPrototype);
      iterator2[INTERNAL] = {
        target,
        kind,
        index: 0
      };
      return iterator2;
    }
    var HeadersIteratorPrototype = Object.setPrototypeOf({
      next() {
        if (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {
          throw new TypeError("Value of `this` is not a HeadersIterator");
        }
        var _INTERNAL = this[INTERNAL];
        const target = _INTERNAL.target, kind = _INTERNAL.kind, index = _INTERNAL.index;
        const values = getHeaders(target, kind);
        const len = values.length;
        if (index >= len) {
          return {
            value: void 0,
            done: true
          };
        }
        this[INTERNAL].index = index + 1;
        return {
          value: values[index],
          done: false
        };
      }
    }, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));
    Object.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {
      value: "HeadersIterator",
      writable: false,
      enumerable: false,
      configurable: true
    });
    function exportNodeCompatibleHeaders(headers) {
      const obj = Object.assign({ __proto__: null }, headers[MAP]);
      const hostHeaderKey = find(headers[MAP], "Host");
      if (hostHeaderKey !== void 0) {
        obj[hostHeaderKey] = obj[hostHeaderKey][0];
      }
      return obj;
    }
    function createHeadersLenient(obj) {
      const headers = new Headers();
      for (const name3 of Object.keys(obj)) {
        if (invalidTokenRegex.test(name3)) {
          continue;
        }
        if (Array.isArray(obj[name3])) {
          for (const val of obj[name3]) {
            if (invalidHeaderCharRegex.test(val)) {
              continue;
            }
            if (headers[MAP][name3] === void 0) {
              headers[MAP][name3] = [val];
            } else {
              headers[MAP][name3].push(val);
            }
          }
        } else if (!invalidHeaderCharRegex.test(obj[name3])) {
          headers[MAP][name3] = [obj[name3]];
        }
      }
      return headers;
    }
    var INTERNALS$1 = Symbol("Response internals");
    var STATUS_CODES = http2.STATUS_CODES;
    var Response = class _Response {
      constructor() {
        let body = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;
        let opts = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        Body.call(this, body, opts);
        const status = opts.status || 200;
        const headers = new Headers(opts.headers);
        if (body != null && !headers.has("Content-Type")) {
          const contentType = extractContentType(body);
          if (contentType) {
            headers.append("Content-Type", contentType);
          }
        }
        this[INTERNALS$1] = {
          url: opts.url,
          status,
          statusText: opts.statusText || STATUS_CODES[status],
          headers,
          counter: opts.counter
        };
      }
      get url() {
        return this[INTERNALS$1].url || "";
      }
      get status() {
        return this[INTERNALS$1].status;
      }
      /**
       * Convenience property representing if the request ended normally
       */
      get ok() {
        return this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;
      }
      get redirected() {
        return this[INTERNALS$1].counter > 0;
      }
      get statusText() {
        return this[INTERNALS$1].statusText;
      }
      get headers() {
        return this[INTERNALS$1].headers;
      }
      /**
       * Clone this response
       *
       * @return  Response
       */
      clone() {
        return new _Response(clone(this), {
          url: this.url,
          status: this.status,
          statusText: this.statusText,
          headers: this.headers,
          ok: this.ok,
          redirected: this.redirected
        });
      }
    };
    Body.mixIn(Response.prototype);
    Object.defineProperties(Response.prototype, {
      url: { enumerable: true },
      status: { enumerable: true },
      ok: { enumerable: true },
      redirected: { enumerable: true },
      statusText: { enumerable: true },
      headers: { enumerable: true },
      clone: { enumerable: true }
    });
    Object.defineProperty(Response.prototype, Symbol.toStringTag, {
      value: "Response",
      writable: false,
      enumerable: false,
      configurable: true
    });
    var INTERNALS$2 = Symbol("Request internals");
    var URL2 = Url.URL || whatwgUrl.URL;
    var parse_url = Url.parse;
    var format_url = Url.format;
    function parseURL(urlStr) {
      if (/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(urlStr)) {
        urlStr = new URL2(urlStr).toString();
      }
      return parse_url(urlStr);
    }
    var streamDestructionSupported = "destroy" in Stream.Readable.prototype;
    function isRequest(input) {
      return typeof input === "object" && typeof input[INTERNALS$2] === "object";
    }
    function isAbortSignal(signal) {
      const proto = signal && typeof signal === "object" && Object.getPrototypeOf(signal);
      return !!(proto && proto.constructor.name === "AbortSignal");
    }
    var Request = class _Request {
      constructor(input) {
        let init = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        let parsedURL;
        if (!isRequest(input)) {
          if (input && input.href) {
            parsedURL = parseURL(input.href);
          } else {
            parsedURL = parseURL(`${input}`);
          }
          input = {};
        } else {
          parsedURL = parseURL(input.url);
        }
        let method = init.method || input.method || "GET";
        method = method.toUpperCase();
        if ((init.body != null || isRequest(input) && input.body !== null) && (method === "GET" || method === "HEAD")) {
          throw new TypeError("Request with GET/HEAD method cannot have body");
        }
        let inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;
        Body.call(this, inputBody, {
          timeout: init.timeout || input.timeout || 0,
          size: init.size || input.size || 0
        });
        const headers = new Headers(init.headers || input.headers || {});
        if (inputBody != null && !headers.has("Content-Type")) {
          const contentType = extractContentType(inputBody);
          if (contentType) {
            headers.append("Content-Type", contentType);
          }
        }
        let signal = isRequest(input) ? input.signal : null;
        if ("signal" in init) signal = init.signal;
        if (signal != null && !isAbortSignal(signal)) {
          throw new TypeError("Expected signal to be an instanceof AbortSignal");
        }
        this[INTERNALS$2] = {
          method,
          redirect: init.redirect || input.redirect || "follow",
          headers,
          parsedURL,
          signal
        };
        this.follow = init.follow !== void 0 ? init.follow : input.follow !== void 0 ? input.follow : 20;
        this.compress = init.compress !== void 0 ? init.compress : input.compress !== void 0 ? input.compress : true;
        this.counter = init.counter || input.counter || 0;
        this.agent = init.agent || input.agent;
      }
      get method() {
        return this[INTERNALS$2].method;
      }
      get url() {
        return format_url(this[INTERNALS$2].parsedURL);
      }
      get headers() {
        return this[INTERNALS$2].headers;
      }
      get redirect() {
        return this[INTERNALS$2].redirect;
      }
      get signal() {
        return this[INTERNALS$2].signal;
      }
      /**
       * Clone this request
       *
       * @return  Request
       */
      clone() {
        return new _Request(this);
      }
    };
    Body.mixIn(Request.prototype);
    Object.defineProperty(Request.prototype, Symbol.toStringTag, {
      value: "Request",
      writable: false,
      enumerable: false,
      configurable: true
    });
    Object.defineProperties(Request.prototype, {
      method: { enumerable: true },
      url: { enumerable: true },
      headers: { enumerable: true },
      redirect: { enumerable: true },
      clone: { enumerable: true },
      signal: { enumerable: true }
    });
    function getNodeRequestOptions(request2) {
      const parsedURL = request2[INTERNALS$2].parsedURL;
      const headers = new Headers(request2[INTERNALS$2].headers);
      if (!headers.has("Accept")) {
        headers.set("Accept", "*/*");
      }
      if (!parsedURL.protocol || !parsedURL.hostname) {
        throw new TypeError("Only absolute URLs are supported");
      }
      if (!/^https?:$/.test(parsedURL.protocol)) {
        throw new TypeError("Only HTTP(S) protocols are supported");
      }
      if (request2.signal && request2.body instanceof Stream.Readable && !streamDestructionSupported) {
        throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");
      }
      let contentLengthValue = null;
      if (request2.body == null && /^(POST|PUT)$/i.test(request2.method)) {
        contentLengthValue = "0";
      }
      if (request2.body != null) {
        const totalBytes = getTotalBytes(request2);
        if (typeof totalBytes === "number") {
          contentLengthValue = String(totalBytes);
        }
      }
      if (contentLengthValue) {
        headers.set("Content-Length", contentLengthValue);
      }
      if (!headers.has("User-Agent")) {
        headers.set("User-Agent", "node-fetch/1.0 (+https://github.com/bitinn/node-fetch)");
      }
      if (request2.compress && !headers.has("Accept-Encoding")) {
        headers.set("Accept-Encoding", "gzip,deflate");
      }
      let agent = request2.agent;
      if (typeof agent === "function") {
        agent = agent(parsedURL);
      }
      return Object.assign({}, parsedURL, {
        method: request2.method,
        headers: exportNodeCompatibleHeaders(headers),
        agent
      });
    }
    function AbortError(message) {
      Error.call(this, message);
      this.type = "aborted";
      this.message = message;
      Error.captureStackTrace(this, this.constructor);
    }
    AbortError.prototype = Object.create(Error.prototype);
    AbortError.prototype.constructor = AbortError;
    AbortError.prototype.name = "AbortError";
    var URL$1 = Url.URL || whatwgUrl.URL;
    var PassThrough$1 = Stream.PassThrough;
    var isDomainOrSubdomain = function isDomainOrSubdomain2(destination, original) {
      const orig = new URL$1(original).hostname;
      const dest = new URL$1(destination).hostname;
      return orig === dest || orig[orig.length - dest.length - 1] === "." && orig.endsWith(dest);
    };
    var isSameProtocol = function isSameProtocol2(destination, original) {
      const orig = new URL$1(original).protocol;
      const dest = new URL$1(destination).protocol;
      return orig === dest;
    };
    function fetch2(url, opts) {
      if (!fetch2.Promise) {
        throw new Error("native promise missing, set fetch.Promise to your favorite alternative");
      }
      Body.Promise = fetch2.Promise;
      return new fetch2.Promise(function(resolve, reject) {
        const request2 = new Request(url, opts);
        const options = getNodeRequestOptions(request2);
        const send = (options.protocol === "https:" ? https2 : http2).request;
        const signal = request2.signal;
        let response = null;
        const abort = function abort2() {
          let error = new AbortError("The user aborted a request.");
          reject(error);
          if (request2.body && request2.body instanceof Stream.Readable) {
            destroyStream(request2.body, error);
          }
          if (!response || !response.body) return;
          response.body.emit("error", error);
        };
        if (signal && signal.aborted) {
          abort();
          return;
        }
        const abortAndFinalize = function abortAndFinalize2() {
          abort();
          finalize();
        };
        const req = send(options);
        let reqTimeout;
        if (signal) {
          signal.addEventListener("abort", abortAndFinalize);
        }
        function finalize() {
          req.abort();
          if (signal) signal.removeEventListener("abort", abortAndFinalize);
          clearTimeout(reqTimeout);
        }
        if (request2.timeout) {
          req.once("socket", function(socket) {
            reqTimeout = setTimeout(function() {
              reject(new FetchError(`network timeout at: ${request2.url}`, "request-timeout"));
              finalize();
            }, request2.timeout);
          });
        }
        req.on("error", function(err) {
          reject(new FetchError(`request to ${request2.url} failed, reason: ${err.message}`, "system", err));
          if (response && response.body) {
            destroyStream(response.body, err);
          }
          finalize();
        });
        fixResponseChunkedTransferBadEnding(req, function(err) {
          if (signal && signal.aborted) {
            return;
          }
          if (response && response.body) {
            destroyStream(response.body, err);
          }
        });
        if (parseInt(process.version.substring(1)) < 14) {
          req.on("socket", function(s) {
            s.addListener("close", function(hadError) {
              const hasDataListener = s.listenerCount("data") > 0;
              if (response && hasDataListener && !hadError && !(signal && signal.aborted)) {
                const err = new Error("Premature close");
                err.code = "ERR_STREAM_PREMATURE_CLOSE";
                response.body.emit("error", err);
              }
            });
          });
        }
        req.on("response", function(res) {
          clearTimeout(reqTimeout);
          const headers = createHeadersLenient(res.headers);
          if (fetch2.isRedirect(res.statusCode)) {
            const location = headers.get("Location");
            let locationURL = null;
            try {
              locationURL = location === null ? null : new URL$1(location, request2.url).toString();
            } catch (err) {
              if (request2.redirect !== "manual") {
                reject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, "invalid-redirect"));
                finalize();
                return;
              }
            }
            switch (request2.redirect) {
              case "error":
                reject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request2.url}`, "no-redirect"));
                finalize();
                return;
              case "manual":
                if (locationURL !== null) {
                  try {
                    headers.set("Location", locationURL);
                  } catch (err) {
                    reject(err);
                  }
                }
                break;
              case "follow":
                if (locationURL === null) {
                  break;
                }
                if (request2.counter >= request2.follow) {
                  reject(new FetchError(`maximum redirect reached at: ${request2.url}`, "max-redirect"));
                  finalize();
                  return;
                }
                const requestOpts = {
                  headers: new Headers(request2.headers),
                  follow: request2.follow,
                  counter: request2.counter + 1,
                  agent: request2.agent,
                  compress: request2.compress,
                  method: request2.method,
                  body: request2.body,
                  signal: request2.signal,
                  timeout: request2.timeout,
                  size: request2.size
                };
                if (!isDomainOrSubdomain(request2.url, locationURL) || !isSameProtocol(request2.url, locationURL)) {
                  for (const name3 of ["authorization", "www-authenticate", "cookie", "cookie2"]) {
                    requestOpts.headers.delete(name3);
                  }
                }
                if (res.statusCode !== 303 && request2.body && getTotalBytes(request2) === null) {
                  reject(new FetchError("Cannot follow redirect with body being a readable stream", "unsupported-redirect"));
                  finalize();
                  return;
                }
                if (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request2.method === "POST") {
                  requestOpts.method = "GET";
                  requestOpts.body = void 0;
                  requestOpts.headers.delete("content-length");
                }
                resolve(fetch2(new Request(locationURL, requestOpts)));
                finalize();
                return;
            }
          }
          res.once("end", function() {
            if (signal) signal.removeEventListener("abort", abortAndFinalize);
          });
          let body = res.pipe(new PassThrough$1());
          const response_options = {
            url: request2.url,
            status: res.statusCode,
            statusText: res.statusMessage,
            headers,
            size: request2.size,
            timeout: request2.timeout,
            counter: request2.counter
          };
          const codings = headers.get("Content-Encoding");
          if (!request2.compress || request2.method === "HEAD" || codings === null || res.statusCode === 204 || res.statusCode === 304) {
            response = new Response(body, response_options);
            resolve(response);
            return;
          }
          const zlibOptions = {
            flush: zlib.Z_SYNC_FLUSH,
            finishFlush: zlib.Z_SYNC_FLUSH
          };
          if (codings == "gzip" || codings == "x-gzip") {
            body = body.pipe(zlib.createGunzip(zlibOptions));
            response = new Response(body, response_options);
            resolve(response);
            return;
          }
          if (codings == "deflate" || codings == "x-deflate") {
            const raw = res.pipe(new PassThrough$1());
            raw.once("data", function(chunk) {
              if ((chunk[0] & 15) === 8) {
                body = body.pipe(zlib.createInflate());
              } else {
                body = body.pipe(zlib.createInflateRaw());
              }
              response = new Response(body, response_options);
              resolve(response);
            });
            raw.on("end", function() {
              if (!response) {
                response = new Response(body, response_options);
                resolve(response);
              }
            });
            return;
          }
          if (codings == "br" && typeof zlib.createBrotliDecompress === "function") {
            body = body.pipe(zlib.createBrotliDecompress());
            response = new Response(body, response_options);
            resolve(response);
            return;
          }
          response = new Response(body, response_options);
          resolve(response);
        });
        writeToStream(req, request2);
      });
    }
    function fixResponseChunkedTransferBadEnding(request2, errorCallback) {
      let socket;
      request2.on("socket", function(s) {
        socket = s;
      });
      request2.on("response", function(response) {
        const headers = response.headers;
        if (headers["transfer-encoding"] === "chunked" && !headers["content-length"]) {
          response.once("close", function(hadError) {
            const hasDataListener = socket && socket.listenerCount("data") > 0;
            if (hasDataListener && !hadError) {
              const err = new Error("Premature close");
              err.code = "ERR_STREAM_PREMATURE_CLOSE";
              errorCallback(err);
            }
          });
        }
      });
    }
    function destroyStream(stream, err) {
      if (stream.destroy) {
        stream.destroy(err);
      } else {
        stream.emit("error", err);
        stream.end();
      }
    }
    fetch2.isRedirect = function(code) {
      return code === 301 || code === 302 || code === 303 || code === 307 || code === 308;
    };
    fetch2.Promise = global.Promise;
    module2.exports = exports2 = fetch2;
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.default = exports2;
    exports2.Headers = Headers;
    exports2.Request = Request;
    exports2.Response = Response;
    exports2.FetchError = FetchError;
    exports2.AbortError = AbortError;
  }
});

// src/actions/ensure-entraid-app-registration/index.js
var index_exports = {};
__export(index_exports, {
  executeAction: () => executeAction
});
module.exports = __toCommonJS(index_exports);
var import_core3 = __toESM(require_core(), 1);

// node_modules/@azure/msal-node/dist/cache/serializer/Serializer.mjs
var Serializer = class {
  /**
   * serialize the JSON blob
   * @param data - JSON blob cache
   */
  static serializeJSONBlob(data) {
    return JSON.stringify(data);
  }
  /**
   * Serialize Accounts
   * @param accCache - cache of accounts
   */
  static serializeAccounts(accCache) {
    const accounts = {};
    Object.keys(accCache).map(function(key) {
      const accountEntity = accCache[key];
      accounts[key] = {
        home_account_id: accountEntity.homeAccountId,
        environment: accountEntity.environment,
        realm: accountEntity.realm,
        local_account_id: accountEntity.localAccountId,
        username: accountEntity.username,
        authority_type: accountEntity.authorityType,
        name: accountEntity.name,
        client_info: accountEntity.clientInfo,
        last_modification_time: accountEntity.lastModificationTime,
        last_modification_app: accountEntity.lastModificationApp,
        tenantProfiles: accountEntity.tenantProfiles?.map((tenantProfile) => {
          return JSON.stringify(tenantProfile);
        })
      };
    });
    return accounts;
  }
  /**
   * Serialize IdTokens
   * @param idTCache - cache of ID tokens
   */
  static serializeIdTokens(idTCache) {
    const idTokens = {};
    Object.keys(idTCache).map(function(key) {
      const idTEntity = idTCache[key];
      idTokens[key] = {
        home_account_id: idTEntity.homeAccountId,
        environment: idTEntity.environment,
        credential_type: idTEntity.credentialType,
        client_id: idTEntity.clientId,
        secret: idTEntity.secret,
        realm: idTEntity.realm
      };
    });
    return idTokens;
  }
  /**
   * Serializes AccessTokens
   * @param atCache - cache of access tokens
   */
  static serializeAccessTokens(atCache) {
    const accessTokens = {};
    Object.keys(atCache).map(function(key) {
      const atEntity = atCache[key];
      accessTokens[key] = {
        home_account_id: atEntity.homeAccountId,
        environment: atEntity.environment,
        credential_type: atEntity.credentialType,
        client_id: atEntity.clientId,
        secret: atEntity.secret,
        realm: atEntity.realm,
        target: atEntity.target,
        cached_at: atEntity.cachedAt,
        expires_on: atEntity.expiresOn,
        extended_expires_on: atEntity.extendedExpiresOn,
        refresh_on: atEntity.refreshOn,
        key_id: atEntity.keyId,
        token_type: atEntity.tokenType,
        requestedClaims: atEntity.requestedClaims,
        requestedClaimsHash: atEntity.requestedClaimsHash,
        userAssertionHash: atEntity.userAssertionHash
      };
    });
    return accessTokens;
  }
  /**
   * Serialize refreshTokens
   * @param rtCache - cache of refresh tokens
   */
  static serializeRefreshTokens(rtCache) {
    const refreshTokens = {};
    Object.keys(rtCache).map(function(key) {
      const rtEntity = rtCache[key];
      refreshTokens[key] = {
        home_account_id: rtEntity.homeAccountId,
        environment: rtEntity.environment,
        credential_type: rtEntity.credentialType,
        client_id: rtEntity.clientId,
        secret: rtEntity.secret,
        family_id: rtEntity.familyId,
        target: rtEntity.target,
        realm: rtEntity.realm
      };
    });
    return refreshTokens;
  }
  /**
   * Serialize amdtCache
   * @param amdtCache - cache of app metadata
   */
  static serializeAppMetadata(amdtCache) {
    const appMetadata = {};
    Object.keys(amdtCache).map(function(key) {
      const amdtEntity = amdtCache[key];
      appMetadata[key] = {
        client_id: amdtEntity.clientId,
        environment: amdtEntity.environment,
        family_id: amdtEntity.familyId
      };
    });
    return appMetadata;
  }
  /**
   * Serialize the cache
   * @param inMemCache - itemised cache read from the JSON
   */
  static serializeAllCache(inMemCache) {
    return {
      Account: this.serializeAccounts(inMemCache.accounts),
      IdToken: this.serializeIdTokens(inMemCache.idTokens),
      AccessToken: this.serializeAccessTokens(inMemCache.accessTokens),
      RefreshToken: this.serializeRefreshTokens(inMemCache.refreshTokens),
      AppMetadata: this.serializeAppMetadata(inMemCache.appMetadata)
    };
  }
};

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/utils/Constants.mjs
var Constants = {
  LIBRARY_NAME: "MSAL.JS",
  SKU: "msal.js.common",
  // default authority
  DEFAULT_AUTHORITY: "https://login.microsoftonline.com/common/",
  DEFAULT_AUTHORITY_HOST: "login.microsoftonline.com",
  DEFAULT_COMMON_TENANT: "common",
  // ADFS String
  ADFS: "adfs",
  DSTS: "dstsv2",
  // Default AAD Instance Discovery Endpoint
  AAD_INSTANCE_DISCOVERY_ENDPT: "https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=",
  // CIAM URL
  CIAM_AUTH_URL: ".ciamlogin.com",
  AAD_TENANT_DOMAIN_SUFFIX: ".onmicrosoft.com",
  // Resource delimiter - used for certain cache entries
  RESOURCE_DELIM: "|",
  // Placeholder for non-existent account ids/objects
  NO_ACCOUNT: "NO_ACCOUNT",
  // Claims
  CLAIMS: "claims",
  // Consumer UTID
  CONSUMER_UTID: "9188040d-6c67-4c5b-b112-36a304b66dad",
  // Default scopes
  OPENID_SCOPE: "openid",
  PROFILE_SCOPE: "profile",
  OFFLINE_ACCESS_SCOPE: "offline_access",
  EMAIL_SCOPE: "email",
  CODE_GRANT_TYPE: "authorization_code",
  RT_GRANT_TYPE: "refresh_token",
  S256_CODE_CHALLENGE_METHOD: "S256",
  URL_FORM_CONTENT_TYPE: "application/x-www-form-urlencoded;charset=utf-8",
  AUTHORIZATION_PENDING: "authorization_pending",
  NOT_DEFINED: "not_defined",
  EMPTY_STRING: "",
  NOT_APPLICABLE: "N/A",
  NOT_AVAILABLE: "Not Available",
  FORWARD_SLASH: "/",
  IMDS_ENDPOINT: "http://169.254.169.254/metadata/instance/compute/location",
  IMDS_VERSION: "2020-06-01",
  IMDS_TIMEOUT: 2e3,
  AZURE_REGION_AUTO_DISCOVER_FLAG: "TryAutoDetect",
  REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX: "login.microsoft.com",
  KNOWN_PUBLIC_CLOUDS: [
    "login.microsoftonline.com",
    "login.windows.net",
    "login.microsoft.com",
    "sts.windows.net"
  ],
  SHR_NONCE_VALIDITY: 240,
  INVALID_INSTANCE: "invalid_instance"
};
var HttpStatus = {
  SUCCESS: 200,
  SUCCESS_RANGE_START: 200,
  SUCCESS_RANGE_END: 299,
  REDIRECT: 302,
  CLIENT_ERROR: 400,
  CLIENT_ERROR_RANGE_START: 400,
  BAD_REQUEST: 400,
  UNAUTHORIZED: 401,
  NOT_FOUND: 404,
  REQUEST_TIMEOUT: 408,
  GONE: 410,
  TOO_MANY_REQUESTS: 429,
  CLIENT_ERROR_RANGE_END: 499,
  SERVER_ERROR: 500,
  SERVER_ERROR_RANGE_START: 500,
  SERVICE_UNAVAILABLE: 503,
  GATEWAY_TIMEOUT: 504,
  SERVER_ERROR_RANGE_END: 599,
  MULTI_SIDED_ERROR: 600
};
var OIDC_DEFAULT_SCOPES = [
  Constants.OPENID_SCOPE,
  Constants.PROFILE_SCOPE,
  Constants.OFFLINE_ACCESS_SCOPE
];
var OIDC_SCOPES = [...OIDC_DEFAULT_SCOPES, Constants.EMAIL_SCOPE];
var HeaderNames = {
  CONTENT_TYPE: "Content-Type",
  CONTENT_LENGTH: "Content-Length",
  RETRY_AFTER: "Retry-After",
  CCS_HEADER: "X-AnchorMailbox",
  WWWAuthenticate: "WWW-Authenticate",
  AuthenticationInfo: "Authentication-Info",
  X_MS_REQUEST_ID: "x-ms-request-id",
  X_MS_HTTP_VERSION: "x-ms-httpver"
};
var AADAuthorityConstants = {
  COMMON: "common",
  ORGANIZATIONS: "organizations",
  CONSUMERS: "consumers"
};
var ClaimsRequestKeys = {
  ACCESS_TOKEN: "access_token",
  XMS_CC: "xms_cc"
};
var PromptValue = {
  LOGIN: "login",
  SELECT_ACCOUNT: "select_account",
  CONSENT: "consent",
  NONE: "none",
  CREATE: "create",
  NO_SESSION: "no_session"
};
var OAuthResponseType = {
  CODE: "code",
  IDTOKEN_TOKEN: "id_token token",
  IDTOKEN_TOKEN_REFRESHTOKEN: "id_token token refresh_token"
};
var ResponseMode = {
  QUERY: "query",
  FRAGMENT: "fragment",
  FORM_POST: "form_post"
};
var GrantType = {
  IMPLICIT_GRANT: "implicit",
  AUTHORIZATION_CODE_GRANT: "authorization_code",
  CLIENT_CREDENTIALS_GRANT: "client_credentials",
  RESOURCE_OWNER_PASSWORD_GRANT: "password",
  REFRESH_TOKEN_GRANT: "refresh_token",
  DEVICE_CODE_GRANT: "device_code",
  JWT_BEARER: "urn:ietf:params:oauth:grant-type:jwt-bearer"
};
var CacheAccountType = {
  MSSTS_ACCOUNT_TYPE: "MSSTS",
  ADFS_ACCOUNT_TYPE: "ADFS",
  MSAV1_ACCOUNT_TYPE: "MSA",
  GENERIC_ACCOUNT_TYPE: "Generic"
  // NTLM, Kerberos, FBA, Basic etc
};
var Separators = {
  CACHE_KEY_SEPARATOR: "-",
  CLIENT_INFO_SEPARATOR: "."
};
var CredentialType = {
  ID_TOKEN: "IdToken",
  ACCESS_TOKEN: "AccessToken",
  ACCESS_TOKEN_WITH_AUTH_SCHEME: "AccessToken_With_AuthScheme",
  REFRESH_TOKEN: "RefreshToken"
};
var APP_METADATA = "appmetadata";
var CLIENT_INFO = "client_info";
var THE_FAMILY_ID = "1";
var AUTHORITY_METADATA_CONSTANTS = {
  CACHE_KEY: "authority-metadata",
  REFRESH_TIME_SECONDS: 3600 * 24
  // 24 Hours
};
var AuthorityMetadataSource = {
  CONFIG: "config",
  CACHE: "cache",
  NETWORK: "network",
  HARDCODED_VALUES: "hardcoded_values"
};
var SERVER_TELEM_CONSTANTS = {
  SCHEMA_VERSION: 5,
  MAX_LAST_HEADER_BYTES: 330,
  MAX_CACHED_ERRORS: 50,
  CACHE_KEY: "server-telemetry",
  CATEGORY_SEPARATOR: "|",
  VALUE_SEPARATOR: ",",
  OVERFLOW_TRUE: "1",
  OVERFLOW_FALSE: "0",
  UNKNOWN_ERROR: "unknown_error"
};
var AuthenticationScheme = {
  BEARER: "Bearer",
  POP: "pop",
  SSH: "ssh-cert"
};
var ThrottlingConstants = {
  // Default time to throttle RequestThumbprint in seconds
  DEFAULT_THROTTLE_TIME_SECONDS: 60,
  // Default maximum time to throttle in seconds, overrides what the server sends back
  DEFAULT_MAX_THROTTLE_TIME_SECONDS: 3600,
  // Prefix for storing throttling entries
  THROTTLING_PREFIX: "throttling",
  // Value assigned to the x-ms-lib-capability header to indicate to the server the library supports throttling
  X_MS_LIB_CAPABILITY_VALUE: "retry-after, h429"
};
var Errors = {
  INVALID_GRANT_ERROR: "invalid_grant",
  CLIENT_MISMATCH_ERROR: "client_mismatch"
};
var PasswordGrantConstants = {
  username: "username",
  password: "password"
};
var RegionDiscoverySources = {
  FAILED_AUTO_DETECTION: "1",
  INTERNAL_CACHE: "2",
  ENVIRONMENT_VARIABLE: "3",
  IMDS: "4"
};
var RegionDiscoveryOutcomes = {
  CONFIGURED_NO_AUTO_DETECTION: "2",
  AUTO_DETECTION_REQUESTED_SUCCESSFUL: "4",
  AUTO_DETECTION_REQUESTED_FAILED: "5"
};
var CacheOutcome = {
  // When a token is found in the cache or the cache is not supposed to be hit when making the request
  NOT_APPLICABLE: "0",
  // When the token request goes to the identity provider because force_refresh was set to true. Also occurs if claims were requested
  FORCE_REFRESH_OR_CLAIMS: "1",
  // When the token request goes to the identity provider because no cached access token exists
  NO_CACHED_ACCESS_TOKEN: "2",
  // When the token request goes to the identity provider because cached access token expired
  CACHED_ACCESS_TOKEN_EXPIRED: "3",
  // When the token request goes to the identity provider because refresh_in was used and the existing token needs to be refreshed
  PROACTIVELY_REFRESHED: "4"
};
var DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;
var EncodingTypes = {
  BASE64: "base64",
  HEX: "hex",
  UTF8: "utf-8"
};

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/error/AuthErrorCodes.mjs
var unexpectedError = "unexpected_error";
var postRequestFailed = "post_request_failed";

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/error/AuthError.mjs
var AuthErrorMessages = {
  [unexpectedError]: "Unexpected error in authentication.",
  [postRequestFailed]: "Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details."
};
var AuthErrorMessage = {
  unexpectedError: {
    code: unexpectedError,
    desc: AuthErrorMessages[unexpectedError]
  },
  postRequestFailed: {
    code: postRequestFailed,
    desc: AuthErrorMessages[postRequestFailed]
  }
};
var AuthError = class _AuthError extends Error {
  constructor(errorCode, errorMessage, suberror) {
    const errorString = errorMessage ? `${errorCode}: ${errorMessage}` : errorCode;
    super(errorString);
    Object.setPrototypeOf(this, _AuthError.prototype);
    this.errorCode = errorCode || Constants.EMPTY_STRING;
    this.errorMessage = errorMessage || Constants.EMPTY_STRING;
    this.subError = suberror || Constants.EMPTY_STRING;
    this.name = "AuthError";
  }
  setCorrelationId(correlationId) {
    this.correlationId = correlationId;
  }
};

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs
var ClientAuthErrorCodes_exports = {};
__export(ClientAuthErrorCodes_exports, {
  authTimeNotFound: () => authTimeNotFound,
  authorizationCodeMissingFromServerResponse: () => authorizationCodeMissingFromServerResponse,
  bindingKeyNotRemoved: () => bindingKeyNotRemoved,
  cannotAppendScopeSet: () => cannotAppendScopeSet,
  cannotRemoveEmptyScope: () => cannotRemoveEmptyScope,
  clientInfoDecodingError: () => clientInfoDecodingError,
  clientInfoEmptyError: () => clientInfoEmptyError,
  deviceCodeExpired: () => deviceCodeExpired,
  deviceCodePollingCancelled: () => deviceCodePollingCancelled,
  deviceCodeUnknownError: () => deviceCodeUnknownError,
  emptyInputScopeSet: () => emptyInputScopeSet,
  endSessionEndpointNotSupported: () => endSessionEndpointNotSupported,
  endpointResolutionError: () => endpointResolutionError,
  hashNotDeserialized: () => hashNotDeserialized,
  invalidAssertion: () => invalidAssertion,
  invalidCacheEnvironment: () => invalidCacheEnvironment,
  invalidCacheRecord: () => invalidCacheRecord,
  invalidClientCredential: () => invalidClientCredential,
  invalidState: () => invalidState,
  keyIdMissing: () => keyIdMissing,
  maxAgeTranspired: () => maxAgeTranspired,
  methodNotImplemented: () => methodNotImplemented,
  missingTenantIdError: () => missingTenantIdError,
  multipleMatchingAccounts: () => multipleMatchingAccounts,
  multipleMatchingAppMetadata: () => multipleMatchingAppMetadata,
  multipleMatchingTokens: () => multipleMatchingTokens,
  nestedAppAuthBridgeDisabled: () => nestedAppAuthBridgeDisabled,
  networkError: () => networkError,
  noAccountFound: () => noAccountFound,
  noAccountInSilentRequest: () => noAccountInSilentRequest,
  noCryptoObject: () => noCryptoObject,
  noNetworkConnectivity: () => noNetworkConnectivity,
  nonceMismatch: () => nonceMismatch,
  nullOrEmptyToken: () => nullOrEmptyToken,
  openIdConfigError: () => openIdConfigError,
  requestCannotBeMade: () => requestCannotBeMade,
  stateMismatch: () => stateMismatch,
  stateNotFound: () => stateNotFound,
  tokenClaimsCnfRequiredForSignedJwt: () => tokenClaimsCnfRequiredForSignedJwt,
  tokenParsingError: () => tokenParsingError,
  tokenRefreshRequired: () => tokenRefreshRequired,
  unexpectedCredentialType: () => unexpectedCredentialType,
  userCanceled: () => userCanceled,
  userTimeoutReached: () => userTimeoutReached
});
var clientInfoDecodingError = "client_info_decoding_error";
var clientInfoEmptyError = "client_info_empty_error";
var tokenParsingError = "token_parsing_error";
var nullOrEmptyToken = "null_or_empty_token";
var endpointResolutionError = "endpoints_resolution_error";
var networkError = "network_error";
var openIdConfigError = "openid_config_error";
var hashNotDeserialized = "hash_not_deserialized";
var invalidState = "invalid_state";
var stateMismatch = "state_mismatch";
var stateNotFound = "state_not_found";
var nonceMismatch = "nonce_mismatch";
var authTimeNotFound = "auth_time_not_found";
var maxAgeTranspired = "max_age_transpired";
var multipleMatchingTokens = "multiple_matching_tokens";
var multipleMatchingAccounts = "multiple_matching_accounts";
var multipleMatchingAppMetadata = "multiple_matching_appMetadata";
var requestCannotBeMade = "request_cannot_be_made";
var cannotRemoveEmptyScope = "cannot_remove_empty_scope";
var cannotAppendScopeSet = "cannot_append_scopeset";
var emptyInputScopeSet = "empty_input_scopeset";
var deviceCodePollingCancelled = "device_code_polling_cancelled";
var deviceCodeExpired = "device_code_expired";
var deviceCodeUnknownError = "device_code_unknown_error";
var noAccountInSilentRequest = "no_account_in_silent_request";
var invalidCacheRecord = "invalid_cache_record";
var invalidCacheEnvironment = "invalid_cache_environment";
var noAccountFound = "no_account_found";
var noCryptoObject = "no_crypto_object";
var unexpectedCredentialType = "unexpected_credential_type";
var invalidAssertion = "invalid_assertion";
var invalidClientCredential = "invalid_client_credential";
var tokenRefreshRequired = "token_refresh_required";
var userTimeoutReached = "user_timeout_reached";
var tokenClaimsCnfRequiredForSignedJwt = "token_claims_cnf_required_for_signedjwt";
var authorizationCodeMissingFromServerResponse = "authorization_code_missing_from_server_response";
var bindingKeyNotRemoved = "binding_key_not_removed";
var endSessionEndpointNotSupported = "end_session_endpoint_not_supported";
var keyIdMissing = "key_id_missing";
var noNetworkConnectivity = "no_network_connectivity";
var userCanceled = "user_canceled";
var missingTenantIdError = "missing_tenant_id_error";
var methodNotImplemented = "method_not_implemented";
var nestedAppAuthBridgeDisabled = "nested_app_auth_bridge_disabled";

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs
var ClientAuthErrorMessages = {
  [clientInfoDecodingError]: "The client info could not be parsed/decoded correctly",
  [clientInfoEmptyError]: "The client info was empty",
  [tokenParsingError]: "Token cannot be parsed",
  [nullOrEmptyToken]: "The token is null or empty",
  [endpointResolutionError]: "Endpoints cannot be resolved",
  [networkError]: "Network request failed",
  [openIdConfigError]: "Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.",
  [hashNotDeserialized]: "The hash parameters could not be deserialized",
  [invalidState]: "State was not the expected format",
  [stateMismatch]: "State mismatch error",
  [stateNotFound]: "State not found",
  [nonceMismatch]: "Nonce mismatch error",
  [authTimeNotFound]: "Max Age was requested and the ID token is missing the auth_time variable. auth_time is an optional claim and is not enabled by default - it must be enabled. See https://aka.ms/msaljs/optional-claims for more information.",
  [maxAgeTranspired]: "Max Age is set to 0, or too much time has elapsed since the last end-user authentication.",
  [multipleMatchingTokens]: "The cache contains multiple tokens satisfying the requirements. Call AcquireToken again providing more requirements such as authority or account.",
  [multipleMatchingAccounts]: "The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account",
  [multipleMatchingAppMetadata]: "The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata",
  [requestCannotBeMade]: "Token request cannot be made without authorization code or refresh token.",
  [cannotRemoveEmptyScope]: "Cannot remove null or empty scope from ScopeSet",
  [cannotAppendScopeSet]: "Cannot append ScopeSet",
  [emptyInputScopeSet]: "Empty input ScopeSet cannot be processed",
  [deviceCodePollingCancelled]: "Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.",
  [deviceCodeExpired]: "Device code is expired.",
  [deviceCodeUnknownError]: "Device code stopped polling for unknown reasons.",
  [noAccountInSilentRequest]: "Please pass an account object, silent flow is not supported without account information",
  [invalidCacheRecord]: "Cache record object was null or undefined.",
  [invalidCacheEnvironment]: "Invalid environment when attempting to create cache entry",
  [noAccountFound]: "No account found in cache for given key.",
  [noCryptoObject]: "No crypto object detected.",
  [unexpectedCredentialType]: "Unexpected credential type.",
  [invalidAssertion]: "Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515",
  [invalidClientCredential]: "Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential",
  [tokenRefreshRequired]: "Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.",
  [userTimeoutReached]: "User defined timeout for device code polling reached",
  [tokenClaimsCnfRequiredForSignedJwt]: "Cannot generate a POP jwt if the token_claims are not populated",
  [authorizationCodeMissingFromServerResponse]: "Server response does not contain an authorization code to proceed",
  [bindingKeyNotRemoved]: "Could not remove the credential's binding key from storage.",
  [endSessionEndpointNotSupported]: "The provided authority does not support logout",
  [keyIdMissing]: "A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.",
  [noNetworkConnectivity]: "No network connectivity. Check your internet connection.",
  [userCanceled]: "User cancelled the flow.",
  [missingTenantIdError]: "A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.",
  [methodNotImplemented]: "This method has not been implemented",
  [nestedAppAuthBridgeDisabled]: "The nested app auth bridge is disabled"
};
var ClientAuthErrorMessage = {
  clientInfoDecodingError: {
    code: clientInfoDecodingError,
    desc: ClientAuthErrorMessages[clientInfoDecodingError]
  },
  clientInfoEmptyError: {
    code: clientInfoEmptyError,
    desc: ClientAuthErrorMessages[clientInfoEmptyError]
  },
  tokenParsingError: {
    code: tokenParsingError,
    desc: ClientAuthErrorMessages[tokenParsingError]
  },
  nullOrEmptyToken: {
    code: nullOrEmptyToken,
    desc: ClientAuthErrorMessages[nullOrEmptyToken]
  },
  endpointResolutionError: {
    code: endpointResolutionError,
    desc: ClientAuthErrorMessages[endpointResolutionError]
  },
  networkError: {
    code: networkError,
    desc: ClientAuthErrorMessages[networkError]
  },
  unableToGetOpenidConfigError: {
    code: openIdConfigError,
    desc: ClientAuthErrorMessages[openIdConfigError]
  },
  hashNotDeserialized: {
    code: hashNotDeserialized,
    desc: ClientAuthErrorMessages[hashNotDeserialized]
  },
  invalidStateError: {
    code: invalidState,
    desc: ClientAuthErrorMessages[invalidState]
  },
  stateMismatchError: {
    code: stateMismatch,
    desc: ClientAuthErrorMessages[stateMismatch]
  },
  stateNotFoundError: {
    code: stateNotFound,
    desc: ClientAuthErrorMessages[stateNotFound]
  },
  nonceMismatchError: {
    code: nonceMismatch,
    desc: ClientAuthErrorMessages[nonceMismatch]
  },
  authTimeNotFoundError: {
    code: authTimeNotFound,
    desc: ClientAuthErrorMessages[authTimeNotFound]
  },
  maxAgeTranspired: {
    code: maxAgeTranspired,
    desc: ClientAuthErrorMessages[maxAgeTranspired]
  },
  multipleMatchingTokens: {
    code: multipleMatchingTokens,
    desc: ClientAuthErrorMessages[multipleMatchingTokens]
  },
  multipleMatchingAccounts: {
    code: multipleMatchingAccounts,
    desc: ClientAuthErrorMessages[multipleMatchingAccounts]
  },
  multipleMatchingAppMetadata: {
    code: multipleMatchingAppMetadata,
    desc: ClientAuthErrorMessages[multipleMatchingAppMetadata]
  },
  tokenRequestCannotBeMade: {
    code: requestCannotBeMade,
    desc: ClientAuthErrorMessages[requestCannotBeMade]
  },
  removeEmptyScopeError: {
    code: cannotRemoveEmptyScope,
    desc: ClientAuthErrorMessages[cannotRemoveEmptyScope]
  },
  appendScopeSetError: {
    code: cannotAppendScopeSet,
    desc: ClientAuthErrorMessages[cannotAppendScopeSet]
  },
  emptyInputScopeSetError: {
    code: emptyInputScopeSet,
    desc: ClientAuthErrorMessages[emptyInputScopeSet]
  },
  DeviceCodePollingCancelled: {
    code: deviceCodePollingCancelled,
    desc: ClientAuthErrorMessages[deviceCodePollingCancelled]
  },
  DeviceCodeExpired: {
    code: deviceCodeExpired,
    desc: ClientAuthErrorMessages[deviceCodeExpired]
  },
  DeviceCodeUnknownError: {
    code: deviceCodeUnknownError,
    desc: ClientAuthErrorMessages[deviceCodeUnknownError]
  },
  NoAccountInSilentRequest: {
    code: noAccountInSilentRequest,
    desc: ClientAuthErrorMessages[noAccountInSilentRequest]
  },
  invalidCacheRecord: {
    code: invalidCacheRecord,
    desc: ClientAuthErrorMessages[invalidCacheRecord]
  },
  invalidCacheEnvironment: {
    code: invalidCacheEnvironment,
    desc: ClientAuthErrorMessages[invalidCacheEnvironment]
  },
  noAccountFound: {
    code: noAccountFound,
    desc: ClientAuthErrorMessages[noAccountFound]
  },
  noCryptoObj: {
    code: noCryptoObject,
    desc: ClientAuthErrorMessages[noCryptoObject]
  },
  unexpectedCredentialType: {
    code: unexpectedCredentialType,
    desc: ClientAuthErrorMessages[unexpectedCredentialType]
  },
  invalidAssertion: {
    code: invalidAssertion,
    desc: ClientAuthErrorMessages[invalidAssertion]
  },
  invalidClientCredential: {
    code: invalidClientCredential,
    desc: ClientAuthErrorMessages[invalidClientCredential]
  },
  tokenRefreshRequired: {
    code: tokenRefreshRequired,
    desc: ClientAuthErrorMessages[tokenRefreshRequired]
  },
  userTimeoutReached: {
    code: userTimeoutReached,
    desc: ClientAuthErrorMessages[userTimeoutReached]
  },
  tokenClaimsRequired: {
    code: tokenClaimsCnfRequiredForSignedJwt,
    desc: ClientAuthErrorMessages[tokenClaimsCnfRequiredForSignedJwt]
  },
  noAuthorizationCodeFromServer: {
    code: authorizationCodeMissingFromServerResponse,
    desc: ClientAuthErrorMessages[authorizationCodeMissingFromServerResponse]
  },
  bindingKeyNotRemovedError: {
    code: bindingKeyNotRemoved,
    desc: ClientAuthErrorMessages[bindingKeyNotRemoved]
  },
  logoutNotSupported: {
    code: endSessionEndpointNotSupported,
    desc: ClientAuthErrorMessages[endSessionEndpointNotSupported]
  },
  keyIdMissing: {
    code: keyIdMissing,
    desc: ClientAuthErrorMessages[keyIdMissing]
  },
  noNetworkConnectivity: {
    code: noNetworkConnectivity,
    desc: ClientAuthErrorMessages[noNetworkConnectivity]
  },
  userCanceledError: {
    code: userCanceled,
    desc: ClientAuthErrorMessages[userCanceled]
  },
  missingTenantIdError: {
    code: missingTenantIdError,
    desc: ClientAuthErrorMessages[missingTenantIdError]
  },
  nestedAppAuthBridgeDisabled: {
    code: nestedAppAuthBridgeDisabled,
    desc: ClientAuthErrorMessages[nestedAppAuthBridgeDisabled]
  }
};
var ClientAuthError = class _ClientAuthError extends AuthError {
  constructor(errorCode, additionalMessage) {
    super(errorCode, additionalMessage ? `${ClientAuthErrorMessages[errorCode]}: ${additionalMessage}` : ClientAuthErrorMessages[errorCode]);
    this.name = "ClientAuthError";
    Object.setPrototypeOf(this, _ClientAuthError.prototype);
  }
};
function createClientAuthError(errorCode, additionalMessage) {
  return new ClientAuthError(errorCode, additionalMessage);
}

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/crypto/ICrypto.mjs
var DEFAULT_CRYPTO_IMPLEMENTATION = {
  createNewGuid: () => {
    throw createClientAuthError(methodNotImplemented);
  },
  base64Decode: () => {
    throw createClientAuthError(methodNotImplemented);
  },
  base64Encode: () => {
    throw createClientAuthError(methodNotImplemented);
  },
  base64UrlEncode: () => {
    throw createClientAuthError(methodNotImplemented);
  },
  encodeKid: () => {
    throw createClientAuthError(methodNotImplemented);
  },
  async getPublicKeyThumbprint() {
    throw createClientAuthError(methodNotImplemented);
  },
  async removeTokenBindingKey() {
    throw createClientAuthError(methodNotImplemented);
  },
  async clearKeystore() {
    throw createClientAuthError(methodNotImplemented);
  },
  async signJwt() {
    throw createClientAuthError(methodNotImplemented);
  },
  async hashString() {
    throw createClientAuthError(methodNotImplemented);
  }
};

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/logger/Logger.mjs
var LogLevel;
(function(LogLevel2) {
  LogLevel2[LogLevel2["Error"] = 0] = "Error";
  LogLevel2[LogLevel2["Warning"] = 1] = "Warning";
  LogLevel2[LogLevel2["Info"] = 2] = "Info";
  LogLevel2[LogLevel2["Verbose"] = 3] = "Verbose";
  LogLevel2[LogLevel2["Trace"] = 4] = "Trace";
})(LogLevel || (LogLevel = {}));
var Logger = class _Logger {
  constructor(loggerOptions, packageName, packageVersion) {
    this.level = LogLevel.Info;
    const defaultLoggerCallback = () => {
      return;
    };
    const setLoggerOptions = loggerOptions || _Logger.createDefaultLoggerOptions();
    this.localCallback = setLoggerOptions.loggerCallback || defaultLoggerCallback;
    this.piiLoggingEnabled = setLoggerOptions.piiLoggingEnabled || false;
    this.level = typeof setLoggerOptions.logLevel === "number" ? setLoggerOptions.logLevel : LogLevel.Info;
    this.correlationId = setLoggerOptions.correlationId || Constants.EMPTY_STRING;
    this.packageName = packageName || Constants.EMPTY_STRING;
    this.packageVersion = packageVersion || Constants.EMPTY_STRING;
  }
  static createDefaultLoggerOptions() {
    return {
      loggerCallback: () => {
      },
      piiLoggingEnabled: false,
      logLevel: LogLevel.Info
    };
  }
  /**
   * Create new Logger with existing configurations.
   */
  clone(packageName, packageVersion, correlationId) {
    return new _Logger({
      loggerCallback: this.localCallback,
      piiLoggingEnabled: this.piiLoggingEnabled,
      logLevel: this.level,
      correlationId: correlationId || this.correlationId
    }, packageName, packageVersion);
  }
  /**
   * Log message with required options.
   */
  logMessage(logMessage, options) {
    if (options.logLevel > this.level || !this.piiLoggingEnabled && options.containsPii) {
      return;
    }
    const timestamp = (/* @__PURE__ */ new Date()).toUTCString();
    const logHeader = `[${timestamp}] : [${options.correlationId || this.correlationId || ""}]`;
    const log = `${logHeader} : ${this.packageName}@${this.packageVersion} : ${LogLevel[options.logLevel]} - ${logMessage}`;
    this.executeCallback(options.logLevel, log, options.containsPii || false);
  }
  /**
   * Execute callback with message.
   */
  executeCallback(level, message, containsPii) {
    if (this.localCallback) {
      this.localCallback(level, message, containsPii);
    }
  }
  /**
   * Logs error messages.
   */
  error(message, correlationId) {
    this.logMessage(message, {
      logLevel: LogLevel.Error,
      containsPii: false,
      correlationId: correlationId || Constants.EMPTY_STRING
    });
  }
  /**
   * Logs error messages with PII.
   */
  errorPii(message, correlationId) {
    this.logMessage(message, {
      logLevel: LogLevel.Error,
      containsPii: true,
      correlationId: correlationId || Constants.EMPTY_STRING
    });
  }
  /**
   * Logs warning messages.
   */
  warning(message, correlationId) {
    this.logMessage(message, {
      logLevel: LogLevel.Warning,
      containsPii: false,
      correlationId: correlationId || Constants.EMPTY_STRING
    });
  }
  /**
   * Logs warning messages with PII.
   */
  warningPii(message, correlationId) {
    this.logMessage(message, {
      logLevel: LogLevel.Warning,
      containsPii: true,
      correlationId: correlationId || Constants.EMPTY_STRING
    });
  }
  /**
   * Logs info messages.
   */
  info(message, correlationId) {
    this.logMessage(message, {
      logLevel: LogLevel.Info,
      containsPii: false,
      correlationId: correlationId || Constants.EMPTY_STRING
    });
  }
  /**
   * Logs info messages with PII.
   */
  infoPii(message, correlationId) {
    this.logMessage(message, {
      logLevel: LogLevel.Info,
      containsPii: true,
      correlationId: correlationId || Constants.EMPTY_STRING
    });
  }
  /**
   * Logs verbose messages.
   */
  verbose(message, correlationId) {
    this.logMessage(message, {
      logLevel: LogLevel.Verbose,
      containsPii: false,
      correlationId: correlationId || Constants.EMPTY_STRING
    });
  }
  /**
   * Logs verbose messages with PII.
   */
  verbosePii(message, correlationId) {
    this.logMessage(message, {
      logLevel: LogLevel.Verbose,
      containsPii: true,
      correlationId: correlationId || Constants.EMPTY_STRING
    });
  }
  /**
   * Logs trace messages.
   */
  trace(message, correlationId) {
    this.logMessage(message, {
      logLevel: LogLevel.Trace,
      containsPii: false,
      correlationId: correlationId || Constants.EMPTY_STRING
    });
  }
  /**
   * Logs trace messages with PII.
   */
  tracePii(message, correlationId) {
    this.logMessage(message, {
      logLevel: LogLevel.Trace,
      containsPii: true,
      correlationId: correlationId || Constants.EMPTY_STRING
    });
  }
  /**
   * Returns whether PII Logging is enabled or not.
   */
  isPiiLoggingEnabled() {
    return this.piiLoggingEnabled || false;
  }
};

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/packageMetadata.mjs
var name = "@azure/msal-common";
var version = "15.13.0";

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/authority/AuthorityOptions.mjs
var AzureCloudInstance = {
  // AzureCloudInstance is not specified.
  None: "none",
  // Microsoft Azure public cloud
  AzurePublic: "https://login.microsoftonline.com",
  // Microsoft PPE
  AzurePpe: "https://login.windows-ppe.net",
  // Microsoft Chinese national/regional cloud
  AzureChina: "https://login.chinacloudapi.cn",
  // Microsoft German national/regional cloud ("Black Forest")
  AzureGermany: "https://login.microsoftonline.de",
  // US Government cloud
  AzureUsGovernment: "https://login.microsoftonline.us"
};

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs
var redirectUriEmpty = "redirect_uri_empty";
var claimsRequestParsingError = "claims_request_parsing_error";
var authorityUriInsecure = "authority_uri_insecure";
var urlParseError = "url_parse_error";
var urlEmptyError = "empty_url_error";
var emptyInputScopesError = "empty_input_scopes_error";
var invalidClaims = "invalid_claims";
var tokenRequestEmpty = "token_request_empty";
var logoutRequestEmpty = "logout_request_empty";
var invalidCodeChallengeMethod = "invalid_code_challenge_method";
var pkceParamsMissing = "pkce_params_missing";
var invalidCloudDiscoveryMetadata = "invalid_cloud_discovery_metadata";
var invalidAuthorityMetadata = "invalid_authority_metadata";
var untrustedAuthority = "untrusted_authority";
var missingSshJwk = "missing_ssh_jwk";
var missingSshKid = "missing_ssh_kid";
var missingNonceAuthenticationHeader = "missing_nonce_authentication_header";
var invalidAuthenticationHeader = "invalid_authentication_header";
var cannotSetOIDCOptions = "cannot_set_OIDCOptions";
var cannotAllowPlatformBroker = "cannot_allow_platform_broker";
var authorityMismatch = "authority_mismatch";
var invalidRequestMethodForEAR = "invalid_request_method_for_EAR";
var invalidAuthorizePostBodyParameters = "invalid_authorize_post_body_parameters";

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs
var ClientConfigurationErrorMessages = {
  [redirectUriEmpty]: "A redirect URI is required for all calls, and none has been set.",
  [claimsRequestParsingError]: "Could not parse the given claims request object.",
  [authorityUriInsecure]: "Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options",
  [urlParseError]: "URL could not be parsed into appropriate segments.",
  [urlEmptyError]: "URL was empty or null.",
  [emptyInputScopesError]: "Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.",
  [invalidClaims]: "Given claims parameter must be a stringified JSON object.",
  [tokenRequestEmpty]: "Token request was empty and not found in cache.",
  [logoutRequestEmpty]: "The logout request was null or undefined.",
  [invalidCodeChallengeMethod]: 'code_challenge_method passed is invalid. Valid values are "plain" and "S256".',
  [pkceParamsMissing]: "Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request",
  [invalidCloudDiscoveryMetadata]: "Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields",
  [invalidAuthorityMetadata]: "Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.",
  [untrustedAuthority]: "The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.",
  [missingSshJwk]: "Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.",
  [missingSshKid]: "Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.",
  [missingNonceAuthenticationHeader]: "Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.",
  [invalidAuthenticationHeader]: "Invalid authentication header provided",
  [cannotSetOIDCOptions]: "Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.",
  [cannotAllowPlatformBroker]: "Cannot set allowPlatformBroker parameter to true when not in AAD protocol mode.",
  [authorityMismatch]: "Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority.",
  [invalidAuthorizePostBodyParameters]: "Invalid authorize post body parameters provided. If you are using authorizePostBodyParameters, the request method must be POST. Please check the request method and parameters.",
  [invalidRequestMethodForEAR]: "Invalid request method for EAR protocol mode. The request method cannot be GET when using EAR protocol mode. Please change the request method to POST."
};
var ClientConfigurationErrorMessage = {
  redirectUriNotSet: {
    code: redirectUriEmpty,
    desc: ClientConfigurationErrorMessages[redirectUriEmpty]
  },
  claimsRequestParsingError: {
    code: claimsRequestParsingError,
    desc: ClientConfigurationErrorMessages[claimsRequestParsingError]
  },
  authorityUriInsecure: {
    code: authorityUriInsecure,
    desc: ClientConfigurationErrorMessages[authorityUriInsecure]
  },
  urlParseError: {
    code: urlParseError,
    desc: ClientConfigurationErrorMessages[urlParseError]
  },
  urlEmptyError: {
    code: urlEmptyError,
    desc: ClientConfigurationErrorMessages[urlEmptyError]
  },
  emptyScopesError: {
    code: emptyInputScopesError,
    desc: ClientConfigurationErrorMessages[emptyInputScopesError]
  },
  invalidClaimsRequest: {
    code: invalidClaims,
    desc: ClientConfigurationErrorMessages[invalidClaims]
  },
  tokenRequestEmptyError: {
    code: tokenRequestEmpty,
    desc: ClientConfigurationErrorMessages[tokenRequestEmpty]
  },
  logoutRequestEmptyError: {
    code: logoutRequestEmpty,
    desc: ClientConfigurationErrorMessages[logoutRequestEmpty]
  },
  invalidCodeChallengeMethod: {
    code: invalidCodeChallengeMethod,
    desc: ClientConfigurationErrorMessages[invalidCodeChallengeMethod]
  },
  invalidCodeChallengeParams: {
    code: pkceParamsMissing,
    desc: ClientConfigurationErrorMessages[pkceParamsMissing]
  },
  invalidCloudDiscoveryMetadata: {
    code: invalidCloudDiscoveryMetadata,
    desc: ClientConfigurationErrorMessages[invalidCloudDiscoveryMetadata]
  },
  invalidAuthorityMetadata: {
    code: invalidAuthorityMetadata,
    desc: ClientConfigurationErrorMessages[invalidAuthorityMetadata]
  },
  untrustedAuthority: {
    code: untrustedAuthority,
    desc: ClientConfigurationErrorMessages[untrustedAuthority]
  },
  missingSshJwk: {
    code: missingSshJwk,
    desc: ClientConfigurationErrorMessages[missingSshJwk]
  },
  missingSshKid: {
    code: missingSshKid,
    desc: ClientConfigurationErrorMessages[missingSshKid]
  },
  missingNonceAuthenticationHeader: {
    code: missingNonceAuthenticationHeader,
    desc: ClientConfigurationErrorMessages[missingNonceAuthenticationHeader]
  },
  invalidAuthenticationHeader: {
    code: invalidAuthenticationHeader,
    desc: ClientConfigurationErrorMessages[invalidAuthenticationHeader]
  },
  cannotSetOIDCOptions: {
    code: cannotSetOIDCOptions,
    desc: ClientConfigurationErrorMessages[cannotSetOIDCOptions]
  },
  cannotAllowPlatformBroker: {
    code: cannotAllowPlatformBroker,
    desc: ClientConfigurationErrorMessages[cannotAllowPlatformBroker]
  },
  authorityMismatch: {
    code: authorityMismatch,
    desc: ClientConfigurationErrorMessages[authorityMismatch]
  },
  invalidAuthorizePostBodyParameters: {
    code: invalidAuthorizePostBodyParameters,
    desc: ClientConfigurationErrorMessages[invalidAuthorizePostBodyParameters]
  },
  invalidRequestMethodForEAR: {
    code: invalidRequestMethodForEAR,
    desc: ClientConfigurationErrorMessages[invalidRequestMethodForEAR]
  }
};
var ClientConfigurationError = class _ClientConfigurationError extends AuthError {
  constructor(errorCode) {
    super(errorCode, ClientConfigurationErrorMessages[errorCode]);
    this.name = "ClientConfigurationError";
    Object.setPrototypeOf(this, _ClientConfigurationError.prototype);
  }
};
function createClientConfigurationError(errorCode) {
  return new ClientConfigurationError(errorCode);
}

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/utils/StringUtils.mjs
var StringUtils = class {
  /**
   * Check if stringified object is empty
   * @param strObj
   */
  static isEmptyObj(strObj) {
    if (strObj) {
      try {
        const obj = JSON.parse(strObj);
        return Object.keys(obj).length === 0;
      } catch (e) {
      }
    }
    return true;
  }
  static startsWith(str, search) {
    return str.indexOf(search) === 0;
  }
  static endsWith(str, search) {
    return str.length >= search.length && str.lastIndexOf(search) === str.length - search.length;
  }
  /**
   * Parses string into an object.
   *
   * @param query
   */
  static queryStringToObject(query) {
    const obj = {};
    const params = query.split("&");
    const decode = (s) => decodeURIComponent(s.replace(/\+/g, " "));
    params.forEach((pair) => {
      if (pair.trim()) {
        const [key, value] = pair.split(/=(.+)/g, 2);
        if (key && value) {
          obj[decode(key)] = decode(value);
        }
      }
    });
    return obj;
  }
  /**
   * Trims entries in an array.
   *
   * @param arr
   */
  static trimArrayEntries(arr) {
    return arr.map((entry) => entry.trim());
  }
  /**
   * Removes empty strings from array
   * @param arr
   */
  static removeEmptyStringsFromArray(arr) {
    return arr.filter((entry) => {
      return !!entry;
    });
  }
  /**
   * Attempts to parse a string into JSON
   * @param str
   */
  static jsonParseHelper(str) {
    try {
      return JSON.parse(str);
    } catch (e) {
      return null;
    }
  }
  /**
   * Tests if a given string matches a given pattern, with support for wildcards and queries.
   * @param pattern Wildcard pattern to string match. Supports "*" for wildcards and "?" for queries
   * @param input String to match against
   */
  static matchPattern(pattern, input) {
    const regex = new RegExp(pattern.replace(/\\/g, "\\\\").replace(/\*/g, "[^ ]*").replace(/\?/g, "\\?"));
    return regex.test(input);
  }
};

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/request/ScopeSet.mjs
var ScopeSet = class _ScopeSet {
  constructor(inputScopes) {
    const scopeArr = inputScopes ? StringUtils.trimArrayEntries([...inputScopes]) : [];
    const filteredInput = scopeArr ? StringUtils.removeEmptyStringsFromArray(scopeArr) : [];
    if (!filteredInput || !filteredInput.length) {
      throw createClientConfigurationError(emptyInputScopesError);
    }
    this.scopes = /* @__PURE__ */ new Set();
    filteredInput.forEach((scope) => this.scopes.add(scope));
  }
  /**
   * Factory method to create ScopeSet from space-delimited string
   * @param inputScopeString
   * @param appClientId
   * @param scopesRequired
   */
  static fromString(inputScopeString) {
    const scopeString = inputScopeString || Constants.EMPTY_STRING;
    const inputScopes = scopeString.split(" ");
    return new _ScopeSet(inputScopes);
  }
  /**
   * Creates the set of scopes to search for in cache lookups
   * @param inputScopeString
   * @returns
   */
  static createSearchScopes(inputScopeString) {
    const scopesToUse = inputScopeString && inputScopeString.length > 0 ? inputScopeString : [...OIDC_DEFAULT_SCOPES];
    const scopeSet = new _ScopeSet(scopesToUse);
    if (!scopeSet.containsOnlyOIDCScopes()) {
      scopeSet.removeOIDCScopes();
    } else {
      scopeSet.removeScope(Constants.OFFLINE_ACCESS_SCOPE);
    }
    return scopeSet;
  }
  /**
   * Check if a given scope is present in this set of scopes.
   * @param scope
   */
  containsScope(scope) {
    const lowerCaseScopes = this.printScopesLowerCase().split(" ");
    const lowerCaseScopesSet = new _ScopeSet(lowerCaseScopes);
    return scope ? lowerCaseScopesSet.scopes.has(scope.toLowerCase()) : false;
  }
  /**
   * Check if a set of scopes is present in this set of scopes.
   * @param scopeSet
   */
  containsScopeSet(scopeSet) {
    if (!scopeSet || scopeSet.scopes.size <= 0) {
      return false;
    }
    return this.scopes.size >= scopeSet.scopes.size && scopeSet.asArray().every((scope) => this.containsScope(scope));
  }
  /**
   * Check if set of scopes contains only the defaults
   */
  containsOnlyOIDCScopes() {
    let defaultScopeCount = 0;
    OIDC_SCOPES.forEach((defaultScope) => {
      if (this.containsScope(defaultScope)) {
        defaultScopeCount += 1;
      }
    });
    return this.scopes.size === defaultScopeCount;
  }
  /**
   * Appends single scope if passed
   * @param newScope
   */
  appendScope(newScope) {
    if (newScope) {
      this.scopes.add(newScope.trim());
    }
  }
  /**
   * Appends multiple scopes if passed
   * @param newScopes
   */
  appendScopes(newScopes) {
    try {
      newScopes.forEach((newScope) => this.appendScope(newScope));
    } catch (e) {
      throw createClientAuthError(cannotAppendScopeSet);
    }
  }
  /**
   * Removes element from set of scopes.
   * @param scope
   */
  removeScope(scope) {
    if (!scope) {
      throw createClientAuthError(cannotRemoveEmptyScope);
    }
    this.scopes.delete(scope.trim());
  }
  /**
   * Removes default scopes from set of scopes
   * Primarily used to prevent cache misses if the default scopes are not returned from the server
   */
  removeOIDCScopes() {
    OIDC_SCOPES.forEach((defaultScope) => {
      this.scopes.delete(defaultScope);
    });
  }
  /**
   * Combines an array of scopes with the current set of scopes.
   * @param otherScopes
   */
  unionScopeSets(otherScopes) {
    if (!otherScopes) {
      throw createClientAuthError(emptyInputScopeSet);
    }
    const unionScopes = /* @__PURE__ */ new Set();
    otherScopes.scopes.forEach((scope) => unionScopes.add(scope.toLowerCase()));
    this.scopes.forEach((scope) => unionScopes.add(scope.toLowerCase()));
    return unionScopes;
  }
  /**
   * Check if scopes intersect between this set and another.
   * @param otherScopes
   */
  intersectingScopeSets(otherScopes) {
    if (!otherScopes) {
      throw createClientAuthError(emptyInputScopeSet);
    }
    if (!otherScopes.containsOnlyOIDCScopes()) {
      otherScopes.removeOIDCScopes();
    }
    const unionScopes = this.unionScopeSets(otherScopes);
    const sizeOtherScopes = otherScopes.getScopeCount();
    const sizeThisScopes = this.getScopeCount();
    const sizeUnionScopes = unionScopes.size;
    return sizeUnionScopes < sizeThisScopes + sizeOtherScopes;
  }
  /**
   * Returns size of set of scopes.
   */
  getScopeCount() {
    return this.scopes.size;
  }
  /**
   * Returns the scopes as an array of string values
   */
  asArray() {
    const array = [];
    this.scopes.forEach((val) => array.push(val));
    return array;
  }
  /**
   * Prints scopes into a space-delimited string
   */
  printScopes() {
    if (this.scopes) {
      const scopeArr = this.asArray();
      return scopeArr.join(" ");
    }
    return Constants.EMPTY_STRING;
  }
  /**
   * Prints scopes into a space-delimited lower-case string (used for caching)
   */
  printScopesLowerCase() {
    return this.printScopes().toLowerCase();
  }
};

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/account/AccountInfo.mjs
function tenantIdMatchesHomeTenant(tenantId, homeAccountId) {
  return !!tenantId && !!homeAccountId && tenantId === homeAccountId.split(".")[1];
}
function buildTenantProfile(homeAccountId, localAccountId, tenantId, idTokenClaims) {
  if (idTokenClaims) {
    const { oid, sub, tid, name: name3, tfp, acr, preferred_username, upn, login_hint } = idTokenClaims;
    const tenantId2 = tid || tfp || acr || "";
    return {
      tenantId: tenantId2,
      localAccountId: oid || sub || "",
      name: name3,
      username: preferred_username || upn || "",
      loginHint: login_hint,
      isHomeTenant: tenantIdMatchesHomeTenant(tenantId2, homeAccountId)
    };
  } else {
    return {
      tenantId,
      localAccountId,
      username: "",
      isHomeTenant: tenantIdMatchesHomeTenant(tenantId, homeAccountId)
    };
  }
}
function updateAccountTenantProfileData(baseAccountInfo, tenantProfile, idTokenClaims, idTokenSecret) {
  let updatedAccountInfo = baseAccountInfo;
  if (tenantProfile) {
    const { isHomeTenant, ...tenantProfileOverride } = tenantProfile;
    updatedAccountInfo = { ...baseAccountInfo, ...tenantProfileOverride };
  }
  if (idTokenClaims) {
    const { isHomeTenant, ...claimsSourcedTenantProfile } = buildTenantProfile(baseAccountInfo.homeAccountId, baseAccountInfo.localAccountId, baseAccountInfo.tenantId, idTokenClaims);
    updatedAccountInfo = {
      ...updatedAccountInfo,
      ...claimsSourcedTenantProfile,
      idTokenClaims,
      idToken: idTokenSecret
    };
    return updatedAccountInfo;
  }
  return updatedAccountInfo;
}

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/account/AuthToken.mjs
var AuthToken_exports = {};
__export(AuthToken_exports, {
  checkMaxAge: () => checkMaxAge,
  extractTokenClaims: () => extractTokenClaims,
  getJWSPayload: () => getJWSPayload
});
function extractTokenClaims(encodedToken, base64Decode) {
  const jswPayload = getJWSPayload(encodedToken);
  try {
    const base64Decoded = base64Decode(jswPayload);
    return JSON.parse(base64Decoded);
  } catch (err) {
    throw createClientAuthError(tokenParsingError);
  }
}
function getJWSPayload(authToken) {
  if (!authToken) {
    throw createClientAuthError(nullOrEmptyToken);
  }
  const tokenPartsRegex = /^([^\.\s]*)\.([^\.\s]+)\.([^\.\s]*)$/;
  const matches = tokenPartsRegex.exec(authToken);
  if (!matches || matches.length < 4) {
    throw createClientAuthError(tokenParsingError);
  }
  return matches[2];
}
function checkMaxAge(authTime, maxAge) {
  const fiveMinuteSkew = 3e5;
  if (maxAge === 0 || Date.now() - fiveMinuteSkew > authTime + maxAge) {
    throw createClientAuthError(maxAgeTranspired);
  }
}

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/utils/UrlUtils.mjs
var UrlUtils_exports = {};
__export(UrlUtils_exports, {
  getDeserializedResponse: () => getDeserializedResponse,
  mapToQueryString: () => mapToQueryString,
  normalizeUrlForComparison: () => normalizeUrlForComparison,
  stripLeadingHashOrQuery: () => stripLeadingHashOrQuery
});
function canonicalizeUrl(url) {
  if (!url) {
    return url;
  }
  let lowerCaseUrl = url.toLowerCase();
  if (StringUtils.endsWith(lowerCaseUrl, "?")) {
    lowerCaseUrl = lowerCaseUrl.slice(0, -1);
  } else if (StringUtils.endsWith(lowerCaseUrl, "?/")) {
    lowerCaseUrl = lowerCaseUrl.slice(0, -2);
  }
  if (!StringUtils.endsWith(lowerCaseUrl, "/")) {
    lowerCaseUrl += "/";
  }
  return lowerCaseUrl;
}
function stripLeadingHashOrQuery(responseString) {
  if (responseString.startsWith("#/")) {
    return responseString.substring(2);
  } else if (responseString.startsWith("#") || responseString.startsWith("?")) {
    return responseString.substring(1);
  }
  return responseString;
}
function getDeserializedResponse(responseString) {
  if (!responseString || responseString.indexOf("=") < 0) {
    return null;
  }
  try {
    const normalizedResponse = stripLeadingHashOrQuery(responseString);
    const deserializedHash = Object.fromEntries(new URLSearchParams(normalizedResponse));
    if (deserializedHash.code || deserializedHash.ear_jwe || deserializedHash.error || deserializedHash.error_description || deserializedHash.state) {
      return deserializedHash;
    }
  } catch (e) {
    throw createClientAuthError(hashNotDeserialized);
  }
  return null;
}
function mapToQueryString(parameters, encodeExtraParams = true, extraQueryParameters) {
  const queryParameterArray = new Array();
  parameters.forEach((value, key) => {
    if (!encodeExtraParams && extraQueryParameters && key in extraQueryParameters) {
      queryParameterArray.push(`${key}=${value}`);
    } else {
      queryParameterArray.push(`${key}=${encodeURIComponent(value)}`);
    }
  });
  return queryParameterArray.join("&");
}
function normalizeUrlForComparison(url) {
  if (!url) {
    return url;
  }
  const urlWithoutHash = url.split("#")[0];
  try {
    const urlObj = new URL(urlWithoutHash);
    const normalizedUrl = urlObj.origin + urlObj.pathname + urlObj.search;
    return canonicalizeUrl(normalizedUrl);
  } catch (e) {
    return canonicalizeUrl(urlWithoutHash);
  }
}

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/url/UrlString.mjs
var UrlString = class _UrlString {
  get urlString() {
    return this._urlString;
  }
  constructor(url) {
    this._urlString = url;
    if (!this._urlString) {
      throw createClientConfigurationError(urlEmptyError);
    }
    if (!url.includes("#")) {
      this._urlString = _UrlString.canonicalizeUri(url);
    }
  }
  /**
   * Ensure urls are lower case and end with a / character.
   * @param url
   */
  static canonicalizeUri(url) {
    if (url) {
      let lowerCaseUrl = url.toLowerCase();
      if (StringUtils.endsWith(lowerCaseUrl, "?")) {
        lowerCaseUrl = lowerCaseUrl.slice(0, -1);
      } else if (StringUtils.endsWith(lowerCaseUrl, "?/")) {
        lowerCaseUrl = lowerCaseUrl.slice(0, -2);
      }
      if (!StringUtils.endsWith(lowerCaseUrl, "/")) {
        lowerCaseUrl += "/";
      }
      return lowerCaseUrl;
    }
    return url;
  }
  /**
   * Throws if urlString passed is not a valid authority URI string.
   */
  validateAsUri() {
    let components;
    try {
      components = this.getUrlComponents();
    } catch (e) {
      throw createClientConfigurationError(urlParseError);
    }
    if (!components.HostNameAndPort || !components.PathSegments) {
      throw createClientConfigurationError(urlParseError);
    }
    if (!components.Protocol || components.Protocol.toLowerCase() !== "https:") {
      throw createClientConfigurationError(authorityUriInsecure);
    }
  }
  /**
   * Given a url and a query string return the url with provided query string appended
   * @param url
   * @param queryString
   */
  static appendQueryString(url, queryString) {
    if (!queryString) {
      return url;
    }
    return url.indexOf("?") < 0 ? `${url}?${queryString}` : `${url}&${queryString}`;
  }
  /**
   * Returns a url with the hash removed
   * @param url
   */
  static removeHashFromUrl(url) {
    return _UrlString.canonicalizeUri(url.split("#")[0]);
  }
  /**
   * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d
   * @param href The url
   * @param tenantId The tenant id to replace
   */
  replaceTenantPath(tenantId) {
    const urlObject = this.getUrlComponents();
    const pathArray = urlObject.PathSegments;
    if (tenantId && pathArray.length !== 0 && (pathArray[0] === AADAuthorityConstants.COMMON || pathArray[0] === AADAuthorityConstants.ORGANIZATIONS)) {
      pathArray[0] = tenantId;
    }
    return _UrlString.constructAuthorityUriFromObject(urlObject);
  }
  /**
   * Parses out the components from a url string.
   * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.
   */
  getUrlComponents() {
    const regEx = RegExp("^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?");
    const match = this.urlString.match(regEx);
    if (!match) {
      throw createClientConfigurationError(urlParseError);
    }
    const urlComponents = {
      Protocol: match[1],
      HostNameAndPort: match[4],
      AbsolutePath: match[5],
      QueryString: match[7]
    };
    let pathSegments = urlComponents.AbsolutePath.split("/");
    pathSegments = pathSegments.filter((val) => val && val.length > 0);
    urlComponents.PathSegments = pathSegments;
    if (urlComponents.QueryString && urlComponents.QueryString.endsWith("/")) {
      urlComponents.QueryString = urlComponents.QueryString.substring(0, urlComponents.QueryString.length - 1);
    }
    return urlComponents;
  }
  static getDomainFromUrl(url) {
    const regEx = RegExp("^([^:/?#]+://)?([^/?#]*)");
    const match = url.match(regEx);
    if (!match) {
      throw createClientConfigurationError(urlParseError);
    }
    return match[2];
  }
  static getAbsoluteUrl(relativeUrl, baseUrl) {
    if (relativeUrl[0] === Constants.FORWARD_SLASH) {
      const url = new _UrlString(baseUrl);
      const baseComponents = url.getUrlComponents();
      return baseComponents.Protocol + "//" + baseComponents.HostNameAndPort + relativeUrl;
    }
    return relativeUrl;
  }
  static constructAuthorityUriFromObject(urlObject) {
    return new _UrlString(urlObject.Protocol + "//" + urlObject.HostNameAndPort + "/" + urlObject.PathSegments.join("/"));
  }
  /**
   * Check if the hash of the URL string contains known properties
   * @deprecated This API will be removed in a future version
   */
  static hashContainsKnownProperties(response) {
    return !!getDeserializedResponse(response);
  }
};

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/authority/AuthorityMetadata.mjs
var rawMetdataJSON = {
  endpointMetadata: {
    "login.microsoftonline.com": {
      token_endpoint: "https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/token",
      jwks_uri: "https://login.microsoftonline.com/{tenantid}/discovery/v2.0/keys",
      issuer: "https://login.microsoftonline.com/{tenantid}/v2.0",
      authorization_endpoint: "https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/authorize",
      end_session_endpoint: "https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/logout"
    },
    "login.chinacloudapi.cn": {
      token_endpoint: "https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/token",
      jwks_uri: "https://login.chinacloudapi.cn/{tenantid}/discovery/v2.0/keys",
      issuer: "https://login.partner.microsoftonline.cn/{tenantid}/v2.0",
      authorization_endpoint: "https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/authorize",
      end_session_endpoint: "https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/logout"
    },
    "login.microsoftonline.us": {
      token_endpoint: "https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/token",
      jwks_uri: "https://login.microsoftonline.us/{tenantid}/discovery/v2.0/keys",
      issuer: "https://login.microsoftonline.us/{tenantid}/v2.0",
      authorization_endpoint: "https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/authorize",
      end_session_endpoint: "https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/logout"
    }
  },
  instanceDiscoveryMetadata: {
    metadata: [
      {
        preferred_network: "login.microsoftonline.com",
        preferred_cache: "login.windows.net",
        aliases: [
          "login.microsoftonline.com",
          "login.windows.net",
          "login.microsoft.com",
          "sts.windows.net"
        ]
      },
      {
        preferred_network: "login.partner.microsoftonline.cn",
        preferred_cache: "login.partner.microsoftonline.cn",
        aliases: [
          "login.partner.microsoftonline.cn",
          "login.chinacloudapi.cn"
        ]
      },
      {
        preferred_network: "login.microsoftonline.de",
        preferred_cache: "login.microsoftonline.de",
        aliases: ["login.microsoftonline.de"]
      },
      {
        preferred_network: "login.microsoftonline.us",
        preferred_cache: "login.microsoftonline.us",
        aliases: [
          "login.microsoftonline.us",
          "login.usgovcloudapi.net"
        ]
      },
      {
        preferred_network: "login-us.microsoftonline.com",
        preferred_cache: "login-us.microsoftonline.com",
        aliases: ["login-us.microsoftonline.com"]
      }
    ]
  }
};
var EndpointMetadata = rawMetdataJSON.endpointMetadata;
var InstanceDiscoveryMetadata = rawMetdataJSON.instanceDiscoveryMetadata;
var InstanceDiscoveryMetadataAliases = /* @__PURE__ */ new Set();
InstanceDiscoveryMetadata.metadata.forEach((metadataEntry) => {
  metadataEntry.aliases.forEach((alias) => {
    InstanceDiscoveryMetadataAliases.add(alias);
  });
});
function getAliasesFromStaticSources(staticAuthorityOptions, logger) {
  let staticAliases;
  const canonicalAuthority = staticAuthorityOptions.canonicalAuthority;
  if (canonicalAuthority) {
    const authorityHost = new UrlString(canonicalAuthority).getUrlComponents().HostNameAndPort;
    staticAliases = getAliasesFromMetadata(authorityHost, staticAuthorityOptions.cloudDiscoveryMetadata?.metadata, AuthorityMetadataSource.CONFIG, logger) || getAliasesFromMetadata(authorityHost, InstanceDiscoveryMetadata.metadata, AuthorityMetadataSource.HARDCODED_VALUES, logger) || staticAuthorityOptions.knownAuthorities;
  }
  return staticAliases || [];
}
function getAliasesFromMetadata(authorityHost, cloudDiscoveryMetadata, source, logger) {
  logger?.trace(`getAliasesFromMetadata called with source: ${source}`);
  if (authorityHost && cloudDiscoveryMetadata) {
    const metadata = getCloudDiscoveryMetadataFromNetworkResponse(cloudDiscoveryMetadata, authorityHost);
    if (metadata) {
      logger?.trace(`getAliasesFromMetadata: found cloud discovery metadata in ${source}, returning aliases`);
      return metadata.aliases;
    } else {
      logger?.trace(`getAliasesFromMetadata: did not find cloud discovery metadata in ${source}`);
    }
  }
  return null;
}
function getCloudDiscoveryMetadataFromHardcodedValues(authorityHost) {
  const metadata = getCloudDiscoveryMetadataFromNetworkResponse(InstanceDiscoveryMetadata.metadata, authorityHost);
  return metadata;
}
function getCloudDiscoveryMetadataFromNetworkResponse(response, authorityHost) {
  for (let i = 0; i < response.length; i++) {
    const metadata = response[i];
    if (metadata.aliases.includes(authorityHost)) {
      return metadata;
    }
  }
  return null;
}

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/error/CacheErrorCodes.mjs
var cacheQuotaExceeded = "cache_quota_exceeded";
var cacheErrorUnknown = "cache_error_unknown";

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/error/CacheError.mjs
var CacheErrorMessages = {
  [cacheQuotaExceeded]: "Exceeded cache storage capacity.",
  [cacheErrorUnknown]: "Unexpected error occurred when using cache storage."
};
var CacheError = class _CacheError extends AuthError {
  constructor(errorCode, errorMessage) {
    const message = errorMessage || (CacheErrorMessages[errorCode] ? CacheErrorMessages[errorCode] : CacheErrorMessages[cacheErrorUnknown]);
    super(`${errorCode}: ${message}`);
    Object.setPrototypeOf(this, _CacheError.prototype);
    this.name = "CacheError";
    this.errorCode = errorCode;
    this.errorMessage = message;
  }
};
function createCacheError(e) {
  if (!(e instanceof Error)) {
    return new CacheError(cacheErrorUnknown);
  }
  if (e.name === "QuotaExceededError" || e.name === "NS_ERROR_DOM_QUOTA_REACHED" || e.message.includes("exceeded the quota")) {
    return new CacheError(cacheQuotaExceeded);
  } else {
    return new CacheError(e.name, e.message);
  }
}

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/cache/CacheManager.mjs
var CacheManager = class {
  constructor(clientId, cryptoImpl, logger, performanceClient, staticAuthorityOptions) {
    this.clientId = clientId;
    this.cryptoImpl = cryptoImpl;
    this.commonLogger = logger.clone(name, version);
    this.staticAuthorityOptions = staticAuthorityOptions;
    this.performanceClient = performanceClient;
  }
  /**
   * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.
   * @param accountFilter - (Optional) filter to narrow down the accounts returned
   * @returns Array of AccountInfo objects in cache
   */
  getAllAccounts(accountFilter, correlationId) {
    return this.buildTenantProfiles(this.getAccountsFilteredBy(accountFilter, correlationId), correlationId, accountFilter);
  }
  /**
   * Gets first tenanted AccountInfo object found based on provided filters
   */
  getAccountInfoFilteredBy(accountFilter, correlationId) {
    if (Object.keys(accountFilter).length === 0 || Object.values(accountFilter).every((value) => !value)) {
      this.commonLogger.warning("getAccountInfoFilteredBy: Account filter is empty or invalid, returning null");
      return null;
    }
    const allAccounts = this.getAllAccounts(accountFilter, correlationId);
    if (allAccounts.length > 1) {
      const sortedAccounts = allAccounts.sort((account) => {
        return account.idTokenClaims ? -1 : 1;
      });
      return sortedAccounts[0];
    } else if (allAccounts.length === 1) {
      return allAccounts[0];
    } else {
      return null;
    }
  }
  /**
   * Returns a single matching
   * @param accountFilter
   * @returns
   */
  getBaseAccountInfo(accountFilter, correlationId) {
    const accountEntities = this.getAccountsFilteredBy(accountFilter, correlationId);
    if (accountEntities.length > 0) {
      return accountEntities[0].getAccountInfo();
    } else {
      return null;
    }
  }
  /**
   * Matches filtered account entities with cached ID tokens that match the tenant profile-specific account filters
   * and builds the account info objects from the matching ID token's claims
   * @param cachedAccounts
   * @param accountFilter
   * @returns Array of AccountInfo objects that match account and tenant profile filters
   */
  buildTenantProfiles(cachedAccounts, correlationId, accountFilter) {
    return cachedAccounts.flatMap((accountEntity) => {
      return this.getTenantProfilesFromAccountEntity(accountEntity, correlationId, accountFilter?.tenantId, accountFilter);
    });
  }
  getTenantedAccountInfoByFilter(accountInfo, tokenKeys, tenantProfile, correlationId, tenantProfileFilter) {
    let tenantedAccountInfo = null;
    let idTokenClaims;
    if (tenantProfileFilter) {
      if (!this.tenantProfileMatchesFilter(tenantProfile, tenantProfileFilter)) {
        return null;
      }
    }
    const idToken = this.getIdToken(accountInfo, correlationId, tokenKeys, tenantProfile.tenantId);
    if (idToken) {
      idTokenClaims = extractTokenClaims(idToken.secret, this.cryptoImpl.base64Decode);
      if (!this.idTokenClaimsMatchTenantProfileFilter(idTokenClaims, tenantProfileFilter)) {
        return null;
      }
    }
    tenantedAccountInfo = updateAccountTenantProfileData(accountInfo, tenantProfile, idTokenClaims, idToken?.secret);
    return tenantedAccountInfo;
  }
  getTenantProfilesFromAccountEntity(accountEntity, correlationId, targetTenantId, tenantProfileFilter) {
    const accountInfo = accountEntity.getAccountInfo();
    let searchTenantProfiles = accountInfo.tenantProfiles || /* @__PURE__ */ new Map();
    const tokenKeys = this.getTokenKeys();
    if (targetTenantId) {
      const tenantProfile = searchTenantProfiles.get(targetTenantId);
      if (tenantProfile) {
        searchTenantProfiles = /* @__PURE__ */ new Map([
          [targetTenantId, tenantProfile]
        ]);
      } else {
        return [];
      }
    }
    const matchingTenantProfiles = [];
    searchTenantProfiles.forEach((tenantProfile) => {
      const tenantedAccountInfo = this.getTenantedAccountInfoByFilter(accountInfo, tokenKeys, tenantProfile, correlationId, tenantProfileFilter);
      if (tenantedAccountInfo) {
        matchingTenantProfiles.push(tenantedAccountInfo);
      }
    });
    return matchingTenantProfiles;
  }
  tenantProfileMatchesFilter(tenantProfile, tenantProfileFilter) {
    if (!!tenantProfileFilter.localAccountId && !this.matchLocalAccountIdFromTenantProfile(tenantProfile, tenantProfileFilter.localAccountId)) {
      return false;
    }
    if (!!tenantProfileFilter.name && !(tenantProfile.name === tenantProfileFilter.name)) {
      return false;
    }
    if (tenantProfileFilter.isHomeTenant !== void 0 && !(tenantProfile.isHomeTenant === tenantProfileFilter.isHomeTenant)) {
      return false;
    }
    return true;
  }
  idTokenClaimsMatchTenantProfileFilter(idTokenClaims, tenantProfileFilter) {
    if (tenantProfileFilter) {
      if (!!tenantProfileFilter.localAccountId && !this.matchLocalAccountIdFromTokenClaims(idTokenClaims, tenantProfileFilter.localAccountId)) {
        return false;
      }
      if (!!tenantProfileFilter.loginHint && !this.matchLoginHintFromTokenClaims(idTokenClaims, tenantProfileFilter.loginHint)) {
        return false;
      }
      if (!!tenantProfileFilter.username && !this.matchUsername(idTokenClaims.preferred_username, tenantProfileFilter.username)) {
        return false;
      }
      if (!!tenantProfileFilter.name && !this.matchName(idTokenClaims, tenantProfileFilter.name)) {
        return false;
      }
      if (!!tenantProfileFilter.sid && !this.matchSid(idTokenClaims, tenantProfileFilter.sid)) {
        return false;
      }
    }
    return true;
  }
  /**
   * saves a cache record
   * @param cacheRecord {CacheRecord}
   * @param storeInCache {?StoreInCache}
   * @param correlationId {?string} correlation id
   */
  async saveCacheRecord(cacheRecord, correlationId, storeInCache) {
    if (!cacheRecord) {
      throw createClientAuthError(invalidCacheRecord);
    }
    try {
      if (!!cacheRecord.account) {
        await this.setAccount(cacheRecord.account, correlationId);
      }
      if (!!cacheRecord.idToken && storeInCache?.idToken !== false) {
        await this.setIdTokenCredential(cacheRecord.idToken, correlationId);
      }
      if (!!cacheRecord.accessToken && storeInCache?.accessToken !== false) {
        await this.saveAccessToken(cacheRecord.accessToken, correlationId);
      }
      if (!!cacheRecord.refreshToken && storeInCache?.refreshToken !== false) {
        await this.setRefreshTokenCredential(cacheRecord.refreshToken, correlationId);
      }
      if (!!cacheRecord.appMetadata) {
        this.setAppMetadata(cacheRecord.appMetadata, correlationId);
      }
    } catch (e) {
      this.commonLogger?.error(`CacheManager.saveCacheRecord: failed`);
      if (e instanceof AuthError) {
        throw e;
      } else {
        throw createCacheError(e);
      }
    }
  }
  /**
   * saves access token credential
   * @param credential
   */
  async saveAccessToken(credential, correlationId) {
    const accessTokenFilter = {
      clientId: credential.clientId,
      credentialType: credential.credentialType,
      environment: credential.environment,
      homeAccountId: credential.homeAccountId,
      realm: credential.realm,
      tokenType: credential.tokenType,
      requestedClaimsHash: credential.requestedClaimsHash
    };
    const tokenKeys = this.getTokenKeys();
    const currentScopes = ScopeSet.fromString(credential.target);
    tokenKeys.accessToken.forEach((key) => {
      if (!this.accessTokenKeyMatchesFilter(key, accessTokenFilter, false)) {
        return;
      }
      const tokenEntity = this.getAccessTokenCredential(key, correlationId);
      if (tokenEntity && this.credentialMatchesFilter(tokenEntity, accessTokenFilter)) {
        const tokenScopeSet = ScopeSet.fromString(tokenEntity.target);
        if (tokenScopeSet.intersectingScopeSets(currentScopes)) {
          this.removeAccessToken(key, correlationId);
        }
      }
    });
    await this.setAccessTokenCredential(credential, correlationId);
  }
  /**
   * Retrieve account entities matching all provided tenant-agnostic filters; if no filter is set, get all account entities in the cache
   * Not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared
   * @param accountFilter - An object containing Account properties to filter by
   */
  getAccountsFilteredBy(accountFilter, correlationId) {
    const allAccountKeys = this.getAccountKeys();
    const matchingAccounts = [];
    allAccountKeys.forEach((cacheKey) => {
      const entity = this.getAccount(cacheKey, correlationId);
      if (!entity) {
        return;
      }
      if (!!accountFilter.homeAccountId && !this.matchHomeAccountId(entity, accountFilter.homeAccountId)) {
        return;
      }
      if (!!accountFilter.username && !this.matchUsername(entity.username, accountFilter.username)) {
        return;
      }
      if (!!accountFilter.environment && !this.matchEnvironment(entity, accountFilter.environment)) {
        return;
      }
      if (!!accountFilter.realm && !this.matchRealm(entity, accountFilter.realm)) {
        return;
      }
      if (!!accountFilter.nativeAccountId && !this.matchNativeAccountId(entity, accountFilter.nativeAccountId)) {
        return;
      }
      if (!!accountFilter.authorityType && !this.matchAuthorityType(entity, accountFilter.authorityType)) {
        return;
      }
      const tenantProfileFilter = {
        localAccountId: accountFilter?.localAccountId,
        name: accountFilter?.name
      };
      const matchingTenantProfiles = entity.tenantProfiles?.filter((tenantProfile) => {
        return this.tenantProfileMatchesFilter(tenantProfile, tenantProfileFilter);
      });
      if (matchingTenantProfiles && matchingTenantProfiles.length === 0) {
        return;
      }
      matchingAccounts.push(entity);
    });
    return matchingAccounts;
  }
  /**
   * Returns whether or not the given credential entity matches the filter
   * @param entity
   * @param filter
   * @returns
   */
  credentialMatchesFilter(entity, filter) {
    if (!!filter.clientId && !this.matchClientId(entity, filter.clientId)) {
      return false;
    }
    if (!!filter.userAssertionHash && !this.matchUserAssertionHash(entity, filter.userAssertionHash)) {
      return false;
    }
    if (typeof filter.homeAccountId === "string" && !this.matchHomeAccountId(entity, filter.homeAccountId)) {
      return false;
    }
    if (!!filter.environment && !this.matchEnvironment(entity, filter.environment)) {
      return false;
    }
    if (!!filter.realm && !this.matchRealm(entity, filter.realm)) {
      return false;
    }
    if (!!filter.credentialType && !this.matchCredentialType(entity, filter.credentialType)) {
      return false;
    }
    if (!!filter.familyId && !this.matchFamilyId(entity, filter.familyId)) {
      return false;
    }
    if (!!filter.target && !this.matchTarget(entity, filter.target)) {
      return false;
    }
    if (filter.requestedClaimsHash || entity.requestedClaimsHash) {
      if (entity.requestedClaimsHash !== filter.requestedClaimsHash) {
        return false;
      }
    }
    if (entity.credentialType === CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME) {
      if (!!filter.tokenType && !this.matchTokenType(entity, filter.tokenType)) {
        return false;
      }
      if (filter.tokenType === AuthenticationScheme.SSH) {
        if (filter.keyId && !this.matchKeyId(entity, filter.keyId)) {
          return false;
        }
      }
    }
    return true;
  }
  /**
   * retrieve appMetadata matching all provided filters; if no filter is set, get all appMetadata
   * @param filter
   */
  getAppMetadataFilteredBy(filter) {
    const allCacheKeys = this.getKeys();
    const matchingAppMetadata = {};
    allCacheKeys.forEach((cacheKey) => {
      if (!this.isAppMetadata(cacheKey)) {
        return;
      }
      const entity = this.getAppMetadata(cacheKey);
      if (!entity) {
        return;
      }
      if (!!filter.environment && !this.matchEnvironment(entity, filter.environment)) {
        return;
      }
      if (!!filter.clientId && !this.matchClientId(entity, filter.clientId)) {
        return;
      }
      matchingAppMetadata[cacheKey] = entity;
    });
    return matchingAppMetadata;
  }
  /**
   * retrieve authorityMetadata that contains a matching alias
   * @param filter
   */
  getAuthorityMetadataByAlias(host) {
    const allCacheKeys = this.getAuthorityMetadataKeys();
    let matchedEntity = null;
    allCacheKeys.forEach((cacheKey) => {
      if (!this.isAuthorityMetadata(cacheKey) || cacheKey.indexOf(this.clientId) === -1) {
        return;
      }
      const entity = this.getAuthorityMetadata(cacheKey);
      if (!entity) {
        return;
      }
      if (entity.aliases.indexOf(host) === -1) {
        return;
      }
      matchedEntity = entity;
    });
    return matchedEntity;
  }
  /**
   * Removes all accounts and related tokens from cache.
   */
  removeAllAccounts(correlationId) {
    const accounts = this.getAllAccounts({}, correlationId);
    accounts.forEach((account) => {
      this.removeAccount(account, correlationId);
    });
  }
  /**
   * Removes the account and related tokens for a given account key
   * @param account
   */
  removeAccount(account, correlationId) {
    this.removeAccountContext(account, correlationId);
    const accountKeys = this.getAccountKeys();
    const keyFilter = (key) => {
      return key.includes(account.homeAccountId) && key.includes(account.environment);
    };
    accountKeys.filter(keyFilter).forEach((key) => {
      this.removeItem(key, correlationId);
      this.performanceClient.incrementFields({ accountsRemoved: 1 }, correlationId);
    });
  }
  /**
   * Removes credentials associated with the provided account
   * @param account
   */
  removeAccountContext(account, correlationId) {
    const allTokenKeys = this.getTokenKeys();
    const keyFilter = (key) => {
      return key.includes(account.homeAccountId) && key.includes(account.environment);
    };
    allTokenKeys.idToken.filter(keyFilter).forEach((key) => {
      this.removeIdToken(key, correlationId);
    });
    allTokenKeys.accessToken.filter(keyFilter).forEach((key) => {
      this.removeAccessToken(key, correlationId);
    });
    allTokenKeys.refreshToken.filter(keyFilter).forEach((key) => {
      this.removeRefreshToken(key, correlationId);
    });
  }
  /**
   * Removes accessToken from the cache
   * @param key
   * @param correlationId
   */
  removeAccessToken(key, correlationId) {
    const credential = this.getAccessTokenCredential(key, correlationId);
    this.removeItem(key, correlationId);
    this.performanceClient.incrementFields({ accessTokensRemoved: 1 }, correlationId);
    if (!credential || credential.credentialType.toLowerCase() !== CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase() || credential.tokenType !== AuthenticationScheme.POP) {
      return;
    }
    const kid = credential.keyId;
    if (kid) {
      void this.cryptoImpl.removeTokenBindingKey(kid).catch(() => {
        this.commonLogger.error(`Failed to remove token binding key ${kid}`, correlationId);
        this.performanceClient?.incrementFields({ removeTokenBindingKeyFailure: 1 }, correlationId);
      });
    }
  }
  /**
   * Removes all app metadata objects from cache.
   */
  removeAppMetadata(correlationId) {
    const allCacheKeys = this.getKeys();
    allCacheKeys.forEach((cacheKey) => {
      if (this.isAppMetadata(cacheKey)) {
        this.removeItem(cacheKey, correlationId);
      }
    });
    return true;
  }
  /**
   * Retrieve IdTokenEntity from cache
   * @param account {AccountInfo}
   * @param tokenKeys {?TokenKeys}
   * @param targetRealm {?string}
   * @param performanceClient {?IPerformanceClient}
   * @param correlationId {?string}
   */
  getIdToken(account, correlationId, tokenKeys, targetRealm, performanceClient) {
    this.commonLogger.trace("CacheManager - getIdToken called");
    const idTokenFilter = {
      homeAccountId: account.homeAccountId,
      environment: account.environment,
      credentialType: CredentialType.ID_TOKEN,
      clientId: this.clientId,
      realm: targetRealm
    };
    const idTokenMap = this.getIdTokensByFilter(idTokenFilter, correlationId, tokenKeys);
    const numIdTokens = idTokenMap.size;
    if (numIdTokens < 1) {
      this.commonLogger.info("CacheManager:getIdToken - No token found");
      return null;
    } else if (numIdTokens > 1) {
      let tokensToBeRemoved = idTokenMap;
      if (!targetRealm) {
        const homeIdTokenMap = /* @__PURE__ */ new Map();
        idTokenMap.forEach((idToken, key) => {
          if (idToken.realm === account.tenantId) {
            homeIdTokenMap.set(key, idToken);
          }
        });
        const numHomeIdTokens = homeIdTokenMap.size;
        if (numHomeIdTokens < 1) {
          this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account but none match account entity tenant id, returning first result");
          return idTokenMap.values().next().value;
        } else if (numHomeIdTokens === 1) {
          this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account, defaulting to home tenant profile");
          return homeIdTokenMap.values().next().value;
        } else {
          tokensToBeRemoved = homeIdTokenMap;
        }
      }
      this.commonLogger.info("CacheManager:getIdToken - Multiple matching ID tokens found, clearing them");
      tokensToBeRemoved.forEach((idToken, key) => {
        this.removeIdToken(key, correlationId);
      });
      if (performanceClient && correlationId) {
        performanceClient.addFields({ multiMatchedID: idTokenMap.size }, correlationId);
      }
      return null;
    }
    this.commonLogger.info("CacheManager:getIdToken - Returning ID token");
    return idTokenMap.values().next().value;
  }
  /**
   * Gets all idTokens matching the given filter
   * @param filter
   * @returns
   */
  getIdTokensByFilter(filter, correlationId, tokenKeys) {
    const idTokenKeys = tokenKeys && tokenKeys.idToken || this.getTokenKeys().idToken;
    const idTokens = /* @__PURE__ */ new Map();
    idTokenKeys.forEach((key) => {
      if (!this.idTokenKeyMatchesFilter(key, {
        clientId: this.clientId,
        ...filter
      })) {
        return;
      }
      const idToken = this.getIdTokenCredential(key, correlationId);
      if (idToken && this.credentialMatchesFilter(idToken, filter)) {
        idTokens.set(key, idToken);
      }
    });
    return idTokens;
  }
  /**
   * Validate the cache key against filter before retrieving and parsing cache value
   * @param key
   * @param filter
   * @returns
   */
  idTokenKeyMatchesFilter(inputKey, filter) {
    const key = inputKey.toLowerCase();
    if (filter.clientId && key.indexOf(filter.clientId.toLowerCase()) === -1) {
      return false;
    }
    if (filter.homeAccountId && key.indexOf(filter.homeAccountId.toLowerCase()) === -1) {
      return false;
    }
    return true;
  }
  /**
   * Removes idToken from the cache
   * @param key
   */
  removeIdToken(key, correlationId) {
    this.removeItem(key, correlationId);
  }
  /**
   * Removes refresh token from the cache
   * @param key
   */
  removeRefreshToken(key, correlationId) {
    this.removeItem(key, correlationId);
  }
  /**
   * Retrieve AccessTokenEntity from cache
   * @param account {AccountInfo}
   * @param request {BaseAuthRequest}
   * @param correlationId {?string}
   * @param tokenKeys {?TokenKeys}
   * @param performanceClient {?IPerformanceClient}
   */
  getAccessToken(account, request2, tokenKeys, targetRealm) {
    const correlationId = request2.correlationId;
    this.commonLogger.trace("CacheManager - getAccessToken called", correlationId);
    const scopes = ScopeSet.createSearchScopes(request2.scopes);
    const authScheme = request2.authenticationScheme || AuthenticationScheme.BEARER;
    const credentialType = authScheme && authScheme.toLowerCase() !== AuthenticationScheme.BEARER.toLowerCase() ? CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME : CredentialType.ACCESS_TOKEN;
    const accessTokenFilter = {
      homeAccountId: account.homeAccountId,
      environment: account.environment,
      credentialType,
      clientId: this.clientId,
      realm: targetRealm || account.tenantId,
      target: scopes,
      tokenType: authScheme,
      keyId: request2.sshKid,
      requestedClaimsHash: request2.requestedClaimsHash
    };
    const accessTokenKeys = tokenKeys && tokenKeys.accessToken || this.getTokenKeys().accessToken;
    const accessTokens = [];
    accessTokenKeys.forEach((key) => {
      if (this.accessTokenKeyMatchesFilter(key, accessTokenFilter, true)) {
        const accessToken = this.getAccessTokenCredential(key, correlationId);
        if (accessToken && this.credentialMatchesFilter(accessToken, accessTokenFilter)) {
          accessTokens.push(accessToken);
        }
      }
    });
    const numAccessTokens = accessTokens.length;
    if (numAccessTokens < 1) {
      this.commonLogger.info("CacheManager:getAccessToken - No token found", correlationId);
      return null;
    } else if (numAccessTokens > 1) {
      this.commonLogger.info("CacheManager:getAccessToken - Multiple access tokens found, clearing them", correlationId);
      accessTokens.forEach((accessToken) => {
        this.removeAccessToken(this.generateCredentialKey(accessToken), correlationId);
      });
      this.performanceClient.addFields({ multiMatchedAT: accessTokens.length }, correlationId);
      return null;
    }
    this.commonLogger.info("CacheManager:getAccessToken - Returning access token", correlationId);
    return accessTokens[0];
  }
  /**
   * Validate the cache key against filter before retrieving and parsing cache value
   * @param key
   * @param filter
   * @param keyMustContainAllScopes
   * @returns
   */
  accessTokenKeyMatchesFilter(inputKey, filter, keyMustContainAllScopes) {
    const key = inputKey.toLowerCase();
    if (filter.clientId && key.indexOf(filter.clientId.toLowerCase()) === -1) {
      return false;
    }
    if (filter.homeAccountId && key.indexOf(filter.homeAccountId.toLowerCase()) === -1) {
      return false;
    }
    if (filter.realm && key.indexOf(filter.realm.toLowerCase()) === -1) {
      return false;
    }
    if (filter.requestedClaimsHash && key.indexOf(filter.requestedClaimsHash.toLowerCase()) === -1) {
      return false;
    }
    if (filter.target) {
      const scopes = filter.target.asArray();
      for (let i = 0; i < scopes.length; i++) {
        if (keyMustContainAllScopes && !key.includes(scopes[i].toLowerCase())) {
          return false;
        } else if (!keyMustContainAllScopes && key.includes(scopes[i].toLowerCase())) {
          return true;
        }
      }
    }
    return true;
  }
  /**
   * Gets all access tokens matching the filter
   * @param filter
   * @returns
   */
  getAccessTokensByFilter(filter, correlationId) {
    const tokenKeys = this.getTokenKeys();
    const accessTokens = [];
    tokenKeys.accessToken.forEach((key) => {
      if (!this.accessTokenKeyMatchesFilter(key, filter, true)) {
        return;
      }
      const accessToken = this.getAccessTokenCredential(key, correlationId);
      if (accessToken && this.credentialMatchesFilter(accessToken, filter)) {
        accessTokens.push(accessToken);
      }
    });
    return accessTokens;
  }
  /**
   * Helper to retrieve the appropriate refresh token from cache
   * @param account {AccountInfo}
   * @param familyRT {boolean}
   * @param correlationId {?string}
   * @param tokenKeys {?TokenKeys}
   * @param performanceClient {?IPerformanceClient}
   */
  getRefreshToken(account, familyRT, correlationId, tokenKeys, performanceClient) {
    this.commonLogger.trace("CacheManager - getRefreshToken called");
    const id = familyRT ? THE_FAMILY_ID : void 0;
    const refreshTokenFilter = {
      homeAccountId: account.homeAccountId,
      environment: account.environment,
      credentialType: CredentialType.REFRESH_TOKEN,
      clientId: this.clientId,
      familyId: id
    };
    const refreshTokenKeys = tokenKeys && tokenKeys.refreshToken || this.getTokenKeys().refreshToken;
    const refreshTokens = [];
    refreshTokenKeys.forEach((key) => {
      if (this.refreshTokenKeyMatchesFilter(key, refreshTokenFilter)) {
        const refreshToken = this.getRefreshTokenCredential(key, correlationId);
        if (refreshToken && this.credentialMatchesFilter(refreshToken, refreshTokenFilter)) {
          refreshTokens.push(refreshToken);
        }
      }
    });
    const numRefreshTokens = refreshTokens.length;
    if (numRefreshTokens < 1) {
      this.commonLogger.info("CacheManager:getRefreshToken - No refresh token found.");
      return null;
    }
    if (numRefreshTokens > 1 && performanceClient && correlationId) {
      performanceClient.addFields({ multiMatchedRT: numRefreshTokens }, correlationId);
    }
    this.commonLogger.info("CacheManager:getRefreshToken - returning refresh token");
    return refreshTokens[0];
  }
  /**
   * Validate the cache key against filter before retrieving and parsing cache value
   * @param key
   * @param filter
   */
  refreshTokenKeyMatchesFilter(inputKey, filter) {
    const key = inputKey.toLowerCase();
    if (filter.familyId && key.indexOf(filter.familyId.toLowerCase()) === -1) {
      return false;
    }
    if (!filter.familyId && filter.clientId && key.indexOf(filter.clientId.toLowerCase()) === -1) {
      return false;
    }
    if (filter.homeAccountId && key.indexOf(filter.homeAccountId.toLowerCase()) === -1) {
      return false;
    }
    return true;
  }
  /**
   * Retrieve AppMetadataEntity from cache
   */
  readAppMetadataFromCache(environment) {
    const appMetadataFilter = {
      environment,
      clientId: this.clientId
    };
    const appMetadata = this.getAppMetadataFilteredBy(appMetadataFilter);
    const appMetadataEntries = Object.keys(appMetadata).map((key) => appMetadata[key]);
    const numAppMetadata = appMetadataEntries.length;
    if (numAppMetadata < 1) {
      return null;
    } else if (numAppMetadata > 1) {
      throw createClientAuthError(multipleMatchingAppMetadata);
    }
    return appMetadataEntries[0];
  }
  /**
   * Return the family_id value associated  with FOCI
   * @param environment
   * @param clientId
   */
  isAppMetadataFOCI(environment) {
    const appMetadata = this.readAppMetadataFromCache(environment);
    return !!(appMetadata && appMetadata.familyId === THE_FAMILY_ID);
  }
  /**
   * helper to match account ids
   * @param value
   * @param homeAccountId
   */
  matchHomeAccountId(entity, homeAccountId) {
    return !!(typeof entity.homeAccountId === "string" && homeAccountId === entity.homeAccountId);
  }
  /**
   * helper to match account ids
   * @param entity
   * @param localAccountId
   * @returns
   */
  matchLocalAccountIdFromTokenClaims(tokenClaims, localAccountId) {
    const idTokenLocalAccountId = tokenClaims.oid || tokenClaims.sub;
    return localAccountId === idTokenLocalAccountId;
  }
  matchLocalAccountIdFromTenantProfile(tenantProfile, localAccountId) {
    return tenantProfile.localAccountId === localAccountId;
  }
  /**
   * helper to match names
   * @param entity
   * @param name
   * @returns true if the downcased name properties are present and match in the filter and the entity
   */
  matchName(claims, name3) {
    return !!(name3.toLowerCase() === claims.name?.toLowerCase());
  }
  /**
   * helper to match usernames
   * @param entity
   * @param username
   * @returns
   */
  matchUsername(cachedUsername, filterUsername) {
    return !!(cachedUsername && typeof cachedUsername === "string" && filterUsername?.toLowerCase() === cachedUsername.toLowerCase());
  }
  /**
   * helper to match assertion
   * @param value
   * @param oboAssertion
   */
  matchUserAssertionHash(entity, userAssertionHash) {
    return !!(entity.userAssertionHash && userAssertionHash === entity.userAssertionHash);
  }
  /**
   * helper to match environment
   * @param value
   * @param environment
   */
  matchEnvironment(entity, environment) {
    if (this.staticAuthorityOptions) {
      const staticAliases = getAliasesFromStaticSources(this.staticAuthorityOptions, this.commonLogger);
      if (staticAliases.includes(environment) && staticAliases.includes(entity.environment)) {
        return true;
      }
    }
    const cloudMetadata = this.getAuthorityMetadataByAlias(environment);
    if (cloudMetadata && cloudMetadata.aliases.indexOf(entity.environment) > -1) {
      return true;
    }
    return false;
  }
  /**
   * helper to match credential type
   * @param entity
   * @param credentialType
   */
  matchCredentialType(entity, credentialType) {
    return entity.credentialType && credentialType.toLowerCase() === entity.credentialType.toLowerCase();
  }
  /**
   * helper to match client ids
   * @param entity
   * @param clientId
   */
  matchClientId(entity, clientId) {
    return !!(entity.clientId && clientId === entity.clientId);
  }
  /**
   * helper to match family ids
   * @param entity
   * @param familyId
   */
  matchFamilyId(entity, familyId) {
    return !!(entity.familyId && familyId === entity.familyId);
  }
  /**
   * helper to match realm
   * @param entity
   * @param realm
   */
  matchRealm(entity, realm) {
    return !!(entity.realm?.toLowerCase() === realm.toLowerCase());
  }
  /**
   * helper to match nativeAccountId
   * @param entity
   * @param nativeAccountId
   * @returns boolean indicating the match result
   */
  matchNativeAccountId(entity, nativeAccountId) {
    return !!(entity.nativeAccountId && nativeAccountId === entity.nativeAccountId);
  }
  /**
   * helper to match loginHint which can be either:
   * 1. login_hint ID token claim
   * 2. username in cached account object
   * 3. upn in ID token claims
   * @param entity
   * @param loginHint
   * @returns
   */
  matchLoginHintFromTokenClaims(tokenClaims, loginHint) {
    if (tokenClaims.login_hint === loginHint) {
      return true;
    }
    if (tokenClaims.preferred_username === loginHint) {
      return true;
    }
    if (tokenClaims.upn === loginHint) {
      return true;
    }
    return false;
  }
  /**
   * Helper to match sid
   * @param entity
   * @param sid
   * @returns true if the sid claim is present and matches the filter
   */
  matchSid(idTokenClaims, sid) {
    return idTokenClaims.sid === sid;
  }
  matchAuthorityType(entity, authorityType) {
    return !!(entity.authorityType && authorityType.toLowerCase() === entity.authorityType.toLowerCase());
  }
  /**
   * Returns true if the target scopes are a subset of the current entity's scopes, false otherwise.
   * @param entity
   * @param target
   */
  matchTarget(entity, target) {
    const isNotAccessTokenCredential = entity.credentialType !== CredentialType.ACCESS_TOKEN && entity.credentialType !== CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;
    if (isNotAccessTokenCredential || !entity.target) {
      return false;
    }
    const entityScopeSet = ScopeSet.fromString(entity.target);
    return entityScopeSet.containsScopeSet(target);
  }
  /**
   * Returns true if the credential's tokenType or Authentication Scheme matches the one in the request, false otherwise
   * @param entity
   * @param tokenType
   */
  matchTokenType(entity, tokenType) {
    return !!(entity.tokenType && entity.tokenType === tokenType);
  }
  /**
   * Returns true if the credential's keyId matches the one in the request, false otherwise
   * @param entity
   * @param keyId
   */
  matchKeyId(entity, keyId) {
    return !!(entity.keyId && entity.keyId === keyId);
  }
  /**
   * returns if a given cache entity is of the type appmetadata
   * @param key
   */
  isAppMetadata(key) {
    return key.indexOf(APP_METADATA) !== -1;
  }
  /**
   * returns if a given cache entity is of the type authoritymetadata
   * @param key
   */
  isAuthorityMetadata(key) {
    return key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) !== -1;
  }
  /**
   * returns cache key used for cloud instance metadata
   */
  generateAuthorityMetadataCacheKey(authority) {
    return `${AUTHORITY_METADATA_CONSTANTS.CACHE_KEY}-${this.clientId}-${authority}`;
  }
  /**
   * Helper to convert serialized data to object
   * @param obj
   * @param json
   */
  static toObject(obj, json) {
    for (const propertyName in json) {
      obj[propertyName] = json[propertyName];
    }
    return obj;
  }
};
var DefaultStorageClass = class extends CacheManager {
  async setAccount() {
    throw createClientAuthError(methodNotImplemented);
  }
  getAccount() {
    throw createClientAuthError(methodNotImplemented);
  }
  async setIdTokenCredential() {
    throw createClientAuthError(methodNotImplemented);
  }
  getIdTokenCredential() {
    throw createClientAuthError(methodNotImplemented);
  }
  async setAccessTokenCredential() {
    throw createClientAuthError(methodNotImplemented);
  }
  getAccessTokenCredential() {
    throw createClientAuthError(methodNotImplemented);
  }
  async setRefreshTokenCredential() {
    throw createClientAuthError(methodNotImplemented);
  }
  getRefreshTokenCredential() {
    throw createClientAuthError(methodNotImplemented);
  }
  setAppMetadata() {
    throw createClientAuthError(methodNotImplemented);
  }
  getAppMetadata() {
    throw createClientAuthError(methodNotImplemented);
  }
  setServerTelemetry() {
    throw createClientAuthError(methodNotImplemented);
  }
  getServerTelemetry() {
    throw createClientAuthError(methodNotImplemented);
  }
  setAuthorityMetadata() {
    throw createClientAuthError(methodNotImplemented);
  }
  getAuthorityMetadata() {
    throw createClientAuthError(methodNotImplemented);
  }
  getAuthorityMetadataKeys() {
    throw createClientAuthError(methodNotImplemented);
  }
  setThrottlingCache() {
    throw createClientAuthError(methodNotImplemented);
  }
  getThrottlingCache() {
    throw createClientAuthError(methodNotImplemented);
  }
  removeItem() {
    throw createClientAuthError(methodNotImplemented);
  }
  getKeys() {
    throw createClientAuthError(methodNotImplemented);
  }
  getAccountKeys() {
    throw createClientAuthError(methodNotImplemented);
  }
  getTokenKeys() {
    throw createClientAuthError(methodNotImplemented);
  }
  generateCredentialKey() {
    throw createClientAuthError(methodNotImplemented);
  }
  generateAccountKey() {
    throw createClientAuthError(methodNotImplemented);
  }
};

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs
var ProtocolMode = {
  /**
   * Auth Code + PKCE with Entra ID (formerly AAD) specific optimizations and features
   */
  AAD: "AAD",
  /**
   * Auth Code + PKCE without Entra ID specific optimizations and features. For use only with non-Microsoft owned authorities.
   * Support is limited for this mode.
   */
  OIDC: "OIDC",
  /**
   * Encrypted Authorize Response (EAR) with Entra ID specific optimizations and features
   */
  EAR: "EAR"
};

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs
var PerformanceEvents = {
  /**
   * acquireTokenByCode API (msal-browser and msal-node).
   * Used to acquire tokens by trading an authorization code against the token endpoint.
   */
  AcquireTokenByCode: "acquireTokenByCode",
  /**
   * acquireTokenByRefreshToken API (msal-browser and msal-node).
   * Used to renew an access token using a refresh token against the token endpoint.
   */
  AcquireTokenByRefreshToken: "acquireTokenByRefreshToken",
  /**
   * acquireTokenSilent API (msal-browser and msal-node).
   * Used to silently acquire a new access token (from the cache or the network).
   */
  AcquireTokenSilent: "acquireTokenSilent",
  /**
   * acquireTokenSilentAsync (msal-browser).
   * Internal API for acquireTokenSilent.
   */
  AcquireTokenSilentAsync: "acquireTokenSilentAsync",
  /**
   * acquireTokenPopup (msal-browser).
   * Used to acquire a new access token interactively through pop ups
   */
  AcquireTokenPopup: "acquireTokenPopup",
  /**
   * acquireTokenPreRedirect (msal-browser).
   * First part of the redirect flow.
   * Used to acquire a new access token interactively through redirects.
   */
  AcquireTokenPreRedirect: "acquireTokenPreRedirect",
  /**
   * acquireTokenRedirect (msal-browser).
   * Second part of the redirect flow.
   * Used to acquire a new access token interactively through redirects.
   */
  AcquireTokenRedirect: "acquireTokenRedirect",
  /**
   * getPublicKeyThumbprint API in CryptoOpts class (msal-browser).
   * Used to generate a public/private keypair and generate a public key thumbprint for pop requests.
   */
  CryptoOptsGetPublicKeyThumbprint: "cryptoOptsGetPublicKeyThumbprint",
  /**
   * signJwt API in CryptoOpts class (msal-browser).
   * Used to signed a pop token.
   */
  CryptoOptsSignJwt: "cryptoOptsSignJwt",
  /**
   * acquireToken API in the SilentCacheClient class (msal-browser).
   * Used to read access tokens from the cache.
   */
  SilentCacheClientAcquireToken: "silentCacheClientAcquireToken",
  /**
   * acquireToken API in the SilentIframeClient class (msal-browser).
   * Used to acquire a new set of tokens from the authorize endpoint in a hidden iframe.
   */
  SilentIframeClientAcquireToken: "silentIframeClientAcquireToken",
  AwaitConcurrentIframe: "awaitConcurrentIframe",
  /**
   * acquireToken API in SilentRereshClient (msal-browser).
   * Used to acquire a new set of tokens from the token endpoint using a refresh token.
   */
  SilentRefreshClientAcquireToken: "silentRefreshClientAcquireToken",
  /**
   * ssoSilent API (msal-browser).
   * Used to silently acquire an authorization code and set of tokens using a hidden iframe.
   */
  SsoSilent: "ssoSilent",
  /**
   * getDiscoveredAuthority API in StandardInteractionClient class (msal-browser).
   * Used to load authority metadata for a request.
   */
  StandardInteractionClientGetDiscoveredAuthority: "standardInteractionClientGetDiscoveredAuthority",
  /**
   * acquireToken APIs in msal-browser.
   * Used to make an /authorize endpoint call with native brokering enabled.
   */
  FetchAccountIdWithNativeBroker: "fetchAccountIdWithNativeBroker",
  /**
   * acquireToken API in NativeInteractionClient class (msal-browser).
   * Used to acquire a token from Native component when native brokering is enabled.
   */
  NativeInteractionClientAcquireToken: "nativeInteractionClientAcquireToken",
  /**
   * Time spent creating default headers for requests to token endpoint
   */
  BaseClientCreateTokenRequestHeaders: "baseClientCreateTokenRequestHeaders",
  /**
   * Time spent sending/waiting for the response of a request to the token endpoint
   */
  NetworkClientSendPostRequestAsync: "networkClientSendPostRequestAsync",
  RefreshTokenClientExecutePostToTokenEndpoint: "refreshTokenClientExecutePostToTokenEndpoint",
  AuthorizationCodeClientExecutePostToTokenEndpoint: "authorizationCodeClientExecutePostToTokenEndpoint",
  /**
   * Used to measure the time taken for completing embedded-broker handshake (PW-Broker).
   */
  BrokerHandhshake: "brokerHandshake",
  /**
   * acquireTokenByRefreshToken API in BrokerClientApplication (PW-Broker) .
   */
  AcquireTokenByRefreshTokenInBroker: "acquireTokenByRefreshTokenInBroker",
  /**
   * Time taken for token acquisition by broker
   */
  AcquireTokenByBroker: "acquireTokenByBroker",
  /**
   * Time spent on the network for refresh token acquisition
   */
  RefreshTokenClientExecuteTokenRequest: "refreshTokenClientExecuteTokenRequest",
  /**
   * Time taken for acquiring refresh token , records RT size
   */
  RefreshTokenClientAcquireToken: "refreshTokenClientAcquireToken",
  /**
   * Time taken for acquiring cached refresh token
   */
  RefreshTokenClientAcquireTokenWithCachedRefreshToken: "refreshTokenClientAcquireTokenWithCachedRefreshToken",
  /**
   * acquireTokenByRefreshToken API in RefreshTokenClient (msal-common).
   */
  RefreshTokenClientAcquireTokenByRefreshToken: "refreshTokenClientAcquireTokenByRefreshToken",
  /**
   * Helper function to create token request body in RefreshTokenClient (msal-common).
   */
  RefreshTokenClientCreateTokenRequestBody: "refreshTokenClientCreateTokenRequestBody",
  /**
   * acquireTokenFromCache (msal-browser).
   * Internal API for acquiring token from cache
   */
  AcquireTokenFromCache: "acquireTokenFromCache",
  SilentFlowClientAcquireCachedToken: "silentFlowClientAcquireCachedToken",
  SilentFlowClientGenerateResultFromCacheRecord: "silentFlowClientGenerateResultFromCacheRecord",
  /**
   * acquireTokenBySilentIframe (msal-browser).
   * Internal API for acquiring token by silent Iframe
   */
  AcquireTokenBySilentIframe: "acquireTokenBySilentIframe",
  /**
   * Internal API for initializing base request in BaseInteractionClient (msal-browser)
   */
  InitializeBaseRequest: "initializeBaseRequest",
  /**
   * Internal API for initializing silent request in SilentCacheClient (msal-browser)
   */
  InitializeSilentRequest: "initializeSilentRequest",
  InitializeClientApplication: "initializeClientApplication",
  InitializeCache: "initializeCache",
  /**
   * Helper function in SilentIframeClient class (msal-browser).
   */
  SilentIframeClientTokenHelper: "silentIframeClientTokenHelper",
  /**
   * SilentHandler
   */
  SilentHandlerInitiateAuthRequest: "silentHandlerInitiateAuthRequest",
  SilentHandlerMonitorIframeForHash: "silentHandlerMonitorIframeForHash",
  SilentHandlerLoadFrame: "silentHandlerLoadFrame",
  SilentHandlerLoadFrameSync: "silentHandlerLoadFrameSync",
  /**
   * Helper functions in StandardInteractionClient class (msal-browser)
   */
  StandardInteractionClientCreateAuthCodeClient: "standardInteractionClientCreateAuthCodeClient",
  StandardInteractionClientGetClientConfiguration: "standardInteractionClientGetClientConfiguration",
  StandardInteractionClientInitializeAuthorizationRequest: "standardInteractionClientInitializeAuthorizationRequest",
  /**
   * getAuthCodeUrl API (msal-browser and msal-node).
   */
  GetAuthCodeUrl: "getAuthCodeUrl",
  GetStandardParams: "getStandardParams",
  /**
   * Functions from InteractionHandler (msal-browser)
   */
  HandleCodeResponseFromServer: "handleCodeResponseFromServer",
  HandleCodeResponse: "handleCodeResponse",
  HandleResponseEar: "handleResponseEar",
  HandleResponsePlatformBroker: "handleResponsePlatformBroker",
  HandleResponseCode: "handleResponseCode",
  UpdateTokenEndpointAuthority: "updateTokenEndpointAuthority",
  /**
   * APIs in Authorization Code Client (msal-common)
   */
  AuthClientAcquireToken: "authClientAcquireToken",
  AuthClientExecuteTokenRequest: "authClientExecuteTokenRequest",
  AuthClientCreateTokenRequestBody: "authClientCreateTokenRequestBody",
  /**
   * Generate functions in PopTokenGenerator (msal-common)
   */
  PopTokenGenerateCnf: "popTokenGenerateCnf",
  PopTokenGenerateKid: "popTokenGenerateKid",
  /**
   * handleServerTokenResponse API in ResponseHandler (msal-common)
   */
  HandleServerTokenResponse: "handleServerTokenResponse",
  DeserializeResponse: "deserializeResponse",
  /**
   * Authority functions
   */
  AuthorityFactoryCreateDiscoveredInstance: "authorityFactoryCreateDiscoveredInstance",
  AuthorityResolveEndpointsAsync: "authorityResolveEndpointsAsync",
  AuthorityResolveEndpointsFromLocalSources: "authorityResolveEndpointsFromLocalSources",
  AuthorityGetCloudDiscoveryMetadataFromNetwork: "authorityGetCloudDiscoveryMetadataFromNetwork",
  AuthorityUpdateCloudDiscoveryMetadata: "authorityUpdateCloudDiscoveryMetadata",
  AuthorityGetEndpointMetadataFromNetwork: "authorityGetEndpointMetadataFromNetwork",
  AuthorityUpdateEndpointMetadata: "authorityUpdateEndpointMetadata",
  AuthorityUpdateMetadataWithRegionalInformation: "authorityUpdateMetadataWithRegionalInformation",
  /**
   * Region Discovery functions
   */
  RegionDiscoveryDetectRegion: "regionDiscoveryDetectRegion",
  RegionDiscoveryGetRegionFromIMDS: "regionDiscoveryGetRegionFromIMDS",
  RegionDiscoveryGetCurrentVersion: "regionDiscoveryGetCurrentVersion",
  AcquireTokenByCodeAsync: "acquireTokenByCodeAsync",
  GetEndpointMetadataFromNetwork: "getEndpointMetadataFromNetwork",
  GetCloudDiscoveryMetadataFromNetworkMeasurement: "getCloudDiscoveryMetadataFromNetworkMeasurement",
  HandleRedirectPromiseMeasurement: "handleRedirectPromise",
  HandleNativeRedirectPromiseMeasurement: "handleNativeRedirectPromise",
  UpdateCloudDiscoveryMetadataMeasurement: "updateCloudDiscoveryMetadataMeasurement",
  UsernamePasswordClientAcquireToken: "usernamePasswordClientAcquireToken",
  NativeMessageHandlerHandshake: "nativeMessageHandlerHandshake",
  NativeGenerateAuthResult: "nativeGenerateAuthResult",
  RemoveHiddenIframe: "removeHiddenIframe",
  /**
   * Cache operations
   */
  ClearTokensAndKeysWithClaims: "clearTokensAndKeysWithClaims",
  CacheManagerGetRefreshToken: "cacheManagerGetRefreshToken",
  ImportExistingCache: "importExistingCache",
  SetUserData: "setUserData",
  LocalStorageUpdated: "localStorageUpdated",
  /**
   * Crypto Operations
   */
  GeneratePkceCodes: "generatePkceCodes",
  GenerateCodeVerifier: "generateCodeVerifier",
  GenerateCodeChallengeFromVerifier: "generateCodeChallengeFromVerifier",
  Sha256Digest: "sha256Digest",
  GetRandomValues: "getRandomValues",
  GenerateHKDF: "generateHKDF",
  GenerateBaseKey: "generateBaseKey",
  Base64Decode: "base64Decode",
  UrlEncodeArr: "urlEncodeArr",
  Encrypt: "encrypt",
  Decrypt: "decrypt",
  GenerateEarKey: "generateEarKey",
  DecryptEarResponse: "decryptEarResponse"
};
var PerformanceEventAbbreviations = /* @__PURE__ */ new Map([
  [PerformanceEvents.AcquireTokenByCode, "ATByCode"],
  [PerformanceEvents.AcquireTokenByRefreshToken, "ATByRT"],
  [PerformanceEvents.AcquireTokenSilent, "ATS"],
  [PerformanceEvents.AcquireTokenSilentAsync, "ATSAsync"],
  [PerformanceEvents.AcquireTokenPopup, "ATPopup"],
  [PerformanceEvents.AcquireTokenRedirect, "ATRedirect"],
  [
    PerformanceEvents.CryptoOptsGetPublicKeyThumbprint,
    "CryptoGetPKThumb"
  ],
  [PerformanceEvents.CryptoOptsSignJwt, "CryptoSignJwt"],
  [PerformanceEvents.SilentCacheClientAcquireToken, "SltCacheClientAT"],
  [PerformanceEvents.SilentIframeClientAcquireToken, "SltIframeClientAT"],
  [PerformanceEvents.SilentRefreshClientAcquireToken, "SltRClientAT"],
  [PerformanceEvents.SsoSilent, "SsoSlt"],
  [
    PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority,
    "StdIntClientGetDiscAuth"
  ],
  [
    PerformanceEvents.FetchAccountIdWithNativeBroker,
    "FetchAccIdWithNtvBroker"
  ],
  [
    PerformanceEvents.NativeInteractionClientAcquireToken,
    "NtvIntClientAT"
  ],
  [
    PerformanceEvents.BaseClientCreateTokenRequestHeaders,
    "BaseClientCreateTReqHead"
  ],
  [
    PerformanceEvents.NetworkClientSendPostRequestAsync,
    "NetClientSendPost"
  ],
  [
    PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint,
    "RTClientExecPost"
  ],
  [
    PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint,
    "AuthCodeClientExecPost"
  ],
  [PerformanceEvents.BrokerHandhshake, "BrokerHandshake"],
  [
    PerformanceEvents.AcquireTokenByRefreshTokenInBroker,
    "ATByRTInBroker"
  ],
  [PerformanceEvents.AcquireTokenByBroker, "ATByBroker"],
  [
    PerformanceEvents.RefreshTokenClientExecuteTokenRequest,
    "RTClientExecTReq"
  ],
  [PerformanceEvents.RefreshTokenClientAcquireToken, "RTClientAT"],
  [
    PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken,
    "RTClientATWithCachedRT"
  ],
  [
    PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken,
    "RTClientATByRT"
  ],
  [
    PerformanceEvents.RefreshTokenClientCreateTokenRequestBody,
    "RTClientCreateTReqBody"
  ],
  [PerformanceEvents.AcquireTokenFromCache, "ATFromCache"],
  [
    PerformanceEvents.SilentFlowClientAcquireCachedToken,
    "SltFlowClientATCached"
  ],
  [
    PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord,
    "SltFlowClientGenResFromCache"
  ],
  [PerformanceEvents.AcquireTokenBySilentIframe, "ATBySltIframe"],
  [PerformanceEvents.InitializeBaseRequest, "InitBaseReq"],
  [PerformanceEvents.InitializeSilentRequest, "InitSltReq"],
  [
    PerformanceEvents.InitializeClientApplication,
    "InitClientApplication"
  ],
  [PerformanceEvents.InitializeCache, "InitCache"],
  [PerformanceEvents.ImportExistingCache, "importCache"],
  [PerformanceEvents.SetUserData, "setUserData"],
  [PerformanceEvents.LocalStorageUpdated, "localStorageUpdated"],
  [PerformanceEvents.SilentIframeClientTokenHelper, "SIClientTHelper"],
  [
    PerformanceEvents.SilentHandlerInitiateAuthRequest,
    "SHandlerInitAuthReq"
  ],
  [
    PerformanceEvents.SilentHandlerMonitorIframeForHash,
    "SltHandlerMonitorIframeForHash"
  ],
  [PerformanceEvents.SilentHandlerLoadFrame, "SHandlerLoadFrame"],
  [PerformanceEvents.SilentHandlerLoadFrameSync, "SHandlerLoadFrameSync"],
  [
    PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,
    "StdIntClientCreateAuthCodeClient"
  ],
  [
    PerformanceEvents.StandardInteractionClientGetClientConfiguration,
    "StdIntClientGetClientConf"
  ],
  [
    PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,
    "StdIntClientInitAuthReq"
  ],
  [PerformanceEvents.GetAuthCodeUrl, "GetAuthCodeUrl"],
  [
    PerformanceEvents.HandleCodeResponseFromServer,
    "HandleCodeResFromServer"
  ],
  [PerformanceEvents.HandleCodeResponse, "HandleCodeResp"],
  [PerformanceEvents.HandleResponseEar, "HandleRespEar"],
  [PerformanceEvents.HandleResponseCode, "HandleRespCode"],
  [
    PerformanceEvents.HandleResponsePlatformBroker,
    "HandleRespPlatBroker"
  ],
  [PerformanceEvents.UpdateTokenEndpointAuthority, "UpdTEndpointAuth"],
  [PerformanceEvents.AuthClientAcquireToken, "AuthClientAT"],
  [PerformanceEvents.AuthClientExecuteTokenRequest, "AuthClientExecTReq"],
  [
    PerformanceEvents.AuthClientCreateTokenRequestBody,
    "AuthClientCreateTReqBody"
  ],
  [PerformanceEvents.PopTokenGenerateCnf, "PopTGenCnf"],
  [PerformanceEvents.PopTokenGenerateKid, "PopTGenKid"],
  [PerformanceEvents.HandleServerTokenResponse, "HandleServerTRes"],
  [PerformanceEvents.DeserializeResponse, "DeserializeRes"],
  [
    PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance,
    "AuthFactCreateDiscInst"
  ],
  [
    PerformanceEvents.AuthorityResolveEndpointsAsync,
    "AuthResolveEndpointsAsync"
  ],
  [
    PerformanceEvents.AuthorityResolveEndpointsFromLocalSources,
    "AuthResolveEndpointsFromLocal"
  ],
  [
    PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork,
    "AuthGetCDMetaFromNet"
  ],
  [
    PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata,
    "AuthUpdCDMeta"
  ],
  [
    PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork,
    "AuthUpdCDMetaFromNet"
  ],
  [
    PerformanceEvents.AuthorityUpdateEndpointMetadata,
    "AuthUpdEndpointMeta"
  ],
  [
    PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation,
    "AuthUpdMetaWithRegInfo"
  ],
  [PerformanceEvents.RegionDiscoveryDetectRegion, "RegDiscDetectReg"],
  [
    PerformanceEvents.RegionDiscoveryGetRegionFromIMDS,
    "RegDiscGetRegFromIMDS"
  ],
  [
    PerformanceEvents.RegionDiscoveryGetCurrentVersion,
    "RegDiscGetCurrentVer"
  ],
  [PerformanceEvents.AcquireTokenByCodeAsync, "ATByCodeAsync"],
  [
    PerformanceEvents.GetEndpointMetadataFromNetwork,
    "GetEndpointMetaFromNet"
  ],
  [
    PerformanceEvents.GetCloudDiscoveryMetadataFromNetworkMeasurement,
    "GetCDMetaFromNet"
  ],
  [
    PerformanceEvents.HandleRedirectPromiseMeasurement,
    "HandleRedirectPromise"
  ],
  [
    PerformanceEvents.HandleNativeRedirectPromiseMeasurement,
    "HandleNtvRedirectPromise"
  ],
  [
    PerformanceEvents.UpdateCloudDiscoveryMetadataMeasurement,
    "UpdateCDMeta"
  ],
  [
    PerformanceEvents.UsernamePasswordClientAcquireToken,
    "UserPassClientAT"
  ],
  [
    PerformanceEvents.NativeMessageHandlerHandshake,
    "NtvMsgHandlerHandshake"
  ],
  [PerformanceEvents.NativeGenerateAuthResult, "NtvGenAuthRes"],
  [PerformanceEvents.RemoveHiddenIframe, "RemoveHiddenIframe"],
  [
    PerformanceEvents.ClearTokensAndKeysWithClaims,
    "ClearTAndKeysWithClaims"
  ],
  [PerformanceEvents.CacheManagerGetRefreshToken, "CacheManagerGetRT"],
  [PerformanceEvents.GeneratePkceCodes, "GenPkceCodes"],
  [PerformanceEvents.GenerateCodeVerifier, "GenCodeVerifier"],
  [
    PerformanceEvents.GenerateCodeChallengeFromVerifier,
    "GenCodeChallengeFromVerifier"
  ],
  [PerformanceEvents.Sha256Digest, "Sha256Digest"],
  [PerformanceEvents.GetRandomValues, "GetRandomValues"],
  [PerformanceEvents.GenerateHKDF, "genHKDF"],
  [PerformanceEvents.GenerateBaseKey, "genBaseKey"],
  [PerformanceEvents.Base64Decode, "b64Decode"],
  [PerformanceEvents.UrlEncodeArr, "urlEncArr"],
  [PerformanceEvents.Encrypt, "encrypt"],
  [PerformanceEvents.Decrypt, "decrypt"],
  [PerformanceEvents.GenerateEarKey, "genEarKey"],
  [PerformanceEvents.DecryptEarResponse, "decryptEarResp"]
]);
var PerformanceEventStatus = {
  NotStarted: 0,
  InProgress: 1,
  Completed: 2
};

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/telemetry/performance/StubPerformanceClient.mjs
var StubPerformanceMeasurement = class {
  startMeasurement() {
    return;
  }
  endMeasurement() {
    return;
  }
  flushMeasurement() {
    return null;
  }
};
var StubPerformanceClient = class {
  generateId() {
    return "callback-id";
  }
  startMeasurement(measureName, correlationId) {
    return {
      end: () => null,
      discard: () => {
      },
      add: () => {
      },
      increment: () => {
      },
      event: {
        eventId: this.generateId(),
        status: PerformanceEventStatus.InProgress,
        authority: "",
        libraryName: "",
        libraryVersion: "",
        clientId: "",
        name: measureName,
        startTimeMs: Date.now(),
        correlationId: correlationId || ""
      },
      measurement: new StubPerformanceMeasurement()
    };
  }
  startPerformanceMeasurement() {
    return new StubPerformanceMeasurement();
  }
  calculateQueuedTime() {
    return 0;
  }
  addQueueMeasurement() {
    return;
  }
  setPreQueueTime() {
    return;
  }
  endMeasurement() {
    return null;
  }
  discardMeasurements() {
    return;
  }
  removePerformanceCallback() {
    return true;
  }
  addPerformanceCallback() {
    return "";
  }
  emitEvents() {
    return;
  }
  addFields() {
    return;
  }
  incrementFields() {
    return;
  }
  cacheEventByCorrelationId() {
    return;
  }
};

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs
var DEFAULT_SYSTEM_OPTIONS = {
  tokenRenewalOffsetSeconds: DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,
  preventCorsPreflight: false
};
var DEFAULT_LOGGER_IMPLEMENTATION = {
  loggerCallback: () => {
  },
  piiLoggingEnabled: false,
  logLevel: LogLevel.Info,
  correlationId: Constants.EMPTY_STRING
};
var DEFAULT_CACHE_OPTIONS = {
  claimsBasedCachingEnabled: false
};
var DEFAULT_NETWORK_IMPLEMENTATION = {
  async sendGetRequestAsync() {
    throw createClientAuthError(methodNotImplemented);
  },
  async sendPostRequestAsync() {
    throw createClientAuthError(methodNotImplemented);
  }
};
var DEFAULT_LIBRARY_INFO = {
  sku: Constants.SKU,
  version,
  cpu: Constants.EMPTY_STRING,
  os: Constants.EMPTY_STRING
};
var DEFAULT_CLIENT_CREDENTIALS = {
  clientSecret: Constants.EMPTY_STRING,
  clientAssertion: void 0
};
var DEFAULT_AZURE_CLOUD_OPTIONS = {
  azureCloudInstance: AzureCloudInstance.None,
  tenant: `${Constants.DEFAULT_COMMON_TENANT}`
};
var DEFAULT_TELEMETRY_OPTIONS = {
  application: {
    appName: "",
    appVersion: ""
  }
};
function buildClientConfiguration({ authOptions: userAuthOptions, systemOptions: userSystemOptions, loggerOptions: userLoggerOption, cacheOptions: userCacheOptions, storageInterface: storageImplementation, networkInterface: networkImplementation, cryptoInterface: cryptoImplementation, clientCredentials, libraryInfo, telemetry, serverTelemetryManager, persistencePlugin, serializableCache }) {
  const loggerOptions = {
    ...DEFAULT_LOGGER_IMPLEMENTATION,
    ...userLoggerOption
  };
  return {
    authOptions: buildAuthOptions(userAuthOptions),
    systemOptions: { ...DEFAULT_SYSTEM_OPTIONS, ...userSystemOptions },
    loggerOptions,
    cacheOptions: { ...DEFAULT_CACHE_OPTIONS, ...userCacheOptions },
    storageInterface: storageImplementation || new DefaultStorageClass(userAuthOptions.clientId, DEFAULT_CRYPTO_IMPLEMENTATION, new Logger(loggerOptions), new StubPerformanceClient()),
    networkInterface: networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,
    cryptoInterface: cryptoImplementation || DEFAULT_CRYPTO_IMPLEMENTATION,
    clientCredentials: clientCredentials || DEFAULT_CLIENT_CREDENTIALS,
    libraryInfo: { ...DEFAULT_LIBRARY_INFO, ...libraryInfo },
    telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...telemetry },
    serverTelemetryManager: serverTelemetryManager || null,
    persistencePlugin: persistencePlugin || null,
    serializableCache: serializableCache || null
  };
}
function buildAuthOptions(authOptions) {
  return {
    clientCapabilities: [],
    azureCloudOptions: DEFAULT_AZURE_CLOUD_OPTIONS,
    skipAuthorityMetadataCache: false,
    instanceAware: false,
    encodeExtraQueryParams: false,
    ...authOptions
  };
}
function isOidcProtocolMode(config) {
  return config.authOptions.authority.options.protocolMode === ProtocolMode.OIDC;
}

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/account/CcsCredential.mjs
var CcsCredentialType = {
  HOME_ACCOUNT_ID: "home_account_id",
  UPN: "UPN"
};

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/account/ClientInfo.mjs
function buildClientInfo(rawClientInfo, base64Decode) {
  if (!rawClientInfo) {
    throw createClientAuthError(clientInfoEmptyError);
  }
  try {
    const decodedClientInfo = base64Decode(rawClientInfo);
    return JSON.parse(decodedClientInfo);
  } catch (e) {
    throw createClientAuthError(clientInfoDecodingError);
  }
}
function buildClientInfoFromHomeAccountId(homeAccountId) {
  if (!homeAccountId) {
    throw createClientAuthError(clientInfoDecodingError);
  }
  const clientInfoParts = homeAccountId.split(Separators.CLIENT_INFO_SEPARATOR, 2);
  return {
    uid: clientInfoParts[0],
    utid: clientInfoParts.length < 2 ? Constants.EMPTY_STRING : clientInfoParts[1]
  };
}

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs
var RequestParameterBuilder_exports = {};
__export(RequestParameterBuilder_exports, {
  addApplicationTelemetry: () => addApplicationTelemetry,
  addAuthorizationCode: () => addAuthorizationCode,
  addBrokerParameters: () => addBrokerParameters,
  addCcsOid: () => addCcsOid,
  addCcsUpn: () => addCcsUpn,
  addClaims: () => addClaims,
  addClientAssertion: () => addClientAssertion,
  addClientAssertionType: () => addClientAssertionType,
  addClientCapabilitiesToClaims: () => addClientCapabilitiesToClaims,
  addClientId: () => addClientId,
  addClientInfo: () => addClientInfo,
  addClientSecret: () => addClientSecret,
  addCodeChallengeParams: () => addCodeChallengeParams,
  addCodeVerifier: () => addCodeVerifier,
  addCorrelationId: () => addCorrelationId,
  addDeviceCode: () => addDeviceCode,
  addDomainHint: () => addDomainHint,
  addEARParameters: () => addEARParameters,
  addExtraQueryParameters: () => addExtraQueryParameters,
  addGrantType: () => addGrantType,
  addIdTokenHint: () => addIdTokenHint,
  addInstanceAware: () => addInstanceAware,
  addLibraryInfo: () => addLibraryInfo,
  addLoginHint: () => addLoginHint,
  addLogoutHint: () => addLogoutHint,
  addNativeBroker: () => addNativeBroker,
  addNonce: () => addNonce,
  addOboAssertion: () => addOboAssertion,
  addPassword: () => addPassword,
  addPopToken: () => addPopToken,
  addPostBodyParameters: () => addPostBodyParameters,
  addPostLogoutRedirectUri: () => addPostLogoutRedirectUri,
  addPrompt: () => addPrompt,
  addRedirectUri: () => addRedirectUri,
  addRefreshToken: () => addRefreshToken,
  addRequestTokenUse: () => addRequestTokenUse,
  addResponseMode: () => addResponseMode,
  addResponseType: () => addResponseType,
  addScopes: () => addScopes,
  addServerTelemetry: () => addServerTelemetry,
  addSid: () => addSid,
  addSshJwk: () => addSshJwk,
  addState: () => addState,
  addThrottling: () => addThrottling,
  addUsername: () => addUsername,
  instrumentBrokerParams: () => instrumentBrokerParams
});

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/constants/AADServerParamKeys.mjs
var AADServerParamKeys_exports = {};
__export(AADServerParamKeys_exports, {
  ACCESS_TOKEN: () => ACCESS_TOKEN,
  BROKER_CLIENT_ID: () => BROKER_CLIENT_ID,
  BROKER_REDIRECT_URI: () => BROKER_REDIRECT_URI,
  CCS_HEADER: () => CCS_HEADER,
  CLAIMS: () => CLAIMS,
  CLIENT_ASSERTION: () => CLIENT_ASSERTION,
  CLIENT_ASSERTION_TYPE: () => CLIENT_ASSERTION_TYPE,
  CLIENT_ID: () => CLIENT_ID,
  CLIENT_INFO: () => CLIENT_INFO2,
  CLIENT_REQUEST_ID: () => CLIENT_REQUEST_ID,
  CLIENT_SECRET: () => CLIENT_SECRET,
  CODE: () => CODE,
  CODE_CHALLENGE: () => CODE_CHALLENGE,
  CODE_CHALLENGE_METHOD: () => CODE_CHALLENGE_METHOD,
  CODE_VERIFIER: () => CODE_VERIFIER,
  DEVICE_CODE: () => DEVICE_CODE,
  DOMAIN_HINT: () => DOMAIN_HINT,
  EAR_JWE_CRYPTO: () => EAR_JWE_CRYPTO,
  EAR_JWK: () => EAR_JWK,
  ERROR: () => ERROR,
  ERROR_DESCRIPTION: () => ERROR_DESCRIPTION,
  EXPIRES_IN: () => EXPIRES_IN,
  FOCI: () => FOCI,
  GRANT_TYPE: () => GRANT_TYPE,
  ID_TOKEN: () => ID_TOKEN,
  ID_TOKEN_HINT: () => ID_TOKEN_HINT,
  INSTANCE_AWARE: () => INSTANCE_AWARE,
  LOGIN_HINT: () => LOGIN_HINT,
  LOGOUT_HINT: () => LOGOUT_HINT,
  NATIVE_BROKER: () => NATIVE_BROKER,
  NONCE: () => NONCE,
  OBO_ASSERTION: () => OBO_ASSERTION,
  ON_BEHALF_OF: () => ON_BEHALF_OF,
  POST_LOGOUT_URI: () => POST_LOGOUT_URI,
  PROMPT: () => PROMPT,
  REDIRECT_URI: () => REDIRECT_URI,
  REFRESH_TOKEN: () => REFRESH_TOKEN,
  REFRESH_TOKEN_EXPIRES_IN: () => REFRESH_TOKEN_EXPIRES_IN,
  REQUESTED_TOKEN_USE: () => REQUESTED_TOKEN_USE,
  REQ_CNF: () => REQ_CNF,
  RESPONSE_MODE: () => RESPONSE_MODE,
  RESPONSE_TYPE: () => RESPONSE_TYPE,
  RETURN_SPA_CODE: () => RETURN_SPA_CODE,
  SCOPE: () => SCOPE,
  SESSION_STATE: () => SESSION_STATE,
  SID: () => SID,
  STATE: () => STATE,
  TOKEN_TYPE: () => TOKEN_TYPE,
  X_APP_NAME: () => X_APP_NAME,
  X_APP_VER: () => X_APP_VER,
  X_CLIENT_CPU: () => X_CLIENT_CPU,
  X_CLIENT_CURR_TELEM: () => X_CLIENT_CURR_TELEM,
  X_CLIENT_EXTRA_SKU: () => X_CLIENT_EXTRA_SKU,
  X_CLIENT_LAST_TELEM: () => X_CLIENT_LAST_TELEM,
  X_CLIENT_OS: () => X_CLIENT_OS,
  X_CLIENT_SKU: () => X_CLIENT_SKU,
  X_CLIENT_VER: () => X_CLIENT_VER,
  X_MS_LIB_CAPABILITY: () => X_MS_LIB_CAPABILITY
});
var CLIENT_ID = "client_id";
var REDIRECT_URI = "redirect_uri";
var RESPONSE_TYPE = "response_type";
var RESPONSE_MODE = "response_mode";
var GRANT_TYPE = "grant_type";
var CLAIMS = "claims";
var SCOPE = "scope";
var ERROR = "error";
var ERROR_DESCRIPTION = "error_description";
var ACCESS_TOKEN = "access_token";
var ID_TOKEN = "id_token";
var REFRESH_TOKEN = "refresh_token";
var EXPIRES_IN = "expires_in";
var REFRESH_TOKEN_EXPIRES_IN = "refresh_token_expires_in";
var STATE = "state";
var NONCE = "nonce";
var PROMPT = "prompt";
var SESSION_STATE = "session_state";
var CLIENT_INFO2 = "client_info";
var CODE = "code";
var CODE_CHALLENGE = "code_challenge";
var CODE_CHALLENGE_METHOD = "code_challenge_method";
var CODE_VERIFIER = "code_verifier";
var CLIENT_REQUEST_ID = "client-request-id";
var X_CLIENT_SKU = "x-client-SKU";
var X_CLIENT_VER = "x-client-VER";
var X_CLIENT_OS = "x-client-OS";
var X_CLIENT_CPU = "x-client-CPU";
var X_CLIENT_CURR_TELEM = "x-client-current-telemetry";
var X_CLIENT_LAST_TELEM = "x-client-last-telemetry";
var X_MS_LIB_CAPABILITY = "x-ms-lib-capability";
var X_APP_NAME = "x-app-name";
var X_APP_VER = "x-app-ver";
var POST_LOGOUT_URI = "post_logout_redirect_uri";
var ID_TOKEN_HINT = "id_token_hint";
var DEVICE_CODE = "device_code";
var CLIENT_SECRET = "client_secret";
var CLIENT_ASSERTION = "client_assertion";
var CLIENT_ASSERTION_TYPE = "client_assertion_type";
var TOKEN_TYPE = "token_type";
var REQ_CNF = "req_cnf";
var OBO_ASSERTION = "assertion";
var REQUESTED_TOKEN_USE = "requested_token_use";
var ON_BEHALF_OF = "on_behalf_of";
var FOCI = "foci";
var CCS_HEADER = "X-AnchorMailbox";
var RETURN_SPA_CODE = "return_spa_code";
var NATIVE_BROKER = "nativebroker";
var LOGOUT_HINT = "logout_hint";
var SID = "sid";
var LOGIN_HINT = "login_hint";
var DOMAIN_HINT = "domain_hint";
var X_CLIENT_EXTRA_SKU = "x-client-xtra-sku";
var BROKER_CLIENT_ID = "brk_client_id";
var BROKER_REDIRECT_URI = "brk_redirect_uri";
var INSTANCE_AWARE = "instance_aware";
var EAR_JWK = "ear_jwk";
var EAR_JWE_CRYPTO = "ear_jwe_crypto";

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs
function instrumentBrokerParams(parameters, correlationId, performanceClient) {
  if (!correlationId) {
    return;
  }
  const clientId = parameters.get(CLIENT_ID);
  if (clientId && parameters.has(BROKER_CLIENT_ID)) {
    performanceClient?.addFields({
      embeddedClientId: clientId,
      embeddedRedirectUri: parameters.get(REDIRECT_URI)
    }, correlationId);
  }
}
function addResponseType(parameters, responseType) {
  parameters.set(RESPONSE_TYPE, responseType);
}
function addResponseMode(parameters, responseMode) {
  parameters.set(RESPONSE_MODE, responseMode ? responseMode : ResponseMode.QUERY);
}
function addNativeBroker(parameters) {
  parameters.set(NATIVE_BROKER, "1");
}
function addScopes(parameters, scopes, addOidcScopes = true, defaultScopes = OIDC_DEFAULT_SCOPES) {
  if (addOidcScopes && !defaultScopes.includes("openid") && !scopes.includes("openid")) {
    defaultScopes.push("openid");
  }
  const requestScopes = addOidcScopes ? [...scopes || [], ...defaultScopes] : scopes || [];
  const scopeSet = new ScopeSet(requestScopes);
  parameters.set(SCOPE, scopeSet.printScopes());
}
function addClientId(parameters, clientId) {
  parameters.set(CLIENT_ID, clientId);
}
function addRedirectUri(parameters, redirectUri) {
  parameters.set(REDIRECT_URI, redirectUri);
}
function addPostLogoutRedirectUri(parameters, redirectUri) {
  parameters.set(POST_LOGOUT_URI, redirectUri);
}
function addIdTokenHint(parameters, idTokenHint) {
  parameters.set(ID_TOKEN_HINT, idTokenHint);
}
function addDomainHint(parameters, domainHint) {
  parameters.set(DOMAIN_HINT, domainHint);
}
function addLoginHint(parameters, loginHint) {
  parameters.set(LOGIN_HINT, loginHint);
}
function addCcsUpn(parameters, loginHint) {
  parameters.set(HeaderNames.CCS_HEADER, `UPN:${loginHint}`);
}
function addCcsOid(parameters, clientInfo) {
  parameters.set(HeaderNames.CCS_HEADER, `Oid:${clientInfo.uid}@${clientInfo.utid}`);
}
function addSid(parameters, sid) {
  parameters.set(SID, sid);
}
function addClaims(parameters, claims, clientCapabilities) {
  const mergedClaims = addClientCapabilitiesToClaims(claims, clientCapabilities);
  try {
    JSON.parse(mergedClaims);
  } catch (e) {
    throw createClientConfigurationError(invalidClaims);
  }
  parameters.set(CLAIMS, mergedClaims);
}
function addCorrelationId(parameters, correlationId) {
  parameters.set(CLIENT_REQUEST_ID, correlationId);
}
function addLibraryInfo(parameters, libraryInfo) {
  parameters.set(X_CLIENT_SKU, libraryInfo.sku);
  parameters.set(X_CLIENT_VER, libraryInfo.version);
  if (libraryInfo.os) {
    parameters.set(X_CLIENT_OS, libraryInfo.os);
  }
  if (libraryInfo.cpu) {
    parameters.set(X_CLIENT_CPU, libraryInfo.cpu);
  }
}
function addApplicationTelemetry(parameters, appTelemetry) {
  if (appTelemetry?.appName) {
    parameters.set(X_APP_NAME, appTelemetry.appName);
  }
  if (appTelemetry?.appVersion) {
    parameters.set(X_APP_VER, appTelemetry.appVersion);
  }
}
function addPrompt(parameters, prompt) {
  parameters.set(PROMPT, prompt);
}
function addState(parameters, state) {
  if (state) {
    parameters.set(STATE, state);
  }
}
function addNonce(parameters, nonce) {
  parameters.set(NONCE, nonce);
}
function addCodeChallengeParams(parameters, codeChallenge, codeChallengeMethod) {
  if (codeChallenge && codeChallengeMethod) {
    parameters.set(CODE_CHALLENGE, codeChallenge);
    parameters.set(CODE_CHALLENGE_METHOD, codeChallengeMethod);
  } else {
    throw createClientConfigurationError(pkceParamsMissing);
  }
}
function addAuthorizationCode(parameters, code) {
  parameters.set(CODE, code);
}
function addDeviceCode(parameters, code) {
  parameters.set(DEVICE_CODE, code);
}
function addRefreshToken(parameters, refreshToken) {
  parameters.set(REFRESH_TOKEN, refreshToken);
}
function addCodeVerifier(parameters, codeVerifier) {
  parameters.set(CODE_VERIFIER, codeVerifier);
}
function addClientSecret(parameters, clientSecret) {
  parameters.set(CLIENT_SECRET, clientSecret);
}
function addClientAssertion(parameters, clientAssertion) {
  if (clientAssertion) {
    parameters.set(CLIENT_ASSERTION, clientAssertion);
  }
}
function addClientAssertionType(parameters, clientAssertionType) {
  if (clientAssertionType) {
    parameters.set(CLIENT_ASSERTION_TYPE, clientAssertionType);
  }
}
function addOboAssertion(parameters, oboAssertion) {
  parameters.set(OBO_ASSERTION, oboAssertion);
}
function addRequestTokenUse(parameters, tokenUse) {
  parameters.set(REQUESTED_TOKEN_USE, tokenUse);
}
function addGrantType(parameters, grantType) {
  parameters.set(GRANT_TYPE, grantType);
}
function addClientInfo(parameters) {
  parameters.set(CLIENT_INFO, "1");
}
function addInstanceAware(parameters) {
  if (!parameters.has(INSTANCE_AWARE)) {
    parameters.set(INSTANCE_AWARE, "true");
  }
}
function addExtraQueryParameters(parameters, eQParams) {
  Object.entries(eQParams).forEach(([key, value]) => {
    if (!parameters.has(key) && value) {
      parameters.set(key, value);
    }
  });
}
function addClientCapabilitiesToClaims(claims, clientCapabilities) {
  let mergedClaims;
  if (!claims) {
    mergedClaims = {};
  } else {
    try {
      mergedClaims = JSON.parse(claims);
    } catch (e) {
      throw createClientConfigurationError(invalidClaims);
    }
  }
  if (clientCapabilities && clientCapabilities.length > 0) {
    if (!mergedClaims.hasOwnProperty(ClaimsRequestKeys.ACCESS_TOKEN)) {
      mergedClaims[ClaimsRequestKeys.ACCESS_TOKEN] = {};
    }
    mergedClaims[ClaimsRequestKeys.ACCESS_TOKEN][ClaimsRequestKeys.XMS_CC] = {
      values: clientCapabilities
    };
  }
  return JSON.stringify(mergedClaims);
}
function addUsername(parameters, username) {
  parameters.set(PasswordGrantConstants.username, username);
}
function addPassword(parameters, password) {
  parameters.set(PasswordGrantConstants.password, password);
}
function addPopToken(parameters, cnfString) {
  if (cnfString) {
    parameters.set(TOKEN_TYPE, AuthenticationScheme.POP);
    parameters.set(REQ_CNF, cnfString);
  }
}
function addSshJwk(parameters, sshJwkString) {
  if (sshJwkString) {
    parameters.set(TOKEN_TYPE, AuthenticationScheme.SSH);
    parameters.set(REQ_CNF, sshJwkString);
  }
}
function addServerTelemetry(parameters, serverTelemetryManager) {
  parameters.set(X_CLIENT_CURR_TELEM, serverTelemetryManager.generateCurrentRequestHeaderValue());
  parameters.set(X_CLIENT_LAST_TELEM, serverTelemetryManager.generateLastRequestHeaderValue());
}
function addThrottling(parameters) {
  parameters.set(X_MS_LIB_CAPABILITY, ThrottlingConstants.X_MS_LIB_CAPABILITY_VALUE);
}
function addLogoutHint(parameters, logoutHint) {
  parameters.set(LOGOUT_HINT, logoutHint);
}
function addBrokerParameters(parameters, brokerClientId, brokerRedirectUri) {
  if (!parameters.has(BROKER_CLIENT_ID)) {
    parameters.set(BROKER_CLIENT_ID, brokerClientId);
  }
  if (!parameters.has(BROKER_REDIRECT_URI)) {
    parameters.set(BROKER_REDIRECT_URI, brokerRedirectUri);
  }
}
function addEARParameters(parameters, jwk) {
  parameters.set(EAR_JWK, encodeURIComponent(jwk));
  const jweCryptoB64Encoded = "eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIn0";
  parameters.set(EAR_JWE_CRYPTO, jweCryptoB64Encoded);
}
function addPostBodyParameters(parameters, bodyParameters) {
  Object.entries(bodyParameters).forEach(([key, value]) => {
    if (value) {
      parameters.set(key, value);
    }
  });
}

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/authority/AuthorityFactory.mjs
var AuthorityFactory_exports = {};
__export(AuthorityFactory_exports, {
  createDiscoveredInstance: () => createDiscoveredInstance
});

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/authority/AuthorityType.mjs
var AuthorityType = {
  Default: 0,
  Adfs: 1,
  Dsts: 2,
  Ciam: 3
};

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/authority/OpenIdConfigResponse.mjs
function isOpenIdConfigResponse(response) {
  return response.hasOwnProperty("authorization_endpoint") && response.hasOwnProperty("token_endpoint") && response.hasOwnProperty("issuer") && response.hasOwnProperty("jwks_uri");
}

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryResponse.mjs
function isCloudInstanceDiscoveryResponse(response) {
  return response.hasOwnProperty("tenant_discovery_endpoint") && response.hasOwnProperty("metadata");
}

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryErrorResponse.mjs
function isCloudInstanceDiscoveryErrorResponse(response) {
  return response.hasOwnProperty("error") && response.hasOwnProperty("error_description");
}

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs
var invoke = (callback, eventName, logger, telemetryClient, correlationId) => {
  return (...args) => {
    logger.trace(`Executing function ${eventName}`);
    const inProgressEvent = telemetryClient?.startMeasurement(eventName, correlationId);
    if (correlationId) {
      const eventCount = eventName + "CallCount";
      telemetryClient?.incrementFields({ [eventCount]: 1 }, correlationId);
    }
    try {
      const result = callback(...args);
      inProgressEvent?.end({
        success: true
      });
      logger.trace(`Returning result from ${eventName}`);
      return result;
    } catch (e) {
      logger.trace(`Error occurred in ${eventName}`);
      try {
        logger.trace(JSON.stringify(e));
      } catch (e2) {
        logger.trace("Unable to print error message.");
      }
      inProgressEvent?.end({
        success: false
      }, e);
      throw e;
    }
  };
};
var invokeAsync = (callback, eventName, logger, telemetryClient, correlationId) => {
  return (...args) => {
    logger.trace(`Executing function ${eventName}`);
    const inProgressEvent = telemetryClient?.startMeasurement(eventName, correlationId);
    if (correlationId) {
      const eventCount = eventName + "CallCount";
      telemetryClient?.incrementFields({ [eventCount]: 1 }, correlationId);
    }
    telemetryClient?.setPreQueueTime(eventName, correlationId);
    return callback(...args).then((response) => {
      logger.trace(`Returning result from ${eventName}`);
      inProgressEvent?.end({
        success: true
      });
      return response;
    }).catch((e) => {
      logger.trace(`Error occurred in ${eventName}`);
      try {
        logger.trace(JSON.stringify(e));
      } catch (e2) {
        logger.trace("Unable to print error message.");
      }
      inProgressEvent?.end({
        success: false
      }, e);
      throw e;
    });
  };
};

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/authority/RegionDiscovery.mjs
var RegionDiscovery = class _RegionDiscovery {
  constructor(networkInterface, logger, performanceClient, correlationId) {
    this.networkInterface = networkInterface;
    this.logger = logger;
    this.performanceClient = performanceClient;
    this.correlationId = correlationId;
  }
  /**
   * Detect the region from the application's environment.
   *
   * @returns Promise<string | null>
   */
  async detectRegion(environmentRegion, regionDiscoveryMetadata) {
    this.performanceClient?.addQueueMeasurement(PerformanceEvents.RegionDiscoveryDetectRegion, this.correlationId);
    let autodetectedRegionName = environmentRegion;
    if (!autodetectedRegionName) {
      const options = _RegionDiscovery.IMDS_OPTIONS;
      try {
        const localIMDSVersionResponse = await invokeAsync(this.getRegionFromIMDS.bind(this), PerformanceEvents.RegionDiscoveryGetRegionFromIMDS, this.logger, this.performanceClient, this.correlationId)(Constants.IMDS_VERSION, options);
        if (localIMDSVersionResponse.status === HttpStatus.SUCCESS) {
          autodetectedRegionName = localIMDSVersionResponse.body;
          regionDiscoveryMetadata.region_source = RegionDiscoverySources.IMDS;
        }
        if (localIMDSVersionResponse.status === HttpStatus.BAD_REQUEST) {
          const currentIMDSVersion = await invokeAsync(this.getCurrentVersion.bind(this), PerformanceEvents.RegionDiscoveryGetCurrentVersion, this.logger, this.performanceClient, this.correlationId)(options);
          if (!currentIMDSVersion) {
            regionDiscoveryMetadata.region_source = RegionDiscoverySources.FAILED_AUTO_DETECTION;
            return null;
          }
          const currentIMDSVersionResponse = await invokeAsync(this.getRegionFromIMDS.bind(this), PerformanceEvents.RegionDiscoveryGetRegionFromIMDS, this.logger, this.performanceClient, this.correlationId)(currentIMDSVersion, options);
          if (currentIMDSVersionResponse.status === HttpStatus.SUCCESS) {
            autodetectedRegionName = currentIMDSVersionResponse.body;
            regionDiscoveryMetadata.region_source = RegionDiscoverySources.IMDS;
          }
        }
      } catch (e) {
        regionDiscoveryMetadata.region_source = RegionDiscoverySources.FAILED_AUTO_DETECTION;
        return null;
      }
    } else {
      regionDiscoveryMetadata.region_source = RegionDiscoverySources.ENVIRONMENT_VARIABLE;
    }
    if (!autodetectedRegionName) {
      regionDiscoveryMetadata.region_source = RegionDiscoverySources.FAILED_AUTO_DETECTION;
    }
    return autodetectedRegionName || null;
  }
  /**
   * Make the call to the IMDS endpoint
   *
   * @param imdsEndpointUrl
   * @returns Promise<NetworkResponse<string>>
   */
  async getRegionFromIMDS(version3, options) {
    this.performanceClient?.addQueueMeasurement(PerformanceEvents.RegionDiscoveryGetRegionFromIMDS, this.correlationId);
    return this.networkInterface.sendGetRequestAsync(`${Constants.IMDS_ENDPOINT}?api-version=${version3}&format=text`, options, Constants.IMDS_TIMEOUT);
  }
  /**
   * Get the most recent version of the IMDS endpoint available
   *
   * @returns Promise<string | null>
   */
  async getCurrentVersion(options) {
    this.performanceClient?.addQueueMeasurement(PerformanceEvents.RegionDiscoveryGetCurrentVersion, this.correlationId);
    try {
      const response = await this.networkInterface.sendGetRequestAsync(`${Constants.IMDS_ENDPOINT}?format=json`, options);
      if (response.status === HttpStatus.BAD_REQUEST && response.body && response.body["newest-versions"] && response.body["newest-versions"].length > 0) {
        return response.body["newest-versions"][0];
      }
      return null;
    } catch (e) {
      return null;
    }
  }
};
RegionDiscovery.IMDS_OPTIONS = {
  headers: {
    Metadata: "true"
  }
};

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/cache/utils/CacheHelpers.mjs
var CacheHelpers_exports = {};
__export(CacheHelpers_exports, {
  createAccessTokenEntity: () => createAccessTokenEntity,
  createIdTokenEntity: () => createIdTokenEntity,
  createRefreshTokenEntity: () => createRefreshTokenEntity,
  generateAppMetadataKey: () => generateAppMetadataKey,
  generateAuthorityMetadataExpiresAt: () => generateAuthorityMetadataExpiresAt,
  isAccessTokenEntity: () => isAccessTokenEntity,
  isAppMetadataEntity: () => isAppMetadataEntity,
  isAuthorityMetadataEntity: () => isAuthorityMetadataEntity,
  isAuthorityMetadataExpired: () => isAuthorityMetadataExpired,
  isCredentialEntity: () => isCredentialEntity,
  isIdTokenEntity: () => isIdTokenEntity,
  isRefreshTokenEntity: () => isRefreshTokenEntity,
  isServerTelemetryEntity: () => isServerTelemetryEntity,
  isThrottlingEntity: () => isThrottlingEntity,
  updateAuthorityEndpointMetadata: () => updateAuthorityEndpointMetadata,
  updateCloudDiscoveryMetadata: () => updateCloudDiscoveryMetadata
});

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs
var TimeUtils_exports = {};
__export(TimeUtils_exports, {
  delay: () => delay,
  isCacheExpired: () => isCacheExpired,
  isTokenExpired: () => isTokenExpired,
  nowSeconds: () => nowSeconds,
  toDateFromSeconds: () => toDateFromSeconds,
  toSecondsFromDate: () => toSecondsFromDate,
  wasClockTurnedBack: () => wasClockTurnedBack
});
function nowSeconds() {
  return Math.round((/* @__PURE__ */ new Date()).getTime() / 1e3);
}
function toSecondsFromDate(date) {
  return date.getTime() / 1e3;
}
function toDateFromSeconds(seconds) {
  if (seconds) {
    return new Date(Number(seconds) * 1e3);
  }
  return /* @__PURE__ */ new Date();
}
function isTokenExpired(expiresOn, offset) {
  const expirationSec = Number(expiresOn) || 0;
  const offsetCurrentTimeSec = nowSeconds() + offset;
  return offsetCurrentTimeSec > expirationSec;
}
function isCacheExpired(lastUpdatedAt, cacheRetentionDays) {
  const cacheExpirationTimestamp = Number(lastUpdatedAt) + cacheRetentionDays * 24 * 60 * 60 * 1e3;
  return Date.now() > cacheExpirationTimestamp;
}
function wasClockTurnedBack(cachedAt) {
  const cachedAtSec = Number(cachedAt);
  return cachedAtSec > nowSeconds();
}
function delay(t, value) {
  return new Promise((resolve) => setTimeout(() => resolve(value), t));
}

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/cache/utils/CacheHelpers.mjs
function createIdTokenEntity(homeAccountId, environment, idToken, clientId, tenantId) {
  const idTokenEntity = {
    credentialType: CredentialType.ID_TOKEN,
    homeAccountId,
    environment,
    clientId,
    secret: idToken,
    realm: tenantId,
    lastUpdatedAt: Date.now().toString()
    // Set the last updated time to now
  };
  return idTokenEntity;
}
function createAccessTokenEntity(homeAccountId, environment, accessToken, clientId, tenantId, scopes, expiresOn, extExpiresOn, base64Decode, refreshOn, tokenType, userAssertionHash, keyId, requestedClaims, requestedClaimsHash) {
  const atEntity = {
    homeAccountId,
    credentialType: CredentialType.ACCESS_TOKEN,
    secret: accessToken,
    cachedAt: nowSeconds().toString(),
    expiresOn: expiresOn.toString(),
    extendedExpiresOn: extExpiresOn.toString(),
    environment,
    clientId,
    realm: tenantId,
    target: scopes,
    tokenType: tokenType || AuthenticationScheme.BEARER,
    lastUpdatedAt: Date.now().toString()
    // Set the last updated time to now
  };
  if (userAssertionHash) {
    atEntity.userAssertionHash = userAssertionHash;
  }
  if (refreshOn) {
    atEntity.refreshOn = refreshOn.toString();
  }
  if (requestedClaims) {
    atEntity.requestedClaims = requestedClaims;
    atEntity.requestedClaimsHash = requestedClaimsHash;
  }
  if (atEntity.tokenType?.toLowerCase() !== AuthenticationScheme.BEARER.toLowerCase()) {
    atEntity.credentialType = CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;
    switch (atEntity.tokenType) {
      case AuthenticationScheme.POP:
        const tokenClaims = extractTokenClaims(accessToken, base64Decode);
        if (!tokenClaims?.cnf?.kid) {
          throw createClientAuthError(tokenClaimsCnfRequiredForSignedJwt);
        }
        atEntity.keyId = tokenClaims.cnf.kid;
        break;
      case AuthenticationScheme.SSH:
        atEntity.keyId = keyId;
    }
  }
  return atEntity;
}
function createRefreshTokenEntity(homeAccountId, environment, refreshToken, clientId, familyId, userAssertionHash, expiresOn) {
  const rtEntity = {
    credentialType: CredentialType.REFRESH_TOKEN,
    homeAccountId,
    environment,
    clientId,
    secret: refreshToken,
    lastUpdatedAt: Date.now().toString()
  };
  if (userAssertionHash) {
    rtEntity.userAssertionHash = userAssertionHash;
  }
  if (familyId) {
    rtEntity.familyId = familyId;
  }
  if (expiresOn) {
    rtEntity.expiresOn = expiresOn.toString();
  }
  return rtEntity;
}
function isCredentialEntity(entity) {
  return entity.hasOwnProperty("homeAccountId") && entity.hasOwnProperty("environment") && entity.hasOwnProperty("credentialType") && entity.hasOwnProperty("clientId") && entity.hasOwnProperty("secret");
}
function isAccessTokenEntity(entity) {
  if (!entity) {
    return false;
  }
  return isCredentialEntity(entity) && entity.hasOwnProperty("realm") && entity.hasOwnProperty("target") && (entity["credentialType"] === CredentialType.ACCESS_TOKEN || entity["credentialType"] === CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME);
}
function isIdTokenEntity(entity) {
  if (!entity) {
    return false;
  }
  return isCredentialEntity(entity) && entity.hasOwnProperty("realm") && entity["credentialType"] === CredentialType.ID_TOKEN;
}
function isRefreshTokenEntity(entity) {
  if (!entity) {
    return false;
  }
  return isCredentialEntity(entity) && entity["credentialType"] === CredentialType.REFRESH_TOKEN;
}
function isServerTelemetryEntity(key, entity) {
  const validateKey = key.indexOf(SERVER_TELEM_CONSTANTS.CACHE_KEY) === 0;
  let validateEntity = true;
  if (entity) {
    validateEntity = entity.hasOwnProperty("failedRequests") && entity.hasOwnProperty("errors") && entity.hasOwnProperty("cacheHits");
  }
  return validateKey && validateEntity;
}
function isThrottlingEntity(key, entity) {
  let validateKey = false;
  if (key) {
    validateKey = key.indexOf(ThrottlingConstants.THROTTLING_PREFIX) === 0;
  }
  let validateEntity = true;
  if (entity) {
    validateEntity = entity.hasOwnProperty("throttleTime");
  }
  return validateKey && validateEntity;
}
function generateAppMetadataKey({ environment, clientId }) {
  const appMetaDataKeyArray = [
    APP_METADATA,
    environment,
    clientId
  ];
  return appMetaDataKeyArray.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();
}
function isAppMetadataEntity(key, entity) {
  if (!entity) {
    return false;
  }
  return key.indexOf(APP_METADATA) === 0 && entity.hasOwnProperty("clientId") && entity.hasOwnProperty("environment");
}
function isAuthorityMetadataEntity(key, entity) {
  if (!entity) {
    return false;
  }
  return key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) === 0 && entity.hasOwnProperty("aliases") && entity.hasOwnProperty("preferred_cache") && entity.hasOwnProperty("preferred_network") && entity.hasOwnProperty("canonical_authority") && entity.hasOwnProperty("authorization_endpoint") && entity.hasOwnProperty("token_endpoint") && entity.hasOwnProperty("issuer") && entity.hasOwnProperty("aliasesFromNetwork") && entity.hasOwnProperty("endpointsFromNetwork") && entity.hasOwnProperty("expiresAt") && entity.hasOwnProperty("jwks_uri");
}
function generateAuthorityMetadataExpiresAt() {
  return nowSeconds() + AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS;
}
function updateAuthorityEndpointMetadata(authorityMetadata, updatedValues, fromNetwork) {
  authorityMetadata.authorization_endpoint = updatedValues.authorization_endpoint;
  authorityMetadata.token_endpoint = updatedValues.token_endpoint;
  authorityMetadata.end_session_endpoint = updatedValues.end_session_endpoint;
  authorityMetadata.issuer = updatedValues.issuer;
  authorityMetadata.endpointsFromNetwork = fromNetwork;
  authorityMetadata.jwks_uri = updatedValues.jwks_uri;
}
function updateCloudDiscoveryMetadata(authorityMetadata, updatedValues, fromNetwork) {
  authorityMetadata.aliases = updatedValues.aliases;
  authorityMetadata.preferred_cache = updatedValues.preferred_cache;
  authorityMetadata.preferred_network = updatedValues.preferred_network;
  authorityMetadata.aliasesFromNetwork = fromNetwork;
}
function isAuthorityMetadataExpired(metadata) {
  return metadata.expiresAt <= nowSeconds();
}

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/authority/Authority.mjs
var Authority = class _Authority {
  constructor(authority, networkInterface, cacheManager, authorityOptions, logger, correlationId, performanceClient, managedIdentity) {
    this.canonicalAuthority = authority;
    this._canonicalAuthority.validateAsUri();
    this.networkInterface = networkInterface;
    this.cacheManager = cacheManager;
    this.authorityOptions = authorityOptions;
    this.regionDiscoveryMetadata = {
      region_used: void 0,
      region_source: void 0,
      region_outcome: void 0
    };
    this.logger = logger;
    this.performanceClient = performanceClient;
    this.correlationId = correlationId;
    this.managedIdentity = managedIdentity || false;
    this.regionDiscovery = new RegionDiscovery(networkInterface, this.logger, this.performanceClient, this.correlationId);
  }
  /**
   * Get {@link AuthorityType}
   * @param authorityUri {@link IUri}
   * @private
   */
  getAuthorityType(authorityUri) {
    if (authorityUri.HostNameAndPort.endsWith(Constants.CIAM_AUTH_URL)) {
      return AuthorityType.Ciam;
    }
    const pathSegments = authorityUri.PathSegments;
    if (pathSegments.length) {
      switch (pathSegments[0].toLowerCase()) {
        case Constants.ADFS:
          return AuthorityType.Adfs;
        case Constants.DSTS:
          return AuthorityType.Dsts;
      }
    }
    return AuthorityType.Default;
  }
  // See above for AuthorityType
  get authorityType() {
    return this.getAuthorityType(this.canonicalAuthorityUrlComponents);
  }
  /**
   * ProtocolMode enum representing the way endpoints are constructed.
   */
  get protocolMode() {
    return this.authorityOptions.protocolMode;
  }
  /**
   * Returns authorityOptions which can be used to reinstantiate a new authority instance
   */
  get options() {
    return this.authorityOptions;
  }
  /**
   * A URL that is the authority set by the developer
   */
  get canonicalAuthority() {
    return this._canonicalAuthority.urlString;
  }
  /**
   * Sets canonical authority.
   */
  set canonicalAuthority(url) {
    this._canonicalAuthority = new UrlString(url);
    this._canonicalAuthority.validateAsUri();
    this._canonicalAuthorityUrlComponents = null;
  }
  /**
   * Get authority components.
   */
  get canonicalAuthorityUrlComponents() {
    if (!this._canonicalAuthorityUrlComponents) {
      this._canonicalAuthorityUrlComponents = this._canonicalAuthority.getUrlComponents();
    }
    return this._canonicalAuthorityUrlComponents;
  }
  /**
   * Get hostname and port i.e. login.microsoftonline.com
   */
  get hostnameAndPort() {
    return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase();
  }
  /**
   * Get tenant for authority.
   */
  get tenant() {
    return this.canonicalAuthorityUrlComponents.PathSegments[0];
  }
  /**
   * OAuth /authorize endpoint for requests
   */
  get authorizationEndpoint() {
    if (this.discoveryComplete()) {
      return this.replacePath(this.metadata.authorization_endpoint);
    } else {
      throw createClientAuthError(endpointResolutionError);
    }
  }
  /**
   * OAuth /token endpoint for requests
   */
  get tokenEndpoint() {
    if (this.discoveryComplete()) {
      return this.replacePath(this.metadata.token_endpoint);
    } else {
      throw createClientAuthError(endpointResolutionError);
    }
  }
  get deviceCodeEndpoint() {
    if (this.discoveryComplete()) {
      return this.replacePath(this.metadata.token_endpoint.replace("/token", "/devicecode"));
    } else {
      throw createClientAuthError(endpointResolutionError);
    }
  }
  /**
   * OAuth logout endpoint for requests
   */
  get endSessionEndpoint() {
    if (this.discoveryComplete()) {
      if (!this.metadata.end_session_endpoint) {
        throw createClientAuthError(endSessionEndpointNotSupported);
      }
      return this.replacePath(this.metadata.end_session_endpoint);
    } else {
      throw createClientAuthError(endpointResolutionError);
    }
  }
  /**
   * OAuth issuer for requests
   */
  get selfSignedJwtAudience() {
    if (this.discoveryComplete()) {
      return this.replacePath(this.metadata.issuer);
    } else {
      throw createClientAuthError(endpointResolutionError);
    }
  }
  /**
   * Jwks_uri for token signing keys
   */
  get jwksUri() {
    if (this.discoveryComplete()) {
      return this.replacePath(this.metadata.jwks_uri);
    } else {
      throw createClientAuthError(endpointResolutionError);
    }
  }
  /**
   * Returns a flag indicating that tenant name can be replaced in authority {@link IUri}
   * @param authorityUri {@link IUri}
   * @private
   */
  canReplaceTenant(authorityUri) {
    return authorityUri.PathSegments.length === 1 && !_Authority.reservedTenantDomains.has(authorityUri.PathSegments[0]) && this.getAuthorityType(authorityUri) === AuthorityType.Default && this.protocolMode !== ProtocolMode.OIDC;
  }
  /**
   * Replaces tenant in url path with current tenant. Defaults to common.
   * @param urlString
   */
  replaceTenant(urlString) {
    return urlString.replace(/{tenant}|{tenantid}/g, this.tenant);
  }
  /**
   * Replaces path such as tenant or policy with the current tenant or policy.
   * @param urlString
   */
  replacePath(urlString) {
    let endpoint2 = urlString;
    const cachedAuthorityUrl = new UrlString(this.metadata.canonical_authority);
    const cachedAuthorityUrlComponents = cachedAuthorityUrl.getUrlComponents();
    const cachedAuthorityParts = cachedAuthorityUrlComponents.PathSegments;
    const currentAuthorityParts = this.canonicalAuthorityUrlComponents.PathSegments;
    currentAuthorityParts.forEach((currentPart, index) => {
      let cachedPart = cachedAuthorityParts[index];
      if (index === 0 && this.canReplaceTenant(cachedAuthorityUrlComponents)) {
        const tenantId = new UrlString(this.metadata.authorization_endpoint).getUrlComponents().PathSegments[0];
        if (cachedPart !== tenantId) {
          this.logger.verbose(`Replacing tenant domain name ${cachedPart} with id ${tenantId}`);
          cachedPart = tenantId;
        }
      }
      if (currentPart !== cachedPart) {
        endpoint2 = endpoint2.replace(`/${cachedPart}/`, `/${currentPart}/`);
      }
    });
    return this.replaceTenant(endpoint2);
  }
  /**
   * The default open id configuration endpoint for any canonical authority.
   */
  get defaultOpenIdConfigurationEndpoint() {
    const canonicalAuthorityHost = this.hostnameAndPort;
    if (this.canonicalAuthority.endsWith("v2.0/") || this.authorityType === AuthorityType.Adfs || this.protocolMode === ProtocolMode.OIDC && !this.isAliasOfKnownMicrosoftAuthority(canonicalAuthorityHost)) {
      return `${this.canonicalAuthority}.well-known/openid-configuration`;
    }
    return `${this.canonicalAuthority}v2.0/.well-known/openid-configuration`;
  }
  /**
   * Boolean that returns whether or not tenant discovery has been completed.
   */
  discoveryComplete() {
    return !!this.metadata;
  }
  /**
   * Perform endpoint discovery to discover aliases, preferred_cache, preferred_network
   * and the /authorize, /token and logout endpoints.
   */
  async resolveEndpointsAsync() {
    this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityResolveEndpointsAsync, this.correlationId);
    const metadataEntity = this.getCurrentMetadataEntity();
    const cloudDiscoverySource = await invokeAsync(this.updateCloudDiscoveryMetadata.bind(this), PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata, this.logger, this.performanceClient, this.correlationId)(metadataEntity);
    this.canonicalAuthority = this.canonicalAuthority.replace(this.hostnameAndPort, metadataEntity.preferred_network);
    const endpointSource = await invokeAsync(this.updateEndpointMetadata.bind(this), PerformanceEvents.AuthorityUpdateEndpointMetadata, this.logger, this.performanceClient, this.correlationId)(metadataEntity);
    this.updateCachedMetadata(metadataEntity, cloudDiscoverySource, {
      source: endpointSource
    });
    this.performanceClient?.addFields({
      cloudDiscoverySource,
      authorityEndpointSource: endpointSource
    }, this.correlationId);
  }
  /**
   * Returns metadata entity from cache if it exists, otherwiser returns a new metadata entity built
   * from the configured canonical authority
   * @returns
   */
  getCurrentMetadataEntity() {
    let metadataEntity = this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);
    if (!metadataEntity) {
      metadataEntity = {
        aliases: [],
        preferred_cache: this.hostnameAndPort,
        preferred_network: this.hostnameAndPort,
        canonical_authority: this.canonicalAuthority,
        authorization_endpoint: "",
        token_endpoint: "",
        end_session_endpoint: "",
        issuer: "",
        aliasesFromNetwork: false,
        endpointsFromNetwork: false,
        expiresAt: generateAuthorityMetadataExpiresAt(),
        jwks_uri: ""
      };
    }
    return metadataEntity;
  }
  /**
   * Updates cached metadata based on metadata source and sets the instance's metadata
   * property to the same value
   * @param metadataEntity
   * @param cloudDiscoverySource
   * @param endpointMetadataResult
   */
  updateCachedMetadata(metadataEntity, cloudDiscoverySource, endpointMetadataResult) {
    if (cloudDiscoverySource !== AuthorityMetadataSource.CACHE && endpointMetadataResult?.source !== AuthorityMetadataSource.CACHE) {
      metadataEntity.expiresAt = generateAuthorityMetadataExpiresAt();
      metadataEntity.canonical_authority = this.canonicalAuthority;
    }
    const cacheKey = this.cacheManager.generateAuthorityMetadataCacheKey(metadataEntity.preferred_cache);
    this.cacheManager.setAuthorityMetadata(cacheKey, metadataEntity);
    this.metadata = metadataEntity;
  }
  /**
   * Update AuthorityMetadataEntity with new endpoints and return where the information came from
   * @param metadataEntity
   */
  async updateEndpointMetadata(metadataEntity) {
    this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityUpdateEndpointMetadata, this.correlationId);
    const localMetadata = this.updateEndpointMetadataFromLocalSources(metadataEntity);
    if (localMetadata) {
      if (localMetadata.source === AuthorityMetadataSource.HARDCODED_VALUES) {
        if (this.authorityOptions.azureRegionConfiguration?.azureRegion) {
          if (localMetadata.metadata) {
            const hardcodedMetadata = await invokeAsync(this.updateMetadataWithRegionalInformation.bind(this), PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation, this.logger, this.performanceClient, this.correlationId)(localMetadata.metadata);
            updateAuthorityEndpointMetadata(metadataEntity, hardcodedMetadata, false);
            metadataEntity.canonical_authority = this.canonicalAuthority;
          }
        }
      }
      return localMetadata.source;
    }
    let metadata = await invokeAsync(this.getEndpointMetadataFromNetwork.bind(this), PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork, this.logger, this.performanceClient, this.correlationId)();
    if (metadata) {
      if (this.authorityOptions.azureRegionConfiguration?.azureRegion) {
        metadata = await invokeAsync(this.updateMetadataWithRegionalInformation.bind(this), PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation, this.logger, this.performanceClient, this.correlationId)(metadata);
      }
      updateAuthorityEndpointMetadata(metadataEntity, metadata, true);
      return AuthorityMetadataSource.NETWORK;
    } else {
      throw createClientAuthError(openIdConfigError, this.defaultOpenIdConfigurationEndpoint);
    }
  }
  /**
   * Updates endpoint metadata from local sources and returns where the information was retrieved from and the metadata config
   * response if the source is hardcoded metadata
   * @param metadataEntity
   * @returns
   */
  updateEndpointMetadataFromLocalSources(metadataEntity) {
    this.logger.verbose("Attempting to get endpoint metadata from authority configuration");
    const configMetadata = this.getEndpointMetadataFromConfig();
    if (configMetadata) {
      this.logger.verbose("Found endpoint metadata in authority configuration");
      updateAuthorityEndpointMetadata(metadataEntity, configMetadata, false);
      return {
        source: AuthorityMetadataSource.CONFIG
      };
    }
    this.logger.verbose("Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values.");
    if (this.authorityOptions.skipAuthorityMetadataCache) {
      this.logger.verbose("Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.");
    } else {
      const hardcodedMetadata = this.getEndpointMetadataFromHardcodedValues();
      if (hardcodedMetadata) {
        updateAuthorityEndpointMetadata(metadataEntity, hardcodedMetadata, false);
        return {
          source: AuthorityMetadataSource.HARDCODED_VALUES,
          metadata: hardcodedMetadata
        };
      } else {
        this.logger.verbose("Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.");
      }
    }
    const metadataEntityExpired = isAuthorityMetadataExpired(metadataEntity);
    if (this.isAuthoritySameType(metadataEntity) && metadataEntity.endpointsFromNetwork && !metadataEntityExpired) {
      this.logger.verbose("Found endpoint metadata in the cache.");
      return { source: AuthorityMetadataSource.CACHE };
    } else if (metadataEntityExpired) {
      this.logger.verbose("The metadata entity is expired.");
    }
    return null;
  }
  /**
   * Compares the number of url components after the domain to determine if the cached
   * authority metadata can be used for the requested authority. Protects against same domain different
   * authority such as login.microsoftonline.com/tenant and login.microsoftonline.com/tfp/tenant/policy
   * @param metadataEntity
   */
  isAuthoritySameType(metadataEntity) {
    const cachedAuthorityUrl = new UrlString(metadataEntity.canonical_authority);
    const cachedParts = cachedAuthorityUrl.getUrlComponents().PathSegments;
    return cachedParts.length === this.canonicalAuthorityUrlComponents.PathSegments.length;
  }
  /**
   * Parse authorityMetadata config option
   */
  getEndpointMetadataFromConfig() {
    if (this.authorityOptions.authorityMetadata) {
      try {
        return JSON.parse(this.authorityOptions.authorityMetadata);
      } catch (e) {
        throw createClientConfigurationError(invalidAuthorityMetadata);
      }
    }
    return null;
  }
  /**
   * Gets OAuth endpoints from the given OpenID configuration endpoint.
   *
   * @param hasHardcodedMetadata boolean
   */
  async getEndpointMetadataFromNetwork() {
    this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork, this.correlationId);
    const options = {};
    const openIdConfigurationEndpoint = this.defaultOpenIdConfigurationEndpoint;
    this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${openIdConfigurationEndpoint}`);
    try {
      const response = await this.networkInterface.sendGetRequestAsync(openIdConfigurationEndpoint, options);
      const isValidResponse = isOpenIdConfigResponse(response.body);
      if (isValidResponse) {
        return response.body;
      } else {
        this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration`);
        return null;
      }
    } catch (e) {
      this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: ${e}`);
      return null;
    }
  }
  /**
   * Get OAuth endpoints for common authorities.
   */
  getEndpointMetadataFromHardcodedValues() {
    if (this.hostnameAndPort in EndpointMetadata) {
      return EndpointMetadata[this.hostnameAndPort];
    }
    return null;
  }
  /**
   * Update the retrieved metadata with regional information.
   * User selected Azure region will be used if configured.
   */
  async updateMetadataWithRegionalInformation(metadata) {
    this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation, this.correlationId);
    const userConfiguredAzureRegion = this.authorityOptions.azureRegionConfiguration?.azureRegion;
    if (userConfiguredAzureRegion) {
      if (userConfiguredAzureRegion !== Constants.AZURE_REGION_AUTO_DISCOVER_FLAG) {
        this.regionDiscoveryMetadata.region_outcome = RegionDiscoveryOutcomes.CONFIGURED_NO_AUTO_DETECTION;
        this.regionDiscoveryMetadata.region_used = userConfiguredAzureRegion;
        return _Authority.replaceWithRegionalInformation(metadata, userConfiguredAzureRegion);
      }
      const autodetectedRegionName = await invokeAsync(this.regionDiscovery.detectRegion.bind(this.regionDiscovery), PerformanceEvents.RegionDiscoveryDetectRegion, this.logger, this.performanceClient, this.correlationId)(this.authorityOptions.azureRegionConfiguration?.environmentRegion, this.regionDiscoveryMetadata);
      if (autodetectedRegionName) {
        this.regionDiscoveryMetadata.region_outcome = RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_SUCCESSFUL;
        this.regionDiscoveryMetadata.region_used = autodetectedRegionName;
        return _Authority.replaceWithRegionalInformation(metadata, autodetectedRegionName);
      }
      this.regionDiscoveryMetadata.region_outcome = RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_FAILED;
    }
    return metadata;
  }
  /**
   * Updates the AuthorityMetadataEntity with new aliases, preferred_network and preferred_cache
   * and returns where the information was retrieved from
   * @param metadataEntity
   * @returns AuthorityMetadataSource
   */
  async updateCloudDiscoveryMetadata(metadataEntity) {
    this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata, this.correlationId);
    const localMetadataSource = this.updateCloudDiscoveryMetadataFromLocalSources(metadataEntity);
    if (localMetadataSource) {
      return localMetadataSource;
    }
    const metadata = await invokeAsync(this.getCloudDiscoveryMetadataFromNetwork.bind(this), PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork, this.logger, this.performanceClient, this.correlationId)();
    if (metadata) {
      updateCloudDiscoveryMetadata(metadataEntity, metadata, true);
      return AuthorityMetadataSource.NETWORK;
    }
    throw createClientConfigurationError(untrustedAuthority);
  }
  updateCloudDiscoveryMetadataFromLocalSources(metadataEntity) {
    this.logger.verbose("Attempting to get cloud discovery metadata  from authority configuration");
    this.logger.verbosePii(`Known Authorities: ${this.authorityOptions.knownAuthorities || Constants.NOT_APPLICABLE}`);
    this.logger.verbosePii(`Authority Metadata: ${this.authorityOptions.authorityMetadata || Constants.NOT_APPLICABLE}`);
    this.logger.verbosePii(`Canonical Authority: ${metadataEntity.canonical_authority || Constants.NOT_APPLICABLE}`);
    const metadata = this.getCloudDiscoveryMetadataFromConfig();
    if (metadata) {
      this.logger.verbose("Found cloud discovery metadata in authority configuration");
      updateCloudDiscoveryMetadata(metadataEntity, metadata, false);
      return AuthorityMetadataSource.CONFIG;
    }
    this.logger.verbose("Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values.");
    if (this.options.skipAuthorityMetadataCache) {
      this.logger.verbose("Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.");
    } else {
      const hardcodedMetadata = getCloudDiscoveryMetadataFromHardcodedValues(this.hostnameAndPort);
      if (hardcodedMetadata) {
        this.logger.verbose("Found cloud discovery metadata from hardcoded values.");
        updateCloudDiscoveryMetadata(metadataEntity, hardcodedMetadata, false);
        return AuthorityMetadataSource.HARDCODED_VALUES;
      }
      this.logger.verbose("Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.");
    }
    const metadataEntityExpired = isAuthorityMetadataExpired(metadataEntity);
    if (this.isAuthoritySameType(metadataEntity) && metadataEntity.aliasesFromNetwork && !metadataEntityExpired) {
      this.logger.verbose("Found cloud discovery metadata in the cache.");
      return AuthorityMetadataSource.CACHE;
    } else if (metadataEntityExpired) {
      this.logger.verbose("The metadata entity is expired.");
    }
    return null;
  }
  /**
   * Parse cloudDiscoveryMetadata config or check knownAuthorities
   */
  getCloudDiscoveryMetadataFromConfig() {
    if (this.authorityType === AuthorityType.Ciam) {
      this.logger.verbose("CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host.");
      return _Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);
    }
    if (this.authorityOptions.cloudDiscoveryMetadata) {
      this.logger.verbose("The cloud discovery metadata has been provided as a network response, in the config.");
      try {
        this.logger.verbose("Attempting to parse the cloud discovery metadata.");
        const parsedResponse = JSON.parse(this.authorityOptions.cloudDiscoveryMetadata);
        const metadata = getCloudDiscoveryMetadataFromNetworkResponse(parsedResponse.metadata, this.hostnameAndPort);
        this.logger.verbose("Parsed the cloud discovery metadata.");
        if (metadata) {
          this.logger.verbose("There is returnable metadata attached to the parsed cloud discovery metadata.");
          return metadata;
        } else {
          this.logger.verbose("There is no metadata attached to the parsed cloud discovery metadata.");
        }
      } catch (e) {
        this.logger.verbose("Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error.");
        throw createClientConfigurationError(invalidCloudDiscoveryMetadata);
      }
    }
    if (this.isInKnownAuthorities()) {
      this.logger.verbose("The host is included in knownAuthorities. Creating new cloud discovery metadata from the host.");
      return _Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);
    }
    return null;
  }
  /**
   * Called to get metadata from network if CloudDiscoveryMetadata was not populated by config
   *
   * @param hasHardcodedMetadata boolean
   */
  async getCloudDiscoveryMetadataFromNetwork() {
    this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork, this.correlationId);
    const instanceDiscoveryEndpoint = `${Constants.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`;
    const options = {};
    let match = null;
    try {
      const response = await this.networkInterface.sendGetRequestAsync(instanceDiscoveryEndpoint, options);
      let typedResponseBody;
      let metadata;
      if (isCloudInstanceDiscoveryResponse(response.body)) {
        typedResponseBody = response.body;
        metadata = typedResponseBody.metadata;
        this.logger.verbosePii(`tenant_discovery_endpoint is: ${typedResponseBody.tenant_discovery_endpoint}`);
      } else if (isCloudInstanceDiscoveryErrorResponse(response.body)) {
        this.logger.warning(`A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${response.status}`);
        typedResponseBody = response.body;
        if (typedResponseBody.error === Constants.INVALID_INSTANCE) {
          this.logger.error("The CloudInstanceDiscoveryErrorResponse error is invalid_instance.");
          return null;
        }
        this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error is ${typedResponseBody.error}`);
        this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error description is ${typedResponseBody.error_description}`);
        this.logger.warning("Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []");
        metadata = [];
      } else {
        this.logger.error("AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse");
        return null;
      }
      this.logger.verbose("Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request.");
      match = getCloudDiscoveryMetadataFromNetworkResponse(metadata, this.hostnameAndPort);
    } catch (error) {
      if (error instanceof AuthError) {
        this.logger.error(`There was a network error while attempting to get the cloud discovery instance metadata.
Error: ${error.errorCode}
Error Description: ${error.errorMessage}`);
      } else {
        const typedError = error;
        this.logger.error(`A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.
Error: ${typedError.name}
Error Description: ${typedError.message}`);
      }
      return null;
    }
    if (!match) {
      this.logger.warning("The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request.");
      this.logger.verbose("Creating custom Authority for custom domain scenario.");
      match = _Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);
    }
    return match;
  }
  /**
   * Helper function to determine if this host is included in the knownAuthorities config option
   */
  isInKnownAuthorities() {
    const matches = this.authorityOptions.knownAuthorities.filter((authority) => {
      return authority && UrlString.getDomainFromUrl(authority).toLowerCase() === this.hostnameAndPort;
    });
    return matches.length > 0;
  }
  /**
   * helper function to populate the authority based on azureCloudOptions
   * @param authorityString
   * @param azureCloudOptions
   */
  static generateAuthority(authorityString, azureCloudOptions) {
    let authorityAzureCloudInstance;
    if (azureCloudOptions && azureCloudOptions.azureCloudInstance !== AzureCloudInstance.None) {
      const tenant = azureCloudOptions.tenant ? azureCloudOptions.tenant : Constants.DEFAULT_COMMON_TENANT;
      authorityAzureCloudInstance = `${azureCloudOptions.azureCloudInstance}/${tenant}/`;
    }
    return authorityAzureCloudInstance ? authorityAzureCloudInstance : authorityString;
  }
  /**
   * Creates cloud discovery metadata object from a given host
   * @param host
   */
  static createCloudDiscoveryMetadataFromHost(host) {
    return {
      preferred_network: host,
      preferred_cache: host,
      aliases: [host]
    };
  }
  /**
   * helper function to generate environment from authority object
   */
  getPreferredCache() {
    if (this.managedIdentity) {
      return Constants.DEFAULT_AUTHORITY_HOST;
    } else if (this.discoveryComplete()) {
      return this.metadata.preferred_cache;
    } else {
      throw createClientAuthError(endpointResolutionError);
    }
  }
  /**
   * Returns whether or not the provided host is an alias of this authority instance
   * @param host
   */
  isAlias(host) {
    return this.metadata.aliases.indexOf(host) > -1;
  }
  /**
   * Returns whether or not the provided host is an alias of a known Microsoft authority for purposes of endpoint discovery
   * @param host
   */
  isAliasOfKnownMicrosoftAuthority(host) {
    return InstanceDiscoveryMetadataAliases.has(host);
  }
  /**
   * Checks whether the provided host is that of a public cloud authority
   *
   * @param authority string
   * @returns bool
   */
  static isPublicCloudAuthority(host) {
    return Constants.KNOWN_PUBLIC_CLOUDS.indexOf(host) >= 0;
  }
  /**
   * Rebuild the authority string with the region
   *
   * @param host string
   * @param region string
   */
  static buildRegionalAuthorityString(host, region, queryString) {
    const authorityUrlInstance = new UrlString(host);
    authorityUrlInstance.validateAsUri();
    const authorityUrlParts = authorityUrlInstance.getUrlComponents();
    let hostNameAndPort = `${region}.${authorityUrlParts.HostNameAndPort}`;
    if (this.isPublicCloudAuthority(authorityUrlParts.HostNameAndPort)) {
      hostNameAndPort = `${region}.${Constants.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`;
    }
    const url = UrlString.constructAuthorityUriFromObject({
      ...authorityUrlInstance.getUrlComponents(),
      HostNameAndPort: hostNameAndPort
    }).urlString;
    if (queryString)
      return `${url}?${queryString}`;
    return url;
  }
  /**
   * Replace the endpoints in the metadata object with their regional equivalents.
   *
   * @param metadata OpenIdConfigResponse
   * @param azureRegion string
   */
  static replaceWithRegionalInformation(metadata, azureRegion) {
    const regionalMetadata = { ...metadata };
    regionalMetadata.authorization_endpoint = _Authority.buildRegionalAuthorityString(regionalMetadata.authorization_endpoint, azureRegion);
    regionalMetadata.token_endpoint = _Authority.buildRegionalAuthorityString(regionalMetadata.token_endpoint, azureRegion);
    if (regionalMetadata.end_session_endpoint) {
      regionalMetadata.end_session_endpoint = _Authority.buildRegionalAuthorityString(regionalMetadata.end_session_endpoint, azureRegion);
    }
    return regionalMetadata;
  }
  /**
   * Transform CIAM_AUTHORIY as per the below rules:
   * If no path segments found and it is a CIAM authority (hostname ends with .ciamlogin.com), then transform it
   *
   * NOTE: The transformation path should go away once STS supports CIAM with the format: `tenantIdorDomain.ciamlogin.com`
   * `ciamlogin.com` can also change in the future and we should accommodate the same
   *
   * @param authority
   */
  static transformCIAMAuthority(authority) {
    let ciamAuthority = authority;
    const authorityUrl = new UrlString(authority);
    const authorityUrlComponents = authorityUrl.getUrlComponents();
    if (authorityUrlComponents.PathSegments.length === 0 && authorityUrlComponents.HostNameAndPort.endsWith(Constants.CIAM_AUTH_URL)) {
      const tenantIdOrDomain = authorityUrlComponents.HostNameAndPort.split(".")[0];
      ciamAuthority = `${ciamAuthority}${tenantIdOrDomain}${Constants.AAD_TENANT_DOMAIN_SUFFIX}`;
    }
    return ciamAuthority;
  }
};
Authority.reservedTenantDomains = /* @__PURE__ */ new Set([
  "{tenant}",
  "{tenantid}",
  AADAuthorityConstants.COMMON,
  AADAuthorityConstants.CONSUMERS,
  AADAuthorityConstants.ORGANIZATIONS
]);
function getTenantFromAuthorityString(authority) {
  const authorityUrl = new UrlString(authority);
  const authorityUrlComponents = authorityUrl.getUrlComponents();
  const tenantId = authorityUrlComponents.PathSegments.slice(-1)[0]?.toLowerCase();
  switch (tenantId) {
    case AADAuthorityConstants.COMMON:
    case AADAuthorityConstants.ORGANIZATIONS:
    case AADAuthorityConstants.CONSUMERS:
      return void 0;
    default:
      return tenantId;
  }
}
function formatAuthorityUri(authorityUri) {
  return authorityUri.endsWith(Constants.FORWARD_SLASH) ? authorityUri : `${authorityUri}${Constants.FORWARD_SLASH}`;
}
function buildStaticAuthorityOptions(authOptions) {
  const rawCloudDiscoveryMetadata = authOptions.cloudDiscoveryMetadata;
  let cloudDiscoveryMetadata = void 0;
  if (rawCloudDiscoveryMetadata) {
    try {
      cloudDiscoveryMetadata = JSON.parse(rawCloudDiscoveryMetadata);
    } catch (e) {
      throw createClientConfigurationError(invalidCloudDiscoveryMetadata);
    }
  }
  return {
    canonicalAuthority: authOptions.authority ? formatAuthorityUri(authOptions.authority) : void 0,
    knownAuthorities: authOptions.knownAuthorities,
    cloudDiscoveryMetadata
  };
}

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/authority/AuthorityFactory.mjs
async function createDiscoveredInstance(authorityUri, networkClient, cacheManager, authorityOptions, logger, correlationId, performanceClient) {
  performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance, correlationId);
  const authorityUriFinal = Authority.transformCIAMAuthority(formatAuthorityUri(authorityUri));
  const acquireTokenAuthority = new Authority(authorityUriFinal, networkClient, cacheManager, authorityOptions, logger, correlationId, performanceClient);
  try {
    await invokeAsync(acquireTokenAuthority.resolveEndpointsAsync.bind(acquireTokenAuthority), PerformanceEvents.AuthorityResolveEndpointsAsync, logger, performanceClient, correlationId)();
    return acquireTokenAuthority;
  } catch (e) {
    throw createClientAuthError(endpointResolutionError);
  }
}

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/error/ServerError.mjs
var ServerError = class _ServerError extends AuthError {
  constructor(errorCode, errorMessage, subError, errorNo, status) {
    super(errorCode, errorMessage, subError);
    this.name = "ServerError";
    this.errorNo = errorNo;
    this.status = status;
    Object.setPrototypeOf(this, _ServerError.prototype);
  }
};

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/network/RequestThumbprint.mjs
function getRequestThumbprint(clientId, request2, homeAccountId) {
  return {
    clientId,
    authority: request2.authority,
    scopes: request2.scopes,
    homeAccountIdentifier: homeAccountId,
    claims: request2.claims,
    authenticationScheme: request2.authenticationScheme,
    resourceRequestMethod: request2.resourceRequestMethod,
    resourceRequestUri: request2.resourceRequestUri,
    shrClaims: request2.shrClaims,
    sshKid: request2.sshKid,
    embeddedClientId: request2.embeddedClientId || request2.tokenBodyParameters?.clientId
  };
}

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/network/ThrottlingUtils.mjs
var ThrottlingUtils = class _ThrottlingUtils {
  /**
   * Prepares a RequestThumbprint to be stored as a key.
   * @param thumbprint
   */
  static generateThrottlingStorageKey(thumbprint) {
    return `${ThrottlingConstants.THROTTLING_PREFIX}.${JSON.stringify(thumbprint)}`;
  }
  /**
   * Performs necessary throttling checks before a network request.
   * @param cacheManager
   * @param thumbprint
   */
  static preProcess(cacheManager, thumbprint, correlationId) {
    const key = _ThrottlingUtils.generateThrottlingStorageKey(thumbprint);
    const value = cacheManager.getThrottlingCache(key);
    if (value) {
      if (value.throttleTime < Date.now()) {
        cacheManager.removeItem(key, correlationId);
        return;
      }
      throw new ServerError(value.errorCodes?.join(" ") || Constants.EMPTY_STRING, value.errorMessage, value.subError);
    }
  }
  /**
   * Performs necessary throttling checks after a network request.
   * @param cacheManager
   * @param thumbprint
   * @param response
   */
  static postProcess(cacheManager, thumbprint, response, correlationId) {
    if (_ThrottlingUtils.checkResponseStatus(response) || _ThrottlingUtils.checkResponseForRetryAfter(response)) {
      const thumbprintValue = {
        throttleTime: _ThrottlingUtils.calculateThrottleTime(parseInt(response.headers[HeaderNames.RETRY_AFTER])),
        error: response.body.error,
        errorCodes: response.body.error_codes,
        errorMessage: response.body.error_description,
        subError: response.body.suberror
      };
      cacheManager.setThrottlingCache(_ThrottlingUtils.generateThrottlingStorageKey(thumbprint), thumbprintValue, correlationId);
    }
  }
  /**
   * Checks a NetworkResponse object's status codes against 429 or 5xx
   * @param response
   */
  static checkResponseStatus(response) {
    return response.status === 429 || response.status >= 500 && response.status < 600;
  }
  /**
   * Checks a NetworkResponse object's RetryAfter header
   * @param response
   */
  static checkResponseForRetryAfter(response) {
    if (response.headers) {
      return response.headers.hasOwnProperty(HeaderNames.RETRY_AFTER) && (response.status < 200 || response.status >= 300);
    }
    return false;
  }
  /**
   * Calculates the Unix-time value for a throttle to expire given throttleTime in seconds.
   * @param throttleTime
   */
  static calculateThrottleTime(throttleTime) {
    const time = throttleTime <= 0 ? 0 : throttleTime;
    const currentSeconds = Date.now() / 1e3;
    return Math.floor(Math.min(currentSeconds + (time || ThrottlingConstants.DEFAULT_THROTTLE_TIME_SECONDS), currentSeconds + ThrottlingConstants.DEFAULT_MAX_THROTTLE_TIME_SECONDS) * 1e3);
  }
  static removeThrottle(cacheManager, clientId, request2, homeAccountIdentifier) {
    const thumbprint = getRequestThumbprint(clientId, request2, homeAccountIdentifier);
    const key = this.generateThrottlingStorageKey(thumbprint);
    cacheManager.removeItem(key, request2.correlationId);
  }
};

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/error/NetworkError.mjs
var NetworkError = class _NetworkError extends AuthError {
  constructor(error, httpStatus, responseHeaders) {
    super(error.errorCode, error.errorMessage, error.subError);
    Object.setPrototypeOf(this, _NetworkError.prototype);
    this.name = "NetworkError";
    this.error = error;
    this.httpStatus = httpStatus;
    this.responseHeaders = responseHeaders;
  }
};

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/client/BaseClient.mjs
var BaseClient = class {
  constructor(configuration, performanceClient) {
    this.config = buildClientConfiguration(configuration);
    this.logger = new Logger(this.config.loggerOptions, name, version);
    this.cryptoUtils = this.config.cryptoInterface;
    this.cacheManager = this.config.storageInterface;
    this.networkClient = this.config.networkInterface;
    this.serverTelemetryManager = this.config.serverTelemetryManager;
    this.authority = this.config.authOptions.authority;
    this.performanceClient = performanceClient;
  }
  /**
   * Creates default headers for requests to token endpoint
   */
  createTokenRequestHeaders(ccsCred) {
    const headers = {};
    headers[HeaderNames.CONTENT_TYPE] = Constants.URL_FORM_CONTENT_TYPE;
    if (!this.config.systemOptions.preventCorsPreflight && ccsCred) {
      switch (ccsCred.type) {
        case CcsCredentialType.HOME_ACCOUNT_ID:
          try {
            const clientInfo = buildClientInfoFromHomeAccountId(ccsCred.credential);
            headers[HeaderNames.CCS_HEADER] = `Oid:${clientInfo.uid}@${clientInfo.utid}`;
          } catch (e) {
            this.logger.verbose("Could not parse home account ID for CCS Header: " + e);
          }
          break;
        case CcsCredentialType.UPN:
          headers[HeaderNames.CCS_HEADER] = `UPN: ${ccsCred.credential}`;
          break;
      }
    }
    return headers;
  }
  /**
   * Http post to token endpoint
   * @param tokenEndpoint
   * @param queryString
   * @param headers
   * @param thumbprint
   */
  async executePostToTokenEndpoint(tokenEndpoint, queryString, headers, thumbprint, correlationId, queuedEvent) {
    if (queuedEvent) {
      this.performanceClient?.addQueueMeasurement(queuedEvent, correlationId);
    }
    const response = await this.sendPostRequest(thumbprint, tokenEndpoint, { body: queryString, headers }, correlationId);
    if (this.config.serverTelemetryManager && response.status < 500 && response.status !== 429) {
      this.config.serverTelemetryManager.clearTelemetryCache();
    }
    return response;
  }
  /**
   * Wraps sendPostRequestAsync with necessary preflight and postflight logic
   * @param thumbprint - Request thumbprint for throttling
   * @param tokenEndpoint - Endpoint to make the POST to
   * @param options - Body and Headers to include on the POST request
   * @param correlationId - CorrelationId for telemetry
   */
  async sendPostRequest(thumbprint, tokenEndpoint, options, correlationId) {
    ThrottlingUtils.preProcess(this.cacheManager, thumbprint, correlationId);
    let response;
    try {
      response = await invokeAsync(this.networkClient.sendPostRequestAsync.bind(this.networkClient), PerformanceEvents.NetworkClientSendPostRequestAsync, this.logger, this.performanceClient, correlationId)(tokenEndpoint, options);
      const responseHeaders = response.headers || {};
      this.performanceClient?.addFields({
        refreshTokenSize: response.body.refresh_token?.length || 0,
        httpVerToken: responseHeaders[HeaderNames.X_MS_HTTP_VERSION] || "",
        requestId: responseHeaders[HeaderNames.X_MS_REQUEST_ID] || ""
      }, correlationId);
    } catch (e) {
      if (e instanceof NetworkError) {
        const responseHeaders = e.responseHeaders;
        if (responseHeaders) {
          this.performanceClient?.addFields({
            httpVerToken: responseHeaders[HeaderNames.X_MS_HTTP_VERSION] || "",
            requestId: responseHeaders[HeaderNames.X_MS_REQUEST_ID] || "",
            contentTypeHeader: responseHeaders[HeaderNames.CONTENT_TYPE] || void 0,
            contentLengthHeader: responseHeaders[HeaderNames.CONTENT_LENGTH] || void 0,
            httpStatus: e.httpStatus
          }, correlationId);
        }
        throw e.error;
      }
      if (e instanceof AuthError) {
        throw e;
      } else {
        throw createClientAuthError(networkError);
      }
    }
    ThrottlingUtils.postProcess(this.cacheManager, thumbprint, response, correlationId);
    return response;
  }
  /**
   * Updates the authority object of the client. Endpoint discovery must be completed.
   * @param updatedAuthority
   */
  async updateAuthority(cloudInstanceHostname, correlationId) {
    this.performanceClient?.addQueueMeasurement(PerformanceEvents.UpdateTokenEndpointAuthority, correlationId);
    const cloudInstanceAuthorityUri = `https://${cloudInstanceHostname}/${this.authority.tenant}/`;
    const cloudInstanceAuthority = await createDiscoveredInstance(cloudInstanceAuthorityUri, this.networkClient, this.cacheManager, this.authority.options, this.logger, correlationId, this.performanceClient);
    this.authority = cloudInstanceAuthority;
  }
  /**
   * Creates query string for the /token request
   * @param request
   */
  createTokenQueryParameters(request2) {
    const parameters = /* @__PURE__ */ new Map();
    if (request2.embeddedClientId) {
      addBrokerParameters(parameters, this.config.authOptions.clientId, this.config.authOptions.redirectUri);
    }
    if (request2.tokenQueryParameters) {
      addExtraQueryParameters(parameters, request2.tokenQueryParameters);
    }
    addCorrelationId(parameters, request2.correlationId);
    instrumentBrokerParams(parameters, request2.correlationId, this.performanceClient);
    return mapToQueryString(parameters);
  }
};

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/account/TokenClaims.mjs
function getTenantIdFromIdTokenClaims(idTokenClaims) {
  if (idTokenClaims) {
    const tenantId = idTokenClaims.tid || idTokenClaims.tfp || idTokenClaims.acr;
    return tenantId || null;
  }
  return null;
}

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs
var AccountEntity = class _AccountEntity {
  /**
   * Returns the AccountInfo interface for this account.
   */
  getAccountInfo() {
    return {
      homeAccountId: this.homeAccountId,
      environment: this.environment,
      tenantId: this.realm,
      username: this.username,
      localAccountId: this.localAccountId,
      loginHint: this.loginHint,
      name: this.name,
      nativeAccountId: this.nativeAccountId,
      authorityType: this.authorityType,
      // Deserialize tenant profiles array into a Map
      tenantProfiles: new Map((this.tenantProfiles || []).map((tenantProfile) => {
        return [tenantProfile.tenantId, tenantProfile];
      })),
      dataBoundary: this.dataBoundary
    };
  }
  /**
   * Returns true if the account entity is in single tenant format (outdated), false otherwise
   */
  isSingleTenant() {
    return !this.tenantProfiles;
  }
  /**
   * Build Account cache from IdToken, clientInfo and authority/policy. Associated with AAD.
   * @param accountDetails
   */
  static createAccount(accountDetails, authority, base64Decode) {
    const account = new _AccountEntity();
    if (authority.authorityType === AuthorityType.Adfs) {
      account.authorityType = CacheAccountType.ADFS_ACCOUNT_TYPE;
    } else if (authority.protocolMode === ProtocolMode.OIDC) {
      account.authorityType = CacheAccountType.GENERIC_ACCOUNT_TYPE;
    } else {
      account.authorityType = CacheAccountType.MSSTS_ACCOUNT_TYPE;
    }
    let clientInfo;
    if (accountDetails.clientInfo && base64Decode) {
      clientInfo = buildClientInfo(accountDetails.clientInfo, base64Decode);
      if (clientInfo.xms_tdbr) {
        account.dataBoundary = clientInfo.xms_tdbr === "EU" ? "EU" : "None";
      }
    }
    account.clientInfo = accountDetails.clientInfo;
    account.homeAccountId = accountDetails.homeAccountId;
    account.nativeAccountId = accountDetails.nativeAccountId;
    const env = accountDetails.environment || authority && authority.getPreferredCache();
    if (!env) {
      throw createClientAuthError(invalidCacheEnvironment);
    }
    account.environment = env;
    account.realm = clientInfo?.utid || getTenantIdFromIdTokenClaims(accountDetails.idTokenClaims) || "";
    account.localAccountId = clientInfo?.uid || accountDetails.idTokenClaims?.oid || accountDetails.idTokenClaims?.sub || "";
    const preferredUsername = accountDetails.idTokenClaims?.preferred_username || accountDetails.idTokenClaims?.upn;
    const email = accountDetails.idTokenClaims?.emails ? accountDetails.idTokenClaims.emails[0] : null;
    account.username = preferredUsername || email || "";
    account.loginHint = accountDetails.idTokenClaims?.login_hint;
    account.name = accountDetails.idTokenClaims?.name || "";
    account.cloudGraphHostName = accountDetails.cloudGraphHostName;
    account.msGraphHost = accountDetails.msGraphHost;
    if (accountDetails.tenantProfiles) {
      account.tenantProfiles = accountDetails.tenantProfiles;
    } else {
      const tenantProfile = buildTenantProfile(accountDetails.homeAccountId, account.localAccountId, account.realm, accountDetails.idTokenClaims);
      account.tenantProfiles = [tenantProfile];
    }
    return account;
  }
  /**
   * Creates an AccountEntity object from AccountInfo
   * @param accountInfo
   * @param cloudGraphHostName
   * @param msGraphHost
   * @returns
   */
  static createFromAccountInfo(accountInfo, cloudGraphHostName, msGraphHost) {
    const account = new _AccountEntity();
    account.authorityType = accountInfo.authorityType || CacheAccountType.GENERIC_ACCOUNT_TYPE;
    account.homeAccountId = accountInfo.homeAccountId;
    account.localAccountId = accountInfo.localAccountId;
    account.nativeAccountId = accountInfo.nativeAccountId;
    account.realm = accountInfo.tenantId;
    account.environment = accountInfo.environment;
    account.username = accountInfo.username;
    account.name = accountInfo.name;
    account.loginHint = accountInfo.loginHint;
    account.cloudGraphHostName = cloudGraphHostName;
    account.msGraphHost = msGraphHost;
    account.tenantProfiles = Array.from(accountInfo.tenantProfiles?.values() || []);
    account.dataBoundary = accountInfo.dataBoundary;
    return account;
  }
  /**
   * Generate HomeAccountId from server response
   * @param serverClientInfo
   * @param authType
   */
  static generateHomeAccountId(serverClientInfo, authType, logger, cryptoObj, idTokenClaims) {
    if (!(authType === AuthorityType.Adfs || authType === AuthorityType.Dsts)) {
      if (serverClientInfo) {
        try {
          const clientInfo = buildClientInfo(serverClientInfo, cryptoObj.base64Decode);
          if (clientInfo.uid && clientInfo.utid) {
            return `${clientInfo.uid}.${clientInfo.utid}`;
          }
        } catch (e) {
        }
      }
      logger.warning("No client info in response");
    }
    return idTokenClaims?.sub || "";
  }
  /**
   * Validates an entity: checks for all expected params
   * @param entity
   */
  static isAccountEntity(entity) {
    if (!entity) {
      return false;
    }
    return entity.hasOwnProperty("homeAccountId") && entity.hasOwnProperty("environment") && entity.hasOwnProperty("realm") && entity.hasOwnProperty("localAccountId") && entity.hasOwnProperty("username") && entity.hasOwnProperty("authorityType");
  }
  /**
   * Helper function to determine whether 2 accountInfo objects represent the same account
   * @param accountA
   * @param accountB
   * @param compareClaims - If set to true idTokenClaims will also be compared to determine account equality
   */
  static accountInfoIsEqual(accountA, accountB, compareClaims) {
    if (!accountA || !accountB) {
      return false;
    }
    let claimsMatch = true;
    if (compareClaims) {
      const accountAClaims = accountA.idTokenClaims || {};
      const accountBClaims = accountB.idTokenClaims || {};
      claimsMatch = accountAClaims.iat === accountBClaims.iat && accountAClaims.nonce === accountBClaims.nonce;
    }
    return accountA.homeAccountId === accountB.homeAccountId && accountA.localAccountId === accountB.localAccountId && accountA.username === accountB.username && accountA.tenantId === accountB.tenantId && accountA.loginHint === accountB.loginHint && accountA.environment === accountB.environment && accountA.nativeAccountId === accountB.nativeAccountId && claimsMatch;
  }
};

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthErrorCodes.mjs
var noTokensFound = "no_tokens_found";
var nativeAccountUnavailable = "native_account_unavailable";
var refreshTokenExpired = "refresh_token_expired";
var uxNotAllowed = "ux_not_allowed";
var interactionRequired = "interaction_required";
var consentRequired = "consent_required";
var loginRequired = "login_required";
var badToken = "bad_token";

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs
var InteractionRequiredServerErrorMessage = [
  interactionRequired,
  consentRequired,
  loginRequired,
  badToken,
  uxNotAllowed
];
var InteractionRequiredAuthSubErrorMessage = [
  "message_only",
  "additional_action",
  "basic_action",
  "user_password_expired",
  "consent_required",
  "bad_token"
];
var InteractionRequiredAuthErrorMessages = {
  [noTokensFound]: "No refresh token found in the cache. Please sign-in.",
  [nativeAccountUnavailable]: "The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.",
  [refreshTokenExpired]: "Refresh token has expired.",
  [badToken]: "Identity provider returned bad_token due to an expired or invalid refresh token. Please invoke an interactive API to resolve.",
  [uxNotAllowed]: "`canShowUI` flag in Edge was set to false. User interaction required on web page. Please invoke an interactive API to resolve."
};
var InteractionRequiredAuthErrorMessage = {
  noTokensFoundError: {
    code: noTokensFound,
    desc: InteractionRequiredAuthErrorMessages[noTokensFound]
  },
  native_account_unavailable: {
    code: nativeAccountUnavailable,
    desc: InteractionRequiredAuthErrorMessages[nativeAccountUnavailable]
  },
  bad_token: {
    code: badToken,
    desc: InteractionRequiredAuthErrorMessages[badToken]
  }
};
var InteractionRequiredAuthError = class _InteractionRequiredAuthError extends AuthError {
  constructor(errorCode, errorMessage, subError, timestamp, traceId, correlationId, claims, errorNo) {
    super(errorCode, errorMessage, subError);
    Object.setPrototypeOf(this, _InteractionRequiredAuthError.prototype);
    this.timestamp = timestamp || Constants.EMPTY_STRING;
    this.traceId = traceId || Constants.EMPTY_STRING;
    this.correlationId = correlationId || Constants.EMPTY_STRING;
    this.claims = claims || Constants.EMPTY_STRING;
    this.name = "InteractionRequiredAuthError";
    this.errorNo = errorNo;
  }
};
function isInteractionRequiredError(errorCode, errorString, subError) {
  const isInteractionRequiredErrorCode = !!errorCode && InteractionRequiredServerErrorMessage.indexOf(errorCode) > -1;
  const isInteractionRequiredSubError = !!subError && InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;
  const isInteractionRequiredErrorDesc = !!errorString && InteractionRequiredServerErrorMessage.some((irErrorCode) => {
    return errorString.indexOf(irErrorCode) > -1;
  });
  return isInteractionRequiredErrorCode || isInteractionRequiredErrorDesc || isInteractionRequiredSubError;
}
function createInteractionRequiredAuthError(errorCode) {
  return new InteractionRequiredAuthError(errorCode, InteractionRequiredAuthErrorMessages[errorCode]);
}

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/utils/ProtocolUtils.mjs
var ProtocolUtils = class _ProtocolUtils {
  /**
   * Appends user state with random guid, or returns random guid.
   * @param userState
   * @param randomGuid
   */
  static setRequestState(cryptoObj, userState, meta) {
    const libraryState = _ProtocolUtils.generateLibraryState(cryptoObj, meta);
    return userState ? `${libraryState}${Constants.RESOURCE_DELIM}${userState}` : libraryState;
  }
  /**
   * Generates the state value used by the common library.
   * @param randomGuid
   * @param cryptoObj
   */
  static generateLibraryState(cryptoObj, meta) {
    if (!cryptoObj) {
      throw createClientAuthError(noCryptoObject);
    }
    const stateObj = {
      id: cryptoObj.createNewGuid()
    };
    if (meta) {
      stateObj.meta = meta;
    }
    const stateString = JSON.stringify(stateObj);
    return cryptoObj.base64Encode(stateString);
  }
  /**
   * Parses the state into the RequestStateObject, which contains the LibraryState info and the state passed by the user.
   * @param state
   * @param cryptoObj
   */
  static parseRequestState(cryptoObj, state) {
    if (!cryptoObj) {
      throw createClientAuthError(noCryptoObject);
    }
    if (!state) {
      throw createClientAuthError(invalidState);
    }
    try {
      const splitState = state.split(Constants.RESOURCE_DELIM);
      const libraryState = splitState[0];
      const userState = splitState.length > 1 ? splitState.slice(1).join(Constants.RESOURCE_DELIM) : Constants.EMPTY_STRING;
      const libraryStateString = cryptoObj.base64Decode(libraryState);
      const libraryStateObj = JSON.parse(libraryStateString);
      return {
        userRequestState: userState || Constants.EMPTY_STRING,
        libraryState: libraryStateObj
      };
    } catch (e) {
      throw createClientAuthError(invalidState);
    }
  }
};

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs
var KeyLocation = {
  SW: "sw"
};
var PopTokenGenerator = class {
  constructor(cryptoUtils, performanceClient) {
    this.cryptoUtils = cryptoUtils;
    this.performanceClient = performanceClient;
  }
  /**
   * Generates the req_cnf validated at the RP in the POP protocol for SHR parameters
   * and returns an object containing the keyid, the full req_cnf string and the req_cnf string hash
   * @param request
   * @returns
   */
  async generateCnf(request2, logger) {
    this.performanceClient?.addQueueMeasurement(PerformanceEvents.PopTokenGenerateCnf, request2.correlationId);
    const reqCnf = await invokeAsync(this.generateKid.bind(this), PerformanceEvents.PopTokenGenerateCnf, logger, this.performanceClient, request2.correlationId)(request2);
    const reqCnfString = this.cryptoUtils.base64UrlEncode(JSON.stringify(reqCnf));
    return {
      kid: reqCnf.kid,
      reqCnfString
    };
  }
  /**
   * Generates key_id for a SHR token request
   * @param request
   * @returns
   */
  async generateKid(request2) {
    this.performanceClient?.addQueueMeasurement(PerformanceEvents.PopTokenGenerateKid, request2.correlationId);
    const kidThumbprint = await this.cryptoUtils.getPublicKeyThumbprint(request2);
    return {
      kid: kidThumbprint,
      xms_ksl: KeyLocation.SW
    };
  }
  /**
   * Signs the POP access_token with the local generated key-pair
   * @param accessToken
   * @param request
   * @returns
   */
  async signPopToken(accessToken, keyId, request2) {
    return this.signPayload(accessToken, keyId, request2);
  }
  /**
   * Utility function to generate the signed JWT for an access_token
   * @param payload
   * @param kid
   * @param request
   * @param claims
   * @returns
   */
  async signPayload(payload, keyId, request2, claims) {
    const { resourceRequestMethod, resourceRequestUri, shrClaims, shrNonce, shrOptions } = request2;
    const resourceUrlString = resourceRequestUri ? new UrlString(resourceRequestUri) : void 0;
    const resourceUrlComponents = resourceUrlString?.getUrlComponents();
    return this.cryptoUtils.signJwt({
      at: payload,
      ts: nowSeconds(),
      m: resourceRequestMethod?.toUpperCase(),
      u: resourceUrlComponents?.HostNameAndPort,
      nonce: shrNonce || this.cryptoUtils.createNewGuid(),
      p: resourceUrlComponents?.AbsolutePath,
      q: resourceUrlComponents?.QueryString ? [[], resourceUrlComponents.QueryString] : void 0,
      client_claims: shrClaims || void 0,
      ...claims
    }, keyId, shrOptions, request2.correlationId);
  }
};

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/cache/persistence/TokenCacheContext.mjs
var TokenCacheContext = class {
  constructor(tokenCache, hasChanged) {
    this.cache = tokenCache;
    this.hasChanged = hasChanged;
  }
  /**
   * boolean which indicates the changes in cache
   */
  get cacheHasChanged() {
    return this.hasChanged;
  }
  /**
   * function to retrieve the token cache
   */
  get tokenCache() {
    return this.cache;
  }
};

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs
var ResponseHandler = class _ResponseHandler {
  constructor(clientId, cacheStorage, cryptoObj, logger, serializableCache, persistencePlugin, performanceClient) {
    this.clientId = clientId;
    this.cacheStorage = cacheStorage;
    this.cryptoObj = cryptoObj;
    this.logger = logger;
    this.serializableCache = serializableCache;
    this.persistencePlugin = persistencePlugin;
    this.performanceClient = performanceClient;
  }
  /**
   * Function which validates server authorization token response.
   * @param serverResponse
   * @param refreshAccessToken
   */
  validateTokenResponse(serverResponse, refreshAccessToken) {
    if (serverResponse.error || serverResponse.error_description || serverResponse.suberror) {
      const errString = `Error(s): ${serverResponse.error_codes || Constants.NOT_AVAILABLE} - Timestamp: ${serverResponse.timestamp || Constants.NOT_AVAILABLE} - Description: ${serverResponse.error_description || Constants.NOT_AVAILABLE} - Correlation ID: ${serverResponse.correlation_id || Constants.NOT_AVAILABLE} - Trace ID: ${serverResponse.trace_id || Constants.NOT_AVAILABLE}`;
      const serverErrorNo = serverResponse.error_codes?.length ? serverResponse.error_codes[0] : void 0;
      const serverError = new ServerError(serverResponse.error, errString, serverResponse.suberror, serverErrorNo, serverResponse.status);
      if (refreshAccessToken && serverResponse.status && serverResponse.status >= HttpStatus.SERVER_ERROR_RANGE_START && serverResponse.status <= HttpStatus.SERVER_ERROR_RANGE_END) {
        this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.
${serverError}`);
        return;
      } else if (refreshAccessToken && serverResponse.status && serverResponse.status >= HttpStatus.CLIENT_ERROR_RANGE_START && serverResponse.status <= HttpStatus.CLIENT_ERROR_RANGE_END) {
        this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.
${serverError}`);
        return;
      }
      if (isInteractionRequiredError(serverResponse.error, serverResponse.error_description, serverResponse.suberror)) {
        throw new InteractionRequiredAuthError(serverResponse.error, serverResponse.error_description, serverResponse.suberror, serverResponse.timestamp || Constants.EMPTY_STRING, serverResponse.trace_id || Constants.EMPTY_STRING, serverResponse.correlation_id || Constants.EMPTY_STRING, serverResponse.claims || Constants.EMPTY_STRING, serverErrorNo);
      }
      throw serverError;
    }
  }
  /**
   * Returns a constructed token response based on given string. Also manages the cache updates and cleanups.
   * @param serverTokenResponse
   * @param authority
   */
  async handleServerTokenResponse(serverTokenResponse, authority, reqTimestamp, request2, authCodePayload, userAssertionHash, handlingRefreshTokenResponse, forceCacheRefreshTokenResponse, serverRequestId) {
    this.performanceClient?.addQueueMeasurement(PerformanceEvents.HandleServerTokenResponse, serverTokenResponse.correlation_id);
    let idTokenClaims;
    if (serverTokenResponse.id_token) {
      idTokenClaims = extractTokenClaims(serverTokenResponse.id_token || Constants.EMPTY_STRING, this.cryptoObj.base64Decode);
      if (authCodePayload && authCodePayload.nonce) {
        if (idTokenClaims.nonce !== authCodePayload.nonce) {
          throw createClientAuthError(nonceMismatch);
        }
      }
      if (request2.maxAge || request2.maxAge === 0) {
        const authTime = idTokenClaims.auth_time;
        if (!authTime) {
          throw createClientAuthError(authTimeNotFound);
        }
        checkMaxAge(authTime, request2.maxAge);
      }
    }
    this.homeAccountIdentifier = AccountEntity.generateHomeAccountId(serverTokenResponse.client_info || Constants.EMPTY_STRING, authority.authorityType, this.logger, this.cryptoObj, idTokenClaims);
    let requestStateObj;
    if (!!authCodePayload && !!authCodePayload.state) {
      requestStateObj = ProtocolUtils.parseRequestState(this.cryptoObj, authCodePayload.state);
    }
    serverTokenResponse.key_id = serverTokenResponse.key_id || request2.sshKid || void 0;
    const cacheRecord = this.generateCacheRecord(serverTokenResponse, authority, reqTimestamp, request2, idTokenClaims, userAssertionHash, authCodePayload);
    let cacheContext;
    try {
      if (this.persistencePlugin && this.serializableCache) {
        this.logger.verbose("Persistence enabled, calling beforeCacheAccess");
        cacheContext = new TokenCacheContext(this.serializableCache, true);
        await this.persistencePlugin.beforeCacheAccess(cacheContext);
      }
      if (handlingRefreshTokenResponse && !forceCacheRefreshTokenResponse && cacheRecord.account) {
        const key = this.cacheStorage.generateAccountKey(cacheRecord.account.getAccountInfo());
        const account = this.cacheStorage.getAccount(key, request2.correlationId);
        if (!account) {
          this.logger.warning("Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache");
          return await _ResponseHandler.generateAuthenticationResult(this.cryptoObj, authority, cacheRecord, false, request2, idTokenClaims, requestStateObj, void 0, serverRequestId);
        }
      }
      await this.cacheStorage.saveCacheRecord(cacheRecord, request2.correlationId, request2.storeInCache);
    } finally {
      if (this.persistencePlugin && this.serializableCache && cacheContext) {
        this.logger.verbose("Persistence enabled, calling afterCacheAccess");
        await this.persistencePlugin.afterCacheAccess(cacheContext);
      }
    }
    return _ResponseHandler.generateAuthenticationResult(this.cryptoObj, authority, cacheRecord, false, request2, idTokenClaims, requestStateObj, serverTokenResponse, serverRequestId);
  }
  /**
   * Generates CacheRecord
   * @param serverTokenResponse
   * @param idTokenObj
   * @param authority
   */
  generateCacheRecord(serverTokenResponse, authority, reqTimestamp, request2, idTokenClaims, userAssertionHash, authCodePayload) {
    const env = authority.getPreferredCache();
    if (!env) {
      throw createClientAuthError(invalidCacheEnvironment);
    }
    const claimsTenantId = getTenantIdFromIdTokenClaims(idTokenClaims);
    let cachedIdToken;
    let cachedAccount;
    if (serverTokenResponse.id_token && !!idTokenClaims) {
      cachedIdToken = createIdTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.id_token, this.clientId, claimsTenantId || "");
      cachedAccount = buildAccountToCache(
        this.cacheStorage,
        authority,
        this.homeAccountIdentifier,
        this.cryptoObj.base64Decode,
        request2.correlationId,
        idTokenClaims,
        serverTokenResponse.client_info,
        env,
        claimsTenantId,
        authCodePayload,
        void 0,
        // nativeAccountId
        this.logger
      );
    }
    let cachedAccessToken = null;
    if (serverTokenResponse.access_token) {
      const responseScopes = serverTokenResponse.scope ? ScopeSet.fromString(serverTokenResponse.scope) : new ScopeSet(request2.scopes || []);
      const expiresIn = (typeof serverTokenResponse.expires_in === "string" ? parseInt(serverTokenResponse.expires_in, 10) : serverTokenResponse.expires_in) || 0;
      const extExpiresIn = (typeof serverTokenResponse.ext_expires_in === "string" ? parseInt(serverTokenResponse.ext_expires_in, 10) : serverTokenResponse.ext_expires_in) || 0;
      const refreshIn = (typeof serverTokenResponse.refresh_in === "string" ? parseInt(serverTokenResponse.refresh_in, 10) : serverTokenResponse.refresh_in) || void 0;
      const tokenExpirationSeconds = reqTimestamp + expiresIn;
      const extendedTokenExpirationSeconds = tokenExpirationSeconds + extExpiresIn;
      const refreshOnSeconds = refreshIn && refreshIn > 0 ? reqTimestamp + refreshIn : void 0;
      cachedAccessToken = createAccessTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.access_token, this.clientId, claimsTenantId || authority.tenant || "", responseScopes.printScopes(), tokenExpirationSeconds, extendedTokenExpirationSeconds, this.cryptoObj.base64Decode, refreshOnSeconds, serverTokenResponse.token_type, userAssertionHash, serverTokenResponse.key_id, request2.claims, request2.requestedClaimsHash);
    }
    let cachedRefreshToken = null;
    if (serverTokenResponse.refresh_token) {
      let rtExpiresOn;
      if (serverTokenResponse.refresh_token_expires_in) {
        const rtExpiresIn = typeof serverTokenResponse.refresh_token_expires_in === "string" ? parseInt(serverTokenResponse.refresh_token_expires_in, 10) : serverTokenResponse.refresh_token_expires_in;
        rtExpiresOn = reqTimestamp + rtExpiresIn;
      }
      cachedRefreshToken = createRefreshTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.refresh_token, this.clientId, serverTokenResponse.foci, userAssertionHash, rtExpiresOn);
    }
    let cachedAppMetadata = null;
    if (serverTokenResponse.foci) {
      cachedAppMetadata = {
        clientId: this.clientId,
        environment: env,
        familyId: serverTokenResponse.foci
      };
    }
    return {
      account: cachedAccount,
      idToken: cachedIdToken,
      accessToken: cachedAccessToken,
      refreshToken: cachedRefreshToken,
      appMetadata: cachedAppMetadata
    };
  }
  /**
   * Creates an @AuthenticationResult from @CacheRecord , @IdToken , and a boolean that states whether or not the result is from cache.
   *
   * Optionally takes a state string that is set as-is in the response.
   *
   * @param cacheRecord
   * @param idTokenObj
   * @param fromTokenCache
   * @param stateString
   */
  static async generateAuthenticationResult(cryptoObj, authority, cacheRecord, fromTokenCache, request2, idTokenClaims, requestState, serverTokenResponse, requestId) {
    let accessToken = Constants.EMPTY_STRING;
    let responseScopes = [];
    let expiresOn = null;
    let extExpiresOn;
    let refreshOn;
    let familyId = Constants.EMPTY_STRING;
    if (cacheRecord.accessToken) {
      if (cacheRecord.accessToken.tokenType === AuthenticationScheme.POP && !request2.popKid) {
        const popTokenGenerator = new PopTokenGenerator(cryptoObj);
        const { secret, keyId } = cacheRecord.accessToken;
        if (!keyId) {
          throw createClientAuthError(keyIdMissing);
        }
        accessToken = await popTokenGenerator.signPopToken(secret, keyId, request2);
      } else {
        accessToken = cacheRecord.accessToken.secret;
      }
      responseScopes = ScopeSet.fromString(cacheRecord.accessToken.target).asArray();
      expiresOn = toDateFromSeconds(cacheRecord.accessToken.expiresOn);
      extExpiresOn = toDateFromSeconds(cacheRecord.accessToken.extendedExpiresOn);
      if (cacheRecord.accessToken.refreshOn) {
        refreshOn = toDateFromSeconds(cacheRecord.accessToken.refreshOn);
      }
    }
    if (cacheRecord.appMetadata) {
      familyId = cacheRecord.appMetadata.familyId === THE_FAMILY_ID ? THE_FAMILY_ID : "";
    }
    const uid = idTokenClaims?.oid || idTokenClaims?.sub || "";
    const tid = idTokenClaims?.tid || "";
    if (serverTokenResponse?.spa_accountid && !!cacheRecord.account) {
      cacheRecord.account.nativeAccountId = serverTokenResponse?.spa_accountid;
    }
    const accountInfo = cacheRecord.account ? updateAccountTenantProfileData(
      cacheRecord.account.getAccountInfo(),
      void 0,
      // tenantProfile optional
      idTokenClaims,
      cacheRecord.idToken?.secret
    ) : null;
    return {
      authority: authority.canonicalAuthority,
      uniqueId: uid,
      tenantId: tid,
      scopes: responseScopes,
      account: accountInfo,
      idToken: cacheRecord?.idToken?.secret || "",
      idTokenClaims: idTokenClaims || {},
      accessToken,
      fromCache: fromTokenCache,
      expiresOn,
      extExpiresOn,
      refreshOn,
      correlationId: request2.correlationId,
      requestId: requestId || Constants.EMPTY_STRING,
      familyId,
      tokenType: cacheRecord.accessToken?.tokenType || Constants.EMPTY_STRING,
      state: requestState ? requestState.userRequestState : Constants.EMPTY_STRING,
      cloudGraphHostName: cacheRecord.account?.cloudGraphHostName || Constants.EMPTY_STRING,
      msGraphHost: cacheRecord.account?.msGraphHost || Constants.EMPTY_STRING,
      code: serverTokenResponse?.spa_code,
      fromNativeBroker: false
    };
  }
};
function buildAccountToCache(cacheStorage, authority, homeAccountId, base64Decode, correlationId, idTokenClaims, clientInfo, environment, claimsTenantId, authCodePayload, nativeAccountId, logger) {
  logger?.verbose("setCachedAccount called");
  const accountKeys = cacheStorage.getAccountKeys();
  const baseAccountKey = accountKeys.find((accountKey) => {
    return accountKey.startsWith(homeAccountId);
  });
  let cachedAccount = null;
  if (baseAccountKey) {
    cachedAccount = cacheStorage.getAccount(baseAccountKey, correlationId);
  }
  const baseAccount = cachedAccount || AccountEntity.createAccount({
    homeAccountId,
    idTokenClaims,
    clientInfo,
    environment,
    cloudGraphHostName: authCodePayload?.cloud_graph_host_name,
    msGraphHost: authCodePayload?.msgraph_host,
    nativeAccountId
  }, authority, base64Decode);
  const tenantProfiles = baseAccount.tenantProfiles || [];
  const tenantId = claimsTenantId || baseAccount.realm;
  if (tenantId && !tenantProfiles.find((tenantProfile) => {
    return tenantProfile.tenantId === tenantId;
  })) {
    const newTenantProfile = buildTenantProfile(homeAccountId, baseAccount.localAccountId, tenantId, idTokenClaims);
    tenantProfiles.push(newTenantProfile);
  }
  baseAccount.tenantProfiles = tenantProfiles;
  return baseAccount;
}

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/utils/ClientAssertionUtils.mjs
async function getClientAssertion(clientAssertion, clientId, tokenEndpoint) {
  if (typeof clientAssertion === "string") {
    return clientAssertion;
  } else {
    const config = {
      clientId,
      tokenEndpoint
    };
    return clientAssertion(config);
  }
}

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/client/AuthorizationCodeClient.mjs
var AuthorizationCodeClient = class extends BaseClient {
  constructor(configuration, performanceClient) {
    super(configuration, performanceClient);
    this.includeRedirectUri = true;
    this.oidcDefaultScopes = this.config.authOptions.authority.options.OIDCOptions?.defaultScopes;
  }
  /**
   * API to acquire a token in exchange of 'authorization_code` acquired by the user in the first leg of the
   * authorization_code_grant
   * @param request
   */
  async acquireToken(request2, authCodePayload) {
    this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthClientAcquireToken, request2.correlationId);
    if (!request2.code) {
      throw createClientAuthError(requestCannotBeMade);
    }
    const reqTimestamp = nowSeconds();
    const response = await invokeAsync(this.executeTokenRequest.bind(this), PerformanceEvents.AuthClientExecuteTokenRequest, this.logger, this.performanceClient, request2.correlationId)(this.authority, request2);
    const requestId = response.headers?.[HeaderNames.X_MS_REQUEST_ID];
    const responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin, this.performanceClient);
    responseHandler.validateTokenResponse(response.body);
    return invokeAsync(responseHandler.handleServerTokenResponse.bind(responseHandler), PerformanceEvents.HandleServerTokenResponse, this.logger, this.performanceClient, request2.correlationId)(response.body, this.authority, reqTimestamp, request2, authCodePayload, void 0, void 0, void 0, requestId);
  }
  /**
   * Used to log out the current user, and redirect the user to the postLogoutRedirectUri.
   * Default behaviour is to redirect the user to `window.location.href`.
   * @param authorityUri
   */
  getLogoutUri(logoutRequest) {
    if (!logoutRequest) {
      throw createClientConfigurationError(logoutRequestEmpty);
    }
    const queryString = this.createLogoutUrlQueryString(logoutRequest);
    return UrlString.appendQueryString(this.authority.endSessionEndpoint, queryString);
  }
  /**
   * Executes POST request to token endpoint
   * @param authority
   * @param request
   */
  async executeTokenRequest(authority, request2) {
    this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthClientExecuteTokenRequest, request2.correlationId);
    const queryParametersString = this.createTokenQueryParameters(request2);
    const endpoint2 = UrlString.appendQueryString(authority.tokenEndpoint, queryParametersString);
    const requestBody = await invokeAsync(this.createTokenRequestBody.bind(this), PerformanceEvents.AuthClientCreateTokenRequestBody, this.logger, this.performanceClient, request2.correlationId)(request2);
    let ccsCredential = void 0;
    if (request2.clientInfo) {
      try {
        const clientInfo = buildClientInfo(request2.clientInfo, this.cryptoUtils.base64Decode);
        ccsCredential = {
          credential: `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,
          type: CcsCredentialType.HOME_ACCOUNT_ID
        };
      } catch (e) {
        this.logger.verbose("Could not parse client info for CCS Header: " + e);
      }
    }
    const headers = this.createTokenRequestHeaders(ccsCredential || request2.ccsCredential);
    const thumbprint = getRequestThumbprint(this.config.authOptions.clientId, request2);
    return invokeAsync(this.executePostToTokenEndpoint.bind(this), PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint, this.logger, this.performanceClient, request2.correlationId)(endpoint2, requestBody, headers, thumbprint, request2.correlationId, PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint);
  }
  /**
   * Generates a map for all the params to be sent to the service
   * @param request
   */
  async createTokenRequestBody(request2) {
    this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthClientCreateTokenRequestBody, request2.correlationId);
    const parameters = /* @__PURE__ */ new Map();
    addClientId(parameters, request2.embeddedClientId || request2.tokenBodyParameters?.[CLIENT_ID] || this.config.authOptions.clientId);
    if (!this.includeRedirectUri) {
      if (!request2.redirectUri) {
        throw createClientConfigurationError(redirectUriEmpty);
      }
    } else {
      addRedirectUri(parameters, request2.redirectUri);
    }
    addScopes(parameters, request2.scopes, true, this.oidcDefaultScopes);
    addAuthorizationCode(parameters, request2.code);
    addLibraryInfo(parameters, this.config.libraryInfo);
    addApplicationTelemetry(parameters, this.config.telemetry.application);
    addThrottling(parameters);
    if (this.serverTelemetryManager && !isOidcProtocolMode(this.config)) {
      addServerTelemetry(parameters, this.serverTelemetryManager);
    }
    if (request2.codeVerifier) {
      addCodeVerifier(parameters, request2.codeVerifier);
    }
    if (this.config.clientCredentials.clientSecret) {
      addClientSecret(parameters, this.config.clientCredentials.clientSecret);
    }
    if (this.config.clientCredentials.clientAssertion) {
      const clientAssertion = this.config.clientCredentials.clientAssertion;
      addClientAssertion(parameters, await getClientAssertion(clientAssertion.assertion, this.config.authOptions.clientId, request2.resourceRequestUri));
      addClientAssertionType(parameters, clientAssertion.assertionType);
    }
    addGrantType(parameters, GrantType.AUTHORIZATION_CODE_GRANT);
    addClientInfo(parameters);
    if (request2.authenticationScheme === AuthenticationScheme.POP) {
      const popTokenGenerator = new PopTokenGenerator(this.cryptoUtils, this.performanceClient);
      let reqCnfData;
      if (!request2.popKid) {
        const generatedReqCnfData = await invokeAsync(popTokenGenerator.generateCnf.bind(popTokenGenerator), PerformanceEvents.PopTokenGenerateCnf, this.logger, this.performanceClient, request2.correlationId)(request2, this.logger);
        reqCnfData = generatedReqCnfData.reqCnfString;
      } else {
        reqCnfData = this.cryptoUtils.encodeKid(request2.popKid);
      }
      addPopToken(parameters, reqCnfData);
    } else if (request2.authenticationScheme === AuthenticationScheme.SSH) {
      if (request2.sshJwk) {
        addSshJwk(parameters, request2.sshJwk);
      } else {
        throw createClientConfigurationError(missingSshJwk);
      }
    }
    if (!StringUtils.isEmptyObj(request2.claims) || this.config.authOptions.clientCapabilities && this.config.authOptions.clientCapabilities.length > 0) {
      addClaims(parameters, request2.claims, this.config.authOptions.clientCapabilities);
    }
    let ccsCred = void 0;
    if (request2.clientInfo) {
      try {
        const clientInfo = buildClientInfo(request2.clientInfo, this.cryptoUtils.base64Decode);
        ccsCred = {
          credential: `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,
          type: CcsCredentialType.HOME_ACCOUNT_ID
        };
      } catch (e) {
        this.logger.verbose("Could not parse client info for CCS Header: " + e);
      }
    } else {
      ccsCred = request2.ccsCredential;
    }
    if (this.config.systemOptions.preventCorsPreflight && ccsCred) {
      switch (ccsCred.type) {
        case CcsCredentialType.HOME_ACCOUNT_ID:
          try {
            const clientInfo = buildClientInfoFromHomeAccountId(ccsCred.credential);
            addCcsOid(parameters, clientInfo);
          } catch (e) {
            this.logger.verbose("Could not parse home account ID for CCS Header: " + e);
          }
          break;
        case CcsCredentialType.UPN:
          addCcsUpn(parameters, ccsCred.credential);
          break;
      }
    }
    if (request2.embeddedClientId) {
      addBrokerParameters(parameters, this.config.authOptions.clientId, this.config.authOptions.redirectUri);
    }
    if (request2.tokenBodyParameters) {
      addExtraQueryParameters(parameters, request2.tokenBodyParameters);
    }
    if (request2.enableSpaAuthorizationCode && (!request2.tokenBodyParameters || !request2.tokenBodyParameters[RETURN_SPA_CODE])) {
      addExtraQueryParameters(parameters, {
        [RETURN_SPA_CODE]: "1"
      });
    }
    instrumentBrokerParams(parameters, request2.correlationId, this.performanceClient);
    return mapToQueryString(parameters);
  }
  /**
   * This API validates the `EndSessionRequest` and creates a URL
   * @param request
   */
  createLogoutUrlQueryString(request2) {
    const parameters = /* @__PURE__ */ new Map();
    if (request2.postLogoutRedirectUri) {
      addPostLogoutRedirectUri(parameters, request2.postLogoutRedirectUri);
    }
    if (request2.correlationId) {
      addCorrelationId(parameters, request2.correlationId);
    }
    if (request2.idTokenHint) {
      addIdTokenHint(parameters, request2.idTokenHint);
    }
    if (request2.state) {
      addState(parameters, request2.state);
    }
    if (request2.logoutHint) {
      addLogoutHint(parameters, request2.logoutHint);
    }
    if (request2.extraQueryParameters) {
      addExtraQueryParameters(parameters, request2.extraQueryParameters);
    }
    if (this.config.authOptions.instanceAware) {
      addInstanceAware(parameters);
    }
    return mapToQueryString(parameters, this.config.authOptions.encodeExtraQueryParams, request2.extraQueryParameters);
  }
};

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/client/RefreshTokenClient.mjs
var DEFAULT_REFRESH_TOKEN_EXPIRATION_OFFSET_SECONDS = 300;
var RefreshTokenClient = class extends BaseClient {
  constructor(configuration, performanceClient) {
    super(configuration, performanceClient);
  }
  async acquireToken(request2) {
    this.performanceClient?.addQueueMeasurement(PerformanceEvents.RefreshTokenClientAcquireToken, request2.correlationId);
    const reqTimestamp = nowSeconds();
    const response = await invokeAsync(this.executeTokenRequest.bind(this), PerformanceEvents.RefreshTokenClientExecuteTokenRequest, this.logger, this.performanceClient, request2.correlationId)(request2, this.authority);
    const requestId = response.headers?.[HeaderNames.X_MS_REQUEST_ID];
    const responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin);
    responseHandler.validateTokenResponse(response.body);
    return invokeAsync(responseHandler.handleServerTokenResponse.bind(responseHandler), PerformanceEvents.HandleServerTokenResponse, this.logger, this.performanceClient, request2.correlationId)(response.body, this.authority, reqTimestamp, request2, void 0, void 0, true, request2.forceCache, requestId);
  }
  /**
   * Gets cached refresh token and attaches to request, then calls acquireToken API
   * @param request
   */
  async acquireTokenByRefreshToken(request2) {
    if (!request2) {
      throw createClientConfigurationError(tokenRequestEmpty);
    }
    this.performanceClient?.addQueueMeasurement(PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken, request2.correlationId);
    if (!request2.account) {
      throw createClientAuthError(noAccountInSilentRequest);
    }
    const isFOCI = this.cacheManager.isAppMetadataFOCI(request2.account.environment);
    if (isFOCI) {
      try {
        return await invokeAsync(this.acquireTokenWithCachedRefreshToken.bind(this), PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, this.logger, this.performanceClient, request2.correlationId)(request2, true);
      } catch (e) {
        const noFamilyRTInCache = e instanceof InteractionRequiredAuthError && e.errorCode === noTokensFound;
        const clientMismatchErrorWithFamilyRT = e instanceof ServerError && e.errorCode === Errors.INVALID_GRANT_ERROR && e.subError === Errors.CLIENT_MISMATCH_ERROR;
        if (noFamilyRTInCache || clientMismatchErrorWithFamilyRT) {
          return invokeAsync(this.acquireTokenWithCachedRefreshToken.bind(this), PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, this.logger, this.performanceClient, request2.correlationId)(request2, false);
        } else {
          throw e;
        }
      }
    }
    return invokeAsync(this.acquireTokenWithCachedRefreshToken.bind(this), PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, this.logger, this.performanceClient, request2.correlationId)(request2, false);
  }
  /**
   * makes a network call to acquire tokens by exchanging RefreshToken available in userCache; throws if refresh token is not cached
   * @param request
   */
  async acquireTokenWithCachedRefreshToken(request2, foci) {
    this.performanceClient?.addQueueMeasurement(PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, request2.correlationId);
    const refreshToken = invoke(this.cacheManager.getRefreshToken.bind(this.cacheManager), PerformanceEvents.CacheManagerGetRefreshToken, this.logger, this.performanceClient, request2.correlationId)(request2.account, foci, request2.correlationId, void 0, this.performanceClient);
    if (!refreshToken) {
      throw createInteractionRequiredAuthError(noTokensFound);
    }
    if (refreshToken.expiresOn && isTokenExpired(refreshToken.expiresOn, request2.refreshTokenExpirationOffsetSeconds || DEFAULT_REFRESH_TOKEN_EXPIRATION_OFFSET_SECONDS)) {
      this.performanceClient?.addFields({ rtExpiresOnMs: Number(refreshToken.expiresOn) }, request2.correlationId);
      throw createInteractionRequiredAuthError(refreshTokenExpired);
    }
    const refreshTokenRequest = {
      ...request2,
      refreshToken: refreshToken.secret,
      authenticationScheme: request2.authenticationScheme || AuthenticationScheme.BEARER,
      ccsCredential: {
        credential: request2.account.homeAccountId,
        type: CcsCredentialType.HOME_ACCOUNT_ID
      }
    };
    try {
      return await invokeAsync(this.acquireToken.bind(this), PerformanceEvents.RefreshTokenClientAcquireToken, this.logger, this.performanceClient, request2.correlationId)(refreshTokenRequest);
    } catch (e) {
      if (e instanceof InteractionRequiredAuthError) {
        this.performanceClient?.addFields({ rtExpiresOnMs: Number(refreshToken.expiresOn) }, request2.correlationId);
        if (e.subError === badToken) {
          this.logger.verbose("acquireTokenWithRefreshToken: bad refresh token, removing from cache");
          const badRefreshTokenKey = this.cacheManager.generateCredentialKey(refreshToken);
          this.cacheManager.removeRefreshToken(badRefreshTokenKey, request2.correlationId);
        }
      }
      throw e;
    }
  }
  /**
   * Constructs the network message and makes a NW call to the underlying secure token service
   * @param request
   * @param authority
   */
  async executeTokenRequest(request2, authority) {
    this.performanceClient?.addQueueMeasurement(PerformanceEvents.RefreshTokenClientExecuteTokenRequest, request2.correlationId);
    const queryParametersString = this.createTokenQueryParameters(request2);
    const endpoint2 = UrlString.appendQueryString(authority.tokenEndpoint, queryParametersString);
    const requestBody = await invokeAsync(this.createTokenRequestBody.bind(this), PerformanceEvents.RefreshTokenClientCreateTokenRequestBody, this.logger, this.performanceClient, request2.correlationId)(request2);
    const headers = this.createTokenRequestHeaders(request2.ccsCredential);
    const thumbprint = getRequestThumbprint(this.config.authOptions.clientId, request2);
    return invokeAsync(this.executePostToTokenEndpoint.bind(this), PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint, this.logger, this.performanceClient, request2.correlationId)(endpoint2, requestBody, headers, thumbprint, request2.correlationId, PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint);
  }
  /**
   * Helper function to create the token request body
   * @param request
   */
  async createTokenRequestBody(request2) {
    this.performanceClient?.addQueueMeasurement(PerformanceEvents.RefreshTokenClientCreateTokenRequestBody, request2.correlationId);
    const parameters = /* @__PURE__ */ new Map();
    addClientId(parameters, request2.embeddedClientId || request2.tokenBodyParameters?.[CLIENT_ID] || this.config.authOptions.clientId);
    if (request2.redirectUri) {
      addRedirectUri(parameters, request2.redirectUri);
    }
    addScopes(parameters, request2.scopes, true, this.config.authOptions.authority.options.OIDCOptions?.defaultScopes);
    addGrantType(parameters, GrantType.REFRESH_TOKEN_GRANT);
    addClientInfo(parameters);
    addLibraryInfo(parameters, this.config.libraryInfo);
    addApplicationTelemetry(parameters, this.config.telemetry.application);
    addThrottling(parameters);
    if (this.serverTelemetryManager && !isOidcProtocolMode(this.config)) {
      addServerTelemetry(parameters, this.serverTelemetryManager);
    }
    addRefreshToken(parameters, request2.refreshToken);
    if (this.config.clientCredentials.clientSecret) {
      addClientSecret(parameters, this.config.clientCredentials.clientSecret);
    }
    if (this.config.clientCredentials.clientAssertion) {
      const clientAssertion = this.config.clientCredentials.clientAssertion;
      addClientAssertion(parameters, await getClientAssertion(clientAssertion.assertion, this.config.authOptions.clientId, request2.resourceRequestUri));
      addClientAssertionType(parameters, clientAssertion.assertionType);
    }
    if (request2.authenticationScheme === AuthenticationScheme.POP) {
      const popTokenGenerator = new PopTokenGenerator(this.cryptoUtils, this.performanceClient);
      let reqCnfData;
      if (!request2.popKid) {
        const generatedReqCnfData = await invokeAsync(popTokenGenerator.generateCnf.bind(popTokenGenerator), PerformanceEvents.PopTokenGenerateCnf, this.logger, this.performanceClient, request2.correlationId)(request2, this.logger);
        reqCnfData = generatedReqCnfData.reqCnfString;
      } else {
        reqCnfData = this.cryptoUtils.encodeKid(request2.popKid);
      }
      addPopToken(parameters, reqCnfData);
    } else if (request2.authenticationScheme === AuthenticationScheme.SSH) {
      if (request2.sshJwk) {
        addSshJwk(parameters, request2.sshJwk);
      } else {
        throw createClientConfigurationError(missingSshJwk);
      }
    }
    if (!StringUtils.isEmptyObj(request2.claims) || this.config.authOptions.clientCapabilities && this.config.authOptions.clientCapabilities.length > 0) {
      addClaims(parameters, request2.claims, this.config.authOptions.clientCapabilities);
    }
    if (this.config.systemOptions.preventCorsPreflight && request2.ccsCredential) {
      switch (request2.ccsCredential.type) {
        case CcsCredentialType.HOME_ACCOUNT_ID:
          try {
            const clientInfo = buildClientInfoFromHomeAccountId(request2.ccsCredential.credential);
            addCcsOid(parameters, clientInfo);
          } catch (e) {
            this.logger.verbose("Could not parse home account ID for CCS Header: " + e);
          }
          break;
        case CcsCredentialType.UPN:
          addCcsUpn(parameters, request2.ccsCredential.credential);
          break;
      }
    }
    if (request2.embeddedClientId) {
      addBrokerParameters(parameters, this.config.authOptions.clientId, this.config.authOptions.redirectUri);
    }
    if (request2.tokenBodyParameters) {
      addExtraQueryParameters(parameters, request2.tokenBodyParameters);
    }
    instrumentBrokerParams(parameters, request2.correlationId, this.performanceClient);
    return mapToQueryString(parameters);
  }
};

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/client/SilentFlowClient.mjs
var SilentFlowClient = class extends BaseClient {
  constructor(configuration, performanceClient) {
    super(configuration, performanceClient);
  }
  /**
   * Retrieves token from cache or throws an error if it must be refreshed.
   * @param request
   */
  async acquireCachedToken(request2) {
    this.performanceClient?.addQueueMeasurement(PerformanceEvents.SilentFlowClientAcquireCachedToken, request2.correlationId);
    let lastCacheOutcome = CacheOutcome.NOT_APPLICABLE;
    if (request2.forceRefresh || !this.config.cacheOptions.claimsBasedCachingEnabled && !StringUtils.isEmptyObj(request2.claims)) {
      this.setCacheOutcome(CacheOutcome.FORCE_REFRESH_OR_CLAIMS, request2.correlationId);
      throw createClientAuthError(tokenRefreshRequired);
    }
    if (!request2.account) {
      throw createClientAuthError(noAccountInSilentRequest);
    }
    const requestTenantId = request2.account.tenantId || getTenantFromAuthorityString(request2.authority);
    const tokenKeys = this.cacheManager.getTokenKeys();
    const cachedAccessToken = this.cacheManager.getAccessToken(request2.account, request2, tokenKeys, requestTenantId);
    if (!cachedAccessToken) {
      this.setCacheOutcome(CacheOutcome.NO_CACHED_ACCESS_TOKEN, request2.correlationId);
      throw createClientAuthError(tokenRefreshRequired);
    } else if (wasClockTurnedBack(cachedAccessToken.cachedAt) || isTokenExpired(cachedAccessToken.expiresOn, this.config.systemOptions.tokenRenewalOffsetSeconds)) {
      this.setCacheOutcome(CacheOutcome.CACHED_ACCESS_TOKEN_EXPIRED, request2.correlationId);
      throw createClientAuthError(tokenRefreshRequired);
    } else if (cachedAccessToken.refreshOn && isTokenExpired(cachedAccessToken.refreshOn, 0)) {
      lastCacheOutcome = CacheOutcome.PROACTIVELY_REFRESHED;
    }
    const environment = request2.authority || this.authority.getPreferredCache();
    const cacheRecord = {
      account: this.cacheManager.getAccount(this.cacheManager.generateAccountKey(request2.account), request2.correlationId),
      accessToken: cachedAccessToken,
      idToken: this.cacheManager.getIdToken(request2.account, request2.correlationId, tokenKeys, requestTenantId, this.performanceClient),
      refreshToken: null,
      appMetadata: this.cacheManager.readAppMetadataFromCache(environment)
    };
    this.setCacheOutcome(lastCacheOutcome, request2.correlationId);
    if (this.config.serverTelemetryManager) {
      this.config.serverTelemetryManager.incrementCacheHits();
    }
    return [
      await invokeAsync(this.generateResultFromCacheRecord.bind(this), PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord, this.logger, this.performanceClient, request2.correlationId)(cacheRecord, request2),
      lastCacheOutcome
    ];
  }
  setCacheOutcome(cacheOutcome, correlationId) {
    this.serverTelemetryManager?.setCacheOutcome(cacheOutcome);
    this.performanceClient?.addFields({
      cacheOutcome
    }, correlationId);
    if (cacheOutcome !== CacheOutcome.NOT_APPLICABLE) {
      this.logger.info(`Token refresh is required due to cache outcome: ${cacheOutcome}`);
    }
  }
  /**
   * Helper function to build response object from the CacheRecord
   * @param cacheRecord
   */
  async generateResultFromCacheRecord(cacheRecord, request2) {
    this.performanceClient?.addQueueMeasurement(PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord, request2.correlationId);
    let idTokenClaims;
    if (cacheRecord.idToken) {
      idTokenClaims = extractTokenClaims(cacheRecord.idToken.secret, this.config.cryptoInterface.base64Decode);
    }
    if (request2.maxAge || request2.maxAge === 0) {
      const authTime = idTokenClaims?.auth_time;
      if (!authTime) {
        throw createClientAuthError(authTimeNotFound);
      }
      checkMaxAge(authTime, request2.maxAge);
    }
    return ResponseHandler.generateAuthenticationResult(this.cryptoUtils, this.authority, cacheRecord, true, request2, idTokenClaims);
  }
};

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/protocol/Authorize.mjs
var Authorize_exports = {};
__export(Authorize_exports, {
  getAuthorizationCodePayload: () => getAuthorizationCodePayload,
  getAuthorizeUrl: () => getAuthorizeUrl,
  getStandardAuthorizeRequestParameters: () => getStandardAuthorizeRequestParameters,
  validateAuthorizationResponse: () => validateAuthorizationResponse
});
function getStandardAuthorizeRequestParameters(authOptions, request2, logger, performanceClient) {
  const correlationId = request2.correlationId;
  const parameters = /* @__PURE__ */ new Map();
  addClientId(parameters, request2.embeddedClientId || request2.extraQueryParameters?.[CLIENT_ID] || authOptions.clientId);
  const requestScopes = [
    ...request2.scopes || [],
    ...request2.extraScopesToConsent || []
  ];
  addScopes(parameters, requestScopes, true, authOptions.authority.options.OIDCOptions?.defaultScopes);
  addRedirectUri(parameters, request2.redirectUri);
  addCorrelationId(parameters, correlationId);
  addResponseMode(parameters, request2.responseMode);
  addClientInfo(parameters);
  if (request2.prompt) {
    addPrompt(parameters, request2.prompt);
    performanceClient?.addFields({ prompt: request2.prompt }, correlationId);
  }
  if (request2.domainHint) {
    addDomainHint(parameters, request2.domainHint);
    performanceClient?.addFields({ domainHintFromRequest: true }, correlationId);
  }
  if (request2.prompt !== PromptValue.SELECT_ACCOUNT) {
    if (request2.sid && request2.prompt === PromptValue.NONE) {
      logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from request");
      addSid(parameters, request2.sid);
      performanceClient?.addFields({ sidFromRequest: true }, correlationId);
    } else if (request2.account) {
      const accountSid = extractAccountSid(request2.account);
      let accountLoginHintClaim = extractLoginHint(request2.account);
      if (accountLoginHintClaim && request2.domainHint) {
        logger.warning(`AuthorizationCodeClient.createAuthCodeUrlQueryString: "domainHint" param is set, skipping opaque "login_hint" claim. Please consider not passing domainHint`);
        accountLoginHintClaim = null;
      }
      if (accountLoginHintClaim) {
        logger.verbose("createAuthCodeUrlQueryString: login_hint claim present on account");
        addLoginHint(parameters, accountLoginHintClaim);
        performanceClient?.addFields({ loginHintFromClaim: true }, correlationId);
        try {
          const clientInfo = buildClientInfoFromHomeAccountId(request2.account.homeAccountId);
          addCcsOid(parameters, clientInfo);
        } catch (e) {
          logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header");
        }
      } else if (accountSid && request2.prompt === PromptValue.NONE) {
        logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from account");
        addSid(parameters, accountSid);
        performanceClient?.addFields({ sidFromClaim: true }, correlationId);
        try {
          const clientInfo = buildClientInfoFromHomeAccountId(request2.account.homeAccountId);
          addCcsOid(parameters, clientInfo);
        } catch (e) {
          logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header");
        }
      } else if (request2.loginHint) {
        logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from request");
        addLoginHint(parameters, request2.loginHint);
        addCcsUpn(parameters, request2.loginHint);
        performanceClient?.addFields({ loginHintFromRequest: true }, correlationId);
      } else if (request2.account.username) {
        logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from account");
        addLoginHint(parameters, request2.account.username);
        performanceClient?.addFields({ loginHintFromUpn: true }, correlationId);
        try {
          const clientInfo = buildClientInfoFromHomeAccountId(request2.account.homeAccountId);
          addCcsOid(parameters, clientInfo);
        } catch (e) {
          logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header");
        }
      }
    } else if (request2.loginHint) {
      logger.verbose("createAuthCodeUrlQueryString: No account, adding login_hint from request");
      addLoginHint(parameters, request2.loginHint);
      addCcsUpn(parameters, request2.loginHint);
      performanceClient?.addFields({ loginHintFromRequest: true }, correlationId);
    }
  } else {
    logger.verbose("createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints");
  }
  if (request2.nonce) {
    addNonce(parameters, request2.nonce);
  }
  if (request2.state) {
    addState(parameters, request2.state);
  }
  if (request2.claims || authOptions.clientCapabilities && authOptions.clientCapabilities.length > 0) {
    addClaims(parameters, request2.claims, authOptions.clientCapabilities);
  }
  if (request2.embeddedClientId) {
    addBrokerParameters(parameters, authOptions.clientId, authOptions.redirectUri);
  }
  if (authOptions.instanceAware && (!request2.extraQueryParameters || !Object.keys(request2.extraQueryParameters).includes(INSTANCE_AWARE))) {
    addInstanceAware(parameters);
  }
  return parameters;
}
function getAuthorizeUrl(authority, requestParameters, encodeParams, extraQueryParameters) {
  const queryString = mapToQueryString(requestParameters, encodeParams, extraQueryParameters);
  return UrlString.appendQueryString(authority.authorizationEndpoint, queryString);
}
function getAuthorizationCodePayload(serverParams, cachedState) {
  validateAuthorizationResponse(serverParams, cachedState);
  if (!serverParams.code) {
    throw createClientAuthError(authorizationCodeMissingFromServerResponse);
  }
  return serverParams;
}
function validateAuthorizationResponse(serverResponse, requestState) {
  if (!serverResponse.state || !requestState) {
    throw serverResponse.state ? createClientAuthError(stateNotFound, "Cached State") : createClientAuthError(stateNotFound, "Server State");
  }
  let decodedServerResponseState;
  let decodedRequestState;
  try {
    decodedServerResponseState = decodeURIComponent(serverResponse.state);
  } catch (e) {
    throw createClientAuthError(invalidState, serverResponse.state);
  }
  try {
    decodedRequestState = decodeURIComponent(requestState);
  } catch (e) {
    throw createClientAuthError(invalidState, serverResponse.state);
  }
  if (decodedServerResponseState !== decodedRequestState) {
    throw createClientAuthError(stateMismatch);
  }
  if (serverResponse.error || serverResponse.error_description || serverResponse.suberror) {
    const serverErrorNo = parseServerErrorNo(serverResponse);
    if (isInteractionRequiredError(serverResponse.error, serverResponse.error_description, serverResponse.suberror)) {
      throw new InteractionRequiredAuthError(serverResponse.error || "", serverResponse.error_description, serverResponse.suberror, serverResponse.timestamp || "", serverResponse.trace_id || "", serverResponse.correlation_id || "", serverResponse.claims || "", serverErrorNo);
    }
    throw new ServerError(serverResponse.error || "", serverResponse.error_description, serverResponse.suberror, serverErrorNo);
  }
}
function parseServerErrorNo(serverResponse) {
  const errorCodePrefix = "code=";
  const errorCodePrefixIndex = serverResponse.error_uri?.lastIndexOf(errorCodePrefix);
  return errorCodePrefixIndex && errorCodePrefixIndex >= 0 ? serverResponse.error_uri?.substring(errorCodePrefixIndex + errorCodePrefix.length) : void 0;
}
function extractAccountSid(account) {
  return account.idTokenClaims?.sid || null;
}
function extractLoginHint(account) {
  return account.loginHint || account.idTokenClaims?.login_hint || null;
}

// node_modules/@azure/msal-node/node_modules/@azure/msal-common/dist/telemetry/server/ServerTelemetryManager.mjs
var skuGroupSeparator = ",";
var skuValueSeparator = "|";
function makeExtraSkuString(params) {
  const { skus, libraryName, libraryVersion, extensionName, extensionVersion } = params;
  const skuMap = /* @__PURE__ */ new Map([
    [0, [libraryName, libraryVersion]],
    [2, [extensionName, extensionVersion]]
  ]);
  let skuArr = [];
  if (skus?.length) {
    skuArr = skus.split(skuGroupSeparator);
    if (skuArr.length < 4) {
      return skus;
    }
  } else {
    skuArr = Array.from({ length: 4 }, () => skuValueSeparator);
  }
  skuMap.forEach((value, key) => {
    if (value.length === 2 && value[0]?.length && value[1]?.length) {
      setSku({
        skuArr,
        index: key,
        skuName: value[0],
        skuVersion: value[1]
      });
    }
  });
  return skuArr.join(skuGroupSeparator);
}
function setSku(params) {
  const { skuArr, index, skuName, skuVersion } = params;
  if (index >= skuArr.length) {
    return;
  }
  skuArr[index] = [skuName, skuVersion].join(skuValueSeparator);
}
var ServerTelemetryManager = class _ServerTelemetryManager {
  constructor(telemetryRequest, cacheManager) {
    this.cacheOutcome = CacheOutcome.NOT_APPLICABLE;
    this.cacheManager = cacheManager;
    this.apiId = telemetryRequest.apiId;
    this.correlationId = telemetryRequest.correlationId;
    this.wrapperSKU = telemetryRequest.wrapperSKU || Constants.EMPTY_STRING;
    this.wrapperVer = telemetryRequest.wrapperVer || Constants.EMPTY_STRING;
    this.telemetryCacheKey = SERVER_TELEM_CONSTANTS.CACHE_KEY + Separators.CACHE_KEY_SEPARATOR + telemetryRequest.clientId;
  }
  /**
   * API to add MSER Telemetry to request
   */
  generateCurrentRequestHeaderValue() {
    const request2 = `${this.apiId}${SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR}${this.cacheOutcome}`;
    const platformFieldsArr = [this.wrapperSKU, this.wrapperVer];
    const nativeBrokerErrorCode = this.getNativeBrokerErrorCode();
    if (nativeBrokerErrorCode?.length) {
      platformFieldsArr.push(`broker_error=${nativeBrokerErrorCode}`);
    }
    const platformFields = platformFieldsArr.join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);
    const regionDiscoveryFields = this.getRegionDiscoveryFields();
    const requestWithRegionDiscoveryFields = [
      request2,
      regionDiscoveryFields
    ].join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);
    return [
      SERVER_TELEM_CONSTANTS.SCHEMA_VERSION,
      requestWithRegionDiscoveryFields,
      platformFields
    ].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);
  }
  /**
   * API to add MSER Telemetry for the last failed request
   */
  generateLastRequestHeaderValue() {
    const lastRequests = this.getLastRequests();
    const maxErrors = _ServerTelemetryManager.maxErrorsToSend(lastRequests);
    const failedRequests = lastRequests.failedRequests.slice(0, 2 * maxErrors).join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);
    const errors = lastRequests.errors.slice(0, maxErrors).join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);
    const errorCount = lastRequests.errors.length;
    const overflow = maxErrors < errorCount ? SERVER_TELEM_CONSTANTS.OVERFLOW_TRUE : SERVER_TELEM_CONSTANTS.OVERFLOW_FALSE;
    const platformFields = [errorCount, overflow].join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);
    return [
      SERVER_TELEM_CONSTANTS.SCHEMA_VERSION,
      lastRequests.cacheHits,
      failedRequests,
      errors,
      platformFields
    ].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);
  }
  /**
   * API to cache token failures for MSER data capture
   * @param error
   */
  cacheFailedRequest(error) {
    const lastRequests = this.getLastRequests();
    if (lastRequests.errors.length >= SERVER_TELEM_CONSTANTS.MAX_CACHED_ERRORS) {
      lastRequests.failedRequests.shift();
      lastRequests.failedRequests.shift();
      lastRequests.errors.shift();
    }
    lastRequests.failedRequests.push(this.apiId, this.correlationId);
    if (error instanceof Error && !!error && error.toString()) {
      if (error instanceof AuthError) {
        if (error.subError) {
          lastRequests.errors.push(error.subError);
        } else if (error.errorCode) {
          lastRequests.errors.push(error.errorCode);
        } else {
          lastRequests.errors.push(error.toString());
        }
      } else {
        lastRequests.errors.push(error.toString());
      }
    } else {
      lastRequests.errors.push(SERVER_TELEM_CONSTANTS.UNKNOWN_ERROR);
    }
    this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests, this.correlationId);
    return;
  }
  /**
   * Update server telemetry cache entry by incrementing cache hit counter
   */
  incrementCacheHits() {
    const lastRequests = this.getLastRequests();
    lastRequests.cacheHits += 1;
    this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests, this.correlationId);
    return lastRequests.cacheHits;
  }
  /**
   * Get the server telemetry entity from cache or initialize a new one
   */
  getLastRequests() {
    const initialValue = {
      failedRequests: [],
      errors: [],
      cacheHits: 0
    };
    const lastRequests = this.cacheManager.getServerTelemetry(this.telemetryCacheKey);
    return lastRequests || initialValue;
  }
  /**
   * Remove server telemetry cache entry
   */
  clearTelemetryCache() {
    const lastRequests = this.getLastRequests();
    const numErrorsFlushed = _ServerTelemetryManager.maxErrorsToSend(lastRequests);
    const errorCount = lastRequests.errors.length;
    if (numErrorsFlushed === errorCount) {
      this.cacheManager.removeItem(this.telemetryCacheKey, this.correlationId);
    } else {
      const serverTelemEntity = {
        failedRequests: lastRequests.failedRequests.slice(numErrorsFlushed * 2),
        errors: lastRequests.errors.slice(numErrorsFlushed),
        cacheHits: 0
      };
      this.cacheManager.setServerTelemetry(this.telemetryCacheKey, serverTelemEntity, this.correlationId);
    }
  }
  /**
   * Returns the maximum number of errors that can be flushed to the server in the next network request
   * @param serverTelemetryEntity
   */
  static maxErrorsToSend(serverTelemetryEntity) {
    let i;
    let maxErrors = 0;
    let dataSize = 0;
    const errorCount = serverTelemetryEntity.errors.length;
    for (i = 0; i < errorCount; i++) {
      const apiId = serverTelemetryEntity.failedRequests[2 * i] || Constants.EMPTY_STRING;
      const correlationId = serverTelemetryEntity.failedRequests[2 * i + 1] || Constants.EMPTY_STRING;
      const errorCode = serverTelemetryEntity.errors[i] || Constants.EMPTY_STRING;
      dataSize += apiId.toString().length + correlationId.toString().length + errorCode.length + 3;
      if (dataSize < SERVER_TELEM_CONSTANTS.MAX_LAST_HEADER_BYTES) {
        maxErrors += 1;
      } else {
        break;
      }
    }
    return maxErrors;
  }
  /**
   * Get the region discovery fields
   *
   * @returns string
   */
  getRegionDiscoveryFields() {
    const regionDiscoveryFields = [];
    regionDiscoveryFields.push(this.regionUsed || Constants.EMPTY_STRING);
    regionDiscoveryFields.push(this.regionSource || Constants.EMPTY_STRING);
    regionDiscoveryFields.push(this.regionOutcome || Constants.EMPTY_STRING);
    return regionDiscoveryFields.join(",");
  }
  /**
   * Update the region discovery metadata
   *
   * @param regionDiscoveryMetadata
   * @returns void
   */
  updateRegionDiscoveryMetadata(regionDiscoveryMetadata) {
    this.regionUsed = regionDiscoveryMetadata.region_used;
    this.regionSource = regionDiscoveryMetadata.region_source;
    this.regionOutcome = regionDiscoveryMetadata.region_outcome;
  }
  /**
   * Set cache outcome
   */
  setCacheOutcome(cacheOutcome) {
    this.cacheOutcome = cacheOutcome;
  }
  setNativeBrokerErrorCode(errorCode) {
    const lastRequests = this.getLastRequests();
    lastRequests.nativeBrokerErrorCode = errorCode;
    this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests, this.correlationId);
  }
  getNativeBrokerErrorCode() {
    return this.getLastRequests().nativeBrokerErrorCode;
  }
  clearNativeBrokerErrorCode() {
    const lastRequests = this.getLastRequests();
    delete lastRequests.nativeBrokerErrorCode;
    this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests, this.correlationId);
  }
  static makeExtraSkuString(params) {
    return makeExtraSkuString(params);
  }
};

// node_modules/@azure/msal-node/dist/cache/serializer/Deserializer.mjs
var Deserializer = class {
  /**
   * Parse the JSON blob in memory and deserialize the content
   * @param cachedJson - JSON blob cache
   */
  static deserializeJSONBlob(jsonFile) {
    const deserializedCache = !jsonFile ? {} : JSON.parse(jsonFile);
    return deserializedCache;
  }
  /**
   * Deserializes accounts to AccountEntity objects
   * @param accounts - accounts of type SerializedAccountEntity
   */
  static deserializeAccounts(accounts) {
    const accountObjects = {};
    if (accounts) {
      Object.keys(accounts).map(function(key) {
        const serializedAcc = accounts[key];
        const mappedAcc = {
          homeAccountId: serializedAcc.home_account_id,
          environment: serializedAcc.environment,
          realm: serializedAcc.realm,
          localAccountId: serializedAcc.local_account_id,
          username: serializedAcc.username,
          authorityType: serializedAcc.authority_type,
          name: serializedAcc.name,
          clientInfo: serializedAcc.client_info,
          lastModificationTime: serializedAcc.last_modification_time,
          lastModificationApp: serializedAcc.last_modification_app,
          tenantProfiles: serializedAcc.tenantProfiles?.map((serializedTenantProfile) => {
            return JSON.parse(serializedTenantProfile);
          }),
          lastUpdatedAt: Date.now().toString()
        };
        const account = new AccountEntity();
        CacheManager.toObject(account, mappedAcc);
        accountObjects[key] = account;
      });
    }
    return accountObjects;
  }
  /**
   * Deserializes id tokens to IdTokenEntity objects
   * @param idTokens - credentials of type SerializedIdTokenEntity
   */
  static deserializeIdTokens(idTokens) {
    const idObjects = {};
    if (idTokens) {
      Object.keys(idTokens).map(function(key) {
        const serializedIdT = idTokens[key];
        const idToken = {
          homeAccountId: serializedIdT.home_account_id,
          environment: serializedIdT.environment,
          credentialType: serializedIdT.credential_type,
          clientId: serializedIdT.client_id,
          secret: serializedIdT.secret,
          realm: serializedIdT.realm,
          lastUpdatedAt: Date.now().toString()
        };
        idObjects[key] = idToken;
      });
    }
    return idObjects;
  }
  /**
   * Deserializes access tokens to AccessTokenEntity objects
   * @param accessTokens - access tokens of type SerializedAccessTokenEntity
   */
  static deserializeAccessTokens(accessTokens) {
    const atObjects = {};
    if (accessTokens) {
      Object.keys(accessTokens).map(function(key) {
        const serializedAT = accessTokens[key];
        const accessToken = {
          homeAccountId: serializedAT.home_account_id,
          environment: serializedAT.environment,
          credentialType: serializedAT.credential_type,
          clientId: serializedAT.client_id,
          secret: serializedAT.secret,
          realm: serializedAT.realm,
          target: serializedAT.target,
          cachedAt: serializedAT.cached_at,
          expiresOn: serializedAT.expires_on,
          extendedExpiresOn: serializedAT.extended_expires_on,
          refreshOn: serializedAT.refresh_on,
          keyId: serializedAT.key_id,
          tokenType: serializedAT.token_type,
          requestedClaims: serializedAT.requestedClaims,
          requestedClaimsHash: serializedAT.requestedClaimsHash,
          userAssertionHash: serializedAT.userAssertionHash,
          lastUpdatedAt: Date.now().toString()
        };
        atObjects[key] = accessToken;
      });
    }
    return atObjects;
  }
  /**
   * Deserializes refresh tokens to RefreshTokenEntity objects
   * @param refreshTokens - refresh tokens of type SerializedRefreshTokenEntity
   */
  static deserializeRefreshTokens(refreshTokens) {
    const rtObjects = {};
    if (refreshTokens) {
      Object.keys(refreshTokens).map(function(key) {
        const serializedRT = refreshTokens[key];
        const refreshToken = {
          homeAccountId: serializedRT.home_account_id,
          environment: serializedRT.environment,
          credentialType: serializedRT.credential_type,
          clientId: serializedRT.client_id,
          secret: serializedRT.secret,
          familyId: serializedRT.family_id,
          target: serializedRT.target,
          realm: serializedRT.realm,
          lastUpdatedAt: Date.now().toString()
        };
        rtObjects[key] = refreshToken;
      });
    }
    return rtObjects;
  }
  /**
   * Deserializes appMetadata to AppMetaData objects
   * @param appMetadata - app metadata of type SerializedAppMetadataEntity
   */
  static deserializeAppMetadata(appMetadata) {
    const appMetadataObjects = {};
    if (appMetadata) {
      Object.keys(appMetadata).map(function(key) {
        const serializedAmdt = appMetadata[key];
        appMetadataObjects[key] = {
          clientId: serializedAmdt.client_id,
          environment: serializedAmdt.environment,
          familyId: serializedAmdt.family_id
        };
      });
    }
    return appMetadataObjects;
  }
  /**
   * Deserialize an inMemory Cache
   * @param jsonCache - JSON blob cache
   */
  static deserializeAllCache(jsonCache) {
    return {
      accounts: jsonCache.Account ? this.deserializeAccounts(jsonCache.Account) : {},
      idTokens: jsonCache.IdToken ? this.deserializeIdTokens(jsonCache.IdToken) : {},
      accessTokens: jsonCache.AccessToken ? this.deserializeAccessTokens(jsonCache.AccessToken) : {},
      refreshTokens: jsonCache.RefreshToken ? this.deserializeRefreshTokens(jsonCache.RefreshToken) : {},
      appMetadata: jsonCache.AppMetadata ? this.deserializeAppMetadata(jsonCache.AppMetadata) : {}
    };
  }
};

// node_modules/@azure/msal-node/dist/utils/Constants.mjs
var MANAGED_IDENTITY_DEFAULT_TENANT = "managed_identity";
var DEFAULT_AUTHORITY_FOR_MANAGED_IDENTITY = `https://login.microsoftonline.com/${MANAGED_IDENTITY_DEFAULT_TENANT}/`;
var ManagedIdentityQueryParameters = {
  API_VERSION: "api-version",
  RESOURCE: "resource",
  SHA256_TOKEN_TO_REFRESH: "token_sha256_to_refresh",
  XMS_CC: "xms_cc"
};
var ManagedIdentityEnvironmentVariableNames = {
  AZURE_POD_IDENTITY_AUTHORITY_HOST: "AZURE_POD_IDENTITY_AUTHORITY_HOST",
  DEFAULT_IDENTITY_CLIENT_ID: "DEFAULT_IDENTITY_CLIENT_ID",
  IDENTITY_ENDPOINT: "IDENTITY_ENDPOINT",
  IDENTITY_HEADER: "IDENTITY_HEADER",
  IDENTITY_SERVER_THUMBPRINT: "IDENTITY_SERVER_THUMBPRINT",
  IMDS_ENDPOINT: "IMDS_ENDPOINT",
  MSI_ENDPOINT: "MSI_ENDPOINT",
  MSI_SECRET: "MSI_SECRET"
};
var ManagedIdentitySourceNames = {
  APP_SERVICE: "AppService",
  AZURE_ARC: "AzureArc",
  CLOUD_SHELL: "CloudShell",
  DEFAULT_TO_IMDS: "DefaultToImds",
  IMDS: "Imds",
  MACHINE_LEARNING: "MachineLearning",
  SERVICE_FABRIC: "ServiceFabric"
};
var ManagedIdentityIdType = {
  SYSTEM_ASSIGNED: "system-assigned",
  USER_ASSIGNED_CLIENT_ID: "user-assigned-client-id",
  USER_ASSIGNED_RESOURCE_ID: "user-assigned-resource-id",
  USER_ASSIGNED_OBJECT_ID: "user-assigned-object-id"
};
var HttpMethod2 = {
  GET: "get",
  POST: "post"
};
var ProxyStatus = {
  SUCCESS_RANGE_START: HttpStatus.SUCCESS_RANGE_START,
  SUCCESS_RANGE_END: HttpStatus.SUCCESS_RANGE_END,
  SERVER_ERROR: HttpStatus.SERVER_ERROR
};
var REGION_ENVIRONMENT_VARIABLE = "REGION_NAME";
var MSAL_FORCE_REGION = "MSAL_FORCE_REGION";
var RANDOM_OCTET_SIZE = 32;
var Hash = {
  SHA256: "sha256"
};
var CharSet = {
  CV_CHARSET: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~"
};
var CACHE = {
  KEY_SEPARATOR: "-"
};
var Constants2 = {
  MSAL_SKU: "msal.js.node",
  JWT_BEARER_ASSERTION_TYPE: "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
  AUTHORIZATION_PENDING: "authorization_pending",
  HTTP_PROTOCOL: "http://",
  LOCALHOST: "localhost"
};
var ApiId = {
  acquireTokenSilent: 62,
  acquireTokenByUsernamePassword: 371,
  acquireTokenByDeviceCode: 671,
  acquireTokenByClientCredential: 771,
  acquireTokenByCode: 871,
  acquireTokenByRefreshToken: 872
};
var JwtConstants = {
  RSA_256: "RS256",
  PSS_256: "PS256",
  X5T_256: "x5t#S256",
  X5T: "x5t",
  X5C: "x5c",
  AUDIENCE: "aud",
  EXPIRATION_TIME: "exp",
  ISSUER: "iss",
  SUBJECT: "sub",
  NOT_BEFORE: "nbf",
  JWT_ID: "jti"
};

// node_modules/@azure/msal-node/dist/utils/NetworkUtils.mjs
var NetworkUtils = class {
  static getNetworkResponse(headers, body, statusCode) {
    return {
      headers,
      body,
      status: statusCode
    };
  }
  /*
   * Utility function that converts a URL object into an ordinary options object as expected by the
   * http.request and https.request APIs.
   * https://github.com/nodejs/node/blob/main/lib/internal/url.js#L1090
   */
  static urlToHttpOptions(url) {
    const options = {
      protocol: url.protocol,
      hostname: url.hostname && url.hostname.startsWith("[") ? url.hostname.slice(1, -1) : url.hostname,
      hash: url.hash,
      search: url.search,
      pathname: url.pathname,
      path: `${url.pathname || ""}${url.search || ""}`,
      href: url.href
    };
    if (url.port !== "") {
      options.port = Number(url.port);
    }
    if (url.username || url.password) {
      options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;
    }
    return options;
  }
};

// node_modules/@azure/msal-node/dist/network/HttpClient.mjs
var import_http = __toESM(require("http"), 1);
var import_https = __toESM(require("https"), 1);
var HttpClient = class {
  constructor(proxyUrl, customAgentOptions) {
    this.proxyUrl = proxyUrl || "";
    this.customAgentOptions = customAgentOptions || {};
  }
  /**
   * Http Get request
   * @param url
   * @param options
   */
  async sendGetRequestAsync(url, options, timeout) {
    if (this.proxyUrl) {
      return networkRequestViaProxy(url, this.proxyUrl, HttpMethod2.GET, options, this.customAgentOptions, timeout);
    } else {
      return networkRequestViaHttps(url, HttpMethod2.GET, options, this.customAgentOptions, timeout);
    }
  }
  /**
   * Http Post request
   * @param url
   * @param options
   */
  async sendPostRequestAsync(url, options) {
    if (this.proxyUrl) {
      return networkRequestViaProxy(url, this.proxyUrl, HttpMethod2.POST, options, this.customAgentOptions);
    } else {
      return networkRequestViaHttps(url, HttpMethod2.POST, options, this.customAgentOptions);
    }
  }
};
var networkRequestViaProxy = (destinationUrlString, proxyUrlString, httpMethod, options, agentOptions, timeout) => {
  const destinationUrl = new URL(destinationUrlString);
  const proxyUrl = new URL(proxyUrlString);
  const headers = options?.headers || {};
  const tunnelRequestOptions = {
    host: proxyUrl.hostname,
    port: proxyUrl.port,
    method: "CONNECT",
    path: destinationUrl.hostname,
    headers
  };
  if (agentOptions && Object.keys(agentOptions).length) {
    tunnelRequestOptions.agent = new import_http.default.Agent(agentOptions);
  }
  let postRequestStringContent = "";
  if (httpMethod === HttpMethod2.POST) {
    const body = options?.body || "";
    postRequestStringContent = `Content-Type: application/x-www-form-urlencoded\r
Content-Length: ${body.length}\r
\r
${body}`;
  } else {
    if (timeout) {
      tunnelRequestOptions.timeout = timeout;
    }
  }
  const outgoingRequestString = `${httpMethod.toUpperCase()} ${destinationUrl.href} HTTP/1.1\r
Host: ${destinationUrl.host}\r
Connection: close\r
` + postRequestStringContent + "\r\n";
  return new Promise((resolve, reject) => {
    const request2 = import_http.default.request(tunnelRequestOptions);
    if (timeout) {
      request2.on("timeout", () => {
        request2.destroy();
        reject(new Error("Request time out"));
      });
    }
    request2.end();
    request2.on("connect", (response, socket) => {
      const proxyStatusCode = response?.statusCode || ProxyStatus.SERVER_ERROR;
      if (proxyStatusCode < ProxyStatus.SUCCESS_RANGE_START || proxyStatusCode > ProxyStatus.SUCCESS_RANGE_END) {
        request2.destroy();
        socket.destroy();
        reject(new Error(`Error connecting to proxy. Http status code: ${response.statusCode}. Http status message: ${response?.statusMessage || "Unknown"}`));
      }
      socket.write(outgoingRequestString);
      const data = [];
      socket.on("data", (chunk) => {
        data.push(chunk);
      });
      socket.on("end", () => {
        const dataString = Buffer.concat([...data]).toString();
        const dataStringArray = dataString.split("\r\n");
        const httpStatusCode = parseInt(dataStringArray[0].split(" ")[1]);
        const statusMessage = dataStringArray[0].split(" ").slice(2).join(" ");
        const body = dataStringArray[dataStringArray.length - 1];
        const headersArray = dataStringArray.slice(1, dataStringArray.length - 2);
        const entries = /* @__PURE__ */ new Map();
        headersArray.forEach((header) => {
          const headerKeyValue = header.split(new RegExp(/:\s(.*)/s));
          const headerKey = headerKeyValue[0];
          let headerValue = headerKeyValue[1];
          try {
            const object = JSON.parse(headerValue);
            if (object && typeof object === "object") {
              headerValue = object;
            }
          } catch (e) {
          }
          entries.set(headerKey, headerValue);
        });
        const headers2 = Object.fromEntries(entries);
        const parsedHeaders = headers2;
        const networkResponse = NetworkUtils.getNetworkResponse(parsedHeaders, parseBody(httpStatusCode, statusMessage, parsedHeaders, body), httpStatusCode);
        if ((httpStatusCode < HttpStatus.SUCCESS_RANGE_START || httpStatusCode > HttpStatus.SUCCESS_RANGE_END) && // do not destroy the request for the device code flow
        networkResponse.body["error"] !== Constants2.AUTHORIZATION_PENDING) {
          request2.destroy();
        }
        resolve(networkResponse);
      });
      socket.on("error", (chunk) => {
        request2.destroy();
        socket.destroy();
        reject(new Error(chunk.toString()));
      });
    });
    request2.on("error", (chunk) => {
      request2.destroy();
      reject(new Error(chunk.toString()));
    });
  });
};
var networkRequestViaHttps = (urlString, httpMethod, options, agentOptions, timeout) => {
  const isPostRequest = httpMethod === HttpMethod2.POST;
  const body = options?.body || "";
  const url = new URL(urlString);
  const headers = options?.headers || {};
  const customOptions = {
    method: httpMethod,
    headers,
    ...NetworkUtils.urlToHttpOptions(url)
  };
  if (agentOptions && Object.keys(agentOptions).length) {
    customOptions.agent = new import_https.default.Agent(agentOptions);
  }
  if (isPostRequest) {
    customOptions.headers = {
      ...customOptions.headers,
      "Content-Length": body.length
    };
  } else {
    if (timeout) {
      customOptions.timeout = timeout;
    }
  }
  return new Promise((resolve, reject) => {
    let request2;
    if (customOptions.protocol === "http:") {
      request2 = import_http.default.request(customOptions);
    } else {
      request2 = import_https.default.request(customOptions);
    }
    if (isPostRequest) {
      request2.write(body);
    }
    if (timeout) {
      request2.on("timeout", () => {
        request2.destroy();
        reject(new Error("Request time out"));
      });
    }
    request2.end();
    request2.on("response", (response) => {
      const headers2 = response.headers;
      const statusCode = response.statusCode;
      const statusMessage = response.statusMessage;
      const data = [];
      response.on("data", (chunk) => {
        data.push(chunk);
      });
      response.on("end", () => {
        const body2 = Buffer.concat([...data]).toString();
        const parsedHeaders = headers2;
        const networkResponse = NetworkUtils.getNetworkResponse(parsedHeaders, parseBody(statusCode, statusMessage, parsedHeaders, body2), statusCode);
        if ((statusCode < HttpStatus.SUCCESS_RANGE_START || statusCode > HttpStatus.SUCCESS_RANGE_END) && // do not destroy the request for the device code flow
        networkResponse.body["error"] !== Constants2.AUTHORIZATION_PENDING) {
          request2.destroy();
        }
        resolve(networkResponse);
      });
    });
    request2.on("error", (chunk) => {
      request2.destroy();
      reject(new Error(chunk.toString()));
    });
  });
};
var parseBody = (statusCode, statusMessage, headers, body) => {
  let parsedBody;
  try {
    parsedBody = JSON.parse(body);
  } catch (error) {
    let errorType;
    let errorDescriptionHelper;
    if (statusCode >= HttpStatus.CLIENT_ERROR_RANGE_START && statusCode <= HttpStatus.CLIENT_ERROR_RANGE_END) {
      errorType = "client_error";
      errorDescriptionHelper = "A client";
    } else if (statusCode >= HttpStatus.SERVER_ERROR_RANGE_START && statusCode <= HttpStatus.SERVER_ERROR_RANGE_END) {
      errorType = "server_error";
      errorDescriptionHelper = "A server";
    } else {
      errorType = "unknown_error";
      errorDescriptionHelper = "An unknown";
    }
    parsedBody = {
      error: errorType,
      error_description: `${errorDescriptionHelper} error occured.
Http status code: ${statusCode}
Http status message: ${statusMessage || "Unknown"}
Headers: ${JSON.stringify(headers)}`
    };
  }
  return parsedBody;
};

// node_modules/@azure/msal-node/dist/error/ManagedIdentityErrorCodes.mjs
var invalidFileExtension = "invalid_file_extension";
var invalidFilePath = "invalid_file_path";
var invalidManagedIdentityIdType = "invalid_managed_identity_id_type";
var invalidSecret = "invalid_secret";
var missingId = "missing_client_id";
var networkUnavailable = "network_unavailable";
var platformNotSupported = "platform_not_supported";
var unableToCreateAzureArc = "unable_to_create_azure_arc";
var unableToCreateCloudShell = "unable_to_create_cloud_shell";
var unableToCreateSource = "unable_to_create_source";
var unableToReadSecretFile = "unable_to_read_secret_file";
var userAssignedNotAvailableAtRuntime = "user_assigned_not_available_at_runtime";
var wwwAuthenticateHeaderMissing = "www_authenticate_header_missing";
var wwwAuthenticateHeaderUnsupportedFormat = "www_authenticate_header_unsupported_format";
var MsiEnvironmentVariableUrlMalformedErrorCodes = {
  [ManagedIdentityEnvironmentVariableNames.AZURE_POD_IDENTITY_AUTHORITY_HOST]: "azure_pod_identity_authority_host_url_malformed",
  [ManagedIdentityEnvironmentVariableNames.IDENTITY_ENDPOINT]: "identity_endpoint_url_malformed",
  [ManagedIdentityEnvironmentVariableNames.IMDS_ENDPOINT]: "imds_endpoint_url_malformed",
  [ManagedIdentityEnvironmentVariableNames.MSI_ENDPOINT]: "msi_endpoint_url_malformed"
};

// node_modules/@azure/msal-node/dist/error/ManagedIdentityError.mjs
var ManagedIdentityErrorMessages = {
  [invalidFileExtension]: "The file path in the WWW-Authenticate header does not contain a .key file.",
  [invalidFilePath]: "The file path in the WWW-Authenticate header is not in a valid Windows or Linux Format.",
  [invalidManagedIdentityIdType]: "More than one ManagedIdentityIdType was provided.",
  [invalidSecret]: "The secret in the file on the file path in the WWW-Authenticate header is greater than 4096 bytes.",
  [platformNotSupported]: "The platform is not supported by Azure Arc. Azure Arc only supports Windows and Linux.",
  [missingId]: "A ManagedIdentityId id was not provided.",
  [MsiEnvironmentVariableUrlMalformedErrorCodes.AZURE_POD_IDENTITY_AUTHORITY_HOST]: `The Managed Identity's '${ManagedIdentityEnvironmentVariableNames.AZURE_POD_IDENTITY_AUTHORITY_HOST}' environment variable is malformed.`,
  [MsiEnvironmentVariableUrlMalformedErrorCodes.IDENTITY_ENDPOINT]: `The Managed Identity's '${ManagedIdentityEnvironmentVariableNames.IDENTITY_ENDPOINT}' environment variable is malformed.`,
  [MsiEnvironmentVariableUrlMalformedErrorCodes.IMDS_ENDPOINT]: `The Managed Identity's '${ManagedIdentityEnvironmentVariableNames.IMDS_ENDPOINT}' environment variable is malformed.`,
  [MsiEnvironmentVariableUrlMalformedErrorCodes.MSI_ENDPOINT]: `The Managed Identity's '${ManagedIdentityEnvironmentVariableNames.MSI_ENDPOINT}' environment variable is malformed.`,
  [networkUnavailable]: "Authentication unavailable. The request to the managed identity endpoint timed out.",
  [unableToCreateAzureArc]: "Azure Arc Managed Identities can only be system assigned.",
  [unableToCreateCloudShell]: "Cloud Shell Managed Identities can only be system assigned.",
  [unableToCreateSource]: "Unable to create a Managed Identity source based on environment variables.",
  [unableToReadSecretFile]: "Unable to read the secret file.",
  [userAssignedNotAvailableAtRuntime]: "Service Fabric user assigned managed identity ClientId or ResourceId is not configurable at runtime.",
  [wwwAuthenticateHeaderMissing]: "A 401 response was received form the Azure Arc Managed Identity, but the www-authenticate header is missing.",
  [wwwAuthenticateHeaderUnsupportedFormat]: "A 401 response was received form the Azure Arc Managed Identity, but the www-authenticate header is in an unsupported format."
};
var ManagedIdentityError = class _ManagedIdentityError extends AuthError {
  constructor(errorCode) {
    super(errorCode, ManagedIdentityErrorMessages[errorCode]);
    this.name = "ManagedIdentityError";
    Object.setPrototypeOf(this, _ManagedIdentityError.prototype);
  }
};
function createManagedIdentityError(errorCode) {
  return new ManagedIdentityError(errorCode);
}

// node_modules/@azure/msal-node/dist/error/NodeAuthError.mjs
var NodeAuthErrorMessage = {
  invalidLoopbackAddressType: {
    code: "invalid_loopback_server_address_type",
    desc: "Loopback server address is not type string. This is unexpected."
  },
  unableToLoadRedirectUri: {
    code: "unable_to_load_redirectUrl",
    desc: "Loopback server callback was invoked without a url. This is unexpected."
  },
  noAuthCodeInResponse: {
    code: "no_auth_code_in_response",
    desc: "No auth code found in the server response. Please check your network trace to determine what happened."
  },
  noLoopbackServerExists: {
    code: "no_loopback_server_exists",
    desc: "No loopback server exists yet."
  },
  loopbackServerAlreadyExists: {
    code: "loopback_server_already_exists",
    desc: "Loopback server already exists. Cannot create another."
  },
  loopbackServerTimeout: {
    code: "loopback_server_timeout",
    desc: "Timed out waiting for auth code listener to be registered."
  },
  stateNotFoundError: {
    code: "state_not_found",
    desc: "State not found. Please verify that the request originated from msal."
  },
  thumbprintMissing: {
    code: "thumbprint_missing_from_client_certificate",
    desc: "Client certificate does not contain a SHA-1 or SHA-256 thumbprint."
  },
  redirectUriNotSupported: {
    code: "redirect_uri_not_supported",
    desc: "RedirectUri is not supported in this scenario. Please remove redirectUri from the request."
  }
};
var NodeAuthError = class _NodeAuthError extends AuthError {
  constructor(errorCode, errorMessage) {
    super(errorCode, errorMessage);
    this.name = "NodeAuthError";
  }
  /**
   * Creates an error thrown if loopback server address is of type string.
   */
  static createInvalidLoopbackAddressTypeError() {
    return new _NodeAuthError(NodeAuthErrorMessage.invalidLoopbackAddressType.code, `${NodeAuthErrorMessage.invalidLoopbackAddressType.desc}`);
  }
  /**
   * Creates an error thrown if the loopback server is unable to get a url.
   */
  static createUnableToLoadRedirectUrlError() {
    return new _NodeAuthError(NodeAuthErrorMessage.unableToLoadRedirectUri.code, `${NodeAuthErrorMessage.unableToLoadRedirectUri.desc}`);
  }
  /**
   * Creates an error thrown if the server response does not contain an auth code.
   */
  static createNoAuthCodeInResponseError() {
    return new _NodeAuthError(NodeAuthErrorMessage.noAuthCodeInResponse.code, `${NodeAuthErrorMessage.noAuthCodeInResponse.desc}`);
  }
  /**
   * Creates an error thrown if the loopback server has not been spun up yet.
   */
  static createNoLoopbackServerExistsError() {
    return new _NodeAuthError(NodeAuthErrorMessage.noLoopbackServerExists.code, `${NodeAuthErrorMessage.noLoopbackServerExists.desc}`);
  }
  /**
   * Creates an error thrown if a loopback server already exists when attempting to create another one.
   */
  static createLoopbackServerAlreadyExistsError() {
    return new _NodeAuthError(NodeAuthErrorMessage.loopbackServerAlreadyExists.code, `${NodeAuthErrorMessage.loopbackServerAlreadyExists.desc}`);
  }
  /**
   * Creates an error thrown if the loopback server times out registering the auth code listener.
   */
  static createLoopbackServerTimeoutError() {
    return new _NodeAuthError(NodeAuthErrorMessage.loopbackServerTimeout.code, `${NodeAuthErrorMessage.loopbackServerTimeout.desc}`);
  }
  /**
   * Creates an error thrown when the state is not present.
   */
  static createStateNotFoundError() {
    return new _NodeAuthError(NodeAuthErrorMessage.stateNotFoundError.code, NodeAuthErrorMessage.stateNotFoundError.desc);
  }
  /**
   * Creates an error thrown when client certificate was provided, but neither the SHA-1 or SHA-256 thumbprints were provided
   */
  static createThumbprintMissingError() {
    return new _NodeAuthError(NodeAuthErrorMessage.thumbprintMissing.code, NodeAuthErrorMessage.thumbprintMissing.desc);
  }
  /**
   * Creates an error thrown when redirectUri is provided in an unsupported scenario
   */
  static createRedirectUriNotSupportedError() {
    return new _NodeAuthError(NodeAuthErrorMessage.redirectUriNotSupported.code, NodeAuthErrorMessage.redirectUriNotSupported.desc);
  }
};

// node_modules/@azure/msal-node/dist/config/Configuration.mjs
var DEFAULT_AUTH_OPTIONS = {
  clientId: Constants.EMPTY_STRING,
  authority: Constants.DEFAULT_AUTHORITY,
  clientSecret: Constants.EMPTY_STRING,
  clientAssertion: Constants.EMPTY_STRING,
  clientCertificate: {
    thumbprint: Constants.EMPTY_STRING,
    thumbprintSha256: Constants.EMPTY_STRING,
    privateKey: Constants.EMPTY_STRING,
    x5c: Constants.EMPTY_STRING
  },
  knownAuthorities: [],
  cloudDiscoveryMetadata: Constants.EMPTY_STRING,
  authorityMetadata: Constants.EMPTY_STRING,
  clientCapabilities: [],
  protocolMode: ProtocolMode.AAD,
  azureCloudOptions: {
    azureCloudInstance: AzureCloudInstance.None,
    tenant: Constants.EMPTY_STRING
  },
  skipAuthorityMetadataCache: false,
  encodeExtraQueryParams: false
};
var DEFAULT_CACHE_OPTIONS2 = {
  claimsBasedCachingEnabled: false
};
var DEFAULT_LOGGER_OPTIONS = {
  loggerCallback: () => {
  },
  piiLoggingEnabled: false,
  logLevel: LogLevel.Info
};
var DEFAULT_SYSTEM_OPTIONS2 = {
  loggerOptions: DEFAULT_LOGGER_OPTIONS,
  networkClient: new HttpClient(),
  proxyUrl: Constants.EMPTY_STRING,
  customAgentOptions: {},
  disableInternalRetries: false
};
var DEFAULT_TELEMETRY_OPTIONS2 = {
  application: {
    appName: Constants.EMPTY_STRING,
    appVersion: Constants.EMPTY_STRING
  }
};
function buildAppConfiguration({ auth: auth2, broker, cache, system, telemetry }) {
  const systemOptions = {
    ...DEFAULT_SYSTEM_OPTIONS2,
    networkClient: new HttpClient(system?.proxyUrl, system?.customAgentOptions),
    loggerOptions: system?.loggerOptions || DEFAULT_LOGGER_OPTIONS,
    disableInternalRetries: system?.disableInternalRetries || false
  };
  if (!!auth2.clientCertificate && !!!auth2.clientCertificate.thumbprint && !!!auth2.clientCertificate.thumbprintSha256) {
    throw NodeAuthError.createStateNotFoundError();
  }
  return {
    auth: { ...DEFAULT_AUTH_OPTIONS, ...auth2 },
    broker: { ...broker },
    cache: { ...DEFAULT_CACHE_OPTIONS2, ...cache },
    system: { ...systemOptions, ...system },
    telemetry: { ...DEFAULT_TELEMETRY_OPTIONS2, ...telemetry }
  };
}

// node_modules/uuid/dist/esm-node/rng.js
var import_crypto = __toESM(require("crypto"));
var rnds8Pool = new Uint8Array(256);
var poolPtr = rnds8Pool.length;
function rng() {
  if (poolPtr > rnds8Pool.length - 16) {
    import_crypto.default.randomFillSync(rnds8Pool);
    poolPtr = 0;
  }
  return rnds8Pool.slice(poolPtr, poolPtr += 16);
}

// node_modules/uuid/dist/esm-node/regex.js
var regex_default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;

// node_modules/uuid/dist/esm-node/validate.js
function validate(uuid) {
  return typeof uuid === "string" && regex_default.test(uuid);
}
var validate_default = validate;

// node_modules/uuid/dist/esm-node/stringify.js
var byteToHex = [];
for (let i = 0; i < 256; ++i) {
  byteToHex.push((i + 256).toString(16).substr(1));
}
function stringify(arr, offset = 0) {
  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + "-" + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + "-" + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + "-" + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + "-" + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();
  if (!validate_default(uuid)) {
    throw TypeError("Stringified UUID is invalid");
  }
  return uuid;
}
var stringify_default = stringify;

// node_modules/uuid/dist/esm-node/v4.js
function v4(options, buf, offset) {
  options = options || {};
  const rnds = options.random || (options.rng || rng)();
  rnds[6] = rnds[6] & 15 | 64;
  rnds[8] = rnds[8] & 63 | 128;
  if (buf) {
    offset = offset || 0;
    for (let i = 0; i < 16; ++i) {
      buf[offset + i] = rnds[i];
    }
    return buf;
  }
  return stringify_default(rnds);
}
var v4_default = v4;

// node_modules/@azure/msal-node/dist/crypto/GuidGenerator.mjs
var GuidGenerator = class {
  /**
   *
   * RFC4122: The version 4 UUID is meant for generating UUIDs from truly-random or pseudo-random numbers.
   * uuidv4 generates guids from cryprtographically-string random
   */
  generateGuid() {
    return v4_default();
  }
  /**
   * verifies if a string is  GUID
   * @param guid
   */
  isGuid(guid) {
    const regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;
    return regexGuid.test(guid);
  }
};

// node_modules/@azure/msal-node/dist/utils/EncodingUtils.mjs
var EncodingUtils = class _EncodingUtils {
  /**
   * 'utf8': Multibyte encoded Unicode characters. Many web pages and other document formats use UTF-8.
   * 'base64': Base64 encoding.
   *
   * @param str text
   */
  static base64Encode(str, encoding) {
    return Buffer.from(str, encoding).toString(EncodingTypes.BASE64);
  }
  /**
   * encode a URL
   * @param str
   */
  static base64EncodeUrl(str, encoding) {
    return _EncodingUtils.base64Encode(str, encoding).replace(/=/g, Constants.EMPTY_STRING).replace(/\+/g, "-").replace(/\//g, "_");
  }
  /**
   * 'utf8': Multibyte encoded Unicode characters. Many web pages and other document formats use UTF-8.
   * 'base64': Base64 encoding.
   *
   * @param base64Str Base64 encoded text
   */
  static base64Decode(base64Str) {
    return Buffer.from(base64Str, EncodingTypes.BASE64).toString("utf8");
  }
  /**
   * @param base64Str Base64 encoded Url
   */
  static base64DecodeUrl(base64Str) {
    let str = base64Str.replace(/-/g, "+").replace(/_/g, "/");
    while (str.length % 4) {
      str += "=";
    }
    return _EncodingUtils.base64Decode(str);
  }
};

// node_modules/@azure/msal-node/dist/crypto/HashUtils.mjs
var import_crypto2 = __toESM(require("crypto"), 1);
var HashUtils = class {
  /**
   * generate 'SHA256' hash
   * @param buffer
   */
  sha256(buffer) {
    return import_crypto2.default.createHash(Hash.SHA256).update(buffer).digest();
  }
};

// node_modules/@azure/msal-node/dist/crypto/PkceGenerator.mjs
var import_crypto3 = __toESM(require("crypto"), 1);
var PkceGenerator = class {
  constructor() {
    this.hashUtils = new HashUtils();
  }
  /**
   * generates the codeVerfier and the challenge from the codeVerfier
   * reference: https://tools.ietf.org/html/rfc7636#section-4.1 and https://tools.ietf.org/html/rfc7636#section-4.2
   */
  async generatePkceCodes() {
    const verifier = this.generateCodeVerifier();
    const challenge = this.generateCodeChallengeFromVerifier(verifier);
    return { verifier, challenge };
  }
  /**
   * generates the codeVerfier; reference: https://tools.ietf.org/html/rfc7636#section-4.1
   */
  generateCodeVerifier() {
    const charArr = [];
    const maxNumber = 256 - 256 % CharSet.CV_CHARSET.length;
    while (charArr.length <= RANDOM_OCTET_SIZE) {
      const byte = import_crypto3.default.randomBytes(1)[0];
      if (byte >= maxNumber) {
        continue;
      }
      const index = byte % CharSet.CV_CHARSET.length;
      charArr.push(CharSet.CV_CHARSET[index]);
    }
    const verifier = charArr.join(Constants.EMPTY_STRING);
    return EncodingUtils.base64EncodeUrl(verifier);
  }
  /**
   * generate the challenge from the codeVerfier; reference: https://tools.ietf.org/html/rfc7636#section-4.2
   * @param codeVerifier
   */
  generateCodeChallengeFromVerifier(codeVerifier) {
    return EncodingUtils.base64EncodeUrl(this.hashUtils.sha256(codeVerifier).toString(EncodingTypes.BASE64), EncodingTypes.BASE64);
  }
};

// node_modules/@azure/msal-node/dist/crypto/CryptoProvider.mjs
var CryptoProvider = class {
  constructor() {
    this.pkceGenerator = new PkceGenerator();
    this.guidGenerator = new GuidGenerator();
    this.hashUtils = new HashUtils();
  }
  /**
   * base64 URL safe encoded string
   */
  base64UrlEncode() {
    throw new Error("Method not implemented.");
  }
  /**
   * Stringifies and base64Url encodes input public key
   * @param inputKid - public key id
   * @returns Base64Url encoded public key
   */
  encodeKid() {
    throw new Error("Method not implemented.");
  }
  /**
   * Creates a new random GUID - used to populate state and nonce.
   * @returns string (GUID)
   */
  createNewGuid() {
    return this.guidGenerator.generateGuid();
  }
  /**
   * Encodes input string to base64.
   * @param input - string to be encoded
   */
  base64Encode(input) {
    return EncodingUtils.base64Encode(input);
  }
  /**
   * Decodes input string from base64.
   * @param input - string to be decoded
   */
  base64Decode(input) {
    return EncodingUtils.base64Decode(input);
  }
  /**
   * Generates PKCE codes used in Authorization Code Flow.
   */
  generatePkceCodes() {
    return this.pkceGenerator.generatePkceCodes();
  }
  /**
   * Generates a keypair, stores it and returns a thumbprint - not yet implemented for node
   */
  getPublicKeyThumbprint() {
    throw new Error("Method not implemented.");
  }
  /**
   * Removes cryptographic keypair from key store matching the keyId passed in
   * @param kid - public key id
   */
  removeTokenBindingKey() {
    throw new Error("Method not implemented.");
  }
  /**
   * Removes all cryptographic keys from Keystore
   */
  clearKeystore() {
    throw new Error("Method not implemented.");
  }
  /**
   * Signs the given object as a jwt payload with private key retrieved by given kid - currently not implemented for node
   */
  signJwt() {
    throw new Error("Method not implemented.");
  }
  /**
   * Returns the SHA-256 hash of an input string
   */
  async hashString(plainText) {
    return EncodingUtils.base64EncodeUrl(this.hashUtils.sha256(plainText).toString(EncodingTypes.BASE64), EncodingTypes.BASE64);
  }
};

// node_modules/@azure/msal-node/dist/cache/CacheHelpers.mjs
function generateCredentialKey(credential) {
  const familyId = credential.credentialType === CredentialType.REFRESH_TOKEN && credential.familyId || credential.clientId;
  const scheme = credential.tokenType && credential.tokenType.toLowerCase() !== AuthenticationScheme.BEARER.toLowerCase() ? credential.tokenType.toLowerCase() : "";
  const credentialKey = [
    credential.homeAccountId,
    credential.environment,
    credential.credentialType,
    familyId,
    credential.realm || "",
    credential.target || "",
    credential.requestedClaimsHash || "",
    scheme
  ];
  return credentialKey.join(CACHE.KEY_SEPARATOR).toLowerCase();
}
function generateAccountKey(account) {
  const homeTenantId = account.homeAccountId.split(".")[1];
  const accountKey = [
    account.homeAccountId,
    account.environment,
    homeTenantId || account.tenantId || ""
  ];
  return accountKey.join(CACHE.KEY_SEPARATOR).toLowerCase();
}

// node_modules/@azure/msal-node/dist/cache/NodeStorage.mjs
var NodeStorage = class extends CacheManager {
  constructor(logger, clientId, cryptoImpl, staticAuthorityOptions) {
    super(clientId, cryptoImpl, logger, new StubPerformanceClient(), staticAuthorityOptions);
    this.cache = {};
    this.changeEmitters = [];
    this.logger = logger;
  }
  /**
   * Queue up callbacks
   * @param func - a callback function for cache change indication
   */
  registerChangeEmitter(func) {
    this.changeEmitters.push(func);
  }
  /**
   * Invoke the callback when cache changes
   */
  emitChange() {
    this.changeEmitters.forEach((func) => func.call(null));
  }
  /**
   * Converts cacheKVStore to InMemoryCache
   * @param cache - key value store
   */
  cacheToInMemoryCache(cache) {
    const inMemoryCache = {
      accounts: {},
      idTokens: {},
      accessTokens: {},
      refreshTokens: {},
      appMetadata: {}
    };
    for (const key in cache) {
      const value = cache[key];
      if (typeof value !== "object") {
        continue;
      }
      if (value instanceof AccountEntity) {
        inMemoryCache.accounts[key] = value;
      } else if (CacheHelpers_exports.isIdTokenEntity(value)) {
        inMemoryCache.idTokens[key] = value;
      } else if (CacheHelpers_exports.isAccessTokenEntity(value)) {
        inMemoryCache.accessTokens[key] = value;
      } else if (CacheHelpers_exports.isRefreshTokenEntity(value)) {
        inMemoryCache.refreshTokens[key] = value;
      } else if (CacheHelpers_exports.isAppMetadataEntity(key, value)) {
        inMemoryCache.appMetadata[key] = value;
      } else {
        continue;
      }
    }
    return inMemoryCache;
  }
  /**
   * converts inMemoryCache to CacheKVStore
   * @param inMemoryCache - kvstore map for inmemory
   */
  inMemoryCacheToCache(inMemoryCache) {
    let cache = this.getCache();
    cache = {
      ...cache,
      ...inMemoryCache.accounts,
      ...inMemoryCache.idTokens,
      ...inMemoryCache.accessTokens,
      ...inMemoryCache.refreshTokens,
      ...inMemoryCache.appMetadata
    };
    return cache;
  }
  /**
   * gets the current in memory cache for the client
   */
  getInMemoryCache() {
    this.logger.trace("Getting in-memory cache");
    const inMemoryCache = this.cacheToInMemoryCache(this.getCache());
    return inMemoryCache;
  }
  /**
   * sets the current in memory cache for the client
   * @param inMemoryCache - key value map in memory
   */
  setInMemoryCache(inMemoryCache) {
    this.logger.trace("Setting in-memory cache");
    const cache = this.inMemoryCacheToCache(inMemoryCache);
    this.setCache(cache);
    this.emitChange();
  }
  /**
   * get the current cache key-value store
   */
  getCache() {
    this.logger.trace("Getting cache key-value store");
    return this.cache;
  }
  /**
   * sets the current cache (key value store)
   * @param cacheMap - key value map
   */
  setCache(cache) {
    this.logger.trace("Setting cache key value store");
    this.cache = cache;
    this.emitChange();
  }
  /**
   * Gets cache item with given key.
   * @param key - lookup key for the cache entry
   */
  getItem(key) {
    this.logger.tracePii(`Item key: ${key}`);
    const cache = this.getCache();
    return cache[key];
  }
  /**
   * Gets cache item with given key-value
   * @param key - lookup key for the cache entry
   * @param value - value of the cache entry
   */
  setItem(key, value) {
    this.logger.tracePii(`Item key: ${key}`);
    const cache = this.getCache();
    cache[key] = value;
    this.setCache(cache);
  }
  generateCredentialKey(credential) {
    return generateCredentialKey(credential);
  }
  generateAccountKey(account) {
    return generateAccountKey(account);
  }
  getAccountKeys() {
    const inMemoryCache = this.getInMemoryCache();
    const accountKeys = Object.keys(inMemoryCache.accounts);
    return accountKeys;
  }
  getTokenKeys() {
    const inMemoryCache = this.getInMemoryCache();
    const tokenKeys = {
      idToken: Object.keys(inMemoryCache.idTokens),
      accessToken: Object.keys(inMemoryCache.accessTokens),
      refreshToken: Object.keys(inMemoryCache.refreshTokens)
    };
    return tokenKeys;
  }
  /**
   * Reads account from cache, builds it into an account entity and returns it.
   * @param accountKey - lookup key to fetch cache type AccountEntity
   * @returns
   */
  getAccount(accountKey) {
    const cachedAccount = this.getItem(accountKey);
    return cachedAccount ? Object.assign(new AccountEntity(), this.getItem(accountKey)) : null;
  }
  /**
   * set account entity
   * @param account - cache value to be set of type AccountEntity
   */
  async setAccount(account) {
    const accountKey = this.generateAccountKey(account.getAccountInfo());
    this.setItem(accountKey, account);
  }
  /**
   * fetch the idToken credential
   * @param idTokenKey - lookup key to fetch cache type IdTokenEntity
   */
  getIdTokenCredential(idTokenKey) {
    const idToken = this.getItem(idTokenKey);
    if (CacheHelpers_exports.isIdTokenEntity(idToken)) {
      return idToken;
    }
    return null;
  }
  /**
   * set idToken credential
   * @param idToken - cache value to be set of type IdTokenEntity
   */
  async setIdTokenCredential(idToken) {
    const idTokenKey = this.generateCredentialKey(idToken);
    this.setItem(idTokenKey, idToken);
  }
  /**
   * fetch the accessToken credential
   * @param accessTokenKey - lookup key to fetch cache type AccessTokenEntity
   */
  getAccessTokenCredential(accessTokenKey) {
    const accessToken = this.getItem(accessTokenKey);
    if (CacheHelpers_exports.isAccessTokenEntity(accessToken)) {
      return accessToken;
    }
    return null;
  }
  /**
   * set accessToken credential
   * @param accessToken -  cache value to be set of type AccessTokenEntity
   */
  async setAccessTokenCredential(accessToken) {
    const accessTokenKey = this.generateCredentialKey(accessToken);
    this.setItem(accessTokenKey, accessToken);
  }
  /**
   * fetch the refreshToken credential
   * @param refreshTokenKey - lookup key to fetch cache type RefreshTokenEntity
   */
  getRefreshTokenCredential(refreshTokenKey) {
    const refreshToken = this.getItem(refreshTokenKey);
    if (CacheHelpers_exports.isRefreshTokenEntity(refreshToken)) {
      return refreshToken;
    }
    return null;
  }
  /**
   * set refreshToken credential
   * @param refreshToken - cache value to be set of type RefreshTokenEntity
   */
  async setRefreshTokenCredential(refreshToken) {
    const refreshTokenKey = this.generateCredentialKey(refreshToken);
    this.setItem(refreshTokenKey, refreshToken);
  }
  /**
   * fetch appMetadata entity from the platform cache
   * @param appMetadataKey - lookup key to fetch cache type AppMetadataEntity
   */
  getAppMetadata(appMetadataKey) {
    const appMetadata = this.getItem(appMetadataKey);
    if (CacheHelpers_exports.isAppMetadataEntity(appMetadataKey, appMetadata)) {
      return appMetadata;
    }
    return null;
  }
  /**
   * set appMetadata entity to the platform cache
   * @param appMetadata - cache value to be set of type AppMetadataEntity
   */
  setAppMetadata(appMetadata) {
    const appMetadataKey = CacheHelpers_exports.generateAppMetadataKey(appMetadata);
    this.setItem(appMetadataKey, appMetadata);
  }
  /**
   * fetch server telemetry entity from the platform cache
   * @param serverTelemetrykey - lookup key to fetch cache type ServerTelemetryEntity
   */
  getServerTelemetry(serverTelemetrykey) {
    const serverTelemetryEntity = this.getItem(serverTelemetrykey);
    if (serverTelemetryEntity && CacheHelpers_exports.isServerTelemetryEntity(serverTelemetrykey, serverTelemetryEntity)) {
      return serverTelemetryEntity;
    }
    return null;
  }
  /**
   * set server telemetry entity to the platform cache
   * @param serverTelemetryKey - lookup key to fetch cache type ServerTelemetryEntity
   * @param serverTelemetry - cache value to be set of type ServerTelemetryEntity
   */
  setServerTelemetry(serverTelemetryKey, serverTelemetry) {
    this.setItem(serverTelemetryKey, serverTelemetry);
  }
  /**
   * fetch authority metadata entity from the platform cache
   * @param key - lookup key to fetch cache type AuthorityMetadataEntity
   */
  getAuthorityMetadata(key) {
    const authorityMetadataEntity = this.getItem(key);
    if (authorityMetadataEntity && CacheHelpers_exports.isAuthorityMetadataEntity(key, authorityMetadataEntity)) {
      return authorityMetadataEntity;
    }
    return null;
  }
  /**
   * Get all authority metadata keys
   */
  getAuthorityMetadataKeys() {
    return this.getKeys().filter((key) => {
      return this.isAuthorityMetadata(key);
    });
  }
  /**
   * set authority metadata entity to the platform cache
   * @param key - lookup key to fetch cache type AuthorityMetadataEntity
   * @param metadata - cache value to be set of type AuthorityMetadataEntity
   */
  setAuthorityMetadata(key, metadata) {
    this.setItem(key, metadata);
  }
  /**
   * fetch throttling entity from the platform cache
   * @param throttlingCacheKey - lookup key to fetch cache type ThrottlingEntity
   */
  getThrottlingCache(throttlingCacheKey) {
    const throttlingCache = this.getItem(throttlingCacheKey);
    if (throttlingCache && CacheHelpers_exports.isThrottlingEntity(throttlingCacheKey, throttlingCache)) {
      return throttlingCache;
    }
    return null;
  }
  /**
   * set throttling entity to the platform cache
   * @param throttlingCacheKey - lookup key to fetch cache type ThrottlingEntity
   * @param throttlingCache - cache value to be set of type ThrottlingEntity
   */
  setThrottlingCache(throttlingCacheKey, throttlingCache) {
    this.setItem(throttlingCacheKey, throttlingCache);
  }
  /**
   * Removes the cache item from memory with the given key.
   * @param key - lookup key to remove a cache entity
   * @param inMemory - key value map of the cache
   */
  removeItem(key) {
    this.logger.tracePii(`Item key: ${key}`);
    let result = false;
    const cache = this.getCache();
    if (!!cache[key]) {
      delete cache[key];
      result = true;
    }
    if (result) {
      this.setCache(cache);
      this.emitChange();
    }
    return result;
  }
  /**
   * Remove account entity from the platform cache if it's outdated
   * @param accountKey - lookup key to fetch cache type AccountEntity
   */
  removeOutdatedAccount(accountKey) {
    this.removeItem(accountKey);
  }
  /**
   * Checks whether key is in cache.
   * @param key - look up key for a cache entity
   */
  containsKey(key) {
    return this.getKeys().includes(key);
  }
  /**
   * Gets all keys in window.
   */
  getKeys() {
    this.logger.trace("Retrieving all cache keys");
    const cache = this.getCache();
    return [...Object.keys(cache)];
  }
  /**
   * Clears all cache entries created by MSAL (except tokens).
   */
  clear() {
    this.logger.trace("Clearing cache entries created by MSAL");
    const cacheKeys = this.getKeys();
    cacheKeys.forEach((key) => {
      this.removeItem(key);
    });
    this.emitChange();
  }
  /**
   * Initialize in memory cache from an exisiting cache vault
   * @param cache - blob formatted cache (JSON)
   */
  static generateInMemoryCache(cache) {
    return Deserializer.deserializeAllCache(Deserializer.deserializeJSONBlob(cache));
  }
  /**
   * retrieves the final JSON
   * @param inMemoryCache - itemised cache read from the JSON
   */
  static generateJsonCache(inMemoryCache) {
    return Serializer.serializeAllCache(inMemoryCache);
  }
  /**
   * Updates a credential's cache key if the current cache key is outdated
   */
  updateCredentialCacheKey(currentCacheKey, credential) {
    const updatedCacheKey = this.generateCredentialKey(credential);
    if (currentCacheKey !== updatedCacheKey) {
      const cacheItem = this.getItem(currentCacheKey);
      if (cacheItem) {
        this.removeItem(currentCacheKey);
        this.setItem(updatedCacheKey, cacheItem);
        this.logger.verbose(`Updated an outdated ${credential.credentialType} cache key`);
        return updatedCacheKey;
      } else {
        this.logger.error(`Attempted to update an outdated ${credential.credentialType} cache key but no item matching the outdated key was found in storage`);
      }
    }
    return currentCacheKey;
  }
};

// node_modules/@azure/msal-node/dist/cache/TokenCache.mjs
var defaultSerializedCache = {
  Account: {},
  IdToken: {},
  AccessToken: {},
  RefreshToken: {},
  AppMetadata: {}
};
var TokenCache = class {
  constructor(storage, logger, cachePlugin) {
    this.cacheHasChanged = false;
    this.storage = storage;
    this.storage.registerChangeEmitter(this.handleChangeEvent.bind(this));
    if (cachePlugin) {
      this.persistence = cachePlugin;
    }
    this.logger = logger;
  }
  /**
   * Set to true if cache state has changed since last time serialize or writeToPersistence was called
   */
  hasChanged() {
    return this.cacheHasChanged;
  }
  /**
   * Serializes in memory cache to JSON
   */
  serialize() {
    this.logger.trace("Serializing in-memory cache");
    let finalState = Serializer.serializeAllCache(this.storage.getInMemoryCache());
    if (this.cacheSnapshot) {
      this.logger.trace("Reading cache snapshot from disk");
      finalState = this.mergeState(JSON.parse(this.cacheSnapshot), finalState);
    } else {
      this.logger.trace("No cache snapshot to merge");
    }
    this.cacheHasChanged = false;
    return JSON.stringify(finalState);
  }
  /**
   * Deserializes JSON to in-memory cache. JSON should be in MSAL cache schema format
   * @param cache - blob formatted cache
   */
  deserialize(cache) {
    this.logger.trace("Deserializing JSON to in-memory cache");
    this.cacheSnapshot = cache;
    if (this.cacheSnapshot) {
      this.logger.trace("Reading cache snapshot from disk");
      const deserializedCache = Deserializer.deserializeAllCache(this.overlayDefaults(JSON.parse(this.cacheSnapshot)));
      this.storage.setInMemoryCache(deserializedCache);
    } else {
      this.logger.trace("No cache snapshot to deserialize");
    }
  }
  /**
   * Fetches the cache key-value map
   */
  getKVStore() {
    return this.storage.getCache();
  }
  /**
   * Gets cache snapshot in CacheKVStore format
   */
  getCacheSnapshot() {
    const deserializedPersistentStorage = NodeStorage.generateInMemoryCache(this.cacheSnapshot);
    return this.storage.inMemoryCacheToCache(deserializedPersistentStorage);
  }
  /**
   * API that retrieves all accounts currently in cache to the user
   */
  async getAllAccounts(correlationId = new CryptoProvider().createNewGuid()) {
    this.logger.trace("getAllAccounts called");
    let cacheContext;
    try {
      if (this.persistence) {
        cacheContext = new TokenCacheContext(this, false);
        await this.persistence.beforeCacheAccess(cacheContext);
      }
      return this.storage.getAllAccounts({}, correlationId);
    } finally {
      if (this.persistence && cacheContext) {
        await this.persistence.afterCacheAccess(cacheContext);
      }
    }
  }
  /**
   * Returns the signed in account matching homeAccountId.
   * (the account object is created at the time of successful login)
   * or null when no matching account is found
   * @param homeAccountId - unique identifier for an account (uid.utid)
   */
  async getAccountByHomeId(homeAccountId) {
    const allAccounts = await this.getAllAccounts();
    if (homeAccountId && allAccounts && allAccounts.length) {
      return allAccounts.filter((accountObj) => accountObj.homeAccountId === homeAccountId)[0] || null;
    } else {
      return null;
    }
  }
  /**
   * Returns the signed in account matching localAccountId.
   * (the account object is created at the time of successful login)
   * or null when no matching account is found
   * @param localAccountId - unique identifier of an account (sub/obj when homeAccountId cannot be populated)
   */
  async getAccountByLocalId(localAccountId) {
    const allAccounts = await this.getAllAccounts();
    if (localAccountId && allAccounts && allAccounts.length) {
      return allAccounts.filter((accountObj) => accountObj.localAccountId === localAccountId)[0] || null;
    } else {
      return null;
    }
  }
  /**
   * API to remove a specific account and the relevant data from cache
   * @param account - AccountInfo passed by the user
   */
  async removeAccount(account, correlationId) {
    this.logger.trace("removeAccount called");
    let cacheContext;
    try {
      if (this.persistence) {
        cacheContext = new TokenCacheContext(this, true);
        await this.persistence.beforeCacheAccess(cacheContext);
      }
      this.storage.removeAccount(account, correlationId || new GuidGenerator().generateGuid());
    } finally {
      if (this.persistence && cacheContext) {
        await this.persistence.afterCacheAccess(cacheContext);
      }
    }
  }
  /**
   * Overwrites in-memory cache with persistent cache
   */
  async overwriteCache() {
    if (!this.persistence) {
      this.logger.info("No persistence layer specified, cache cannot be overwritten");
      return;
    }
    this.logger.info("Overwriting in-memory cache with persistent cache");
    this.storage.clear();
    const cacheContext = new TokenCacheContext(this, false);
    await this.persistence.beforeCacheAccess(cacheContext);
    const cacheSnapshot = this.getCacheSnapshot();
    this.storage.setCache(cacheSnapshot);
    await this.persistence.afterCacheAccess(cacheContext);
  }
  /**
   * Called when the cache has changed state.
   */
  handleChangeEvent() {
    this.cacheHasChanged = true;
  }
  /**
   * Merge in memory cache with the cache snapshot.
   * @param oldState - cache before changes
   * @param currentState - current cache state in the library
   */
  mergeState(oldState, currentState) {
    this.logger.trace("Merging in-memory cache with cache snapshot");
    const stateAfterRemoval = this.mergeRemovals(oldState, currentState);
    return this.mergeUpdates(stateAfterRemoval, currentState);
  }
  /**
   * Deep update of oldState based on newState values
   * @param oldState - cache before changes
   * @param newState - updated cache
   */
  mergeUpdates(oldState, newState) {
    Object.keys(newState).forEach((newKey) => {
      const newValue = newState[newKey];
      if (!oldState.hasOwnProperty(newKey)) {
        if (newValue !== null) {
          oldState[newKey] = newValue;
        }
      } else {
        const newValueNotNull = newValue !== null;
        const newValueIsObject = typeof newValue === "object";
        const newValueIsNotArray = !Array.isArray(newValue);
        const oldStateNotUndefinedOrNull = typeof oldState[newKey] !== "undefined" && oldState[newKey] !== null;
        if (newValueNotNull && newValueIsObject && newValueIsNotArray && oldStateNotUndefinedOrNull) {
          this.mergeUpdates(oldState[newKey], newValue);
        } else {
          oldState[newKey] = newValue;
        }
      }
    });
    return oldState;
  }
  /**
   * Removes entities in oldState that the were removed from newState. If there are any unknown values in root of
   * oldState that are not recognized, they are left untouched.
   * @param oldState - cache before changes
   * @param newState - updated cache
   */
  mergeRemovals(oldState, newState) {
    this.logger.trace("Remove updated entries in cache");
    const accounts = oldState.Account ? this.mergeRemovalsDict(oldState.Account, newState.Account) : oldState.Account;
    const accessTokens = oldState.AccessToken ? this.mergeRemovalsDict(oldState.AccessToken, newState.AccessToken) : oldState.AccessToken;
    const refreshTokens = oldState.RefreshToken ? this.mergeRemovalsDict(oldState.RefreshToken, newState.RefreshToken) : oldState.RefreshToken;
    const idTokens = oldState.IdToken ? this.mergeRemovalsDict(oldState.IdToken, newState.IdToken) : oldState.IdToken;
    const appMetadata = oldState.AppMetadata ? this.mergeRemovalsDict(oldState.AppMetadata, newState.AppMetadata) : oldState.AppMetadata;
    return {
      ...oldState,
      Account: accounts,
      AccessToken: accessTokens,
      RefreshToken: refreshTokens,
      IdToken: idTokens,
      AppMetadata: appMetadata
    };
  }
  /**
   * Helper to merge new cache with the old one
   * @param oldState - cache before changes
   * @param newState - updated cache
   */
  mergeRemovalsDict(oldState, newState) {
    const finalState = { ...oldState };
    Object.keys(oldState).forEach((oldKey) => {
      if (!newState || !newState.hasOwnProperty(oldKey)) {
        delete finalState[oldKey];
      }
    });
    return finalState;
  }
  /**
   * Helper to overlay as a part of cache merge
   * @param passedInCache - cache read from the blob
   */
  overlayDefaults(passedInCache) {
    this.logger.trace("Overlaying input cache with the default cache");
    return {
      Account: {
        ...defaultSerializedCache.Account,
        ...passedInCache.Account
      },
      IdToken: {
        ...defaultSerializedCache.IdToken,
        ...passedInCache.IdToken
      },
      AccessToken: {
        ...defaultSerializedCache.AccessToken,
        ...passedInCache.AccessToken
      },
      RefreshToken: {
        ...defaultSerializedCache.RefreshToken,
        ...passedInCache.RefreshToken
      },
      AppMetadata: {
        ...defaultSerializedCache.AppMetadata,
        ...passedInCache.AppMetadata
      }
    };
  }
};

// node_modules/@azure/msal-node/dist/client/ClientAssertion.mjs
var import_jsonwebtoken = __toESM(require_jsonwebtoken(), 1);
var ClientAssertion = class _ClientAssertion {
  /**
   * Initialize the ClientAssertion class from the clientAssertion passed by the user
   * @param assertion - refer https://tools.ietf.org/html/rfc7521
   */
  static fromAssertion(assertion) {
    const clientAssertion = new _ClientAssertion();
    clientAssertion.jwt = assertion;
    return clientAssertion;
  }
  /**
   * @deprecated Use fromCertificateWithSha256Thumbprint instead, with a SHA-256 thumprint
   * Initialize the ClientAssertion class from the certificate passed by the user
   * @param thumbprint - identifier of a certificate
   * @param privateKey - secret key
   * @param publicCertificate - electronic document provided to prove the ownership of the public key
   */
  static fromCertificate(thumbprint, privateKey, publicCertificate) {
    const clientAssertion = new _ClientAssertion();
    clientAssertion.privateKey = privateKey;
    clientAssertion.thumbprint = thumbprint;
    clientAssertion.useSha256 = false;
    if (publicCertificate) {
      clientAssertion.publicCertificate = this.parseCertificate(publicCertificate);
    }
    return clientAssertion;
  }
  /**
   * Initialize the ClientAssertion class from the certificate passed by the user
   * @param thumbprint - identifier of a certificate
   * @param privateKey - secret key
   * @param publicCertificate - electronic document provided to prove the ownership of the public key
   */
  static fromCertificateWithSha256Thumbprint(thumbprint, privateKey, publicCertificate) {
    const clientAssertion = new _ClientAssertion();
    clientAssertion.privateKey = privateKey;
    clientAssertion.thumbprint = thumbprint;
    clientAssertion.useSha256 = true;
    if (publicCertificate) {
      clientAssertion.publicCertificate = this.parseCertificate(publicCertificate);
    }
    return clientAssertion;
  }
  /**
   * Update JWT for certificate based clientAssertion, if passed by the user, uses it as is
   * @param cryptoProvider - library's crypto helper
   * @param issuer - iss claim
   * @param jwtAudience - aud claim
   */
  getJwt(cryptoProvider, issuer, jwtAudience) {
    if (this.privateKey && this.thumbprint) {
      if (this.jwt && !this.isExpired() && issuer === this.issuer && jwtAudience === this.jwtAudience) {
        return this.jwt;
      }
      return this.createJwt(cryptoProvider, issuer, jwtAudience);
    }
    if (this.jwt) {
      return this.jwt;
    }
    throw createClientAuthError(ClientAuthErrorCodes_exports.invalidAssertion);
  }
  /**
   * JWT format and required claims specified: https://tools.ietf.org/html/rfc7523#section-3
   */
  createJwt(cryptoProvider, issuer, jwtAudience) {
    this.issuer = issuer;
    this.jwtAudience = jwtAudience;
    const issuedAt = TimeUtils_exports.nowSeconds();
    this.expirationTime = issuedAt + 600;
    const algorithm = this.useSha256 ? JwtConstants.PSS_256 : JwtConstants.RSA_256;
    const header = {
      alg: algorithm
    };
    const thumbprintHeader = this.useSha256 ? JwtConstants.X5T_256 : JwtConstants.X5T;
    Object.assign(header, {
      [thumbprintHeader]: EncodingUtils.base64EncodeUrl(this.thumbprint, EncodingTypes.HEX)
    });
    if (this.publicCertificate) {
      Object.assign(header, {
        [JwtConstants.X5C]: this.publicCertificate
      });
    }
    const payload = {
      [JwtConstants.AUDIENCE]: this.jwtAudience,
      [JwtConstants.EXPIRATION_TIME]: this.expirationTime,
      [JwtConstants.ISSUER]: this.issuer,
      [JwtConstants.SUBJECT]: this.issuer,
      [JwtConstants.NOT_BEFORE]: issuedAt,
      [JwtConstants.JWT_ID]: cryptoProvider.createNewGuid()
    };
    this.jwt = import_jsonwebtoken.default.sign(payload, this.privateKey, { header });
    return this.jwt;
  }
  /**
   * Utility API to check expiration
   */
  isExpired() {
    return this.expirationTime < TimeUtils_exports.nowSeconds();
  }
  /**
   * Extracts the raw certs from a given certificate string and returns them in an array.
   * @param publicCertificate - electronic document provided to prove the ownership of the public key
   */
  static parseCertificate(publicCertificate) {
    const regexToFindCerts = /-----BEGIN CERTIFICATE-----\r*\n(.+?)\r*\n-----END CERTIFICATE-----/gs;
    const certs = [];
    let matches;
    while ((matches = regexToFindCerts.exec(publicCertificate)) !== null) {
      certs.push(matches[1].replace(/\r*\n/g, Constants.EMPTY_STRING));
    }
    return certs;
  }
};

// node_modules/@azure/msal-node/dist/packageMetadata.mjs
var name2 = "@azure/msal-node";
var version2 = "3.8.0";

// node_modules/@azure/msal-node/dist/client/UsernamePasswordClient.mjs
var UsernamePasswordClient = class extends BaseClient {
  constructor(configuration) {
    super(configuration);
  }
  /**
   * API to acquire a token by passing the username and password to the service in exchage of credentials
   * password_grant
   * @param request - CommonUsernamePasswordRequest
   */
  async acquireToken(request2) {
    this.logger.info("in acquireToken call in username-password client");
    const reqTimestamp = TimeUtils_exports.nowSeconds();
    const response = await this.executeTokenRequest(this.authority, request2);
    const responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin);
    responseHandler.validateTokenResponse(response.body);
    const tokenResponse = responseHandler.handleServerTokenResponse(response.body, this.authority, reqTimestamp, request2);
    return tokenResponse;
  }
  /**
   * Executes POST request to token endpoint
   * @param authority - authority object
   * @param request - CommonUsernamePasswordRequest provided by the developer
   */
  async executeTokenRequest(authority, request2) {
    const queryParametersString = this.createTokenQueryParameters(request2);
    const endpoint2 = UrlString.appendQueryString(authority.tokenEndpoint, queryParametersString);
    const requestBody = await this.createTokenRequestBody(request2);
    const headers = this.createTokenRequestHeaders({
      credential: request2.username,
      type: CcsCredentialType.UPN
    });
    const thumbprint = {
      clientId: this.config.authOptions.clientId,
      authority: authority.canonicalAuthority,
      scopes: request2.scopes,
      claims: request2.claims,
      authenticationScheme: request2.authenticationScheme,
      resourceRequestMethod: request2.resourceRequestMethod,
      resourceRequestUri: request2.resourceRequestUri,
      shrClaims: request2.shrClaims,
      sshKid: request2.sshKid
    };
    return this.executePostToTokenEndpoint(endpoint2, requestBody, headers, thumbprint, request2.correlationId);
  }
  /**
   * Generates a map for all the params to be sent to the service
   * @param request - CommonUsernamePasswordRequest provided by the developer
   */
  async createTokenRequestBody(request2) {
    const parameters = /* @__PURE__ */ new Map();
    RequestParameterBuilder_exports.addClientId(parameters, this.config.authOptions.clientId);
    RequestParameterBuilder_exports.addUsername(parameters, request2.username);
    RequestParameterBuilder_exports.addPassword(parameters, request2.password);
    RequestParameterBuilder_exports.addScopes(parameters, request2.scopes);
    RequestParameterBuilder_exports.addResponseType(parameters, OAuthResponseType.IDTOKEN_TOKEN);
    RequestParameterBuilder_exports.addGrantType(parameters, GrantType.RESOURCE_OWNER_PASSWORD_GRANT);
    RequestParameterBuilder_exports.addClientInfo(parameters);
    RequestParameterBuilder_exports.addLibraryInfo(parameters, this.config.libraryInfo);
    RequestParameterBuilder_exports.addApplicationTelemetry(parameters, this.config.telemetry.application);
    RequestParameterBuilder_exports.addThrottling(parameters);
    if (this.serverTelemetryManager) {
      RequestParameterBuilder_exports.addServerTelemetry(parameters, this.serverTelemetryManager);
    }
    const correlationId = request2.correlationId || this.config.cryptoInterface.createNewGuid();
    RequestParameterBuilder_exports.addCorrelationId(parameters, correlationId);
    if (this.config.clientCredentials.clientSecret) {
      RequestParameterBuilder_exports.addClientSecret(parameters, this.config.clientCredentials.clientSecret);
    }
    const clientAssertion = this.config.clientCredentials.clientAssertion;
    if (clientAssertion) {
      RequestParameterBuilder_exports.addClientAssertion(parameters, await getClientAssertion(clientAssertion.assertion, this.config.authOptions.clientId, request2.resourceRequestUri));
      RequestParameterBuilder_exports.addClientAssertionType(parameters, clientAssertion.assertionType);
    }
    if (!StringUtils.isEmptyObj(request2.claims) || this.config.authOptions.clientCapabilities && this.config.authOptions.clientCapabilities.length > 0) {
      RequestParameterBuilder_exports.addClaims(parameters, request2.claims, this.config.authOptions.clientCapabilities);
    }
    if (this.config.systemOptions.preventCorsPreflight && request2.username) {
      RequestParameterBuilder_exports.addCcsUpn(parameters, request2.username);
    }
    return UrlUtils_exports.mapToQueryString(parameters);
  }
};

// node_modules/@azure/msal-node/dist/protocol/Authorize.mjs
function getAuthCodeRequestUrl(config, authority, request2, logger) {
  const parameters = Authorize_exports.getStandardAuthorizeRequestParameters({
    ...config.auth,
    authority,
    redirectUri: request2.redirectUri || ""
  }, request2, logger);
  RequestParameterBuilder_exports.addLibraryInfo(parameters, {
    sku: Constants2.MSAL_SKU,
    version: version2,
    cpu: process.arch || "",
    os: process.platform || ""
  });
  if (config.auth.protocolMode !== ProtocolMode.OIDC) {
    RequestParameterBuilder_exports.addApplicationTelemetry(parameters, config.telemetry.application);
  }
  RequestParameterBuilder_exports.addResponseType(parameters, OAuthResponseType.CODE);
  if (request2.codeChallenge && request2.codeChallengeMethod) {
    RequestParameterBuilder_exports.addCodeChallengeParams(parameters, request2.codeChallenge, request2.codeChallengeMethod);
  }
  RequestParameterBuilder_exports.addExtraQueryParameters(parameters, request2.extraQueryParameters || {});
  return Authorize_exports.getAuthorizeUrl(authority, parameters, config.auth.encodeExtraQueryParams, request2.extraQueryParameters);
}

// node_modules/@azure/msal-node/dist/client/ClientApplication.mjs
var ClientApplication = class {
  /**
   * Constructor for the ClientApplication
   */
  constructor(configuration) {
    this.config = buildAppConfiguration(configuration);
    this.cryptoProvider = new CryptoProvider();
    this.logger = new Logger(this.config.system.loggerOptions, name2, version2);
    this.storage = new NodeStorage(this.logger, this.config.auth.clientId, this.cryptoProvider, buildStaticAuthorityOptions(this.config.auth));
    this.tokenCache = new TokenCache(this.storage, this.logger, this.config.cache.cachePlugin);
  }
  /**
   * Creates the URL of the authorization request, letting the user input credentials and consent to the
   * application. The URL targets the /authorize endpoint of the authority configured in the
   * application object.
   *
   * Once the user inputs their credentials and consents, the authority will send a response to the redirect URI
   * sent in the request and should contain an authorization code, which can then be used to acquire tokens via
   * `acquireTokenByCode(AuthorizationCodeRequest)`.
   */
  async getAuthCodeUrl(request2) {
    this.logger.info("getAuthCodeUrl called", request2.correlationId);
    const validRequest = {
      ...request2,
      ...await this.initializeBaseRequest(request2),
      responseMode: request2.responseMode || ResponseMode.QUERY,
      authenticationScheme: AuthenticationScheme.BEARER,
      state: request2.state || "",
      nonce: request2.nonce || ""
    };
    const discoveredAuthority = await this.createAuthority(validRequest.authority, validRequest.correlationId, void 0, request2.azureCloudOptions);
    return getAuthCodeRequestUrl(this.config, discoveredAuthority, validRequest, this.logger);
  }
  /**
   * Acquires a token by exchanging the Authorization Code received from the first step of OAuth2.0
   * Authorization Code flow.
   *
   * `getAuthCodeUrl(AuthorizationCodeUrlRequest)` can be used to create the URL for the first step of OAuth2.0
   * Authorization Code flow. Ensure that values for redirectUri and scopes in AuthorizationCodeUrlRequest and
   * AuthorizationCodeRequest are the same.
   */
  async acquireTokenByCode(request2, authCodePayLoad) {
    this.logger.info("acquireTokenByCode called");
    if (request2.state && authCodePayLoad) {
      this.logger.info("acquireTokenByCode - validating state");
      this.validateState(request2.state, authCodePayLoad.state || "");
      authCodePayLoad = { ...authCodePayLoad, state: "" };
    }
    const validRequest = {
      ...request2,
      ...await this.initializeBaseRequest(request2),
      authenticationScheme: AuthenticationScheme.BEARER
    };
    const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenByCode, validRequest.correlationId);
    try {
      const discoveredAuthority = await this.createAuthority(validRequest.authority, validRequest.correlationId, void 0, request2.azureCloudOptions);
      const authClientConfig = await this.buildOauthClientConfiguration(discoveredAuthority, validRequest.correlationId, validRequest.redirectUri, serverTelemetryManager);
      const authorizationCodeClient = new AuthorizationCodeClient(authClientConfig);
      this.logger.verbose("Auth code client created", validRequest.correlationId);
      return await authorizationCodeClient.acquireToken(validRequest, authCodePayLoad);
    } catch (e) {
      if (e instanceof AuthError) {
        e.setCorrelationId(validRequest.correlationId);
      }
      serverTelemetryManager.cacheFailedRequest(e);
      throw e;
    }
  }
  /**
   * Acquires a token by exchanging the refresh token provided for a new set of tokens.
   *
   * This API is provided only for scenarios where you would like to migrate from ADAL to MSAL. Otherwise, it is
   * recommended that you use `acquireTokenSilent()` for silent scenarios. When using `acquireTokenSilent()`, MSAL will
   * handle the caching and refreshing of tokens automatically.
   */
  async acquireTokenByRefreshToken(request2) {
    this.logger.info("acquireTokenByRefreshToken called", request2.correlationId);
    const validRequest = {
      ...request2,
      ...await this.initializeBaseRequest(request2),
      authenticationScheme: AuthenticationScheme.BEARER
    };
    const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenByRefreshToken, validRequest.correlationId);
    try {
      const discoveredAuthority = await this.createAuthority(validRequest.authority, validRequest.correlationId, void 0, request2.azureCloudOptions);
      const refreshTokenClientConfig = await this.buildOauthClientConfiguration(discoveredAuthority, validRequest.correlationId, validRequest.redirectUri || "", serverTelemetryManager);
      const refreshTokenClient = new RefreshTokenClient(refreshTokenClientConfig);
      this.logger.verbose("Refresh token client created", validRequest.correlationId);
      return await refreshTokenClient.acquireToken(validRequest);
    } catch (e) {
      if (e instanceof AuthError) {
        e.setCorrelationId(validRequest.correlationId);
      }
      serverTelemetryManager.cacheFailedRequest(e);
      throw e;
    }
  }
  /**
   * Acquires a token silently when a user specifies the account the token is requested for.
   *
   * This API expects the user to provide an account object and looks into the cache to retrieve the token if present.
   * There is also an optional "forceRefresh" boolean the user can send to bypass the cache for access_token and id_token.
   * In case the refresh_token is expired or not found, an error is thrown
   * and the guidance is for the user to call any interactive token acquisition API (eg: `acquireTokenByCode()`).
   */
  async acquireTokenSilent(request2) {
    const validRequest = {
      ...request2,
      ...await this.initializeBaseRequest(request2),
      forceRefresh: request2.forceRefresh || false
    };
    const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenSilent, validRequest.correlationId, validRequest.forceRefresh);
    try {
      const discoveredAuthority = await this.createAuthority(validRequest.authority, validRequest.correlationId, void 0, request2.azureCloudOptions);
      const clientConfiguration = await this.buildOauthClientConfiguration(discoveredAuthority, validRequest.correlationId, validRequest.redirectUri || "", serverTelemetryManager);
      const silentFlowClient = new SilentFlowClient(clientConfiguration);
      this.logger.verbose("Silent flow client created", validRequest.correlationId);
      try {
        await this.tokenCache.overwriteCache();
        return await this.acquireCachedTokenSilent(validRequest, silentFlowClient, clientConfiguration);
      } catch (error) {
        if (error instanceof ClientAuthError && error.errorCode === ClientAuthErrorCodes_exports.tokenRefreshRequired) {
          const refreshTokenClient = new RefreshTokenClient(clientConfiguration);
          return refreshTokenClient.acquireTokenByRefreshToken(validRequest);
        }
        throw error;
      }
    } catch (error) {
      if (error instanceof AuthError) {
        error.setCorrelationId(validRequest.correlationId);
      }
      serverTelemetryManager.cacheFailedRequest(error);
      throw error;
    }
  }
  async acquireCachedTokenSilent(validRequest, silentFlowClient, clientConfiguration) {
    const [authResponse, cacheOutcome] = await silentFlowClient.acquireCachedToken({
      ...validRequest,
      scopes: validRequest.scopes?.length ? validRequest.scopes : [...OIDC_DEFAULT_SCOPES]
    });
    if (cacheOutcome === CacheOutcome.PROACTIVELY_REFRESHED) {
      this.logger.info("ClientApplication:acquireCachedTokenSilent - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed.");
      const refreshTokenClient = new RefreshTokenClient(clientConfiguration);
      try {
        await refreshTokenClient.acquireTokenByRefreshToken(validRequest);
      } catch {
      }
    }
    return authResponse;
  }
  /**
   * Acquires tokens with password grant by exchanging client applications username and password for credentials
   *
   * The latest OAuth 2.0 Security Best Current Practice disallows the password grant entirely.
   * More details on this recommendation at https://tools.ietf.org/html/draft-ietf-oauth-security-topics-13#section-3.4
   * Microsoft's documentation and recommendations are at:
   * https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-authentication-flows#usernamepassword
   *
   * @param request - UsenamePasswordRequest
   * @deprecated - Use a more secure flow instead
   */
  async acquireTokenByUsernamePassword(request2) {
    this.logger.info("acquireTokenByUsernamePassword called", request2.correlationId);
    const validRequest = {
      ...request2,
      ...await this.initializeBaseRequest(request2)
    };
    const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenByUsernamePassword, validRequest.correlationId);
    try {
      const discoveredAuthority = await this.createAuthority(validRequest.authority, validRequest.correlationId, void 0, request2.azureCloudOptions);
      const usernamePasswordClientConfig = await this.buildOauthClientConfiguration(discoveredAuthority, validRequest.correlationId, "", serverTelemetryManager);
      const usernamePasswordClient = new UsernamePasswordClient(usernamePasswordClientConfig);
      this.logger.verbose("Username password client created", validRequest.correlationId);
      return await usernamePasswordClient.acquireToken(validRequest);
    } catch (e) {
      if (e instanceof AuthError) {
        e.setCorrelationId(validRequest.correlationId);
      }
      serverTelemetryManager.cacheFailedRequest(e);
      throw e;
    }
  }
  /**
   * Gets the token cache for the application.
   */
  getTokenCache() {
    this.logger.info("getTokenCache called");
    return this.tokenCache;
  }
  /**
   * Validates OIDC state by comparing the user cached state with the state received from the server.
   *
   * This API is provided for scenarios where you would use OAuth2.0 state parameter to mitigate against
   * CSRF attacks.
   * For more information about state, visit https://datatracker.ietf.org/doc/html/rfc6819#section-3.6.
   * @param state - Unique GUID generated by the user that is cached by the user and sent to the server during the first leg of the flow
   * @param cachedState - This string is sent back by the server with the authorization code
   */
  validateState(state, cachedState) {
    if (!state) {
      throw NodeAuthError.createStateNotFoundError();
    }
    if (state !== cachedState) {
      throw createClientAuthError(ClientAuthErrorCodes_exports.stateMismatch);
    }
  }
  /**
   * Returns the logger instance
   */
  getLogger() {
    return this.logger;
  }
  /**
   * Replaces the default logger set in configurations with new Logger with new configurations
   * @param logger - Logger instance
   */
  setLogger(logger) {
    this.logger = logger;
  }
  /**
   * Builds the common configuration to be passed to the common component based on the platform configurarion
   * @param authority - user passed authority in configuration
   * @param serverTelemetryManager - initializes servertelemetry if passed
   */
  async buildOauthClientConfiguration(discoveredAuthority, requestCorrelationId, redirectUri, serverTelemetryManager) {
    this.logger.verbose("buildOauthClientConfiguration called", requestCorrelationId);
    this.logger.info(`Building oauth client configuration with the following authority: ${discoveredAuthority.tokenEndpoint}.`, requestCorrelationId);
    serverTelemetryManager?.updateRegionDiscoveryMetadata(discoveredAuthority.regionDiscoveryMetadata);
    const clientConfiguration = {
      authOptions: {
        clientId: this.config.auth.clientId,
        authority: discoveredAuthority,
        clientCapabilities: this.config.auth.clientCapabilities,
        redirectUri
      },
      loggerOptions: {
        logLevel: this.config.system.loggerOptions.logLevel,
        loggerCallback: this.config.system.loggerOptions.loggerCallback,
        piiLoggingEnabled: this.config.system.loggerOptions.piiLoggingEnabled,
        correlationId: requestCorrelationId
      },
      cacheOptions: {
        claimsBasedCachingEnabled: this.config.cache.claimsBasedCachingEnabled
      },
      cryptoInterface: this.cryptoProvider,
      networkInterface: this.config.system.networkClient,
      storageInterface: this.storage,
      serverTelemetryManager,
      clientCredentials: {
        clientSecret: this.clientSecret,
        clientAssertion: await this.getClientAssertion(discoveredAuthority)
      },
      libraryInfo: {
        sku: Constants2.MSAL_SKU,
        version: version2,
        cpu: process.arch || Constants.EMPTY_STRING,
        os: process.platform || Constants.EMPTY_STRING
      },
      telemetry: this.config.telemetry,
      persistencePlugin: this.config.cache.cachePlugin,
      serializableCache: this.tokenCache
    };
    return clientConfiguration;
  }
  async getClientAssertion(authority) {
    if (this.developerProvidedClientAssertion) {
      this.clientAssertion = ClientAssertion.fromAssertion(await getClientAssertion(this.developerProvidedClientAssertion, this.config.auth.clientId, authority.tokenEndpoint));
    }
    return this.clientAssertion && {
      assertion: this.clientAssertion.getJwt(this.cryptoProvider, this.config.auth.clientId, authority.tokenEndpoint),
      assertionType: Constants2.JWT_BEARER_ASSERTION_TYPE
    };
  }
  /**
   * Generates a request with the default scopes & generates a correlationId.
   * @param authRequest - BaseAuthRequest for initialization
   */
  async initializeBaseRequest(authRequest) {
    this.logger.verbose("initializeRequestScopes called", authRequest.correlationId);
    if (authRequest.authenticationScheme && authRequest.authenticationScheme === AuthenticationScheme.POP) {
      this.logger.verbose("Authentication Scheme 'pop' is not supported yet, setting Authentication Scheme to 'Bearer' for request", authRequest.correlationId);
    }
    authRequest.authenticationScheme = AuthenticationScheme.BEARER;
    if (this.config.cache.claimsBasedCachingEnabled && authRequest.claims && // Checks for empty stringified object "{}" which doesn't qualify as requested claims
    !StringUtils.isEmptyObj(authRequest.claims)) {
      authRequest.requestedClaimsHash = await this.cryptoProvider.hashString(authRequest.claims);
    }
    return {
      ...authRequest,
      scopes: [
        ...authRequest && authRequest.scopes || [],
        ...OIDC_DEFAULT_SCOPES
      ],
      correlationId: authRequest && authRequest.correlationId || this.cryptoProvider.createNewGuid(),
      authority: authRequest.authority || this.config.auth.authority
    };
  }
  /**
   * Initializes the server telemetry payload
   * @param apiId - Id for a specific request
   * @param correlationId - GUID
   * @param forceRefresh - boolean to indicate network call
   */
  initializeServerTelemetryManager(apiId, correlationId, forceRefresh) {
    const telemetryPayload = {
      clientId: this.config.auth.clientId,
      correlationId,
      apiId,
      forceRefresh: forceRefresh || false
    };
    return new ServerTelemetryManager(telemetryPayload, this.storage);
  }
  /**
   * Create authority instance. If authority not passed in request, default to authority set on the application
   * object. If no authority set in application object, then default to common authority.
   * @param authorityString - authority from user configuration
   */
  async createAuthority(authorityString, requestCorrelationId, azureRegionConfiguration, azureCloudOptions) {
    this.logger.verbose("createAuthority called", requestCorrelationId);
    const authorityUrl = Authority.generateAuthority(authorityString, azureCloudOptions || this.config.auth.azureCloudOptions);
    const authorityOptions = {
      protocolMode: this.config.auth.protocolMode,
      knownAuthorities: this.config.auth.knownAuthorities,
      cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,
      authorityMetadata: this.config.auth.authorityMetadata,
      azureRegionConfiguration,
      skipAuthorityMetadataCache: this.config.auth.skipAuthorityMetadataCache
    };
    return AuthorityFactory_exports.createDiscoveredInstance(authorityUrl, this.config.system.networkClient, this.storage, authorityOptions, this.logger, requestCorrelationId);
  }
  /**
   * Clear the cache
   */
  clearCache() {
    this.storage.clear();
  }
};

// node_modules/@azure/msal-node/dist/client/ClientCredentialClient.mjs
var ClientCredentialClient = class extends BaseClient {
  constructor(configuration, appTokenProvider) {
    super(configuration);
    this.appTokenProvider = appTokenProvider;
  }
  /**
   * Public API to acquire a token with ClientCredential Flow for Confidential clients
   * @param request - CommonClientCredentialRequest provided by the developer
   */
  async acquireToken(request2) {
    if (request2.skipCache || request2.claims) {
      return this.executeTokenRequest(request2, this.authority);
    }
    const [cachedAuthenticationResult, lastCacheOutcome] = await this.getCachedAuthenticationResult(request2, this.config, this.cryptoUtils, this.authority, this.cacheManager, this.serverTelemetryManager);
    if (cachedAuthenticationResult) {
      if (lastCacheOutcome === CacheOutcome.PROACTIVELY_REFRESHED) {
        this.logger.info("ClientCredentialClient:getCachedAuthenticationResult - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed.");
        const refreshAccessToken = true;
        await this.executeTokenRequest(request2, this.authority, refreshAccessToken);
      }
      return cachedAuthenticationResult;
    } else {
      return this.executeTokenRequest(request2, this.authority);
    }
  }
  /**
   * looks up cache if the tokens are cached already
   */
  async getCachedAuthenticationResult(request2, config, cryptoUtils, authority, cacheManager, serverTelemetryManager) {
    const clientConfiguration = config;
    const managedIdentityConfiguration = config;
    let lastCacheOutcome = CacheOutcome.NOT_APPLICABLE;
    let cacheContext;
    if (clientConfiguration.serializableCache && clientConfiguration.persistencePlugin) {
      cacheContext = new TokenCacheContext(clientConfiguration.serializableCache, false);
      await clientConfiguration.persistencePlugin.beforeCacheAccess(cacheContext);
    }
    const cachedAccessToken = this.readAccessTokenFromCache(authority, managedIdentityConfiguration.managedIdentityId?.id || clientConfiguration.authOptions.clientId, new ScopeSet(request2.scopes || []), cacheManager, request2.correlationId);
    if (clientConfiguration.serializableCache && clientConfiguration.persistencePlugin && cacheContext) {
      await clientConfiguration.persistencePlugin.afterCacheAccess(cacheContext);
    }
    if (!cachedAccessToken) {
      serverTelemetryManager?.setCacheOutcome(CacheOutcome.NO_CACHED_ACCESS_TOKEN);
      return [null, CacheOutcome.NO_CACHED_ACCESS_TOKEN];
    }
    if (TimeUtils_exports.isTokenExpired(cachedAccessToken.expiresOn, clientConfiguration.systemOptions?.tokenRenewalOffsetSeconds || DEFAULT_TOKEN_RENEWAL_OFFSET_SEC)) {
      serverTelemetryManager?.setCacheOutcome(CacheOutcome.CACHED_ACCESS_TOKEN_EXPIRED);
      return [null, CacheOutcome.CACHED_ACCESS_TOKEN_EXPIRED];
    }
    if (cachedAccessToken.refreshOn && TimeUtils_exports.isTokenExpired(cachedAccessToken.refreshOn.toString(), 0)) {
      lastCacheOutcome = CacheOutcome.PROACTIVELY_REFRESHED;
      serverTelemetryManager?.setCacheOutcome(CacheOutcome.PROACTIVELY_REFRESHED);
    }
    return [
      await ResponseHandler.generateAuthenticationResult(cryptoUtils, authority, {
        account: null,
        idToken: null,
        accessToken: cachedAccessToken,
        refreshToken: null,
        appMetadata: null
      }, true, request2),
      lastCacheOutcome
    ];
  }
  /**
   * Reads access token from the cache
   */
  readAccessTokenFromCache(authority, id, scopeSet, cacheManager, correlationId) {
    const accessTokenFilter = {
      homeAccountId: Constants.EMPTY_STRING,
      environment: authority.canonicalAuthorityUrlComponents.HostNameAndPort,
      credentialType: CredentialType.ACCESS_TOKEN,
      clientId: id,
      realm: authority.tenant,
      target: ScopeSet.createSearchScopes(scopeSet.asArray())
    };
    const accessTokens = cacheManager.getAccessTokensByFilter(accessTokenFilter, correlationId);
    if (accessTokens.length < 1) {
      return null;
    } else if (accessTokens.length > 1) {
      throw createClientAuthError(ClientAuthErrorCodes_exports.multipleMatchingTokens);
    }
    return accessTokens[0];
  }
  /**
   * Makes a network call to request the token from the service
   * @param request - CommonClientCredentialRequest provided by the developer
   * @param authority - authority object
   */
  async executeTokenRequest(request2, authority, refreshAccessToken) {
    let serverTokenResponse;
    let reqTimestamp;
    if (this.appTokenProvider) {
      this.logger.info("Using appTokenProvider extensibility.");
      const appTokenPropviderParameters = {
        correlationId: request2.correlationId,
        tenantId: this.config.authOptions.authority.tenant,
        scopes: request2.scopes,
        claims: request2.claims
      };
      reqTimestamp = TimeUtils_exports.nowSeconds();
      const appTokenProviderResult = await this.appTokenProvider(appTokenPropviderParameters);
      serverTokenResponse = {
        access_token: appTokenProviderResult.accessToken,
        expires_in: appTokenProviderResult.expiresInSeconds,
        refresh_in: appTokenProviderResult.refreshInSeconds,
        token_type: AuthenticationScheme.BEARER
      };
    } else {
      const queryParametersString = this.createTokenQueryParameters(request2);
      const endpoint2 = UrlString.appendQueryString(authority.tokenEndpoint, queryParametersString);
      const requestBody = await this.createTokenRequestBody(request2);
      const headers = this.createTokenRequestHeaders();
      const thumbprint = {
        clientId: this.config.authOptions.clientId,
        authority: request2.authority,
        scopes: request2.scopes,
        claims: request2.claims,
        authenticationScheme: request2.authenticationScheme,
        resourceRequestMethod: request2.resourceRequestMethod,
        resourceRequestUri: request2.resourceRequestUri,
        shrClaims: request2.shrClaims,
        sshKid: request2.sshKid
      };
      this.logger.info("Sending token request to endpoint: " + authority.tokenEndpoint);
      reqTimestamp = TimeUtils_exports.nowSeconds();
      const response = await this.executePostToTokenEndpoint(endpoint2, requestBody, headers, thumbprint, request2.correlationId);
      serverTokenResponse = response.body;
      serverTokenResponse.status = response.status;
    }
    const responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin);
    responseHandler.validateTokenResponse(serverTokenResponse, refreshAccessToken);
    const tokenResponse = await responseHandler.handleServerTokenResponse(serverTokenResponse, this.authority, reqTimestamp, request2);
    return tokenResponse;
  }
  /**
   * generate the request to the server in the acceptable format
   * @param request - CommonClientCredentialRequest provided by the developer
   */
  async createTokenRequestBody(request2) {
    const parameters = /* @__PURE__ */ new Map();
    RequestParameterBuilder_exports.addClientId(parameters, this.config.authOptions.clientId);
    RequestParameterBuilder_exports.addScopes(parameters, request2.scopes, false);
    RequestParameterBuilder_exports.addGrantType(parameters, GrantType.CLIENT_CREDENTIALS_GRANT);
    RequestParameterBuilder_exports.addLibraryInfo(parameters, this.config.libraryInfo);
    RequestParameterBuilder_exports.addApplicationTelemetry(parameters, this.config.telemetry.application);
    RequestParameterBuilder_exports.addThrottling(parameters);
    if (this.serverTelemetryManager) {
      RequestParameterBuilder_exports.addServerTelemetry(parameters, this.serverTelemetryManager);
    }
    const correlationId = request2.correlationId || this.config.cryptoInterface.createNewGuid();
    RequestParameterBuilder_exports.addCorrelationId(parameters, correlationId);
    if (this.config.clientCredentials.clientSecret) {
      RequestParameterBuilder_exports.addClientSecret(parameters, this.config.clientCredentials.clientSecret);
    }
    const clientAssertion = request2.clientAssertion || this.config.clientCredentials.clientAssertion;
    if (clientAssertion) {
      RequestParameterBuilder_exports.addClientAssertion(parameters, await getClientAssertion(clientAssertion.assertion, this.config.authOptions.clientId, request2.resourceRequestUri));
      RequestParameterBuilder_exports.addClientAssertionType(parameters, clientAssertion.assertionType);
    }
    if (!StringUtils.isEmptyObj(request2.claims) || this.config.authOptions.clientCapabilities && this.config.authOptions.clientCapabilities.length > 0) {
      RequestParameterBuilder_exports.addClaims(parameters, request2.claims, this.config.authOptions.clientCapabilities);
    }
    return UrlUtils_exports.mapToQueryString(parameters);
  }
};

// node_modules/@azure/msal-node/dist/client/OnBehalfOfClient.mjs
var OnBehalfOfClient = class extends BaseClient {
  constructor(configuration) {
    super(configuration);
  }
  /**
   * Public API to acquire tokens with on behalf of flow
   * @param request - developer provided CommonOnBehalfOfRequest
   */
  async acquireToken(request2) {
    this.scopeSet = new ScopeSet(request2.scopes || []);
    this.userAssertionHash = await this.cryptoUtils.hashString(request2.oboAssertion);
    if (request2.skipCache || request2.claims) {
      return this.executeTokenRequest(request2, this.authority, this.userAssertionHash);
    }
    try {
      return await this.getCachedAuthenticationResult(request2);
    } catch (e) {
      return await this.executeTokenRequest(request2, this.authority, this.userAssertionHash);
    }
  }
  /**
   * look up cache for tokens
   * Find idtoken in the cache
   * Find accessToken based on user assertion and account info in the cache
   * Please note we are not yet supported OBO tokens refreshed with long lived RT. User will have to send a new assertion if the current access token expires
   * This is to prevent security issues when the assertion changes over time, however, longlived RT helps retaining the session
   * @param request - developer provided CommonOnBehalfOfRequest
   */
  async getCachedAuthenticationResult(request2) {
    const cachedAccessToken = this.readAccessTokenFromCacheForOBO(this.config.authOptions.clientId, request2);
    if (!cachedAccessToken) {
      this.serverTelemetryManager?.setCacheOutcome(CacheOutcome.NO_CACHED_ACCESS_TOKEN);
      this.logger.info("SilentFlowClient:acquireCachedToken - No access token found in cache for the given properties.");
      throw createClientAuthError(ClientAuthErrorCodes_exports.tokenRefreshRequired);
    } else if (TimeUtils_exports.isTokenExpired(cachedAccessToken.expiresOn, this.config.systemOptions.tokenRenewalOffsetSeconds)) {
      this.serverTelemetryManager?.setCacheOutcome(CacheOutcome.CACHED_ACCESS_TOKEN_EXPIRED);
      this.logger.info(`OnbehalfofFlow:getCachedAuthenticationResult - Cached access token is expired or will expire within ${this.config.systemOptions.tokenRenewalOffsetSeconds} seconds.`);
      throw createClientAuthError(ClientAuthErrorCodes_exports.tokenRefreshRequired);
    }
    const cachedIdToken = this.readIdTokenFromCacheForOBO(cachedAccessToken.homeAccountId, request2.correlationId);
    let idTokenClaims;
    let cachedAccount = null;
    if (cachedIdToken) {
      idTokenClaims = AuthToken_exports.extractTokenClaims(cachedIdToken.secret, EncodingUtils.base64Decode);
      const localAccountId = idTokenClaims.oid || idTokenClaims.sub;
      const accountInfo = {
        homeAccountId: cachedIdToken.homeAccountId,
        environment: cachedIdToken.environment,
        tenantId: cachedIdToken.realm,
        username: Constants.EMPTY_STRING,
        localAccountId: localAccountId || Constants.EMPTY_STRING
      };
      cachedAccount = this.cacheManager.getAccount(this.cacheManager.generateAccountKey(accountInfo), request2.correlationId);
    }
    if (this.config.serverTelemetryManager) {
      this.config.serverTelemetryManager.incrementCacheHits();
    }
    return ResponseHandler.generateAuthenticationResult(this.cryptoUtils, this.authority, {
      account: cachedAccount,
      accessToken: cachedAccessToken,
      idToken: cachedIdToken,
      refreshToken: null,
      appMetadata: null
    }, true, request2, idTokenClaims);
  }
  /**
   * read idtoken from cache, this is a specific implementation for OBO as the requirements differ from a generic lookup in the cacheManager
   * Certain use cases of OBO flow do not expect an idToken in the cache/or from the service
   * @param atHomeAccountId - account id
   */
  readIdTokenFromCacheForOBO(atHomeAccountId, correlationId) {
    const idTokenFilter = {
      homeAccountId: atHomeAccountId,
      environment: this.authority.canonicalAuthorityUrlComponents.HostNameAndPort,
      credentialType: CredentialType.ID_TOKEN,
      clientId: this.config.authOptions.clientId,
      realm: this.authority.tenant
    };
    const idTokenMap = this.cacheManager.getIdTokensByFilter(idTokenFilter, correlationId);
    if (Object.values(idTokenMap).length < 1) {
      return null;
    }
    return Object.values(idTokenMap)[0];
  }
  /**
   * Fetches the cached access token based on incoming assertion
   * @param clientId - client id
   * @param request - developer provided CommonOnBehalfOfRequest
   */
  readAccessTokenFromCacheForOBO(clientId, request2) {
    const authScheme = request2.authenticationScheme || AuthenticationScheme.BEARER;
    const credentialType = authScheme && authScheme.toLowerCase() !== AuthenticationScheme.BEARER.toLowerCase() ? CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME : CredentialType.ACCESS_TOKEN;
    const accessTokenFilter = {
      credentialType,
      clientId,
      target: ScopeSet.createSearchScopes(this.scopeSet.asArray()),
      tokenType: authScheme,
      keyId: request2.sshKid,
      requestedClaimsHash: request2.requestedClaimsHash,
      userAssertionHash: this.userAssertionHash
    };
    const accessTokens = this.cacheManager.getAccessTokensByFilter(accessTokenFilter, request2.correlationId);
    const numAccessTokens = accessTokens.length;
    if (numAccessTokens < 1) {
      return null;
    } else if (numAccessTokens > 1) {
      throw createClientAuthError(ClientAuthErrorCodes_exports.multipleMatchingTokens);
    }
    return accessTokens[0];
  }
  /**
   * Make a network call to the server requesting credentials
   * @param request - developer provided CommonOnBehalfOfRequest
   * @param authority - authority object
   */
  async executeTokenRequest(request2, authority, userAssertionHash) {
    const queryParametersString = this.createTokenQueryParameters(request2);
    const endpoint2 = UrlString.appendQueryString(authority.tokenEndpoint, queryParametersString);
    const requestBody = await this.createTokenRequestBody(request2);
    const headers = this.createTokenRequestHeaders();
    const thumbprint = {
      clientId: this.config.authOptions.clientId,
      authority: request2.authority,
      scopes: request2.scopes,
      claims: request2.claims,
      authenticationScheme: request2.authenticationScheme,
      resourceRequestMethod: request2.resourceRequestMethod,
      resourceRequestUri: request2.resourceRequestUri,
      shrClaims: request2.shrClaims,
      sshKid: request2.sshKid
    };
    const reqTimestamp = TimeUtils_exports.nowSeconds();
    const response = await this.executePostToTokenEndpoint(endpoint2, requestBody, headers, thumbprint, request2.correlationId);
    const responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin);
    responseHandler.validateTokenResponse(response.body);
    const tokenResponse = await responseHandler.handleServerTokenResponse(response.body, this.authority, reqTimestamp, request2, void 0, userAssertionHash);
    return tokenResponse;
  }
  /**
   * generate a server request in accepable format
   * @param request - developer provided CommonOnBehalfOfRequest
   */
  async createTokenRequestBody(request2) {
    const parameters = /* @__PURE__ */ new Map();
    RequestParameterBuilder_exports.addClientId(parameters, this.config.authOptions.clientId);
    RequestParameterBuilder_exports.addScopes(parameters, request2.scopes);
    RequestParameterBuilder_exports.addGrantType(parameters, GrantType.JWT_BEARER);
    RequestParameterBuilder_exports.addClientInfo(parameters);
    RequestParameterBuilder_exports.addLibraryInfo(parameters, this.config.libraryInfo);
    RequestParameterBuilder_exports.addApplicationTelemetry(parameters, this.config.telemetry.application);
    RequestParameterBuilder_exports.addThrottling(parameters);
    if (this.serverTelemetryManager) {
      RequestParameterBuilder_exports.addServerTelemetry(parameters, this.serverTelemetryManager);
    }
    const correlationId = request2.correlationId || this.config.cryptoInterface.createNewGuid();
    RequestParameterBuilder_exports.addCorrelationId(parameters, correlationId);
    RequestParameterBuilder_exports.addRequestTokenUse(parameters, AADServerParamKeys_exports.ON_BEHALF_OF);
    RequestParameterBuilder_exports.addOboAssertion(parameters, request2.oboAssertion);
    if (this.config.clientCredentials.clientSecret) {
      RequestParameterBuilder_exports.addClientSecret(parameters, this.config.clientCredentials.clientSecret);
    }
    const clientAssertion = this.config.clientCredentials.clientAssertion;
    if (clientAssertion) {
      RequestParameterBuilder_exports.addClientAssertion(parameters, await getClientAssertion(clientAssertion.assertion, this.config.authOptions.clientId, request2.resourceRequestUri));
      RequestParameterBuilder_exports.addClientAssertionType(parameters, clientAssertion.assertionType);
    }
    if (request2.claims || this.config.authOptions.clientCapabilities && this.config.authOptions.clientCapabilities.length > 0) {
      RequestParameterBuilder_exports.addClaims(parameters, request2.claims, this.config.authOptions.clientCapabilities);
    }
    return UrlUtils_exports.mapToQueryString(parameters);
  }
};

// node_modules/@azure/msal-node/dist/client/ConfidentialClientApplication.mjs
var ConfidentialClientApplication = class extends ClientApplication {
  /**
   * Constructor for the ConfidentialClientApplication
   *
   * Required attributes in the Configuration object are:
   * - clientID: the application ID of your application. You can obtain one by registering your application with our application registration portal
   * - authority: the authority URL for your application.
   * - client credential: Must set either client secret, certificate, or assertion for confidential clients. You can obtain a client secret from the application registration portal.
   *
   * In Azure AD, authority is a URL indicating of the form https://login.microsoftonline.com/\{Enter_the_Tenant_Info_Here\}.
   * If your application supports Accounts in one organizational directory, replace "Enter_the_Tenant_Info_Here" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).
   * If your application supports Accounts in any organizational directory, replace "Enter_the_Tenant_Info_Here" value with organizations.
   * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace "Enter_the_Tenant_Info_Here" value with common.
   * To restrict support to Personal Microsoft accounts only, replace "Enter_the_Tenant_Info_Here" value with consumers.
   *
   * In Azure B2C, authority is of the form https://\{instance\}/tfp/\{tenant\}/\{policyName\}/
   * Full B2C functionality will be available in this library in future versions.
   *
   * @param Configuration - configuration object for the MSAL ConfidentialClientApplication instance
   */
  constructor(configuration) {
    super(configuration);
    const clientSecretNotEmpty = !!this.config.auth.clientSecret;
    const clientAssertionNotEmpty = !!this.config.auth.clientAssertion;
    const certificateNotEmpty = (!!this.config.auth.clientCertificate?.thumbprint || !!this.config.auth.clientCertificate?.thumbprintSha256) && !!this.config.auth.clientCertificate?.privateKey;
    if (this.appTokenProvider) {
      return;
    }
    if (clientSecretNotEmpty && clientAssertionNotEmpty || clientAssertionNotEmpty && certificateNotEmpty || clientSecretNotEmpty && certificateNotEmpty) {
      throw createClientAuthError(ClientAuthErrorCodes_exports.invalidClientCredential);
    }
    if (this.config.auth.clientSecret) {
      this.clientSecret = this.config.auth.clientSecret;
      return;
    }
    if (this.config.auth.clientAssertion) {
      this.developerProvidedClientAssertion = this.config.auth.clientAssertion;
      return;
    }
    if (!certificateNotEmpty) {
      throw createClientAuthError(ClientAuthErrorCodes_exports.invalidClientCredential);
    } else {
      this.clientAssertion = !!this.config.auth.clientCertificate.thumbprintSha256 ? ClientAssertion.fromCertificateWithSha256Thumbprint(this.config.auth.clientCertificate.thumbprintSha256, this.config.auth.clientCertificate.privateKey, this.config.auth.clientCertificate.x5c) : ClientAssertion.fromCertificate(
        // guaranteed to be a string, due to prior error checking in this function
        this.config.auth.clientCertificate.thumbprint,
        this.config.auth.clientCertificate.privateKey,
        this.config.auth.clientCertificate.x5c
      );
    }
    this.appTokenProvider = void 0;
  }
  /**
   * This extensibility point only works for the client_credential flow, i.e. acquireTokenByClientCredential and
   * is meant for Azure SDK to enhance Managed Identity support.
   *
   * @param IAppTokenProvider  - Extensibility interface, which allows the app developer to return a token from a custom source.
   */
  SetAppTokenProvider(provider) {
    this.appTokenProvider = provider;
  }
  /**
   * Acquires tokens from the authority for the application (not for an end user).
   */
  async acquireTokenByClientCredential(request2) {
    this.logger.info("acquireTokenByClientCredential called", request2.correlationId);
    let clientAssertion;
    if (request2.clientAssertion) {
      clientAssertion = {
        assertion: await getClientAssertion(
          request2.clientAssertion,
          this.config.auth.clientId
          // tokenEndpoint will be undefined. resourceRequestUri is omitted in ClientCredentialRequest
        ),
        assertionType: Constants2.JWT_BEARER_ASSERTION_TYPE
      };
    }
    const baseRequest = await this.initializeBaseRequest(request2);
    const validBaseRequest = {
      ...baseRequest,
      scopes: baseRequest.scopes.filter((scope) => !OIDC_DEFAULT_SCOPES.includes(scope))
    };
    const validRequest = {
      ...request2,
      ...validBaseRequest,
      clientAssertion
    };
    const authority = new UrlString(validRequest.authority);
    const tenantId = authority.getUrlComponents().PathSegments[0];
    if (Object.values(AADAuthorityConstants).includes(tenantId)) {
      throw createClientAuthError(ClientAuthErrorCodes_exports.missingTenantIdError);
    }
    const ENV_MSAL_FORCE_REGION = process.env[MSAL_FORCE_REGION];
    let region;
    if (validRequest.azureRegion !== "DisableMsalForceRegion") {
      if (!validRequest.azureRegion && ENV_MSAL_FORCE_REGION) {
        region = ENV_MSAL_FORCE_REGION;
      } else {
        region = validRequest.azureRegion;
      }
    }
    const azureRegionConfiguration = {
      azureRegion: region,
      environmentRegion: process.env[REGION_ENVIRONMENT_VARIABLE]
    };
    const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenByClientCredential, validRequest.correlationId, validRequest.skipCache);
    try {
      const discoveredAuthority = await this.createAuthority(validRequest.authority, validRequest.correlationId, azureRegionConfiguration, request2.azureCloudOptions);
      const clientCredentialConfig = await this.buildOauthClientConfiguration(discoveredAuthority, validRequest.correlationId, "", serverTelemetryManager);
      const clientCredentialClient = new ClientCredentialClient(clientCredentialConfig, this.appTokenProvider);
      this.logger.verbose("Client credential client created", validRequest.correlationId);
      return await clientCredentialClient.acquireToken(validRequest);
    } catch (e) {
      if (e instanceof AuthError) {
        e.setCorrelationId(validRequest.correlationId);
      }
      serverTelemetryManager.cacheFailedRequest(e);
      throw e;
    }
  }
  /**
   * Acquires tokens from the authority for the application.
   *
   * Used in scenarios where the current app is a middle-tier service which was called with a token
   * representing an end user. The current app can use the token (oboAssertion) to request another
   * token to access downstream web API, on behalf of that user.
   *
   * The current middle-tier app has no user interaction to obtain consent.
   * See how to gain consent upfront for your middle-tier app from this article.
   * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-on-behalf-of-flow#gaining-consent-for-the-middle-tier-application
   */
  async acquireTokenOnBehalfOf(request2) {
    this.logger.info("acquireTokenOnBehalfOf called", request2.correlationId);
    const validRequest = {
      ...request2,
      ...await this.initializeBaseRequest(request2)
    };
    try {
      const discoveredAuthority = await this.createAuthority(validRequest.authority, validRequest.correlationId, void 0, request2.azureCloudOptions);
      const onBehalfOfConfig = await this.buildOauthClientConfiguration(discoveredAuthority, validRequest.correlationId, "", void 0);
      const oboClient = new OnBehalfOfClient(onBehalfOfConfig);
      this.logger.verbose("On behalf of client created", validRequest.correlationId);
      return await oboClient.acquireToken(validRequest);
    } catch (e) {
      if (e instanceof AuthError) {
        e.setCorrelationId(validRequest.correlationId);
      }
      throw e;
    }
  }
};

// node_modules/@azure/msal-node/dist/utils/TimeUtils.mjs
function isIso8601(dateString) {
  if (typeof dateString !== "string") {
    return false;
  }
  const date = new Date(dateString);
  return !isNaN(date.getTime()) && date.toISOString() === dateString;
}

// node_modules/@azure/msal-node/dist/network/HttpClientWithRetries.mjs
var HttpClientWithRetries = class {
  constructor(httpClientNoRetries, retryPolicy, logger) {
    this.httpClientNoRetries = httpClientNoRetries;
    this.retryPolicy = retryPolicy;
    this.logger = logger;
  }
  async sendNetworkRequestAsyncHelper(httpMethod, url, options) {
    if (httpMethod === HttpMethod2.GET) {
      return this.httpClientNoRetries.sendGetRequestAsync(url, options);
    } else {
      return this.httpClientNoRetries.sendPostRequestAsync(url, options);
    }
  }
  async sendNetworkRequestAsync(httpMethod, url, options) {
    let response = await this.sendNetworkRequestAsyncHelper(httpMethod, url, options);
    if ("isNewRequest" in this.retryPolicy) {
      this.retryPolicy.isNewRequest = true;
    }
    let currentRetry = 0;
    while (await this.retryPolicy.pauseForRetry(response.status, currentRetry, this.logger, response.headers[HeaderNames.RETRY_AFTER])) {
      response = await this.sendNetworkRequestAsyncHelper(httpMethod, url, options);
      currentRetry++;
    }
    return response;
  }
  async sendGetRequestAsync(url, options) {
    return this.sendNetworkRequestAsync(HttpMethod2.GET, url, options);
  }
  async sendPostRequestAsync(url, options) {
    return this.sendNetworkRequestAsync(HttpMethod2.POST, url, options);
  }
};

// node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/BaseManagedIdentitySource.mjs
var ManagedIdentityUserAssignedIdQueryParameterNames = {
  MANAGED_IDENTITY_CLIENT_ID_2017: "clientid",
  MANAGED_IDENTITY_CLIENT_ID: "client_id",
  MANAGED_IDENTITY_OBJECT_ID: "object_id",
  MANAGED_IDENTITY_RESOURCE_ID_IMDS: "msi_res_id",
  MANAGED_IDENTITY_RESOURCE_ID_NON_IMDS: "mi_res_id"
};
var BaseManagedIdentitySource = class {
  constructor(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries) {
    this.logger = logger;
    this.nodeStorage = nodeStorage;
    this.networkClient = networkClient;
    this.cryptoProvider = cryptoProvider;
    this.disableInternalRetries = disableInternalRetries;
  }
  async getServerTokenResponseAsync(response, _networkClient, _networkRequest, _networkRequestOptions) {
    return this.getServerTokenResponse(response);
  }
  getServerTokenResponse(response) {
    let refreshIn, expiresIn;
    if (response.body.expires_on) {
      if (isIso8601(response.body.expires_on)) {
        response.body.expires_on = new Date(response.body.expires_on).getTime() / 1e3;
      }
      expiresIn = response.body.expires_on - TimeUtils_exports.nowSeconds();
      if (expiresIn > 2 * 3600) {
        refreshIn = expiresIn / 2;
      }
    }
    const serverTokenResponse = {
      status: response.status,
      // success
      access_token: response.body.access_token,
      expires_in: expiresIn,
      scope: response.body.resource,
      token_type: response.body.token_type,
      refresh_in: refreshIn,
      // error
      correlation_id: response.body.correlation_id || response.body.correlationId,
      error: typeof response.body.error === "string" ? response.body.error : response.body.error?.code,
      error_description: response.body.message || (typeof response.body.error === "string" ? response.body.error_description : response.body.error?.message),
      error_codes: response.body.error_codes,
      timestamp: response.body.timestamp,
      trace_id: response.body.trace_id
    };
    return serverTokenResponse;
  }
  async acquireTokenWithManagedIdentity(managedIdentityRequest, managedIdentityId, fakeAuthority, refreshAccessToken) {
    const networkRequest = this.createRequest(managedIdentityRequest.resource, managedIdentityId);
    if (managedIdentityRequest.revokedTokenSha256Hash) {
      this.logger.info(`[Managed Identity] The following claims are present in the request: ${managedIdentityRequest.claims}`);
      networkRequest.queryParameters[ManagedIdentityQueryParameters.SHA256_TOKEN_TO_REFRESH] = managedIdentityRequest.revokedTokenSha256Hash;
    }
    if (managedIdentityRequest.clientCapabilities?.length) {
      const clientCapabilities = managedIdentityRequest.clientCapabilities.toString();
      this.logger.info(`[Managed Identity] The following client capabilities are present in the request: ${clientCapabilities}`);
      networkRequest.queryParameters[ManagedIdentityQueryParameters.XMS_CC] = clientCapabilities;
    }
    const headers = networkRequest.headers;
    headers[HeaderNames.CONTENT_TYPE] = Constants.URL_FORM_CONTENT_TYPE;
    const networkRequestOptions = { headers };
    if (Object.keys(networkRequest.bodyParameters).length) {
      networkRequestOptions.body = networkRequest.computeParametersBodyString();
    }
    const networkClientHelper = this.disableInternalRetries ? this.networkClient : new HttpClientWithRetries(this.networkClient, networkRequest.retryPolicy, this.logger);
    const reqTimestamp = TimeUtils_exports.nowSeconds();
    let response;
    try {
      if (networkRequest.httpMethod === HttpMethod2.POST) {
        response = await networkClientHelper.sendPostRequestAsync(networkRequest.computeUri(), networkRequestOptions);
      } else {
        response = await networkClientHelper.sendGetRequestAsync(networkRequest.computeUri(), networkRequestOptions);
      }
    } catch (error) {
      if (error instanceof AuthError) {
        throw error;
      } else {
        throw createClientAuthError(ClientAuthErrorCodes_exports.networkError);
      }
    }
    const responseHandler = new ResponseHandler(managedIdentityId.id, this.nodeStorage, this.cryptoProvider, this.logger, null, null);
    const serverTokenResponse = await this.getServerTokenResponseAsync(response, networkClientHelper, networkRequest, networkRequestOptions);
    responseHandler.validateTokenResponse(serverTokenResponse, refreshAccessToken);
    return responseHandler.handleServerTokenResponse(serverTokenResponse, fakeAuthority, reqTimestamp, managedIdentityRequest);
  }
  getManagedIdentityUserAssignedIdQueryParameterKey(managedIdentityIdType, isImds, usesApi2017) {
    switch (managedIdentityIdType) {
      case ManagedIdentityIdType.USER_ASSIGNED_CLIENT_ID:
        this.logger.info(`[Managed Identity] [API version ${usesApi2017 ? "2017+" : "2019+"}] Adding user assigned client id to the request.`);
        return usesApi2017 ? ManagedIdentityUserAssignedIdQueryParameterNames.MANAGED_IDENTITY_CLIENT_ID_2017 : ManagedIdentityUserAssignedIdQueryParameterNames.MANAGED_IDENTITY_CLIENT_ID;
      case ManagedIdentityIdType.USER_ASSIGNED_RESOURCE_ID:
        this.logger.info("[Managed Identity] Adding user assigned resource id to the request.");
        return isImds ? ManagedIdentityUserAssignedIdQueryParameterNames.MANAGED_IDENTITY_RESOURCE_ID_IMDS : ManagedIdentityUserAssignedIdQueryParameterNames.MANAGED_IDENTITY_RESOURCE_ID_NON_IMDS;
      case ManagedIdentityIdType.USER_ASSIGNED_OBJECT_ID:
        this.logger.info("[Managed Identity] Adding user assigned object id to the request.");
        return ManagedIdentityUserAssignedIdQueryParameterNames.MANAGED_IDENTITY_OBJECT_ID;
      default:
        throw createManagedIdentityError(invalidManagedIdentityIdType);
    }
  }
};
BaseManagedIdentitySource.getValidatedEnvVariableUrlString = (envVariableStringName, envVariable, sourceName, logger) => {
  try {
    return new UrlString(envVariable).urlString;
  } catch (error) {
    logger.info(`[Managed Identity] ${sourceName} managed identity is unavailable because the '${envVariableStringName}' environment variable is malformed.`);
    throw createManagedIdentityError(MsiEnvironmentVariableUrlMalformedErrorCodes[envVariableStringName]);
  }
};

// node_modules/@azure/msal-node/dist/retry/DefaultManagedIdentityRetryPolicy.mjs
var DEFAULT_MANAGED_IDENTITY_HTTP_STATUS_CODES_TO_RETRY_ON = [
  HttpStatus.NOT_FOUND,
  HttpStatus.REQUEST_TIMEOUT,
  HttpStatus.TOO_MANY_REQUESTS,
  HttpStatus.SERVER_ERROR,
  HttpStatus.SERVICE_UNAVAILABLE,
  HttpStatus.GATEWAY_TIMEOUT
];

// node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/AzureArc.mjs
var SUPPORTED_AZURE_ARC_PLATFORMS = {
  win32: `${process.env["ProgramData"]}\\AzureConnectedMachineAgent\\Tokens\\`,
  linux: "/var/opt/azcmagent/tokens/"
};
var AZURE_ARC_FILE_DETECTION = {
  win32: `${process.env["ProgramFiles"]}\\AzureConnectedMachineAgent\\himds.exe`,
  linux: "/opt/azcmagent/bin/himds"
};

// node_modules/@azure/msal-node/dist/retry/ImdsRetryPolicy.mjs
var HTTP_STATUS_400_CODES_FOR_EXPONENTIAL_STRATEGY = [
  HttpStatus.NOT_FOUND,
  HttpStatus.REQUEST_TIMEOUT,
  HttpStatus.GONE,
  HttpStatus.TOO_MANY_REQUESTS
];
var HTTP_STATUS_GONE_RETRY_AFTER_MS = 10 * 1e3;

// node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/Imds.mjs
var IMDS_TOKEN_PATH = "/metadata/identity/oauth2/token";
var DEFAULT_IMDS_ENDPOINT = `http://169.254.169.254${IMDS_TOKEN_PATH}`;

// node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/MachineLearning.mjs
var MANAGED_IDENTITY_MACHINE_LEARNING_UNSUPPORTED_ID_TYPE_ERROR = `Only client id is supported for user-assigned managed identity in ${ManagedIdentitySourceNames.MACHINE_LEARNING}.`;

// node_modules/@azure/msal-node/dist/client/ManagedIdentityApplication.mjs
var SOURCES_THAT_SUPPORT_TOKEN_REVOCATION = [ManagedIdentitySourceNames.SERVICE_FABRIC];

// src/lib/FsnxApiClient.js
var import_crypto4 = __toESM(require("crypto"), 1);

// node_modules/@octokit/rest/node_modules/universal-user-agent/index.js
function getUserAgent() {
  if (typeof navigator === "object" && "userAgent" in navigator) {
    return navigator.userAgent;
  }
  if (typeof process === "object" && process.version !== void 0) {
    return `Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`;
  }
  return "<environment undetectable>";
}

// node_modules/@octokit/rest/node_modules/before-after-hook/lib/register.js
function register(state, name3, method, options) {
  if (typeof method !== "function") {
    throw new Error("method for before hook must be a function");
  }
  if (!options) {
    options = {};
  }
  if (Array.isArray(name3)) {
    return name3.reverse().reduce((callback, name4) => {
      return register.bind(null, state, name4, callback, options);
    }, method)();
  }
  return Promise.resolve().then(() => {
    if (!state.registry[name3]) {
      return method(options);
    }
    return state.registry[name3].reduce((method2, registered) => {
      return registered.hook.bind(null, method2, options);
    }, method)();
  });
}

// node_modules/@octokit/rest/node_modules/before-after-hook/lib/add.js
function addHook(state, kind, name3, hook2) {
  const orig = hook2;
  if (!state.registry[name3]) {
    state.registry[name3] = [];
  }
  if (kind === "before") {
    hook2 = (method, options) => {
      return Promise.resolve().then(orig.bind(null, options)).then(method.bind(null, options));
    };
  }
  if (kind === "after") {
    hook2 = (method, options) => {
      let result;
      return Promise.resolve().then(method.bind(null, options)).then((result_) => {
        result = result_;
        return orig(result, options);
      }).then(() => {
        return result;
      });
    };
  }
  if (kind === "error") {
    hook2 = (method, options) => {
      return Promise.resolve().then(method.bind(null, options)).catch((error) => {
        return orig(error, options);
      });
    };
  }
  state.registry[name3].push({
    hook: hook2,
    orig
  });
}

// node_modules/@octokit/rest/node_modules/before-after-hook/lib/remove.js
function removeHook(state, name3, method) {
  if (!state.registry[name3]) {
    return;
  }
  const index = state.registry[name3].map((registered) => {
    return registered.orig;
  }).indexOf(method);
  if (index === -1) {
    return;
  }
  state.registry[name3].splice(index, 1);
}

// node_modules/@octokit/rest/node_modules/before-after-hook/index.js
var bind = Function.bind;
var bindable = bind.bind(bind);
function bindApi(hook2, state, name3) {
  const removeHookRef = bindable(removeHook, null).apply(
    null,
    name3 ? [state, name3] : [state]
  );
  hook2.api = { remove: removeHookRef };
  hook2.remove = removeHookRef;
  ["before", "error", "after", "wrap"].forEach((kind) => {
    const args = name3 ? [state, kind, name3] : [state, kind];
    hook2[kind] = hook2.api[kind] = bindable(addHook, null).apply(null, args);
  });
}
function Singular() {
  const singularHookName = Symbol("Singular");
  const singularHookState = {
    registry: {}
  };
  const singularHook = register.bind(null, singularHookState, singularHookName);
  bindApi(singularHook, singularHookState, singularHookName);
  return singularHook;
}
function Collection() {
  const state = {
    registry: {}
  };
  const hook2 = register.bind(null, state);
  bindApi(hook2, state);
  return hook2;
}
var before_after_hook_default = { Singular, Collection };

// node_modules/@octokit/rest/node_modules/@octokit/endpoint/dist-bundle/index.js
var VERSION = "0.0.0-development";
var userAgent = `octokit-endpoint.js/${VERSION} ${getUserAgent()}`;
var DEFAULTS = {
  method: "GET",
  baseUrl: "https://api.github.com",
  headers: {
    accept: "application/vnd.github.v3+json",
    "user-agent": userAgent
  },
  mediaType: {
    format: ""
  }
};
function lowercaseKeys(object) {
  if (!object) {
    return {};
  }
  return Object.keys(object).reduce((newObj, key) => {
    newObj[key.toLowerCase()] = object[key];
    return newObj;
  }, {});
}
function isPlainObject(value) {
  if (typeof value !== "object" || value === null) return false;
  if (Object.prototype.toString.call(value) !== "[object Object]") return false;
  const proto = Object.getPrototypeOf(value);
  if (proto === null) return true;
  const Ctor = Object.prototype.hasOwnProperty.call(proto, "constructor") && proto.constructor;
  return typeof Ctor === "function" && Ctor instanceof Ctor && Function.prototype.call(Ctor) === Function.prototype.call(value);
}
function mergeDeep(defaults, options) {
  const result = Object.assign({}, defaults);
  Object.keys(options).forEach((key) => {
    if (isPlainObject(options[key])) {
      if (!(key in defaults)) Object.assign(result, { [key]: options[key] });
      else result[key] = mergeDeep(defaults[key], options[key]);
    } else {
      Object.assign(result, { [key]: options[key] });
    }
  });
  return result;
}
function removeUndefinedProperties(obj) {
  for (const key in obj) {
    if (obj[key] === void 0) {
      delete obj[key];
    }
  }
  return obj;
}
function merge(defaults, route, options) {
  if (typeof route === "string") {
    let [method, url] = route.split(" ");
    options = Object.assign(url ? { method, url } : { url: method }, options);
  } else {
    options = Object.assign({}, route);
  }
  options.headers = lowercaseKeys(options.headers);
  removeUndefinedProperties(options);
  removeUndefinedProperties(options.headers);
  const mergedOptions = mergeDeep(defaults || {}, options);
  if (options.url === "/graphql") {
    if (defaults && defaults.mediaType.previews?.length) {
      mergedOptions.mediaType.previews = defaults.mediaType.previews.filter(
        (preview) => !mergedOptions.mediaType.previews.includes(preview)
      ).concat(mergedOptions.mediaType.previews);
    }
    mergedOptions.mediaType.previews = (mergedOptions.mediaType.previews || []).map((preview) => preview.replace(/-preview/, ""));
  }
  return mergedOptions;
}
function addQueryParameters(url, parameters) {
  const separator = /\?/.test(url) ? "&" : "?";
  const names = Object.keys(parameters);
  if (names.length === 0) {
    return url;
  }
  return url + separator + names.map((name3) => {
    if (name3 === "q") {
      return "q=" + parameters.q.split("+").map(encodeURIComponent).join("+");
    }
    return `${name3}=${encodeURIComponent(parameters[name3])}`;
  }).join("&");
}
var urlVariableRegex = /\{[^{}}]+\}/g;
function removeNonChars(variableName) {
  return variableName.replace(/(?:^\W+)|(?:(?<!\W)\W+$)/g, "").split(/,/);
}
function extractUrlVariableNames(url) {
  const matches = url.match(urlVariableRegex);
  if (!matches) {
    return [];
  }
  return matches.map(removeNonChars).reduce((a, b) => a.concat(b), []);
}
function omit(object, keysToOmit) {
  const result = { __proto__: null };
  for (const key of Object.keys(object)) {
    if (keysToOmit.indexOf(key) === -1) {
      result[key] = object[key];
    }
  }
  return result;
}
function encodeReserved(str) {
  return str.split(/(%[0-9A-Fa-f]{2})/g).map(function(part) {
    if (!/%[0-9A-Fa-f]/.test(part)) {
      part = encodeURI(part).replace(/%5B/g, "[").replace(/%5D/g, "]");
    }
    return part;
  }).join("");
}
function encodeUnreserved(str) {
  return encodeURIComponent(str).replace(/[!'()*]/g, function(c) {
    return "%" + c.charCodeAt(0).toString(16).toUpperCase();
  });
}
function encodeValue(operator, value, key) {
  value = operator === "+" || operator === "#" ? encodeReserved(value) : encodeUnreserved(value);
  if (key) {
    return encodeUnreserved(key) + "=" + value;
  } else {
    return value;
  }
}
function isDefined(value) {
  return value !== void 0 && value !== null;
}
function isKeyOperator(operator) {
  return operator === ";" || operator === "&" || operator === "?";
}
function getValues(context, operator, key, modifier) {
  var value = context[key], result = [];
  if (isDefined(value) && value !== "") {
    if (typeof value === "string" || typeof value === "number" || typeof value === "boolean") {
      value = value.toString();
      if (modifier && modifier !== "*") {
        value = value.substring(0, parseInt(modifier, 10));
      }
      result.push(
        encodeValue(operator, value, isKeyOperator(operator) ? key : "")
      );
    } else {
      if (modifier === "*") {
        if (Array.isArray(value)) {
          value.filter(isDefined).forEach(function(value2) {
            result.push(
              encodeValue(operator, value2, isKeyOperator(operator) ? key : "")
            );
          });
        } else {
          Object.keys(value).forEach(function(k) {
            if (isDefined(value[k])) {
              result.push(encodeValue(operator, value[k], k));
            }
          });
        }
      } else {
        const tmp = [];
        if (Array.isArray(value)) {
          value.filter(isDefined).forEach(function(value2) {
            tmp.push(encodeValue(operator, value2));
          });
        } else {
          Object.keys(value).forEach(function(k) {
            if (isDefined(value[k])) {
              tmp.push(encodeUnreserved(k));
              tmp.push(encodeValue(operator, value[k].toString()));
            }
          });
        }
        if (isKeyOperator(operator)) {
          result.push(encodeUnreserved(key) + "=" + tmp.join(","));
        } else if (tmp.length !== 0) {
          result.push(tmp.join(","));
        }
      }
    }
  } else {
    if (operator === ";") {
      if (isDefined(value)) {
        result.push(encodeUnreserved(key));
      }
    } else if (value === "" && (operator === "&" || operator === "?")) {
      result.push(encodeUnreserved(key) + "=");
    } else if (value === "") {
      result.push("");
    }
  }
  return result;
}
function parseUrl(template) {
  return {
    expand: expand.bind(null, template)
  };
}
function expand(template, context) {
  var operators = ["+", "#", ".", "/", ";", "?", "&"];
  template = template.replace(
    /\{([^\{\}]+)\}|([^\{\}]+)/g,
    function(_, expression, literal) {
      if (expression) {
        let operator = "";
        const values = [];
        if (operators.indexOf(expression.charAt(0)) !== -1) {
          operator = expression.charAt(0);
          expression = expression.substr(1);
        }
        expression.split(/,/g).forEach(function(variable) {
          var tmp = /([^:\*]*)(?::(\d+)|(\*))?/.exec(variable);
          values.push(getValues(context, operator, tmp[1], tmp[2] || tmp[3]));
        });
        if (operator && operator !== "+") {
          var separator = ",";
          if (operator === "?") {
            separator = "&";
          } else if (operator !== "#") {
            separator = operator;
          }
          return (values.length !== 0 ? operator : "") + values.join(separator);
        } else {
          return values.join(",");
        }
      } else {
        return encodeReserved(literal);
      }
    }
  );
  if (template === "/") {
    return template;
  } else {
    return template.replace(/\/$/, "");
  }
}
function parse(options) {
  let method = options.method.toUpperCase();
  let url = (options.url || "/").replace(/:([a-z]\w+)/g, "{$1}");
  let headers = Object.assign({}, options.headers);
  let body;
  let parameters = omit(options, [
    "method",
    "baseUrl",
    "url",
    "headers",
    "request",
    "mediaType"
  ]);
  const urlVariableNames = extractUrlVariableNames(url);
  url = parseUrl(url).expand(parameters);
  if (!/^http/.test(url)) {
    url = options.baseUrl + url;
  }
  const omittedParameters = Object.keys(options).filter((option) => urlVariableNames.includes(option)).concat("baseUrl");
  const remainingParameters = omit(parameters, omittedParameters);
  const isBinaryRequest = /application\/octet-stream/i.test(headers.accept);
  if (!isBinaryRequest) {
    if (options.mediaType.format) {
      headers.accept = headers.accept.split(/,/).map(
        (format) => format.replace(
          /application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,
          `application/vnd$1$2.${options.mediaType.format}`
        )
      ).join(",");
    }
    if (url.endsWith("/graphql")) {
      if (options.mediaType.previews?.length) {
        const previewsFromAcceptHeader = headers.accept.match(/(?<![\w-])[\w-]+(?=-preview)/g) || [];
        headers.accept = previewsFromAcceptHeader.concat(options.mediaType.previews).map((preview) => {
          const format = options.mediaType.format ? `.${options.mediaType.format}` : "+json";
          return `application/vnd.github.${preview}-preview${format}`;
        }).join(",");
      }
    }
  }
  if (["GET", "HEAD"].includes(method)) {
    url = addQueryParameters(url, remainingParameters);
  } else {
    if ("data" in remainingParameters) {
      body = remainingParameters.data;
    } else {
      if (Object.keys(remainingParameters).length) {
        body = remainingParameters;
      }
    }
  }
  if (!headers["content-type"] && typeof body !== "undefined") {
    headers["content-type"] = "application/json; charset=utf-8";
  }
  if (["PATCH", "PUT"].includes(method) && typeof body === "undefined") {
    body = "";
  }
  return Object.assign(
    { method, url, headers },
    typeof body !== "undefined" ? { body } : null,
    options.request ? { request: options.request } : null
  );
}
function endpointWithDefaults(defaults, route, options) {
  return parse(merge(defaults, route, options));
}
function withDefaults(oldDefaults, newDefaults) {
  const DEFAULTS2 = merge(oldDefaults, newDefaults);
  const endpoint2 = endpointWithDefaults.bind(null, DEFAULTS2);
  return Object.assign(endpoint2, {
    DEFAULTS: DEFAULTS2,
    defaults: withDefaults.bind(null, DEFAULTS2),
    merge: merge.bind(null, DEFAULTS2),
    parse
  });
}
var endpoint = withDefaults(null, DEFAULTS);

// node_modules/@octokit/rest/node_modules/@octokit/request/dist-bundle/index.js
var import_fast_content_type_parse = __toESM(require_fast_content_type_parse(), 1);

// node_modules/@octokit/rest/node_modules/@octokit/request-error/dist-src/index.js
var RequestError = class extends Error {
  name;
  /**
   * http status code
   */
  status;
  /**
   * Request options that lead to the error.
   */
  request;
  /**
   * Response object if a response was received
   */
  response;
  constructor(message, statusCode, options) {
    super(message);
    this.name = "HttpError";
    this.status = Number.parseInt(statusCode);
    if (Number.isNaN(this.status)) {
      this.status = 0;
    }
    if ("response" in options) {
      this.response = options.response;
    }
    const requestCopy = Object.assign({}, options.request);
    if (options.request.headers.authorization) {
      requestCopy.headers = Object.assign({}, options.request.headers, {
        authorization: options.request.headers.authorization.replace(
          /(?<! ) .*$/,
          " [REDACTED]"
        )
      });
    }
    requestCopy.url = requestCopy.url.replace(/\bclient_secret=\w+/g, "client_secret=[REDACTED]").replace(/\baccess_token=\w+/g, "access_token=[REDACTED]");
    this.request = requestCopy;
  }
};

// node_modules/@octokit/rest/node_modules/@octokit/request/dist-bundle/index.js
var VERSION2 = "10.0.5";
var defaults_default = {
  headers: {
    "user-agent": `octokit-request.js/${VERSION2} ${getUserAgent()}`
  }
};
function isPlainObject2(value) {
  if (typeof value !== "object" || value === null) return false;
  if (Object.prototype.toString.call(value) !== "[object Object]") return false;
  const proto = Object.getPrototypeOf(value);
  if (proto === null) return true;
  const Ctor = Object.prototype.hasOwnProperty.call(proto, "constructor") && proto.constructor;
  return typeof Ctor === "function" && Ctor instanceof Ctor && Function.prototype.call(Ctor) === Function.prototype.call(value);
}
async function fetchWrapper(requestOptions) {
  const fetch2 = requestOptions.request?.fetch || globalThis.fetch;
  if (!fetch2) {
    throw new Error(
      "fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing"
    );
  }
  const log = requestOptions.request?.log || console;
  const parseSuccessResponseBody = requestOptions.request?.parseSuccessResponseBody !== false;
  const body = isPlainObject2(requestOptions.body) || Array.isArray(requestOptions.body) ? JSON.stringify(requestOptions.body) : requestOptions.body;
  const requestHeaders = Object.fromEntries(
    Object.entries(requestOptions.headers).map(([name3, value]) => [
      name3,
      String(value)
    ])
  );
  let fetchResponse;
  try {
    fetchResponse = await fetch2(requestOptions.url, {
      method: requestOptions.method,
      body,
      redirect: requestOptions.request?.redirect,
      headers: requestHeaders,
      signal: requestOptions.request?.signal,
      // duplex must be set if request.body is ReadableStream or Async Iterables.
      // See https://fetch.spec.whatwg.org/#dom-requestinit-duplex.
      ...requestOptions.body && { duplex: "half" }
    });
  } catch (error) {
    let message = "Unknown Error";
    if (error instanceof Error) {
      if (error.name === "AbortError") {
        error.status = 500;
        throw error;
      }
      message = error.message;
      if (error.name === "TypeError" && "cause" in error) {
        if (error.cause instanceof Error) {
          message = error.cause.message;
        } else if (typeof error.cause === "string") {
          message = error.cause;
        }
      }
    }
    const requestError = new RequestError(message, 500, {
      request: requestOptions
    });
    requestError.cause = error;
    throw requestError;
  }
  const status = fetchResponse.status;
  const url = fetchResponse.url;
  const responseHeaders = {};
  for (const [key, value] of fetchResponse.headers) {
    responseHeaders[key] = value;
  }
  const octokitResponse = {
    url,
    status,
    headers: responseHeaders,
    data: ""
  };
  if ("deprecation" in responseHeaders) {
    const matches = responseHeaders.link && responseHeaders.link.match(/<([^<>]+)>; rel="deprecation"/);
    const deprecationLink = matches && matches.pop();
    log.warn(
      `[@octokit/request] "${requestOptions.method} ${requestOptions.url}" is deprecated. It is scheduled to be removed on ${responseHeaders.sunset}${deprecationLink ? `. See ${deprecationLink}` : ""}`
    );
  }
  if (status === 204 || status === 205) {
    return octokitResponse;
  }
  if (requestOptions.method === "HEAD") {
    if (status < 400) {
      return octokitResponse;
    }
    throw new RequestError(fetchResponse.statusText, status, {
      response: octokitResponse,
      request: requestOptions
    });
  }
  if (status === 304) {
    octokitResponse.data = await getResponseData(fetchResponse);
    throw new RequestError("Not modified", status, {
      response: octokitResponse,
      request: requestOptions
    });
  }
  if (status >= 400) {
    octokitResponse.data = await getResponseData(fetchResponse);
    throw new RequestError(toErrorMessage(octokitResponse.data), status, {
      response: octokitResponse,
      request: requestOptions
    });
  }
  octokitResponse.data = parseSuccessResponseBody ? await getResponseData(fetchResponse) : fetchResponse.body;
  return octokitResponse;
}
async function getResponseData(response) {
  const contentType = response.headers.get("content-type");
  if (!contentType) {
    return response.text().catch(() => "");
  }
  const mimetype = (0, import_fast_content_type_parse.safeParse)(contentType);
  if (isJSONResponse(mimetype)) {
    let text = "";
    try {
      text = await response.text();
      return JSON.parse(text);
    } catch (err) {
      return text;
    }
  } else if (mimetype.type.startsWith("text/") || mimetype.parameters.charset?.toLowerCase() === "utf-8") {
    return response.text().catch(() => "");
  } else {
    return response.arrayBuffer().catch(() => new ArrayBuffer(0));
  }
}
function isJSONResponse(mimetype) {
  return mimetype.type === "application/json" || mimetype.type === "application/scim+json";
}
function toErrorMessage(data) {
  if (typeof data === "string") {
    return data;
  }
  if (data instanceof ArrayBuffer) {
    return "Unknown error";
  }
  if ("message" in data) {
    const suffix = "documentation_url" in data ? ` - ${data.documentation_url}` : "";
    return Array.isArray(data.errors) ? `${data.message}: ${data.errors.map((v) => JSON.stringify(v)).join(", ")}${suffix}` : `${data.message}${suffix}`;
  }
  return `Unknown error: ${JSON.stringify(data)}`;
}
function withDefaults2(oldEndpoint, newDefaults) {
  const endpoint2 = oldEndpoint.defaults(newDefaults);
  const newApi = function(route, parameters) {
    const endpointOptions = endpoint2.merge(route, parameters);
    if (!endpointOptions.request || !endpointOptions.request.hook) {
      return fetchWrapper(endpoint2.parse(endpointOptions));
    }
    const request2 = (route2, parameters2) => {
      return fetchWrapper(
        endpoint2.parse(endpoint2.merge(route2, parameters2))
      );
    };
    Object.assign(request2, {
      endpoint: endpoint2,
      defaults: withDefaults2.bind(null, endpoint2)
    });
    return endpointOptions.request.hook(request2, endpointOptions);
  };
  return Object.assign(newApi, {
    endpoint: endpoint2,
    defaults: withDefaults2.bind(null, endpoint2)
  });
}
var request = withDefaults2(endpoint, defaults_default);

// node_modules/@octokit/rest/node_modules/@octokit/graphql/dist-bundle/index.js
var VERSION3 = "0.0.0-development";
function _buildMessageForResponseErrors(data) {
  return `Request failed due to following response errors:
` + data.errors.map((e) => ` - ${e.message}`).join("\n");
}
var GraphqlResponseError = class extends Error {
  constructor(request2, headers, response) {
    super(_buildMessageForResponseErrors(response));
    this.request = request2;
    this.headers = headers;
    this.response = response;
    this.errors = response.errors;
    this.data = response.data;
    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, this.constructor);
    }
  }
  name = "GraphqlResponseError";
  errors;
  data;
};
var NON_VARIABLE_OPTIONS = [
  "method",
  "baseUrl",
  "url",
  "headers",
  "request",
  "query",
  "mediaType",
  "operationName"
];
var FORBIDDEN_VARIABLE_OPTIONS = ["query", "method", "url"];
var GHES_V3_SUFFIX_REGEX = /\/api\/v3\/?$/;
function graphql(request2, query, options) {
  if (options) {
    if (typeof query === "string" && "query" in options) {
      return Promise.reject(
        new Error(`[@octokit/graphql] "query" cannot be used as variable name`)
      );
    }
    for (const key in options) {
      if (!FORBIDDEN_VARIABLE_OPTIONS.includes(key)) continue;
      return Promise.reject(
        new Error(
          `[@octokit/graphql] "${key}" cannot be used as variable name`
        )
      );
    }
  }
  const parsedOptions = typeof query === "string" ? Object.assign({ query }, options) : query;
  const requestOptions = Object.keys(
    parsedOptions
  ).reduce((result, key) => {
    if (NON_VARIABLE_OPTIONS.includes(key)) {
      result[key] = parsedOptions[key];
      return result;
    }
    if (!result.variables) {
      result.variables = {};
    }
    result.variables[key] = parsedOptions[key];
    return result;
  }, {});
  const baseUrl = parsedOptions.baseUrl || request2.endpoint.DEFAULTS.baseUrl;
  if (GHES_V3_SUFFIX_REGEX.test(baseUrl)) {
    requestOptions.url = baseUrl.replace(GHES_V3_SUFFIX_REGEX, "/api/graphql");
  }
  return request2(requestOptions).then((response) => {
    if (response.data.errors) {
      const headers = {};
      for (const key of Object.keys(response.headers)) {
        headers[key] = response.headers[key];
      }
      throw new GraphqlResponseError(
        requestOptions,
        headers,
        response.data
      );
    }
    return response.data.data;
  });
}
function withDefaults3(request2, newDefaults) {
  const newRequest = request2.defaults(newDefaults);
  const newApi = (query, options) => {
    return graphql(newRequest, query, options);
  };
  return Object.assign(newApi, {
    defaults: withDefaults3.bind(null, newRequest),
    endpoint: newRequest.endpoint
  });
}
var graphql2 = withDefaults3(request, {
  headers: {
    "user-agent": `octokit-graphql.js/${VERSION3} ${getUserAgent()}`
  },
  method: "POST",
  url: "/graphql"
});
function withCustomRequest(customRequest) {
  return withDefaults3(customRequest, {
    method: "POST",
    url: "/graphql"
  });
}

// node_modules/@octokit/rest/node_modules/@octokit/auth-token/dist-bundle/index.js
var b64url = "(?:[a-zA-Z0-9_-]+)";
var sep = "\\.";
var jwtRE = new RegExp(`^${b64url}${sep}${b64url}${sep}${b64url}$`);
var isJWT = jwtRE.test.bind(jwtRE);
async function auth(token) {
  const isApp = isJWT(token);
  const isInstallation = token.startsWith("v1.") || token.startsWith("ghs_");
  const isUserToServer = token.startsWith("ghu_");
  const tokenType = isApp ? "app" : isInstallation ? "installation" : isUserToServer ? "user-to-server" : "oauth";
  return {
    type: "token",
    token,
    tokenType
  };
}
function withAuthorizationPrefix(token) {
  if (token.split(/\./).length === 3) {
    return `bearer ${token}`;
  }
  return `token ${token}`;
}
async function hook(token, request2, route, parameters) {
  const endpoint2 = request2.endpoint.merge(
    route,
    parameters
  );
  endpoint2.headers.authorization = withAuthorizationPrefix(token);
  return request2(endpoint2);
}
var createTokenAuth = function createTokenAuth2(token) {
  if (!token) {
    throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");
  }
  if (typeof token !== "string") {
    throw new Error(
      "[@octokit/auth-token] Token passed to createTokenAuth is not a string"
    );
  }
  token = token.replace(/^(token|bearer) +/i, "");
  return Object.assign(auth.bind(null, token), {
    hook: hook.bind(null, token)
  });
};

// node_modules/@octokit/rest/node_modules/@octokit/core/dist-src/version.js
var VERSION4 = "7.0.5";

// node_modules/@octokit/rest/node_modules/@octokit/core/dist-src/index.js
var noop = () => {
};
var consoleWarn = console.warn.bind(console);
var consoleError = console.error.bind(console);
function createLogger(logger = {}) {
  if (typeof logger.debug !== "function") {
    logger.debug = noop;
  }
  if (typeof logger.info !== "function") {
    logger.info = noop;
  }
  if (typeof logger.warn !== "function") {
    logger.warn = consoleWarn;
  }
  if (typeof logger.error !== "function") {
    logger.error = consoleError;
  }
  return logger;
}
var userAgentTrail = `octokit-core.js/${VERSION4} ${getUserAgent()}`;
var Octokit = class {
  static VERSION = VERSION4;
  static defaults(defaults) {
    const OctokitWithDefaults = class extends this {
      constructor(...args) {
        const options = args[0] || {};
        if (typeof defaults === "function") {
          super(defaults(options));
          return;
        }
        super(
          Object.assign(
            {},
            defaults,
            options,
            options.userAgent && defaults.userAgent ? {
              userAgent: `${options.userAgent} ${defaults.userAgent}`
            } : null
          )
        );
      }
    };
    return OctokitWithDefaults;
  }
  static plugins = [];
  /**
   * Attach a plugin (or many) to your Octokit instance.
   *
   * @example
   * const API = Octokit.plugin(plugin1, plugin2, plugin3, ...)
   */
  static plugin(...newPlugins) {
    const currentPlugins = this.plugins;
    const NewOctokit = class extends this {
      static plugins = currentPlugins.concat(
        newPlugins.filter((plugin) => !currentPlugins.includes(plugin))
      );
    };
    return NewOctokit;
  }
  constructor(options = {}) {
    const hook2 = new before_after_hook_default.Collection();
    const requestDefaults = {
      baseUrl: request.endpoint.DEFAULTS.baseUrl,
      headers: {},
      request: Object.assign({}, options.request, {
        // @ts-ignore internal usage only, no need to type
        hook: hook2.bind(null, "request")
      }),
      mediaType: {
        previews: [],
        format: ""
      }
    };
    requestDefaults.headers["user-agent"] = options.userAgent ? `${options.userAgent} ${userAgentTrail}` : userAgentTrail;
    if (options.baseUrl) {
      requestDefaults.baseUrl = options.baseUrl;
    }
    if (options.previews) {
      requestDefaults.mediaType.previews = options.previews;
    }
    if (options.timeZone) {
      requestDefaults.headers["time-zone"] = options.timeZone;
    }
    this.request = request.defaults(requestDefaults);
    this.graphql = withCustomRequest(this.request).defaults(requestDefaults);
    this.log = createLogger(options.log);
    this.hook = hook2;
    if (!options.authStrategy) {
      if (!options.auth) {
        this.auth = async () => ({
          type: "unauthenticated"
        });
      } else {
        const auth2 = createTokenAuth(options.auth);
        hook2.wrap("request", auth2.hook);
        this.auth = auth2;
      }
    } else {
      const { authStrategy, ...otherOptions } = options;
      const auth2 = authStrategy(
        Object.assign(
          {
            request: this.request,
            log: this.log,
            // we pass the current octokit instance as well as its constructor options
            // to allow for authentication strategies that return a new octokit instance
            // that shares the same internal state as the current one. The original
            // requirement for this was the "event-octokit" authentication strategy
            // of https://github.com/probot/octokit-auth-probot.
            octokit: this,
            octokitOptions: otherOptions
          },
          options.auth
        )
      );
      hook2.wrap("request", auth2.hook);
      this.auth = auth2;
    }
    const classConstructor = this.constructor;
    for (let i = 0; i < classConstructor.plugins.length; ++i) {
      Object.assign(this, classConstructor.plugins[i](this, options));
    }
  }
  // assigned during constructor
  request;
  graphql;
  log;
  hook;
  // TODO: type `octokit.auth` based on passed options.authStrategy
  auth;
};

// node_modules/@octokit/rest/node_modules/@octokit/plugin-request-log/dist-src/version.js
var VERSION5 = "6.0.0";

// node_modules/@octokit/rest/node_modules/@octokit/plugin-request-log/dist-src/index.js
function requestLog(octokit) {
  octokit.hook.wrap("request", (request2, options) => {
    octokit.log.debug("request", options);
    const start = Date.now();
    const requestOptions = octokit.request.endpoint.parse(options);
    const path = requestOptions.url.replace(options.baseUrl, "");
    return request2(options).then((response) => {
      const requestId = response.headers["x-github-request-id"];
      octokit.log.info(
        `${requestOptions.method} ${path} - ${response.status} with id ${requestId} in ${Date.now() - start}ms`
      );
      return response;
    }).catch((error) => {
      const requestId = error.response?.headers["x-github-request-id"] || "UNKNOWN";
      octokit.log.error(
        `${requestOptions.method} ${path} - ${error.status} with id ${requestId} in ${Date.now() - start}ms`
      );
      throw error;
    });
  });
}
requestLog.VERSION = VERSION5;

// node_modules/@octokit/rest/node_modules/@octokit/plugin-paginate-rest/dist-bundle/index.js
var VERSION6 = "0.0.0-development";
function normalizePaginatedListResponse(response) {
  if (!response.data) {
    return {
      ...response,
      data: []
    };
  }
  const responseNeedsNormalization = ("total_count" in response.data || "total_commits" in response.data) && !("url" in response.data);
  if (!responseNeedsNormalization) return response;
  const incompleteResults = response.data.incomplete_results;
  const repositorySelection = response.data.repository_selection;
  const totalCount = response.data.total_count;
  const totalCommits = response.data.total_commits;
  delete response.data.incomplete_results;
  delete response.data.repository_selection;
  delete response.data.total_count;
  delete response.data.total_commits;
  const namespaceKey = Object.keys(response.data)[0];
  const data = response.data[namespaceKey];
  response.data = data;
  if (typeof incompleteResults !== "undefined") {
    response.data.incomplete_results = incompleteResults;
  }
  if (typeof repositorySelection !== "undefined") {
    response.data.repository_selection = repositorySelection;
  }
  response.data.total_count = totalCount;
  response.data.total_commits = totalCommits;
  return response;
}
function iterator(octokit, route, parameters) {
  const options = typeof route === "function" ? route.endpoint(parameters) : octokit.request.endpoint(route, parameters);
  const requestMethod = typeof route === "function" ? route : octokit.request;
  const method = options.method;
  const headers = options.headers;
  let url = options.url;
  return {
    [Symbol.asyncIterator]: () => ({
      async next() {
        if (!url) return { done: true };
        try {
          const response = await requestMethod({ method, url, headers });
          const normalizedResponse = normalizePaginatedListResponse(response);
          url = ((normalizedResponse.headers.link || "").match(
            /<([^<>]+)>;\s*rel="next"/
          ) || [])[1];
          if (!url && "total_commits" in normalizedResponse.data) {
            const parsedUrl = new URL(normalizedResponse.url);
            const params = parsedUrl.searchParams;
            const page = parseInt(params.get("page") || "1", 10);
            const per_page = parseInt(params.get("per_page") || "250", 10);
            if (page * per_page < normalizedResponse.data.total_commits) {
              params.set("page", String(page + 1));
              url = parsedUrl.toString();
            }
          }
          return { value: normalizedResponse };
        } catch (error) {
          if (error.status !== 409) throw error;
          url = "";
          return {
            value: {
              status: 200,
              headers: {},
              data: []
            }
          };
        }
      }
    })
  };
}
function paginate(octokit, route, parameters, mapFn) {
  if (typeof parameters === "function") {
    mapFn = parameters;
    parameters = void 0;
  }
  return gather(
    octokit,
    [],
    iterator(octokit, route, parameters)[Symbol.asyncIterator](),
    mapFn
  );
}
function gather(octokit, results, iterator2, mapFn) {
  return iterator2.next().then((result) => {
    if (result.done) {
      return results;
    }
    let earlyExit = false;
    function done() {
      earlyExit = true;
    }
    results = results.concat(
      mapFn ? mapFn(result.value, done) : result.value.data
    );
    if (earlyExit) {
      return results;
    }
    return gather(octokit, results, iterator2, mapFn);
  });
}
var composePaginateRest = Object.assign(paginate, {
  iterator
});
function paginateRest(octokit) {
  return {
    paginate: Object.assign(paginate.bind(null, octokit), {
      iterator: iterator.bind(null, octokit)
    })
  };
}
paginateRest.VERSION = VERSION6;

// node_modules/@octokit/rest/node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/version.js
var VERSION7 = "16.1.0";

// node_modules/@octokit/rest/node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/generated/endpoints.js
var Endpoints = {
  actions: {
    addCustomLabelsToSelfHostedRunnerForOrg: [
      "POST /orgs/{org}/actions/runners/{runner_id}/labels"
    ],
    addCustomLabelsToSelfHostedRunnerForRepo: [
      "POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"
    ],
    addRepoAccessToSelfHostedRunnerGroupInOrg: [
      "PUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}"
    ],
    addSelectedRepoToOrgSecret: [
      "PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"
    ],
    addSelectedRepoToOrgVariable: [
      "PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"
    ],
    approveWorkflowRun: [
      "POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"
    ],
    cancelWorkflowRun: [
      "POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"
    ],
    createEnvironmentVariable: [
      "POST /repos/{owner}/{repo}/environments/{environment_name}/variables"
    ],
    createHostedRunnerForOrg: ["POST /orgs/{org}/actions/hosted-runners"],
    createOrUpdateEnvironmentSecret: [
      "PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"
    ],
    createOrUpdateOrgSecret: ["PUT /orgs/{org}/actions/secrets/{secret_name}"],
    createOrUpdateRepoSecret: [
      "PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"
    ],
    createOrgVariable: ["POST /orgs/{org}/actions/variables"],
    createRegistrationTokenForOrg: [
      "POST /orgs/{org}/actions/runners/registration-token"
    ],
    createRegistrationTokenForRepo: [
      "POST /repos/{owner}/{repo}/actions/runners/registration-token"
    ],
    createRemoveTokenForOrg: ["POST /orgs/{org}/actions/runners/remove-token"],
    createRemoveTokenForRepo: [
      "POST /repos/{owner}/{repo}/actions/runners/remove-token"
    ],
    createRepoVariable: ["POST /repos/{owner}/{repo}/actions/variables"],
    createWorkflowDispatch: [
      "POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"
    ],
    deleteActionsCacheById: [
      "DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"
    ],
    deleteActionsCacheByKey: [
      "DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"
    ],
    deleteArtifact: [
      "DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"
    ],
    deleteEnvironmentSecret: [
      "DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"
    ],
    deleteEnvironmentVariable: [
      "DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"
    ],
    deleteHostedRunnerForOrg: [
      "DELETE /orgs/{org}/actions/hosted-runners/{hosted_runner_id}"
    ],
    deleteOrgSecret: ["DELETE /orgs/{org}/actions/secrets/{secret_name}"],
    deleteOrgVariable: ["DELETE /orgs/{org}/actions/variables/{name}"],
    deleteRepoSecret: [
      "DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"
    ],
    deleteRepoVariable: [
      "DELETE /repos/{owner}/{repo}/actions/variables/{name}"
    ],
    deleteSelfHostedRunnerFromOrg: [
      "DELETE /orgs/{org}/actions/runners/{runner_id}"
    ],
    deleteSelfHostedRunnerFromRepo: [
      "DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"
    ],
    deleteWorkflowRun: ["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],
    deleteWorkflowRunLogs: [
      "DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"
    ],
    disableSelectedRepositoryGithubActionsOrganization: [
      "DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"
    ],
    disableWorkflow: [
      "PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"
    ],
    downloadArtifact: [
      "GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"
    ],
    downloadJobLogsForWorkflowRun: [
      "GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"
    ],
    downloadWorkflowRunAttemptLogs: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"
    ],
    downloadWorkflowRunLogs: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"
    ],
    enableSelectedRepositoryGithubActionsOrganization: [
      "PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"
    ],
    enableWorkflow: [
      "PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"
    ],
    forceCancelWorkflowRun: [
      "POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel"
    ],
    generateRunnerJitconfigForOrg: [
      "POST /orgs/{org}/actions/runners/generate-jitconfig"
    ],
    generateRunnerJitconfigForRepo: [
      "POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig"
    ],
    getActionsCacheList: ["GET /repos/{owner}/{repo}/actions/caches"],
    getActionsCacheUsage: ["GET /repos/{owner}/{repo}/actions/cache/usage"],
    getActionsCacheUsageByRepoForOrg: [
      "GET /orgs/{org}/actions/cache/usage-by-repository"
    ],
    getActionsCacheUsageForOrg: ["GET /orgs/{org}/actions/cache/usage"],
    getAllowedActionsOrganization: [
      "GET /orgs/{org}/actions/permissions/selected-actions"
    ],
    getAllowedActionsRepository: [
      "GET /repos/{owner}/{repo}/actions/permissions/selected-actions"
    ],
    getArtifact: ["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],
    getCustomOidcSubClaimForRepo: [
      "GET /repos/{owner}/{repo}/actions/oidc/customization/sub"
    ],
    getEnvironmentPublicKey: [
      "GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-key"
    ],
    getEnvironmentSecret: [
      "GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"
    ],
    getEnvironmentVariable: [
      "GET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"
    ],
    getGithubActionsDefaultWorkflowPermissionsOrganization: [
      "GET /orgs/{org}/actions/permissions/workflow"
    ],
    getGithubActionsDefaultWorkflowPermissionsRepository: [
      "GET /repos/{owner}/{repo}/actions/permissions/workflow"
    ],
    getGithubActionsPermissionsOrganization: [
      "GET /orgs/{org}/actions/permissions"
    ],
    getGithubActionsPermissionsRepository: [
      "GET /repos/{owner}/{repo}/actions/permissions"
    ],
    getHostedRunnerForOrg: [
      "GET /orgs/{org}/actions/hosted-runners/{hosted_runner_id}"
    ],
    getHostedRunnersGithubOwnedImagesForOrg: [
      "GET /orgs/{org}/actions/hosted-runners/images/github-owned"
    ],
    getHostedRunnersLimitsForOrg: [
      "GET /orgs/{org}/actions/hosted-runners/limits"
    ],
    getHostedRunnersMachineSpecsForOrg: [
      "GET /orgs/{org}/actions/hosted-runners/machine-sizes"
    ],
    getHostedRunnersPartnerImagesForOrg: [
      "GET /orgs/{org}/actions/hosted-runners/images/partner"
    ],
    getHostedRunnersPlatformsForOrg: [
      "GET /orgs/{org}/actions/hosted-runners/platforms"
    ],
    getJobForWorkflowRun: ["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],
    getOrgPublicKey: ["GET /orgs/{org}/actions/secrets/public-key"],
    getOrgSecret: ["GET /orgs/{org}/actions/secrets/{secret_name}"],
    getOrgVariable: ["GET /orgs/{org}/actions/variables/{name}"],
    getPendingDeploymentsForRun: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"
    ],
    getRepoPermissions: [
      "GET /repos/{owner}/{repo}/actions/permissions",
      {},
      { renamed: ["actions", "getGithubActionsPermissionsRepository"] }
    ],
    getRepoPublicKey: ["GET /repos/{owner}/{repo}/actions/secrets/public-key"],
    getRepoSecret: ["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],
    getRepoVariable: ["GET /repos/{owner}/{repo}/actions/variables/{name}"],
    getReviewsForRun: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"
    ],
    getSelfHostedRunnerForOrg: ["GET /orgs/{org}/actions/runners/{runner_id}"],
    getSelfHostedRunnerForRepo: [
      "GET /repos/{owner}/{repo}/actions/runners/{runner_id}"
    ],
    getWorkflow: ["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],
    getWorkflowAccessToRepository: [
      "GET /repos/{owner}/{repo}/actions/permissions/access"
    ],
    getWorkflowRun: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],
    getWorkflowRunAttempt: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"
    ],
    getWorkflowRunUsage: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"
    ],
    getWorkflowUsage: [
      "GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"
    ],
    listArtifactsForRepo: ["GET /repos/{owner}/{repo}/actions/artifacts"],
    listEnvironmentSecrets: [
      "GET /repos/{owner}/{repo}/environments/{environment_name}/secrets"
    ],
    listEnvironmentVariables: [
      "GET /repos/{owner}/{repo}/environments/{environment_name}/variables"
    ],
    listGithubHostedRunnersInGroupForOrg: [
      "GET /orgs/{org}/actions/runner-groups/{runner_group_id}/hosted-runners"
    ],
    listHostedRunnersForOrg: ["GET /orgs/{org}/actions/hosted-runners"],
    listJobsForWorkflowRun: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"
    ],
    listJobsForWorkflowRunAttempt: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"
    ],
    listLabelsForSelfHostedRunnerForOrg: [
      "GET /orgs/{org}/actions/runners/{runner_id}/labels"
    ],
    listLabelsForSelfHostedRunnerForRepo: [
      "GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"
    ],
    listOrgSecrets: ["GET /orgs/{org}/actions/secrets"],
    listOrgVariables: ["GET /orgs/{org}/actions/variables"],
    listRepoOrganizationSecrets: [
      "GET /repos/{owner}/{repo}/actions/organization-secrets"
    ],
    listRepoOrganizationVariables: [
      "GET /repos/{owner}/{repo}/actions/organization-variables"
    ],
    listRepoSecrets: ["GET /repos/{owner}/{repo}/actions/secrets"],
    listRepoVariables: ["GET /repos/{owner}/{repo}/actions/variables"],
    listRepoWorkflows: ["GET /repos/{owner}/{repo}/actions/workflows"],
    listRunnerApplicationsForOrg: ["GET /orgs/{org}/actions/runners/downloads"],
    listRunnerApplicationsForRepo: [
      "GET /repos/{owner}/{repo}/actions/runners/downloads"
    ],
    listSelectedReposForOrgSecret: [
      "GET /orgs/{org}/actions/secrets/{secret_name}/repositories"
    ],
    listSelectedReposForOrgVariable: [
      "GET /orgs/{org}/actions/variables/{name}/repositories"
    ],
    listSelectedRepositoriesEnabledGithubActionsOrganization: [
      "GET /orgs/{org}/actions/permissions/repositories"
    ],
    listSelfHostedRunnersForOrg: ["GET /orgs/{org}/actions/runners"],
    listSelfHostedRunnersForRepo: ["GET /repos/{owner}/{repo}/actions/runners"],
    listWorkflowRunArtifacts: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"
    ],
    listWorkflowRuns: [
      "GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"
    ],
    listWorkflowRunsForRepo: ["GET /repos/{owner}/{repo}/actions/runs"],
    reRunJobForWorkflowRun: [
      "POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"
    ],
    reRunWorkflow: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],
    reRunWorkflowFailedJobs: [
      "POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"
    ],
    removeAllCustomLabelsFromSelfHostedRunnerForOrg: [
      "DELETE /orgs/{org}/actions/runners/{runner_id}/labels"
    ],
    removeAllCustomLabelsFromSelfHostedRunnerForRepo: [
      "DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"
    ],
    removeCustomLabelFromSelfHostedRunnerForOrg: [
      "DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"
    ],
    removeCustomLabelFromSelfHostedRunnerForRepo: [
      "DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"
    ],
    removeSelectedRepoFromOrgSecret: [
      "DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"
    ],
    removeSelectedRepoFromOrgVariable: [
      "DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"
    ],
    reviewCustomGatesForRun: [
      "POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"
    ],
    reviewPendingDeploymentsForRun: [
      "POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"
    ],
    setAllowedActionsOrganization: [
      "PUT /orgs/{org}/actions/permissions/selected-actions"
    ],
    setAllowedActionsRepository: [
      "PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"
    ],
    setCustomLabelsForSelfHostedRunnerForOrg: [
      "PUT /orgs/{org}/actions/runners/{runner_id}/labels"
    ],
    setCustomLabelsForSelfHostedRunnerForRepo: [
      "PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"
    ],
    setCustomOidcSubClaimForRepo: [
      "PUT /repos/{owner}/{repo}/actions/oidc/customization/sub"
    ],
    setGithubActionsDefaultWorkflowPermissionsOrganization: [
      "PUT /orgs/{org}/actions/permissions/workflow"
    ],
    setGithubActionsDefaultWorkflowPermissionsRepository: [
      "PUT /repos/{owner}/{repo}/actions/permissions/workflow"
    ],
    setGithubActionsPermissionsOrganization: [
      "PUT /orgs/{org}/actions/permissions"
    ],
    setGithubActionsPermissionsRepository: [
      "PUT /repos/{owner}/{repo}/actions/permissions"
    ],
    setSelectedReposForOrgSecret: [
      "PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"
    ],
    setSelectedReposForOrgVariable: [
      "PUT /orgs/{org}/actions/variables/{name}/repositories"
    ],
    setSelectedRepositoriesEnabledGithubActionsOrganization: [
      "PUT /orgs/{org}/actions/permissions/repositories"
    ],
    setWorkflowAccessToRepository: [
      "PUT /repos/{owner}/{repo}/actions/permissions/access"
    ],
    updateEnvironmentVariable: [
      "PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"
    ],
    updateHostedRunnerForOrg: [
      "PATCH /orgs/{org}/actions/hosted-runners/{hosted_runner_id}"
    ],
    updateOrgVariable: ["PATCH /orgs/{org}/actions/variables/{name}"],
    updateRepoVariable: [
      "PATCH /repos/{owner}/{repo}/actions/variables/{name}"
    ]
  },
  activity: {
    checkRepoIsStarredByAuthenticatedUser: ["GET /user/starred/{owner}/{repo}"],
    deleteRepoSubscription: ["DELETE /repos/{owner}/{repo}/subscription"],
    deleteThreadSubscription: [
      "DELETE /notifications/threads/{thread_id}/subscription"
    ],
    getFeeds: ["GET /feeds"],
    getRepoSubscription: ["GET /repos/{owner}/{repo}/subscription"],
    getThread: ["GET /notifications/threads/{thread_id}"],
    getThreadSubscriptionForAuthenticatedUser: [
      "GET /notifications/threads/{thread_id}/subscription"
    ],
    listEventsForAuthenticatedUser: ["GET /users/{username}/events"],
    listNotificationsForAuthenticatedUser: ["GET /notifications"],
    listOrgEventsForAuthenticatedUser: [
      "GET /users/{username}/events/orgs/{org}"
    ],
    listPublicEvents: ["GET /events"],
    listPublicEventsForRepoNetwork: ["GET /networks/{owner}/{repo}/events"],
    listPublicEventsForUser: ["GET /users/{username}/events/public"],
    listPublicOrgEvents: ["GET /orgs/{org}/events"],
    listReceivedEventsForUser: ["GET /users/{username}/received_events"],
    listReceivedPublicEventsForUser: [
      "GET /users/{username}/received_events/public"
    ],
    listRepoEvents: ["GET /repos/{owner}/{repo}/events"],
    listRepoNotificationsForAuthenticatedUser: [
      "GET /repos/{owner}/{repo}/notifications"
    ],
    listReposStarredByAuthenticatedUser: ["GET /user/starred"],
    listReposStarredByUser: ["GET /users/{username}/starred"],
    listReposWatchedByUser: ["GET /users/{username}/subscriptions"],
    listStargazersForRepo: ["GET /repos/{owner}/{repo}/stargazers"],
    listWatchedReposForAuthenticatedUser: ["GET /user/subscriptions"],
    listWatchersForRepo: ["GET /repos/{owner}/{repo}/subscribers"],
    markNotificationsAsRead: ["PUT /notifications"],
    markRepoNotificationsAsRead: ["PUT /repos/{owner}/{repo}/notifications"],
    markThreadAsDone: ["DELETE /notifications/threads/{thread_id}"],
    markThreadAsRead: ["PATCH /notifications/threads/{thread_id}"],
    setRepoSubscription: ["PUT /repos/{owner}/{repo}/subscription"],
    setThreadSubscription: [
      "PUT /notifications/threads/{thread_id}/subscription"
    ],
    starRepoForAuthenticatedUser: ["PUT /user/starred/{owner}/{repo}"],
    unstarRepoForAuthenticatedUser: ["DELETE /user/starred/{owner}/{repo}"]
  },
  apps: {
    addRepoToInstallation: [
      "PUT /user/installations/{installation_id}/repositories/{repository_id}",
      {},
      { renamed: ["apps", "addRepoToInstallationForAuthenticatedUser"] }
    ],
    addRepoToInstallationForAuthenticatedUser: [
      "PUT /user/installations/{installation_id}/repositories/{repository_id}"
    ],
    checkToken: ["POST /applications/{client_id}/token"],
    createFromManifest: ["POST /app-manifests/{code}/conversions"],
    createInstallationAccessToken: [
      "POST /app/installations/{installation_id}/access_tokens"
    ],
    deleteAuthorization: ["DELETE /applications/{client_id}/grant"],
    deleteInstallation: ["DELETE /app/installations/{installation_id}"],
    deleteToken: ["DELETE /applications/{client_id}/token"],
    getAuthenticated: ["GET /app"],
    getBySlug: ["GET /apps/{app_slug}"],
    getInstallation: ["GET /app/installations/{installation_id}"],
    getOrgInstallation: ["GET /orgs/{org}/installation"],
    getRepoInstallation: ["GET /repos/{owner}/{repo}/installation"],
    getSubscriptionPlanForAccount: [
      "GET /marketplace_listing/accounts/{account_id}"
    ],
    getSubscriptionPlanForAccountStubbed: [
      "GET /marketplace_listing/stubbed/accounts/{account_id}"
    ],
    getUserInstallation: ["GET /users/{username}/installation"],
    getWebhookConfigForApp: ["GET /app/hook/config"],
    getWebhookDelivery: ["GET /app/hook/deliveries/{delivery_id}"],
    listAccountsForPlan: ["GET /marketplace_listing/plans/{plan_id}/accounts"],
    listAccountsForPlanStubbed: [
      "GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"
    ],
    listInstallationReposForAuthenticatedUser: [
      "GET /user/installations/{installation_id}/repositories"
    ],
    listInstallationRequestsForAuthenticatedApp: [
      "GET /app/installation-requests"
    ],
    listInstallations: ["GET /app/installations"],
    listInstallationsForAuthenticatedUser: ["GET /user/installations"],
    listPlans: ["GET /marketplace_listing/plans"],
    listPlansStubbed: ["GET /marketplace_listing/stubbed/plans"],
    listReposAccessibleToInstallation: ["GET /installation/repositories"],
    listSubscriptionsForAuthenticatedUser: ["GET /user/marketplace_purchases"],
    listSubscriptionsForAuthenticatedUserStubbed: [
      "GET /user/marketplace_purchases/stubbed"
    ],
    listWebhookDeliveries: ["GET /app/hook/deliveries"],
    redeliverWebhookDelivery: [
      "POST /app/hook/deliveries/{delivery_id}/attempts"
    ],
    removeRepoFromInstallation: [
      "DELETE /user/installations/{installation_id}/repositories/{repository_id}",
      {},
      { renamed: ["apps", "removeRepoFromInstallationForAuthenticatedUser"] }
    ],
    removeRepoFromInstallationForAuthenticatedUser: [
      "DELETE /user/installations/{installation_id}/repositories/{repository_id}"
    ],
    resetToken: ["PATCH /applications/{client_id}/token"],
    revokeInstallationAccessToken: ["DELETE /installation/token"],
    scopeToken: ["POST /applications/{client_id}/token/scoped"],
    suspendInstallation: ["PUT /app/installations/{installation_id}/suspended"],
    unsuspendInstallation: [
      "DELETE /app/installations/{installation_id}/suspended"
    ],
    updateWebhookConfigForApp: ["PATCH /app/hook/config"]
  },
  billing: {
    getGithubActionsBillingOrg: ["GET /orgs/{org}/settings/billing/actions"],
    getGithubActionsBillingUser: [
      "GET /users/{username}/settings/billing/actions"
    ],
    getGithubBillingUsageReportOrg: [
      "GET /organizations/{org}/settings/billing/usage"
    ],
    getGithubBillingUsageReportUser: [
      "GET /users/{username}/settings/billing/usage"
    ],
    getGithubPackagesBillingOrg: ["GET /orgs/{org}/settings/billing/packages"],
    getGithubPackagesBillingUser: [
      "GET /users/{username}/settings/billing/packages"
    ],
    getSharedStorageBillingOrg: [
      "GET /orgs/{org}/settings/billing/shared-storage"
    ],
    getSharedStorageBillingUser: [
      "GET /users/{username}/settings/billing/shared-storage"
    ]
  },
  campaigns: {
    createCampaign: ["POST /orgs/{org}/campaigns"],
    deleteCampaign: ["DELETE /orgs/{org}/campaigns/{campaign_number}"],
    getCampaignSummary: ["GET /orgs/{org}/campaigns/{campaign_number}"],
    listOrgCampaigns: ["GET /orgs/{org}/campaigns"],
    updateCampaign: ["PATCH /orgs/{org}/campaigns/{campaign_number}"]
  },
  checks: {
    create: ["POST /repos/{owner}/{repo}/check-runs"],
    createSuite: ["POST /repos/{owner}/{repo}/check-suites"],
    get: ["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],
    getSuite: ["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],
    listAnnotations: [
      "GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"
    ],
    listForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],
    listForSuite: [
      "GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"
    ],
    listSuitesForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],
    rerequestRun: [
      "POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"
    ],
    rerequestSuite: [
      "POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"
    ],
    setSuitesPreferences: [
      "PATCH /repos/{owner}/{repo}/check-suites/preferences"
    ],
    update: ["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]
  },
  codeScanning: {
    commitAutofix: [
      "POST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix/commits"
    ],
    createAutofix: [
      "POST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix"
    ],
    createVariantAnalysis: [
      "POST /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses"
    ],
    deleteAnalysis: [
      "DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"
    ],
    deleteCodeqlDatabase: [
      "DELETE /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"
    ],
    getAlert: [
      "GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",
      {},
      { renamedParameters: { alert_id: "alert_number" } }
    ],
    getAnalysis: [
      "GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"
    ],
    getAutofix: [
      "GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix"
    ],
    getCodeqlDatabase: [
      "GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"
    ],
    getDefaultSetup: ["GET /repos/{owner}/{repo}/code-scanning/default-setup"],
    getSarif: ["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],
    getVariantAnalysis: [
      "GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}"
    ],
    getVariantAnalysisRepoTask: [
      "GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}"
    ],
    listAlertInstances: [
      "GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"
    ],
    listAlertsForOrg: ["GET /orgs/{org}/code-scanning/alerts"],
    listAlertsForRepo: ["GET /repos/{owner}/{repo}/code-scanning/alerts"],
    listAlertsInstances: [
      "GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",
      {},
      { renamed: ["codeScanning", "listAlertInstances"] }
    ],
    listCodeqlDatabases: [
      "GET /repos/{owner}/{repo}/code-scanning/codeql/databases"
    ],
    listRecentAnalyses: ["GET /repos/{owner}/{repo}/code-scanning/analyses"],
    updateAlert: [
      "PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"
    ],
    updateDefaultSetup: [
      "PATCH /repos/{owner}/{repo}/code-scanning/default-setup"
    ],
    uploadSarif: ["POST /repos/{owner}/{repo}/code-scanning/sarifs"]
  },
  codeSecurity: {
    attachConfiguration: [
      "POST /orgs/{org}/code-security/configurations/{configuration_id}/attach"
    ],
    attachEnterpriseConfiguration: [
      "POST /enterprises/{enterprise}/code-security/configurations/{configuration_id}/attach"
    ],
    createConfiguration: ["POST /orgs/{org}/code-security/configurations"],
    createConfigurationForEnterprise: [
      "POST /enterprises/{enterprise}/code-security/configurations"
    ],
    deleteConfiguration: [
      "DELETE /orgs/{org}/code-security/configurations/{configuration_id}"
    ],
    deleteConfigurationForEnterprise: [
      "DELETE /enterprises/{enterprise}/code-security/configurations/{configuration_id}"
    ],
    detachConfiguration: [
      "DELETE /orgs/{org}/code-security/configurations/detach"
    ],
    getConfiguration: [
      "GET /orgs/{org}/code-security/configurations/{configuration_id}"
    ],
    getConfigurationForRepository: [
      "GET /repos/{owner}/{repo}/code-security-configuration"
    ],
    getConfigurationsForEnterprise: [
      "GET /enterprises/{enterprise}/code-security/configurations"
    ],
    getConfigurationsForOrg: ["GET /orgs/{org}/code-security/configurations"],
    getDefaultConfigurations: [
      "GET /orgs/{org}/code-security/configurations/defaults"
    ],
    getDefaultConfigurationsForEnterprise: [
      "GET /enterprises/{enterprise}/code-security/configurations/defaults"
    ],
    getRepositoriesForConfiguration: [
      "GET /orgs/{org}/code-security/configurations/{configuration_id}/repositories"
    ],
    getRepositoriesForEnterpriseConfiguration: [
      "GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}/repositories"
    ],
    getSingleConfigurationForEnterprise: [
      "GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}"
    ],
    setConfigurationAsDefault: [
      "PUT /orgs/{org}/code-security/configurations/{configuration_id}/defaults"
    ],
    setConfigurationAsDefaultForEnterprise: [
      "PUT /enterprises/{enterprise}/code-security/configurations/{configuration_id}/defaults"
    ],
    updateConfiguration: [
      "PATCH /orgs/{org}/code-security/configurations/{configuration_id}"
    ],
    updateEnterpriseConfiguration: [
      "PATCH /enterprises/{enterprise}/code-security/configurations/{configuration_id}"
    ]
  },
  codesOfConduct: {
    getAllCodesOfConduct: ["GET /codes_of_conduct"],
    getConductCode: ["GET /codes_of_conduct/{key}"]
  },
  codespaces: {
    addRepositoryForSecretForAuthenticatedUser: [
      "PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"
    ],
    addSelectedRepoToOrgSecret: [
      "PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"
    ],
    checkPermissionsForDevcontainer: [
      "GET /repos/{owner}/{repo}/codespaces/permissions_check"
    ],
    codespaceMachinesForAuthenticatedUser: [
      "GET /user/codespaces/{codespace_name}/machines"
    ],
    createForAuthenticatedUser: ["POST /user/codespaces"],
    createOrUpdateOrgSecret: [
      "PUT /orgs/{org}/codespaces/secrets/{secret_name}"
    ],
    createOrUpdateRepoSecret: [
      "PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"
    ],
    createOrUpdateSecretForAuthenticatedUser: [
      "PUT /user/codespaces/secrets/{secret_name}"
    ],
    createWithPrForAuthenticatedUser: [
      "POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"
    ],
    createWithRepoForAuthenticatedUser: [
      "POST /repos/{owner}/{repo}/codespaces"
    ],
    deleteForAuthenticatedUser: ["DELETE /user/codespaces/{codespace_name}"],
    deleteFromOrganization: [
      "DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"
    ],
    deleteOrgSecret: ["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],
    deleteRepoSecret: [
      "DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"
    ],
    deleteSecretForAuthenticatedUser: [
      "DELETE /user/codespaces/secrets/{secret_name}"
    ],
    exportForAuthenticatedUser: [
      "POST /user/codespaces/{codespace_name}/exports"
    ],
    getCodespacesForUserInOrg: [
      "GET /orgs/{org}/members/{username}/codespaces"
    ],
    getExportDetailsForAuthenticatedUser: [
      "GET /user/codespaces/{codespace_name}/exports/{export_id}"
    ],
    getForAuthenticatedUser: ["GET /user/codespaces/{codespace_name}"],
    getOrgPublicKey: ["GET /orgs/{org}/codespaces/secrets/public-key"],
    getOrgSecret: ["GET /orgs/{org}/codespaces/secrets/{secret_name}"],
    getPublicKeyForAuthenticatedUser: [
      "GET /user/codespaces/secrets/public-key"
    ],
    getRepoPublicKey: [
      "GET /repos/{owner}/{repo}/codespaces/secrets/public-key"
    ],
    getRepoSecret: [
      "GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"
    ],
    getSecretForAuthenticatedUser: [
      "GET /user/codespaces/secrets/{secret_name}"
    ],
    listDevcontainersInRepositoryForAuthenticatedUser: [
      "GET /repos/{owner}/{repo}/codespaces/devcontainers"
    ],
    listForAuthenticatedUser: ["GET /user/codespaces"],
    listInOrganization: [
      "GET /orgs/{org}/codespaces",
      {},
      { renamedParameters: { org_id: "org" } }
    ],
    listInRepositoryForAuthenticatedUser: [
      "GET /repos/{owner}/{repo}/codespaces"
    ],
    listOrgSecrets: ["GET /orgs/{org}/codespaces/secrets"],
    listRepoSecrets: ["GET /repos/{owner}/{repo}/codespaces/secrets"],
    listRepositoriesForSecretForAuthenticatedUser: [
      "GET /user/codespaces/secrets/{secret_name}/repositories"
    ],
    listSecretsForAuthenticatedUser: ["GET /user/codespaces/secrets"],
    listSelectedReposForOrgSecret: [
      "GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"
    ],
    preFlightWithRepoForAuthenticatedUser: [
      "GET /repos/{owner}/{repo}/codespaces/new"
    ],
    publishForAuthenticatedUser: [
      "POST /user/codespaces/{codespace_name}/publish"
    ],
    removeRepositoryForSecretForAuthenticatedUser: [
      "DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"
    ],
    removeSelectedRepoFromOrgSecret: [
      "DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"
    ],
    repoMachinesForAuthenticatedUser: [
      "GET /repos/{owner}/{repo}/codespaces/machines"
    ],
    setRepositoriesForSecretForAuthenticatedUser: [
      "PUT /user/codespaces/secrets/{secret_name}/repositories"
    ],
    setSelectedReposForOrgSecret: [
      "PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"
    ],
    startForAuthenticatedUser: ["POST /user/codespaces/{codespace_name}/start"],
    stopForAuthenticatedUser: ["POST /user/codespaces/{codespace_name}/stop"],
    stopInOrganization: [
      "POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"
    ],
    updateForAuthenticatedUser: ["PATCH /user/codespaces/{codespace_name}"]
  },
  copilot: {
    addCopilotSeatsForTeams: [
      "POST /orgs/{org}/copilot/billing/selected_teams"
    ],
    addCopilotSeatsForUsers: [
      "POST /orgs/{org}/copilot/billing/selected_users"
    ],
    cancelCopilotSeatAssignmentForTeams: [
      "DELETE /orgs/{org}/copilot/billing/selected_teams"
    ],
    cancelCopilotSeatAssignmentForUsers: [
      "DELETE /orgs/{org}/copilot/billing/selected_users"
    ],
    copilotMetricsForOrganization: ["GET /orgs/{org}/copilot/metrics"],
    copilotMetricsForTeam: ["GET /orgs/{org}/team/{team_slug}/copilot/metrics"],
    getCopilotOrganizationDetails: ["GET /orgs/{org}/copilot/billing"],
    getCopilotSeatDetailsForUser: [
      "GET /orgs/{org}/members/{username}/copilot"
    ],
    listCopilotSeats: ["GET /orgs/{org}/copilot/billing/seats"]
  },
  credentials: { revoke: ["POST /credentials/revoke"] },
  dependabot: {
    addSelectedRepoToOrgSecret: [
      "PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"
    ],
    createOrUpdateOrgSecret: [
      "PUT /orgs/{org}/dependabot/secrets/{secret_name}"
    ],
    createOrUpdateRepoSecret: [
      "PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"
    ],
    deleteOrgSecret: ["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],
    deleteRepoSecret: [
      "DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"
    ],
    getAlert: ["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],
    getOrgPublicKey: ["GET /orgs/{org}/dependabot/secrets/public-key"],
    getOrgSecret: ["GET /orgs/{org}/dependabot/secrets/{secret_name}"],
    getRepoPublicKey: [
      "GET /repos/{owner}/{repo}/dependabot/secrets/public-key"
    ],
    getRepoSecret: [
      "GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"
    ],
    listAlertsForEnterprise: [
      "GET /enterprises/{enterprise}/dependabot/alerts"
    ],
    listAlertsForOrg: ["GET /orgs/{org}/dependabot/alerts"],
    listAlertsForRepo: ["GET /repos/{owner}/{repo}/dependabot/alerts"],
    listOrgSecrets: ["GET /orgs/{org}/dependabot/secrets"],
    listRepoSecrets: ["GET /repos/{owner}/{repo}/dependabot/secrets"],
    listSelectedReposForOrgSecret: [
      "GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"
    ],
    removeSelectedRepoFromOrgSecret: [
      "DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"
    ],
    repositoryAccessForOrg: [
      "GET /organizations/{org}/dependabot/repository-access"
    ],
    setRepositoryAccessDefaultLevel: [
      "PUT /organizations/{org}/dependabot/repository-access/default-level"
    ],
    setSelectedReposForOrgSecret: [
      "PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"
    ],
    updateAlert: [
      "PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"
    ],
    updateRepositoryAccessForOrg: [
      "PATCH /organizations/{org}/dependabot/repository-access"
    ]
  },
  dependencyGraph: {
    createRepositorySnapshot: [
      "POST /repos/{owner}/{repo}/dependency-graph/snapshots"
    ],
    diffRange: [
      "GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"
    ],
    exportSbom: ["GET /repos/{owner}/{repo}/dependency-graph/sbom"]
  },
  emojis: { get: ["GET /emojis"] },
  gists: {
    checkIsStarred: ["GET /gists/{gist_id}/star"],
    create: ["POST /gists"],
    createComment: ["POST /gists/{gist_id}/comments"],
    delete: ["DELETE /gists/{gist_id}"],
    deleteComment: ["DELETE /gists/{gist_id}/comments/{comment_id}"],
    fork: ["POST /gists/{gist_id}/forks"],
    get: ["GET /gists/{gist_id}"],
    getComment: ["GET /gists/{gist_id}/comments/{comment_id}"],
    getRevision: ["GET /gists/{gist_id}/{sha}"],
    list: ["GET /gists"],
    listComments: ["GET /gists/{gist_id}/comments"],
    listCommits: ["GET /gists/{gist_id}/commits"],
    listForUser: ["GET /users/{username}/gists"],
    listForks: ["GET /gists/{gist_id}/forks"],
    listPublic: ["GET /gists/public"],
    listStarred: ["GET /gists/starred"],
    star: ["PUT /gists/{gist_id}/star"],
    unstar: ["DELETE /gists/{gist_id}/star"],
    update: ["PATCH /gists/{gist_id}"],
    updateComment: ["PATCH /gists/{gist_id}/comments/{comment_id}"]
  },
  git: {
    createBlob: ["POST /repos/{owner}/{repo}/git/blobs"],
    createCommit: ["POST /repos/{owner}/{repo}/git/commits"],
    createRef: ["POST /repos/{owner}/{repo}/git/refs"],
    createTag: ["POST /repos/{owner}/{repo}/git/tags"],
    createTree: ["POST /repos/{owner}/{repo}/git/trees"],
    deleteRef: ["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],
    getBlob: ["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],
    getCommit: ["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],
    getRef: ["GET /repos/{owner}/{repo}/git/ref/{ref}"],
    getTag: ["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],
    getTree: ["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],
    listMatchingRefs: ["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],
    updateRef: ["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]
  },
  gitignore: {
    getAllTemplates: ["GET /gitignore/templates"],
    getTemplate: ["GET /gitignore/templates/{name}"]
  },
  hostedCompute: {
    createNetworkConfigurationForOrg: [
      "POST /orgs/{org}/settings/network-configurations"
    ],
    deleteNetworkConfigurationFromOrg: [
      "DELETE /orgs/{org}/settings/network-configurations/{network_configuration_id}"
    ],
    getNetworkConfigurationForOrg: [
      "GET /orgs/{org}/settings/network-configurations/{network_configuration_id}"
    ],
    getNetworkSettingsForOrg: [
      "GET /orgs/{org}/settings/network-settings/{network_settings_id}"
    ],
    listNetworkConfigurationsForOrg: [
      "GET /orgs/{org}/settings/network-configurations"
    ],
    updateNetworkConfigurationForOrg: [
      "PATCH /orgs/{org}/settings/network-configurations/{network_configuration_id}"
    ]
  },
  interactions: {
    getRestrictionsForAuthenticatedUser: ["GET /user/interaction-limits"],
    getRestrictionsForOrg: ["GET /orgs/{org}/interaction-limits"],
    getRestrictionsForRepo: ["GET /repos/{owner}/{repo}/interaction-limits"],
    getRestrictionsForYourPublicRepos: [
      "GET /user/interaction-limits",
      {},
      { renamed: ["interactions", "getRestrictionsForAuthenticatedUser"] }
    ],
    removeRestrictionsForAuthenticatedUser: ["DELETE /user/interaction-limits"],
    removeRestrictionsForOrg: ["DELETE /orgs/{org}/interaction-limits"],
    removeRestrictionsForRepo: [
      "DELETE /repos/{owner}/{repo}/interaction-limits"
    ],
    removeRestrictionsForYourPublicRepos: [
      "DELETE /user/interaction-limits",
      {},
      { renamed: ["interactions", "removeRestrictionsForAuthenticatedUser"] }
    ],
    setRestrictionsForAuthenticatedUser: ["PUT /user/interaction-limits"],
    setRestrictionsForOrg: ["PUT /orgs/{org}/interaction-limits"],
    setRestrictionsForRepo: ["PUT /repos/{owner}/{repo}/interaction-limits"],
    setRestrictionsForYourPublicRepos: [
      "PUT /user/interaction-limits",
      {},
      { renamed: ["interactions", "setRestrictionsForAuthenticatedUser"] }
    ]
  },
  issues: {
    addAssignees: [
      "POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"
    ],
    addBlockedByDependency: [
      "POST /repos/{owner}/{repo}/issues/{issue_number}/dependencies/blocked_by"
    ],
    addLabels: ["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],
    addSubIssue: [
      "POST /repos/{owner}/{repo}/issues/{issue_number}/sub_issues"
    ],
    checkUserCanBeAssigned: ["GET /repos/{owner}/{repo}/assignees/{assignee}"],
    checkUserCanBeAssignedToIssue: [
      "GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"
    ],
    create: ["POST /repos/{owner}/{repo}/issues"],
    createComment: [
      "POST /repos/{owner}/{repo}/issues/{issue_number}/comments"
    ],
    createLabel: ["POST /repos/{owner}/{repo}/labels"],
    createMilestone: ["POST /repos/{owner}/{repo}/milestones"],
    deleteComment: [
      "DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"
    ],
    deleteLabel: ["DELETE /repos/{owner}/{repo}/labels/{name}"],
    deleteMilestone: [
      "DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"
    ],
    get: ["GET /repos/{owner}/{repo}/issues/{issue_number}"],
    getComment: ["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],
    getEvent: ["GET /repos/{owner}/{repo}/issues/events/{event_id}"],
    getLabel: ["GET /repos/{owner}/{repo}/labels/{name}"],
    getMilestone: ["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],
    getParent: ["GET /repos/{owner}/{repo}/issues/{issue_number}/parent"],
    list: ["GET /issues"],
    listAssignees: ["GET /repos/{owner}/{repo}/assignees"],
    listComments: ["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],
    listCommentsForRepo: ["GET /repos/{owner}/{repo}/issues/comments"],
    listDependenciesBlockedBy: [
      "GET /repos/{owner}/{repo}/issues/{issue_number}/dependencies/blocked_by"
    ],
    listDependenciesBlocking: [
      "GET /repos/{owner}/{repo}/issues/{issue_number}/dependencies/blocking"
    ],
    listEvents: ["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],
    listEventsForRepo: ["GET /repos/{owner}/{repo}/issues/events"],
    listEventsForTimeline: [
      "GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"
    ],
    listForAuthenticatedUser: ["GET /user/issues"],
    listForOrg: ["GET /orgs/{org}/issues"],
    listForRepo: ["GET /repos/{owner}/{repo}/issues"],
    listLabelsForMilestone: [
      "GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"
    ],
    listLabelsForRepo: ["GET /repos/{owner}/{repo}/labels"],
    listLabelsOnIssue: [
      "GET /repos/{owner}/{repo}/issues/{issue_number}/labels"
    ],
    listMilestones: ["GET /repos/{owner}/{repo}/milestones"],
    listSubIssues: [
      "GET /repos/{owner}/{repo}/issues/{issue_number}/sub_issues"
    ],
    lock: ["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],
    removeAllLabels: [
      "DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"
    ],
    removeAssignees: [
      "DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"
    ],
    removeDependencyBlockedBy: [
      "DELETE /repos/{owner}/{repo}/issues/{issue_number}/dependencies/blocked_by/{issue_id}"
    ],
    removeLabel: [
      "DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"
    ],
    removeSubIssue: [
      "DELETE /repos/{owner}/{repo}/issues/{issue_number}/sub_issue"
    ],
    reprioritizeSubIssue: [
      "PATCH /repos/{owner}/{repo}/issues/{issue_number}/sub_issues/priority"
    ],
    setLabels: ["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],
    unlock: ["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],
    update: ["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],
    updateComment: ["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],
    updateLabel: ["PATCH /repos/{owner}/{repo}/labels/{name}"],
    updateMilestone: [
      "PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"
    ]
  },
  licenses: {
    get: ["GET /licenses/{license}"],
    getAllCommonlyUsed: ["GET /licenses"],
    getForRepo: ["GET /repos/{owner}/{repo}/license"]
  },
  markdown: {
    render: ["POST /markdown"],
    renderRaw: [
      "POST /markdown/raw",
      { headers: { "content-type": "text/plain; charset=utf-8" } }
    ]
  },
  meta: {
    get: ["GET /meta"],
    getAllVersions: ["GET /versions"],
    getOctocat: ["GET /octocat"],
    getZen: ["GET /zen"],
    root: ["GET /"]
  },
  migrations: {
    deleteArchiveForAuthenticatedUser: [
      "DELETE /user/migrations/{migration_id}/archive"
    ],
    deleteArchiveForOrg: [
      "DELETE /orgs/{org}/migrations/{migration_id}/archive"
    ],
    downloadArchiveForOrg: [
      "GET /orgs/{org}/migrations/{migration_id}/archive"
    ],
    getArchiveForAuthenticatedUser: [
      "GET /user/migrations/{migration_id}/archive"
    ],
    getStatusForAuthenticatedUser: ["GET /user/migrations/{migration_id}"],
    getStatusForOrg: ["GET /orgs/{org}/migrations/{migration_id}"],
    listForAuthenticatedUser: ["GET /user/migrations"],
    listForOrg: ["GET /orgs/{org}/migrations"],
    listReposForAuthenticatedUser: [
      "GET /user/migrations/{migration_id}/repositories"
    ],
    listReposForOrg: ["GET /orgs/{org}/migrations/{migration_id}/repositories"],
    listReposForUser: [
      "GET /user/migrations/{migration_id}/repositories",
      {},
      { renamed: ["migrations", "listReposForAuthenticatedUser"] }
    ],
    startForAuthenticatedUser: ["POST /user/migrations"],
    startForOrg: ["POST /orgs/{org}/migrations"],
    unlockRepoForAuthenticatedUser: [
      "DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"
    ],
    unlockRepoForOrg: [
      "DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"
    ]
  },
  oidc: {
    getOidcCustomSubTemplateForOrg: [
      "GET /orgs/{org}/actions/oidc/customization/sub"
    ],
    updateOidcCustomSubTemplateForOrg: [
      "PUT /orgs/{org}/actions/oidc/customization/sub"
    ]
  },
  orgs: {
    addSecurityManagerTeam: [
      "PUT /orgs/{org}/security-managers/teams/{team_slug}",
      {},
      {
        deprecated: "octokit.rest.orgs.addSecurityManagerTeam() is deprecated, see https://docs.github.com/rest/orgs/security-managers#add-a-security-manager-team"
      }
    ],
    assignTeamToOrgRole: [
      "PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"
    ],
    assignUserToOrgRole: [
      "PUT /orgs/{org}/organization-roles/users/{username}/{role_id}"
    ],
    blockUser: ["PUT /orgs/{org}/blocks/{username}"],
    cancelInvitation: ["DELETE /orgs/{org}/invitations/{invitation_id}"],
    checkBlockedUser: ["GET /orgs/{org}/blocks/{username}"],
    checkMembershipForUser: ["GET /orgs/{org}/members/{username}"],
    checkPublicMembershipForUser: ["GET /orgs/{org}/public_members/{username}"],
    convertMemberToOutsideCollaborator: [
      "PUT /orgs/{org}/outside_collaborators/{username}"
    ],
    createArtifactStorageRecord: [
      "POST /orgs/{org}/artifacts/metadata/storage-record"
    ],
    createInvitation: ["POST /orgs/{org}/invitations"],
    createIssueType: ["POST /orgs/{org}/issue-types"],
    createOrUpdateCustomProperties: ["PATCH /orgs/{org}/properties/schema"],
    createOrUpdateCustomPropertiesValuesForRepos: [
      "PATCH /orgs/{org}/properties/values"
    ],
    createOrUpdateCustomProperty: [
      "PUT /orgs/{org}/properties/schema/{custom_property_name}"
    ],
    createWebhook: ["POST /orgs/{org}/hooks"],
    delete: ["DELETE /orgs/{org}"],
    deleteAttestationsBulk: ["POST /orgs/{org}/attestations/delete-request"],
    deleteAttestationsById: [
      "DELETE /orgs/{org}/attestations/{attestation_id}"
    ],
    deleteAttestationsBySubjectDigest: [
      "DELETE /orgs/{org}/attestations/digest/{subject_digest}"
    ],
    deleteIssueType: ["DELETE /orgs/{org}/issue-types/{issue_type_id}"],
    deleteWebhook: ["DELETE /orgs/{org}/hooks/{hook_id}"],
    get: ["GET /orgs/{org}"],
    getAllCustomProperties: ["GET /orgs/{org}/properties/schema"],
    getCustomProperty: [
      "GET /orgs/{org}/properties/schema/{custom_property_name}"
    ],
    getMembershipForAuthenticatedUser: ["GET /user/memberships/orgs/{org}"],
    getMembershipForUser: ["GET /orgs/{org}/memberships/{username}"],
    getOrgRole: ["GET /orgs/{org}/organization-roles/{role_id}"],
    getOrgRulesetHistory: ["GET /orgs/{org}/rulesets/{ruleset_id}/history"],
    getOrgRulesetVersion: [
      "GET /orgs/{org}/rulesets/{ruleset_id}/history/{version_id}"
    ],
    getWebhook: ["GET /orgs/{org}/hooks/{hook_id}"],
    getWebhookConfigForOrg: ["GET /orgs/{org}/hooks/{hook_id}/config"],
    getWebhookDelivery: [
      "GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"
    ],
    list: ["GET /organizations"],
    listAppInstallations: ["GET /orgs/{org}/installations"],
    listArtifactStorageRecords: [
      "GET /orgs/{org}/artifacts/{subject_digest}/metadata/storage-records"
    ],
    listAttestations: ["GET /orgs/{org}/attestations/{subject_digest}"],
    listAttestationsBulk: [
      "POST /orgs/{org}/attestations/bulk-list{?per_page,before,after}"
    ],
    listBlockedUsers: ["GET /orgs/{org}/blocks"],
    listCustomPropertiesValuesForRepos: ["GET /orgs/{org}/properties/values"],
    listFailedInvitations: ["GET /orgs/{org}/failed_invitations"],
    listForAuthenticatedUser: ["GET /user/orgs"],
    listForUser: ["GET /users/{username}/orgs"],
    listInvitationTeams: ["GET /orgs/{org}/invitations/{invitation_id}/teams"],
    listIssueTypes: ["GET /orgs/{org}/issue-types"],
    listMembers: ["GET /orgs/{org}/members"],
    listMembershipsForAuthenticatedUser: ["GET /user/memberships/orgs"],
    listOrgRoleTeams: ["GET /orgs/{org}/organization-roles/{role_id}/teams"],
    listOrgRoleUsers: ["GET /orgs/{org}/organization-roles/{role_id}/users"],
    listOrgRoles: ["GET /orgs/{org}/organization-roles"],
    listOrganizationFineGrainedPermissions: [
      "GET /orgs/{org}/organization-fine-grained-permissions"
    ],
    listOutsideCollaborators: ["GET /orgs/{org}/outside_collaborators"],
    listPatGrantRepositories: [
      "GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories"
    ],
    listPatGrantRequestRepositories: [
      "GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories"
    ],
    listPatGrantRequests: ["GET /orgs/{org}/personal-access-token-requests"],
    listPatGrants: ["GET /orgs/{org}/personal-access-tokens"],
    listPendingInvitations: ["GET /orgs/{org}/invitations"],
    listPublicMembers: ["GET /orgs/{org}/public_members"],
    listSecurityManagerTeams: [
      "GET /orgs/{org}/security-managers",
      {},
      {
        deprecated: "octokit.rest.orgs.listSecurityManagerTeams() is deprecated, see https://docs.github.com/rest/orgs/security-managers#list-security-manager-teams"
      }
    ],
    listWebhookDeliveries: ["GET /orgs/{org}/hooks/{hook_id}/deliveries"],
    listWebhooks: ["GET /orgs/{org}/hooks"],
    pingWebhook: ["POST /orgs/{org}/hooks/{hook_id}/pings"],
    redeliverWebhookDelivery: [
      "POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"
    ],
    removeCustomProperty: [
      "DELETE /orgs/{org}/properties/schema/{custom_property_name}"
    ],
    removeMember: ["DELETE /orgs/{org}/members/{username}"],
    removeMembershipForUser: ["DELETE /orgs/{org}/memberships/{username}"],
    removeOutsideCollaborator: [
      "DELETE /orgs/{org}/outside_collaborators/{username}"
    ],
    removePublicMembershipForAuthenticatedUser: [
      "DELETE /orgs/{org}/public_members/{username}"
    ],
    removeSecurityManagerTeam: [
      "DELETE /orgs/{org}/security-managers/teams/{team_slug}",
      {},
      {
        deprecated: "octokit.rest.orgs.removeSecurityManagerTeam() is deprecated, see https://docs.github.com/rest/orgs/security-managers#remove-a-security-manager-team"
      }
    ],
    reviewPatGrantRequest: [
      "POST /orgs/{org}/personal-access-token-requests/{pat_request_id}"
    ],
    reviewPatGrantRequestsInBulk: [
      "POST /orgs/{org}/personal-access-token-requests"
    ],
    revokeAllOrgRolesTeam: [
      "DELETE /orgs/{org}/organization-roles/teams/{team_slug}"
    ],
    revokeAllOrgRolesUser: [
      "DELETE /orgs/{org}/organization-roles/users/{username}"
    ],
    revokeOrgRoleTeam: [
      "DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"
    ],
    revokeOrgRoleUser: [
      "DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}"
    ],
    setMembershipForUser: ["PUT /orgs/{org}/memberships/{username}"],
    setPublicMembershipForAuthenticatedUser: [
      "PUT /orgs/{org}/public_members/{username}"
    ],
    unblockUser: ["DELETE /orgs/{org}/blocks/{username}"],
    update: ["PATCH /orgs/{org}"],
    updateIssueType: ["PUT /orgs/{org}/issue-types/{issue_type_id}"],
    updateMembershipForAuthenticatedUser: [
      "PATCH /user/memberships/orgs/{org}"
    ],
    updatePatAccess: ["POST /orgs/{org}/personal-access-tokens/{pat_id}"],
    updatePatAccesses: ["POST /orgs/{org}/personal-access-tokens"],
    updateWebhook: ["PATCH /orgs/{org}/hooks/{hook_id}"],
    updateWebhookConfigForOrg: ["PATCH /orgs/{org}/hooks/{hook_id}/config"]
  },
  packages: {
    deletePackageForAuthenticatedUser: [
      "DELETE /user/packages/{package_type}/{package_name}"
    ],
    deletePackageForOrg: [
      "DELETE /orgs/{org}/packages/{package_type}/{package_name}"
    ],
    deletePackageForUser: [
      "DELETE /users/{username}/packages/{package_type}/{package_name}"
    ],
    deletePackageVersionForAuthenticatedUser: [
      "DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"
    ],
    deletePackageVersionForOrg: [
      "DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"
    ],
    deletePackageVersionForUser: [
      "DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"
    ],
    getAllPackageVersionsForAPackageOwnedByAnOrg: [
      "GET /orgs/{org}/packages/{package_type}/{package_name}/versions",
      {},
      { renamed: ["packages", "getAllPackageVersionsForPackageOwnedByOrg"] }
    ],
    getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [
      "GET /user/packages/{package_type}/{package_name}/versions",
      {},
      {
        renamed: [
          "packages",
          "getAllPackageVersionsForPackageOwnedByAuthenticatedUser"
        ]
      }
    ],
    getAllPackageVersionsForPackageOwnedByAuthenticatedUser: [
      "GET /user/packages/{package_type}/{package_name}/versions"
    ],
    getAllPackageVersionsForPackageOwnedByOrg: [
      "GET /orgs/{org}/packages/{package_type}/{package_name}/versions"
    ],
    getAllPackageVersionsForPackageOwnedByUser: [
      "GET /users/{username}/packages/{package_type}/{package_name}/versions"
    ],
    getPackageForAuthenticatedUser: [
      "GET /user/packages/{package_type}/{package_name}"
    ],
    getPackageForOrganization: [
      "GET /orgs/{org}/packages/{package_type}/{package_name}"
    ],
    getPackageForUser: [
      "GET /users/{username}/packages/{package_type}/{package_name}"
    ],
    getPackageVersionForAuthenticatedUser: [
      "GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"
    ],
    getPackageVersionForOrganization: [
      "GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"
    ],
    getPackageVersionForUser: [
      "GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"
    ],
    listDockerMigrationConflictingPackagesForAuthenticatedUser: [
      "GET /user/docker/conflicts"
    ],
    listDockerMigrationConflictingPackagesForOrganization: [
      "GET /orgs/{org}/docker/conflicts"
    ],
    listDockerMigrationConflictingPackagesForUser: [
      "GET /users/{username}/docker/conflicts"
    ],
    listPackagesForAuthenticatedUser: ["GET /user/packages"],
    listPackagesForOrganization: ["GET /orgs/{org}/packages"],
    listPackagesForUser: ["GET /users/{username}/packages"],
    restorePackageForAuthenticatedUser: [
      "POST /user/packages/{package_type}/{package_name}/restore{?token}"
    ],
    restorePackageForOrg: [
      "POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"
    ],
    restorePackageForUser: [
      "POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"
    ],
    restorePackageVersionForAuthenticatedUser: [
      "POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"
    ],
    restorePackageVersionForOrg: [
      "POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"
    ],
    restorePackageVersionForUser: [
      "POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"
    ]
  },
  privateRegistries: {
    createOrgPrivateRegistry: ["POST /orgs/{org}/private-registries"],
    deleteOrgPrivateRegistry: [
      "DELETE /orgs/{org}/private-registries/{secret_name}"
    ],
    getOrgPrivateRegistry: ["GET /orgs/{org}/private-registries/{secret_name}"],
    getOrgPublicKey: ["GET /orgs/{org}/private-registries/public-key"],
    listOrgPrivateRegistries: ["GET /orgs/{org}/private-registries"],
    updateOrgPrivateRegistry: [
      "PATCH /orgs/{org}/private-registries/{secret_name}"
    ]
  },
  projects: {
    addItemForOrg: ["POST /orgs/{org}/projectsV2/{project_number}/items"],
    addItemForUser: ["POST /users/{user_id}/projectsV2/{project_number}/items"],
    deleteItemForOrg: [
      "DELETE /orgs/{org}/projectsV2/{project_number}/items/{item_id}"
    ],
    deleteItemForUser: [
      "DELETE /users/{user_id}/projectsV2/{project_number}/items/{item_id}"
    ],
    getFieldForOrg: [
      "GET /orgs/{org}/projectsV2/{project_number}/fields/{field_id}"
    ],
    getFieldForUser: [
      "GET /users/{user_id}/projectsV2/{project_number}/fields/{field_id}"
    ],
    getForOrg: ["GET /orgs/{org}/projectsV2/{project_number}"],
    getForUser: ["GET /users/{user_id}/projectsV2/{project_number}"],
    getOrgItem: ["GET /orgs/{org}/projectsV2/{project_number}/items/{item_id}"],
    getUserItem: [
      "GET /users/{user_id}/projectsV2/{project_number}/items/{item_id}"
    ],
    listFieldsForOrg: ["GET /orgs/{org}/projectsV2/{project_number}/fields"],
    listFieldsForUser: [
      "GET /users/{user_id}/projectsV2/{project_number}/fields"
    ],
    listForOrg: ["GET /orgs/{org}/projectsV2"],
    listForUser: ["GET /users/{username}/projectsV2"],
    listItemsForOrg: ["GET /orgs/{org}/projectsV2/{project_number}/items"],
    listItemsForUser: [
      "GET /users/{user_id}/projectsV2/{project_number}/items"
    ],
    updateItemForOrg: [
      "PATCH /orgs/{org}/projectsV2/{project_number}/items/{item_id}"
    ],
    updateItemForUser: [
      "PATCH /users/{user_id}/projectsV2/{project_number}/items/{item_id}"
    ]
  },
  pulls: {
    checkIfMerged: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],
    create: ["POST /repos/{owner}/{repo}/pulls"],
    createReplyForReviewComment: [
      "POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"
    ],
    createReview: ["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],
    createReviewComment: [
      "POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"
    ],
    deletePendingReview: [
      "DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"
    ],
    deleteReviewComment: [
      "DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"
    ],
    dismissReview: [
      "PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"
    ],
    get: ["GET /repos/{owner}/{repo}/pulls/{pull_number}"],
    getReview: [
      "GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"
    ],
    getReviewComment: ["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],
    list: ["GET /repos/{owner}/{repo}/pulls"],
    listCommentsForReview: [
      "GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"
    ],
    listCommits: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],
    listFiles: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],
    listRequestedReviewers: [
      "GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"
    ],
    listReviewComments: [
      "GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"
    ],
    listReviewCommentsForRepo: ["GET /repos/{owner}/{repo}/pulls/comments"],
    listReviews: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],
    merge: ["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],
    removeRequestedReviewers: [
      "DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"
    ],
    requestReviewers: [
      "POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"
    ],
    submitReview: [
      "POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"
    ],
    update: ["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],
    updateBranch: [
      "PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"
    ],
    updateReview: [
      "PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"
    ],
    updateReviewComment: [
      "PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"
    ]
  },
  rateLimit: { get: ["GET /rate_limit"] },
  reactions: {
    createForCommitComment: [
      "POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"
    ],
    createForIssue: [
      "POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"
    ],
    createForIssueComment: [
      "POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"
    ],
    createForPullRequestReviewComment: [
      "POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"
    ],
    createForRelease: [
      "POST /repos/{owner}/{repo}/releases/{release_id}/reactions"
    ],
    createForTeamDiscussionCommentInOrg: [
      "POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"
    ],
    createForTeamDiscussionInOrg: [
      "POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"
    ],
    deleteForCommitComment: [
      "DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"
    ],
    deleteForIssue: [
      "DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"
    ],
    deleteForIssueComment: [
      "DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"
    ],
    deleteForPullRequestComment: [
      "DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"
    ],
    deleteForRelease: [
      "DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"
    ],
    deleteForTeamDiscussion: [
      "DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"
    ],
    deleteForTeamDiscussionComment: [
      "DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"
    ],
    listForCommitComment: [
      "GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"
    ],
    listForIssue: ["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],
    listForIssueComment: [
      "GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"
    ],
    listForPullRequestReviewComment: [
      "GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"
    ],
    listForRelease: [
      "GET /repos/{owner}/{repo}/releases/{release_id}/reactions"
    ],
    listForTeamDiscussionCommentInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"
    ],
    listForTeamDiscussionInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"
    ]
  },
  repos: {
    acceptInvitation: [
      "PATCH /user/repository_invitations/{invitation_id}",
      {},
      { renamed: ["repos", "acceptInvitationForAuthenticatedUser"] }
    ],
    acceptInvitationForAuthenticatedUser: [
      "PATCH /user/repository_invitations/{invitation_id}"
    ],
    addAppAccessRestrictions: [
      "POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
      {},
      { mapToData: "apps" }
    ],
    addCollaborator: ["PUT /repos/{owner}/{repo}/collaborators/{username}"],
    addStatusCheckContexts: [
      "POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
      {},
      { mapToData: "contexts" }
    ],
    addTeamAccessRestrictions: [
      "POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
      {},
      { mapToData: "teams" }
    ],
    addUserAccessRestrictions: [
      "POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
      {},
      { mapToData: "users" }
    ],
    cancelPagesDeployment: [
      "POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel"
    ],
    checkAutomatedSecurityFixes: [
      "GET /repos/{owner}/{repo}/automated-security-fixes"
    ],
    checkCollaborator: ["GET /repos/{owner}/{repo}/collaborators/{username}"],
    checkPrivateVulnerabilityReporting: [
      "GET /repos/{owner}/{repo}/private-vulnerability-reporting"
    ],
    checkVulnerabilityAlerts: [
      "GET /repos/{owner}/{repo}/vulnerability-alerts"
    ],
    codeownersErrors: ["GET /repos/{owner}/{repo}/codeowners/errors"],
    compareCommits: ["GET /repos/{owner}/{repo}/compare/{base}...{head}"],
    compareCommitsWithBasehead: [
      "GET /repos/{owner}/{repo}/compare/{basehead}"
    ],
    createAttestation: ["POST /repos/{owner}/{repo}/attestations"],
    createAutolink: ["POST /repos/{owner}/{repo}/autolinks"],
    createCommitComment: [
      "POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"
    ],
    createCommitSignatureProtection: [
      "POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"
    ],
    createCommitStatus: ["POST /repos/{owner}/{repo}/statuses/{sha}"],
    createDeployKey: ["POST /repos/{owner}/{repo}/keys"],
    createDeployment: ["POST /repos/{owner}/{repo}/deployments"],
    createDeploymentBranchPolicy: [
      "POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"
    ],
    createDeploymentProtectionRule: [
      "POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"
    ],
    createDeploymentStatus: [
      "POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"
    ],
    createDispatchEvent: ["POST /repos/{owner}/{repo}/dispatches"],
    createForAuthenticatedUser: ["POST /user/repos"],
    createFork: ["POST /repos/{owner}/{repo}/forks"],
    createInOrg: ["POST /orgs/{org}/repos"],
    createOrUpdateCustomPropertiesValues: [
      "PATCH /repos/{owner}/{repo}/properties/values"
    ],
    createOrUpdateEnvironment: [
      "PUT /repos/{owner}/{repo}/environments/{environment_name}"
    ],
    createOrUpdateFileContents: ["PUT /repos/{owner}/{repo}/contents/{path}"],
    createOrgRuleset: ["POST /orgs/{org}/rulesets"],
    createPagesDeployment: ["POST /repos/{owner}/{repo}/pages/deployments"],
    createPagesSite: ["POST /repos/{owner}/{repo}/pages"],
    createRelease: ["POST /repos/{owner}/{repo}/releases"],
    createRepoRuleset: ["POST /repos/{owner}/{repo}/rulesets"],
    createUsingTemplate: [
      "POST /repos/{template_owner}/{template_repo}/generate"
    ],
    createWebhook: ["POST /repos/{owner}/{repo}/hooks"],
    declineInvitation: [
      "DELETE /user/repository_invitations/{invitation_id}",
      {},
      { renamed: ["repos", "declineInvitationForAuthenticatedUser"] }
    ],
    declineInvitationForAuthenticatedUser: [
      "DELETE /user/repository_invitations/{invitation_id}"
    ],
    delete: ["DELETE /repos/{owner}/{repo}"],
    deleteAccessRestrictions: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"
    ],
    deleteAdminBranchProtection: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"
    ],
    deleteAnEnvironment: [
      "DELETE /repos/{owner}/{repo}/environments/{environment_name}"
    ],
    deleteAutolink: ["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],
    deleteBranchProtection: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection"
    ],
    deleteCommitComment: ["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],
    deleteCommitSignatureProtection: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"
    ],
    deleteDeployKey: ["DELETE /repos/{owner}/{repo}/keys/{key_id}"],
    deleteDeployment: [
      "DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"
    ],
    deleteDeploymentBranchPolicy: [
      "DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"
    ],
    deleteFile: ["DELETE /repos/{owner}/{repo}/contents/{path}"],
    deleteInvitation: [
      "DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"
    ],
    deleteOrgRuleset: ["DELETE /orgs/{org}/rulesets/{ruleset_id}"],
    deletePagesSite: ["DELETE /repos/{owner}/{repo}/pages"],
    deletePullRequestReviewProtection: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"
    ],
    deleteRelease: ["DELETE /repos/{owner}/{repo}/releases/{release_id}"],
    deleteReleaseAsset: [
      "DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"
    ],
    deleteRepoRuleset: ["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],
    deleteWebhook: ["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],
    disableAutomatedSecurityFixes: [
      "DELETE /repos/{owner}/{repo}/automated-security-fixes"
    ],
    disableDeploymentProtectionRule: [
      "DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"
    ],
    disablePrivateVulnerabilityReporting: [
      "DELETE /repos/{owner}/{repo}/private-vulnerability-reporting"
    ],
    disableVulnerabilityAlerts: [
      "DELETE /repos/{owner}/{repo}/vulnerability-alerts"
    ],
    downloadArchive: [
      "GET /repos/{owner}/{repo}/zipball/{ref}",
      {},
      { renamed: ["repos", "downloadZipballArchive"] }
    ],
    downloadTarballArchive: ["GET /repos/{owner}/{repo}/tarball/{ref}"],
    downloadZipballArchive: ["GET /repos/{owner}/{repo}/zipball/{ref}"],
    enableAutomatedSecurityFixes: [
      "PUT /repos/{owner}/{repo}/automated-security-fixes"
    ],
    enablePrivateVulnerabilityReporting: [
      "PUT /repos/{owner}/{repo}/private-vulnerability-reporting"
    ],
    enableVulnerabilityAlerts: [
      "PUT /repos/{owner}/{repo}/vulnerability-alerts"
    ],
    generateReleaseNotes: [
      "POST /repos/{owner}/{repo}/releases/generate-notes"
    ],
    get: ["GET /repos/{owner}/{repo}"],
    getAccessRestrictions: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"
    ],
    getAdminBranchProtection: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"
    ],
    getAllDeploymentProtectionRules: [
      "GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"
    ],
    getAllEnvironments: ["GET /repos/{owner}/{repo}/environments"],
    getAllStatusCheckContexts: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"
    ],
    getAllTopics: ["GET /repos/{owner}/{repo}/topics"],
    getAppsWithAccessToProtectedBranch: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"
    ],
    getAutolink: ["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],
    getBranch: ["GET /repos/{owner}/{repo}/branches/{branch}"],
    getBranchProtection: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection"
    ],
    getBranchRules: ["GET /repos/{owner}/{repo}/rules/branches/{branch}"],
    getClones: ["GET /repos/{owner}/{repo}/traffic/clones"],
    getCodeFrequencyStats: ["GET /repos/{owner}/{repo}/stats/code_frequency"],
    getCollaboratorPermissionLevel: [
      "GET /repos/{owner}/{repo}/collaborators/{username}/permission"
    ],
    getCombinedStatusForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/status"],
    getCommit: ["GET /repos/{owner}/{repo}/commits/{ref}"],
    getCommitActivityStats: ["GET /repos/{owner}/{repo}/stats/commit_activity"],
    getCommitComment: ["GET /repos/{owner}/{repo}/comments/{comment_id}"],
    getCommitSignatureProtection: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"
    ],
    getCommunityProfileMetrics: ["GET /repos/{owner}/{repo}/community/profile"],
    getContent: ["GET /repos/{owner}/{repo}/contents/{path}"],
    getContributorsStats: ["GET /repos/{owner}/{repo}/stats/contributors"],
    getCustomDeploymentProtectionRule: [
      "GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"
    ],
    getCustomPropertiesValues: ["GET /repos/{owner}/{repo}/properties/values"],
    getDeployKey: ["GET /repos/{owner}/{repo}/keys/{key_id}"],
    getDeployment: ["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],
    getDeploymentBranchPolicy: [
      "GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"
    ],
    getDeploymentStatus: [
      "GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"
    ],
    getEnvironment: [
      "GET /repos/{owner}/{repo}/environments/{environment_name}"
    ],
    getLatestPagesBuild: ["GET /repos/{owner}/{repo}/pages/builds/latest"],
    getLatestRelease: ["GET /repos/{owner}/{repo}/releases/latest"],
    getOrgRuleSuite: ["GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}"],
    getOrgRuleSuites: ["GET /orgs/{org}/rulesets/rule-suites"],
    getOrgRuleset: ["GET /orgs/{org}/rulesets/{ruleset_id}"],
    getOrgRulesets: ["GET /orgs/{org}/rulesets"],
    getPages: ["GET /repos/{owner}/{repo}/pages"],
    getPagesBuild: ["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],
    getPagesDeployment: [
      "GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}"
    ],
    getPagesHealthCheck: ["GET /repos/{owner}/{repo}/pages/health"],
    getParticipationStats: ["GET /repos/{owner}/{repo}/stats/participation"],
    getPullRequestReviewProtection: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"
    ],
    getPunchCardStats: ["GET /repos/{owner}/{repo}/stats/punch_card"],
    getReadme: ["GET /repos/{owner}/{repo}/readme"],
    getReadmeInDirectory: ["GET /repos/{owner}/{repo}/readme/{dir}"],
    getRelease: ["GET /repos/{owner}/{repo}/releases/{release_id}"],
    getReleaseAsset: ["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],
    getReleaseByTag: ["GET /repos/{owner}/{repo}/releases/tags/{tag}"],
    getRepoRuleSuite: [
      "GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}"
    ],
    getRepoRuleSuites: ["GET /repos/{owner}/{repo}/rulesets/rule-suites"],
    getRepoRuleset: ["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],
    getRepoRulesetHistory: [
      "GET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history"
    ],
    getRepoRulesetVersion: [
      "GET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history/{version_id}"
    ],
    getRepoRulesets: ["GET /repos/{owner}/{repo}/rulesets"],
    getStatusChecksProtection: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"
    ],
    getTeamsWithAccessToProtectedBranch: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"
    ],
    getTopPaths: ["GET /repos/{owner}/{repo}/traffic/popular/paths"],
    getTopReferrers: ["GET /repos/{owner}/{repo}/traffic/popular/referrers"],
    getUsersWithAccessToProtectedBranch: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"
    ],
    getViews: ["GET /repos/{owner}/{repo}/traffic/views"],
    getWebhook: ["GET /repos/{owner}/{repo}/hooks/{hook_id}"],
    getWebhookConfigForRepo: [
      "GET /repos/{owner}/{repo}/hooks/{hook_id}/config"
    ],
    getWebhookDelivery: [
      "GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"
    ],
    listActivities: ["GET /repos/{owner}/{repo}/activity"],
    listAttestations: [
      "GET /repos/{owner}/{repo}/attestations/{subject_digest}"
    ],
    listAutolinks: ["GET /repos/{owner}/{repo}/autolinks"],
    listBranches: ["GET /repos/{owner}/{repo}/branches"],
    listBranchesForHeadCommit: [
      "GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"
    ],
    listCollaborators: ["GET /repos/{owner}/{repo}/collaborators"],
    listCommentsForCommit: [
      "GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"
    ],
    listCommitCommentsForRepo: ["GET /repos/{owner}/{repo}/comments"],
    listCommitStatusesForRef: [
      "GET /repos/{owner}/{repo}/commits/{ref}/statuses"
    ],
    listCommits: ["GET /repos/{owner}/{repo}/commits"],
    listContributors: ["GET /repos/{owner}/{repo}/contributors"],
    listCustomDeploymentRuleIntegrations: [
      "GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"
    ],
    listDeployKeys: ["GET /repos/{owner}/{repo}/keys"],
    listDeploymentBranchPolicies: [
      "GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"
    ],
    listDeploymentStatuses: [
      "GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"
    ],
    listDeployments: ["GET /repos/{owner}/{repo}/deployments"],
    listForAuthenticatedUser: ["GET /user/repos"],
    listForOrg: ["GET /orgs/{org}/repos"],
    listForUser: ["GET /users/{username}/repos"],
    listForks: ["GET /repos/{owner}/{repo}/forks"],
    listInvitations: ["GET /repos/{owner}/{repo}/invitations"],
    listInvitationsForAuthenticatedUser: ["GET /user/repository_invitations"],
    listLanguages: ["GET /repos/{owner}/{repo}/languages"],
    listPagesBuilds: ["GET /repos/{owner}/{repo}/pages/builds"],
    listPublic: ["GET /repositories"],
    listPullRequestsAssociatedWithCommit: [
      "GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"
    ],
    listReleaseAssets: [
      "GET /repos/{owner}/{repo}/releases/{release_id}/assets"
    ],
    listReleases: ["GET /repos/{owner}/{repo}/releases"],
    listTags: ["GET /repos/{owner}/{repo}/tags"],
    listTeams: ["GET /repos/{owner}/{repo}/teams"],
    listWebhookDeliveries: [
      "GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"
    ],
    listWebhooks: ["GET /repos/{owner}/{repo}/hooks"],
    merge: ["POST /repos/{owner}/{repo}/merges"],
    mergeUpstream: ["POST /repos/{owner}/{repo}/merge-upstream"],
    pingWebhook: ["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],
    redeliverWebhookDelivery: [
      "POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"
    ],
    removeAppAccessRestrictions: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
      {},
      { mapToData: "apps" }
    ],
    removeCollaborator: [
      "DELETE /repos/{owner}/{repo}/collaborators/{username}"
    ],
    removeStatusCheckContexts: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
      {},
      { mapToData: "contexts" }
    ],
    removeStatusCheckProtection: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"
    ],
    removeTeamAccessRestrictions: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
      {},
      { mapToData: "teams" }
    ],
    removeUserAccessRestrictions: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
      {},
      { mapToData: "users" }
    ],
    renameBranch: ["POST /repos/{owner}/{repo}/branches/{branch}/rename"],
    replaceAllTopics: ["PUT /repos/{owner}/{repo}/topics"],
    requestPagesBuild: ["POST /repos/{owner}/{repo}/pages/builds"],
    setAdminBranchProtection: [
      "POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"
    ],
    setAppAccessRestrictions: [
      "PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
      {},
      { mapToData: "apps" }
    ],
    setStatusCheckContexts: [
      "PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
      {},
      { mapToData: "contexts" }
    ],
    setTeamAccessRestrictions: [
      "PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
      {},
      { mapToData: "teams" }
    ],
    setUserAccessRestrictions: [
      "PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
      {},
      { mapToData: "users" }
    ],
    testPushWebhook: ["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],
    transfer: ["POST /repos/{owner}/{repo}/transfer"],
    update: ["PATCH /repos/{owner}/{repo}"],
    updateBranchProtection: [
      "PUT /repos/{owner}/{repo}/branches/{branch}/protection"
    ],
    updateCommitComment: ["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],
    updateDeploymentBranchPolicy: [
      "PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"
    ],
    updateInformationAboutPagesSite: ["PUT /repos/{owner}/{repo}/pages"],
    updateInvitation: [
      "PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"
    ],
    updateOrgRuleset: ["PUT /orgs/{org}/rulesets/{ruleset_id}"],
    updatePullRequestReviewProtection: [
      "PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"
    ],
    updateRelease: ["PATCH /repos/{owner}/{repo}/releases/{release_id}"],
    updateReleaseAsset: [
      "PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"
    ],
    updateRepoRuleset: ["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],
    updateStatusCheckPotection: [
      "PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
      {},
      { renamed: ["repos", "updateStatusCheckProtection"] }
    ],
    updateStatusCheckProtection: [
      "PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"
    ],
    updateWebhook: ["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],
    updateWebhookConfigForRepo: [
      "PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"
    ],
    uploadReleaseAsset: [
      "POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",
      { baseUrl: "https://uploads.github.com" }
    ]
  },
  search: {
    code: ["GET /search/code"],
    commits: ["GET /search/commits"],
    issuesAndPullRequests: [
      "GET /search/issues",
      {},
      {
        deprecated: "octokit.rest.search.issuesAndPullRequests() is deprecated, see https://docs.github.com/rest/search/search#search-issues-and-pull-requests"
      }
    ],
    labels: ["GET /search/labels"],
    repos: ["GET /search/repositories"],
    topics: ["GET /search/topics"],
    users: ["GET /search/users"]
  },
  secretScanning: {
    createPushProtectionBypass: [
      "POST /repos/{owner}/{repo}/secret-scanning/push-protection-bypasses"
    ],
    getAlert: [
      "GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"
    ],
    getScanHistory: ["GET /repos/{owner}/{repo}/secret-scanning/scan-history"],
    listAlertsForEnterprise: [
      "GET /enterprises/{enterprise}/secret-scanning/alerts"
    ],
    listAlertsForOrg: ["GET /orgs/{org}/secret-scanning/alerts"],
    listAlertsForRepo: ["GET /repos/{owner}/{repo}/secret-scanning/alerts"],
    listLocationsForAlert: [
      "GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"
    ],
    listOrgPatternConfigs: [
      "GET /orgs/{org}/secret-scanning/pattern-configurations"
    ],
    updateAlert: [
      "PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"
    ],
    updateOrgPatternConfigs: [
      "PATCH /orgs/{org}/secret-scanning/pattern-configurations"
    ]
  },
  securityAdvisories: {
    createFork: [
      "POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks"
    ],
    createPrivateVulnerabilityReport: [
      "POST /repos/{owner}/{repo}/security-advisories/reports"
    ],
    createRepositoryAdvisory: [
      "POST /repos/{owner}/{repo}/security-advisories"
    ],
    createRepositoryAdvisoryCveRequest: [
      "POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve"
    ],
    getGlobalAdvisory: ["GET /advisories/{ghsa_id}"],
    getRepositoryAdvisory: [
      "GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"
    ],
    listGlobalAdvisories: ["GET /advisories"],
    listOrgRepositoryAdvisories: ["GET /orgs/{org}/security-advisories"],
    listRepositoryAdvisories: ["GET /repos/{owner}/{repo}/security-advisories"],
    updateRepositoryAdvisory: [
      "PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"
    ]
  },
  teams: {
    addOrUpdateMembershipForUserInOrg: [
      "PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"
    ],
    addOrUpdateRepoPermissionsInOrg: [
      "PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"
    ],
    checkPermissionsForRepoInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"
    ],
    create: ["POST /orgs/{org}/teams"],
    createDiscussionCommentInOrg: [
      "POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"
    ],
    createDiscussionInOrg: ["POST /orgs/{org}/teams/{team_slug}/discussions"],
    deleteDiscussionCommentInOrg: [
      "DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"
    ],
    deleteDiscussionInOrg: [
      "DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"
    ],
    deleteInOrg: ["DELETE /orgs/{org}/teams/{team_slug}"],
    getByName: ["GET /orgs/{org}/teams/{team_slug}"],
    getDiscussionCommentInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"
    ],
    getDiscussionInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"
    ],
    getMembershipForUserInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/memberships/{username}"
    ],
    list: ["GET /orgs/{org}/teams"],
    listChildInOrg: ["GET /orgs/{org}/teams/{team_slug}/teams"],
    listDiscussionCommentsInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"
    ],
    listDiscussionsInOrg: ["GET /orgs/{org}/teams/{team_slug}/discussions"],
    listForAuthenticatedUser: ["GET /user/teams"],
    listMembersInOrg: ["GET /orgs/{org}/teams/{team_slug}/members"],
    listPendingInvitationsInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/invitations"
    ],
    listReposInOrg: ["GET /orgs/{org}/teams/{team_slug}/repos"],
    removeMembershipForUserInOrg: [
      "DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"
    ],
    removeRepoInOrg: [
      "DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"
    ],
    updateDiscussionCommentInOrg: [
      "PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"
    ],
    updateDiscussionInOrg: [
      "PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"
    ],
    updateInOrg: ["PATCH /orgs/{org}/teams/{team_slug}"]
  },
  users: {
    addEmailForAuthenticated: [
      "POST /user/emails",
      {},
      { renamed: ["users", "addEmailForAuthenticatedUser"] }
    ],
    addEmailForAuthenticatedUser: ["POST /user/emails"],
    addSocialAccountForAuthenticatedUser: ["POST /user/social_accounts"],
    block: ["PUT /user/blocks/{username}"],
    checkBlocked: ["GET /user/blocks/{username}"],
    checkFollowingForUser: ["GET /users/{username}/following/{target_user}"],
    checkPersonIsFollowedByAuthenticated: ["GET /user/following/{username}"],
    createGpgKeyForAuthenticated: [
      "POST /user/gpg_keys",
      {},
      { renamed: ["users", "createGpgKeyForAuthenticatedUser"] }
    ],
    createGpgKeyForAuthenticatedUser: ["POST /user/gpg_keys"],
    createPublicSshKeyForAuthenticated: [
      "POST /user/keys",
      {},
      { renamed: ["users", "createPublicSshKeyForAuthenticatedUser"] }
    ],
    createPublicSshKeyForAuthenticatedUser: ["POST /user/keys"],
    createSshSigningKeyForAuthenticatedUser: ["POST /user/ssh_signing_keys"],
    deleteAttestationsBulk: [
      "POST /users/{username}/attestations/delete-request"
    ],
    deleteAttestationsById: [
      "DELETE /users/{username}/attestations/{attestation_id}"
    ],
    deleteAttestationsBySubjectDigest: [
      "DELETE /users/{username}/attestations/digest/{subject_digest}"
    ],
    deleteEmailForAuthenticated: [
      "DELETE /user/emails",
      {},
      { renamed: ["users", "deleteEmailForAuthenticatedUser"] }
    ],
    deleteEmailForAuthenticatedUser: ["DELETE /user/emails"],
    deleteGpgKeyForAuthenticated: [
      "DELETE /user/gpg_keys/{gpg_key_id}",
      {},
      { renamed: ["users", "deleteGpgKeyForAuthenticatedUser"] }
    ],
    deleteGpgKeyForAuthenticatedUser: ["DELETE /user/gpg_keys/{gpg_key_id}"],
    deletePublicSshKeyForAuthenticated: [
      "DELETE /user/keys/{key_id}",
      {},
      { renamed: ["users", "deletePublicSshKeyForAuthenticatedUser"] }
    ],
    deletePublicSshKeyForAuthenticatedUser: ["DELETE /user/keys/{key_id}"],
    deleteSocialAccountForAuthenticatedUser: ["DELETE /user/social_accounts"],
    deleteSshSigningKeyForAuthenticatedUser: [
      "DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"
    ],
    follow: ["PUT /user/following/{username}"],
    getAuthenticated: ["GET /user"],
    getById: ["GET /user/{account_id}"],
    getByUsername: ["GET /users/{username}"],
    getContextForUser: ["GET /users/{username}/hovercard"],
    getGpgKeyForAuthenticated: [
      "GET /user/gpg_keys/{gpg_key_id}",
      {},
      { renamed: ["users", "getGpgKeyForAuthenticatedUser"] }
    ],
    getGpgKeyForAuthenticatedUser: ["GET /user/gpg_keys/{gpg_key_id}"],
    getPublicSshKeyForAuthenticated: [
      "GET /user/keys/{key_id}",
      {},
      { renamed: ["users", "getPublicSshKeyForAuthenticatedUser"] }
    ],
    getPublicSshKeyForAuthenticatedUser: ["GET /user/keys/{key_id}"],
    getSshSigningKeyForAuthenticatedUser: [
      "GET /user/ssh_signing_keys/{ssh_signing_key_id}"
    ],
    list: ["GET /users"],
    listAttestations: ["GET /users/{username}/attestations/{subject_digest}"],
    listAttestationsBulk: [
      "POST /users/{username}/attestations/bulk-list{?per_page,before,after}"
    ],
    listBlockedByAuthenticated: [
      "GET /user/blocks",
      {},
      { renamed: ["users", "listBlockedByAuthenticatedUser"] }
    ],
    listBlockedByAuthenticatedUser: ["GET /user/blocks"],
    listEmailsForAuthenticated: [
      "GET /user/emails",
      {},
      { renamed: ["users", "listEmailsForAuthenticatedUser"] }
    ],
    listEmailsForAuthenticatedUser: ["GET /user/emails"],
    listFollowedByAuthenticated: [
      "GET /user/following",
      {},
      { renamed: ["users", "listFollowedByAuthenticatedUser"] }
    ],
    listFollowedByAuthenticatedUser: ["GET /user/following"],
    listFollowersForAuthenticatedUser: ["GET /user/followers"],
    listFollowersForUser: ["GET /users/{username}/followers"],
    listFollowingForUser: ["GET /users/{username}/following"],
    listGpgKeysForAuthenticated: [
      "GET /user/gpg_keys",
      {},
      { renamed: ["users", "listGpgKeysForAuthenticatedUser"] }
    ],
    listGpgKeysForAuthenticatedUser: ["GET /user/gpg_keys"],
    listGpgKeysForUser: ["GET /users/{username}/gpg_keys"],
    listPublicEmailsForAuthenticated: [
      "GET /user/public_emails",
      {},
      { renamed: ["users", "listPublicEmailsForAuthenticatedUser"] }
    ],
    listPublicEmailsForAuthenticatedUser: ["GET /user/public_emails"],
    listPublicKeysForUser: ["GET /users/{username}/keys"],
    listPublicSshKeysForAuthenticated: [
      "GET /user/keys",
      {},
      { renamed: ["users", "listPublicSshKeysForAuthenticatedUser"] }
    ],
    listPublicSshKeysForAuthenticatedUser: ["GET /user/keys"],
    listSocialAccountsForAuthenticatedUser: ["GET /user/social_accounts"],
    listSocialAccountsForUser: ["GET /users/{username}/social_accounts"],
    listSshSigningKeysForAuthenticatedUser: ["GET /user/ssh_signing_keys"],
    listSshSigningKeysForUser: ["GET /users/{username}/ssh_signing_keys"],
    setPrimaryEmailVisibilityForAuthenticated: [
      "PATCH /user/email/visibility",
      {},
      { renamed: ["users", "setPrimaryEmailVisibilityForAuthenticatedUser"] }
    ],
    setPrimaryEmailVisibilityForAuthenticatedUser: [
      "PATCH /user/email/visibility"
    ],
    unblock: ["DELETE /user/blocks/{username}"],
    unfollow: ["DELETE /user/following/{username}"],
    updateAuthenticated: ["PATCH /user"]
  }
};
var endpoints_default = Endpoints;

// node_modules/@octokit/rest/node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/endpoints-to-methods.js
var endpointMethodsMap = /* @__PURE__ */ new Map();
for (const [scope, endpoints] of Object.entries(endpoints_default)) {
  for (const [methodName, endpoint2] of Object.entries(endpoints)) {
    const [route, defaults, decorations] = endpoint2;
    const [method, url] = route.split(/ /);
    const endpointDefaults = Object.assign(
      {
        method,
        url
      },
      defaults
    );
    if (!endpointMethodsMap.has(scope)) {
      endpointMethodsMap.set(scope, /* @__PURE__ */ new Map());
    }
    endpointMethodsMap.get(scope).set(methodName, {
      scope,
      methodName,
      endpointDefaults,
      decorations
    });
  }
}
var handler = {
  has({ scope }, methodName) {
    return endpointMethodsMap.get(scope).has(methodName);
  },
  getOwnPropertyDescriptor(target, methodName) {
    return {
      value: this.get(target, methodName),
      // ensures method is in the cache
      configurable: true,
      writable: true,
      enumerable: true
    };
  },
  defineProperty(target, methodName, descriptor) {
    Object.defineProperty(target.cache, methodName, descriptor);
    return true;
  },
  deleteProperty(target, methodName) {
    delete target.cache[methodName];
    return true;
  },
  ownKeys({ scope }) {
    return [...endpointMethodsMap.get(scope).keys()];
  },
  set(target, methodName, value) {
    return target.cache[methodName] = value;
  },
  get({ octokit, scope, cache }, methodName) {
    if (cache[methodName]) {
      return cache[methodName];
    }
    const method = endpointMethodsMap.get(scope).get(methodName);
    if (!method) {
      return void 0;
    }
    const { endpointDefaults, decorations } = method;
    if (decorations) {
      cache[methodName] = decorate(
        octokit,
        scope,
        methodName,
        endpointDefaults,
        decorations
      );
    } else {
      cache[methodName] = octokit.request.defaults(endpointDefaults);
    }
    return cache[methodName];
  }
};
function endpointsToMethods(octokit) {
  const newMethods = {};
  for (const scope of endpointMethodsMap.keys()) {
    newMethods[scope] = new Proxy({ octokit, scope, cache: {} }, handler);
  }
  return newMethods;
}
function decorate(octokit, scope, methodName, defaults, decorations) {
  const requestWithDefaults = octokit.request.defaults(defaults);
  function withDecorations(...args) {
    let options = requestWithDefaults.endpoint.merge(...args);
    if (decorations.mapToData) {
      options = Object.assign({}, options, {
        data: options[decorations.mapToData],
        [decorations.mapToData]: void 0
      });
      return requestWithDefaults(options);
    }
    if (decorations.renamed) {
      const [newScope, newMethodName] = decorations.renamed;
      octokit.log.warn(
        `octokit.${scope}.${methodName}() has been renamed to octokit.${newScope}.${newMethodName}()`
      );
    }
    if (decorations.deprecated) {
      octokit.log.warn(decorations.deprecated);
    }
    if (decorations.renamedParameters) {
      const options2 = requestWithDefaults.endpoint.merge(...args);
      for (const [name3, alias] of Object.entries(
        decorations.renamedParameters
      )) {
        if (name3 in options2) {
          octokit.log.warn(
            `"${name3}" parameter is deprecated for "octokit.${scope}.${methodName}()". Use "${alias}" instead`
          );
          if (!(alias in options2)) {
            options2[alias] = options2[name3];
          }
          delete options2[name3];
        }
      }
      return requestWithDefaults(options2);
    }
    return requestWithDefaults(...args);
  }
  return Object.assign(withDecorations, requestWithDefaults);
}

// node_modules/@octokit/rest/node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/index.js
function restEndpointMethods(octokit) {
  const api = endpointsToMethods(octokit);
  return {
    rest: api
  };
}
restEndpointMethods.VERSION = VERSION7;
function legacyRestEndpointMethods(octokit) {
  const api = endpointsToMethods(octokit);
  return {
    ...api,
    rest: api
  };
}
legacyRestEndpointMethods.VERSION = VERSION7;

// node_modules/@octokit/rest/dist-src/version.js
var VERSION8 = "22.0.0";

// node_modules/@octokit/rest/dist-src/index.js
var Octokit2 = Octokit.plugin(requestLog, legacyRestEndpointMethods, paginateRest).defaults(
  {
    userAgent: `octokit-rest.js/${VERSION8}`
  }
);

// src/lib/FsnxApiClient.js
var import_libsodium_wrappers = __toESM(require_libsodium_wrappers(), 1);
var import_https_proxy_agent = __toESM(require_dist2(), 1);
var import_http_proxy_agent = __toESM(require_dist3(), 1);
var import_node_fetch = __toESM(require_lib3(), 1);
var import_fs = __toESM(require("fs"), 1);
var import_core2 = __toESM(require_core(), 1);
var FsnxApiClient = class {
  constructor({ authority, client_id, client_secret, tenant_id, cloud, output_private_key, event_path }) {
    this.authority = authority;
    this.client_id = client_id;
    this.client_secret = client_secret;
    this.tenant_id = tenant_id;
    this.cloud = cloud;
    this.output_private_key = output_private_key;
    this.event_path = event_path;
  }
  #ScopeAuthMap = /* @__PURE__ */ new Map();
  #eventInput;
  get EventInput() {
    return this.#eventInput ??= JSON.parse(import_fs.default.readFileSync(this.event_path, "utf8"));
  }
  #actions;
  get Actions() {
    return this.#actions ??= this.DispatchPayload.actions;
  }
  #dispatchPayload;
  get DispatchPayload() {
    return this.#dispatchPayload ??= this.EventInput.client_payload.dispatch_payload;
  }
  #currentStep;
  get CurrentStep() {
    return this.#currentStep ??= this.DispatchPayload.current_step;
  }
  #api_auth;
  async GetAppAuthToken() {
    return this.#api_auth ??= await DecryptData(this.EventInput.client_payload.api_token_rsa, this.output_private_key);
  }
  #octokit;
  async Octokit() {
    return this.#octokit ??= new Octokit2({
      auth: await this.GetAppAuthToken(),
      baseUrl: this.EventInput.client_payload.api_baseurl,
      userAgent: this.EventInput.client_payload.api_userAgent
    });
  }
  async OnStep(stepName, callback) {
    if (this.CurrentStep == stepName) {
      import_core2.default.info(`OnStep: ${stepName}`);
      await callback();
    } else {
      import_core2.default.info(`Skipping step: ${stepName}, current step is: ${this.CurrentStep}`);
    }
  }
  async GetAuthHeader(auth_scopes) {
    const scopeKey = auth_scopes.join(" ");
    if (!this.#ScopeAuthMap.has(scopeKey)) {
      const tenantAuthority = new URL(this.tenant_id, this.authority);
      const msalConfig = {
        auth: {
          clientId: this.client_id,
          authority: tenantAuthority.toString(),
          clientSecret: this.client_secret
        }
      };
      const tokenRequest = {
        scopes: auth_scopes
      };
      const cca = new ConfidentialClientApplication(msalConfig);
      const acquireTokenResult = await cca.acquireTokenByClientCredential(tokenRequest);
      const bearerToken = `bearer ${acquireTokenResult.accessToken}`;
      this.#ScopeAuthMap.set(scopeKey, bearerToken);
    } else {
    }
    return this.#ScopeAuthMap.get(scopeKey);
  }
  async ExecuteHttpAction(actionName, resourceId, throwIfNotOk = false) {
    return this.ExecuteHttpActionV2({ actionName, resourceId, throwIfNotOk });
  }
  async ExecuteHttpActionV2({ actionName, resourceId, throwIfNotOk = false, debug = false, proxy } = {}) {
    const action = this.Actions[actionName];
    if (!action) throw new Error(`Action not found: ${actionName}`);
    import_core2.default.info(`ExecuteHttpAction: ${actionName}`);
    let reqUri = action.payload.RequestUri;
    if (resourceId) {
      import_core2.default.info(`${actionName} : Replacing empty resource ID in ${reqUri} to ${resourceId}`);
      reqUri = reqUri.replace(/00000000-0000-0000-0000-000000000000/g, resourceId);
    }
    let a_payload = action.payload;
    let authHeader = await this.GetAuthHeader(action.auth_scopes);
    let auth2 = { Authorization: authHeader };
    var reqBody = {};
    if (a_payload?.Content?.Body != null) {
      reqBody.body = JSON.stringify(a_payload.Content.Body);
    }
    const payloadHeaders = { ...a_payload?.Content?.Headers ?? {}, ...a_payload?.Headers ?? {} };
    if (payloadHeaders["fusionex-dispatch-action"]) {
      delete payloadHeaders["fusionex-dispatch-action"];
    }
    const customHeaders = {
      ...payloadHeaders,
      ...auth2
    };
    const requestOptions = {
      method: a_payload.Method,
      headers: customHeaders,
      ...reqBody
      //compress: false // Prevents Accept-Encoding from being automatically added
    };
    if (proxy) {
      const targetUrl = new URL(reqUri);
      if (targetUrl.protocol === "https:") {
        requestOptions.agent = new import_https_proxy_agent.HttpsProxyAgent(proxy);
      } else {
        requestOptions.agent = new import_http_proxy_agent.HttpProxyAgent(proxy);
      }
      if (debug) {
        import_core2.default.info(`Using proxy: ${proxy}`);
        import_core2.default.info(`Using node-fetch with ${targetUrl.protocol === "https:" ? "HTTPS" : "HTTP"} proxy agent`);
      }
    }
    if (debug) {
      import_core2.default.info(`Request URI: ${reqUri}`);
      import_core2.default.info(`Request Method: ${a_payload.Method}`);
      import_core2.default.info(`Request Headers: ${JSON.stringify(requestOptions.headers)}`);
      import_core2.default.info(`Request Body: ${reqBody.body ?? "No Body"}`);
      import_core2.default.info(`Using proxy: ${proxy ? "Yes" : "No"}`);
    }
    const response = await (0, import_node_fetch.default)(reqUri, requestOptions);
    const responseBody = {};
    const responseText = await response.text();
    if (responseText) {
      try {
        responseBody.body = JSON.parse(responseText);
      } catch (ex) {
        responseBody.body = responseText;
      }
    }
    if (throwIfNotOk && !response.ok) {
      const errorMessage = `HTTP ${response.status} ${response.statusText} for ${actionName} at ${reqUri}`;
      const errorDetails = responseBody.body ? `: ${JSON.stringify(responseBody.body)}` : "";
      throw new Error(errorMessage + errorDetails);
    }
    return {
      status: response.status,
      statusText: response.statusText,
      headers: response.headers,
      ok: response.ok,
      ...responseBody
    };
  }
  async SubmitOutput(output) {
    const outUrl = this.EventInput.client_payload.dispatch_output_url;
    const outputBodyObject = {
      dispatch_job_id: this.EventInput.client_payload.dispatch_job_id,
      step: this.CurrentStep,
      output: { ...output }
    };
    const outputBodyJson = { body: JSON.stringify(outputBodyObject) };
    const outputSha = await GenerateSHA(outputBodyJson.body);
    const rsaSha = await EncryptData(outputSha, this.output_private_key);
    const outputReqHeaders = {
      "Content-Type": "application/json",
      "fusionex-output-sha": outputSha,
      "fusionex-auth-rsa-sha": rsaSha
    };
    if (this.EventInput.client_payload.fusionex_accountorganizationid != null) {
      outputBodyObject["fusionex_accountorganizationid"] = this.EventInput.client_payload.fusionex_accountorganizationid;
      outputReqHeaders["fusionex-accountorganizationid"] = this.EventInput.client_payload.fusionex_accountorganizationid;
    }
    if (this.EventInput.client_payload.fusionex_gitrepositoryid != null) {
      outputBodyObject["fusionex_gitrepositoryid"] = this.EventInput.client_payload.fusionex_gitrepositoryid;
      outputReqHeaders["fusionex-gitrepositoryid"] = this.EventInput.client_payload.fusionex_gitrepositoryid;
    }
    const outputResponse = await (0, import_node_fetch.default)(
      outUrl,
      {
        method: "POST",
        headers: { ...outputReqHeaders },
        ...outputBodyJson
      }
    );
  }
  async CreateOrUpdateRepoSecret({ plainText, repo, secret_name }) {
    import_core2.default.info(`Creating or updating secret ${secret_name} in repo ${repo}`);
    const pubKeyResponse = await this.Octokit.actions.getRepoPublicKey({
      repo
    });
    import_core2.default.info(JSON.stringify(pubKeyResponse));
    const repoSecret = await this.Octokit.actions.createOrUpdateRepoSecret({
      //owner: this.EventInput.repository.owner.login,
      repo,
      secret_name,
      encrypted_value: await SealSecretValue(plainText, pubKeyResponse.data.key),
      key_id: pubKeyResponse.data.key_id
    });
    return repoSecret;
  }
  async CreateOrUpdateEnvironmentSecret({ plainText, repo, environment_name, secret_name }) {
    import_core2.default.info(`Creating or updating secret ${secret_name} in environment ${environment_name} of repo ${repo}`);
    const pubKeyResponse = await this.Octokit().rest.actions.getRepoPublicKey({
      repo
    });
    import_core2.default.info(JSON.stringify(pubKeyResponse));
    const repoSecret = await this.Octokit().rest.actions.createOrUpdateEnvironmentSecret({
      //owner: this.EventInput.repository.owner.login,
      repo,
      secret_name,
      environment_name,
      encrypted_value: await SealSecretValue(plainText, pubKeyResponse.data.key),
      key_id: pubKeyResponse.data.key_id
    });
    return repoSecret;
  }
};
async function SealSecretValue(plainText, publicKey) {
  await import_libsodium_wrappers.default.ready;
  const messageBytes = Buffer.from(plainText);
  const keyBytes = Buffer.from(publicKey, "base64");
  const encryptedBytes = import_libsodium_wrappers.default.crypto_box_seal(plainText, keyBytes);
  const encryptedString = Buffer.from(encryptedBytes).toString("base64");
  import_core2.default.info(`Encrypted bytes: ${encryptedString}`);
  return encryptedString;
}
async function GenerateSHA(input) {
  const encoder = new TextEncoder();
  const data = encoder.encode(input);
  const hashBuffer = await import_crypto4.default.subtle.digest("SHA-256", data);
  const hashArray = Array.from(new Uint8Array(hashBuffer));
  const hashHex = hashArray.map((byte) => byte.toString(16).padStart(2, "0")).join("");
  return hashHex;
}
async function EncryptData(input, pemKey) {
  return import_crypto4.default.privateEncrypt(
    {
      key: Buffer.from(pemKey),
      padding: import_crypto4.default.constants.RSA_PKCS1_PADDING
      //oaepHash: "sha256",
    },
    // We convert the data string to a buffer using `Buffer.from`
    Buffer.from(input)
  ).toString("base64");
}
async function DecryptData(encryptedData, pemKey) {
  const decryptedText = import_crypto4.default.privateDecrypt(
    {
      key: Buffer.from(pemKey),
      padding: import_crypto4.default.constants.RSA_PKCS1_OAEP_PADDING,
      oaepHash: "sha256"
    },
    // We convert the base64 string back to a buffer
    Buffer.from(encryptedData, "base64")
  ).toString("utf8");
  import_core2.default.info(`Decrypted text: ${decryptedText}`);
  return decryptedText;
}

// src/actions/ensure-entraid-app-registration/index.js
(async () => {
  import_core3.default.startGroup("ensure-entraid-app-registration");
  const args = {
    authority: import_core3.default.getInput("authority"),
    tenant_id: import_core3.default.getInput("tenant_id"),
    client_secret: import_core3.default.getInput("client_secret"),
    client_id: import_core3.default.getInput("client_id"),
    cloud: import_core3.default.getInput("cloud"),
    output_private_key: import_core3.default.getInput("output_private_key"),
    event_path: import_core3.default.getInput("event_path")
  };
  await executeAction(args);
  import_core3.default.endGroup();
})().catch((error) => {
  import_core3.default.endGroup();
  import_core3.default.setFailed(error.message);
});
async function executeAction(args) {
  import_core3.default.info("currently running ensure-entraid-app-registration");
  const fsnxClient = new FsnxApiClient(args);
  await fsnxClient.OnStep("upsert-app-registration", async () => {
    const upsertResponse = await fsnxClient.ExecuteHttpAction("appreg-patch-upsert");
    const getResponse = await fsnxClient.ExecuteHttpAction("appreg-get-by-uniquename-check");
    const output = { ...getResponse.body };
    fsnxClient.SubmitOutput(output);
  });
  await fsnxClient.OnStep("upsert-app-service-principal", async () => {
    const upsertResponse = await fsnxClient.ExecuteHttpAction("appreg-sp-upsertwithappid");
    const getResponse = await fsnxClient.ExecuteHttpAction("appreg-sp-get-by-appid-check");
    const regex = /([A-Z0-9]{8}-[A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{12})/;
    const oAuth2Action = fsnxClient.Actions["appreg-sp-get-OAuth2PermissionGrants"];
    let reqUri = oAuth2Action.payload.RequestUri.replace(regex, getResponse.body.id);
    oAuth2Action.payload.RequestUri = reqUri;
    import_core3.default.info(`RequestUri: ${oAuth2Action.payload.RequestUri}`);
    const getOAuth2Response = await fsnxClient.ExecuteHttpAction("appreg-sp-get-OAuth2PermissionGrants");
    const output = {
      ServicePrincipal: getResponse.body,
      OAuth2PermissionGrants: getOAuth2Response.body
    };
    fsnxClient.SubmitOutput(output);
  });
  await fsnxClient.OnStep("grant-oauth2-permissions", async () => {
    let i = 1;
    do {
      let action = fsnxClient.Actions[`oauth2-grant-action-${i}`];
      if (action) {
        await fsnxClient.ExecuteHttpAction(`oauth2-grant-action-${i}`);
        i++;
      } else break;
    } while (fsnxClient.Actions[`oauth2-grant-action-${i}`]);
    const getOAuth2Response = await fsnxClient.ExecuteHttpAction("appreg-sp-get-OAuth2PermissionGrants");
    const output = {
      ...getOAuth2Response.body
    };
    fsnxClient.SubmitOutput(output);
  });
  await fsnxClient.OnStep("delete-app-registration", async () => {
    const deleteResult = await fsnxClient.ExecuteHttpAction("appreg-delete-by-objectid");
    import_core3.default.info(JSON.stringify(deleteResult));
    const output = {
      ...deleteResult.body
    };
    fsnxClient.SubmitOutput(output);
  });
  await fsnxClient.OnStep("restore-app-registration", async () => {
    const countDeleted = await fsnxClient.ExecuteHttpAction("get-deleted-by-uniquename-count");
    import_core3.default.info(`Count of deleted app registrations: ${countDeleted.body}`);
    let output = null;
    if (Number(countDeleted.body) > 0) {
      const restoreResult = await fsnxClient.ExecuteHttpAction("restore-deleted-app-registration");
      output = { ...restoreResult.body };
    }
    fsnxClient.SubmitOutput(output);
  });
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  executeAction
});
/*! Bundled license information:

undici/lib/fetch/body.js:
  (*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> *)

undici/lib/websocket/frame.js:
  (*! ws. MIT License. Einar Otto Stangvik <einaros@gmail.com> *)

safe-buffer/index.js:
  (*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> *)

@azure/msal-node/dist/cache/serializer/Serializer.mjs:
@azure/msal-node/dist/cache/serializer/Deserializer.mjs:
@azure/msal-node/dist/internals.mjs:
@azure/msal-node/dist/utils/Constants.mjs:
@azure/msal-node/dist/utils/NetworkUtils.mjs:
@azure/msal-node/dist/network/HttpClient.mjs:
@azure/msal-node/dist/error/ManagedIdentityErrorCodes.mjs:
@azure/msal-node/dist/error/ManagedIdentityError.mjs:
@azure/msal-node/dist/config/ManagedIdentityId.mjs:
@azure/msal-node/dist/error/NodeAuthError.mjs:
@azure/msal-node/dist/config/Configuration.mjs:
@azure/msal-node/dist/crypto/GuidGenerator.mjs:
@azure/msal-node/dist/utils/EncodingUtils.mjs:
@azure/msal-node/dist/crypto/HashUtils.mjs:
@azure/msal-node/dist/crypto/PkceGenerator.mjs:
@azure/msal-node/dist/crypto/CryptoProvider.mjs:
@azure/msal-node/dist/cache/CacheHelpers.mjs:
@azure/msal-node/dist/cache/NodeStorage.mjs:
@azure/msal-node/dist/cache/TokenCache.mjs:
@azure/msal-node/dist/client/ClientAssertion.mjs:
@azure/msal-node/dist/packageMetadata.mjs:
@azure/msal-node/dist/client/UsernamePasswordClient.mjs:
@azure/msal-node/dist/protocol/Authorize.mjs:
@azure/msal-node/dist/client/ClientApplication.mjs:
@azure/msal-node/dist/network/LoopbackClient.mjs:
@azure/msal-node/dist/client/DeviceCodeClient.mjs:
@azure/msal-node/dist/client/PublicClientApplication.mjs:
@azure/msal-node/dist/client/ClientCredentialClient.mjs:
@azure/msal-node/dist/client/OnBehalfOfClient.mjs:
@azure/msal-node/dist/client/ConfidentialClientApplication.mjs:
@azure/msal-node/dist/utils/TimeUtils.mjs:
@azure/msal-node/dist/network/HttpClientWithRetries.mjs:
@azure/msal-node/dist/client/ManagedIdentitySources/BaseManagedIdentitySource.mjs:
@azure/msal-node/dist/retry/LinearRetryStrategy.mjs:
@azure/msal-node/dist/retry/DefaultManagedIdentityRetryPolicy.mjs:
@azure/msal-node/dist/config/ManagedIdentityRequestParameters.mjs:
@azure/msal-node/dist/client/ManagedIdentitySources/AppService.mjs:
@azure/msal-node/dist/client/ManagedIdentitySources/AzureArc.mjs:
@azure/msal-node/dist/client/ManagedIdentitySources/CloudShell.mjs:
@azure/msal-node/dist/retry/ExponentialRetryStrategy.mjs:
@azure/msal-node/dist/retry/ImdsRetryPolicy.mjs:
@azure/msal-node/dist/client/ManagedIdentitySources/Imds.mjs:
@azure/msal-node/dist/client/ManagedIdentitySources/ServiceFabric.mjs:
@azure/msal-node/dist/client/ManagedIdentitySources/MachineLearning.mjs:
@azure/msal-node/dist/client/ManagedIdentityClient.mjs:
@azure/msal-node/dist/client/ManagedIdentityApplication.mjs:
@azure/msal-node/dist/cache/distributed/DistributedCachePlugin.mjs:
@azure/msal-node/dist/index.mjs:
  (*! @azure/msal-node v3.8.0 2025-09-24 *)

@azure/msal-common/dist/utils/Constants.mjs:
@azure/msal-common/dist/error/AuthErrorCodes.mjs:
@azure/msal-common/dist/error/AuthError.mjs:
@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs:
@azure/msal-common/dist/error/ClientAuthError.mjs:
@azure/msal-common/dist/crypto/ICrypto.mjs:
@azure/msal-common/dist/logger/Logger.mjs:
@azure/msal-common/dist/packageMetadata.mjs:
@azure/msal-common/dist/authority/AuthorityOptions.mjs:
@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs:
@azure/msal-common/dist/error/ClientConfigurationError.mjs:
@azure/msal-common/dist/utils/StringUtils.mjs:
@azure/msal-common/dist/request/ScopeSet.mjs:
@azure/msal-common/dist/account/AccountInfo.mjs:
@azure/msal-common/dist/account/AuthToken.mjs:
@azure/msal-common/dist/utils/UrlUtils.mjs:
@azure/msal-common/dist/url/UrlString.mjs:
@azure/msal-common/dist/authority/AuthorityMetadata.mjs:
@azure/msal-common/dist/error/CacheErrorCodes.mjs:
@azure/msal-common/dist/error/CacheError.mjs:
@azure/msal-common/dist/cache/CacheManager.mjs:
@azure/msal-common/dist/authority/ProtocolMode.mjs:
@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs:
@azure/msal-common/dist/telemetry/performance/StubPerformanceClient.mjs:
@azure/msal-common/dist/config/ClientConfiguration.mjs:
@azure/msal-common/dist/account/CcsCredential.mjs:
@azure/msal-common/dist/account/ClientInfo.mjs:
@azure/msal-common/dist/constants/AADServerParamKeys.mjs:
@azure/msal-common/dist/request/RequestParameterBuilder.mjs:
@azure/msal-common/dist/authority/AuthorityType.mjs:
@azure/msal-common/dist/authority/OpenIdConfigResponse.mjs:
@azure/msal-common/dist/authority/CloudInstanceDiscoveryResponse.mjs:
@azure/msal-common/dist/authority/CloudInstanceDiscoveryErrorResponse.mjs:
@azure/msal-common/dist/utils/FunctionWrappers.mjs:
@azure/msal-common/dist/authority/RegionDiscovery.mjs:
@azure/msal-common/dist/utils/TimeUtils.mjs:
@azure/msal-common/dist/cache/utils/CacheHelpers.mjs:
@azure/msal-common/dist/authority/Authority.mjs:
@azure/msal-common/dist/authority/AuthorityFactory.mjs:
@azure/msal-common/dist/error/ServerError.mjs:
@azure/msal-common/dist/network/RequestThumbprint.mjs:
@azure/msal-common/dist/network/ThrottlingUtils.mjs:
@azure/msal-common/dist/error/NetworkError.mjs:
@azure/msal-common/dist/client/BaseClient.mjs:
@azure/msal-common/dist/account/TokenClaims.mjs:
@azure/msal-common/dist/cache/entities/AccountEntity.mjs:
@azure/msal-common/dist/error/InteractionRequiredAuthErrorCodes.mjs:
@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs:
@azure/msal-common/dist/utils/ProtocolUtils.mjs:
@azure/msal-common/dist/crypto/PopTokenGenerator.mjs:
@azure/msal-common/dist/cache/persistence/TokenCacheContext.mjs:
@azure/msal-common/dist/response/ResponseHandler.mjs:
@azure/msal-common/dist/utils/ClientAssertionUtils.mjs:
@azure/msal-common/dist/client/AuthorizationCodeClient.mjs:
@azure/msal-common/dist/client/RefreshTokenClient.mjs:
@azure/msal-common/dist/client/SilentFlowClient.mjs:
@azure/msal-common/dist/protocol/Authorize.mjs:
@azure/msal-common/dist/telemetry/server/ServerTelemetryManager.mjs:
@azure/msal-common/dist/index-node.mjs:
@azure/msal-common/dist/index.mjs:
  (*! @azure/msal-common v15.13.0 2025-09-24 *)
*/
